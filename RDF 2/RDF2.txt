Triple: [['__subject__ Aarhus __predicate__ leader __object__ Jacob Bundsgaard', '__subject__ Aarhus Airport __predicate__ cityServed __object__ Aarhus']]
Text: Aarhus airport serves the city of Aarhus whose leader is Jacob Bundsgaard.
Subject: ['Aarhus', 'Aarhus Airport']
Predicate: ['leader', 'cityServed']
Object: ['Jacob Bundsgaard', 'Aarhus']

Triple: [['__subject__ Aarhus __predicate__ leader __object__ Jacob Bundsgaard', '__subject__ Aarhus Airport __predicate__ cityServed __object__ Aarhus']]
Text: Aarhus airport serves the city of Aarhus where Jacob Bundsgaard is a leader.
Subject: ['Aarhus', 'Aarhus Airport']
Predicate: ['leader', 'cityServed']
Object: ['Jacob Bundsgaard', 'Aarhus']

Triple: [['__subject__ Aarhus __predicate__ leader __object__ Jacob Bundsgaard', '__subject__ Aarhus Airport __predicate__ cityServed __object__ Aarhus']]
Text: Aarhus airport serves the city of Aarhus, its leader is Jacob Bundsgaard.
Subject: ['Aarhus', 'Aarhus Airport']
Predicate: ['leader', 'cityServed']
Object: ['Jacob Bundsgaard', 'Aarhus']

Triple: [['__subject__ Aarhus Airport __predicate__ location __object__ Tirstrup', '__subject__ Tirstrup __predicate__ country __object__ Denmark']]
Text: Aarhus Airport is located in Tirstrup, Denmark.
Subject: ['Aarhus Airport', 'Tirstrup']
Predicate: ['location', 'country']
Object: ['Tirstrup', 'Denmark']

Triple: [['__subject__ Aarhus Airport __predicate__ location __object__ Tirstrup', '__subject__ Tirstrup __predicate__ country __object__ Denmark']]
Text: The location of Aarhus Airport is Tirstrup, in Denmark.
Subject: ['Aarhus Airport', 'Tirstrup']
Predicate: ['location', 'country']
Object: ['Tirstrup', 'Denmark']

Triple: [['__subject__ Aarhus Airport __predicate__ location __object__ Tirstrup', '__subject__ Tirstrup __predicate__ isPartOf __object__ Central Denmark Region']]
Text: Aarhus Airport is located in Tirstrup which is part of the Central Denmark region.
Subject: ['Aarhus Airport', 'Tirstrup']
Predicate: ['location', 'isPartOf']
Object: ['Tirstrup', 'Central Denmark Region']

Triple: [['__subject__ Aarhus Airport __predicate__ location __object__ Tirstrup', '__subject__ Tirstrup __predicate__ isPartOf __object__ Central Denmark Region']]
Text: The location of Aarhus Airport is Tirstrup, part of Central Denmark.
Subject: ['Aarhus Airport', 'Tirstrup']
Predicate: ['location', 'isPartOf']
Object: ['Tirstrup', 'Central Denmark Region']

Triple: [['__subject__ Aarhus Airport __predicate__ location __object__ Tirstrup', '__subject__ Tirstrup __predicate__ isPartOf __object__ Central Denmark Region']]
Text: Aarhus Airport is located in Tirstrup, part of the Central Denmark region.
Subject: ['Aarhus Airport', 'Tirstrup']
Predicate: ['location', 'isPartOf']
Object: ['Tirstrup', 'Central Denmark Region']

Triple: [['__subject__ Aarhus Airport __predicate__ location __object__ Tirstrup', '__subject__ Tirstrup __predicate__ isPartOf __object__ Denmark']]
Text: The location of Aarhus Airport is Tirstrup Denmark.
Subject: ['Aarhus Airport', 'Tirstrup']
Predicate: ['location', 'isPartOf']
Object: ['Tirstrup', 'Denmark']

Triple: [['__subject__ Aarhus Airport __predicate__ location __object__ Tirstrup', '__subject__ Tirstrup __predicate__ isPartOf __object__ Denmark']]
Text: Aarhus Airport is located in Tirstrup, Denmark.
Subject: ['Aarhus Airport', 'Tirstrup']
Predicate: ['location', 'isPartOf']
Object: ['Tirstrup', 'Denmark']

Triple: [['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aarhus Lufthavn A/S', '__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2702.0']]
Text: Aarhus Lufthavn A/S is the operation organisation of Aarhus Airport which has a runway length of 2702.0.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['operatingOrganisation', 'runwayLength']
Object: ['Aarhus Lufthavn A/S', '2702.0']

Triple: [['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aarhus Lufthavn A/S', '__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2702.0']]
Text: Aarhus Airport is operated by Aarhus Lufthavn A/S, and its runway length is 2702.0.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['operatingOrganisation', 'runwayLength']
Object: ['Aarhus Lufthavn A/S', '2702.0']

Triple: [['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aarhus Lufthavn A/S', '__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2702.0']]
Text: Aarhus Airport is operated by Aarhus Lufthavn A/S and has a runway length of 2702.0.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['operatingOrganisation', 'runwayLength']
Object: ['Aarhus Lufthavn A/S', '2702.0']

Triple: [['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab', '__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2702.0']]
Text: Aarhus Airport is operated by Aktieselskab and the runway length is 2702.0.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['operatingOrganisation', 'runwayLength']
Object: ['Aktieselskab', '2702.0']

Triple: [['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab', '__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2702.0']]
Text: The Aarhus Airport, with a runway length of 2702, is operated by Aktieselskab.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['operatingOrganisation', 'runwayLength']
Object: ['Aktieselskab', '2702.0']

Triple: [['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab', '__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2702.0']]
Text: The Aarhus airport, which has a runway length of 2702.0, is operated by Aktieselskab.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['operatingOrganisation', 'runwayLength']
Object: ['Aktieselskab', '2702.0']

Triple: [['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab', '__subject__ Aarhus Airport __predicate__ runwayName __object__ 10L/28R']]
Text: Aarhus Airport is operated by the Aktieselskab organisation and the runway name is 10L/28R.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['operatingOrganisation', 'runwayName']
Object: ['Aktieselskab', '10L/28R']

Triple: [['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab', '__subject__ Aarhus Airport __predicate__ runwayName __object__ 10L/28R']]
Text: Aktieselskab operates Aarhus Airport which has the runway known as 10L/28R.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['operatingOrganisation', 'runwayName']
Object: ['Aktieselskab', '10L/28R']

Triple: [['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab', '__subject__ Aarhus Airport __predicate__ runwayName __object__ 10L/28R']]
Text: Aktieselskab operates Aarhus Airport, and its runway is called 10L/28R.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['operatingOrganisation', 'runwayName']
Object: ['Aktieselskab', '10L/28R']

Triple: [['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab', '__subject__ Aarhus Airport __predicate__ runwayName __object__ 10R/28L']]
Text: Aktieselskab is the operating organisation for Aarhus Airport which has the runway name 10R/28L.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['operatingOrganisation', 'runwayName']
Object: ['Aktieselskab', '10R/28L']

Triple: [['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab', '__subject__ Aarhus Airport __predicate__ runwayName __object__ 10R/28L']]
Text: Aktieselskab is the operating organisation for Aarhus Airport, where the runway name is 10R/28L.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['operatingOrganisation', 'runwayName']
Object: ['Aktieselskab', '10R/28L']

Triple: [['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab', '__subject__ Aarhus Airport __predicate__ runwayName __object__ 10R/28L']]
Text: The runway name at Aarhus Airport, operated by Aktieselskab, is "10R/28L".
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['operatingOrganisation', 'runwayName']
Object: ['Aktieselskab', '10R/28L']

Triple: [['__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2776.0', '__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aarhus Lufthavn A/S']]
Text: Aarhus Airport is operated by Aarhus Lufthavn A/S and the length of the runway is 2776.0.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['runwayLength', 'operatingOrganisation']
Object: ['2776.0', 'Aarhus Lufthavn A/S']

Triple: [['__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2776.0', '__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aarhus Lufthavn A/S']]
Text: Aarhus Lufthavn A/S is the operation organisation of Aarhus Airport which has a runway with the length of 2776.0 metres.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['runwayLength', 'operatingOrganisation']
Object: ['2776.0', 'Aarhus Lufthavn A/S']

Triple: [['__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2776.0', '__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab']]
Text: Aarhus Airport, operated by Aktieselskab, has a runway length of 2776.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['runwayLength', 'operatingOrganisation']
Object: ['2776.0', 'Aktieselskab']

Triple: [['__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2776.0', '__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab']]
Text: Aktieselskab is the operating organisation for Aarhus Airport which has a runway length of 2776.0 metres.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['runwayLength', 'operatingOrganisation']
Object: ['2776.0', 'Aktieselskab']

Triple: [['__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2776.0', '__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab']]
Text: The Aktieselskab organisation operates Aarhus Airport, which has a runway length of 2776.0.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['runwayLength', 'operatingOrganisation']
Object: ['2776.0', 'Aktieselskab']

Triple: [['__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2777.0', '__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab']]
Text: Aarhus Airport is operated by the Aktieselskab organisation and has a runway length of 2777.0 meters.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['runwayLength', 'operatingOrganisation']
Object: ['2777.0', 'Aktieselskab']

Triple: [['__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2777.0', '__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab']]
Text: Aktieselskab is the operating organisation for Aarhus Airport which has a runway with the length of 2777.0 meters.
Subject: ['Aarhus Airport', 'Aarhus Airport']
Predicate: ['runwayLength', 'operatingOrganisation']
Object: ['2777.0', 'Aktieselskab']

Triple: [['__subject__ Abilene Regional Airport __predicate__ 1stRunwayLengthFeet __object__ 3678', '__subject__ Abilene Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 546']]
Text: 546m above sea level, the length of the 1st runway at Abilene Regional airport is 3678 feet.
Subject: ['Abilene Regional Airport', 'Abilene Regional Airport']
Predicate: ['1stRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['3678', '546']

Triple: [['__subject__ Abilene Regional Airport __predicate__ 1stRunwayLengthFeet __object__ 3678', '__subject__ Abilene Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 546']]
Text: The Abilene Regional Airport is 546 metres above sea level and the 1st runway is 3678 feet.
Subject: ['Abilene Regional Airport', 'Abilene Regional Airport']
Predicate: ['1stRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['3678', '546']

Triple: [['__subject__ Abilene Regional Airport __predicate__ 1stRunwayLengthFeet __object__ 3678', '__subject__ Abilene Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 546']]
Text: Abilene Regional Airport is 546 metres above sea level and the length of the first runway is 3678 feet.
Subject: ['Abilene Regional Airport', 'Abilene Regional Airport']
Predicate: ['1stRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['3678', '546']

Triple: [['__subject__ Abilene Regional Airport __predicate__ 1stRunwaySurfaceType __object__ Asphalt', '__subject__ Abilene Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 546']]
Text: Abilene Regional Airportis 546 metres above sea level and has a 1st runway made of asphalt.
Subject: ['Abilene Regional Airport', 'Abilene Regional Airport']
Predicate: ['1stRunwaySurfaceType', 'elevationAboveTheSeaLevel']
Object: ['Asphalt', '546']

Triple: [['__subject__ Abilene Regional Airport __predicate__ 1stRunwaySurfaceType __object__ Asphalt', '__subject__ Abilene Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 546']]
Text: The first runway at Abilene Regional Airport (elevation 546 metres above sea level) is made from asphalt.
Subject: ['Abilene Regional Airport', 'Abilene Regional Airport']
Predicate: ['1stRunwaySurfaceType', 'elevationAboveTheSeaLevel']
Object: ['Asphalt', '546']

Triple: [['__subject__ Abilene Regional Airport __predicate__ 1stRunwaySurfaceType __object__ Asphalt', '__subject__ Abilene Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 546']]
Text: Abilene Regional Airport is located 546 metres above sea level and the 1st runway is made of asphalt.
Subject: ['Abilene Regional Airport', 'Abilene Regional Airport']
Predicate: ['1stRunwaySurfaceType', 'elevationAboveTheSeaLevel']
Object: ['Asphalt', '546']

Triple: [['__subject__ Abilene Regional Airport __predicate__ 3rdRunwayLengthFeet __object__ 7202', '__subject__ Abilene Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 546']]
Text: The Abilene Regional Airport lies 546 metres above sea level and its third runway is 7,202 feet long.
Subject: ['Abilene Regional Airport', 'Abilene Regional Airport']
Predicate: ['3rdRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['7202', '546']

Triple: [['__subject__ Abilene Regional Airport __predicate__ 3rdRunwayLengthFeet __object__ 7202', '__subject__ Abilene Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 546']]
Text: The Abilene regional airport is 546 metres above sea level and has a runway length of 7202 feet.
Subject: ['Abilene Regional Airport', 'Abilene Regional Airport']
Predicate: ['3rdRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['7202', '546']

Triple: [['__subject__ Abilene Regional Airport __predicate__ 3rdRunwayLengthFeet __object__ 7202', '__subject__ Abilene Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 546']]
Text: Abilene Regional Airport is located 546 metres above sea level and the length of the 3rd runway is 7202 feet.
Subject: ['Abilene Regional Airport', 'Abilene Regional Airport']
Predicate: ['3rdRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['7202', '546']

Triple: [['__subject__ Abilene Regional Airport __predicate__ cityServed __object__ Abilene, Texas', '__subject__ Abilene, Texas __predicate__ country __object__ United States']]
Text: Abilene Regional Airport serves the city of Abilene in Texas, United States.
Subject: ['Abilene Regional Airport', 'Abilene, Texas']
Predicate: ['cityServed', 'country']
Object: ['Abilene, Texas', 'United States']

Triple: [['__subject__ Abilene Regional Airport __predicate__ cityServed __object__ Abilene, Texas', '__subject__ Abilene, Texas __predicate__ country __object__ United States']]
Text: Abilene Regional Airport serves the city of Abilene, Texas United States.
Subject: ['Abilene Regional Airport', 'Abilene, Texas']
Predicate: ['cityServed', 'country']
Object: ['Abilene, Texas', 'United States']

Triple: [['__subject__ Abilene Regional Airport __predicate__ cityServed __object__ Abilene, Texas', '__subject__ Abilene, Texas __predicate__ country __object__ United States']]
Text: Abilene in Texas (United States) is served by the Abilene regional airport.
Subject: ['Abilene Regional Airport', 'Abilene, Texas']
Predicate: ['cityServed', 'country']
Object: ['Abilene, Texas', 'United States']

Triple: [['__subject__ Abilene Regional Airport __predicate__ cityServed __object__ Abilene, Texas', '__subject__ Abilene, Texas __predicate__ isPartOf __object__ Jones County, Texas']]
Text: The Abilene regional airport serves Abilene, Jones County, Texas.
Subject: ['Abilene Regional Airport', 'Abilene, Texas']
Predicate: ['cityServed', 'isPartOf']
Object: ['Abilene, Texas', 'Jones County, Texas']

Triple: [['__subject__ Abilene Regional Airport __predicate__ cityServed __object__ Abilene, Texas', '__subject__ Abilene, Texas __predicate__ isPartOf __object__ Jones County, Texas']]
Text: Abilene Regional Airport serves the city of Abilene which is part of Jones County, Texas.
Subject: ['Abilene Regional Airport', 'Abilene, Texas']
Predicate: ['cityServed', 'isPartOf']
Object: ['Abilene, Texas', 'Jones County, Texas']

Triple: [['__subject__ Abilene Regional Airport __predicate__ cityServed __object__ Abilene, Texas', '__subject__ Abilene, Texas __predicate__ isPartOf __object__ Jones County, Texas']]
Text: Abilene Regional Airport serves the city of Abilene, Jones County, Texas.
Subject: ['Abilene Regional Airport', 'Abilene, Texas']
Predicate: ['cityServed', 'isPartOf']
Object: ['Abilene, Texas', 'Jones County, Texas']

Triple: [['__subject__ Abilene Regional Airport __predicate__ cityServed __object__ Abilene, Texas', '__subject__ Abilene, Texas __predicate__ isPartOf __object__ Taylor County, Texas']]
Text: Abilene is part of Taylor County, Texas and served by Abilene regional airport.
Subject: ['Abilene Regional Airport', 'Abilene, Texas']
Predicate: ['cityServed', 'isPartOf']
Object: ['Abilene, Texas', 'Taylor County, Texas']

Triple: [['__subject__ Abilene Regional Airport __predicate__ cityServed __object__ Abilene, Texas', '__subject__ Abilene, Texas __predicate__ isPartOf __object__ Taylor County, Texas']]
Text: Abilene, Texas is part of Taylor County, Texas and is served by the Abilene regional airport.
Subject: ['Abilene Regional Airport', 'Abilene, Texas']
Predicate: ['cityServed', 'isPartOf']
Object: ['Abilene, Texas', 'Taylor County, Texas']

Triple: [['__subject__ Abilene Regional Airport __predicate__ cityServed __object__ Abilene, Texas', '__subject__ Abilene, Texas __predicate__ isPartOf __object__ Taylor County, Texas']]
Text: Abilene, Taylor County, Texas is served by the Abilene regional airport.
Subject: ['Abilene Regional Airport', 'Abilene, Texas']
Predicate: ['cityServed', 'isPartOf']
Object: ['Abilene, Texas', 'Taylor County, Texas']

Triple: [['__subject__ Abilene Regional Airport __predicate__ locationIdentifier __object__ ABI', '__subject__ Abilene Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 546']]
Text: Abilene Regional Airport, located 546 metres above sea level, has the location identifier ABI.
Subject: ['Abilene Regional Airport', 'Abilene Regional Airport']
Predicate: ['locationIdentifier', 'elevationAboveTheSeaLevel']
Object: ['ABI', '546']

Triple: [['__subject__ Abilene Regional Airport __predicate__ locationIdentifier __object__ ABI', '__subject__ Abilene Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 546']]
Text: The Abilene Regional Airport's identifier is ABI and it is 546 metres above sea level.
Subject: ['Abilene Regional Airport', 'Abilene Regional Airport']
Predicate: ['locationIdentifier', 'elevationAboveTheSeaLevel']
Object: ['ABI', '546']

Triple: [['__subject__ Abilene Regional Airport __predicate__ locationIdentifier __object__ ABI', '__subject__ Abilene Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 546']]
Text: The location Identifier of Abilene Regional Airport, located 546 metres above sea level, is ABI.
Subject: ['Abilene Regional Airport', 'Abilene Regional Airport']
Predicate: ['locationIdentifier', 'elevationAboveTheSeaLevel']
Object: ['ABI', '546']

Triple: [['__subject__ Adirondack Regional Airport __predicate__ 1stRunwayLengthFeet __object__ 6573', '__subject__ Adirondack Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 507']]
Text: Adirondack Regional Airport is 507 metres above sea level and the 1st runway is 6573 ft in length.
Subject: ['Adirondack Regional Airport', 'Adirondack Regional Airport']
Predicate: ['1stRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['6573', '507']

Triple: [['__subject__ Adirondack Regional Airport __predicate__ 1stRunwayLengthFeet __object__ 6573', '__subject__ Adirondack Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 507']]
Text: Adirondack Regional Airport is 507 metres above sea level and its 1st runway has a length of 6573 metres.
Subject: ['Adirondack Regional Airport', 'Adirondack Regional Airport']
Predicate: ['1stRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['6573', '507']

Triple: [['__subject__ Adirondack Regional Airport __predicate__ 1stRunwayLengthFeet __object__ 6573', '__subject__ Adirondack Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 507']]
Text: Adirondack Regional Airport is 507 metres above sea level and the length of the first runway is 6,573 feet.
Subject: ['Adirondack Regional Airport', 'Adirondack Regional Airport']
Predicate: ['1stRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['6573', '507']

Triple: [['__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Lake Placid, New York', '__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Saranac Lake, New York']]
Text: Adirondack Regional Airport serves Lake Placid and the city of Saranac Lake, New York.
Subject: ['Adirondack Regional Airport', 'Adirondack Regional Airport']
Predicate: ['cityServed', 'cityServed']
Object: ['Lake Placid, New York', 'Saranac Lake, New York']

Triple: [['__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Lake Placid, New York', '__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Saranac Lake, New York']]
Text: Adirondack Regional Airport serves both Lake Placid and Saranac Lake, New York.
Subject: ['Adirondack Regional Airport', 'Adirondack Regional Airport']
Predicate: ['cityServed', 'cityServed']
Object: ['Lake Placid, New York', 'Saranac Lake, New York']

Triple: [['__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Lake Placid, New York', '__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Saranac Lake, New York']]
Text: Adirondack Regional Airport serves the cities of Lake Placid and Saranac Lake, New York.
Subject: ['Adirondack Regional Airport', 'Adirondack Regional Airport']
Predicate: ['cityServed', 'cityServed']
Object: ['Lake Placid, New York', 'Saranac Lake, New York']

Triple: [['__subject__ Adirondack Regional Airport __predicate__ location __object__ Harrietstown, New York', '__subject__ Adirondack Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 507']]
Text: Adirondack Regional Airport is 507 metres above sea level and is located in Harrietstown, New York.
Subject: ['Adirondack Regional Airport', 'Adirondack Regional Airport']
Predicate: ['location', 'elevationAboveTheSeaLevel']
Object: ['Harrietstown, New York', '507']

Triple: [['__subject__ Adirondack Regional Airport __predicate__ location __object__ Harrietstown, New York', '__subject__ Adirondack Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 507']]
Text: Adirondack Regional airport is located at Harrietstown, New York and is 507 metres above sea level.
Subject: ['Adirondack Regional Airport', 'Adirondack Regional Airport']
Predicate: ['location', 'elevationAboveTheSeaLevel']
Object: ['Harrietstown, New York', '507']

Triple: [['__subject__ Adirondack Regional Airport __predicate__ location __object__ Harrietstown, New York', '__subject__ Adirondack Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 507']]
Text: Adirondack Regional airport is 507 metres above sea level and is located at Harrietstown, New York.
Subject: ['Adirondack Regional Airport', 'Adirondack Regional Airport']
Predicate: ['location', 'elevationAboveTheSeaLevel']
Object: ['Harrietstown, New York', '507']

Triple: [['__subject__ Adirondack Regional Airport __predicate__ locationIdentifier __object__ SLK', '__subject__ Adirondack Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 507']]
Text: Adirondack Regional Airport is 507 metres above sea level and has SLK as its location identifier.
Subject: ['Adirondack Regional Airport', 'Adirondack Regional Airport']
Predicate: ['locationIdentifier', 'elevationAboveTheSeaLevel']
Object: ['SLK', '507']

Triple: [['__subject__ Adirondack Regional Airport __predicate__ locationIdentifier __object__ SLK', '__subject__ Adirondack Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 507']]
Text: SLK is the I.D. of the Adirondack Regional Airport which is 507 metres above sea level.
Subject: ['Adirondack Regional Airport', 'Adirondack Regional Airport']
Predicate: ['locationIdentifier', 'elevationAboveTheSeaLevel']
Object: ['SLK', '507']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Alcobendas', '__subject__ Alcobendas __predicate__ country __object__ Spain']]
Text: Adolfo Suárez Madrid Barajas Airport is found in Alcobendas, Spain.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Alcobendas']
Predicate: ['location', 'country']
Object: ['Alcobendas', 'Spain']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Alcobendas', '__subject__ Alcobendas __predicate__ country __object__ Spain']]
Text: Adolfo Suárez Madrid–Barajas Airport is in Alcobendas, Spain.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Alcobendas']
Predicate: ['location', 'country']
Object: ['Alcobendas', 'Spain']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Madrid', '__subject__ Madrid __predicate__ country __object__ Spain']]
Text: Adolfo Suarez Madrid-Barajas Airport is located in Madrid, in Spain.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Madrid']
Predicate: ['location', 'country']
Object: ['Madrid', 'Spain']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Madrid', '__subject__ Madrid __predicate__ country __object__ Spain']]
Text: Adolfo Suarez Madrid-Barajas Airport is located in Madrid, Spain.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Madrid']
Predicate: ['location', 'country']
Object: ['Madrid', 'Spain']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Madrid', '__subject__ Madrid __predicate__ country __object__ Spain']]
Text: The Adolfo Suárez Madrid–Barajas Airport is in Madrid, Spain.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Madrid']
Predicate: ['location', 'country']
Object: ['Madrid', 'Spain']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ elevationAboveTheSeaLevel __object__ 610.0']]
Text: Adolfo Suarez Madrid-Barajas airport is located at Paracuellos de Jarama at an elevation of 610.0 metres above sea level.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['location', 'elevationAboveTheSeaLevel']
Object: ['Paracuellos de Jarama', '610.0']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ elevationAboveTheSeaLevel __object__ 610.0']]
Text: Adolfo Suarez Madrid-Barajas airport is located at Paracuellos de Jarama and is elevated 610 metres above sea level.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['location', 'elevationAboveTheSeaLevel']
Object: ['Paracuellos de Jarama', '610.0']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 3500.0']]
Text: The Adolfo Suárez Madrid–Barajas Airport which has a runway length of 3500 is located in Paracuellos de Jarama.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['location', 'runwayLength']
Object: ['Paracuellos de Jarama', '3500.0']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 3500.0']]
Text: The Adolfo Suarez madrid-Barajas airport is located at Paracuellos de Jarama and its runway length is 3500.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['location', 'runwayLength']
Object: ['Paracuellos de Jarama', '3500.0']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 3500.0']]
Text: Adolfo Suárez Madrid–Barajas Airport can be found in Paracuellos de Jarama and has a runway length of 3500.0.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['location', 'runwayLength']
Object: ['Paracuellos de Jarama', '3500.0']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4100.0']]
Text: The Adolfo Suárez Madrid–Barajas Airport is in Paracuellos de Jarama and has a runway length of 4100.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['location', 'runwayLength']
Object: ['Paracuellos de Jarama', '4100.0']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4100.0']]
Text: The runway length of Adolfo Suarez Madrid-Barajas airport, Paracuellos de Jarama, is 4100.0.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['location', 'runwayLength']
Object: ['Paracuellos de Jarama', '4100.0']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4100.0']]
Text: The runway length of Adolfo Suárez Madrid–Barajas Airport located at Paracuellos de Jarama, is 4,100.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['location', 'runwayLength']
Object: ['Paracuellos de Jarama', '4100.0']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4349.0']]
Text: Located in Paracuellos de Jarama, theAdolfo Suárez Madrid–Barajas Airport has a runway length of 4349.0.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['location', 'runwayLength']
Object: ['Paracuellos de Jarama', '4349.0']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4349.0']]
Text: The runway length of Adolfo Suárez Madrid–Barajas Airport, in Paracuellos de Jarama, is 4,349.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['location', 'runwayLength']
Object: ['Paracuellos de Jarama', '4349.0']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4349.0']]
Text: The Adolfo Suárez Madrid–Barajas Airport is in Paracuellos de Jarama and has a runway length of 4349.0.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['location', 'runwayLength']
Object: ['Paracuellos de Jarama', '4349.0']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama', '__subject__ Paracuellos de Jarama __predicate__ country __object__ Spain']]
Text: Adolfo Suárez Madrid–Barajas Airport can be found in Paracuellos de Jarama Spain.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Paracuellos de Jarama']
Predicate: ['location', 'country']
Object: ['Paracuellos de Jarama', 'Spain']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama', '__subject__ Paracuellos de Jarama __predicate__ country __object__ Spain']]
Text: The Adolfo Suárez Madrid–Barajas Airport is in Paracuellos de Jarama, Spain.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Paracuellos de Jarama']
Predicate: ['location', 'country']
Object: ['Paracuellos de Jarama', 'Spain']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama', '__subject__ Paracuellos de Jarama __predicate__ isPartOf __object__ Community of Madrid']]
Text: Adolfo Suarez Madrid-Barajas Airport is in Paracuellos de Jarama, Madrid.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Paracuellos de Jarama']
Predicate: ['location', 'isPartOf']
Object: ['Paracuellos de Jarama', 'Community of Madrid']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama', '__subject__ Paracuellos de Jarama __predicate__ isPartOf __object__ Community of Madrid']]
Text: The Adolfo Suarez Madrid-Barajas airport is located in Paracuellos de Jarama in Madrid.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Paracuellos de Jarama']
Predicate: ['location', 'isPartOf']
Object: ['Paracuellos de Jarama', 'Community of Madrid']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ San Sebastián de los Reyes', '__subject__ San Sebastián de los Reyes __predicate__ country __object__ Spain']]
Text: Adolfo Suarez Madrid-Barajas airport is located at San Sebastian de los Reyes, in Spain.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'San Sebastián de los Reyes']
Predicate: ['location', 'country']
Object: ['San Sebastián de los Reyes', 'Spain']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ San Sebastián de los Reyes', '__subject__ San Sebastián de los Reyes __predicate__ country __object__ Spain']]
Text: Adolfo Suárez Madrid–Barajas Airport is found in San Sebastián de los Reyes, Spain.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'San Sebastián de los Reyes']
Predicate: ['location', 'country']
Object: ['San Sebastián de los Reyes', 'Spain']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ San Sebastián de los Reyes', '__subject__ San Sebastián de los Reyes __predicate__ country __object__ Spain']]
Text: The Adolfo Suárez Madrid–Barajas Airport is located in San Sebastián de los Reyes, Spain.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'San Sebastián de los Reyes']
Predicate: ['location', 'country']
Object: ['San Sebastián de los Reyes', 'Spain']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 3500.0', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Madrid']]
Text: In Madrid, the Adolfo Suárez Madrid–Barajas Airport has a runway with the length of 3,500 metres.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['runwayLength', 'location']
Object: ['3500.0', 'Madrid']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 3500.0', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Madrid']]
Text: The Adolfo Suarez Madrid-Barajas airport is located in Madrid and has a runway length of 3500.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['runwayLength', 'location']
Object: ['3500.0', 'Madrid']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 3500.0', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Madrid']]
Text: The runway length at Adolfo Suarez Madrid-Barajas airport in Madrid is 3500.0.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['runwayLength', 'location']
Object: ['3500.0', 'Madrid']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4349.0', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Madrid, Paracuellos de Jarama, San Sebastián de los Reyes and Alcobendas']]
Text: Adolfo Suárez Madrid–Barajas Airport (located at Madrid, Paracuellos de Jarama, San Sebastián de los Reyes and Alcobendas) has a runway that is 4349 metres long.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['runwayLength', 'location']
Object: ['4349.0', 'Madrid, Paracuellos de Jarama, San Sebastián de los Reyes and Alcobendas']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4349.0', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Madrid, Paracuellos de Jarama, San Sebastián de los Reyes and Alcobendas']]
Text: Adolfo Suarez Madrid-Barajas airport is located at Madrid, Paracuellos de Jarama, San Sebastian de los Reyes and Alcobendas. It has a runway length of 4349.0.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['runwayLength', 'location']
Object: ['4349.0', 'Madrid, Paracuellos de Jarama, San Sebastián de los Reyes and Alcobendas']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4349.0', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Madrid, Paracuellos de Jarama, San Sebastián de los Reyes and Alcobendas']]
Text: Found in Madrid, Paracuellos de Jarama, San Sebastián de los Reyes and Alcobendas, Adolfo Suárez Madrid–Barajas Airport, has a runway that is 4349 metres long.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['runwayLength', 'location']
Object: ['4349.0', 'Madrid, Paracuellos de Jarama, San Sebastián de los Reyes and Alcobendas']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4349.0', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ San Sebastián de los Reyes']]
Text: The runway length of Adolfo Suárez Madrid–Barajas Airport which is located at San Sebastian de los Reyes, is 4,349.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['runwayLength', 'location']
Object: ['4349.0', 'San Sebastián de los Reyes']

Triple: [['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4349.0', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ San Sebastián de los Reyes']]
Text: Adolfo Suarez Madrid-Barajas Airport is located in San Sebastian de los Reyes and its runway is 4349 metres long.
Subject: ['Adolfo Suárez Madrid–Barajas Airport', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['runwayLength', 'location']
Object: ['4349.0', 'San Sebastián de los Reyes']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ cityServed __object__ Curitiba', '__subject__ Curitiba __predicate__ isPartOf __object__ Paraná (state)']]
Text: Afonso Pena International Airport serves Curitiba, which is part of Parana state.
Subject: ['Afonso Pena International Airport', 'Curitiba']
Predicate: ['cityServed', 'isPartOf']
Object: ['Curitiba', 'Paraná (state)']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ cityServed __object__ Curitiba', '__subject__ Curitiba __predicate__ isPartOf __object__ Paraná (state)']]
Text: Afonso Pena International Airport serves Curitiba which is part of the State of Paraná.
Subject: ['Afonso Pena International Airport', 'Curitiba']
Predicate: ['cityServed', 'isPartOf']
Object: ['Curitiba', 'Paraná (state)']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ cityServed __object__ Curitiba', '__subject__ Curitiba __predicate__ isPartOf __object__ Paraná (state)']]
Text: Afonso Pena International Airport serves the city of Curitiba which is part of the state of Parana.
Subject: ['Afonso Pena International Airport', 'Curitiba']
Predicate: ['cityServed', 'isPartOf']
Object: ['Curitiba', 'Paraná (state)']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ cityServed __object__ Curitiba', '__subject__ Curitiba __predicate__ isPartOf __object__ South Region, Brazil']]
Text: Afonso Pena International Airport serves the city of Curitiba which is part of the South Region, Brazil.
Subject: ['Afonso Pena International Airport', 'Curitiba']
Predicate: ['cityServed', 'isPartOf']
Object: ['Curitiba', 'South Region, Brazil']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ cityServed __object__ Curitiba', '__subject__ Curitiba __predicate__ isPartOf __object__ South Region, Brazil']]
Text: Afonso Pena International Airport serves the city of Curitiba, part of the South Region in Brazil.
Subject: ['Afonso Pena International Airport', 'Curitiba']
Predicate: ['cityServed', 'isPartOf']
Object: ['Curitiba', 'South Region, Brazil']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ cityServed __object__ Curitiba', '__subject__ Curitiba __predicate__ isPartOf __object__ South Region, Brazil']]
Text: Afonso Pena International Airport serves Curitiba, South Region, Brazil.
Subject: ['Afonso Pena International Airport', 'Curitiba']
Predicate: ['cityServed', 'isPartOf']
Object: ['Curitiba', 'South Region, Brazil']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ elevationAboveTheSeaLevelInFeet __object__ 2988', '__subject__ Afonso Pena International Airport __predicate__ location __object__ São José dos Pinhais']]
Text: Afonso Pena International Airport in São José dos Pinhais, is 2988 feet above sea level.
Subject: ['Afonso Pena International Airport', 'Afonso Pena International Airport']
Predicate: ['elevationAboveTheSeaLevelInFeet', 'location']
Object: ['2988', 'São José dos Pinhais']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ elevationAboveTheSeaLevelInFeet __object__ 2988', '__subject__ Afonso Pena International Airport __predicate__ location __object__ São José dos Pinhais']]
Text: Afonso Pena International Airport, located in Sao Jose dos Pinhais, is elevated 2988 feet above sea level.
Subject: ['Afonso Pena International Airport', 'Afonso Pena International Airport']
Predicate: ['elevationAboveTheSeaLevelInFeet', 'location']
Object: ['2988', 'São José dos Pinhais']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ location __object__ São José dos Pinhais', '__subject__ Afonso Pena International Airport __predicate__ runwayLength __object__ 1800.0']]
Text: Afonso Pena International Airport, with a runway length of 1800.00, is located in Sao Jose dos Pinhais.
Subject: ['Afonso Pena International Airport', 'Afonso Pena International Airport']
Predicate: ['location', 'runwayLength']
Object: ['São José dos Pinhais', '1800.0']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ operatingOrganisation __object__ Infraero', '__subject__ Afonso Pena International Airport __predicate__ location __object__ São José dos Pinhais']]
Text: Afonso Pena International Airport, operated by Infraero, is located in Sao Jose dos Pinhais.
Subject: ['Afonso Pena International Airport', 'Afonso Pena International Airport']
Predicate: ['operatingOrganisation', 'location']
Object: ['Infraero', 'São José dos Pinhais']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ operatingOrganisation __object__ Infraero', '__subject__ Afonso Pena International Airport __predicate__ location __object__ São José dos Pinhais']]
Text: Afonso Pena International Airport in Sao Jose dos Pinhais is operated by Infraero.
Subject: ['Afonso Pena International Airport', 'Afonso Pena International Airport']
Predicate: ['operatingOrganisation', 'location']
Object: ['Infraero', 'São José dos Pinhais']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ operatingOrganisation __object__ Infraero', '__subject__ Afonso Pena International Airport __predicate__ location __object__ São José dos Pinhais']]
Text: Afonso Pena International Airport is located in Sao Jose dos Pinhais and Infraero is the operating organisation.
Subject: ['Afonso Pena International Airport', 'Afonso Pena International Airport']
Predicate: ['operatingOrganisation', 'location']
Object: ['Infraero', 'São José dos Pinhais']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ operatingOrganisation __object__ Infraero', '__subject__ Infraero __predicate__ location __object__ Brazil']]
Text: Infraero in Brazil, operates Afonso Pena International Airport.
Subject: ['Afonso Pena International Airport', 'Infraero']
Predicate: ['operatingOrganisation', 'location']
Object: ['Infraero', 'Brazil']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ operatingOrganisation __object__ Infraero', '__subject__ Infraero __predicate__ location __object__ Brazil']]
Text: Afonso Pena International Airport is operated by Infraero who are located in Brazil.
Subject: ['Afonso Pena International Airport', 'Infraero']
Predicate: ['operatingOrganisation', 'location']
Object: ['Infraero', 'Brazil']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ runwayLength __object__ 2215.0', '__subject__ Afonso Pena International Airport __predicate__ location __object__ São José dos Pinhais']]
Text: Located at Sao Jose dos Pinhais, Afonso Pena International Airport has a runway length of 2215.0 metres.
Subject: ['Afonso Pena International Airport', 'Afonso Pena International Airport']
Predicate: ['runwayLength', 'location']
Object: ['2215.0', 'São José dos Pinhais']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ runwayLength __object__ 2215.0', '__subject__ Afonso Pena International Airport __predicate__ location __object__ São José dos Pinhais']]
Text: 2215.0 is the length of the runway at Afonso Pena International Airport, São José dos Pinhais.
Subject: ['Afonso Pena International Airport', 'Afonso Pena International Airport']
Predicate: ['runwayLength', 'location']
Object: ['2215.0', 'São José dos Pinhais']

Triple: [['__subject__ Afonso Pena International Airport __predicate__ runwayLength __object__ 2215.0', '__subject__ Afonso Pena International Airport __predicate__ location __object__ São José dos Pinhais']]
Text: The runway length at Afonso Pena International Airport, located in São José dos Pinhais, is 2215.0.
Subject: ['Afonso Pena International Airport', 'Afonso Pena International Airport']
Predicate: ['runwayLength', 'location']
Object: ['2215.0', 'São José dos Pinhais']

Triple: [['__subject__ Agra Airport __predicate__ iataLocationIdentifier __object__ AGR', '__subject__ Agra Airport __predicate__ location __object__ Agra']]
Text: AGR is the ATA Location Identifier for Agra Airport, Agra.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['iataLocationIdentifier', 'location']
Object: ['AGR', 'Agra']

Triple: [['__subject__ Agra Airport __predicate__ iataLocationIdentifier __object__ AGR', '__subject__ Agra Airport __predicate__ location __object__ Agra']]
Text: AGR is the ATA Location Identifier for Agra Airport which is located in Agra.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['iataLocationIdentifier', 'location']
Object: ['AGR', 'Agra']

Triple: [['__subject__ Agra Airport __predicate__ iataLocationIdentifier __object__ AGR', '__subject__ Agra Airport __predicate__ location __object__ Agra']]
Text: AGR is the IATA I.D. of the Agra Airport which is located in Agra.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['iataLocationIdentifier', 'location']
Object: ['AGR', 'Agra']

Triple: [['__subject__ Agra Airport __predicate__ icaoLocationIdentifier __object__ VIAG', '__subject__ Agra Airport __predicate__ location __object__ Agra']]
Text: Agra airport is located in Agra and its ICAO location identifier is VIAG.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['icaoLocationIdentifier', 'location']
Object: ['VIAG', 'Agra']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ India', '__subject__ Agra Airport __predicate__ iataLocationIdentifier __object__ AGR']]
Text: Agra airport is in India and has the ATA location identifier AGR.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['location', 'iataLocationIdentifier']
Object: ['India', 'AGR']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ India', '__subject__ Agra Airport __predicate__ iataLocationIdentifier __object__ AGR']]
Text: Agra Airport, India, has an IATA Location Identifier of AGR.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['location', 'iataLocationIdentifier']
Object: ['India', 'AGR']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ India', '__subject__ Agra Airport __predicate__ icaoLocationIdentifier __object__ VIAG']]
Text: Agra airport is located in India and the ICAO location identifier is VIAG.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['location', 'icaoLocationIdentifier']
Object: ['India', 'VIAG']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ India', '__subject__ Agra Airport __predicate__ icaoLocationIdentifier __object__ VIAG']]
Text: The location identifier for Agra Airport, India is VIAG.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['location', 'icaoLocationIdentifier']
Object: ['India', 'VIAG']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ India', '__subject__ Agra Airport __predicate__ icaoLocationIdentifier __object__ VIAG']]
Text: The ICAO Location Identifier of Agra Airport which is in India is VIAG.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['location', 'icaoLocationIdentifier']
Object: ['India', 'VIAG']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ India', '__subject__ India __predicate__ leader __object__ Narendra Modi']]
Text: Agra Airport is located in India, where the leader is Narendra Modi.
Subject: ['Agra Airport', 'India']
Predicate: ['location', 'leader']
Object: ['India', 'Narendra Modi']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ India', '__subject__ India __predicate__ leader __object__ Narendra Modi']]
Text: Agra Airport is in India where the leader is Narendra Modi.
Subject: ['Agra Airport', 'India']
Predicate: ['location', 'leader']
Object: ['India', 'Narendra Modi']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ India', '__subject__ India __predicate__ leader __object__ Narendra Modi']]
Text: The leader of India is Narendra Modi and Agra airport is located in that country.
Subject: ['Agra Airport', 'India']
Predicate: ['location', 'leader']
Object: ['India', 'Narendra Modi']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ Uttar Pradesh', '__subject__ Agra Airport __predicate__ iataLocationIdentifier __object__ AGR']]
Text: Agra Airport is located in Uttar Pradesh and has the IATA Location Identifier of AGR.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['location', 'iataLocationIdentifier']
Object: ['Uttar Pradesh', 'AGR']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ Uttar Pradesh', '__subject__ Agra Airport __predicate__ iataLocationIdentifier __object__ AGR']]
Text: AGR is the IATA location identifier for Agra Airport which is located in Uttar Pradesh.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['location', 'iataLocationIdentifier']
Object: ['Uttar Pradesh', 'AGR']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ Uttar Pradesh', '__subject__ Agra Airport __predicate__ iataLocationIdentifier __object__ AGR']]
Text: Located in Uttar Pradesh, Agra Airport has the ATA location identifier AGR.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['location', 'iataLocationIdentifier']
Object: ['Uttar Pradesh', 'AGR']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ Uttar Pradesh', '__subject__ Agra Airport __predicate__ icaoLocationIdentifier __object__ VIAG']]
Text: Agra Airport is in Uttar Pradesh with the ICAO Location Identifier of VIAG.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['location', 'icaoLocationIdentifier']
Object: ['Uttar Pradesh', 'VIAG']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ Uttar Pradesh', '__subject__ Agra Airport __predicate__ icaoLocationIdentifier __object__ VIAG']]
Text: Agra Airport is located in Uttar Pradesh and its ICAO identifier is VIAG.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['location', 'icaoLocationIdentifier']
Object: ['Uttar Pradesh', 'VIAG']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ Uttar Pradesh', '__subject__ Uttar Pradesh __predicate__ isPartOf __object__ Bundelkhand']]
Text: Agra Airport is in Uttar Pradesh which is part of Bundelkhand.
Subject: ['Agra Airport', 'Uttar Pradesh']
Predicate: ['location', 'isPartOf']
Object: ['Uttar Pradesh', 'Bundelkhand']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ Uttar Pradesh', '__subject__ Uttar Pradesh __predicate__ isPartOf __object__ Bundelkhand']]
Text: Agra Airport is located in Uttar Pradesh which is part of Bundelkhand.
Subject: ['Agra Airport', 'Uttar Pradesh']
Predicate: ['location', 'isPartOf']
Object: ['Uttar Pradesh', 'Bundelkhand']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ Uttar Pradesh', '__subject__ Uttar Pradesh __predicate__ leader __object__ Ram Naik']]
Text: Agra Airport is located in Uttar Pradesh where Ram Naik is leader.
Subject: ['Agra Airport', 'Uttar Pradesh']
Predicate: ['location', 'leader']
Object: ['Uttar Pradesh', 'Ram Naik']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ Uttar Pradesh', '__subject__ Uttar Pradesh __predicate__ leader __object__ Ram Naik']]
Text: Agra Airport is in Uttar Pradesh where Ram Naik is the leader.
Subject: ['Agra Airport', 'Uttar Pradesh']
Predicate: ['location', 'leader']
Object: ['Uttar Pradesh', 'Ram Naik']

Triple: [['__subject__ Agra Airport __predicate__ location __object__ Uttar Pradesh', '__subject__ Uttar Pradesh __predicate__ leader __object__ Ram Naik']]
Text: Agra Airport is in Uttar Pradesh, the leader there is Ram Naik.
Subject: ['Agra Airport', 'Uttar Pradesh']
Predicate: ['location', 'leader']
Object: ['Uttar Pradesh', 'Ram Naik']

Triple: [['__subject__ Agra Airport __predicate__ operatingOrganisation __object__ Indian Air Force', '__subject__ Agra Airport __predicate__ location __object__ Agra']]
Text: Agra Airport in Agra is operated by the Indian Air Force.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['operatingOrganisation', 'location']
Object: ['Indian Air Force', 'Agra']

Triple: [['__subject__ Agra Airport __predicate__ operatingOrganisation __object__ Indian Air Force', '__subject__ Agra Airport __predicate__ location __object__ Agra']]
Text: Agra Airport is operated by the Indian Air Force and is located in Agra.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['operatingOrganisation', 'location']
Object: ['Indian Air Force', 'Agra']

Triple: [['__subject__ Agra Airport __predicate__ operatingOrganisation __object__ Indian Air Force', '__subject__ Agra Airport __predicate__ location __object__ Agra']]
Text: The operating organization for Agra Airport located in Agra, is the Indian Air Force.
Subject: ['Agra Airport', 'Agra Airport']
Predicate: ['operatingOrganisation', 'location']
Object: ['Indian Air Force', 'Agra']

Triple: [['__subject__ Agra Airport __predicate__ operatingOrganisation __object__ Indian Air Force', '__subject__ Indian Air Force __predicate__ transportAircraft __object__ Boeing C-17 Globemaster III']]
Text: The Indian Air Force has a transport aircraft called the Boeing C-17 Globemaster III and it also operates Agra Airport.
Subject: ['Agra Airport', 'Indian Air Force']
Predicate: ['operatingOrganisation', 'transportAircraft']
Object: ['Indian Air Force', 'Boeing C-17 Globemaster III']

Triple: [['__subject__ Agra Airport __predicate__ operatingOrganisation __object__ Indian Air Force', '__subject__ Indian Air Force __predicate__ transportAircraft __object__ Boeing C-17 Globemaster III']]
Text: The Boeing C-17 Globemaster III is a transport aircraft in the Indian Air Force, the operating organisation for Agra Airport.
Subject: ['Agra Airport', 'Indian Air Force']
Predicate: ['operatingOrganisation', 'transportAircraft']
Object: ['Indian Air Force', 'Boeing C-17 Globemaster III']

Triple: [['__subject__ Al-Taqaddum Air Base __predicate__ cityServed __object__ Fallujah', '__subject__ Al-Taqaddum Air Base __predicate__ elevationAboveTheSeaLevel __object__ 84.0']]
Text: The Al Taqaddum air base is 84 metres above sea level and serves the city of Fallujah.
Subject: ['Al-Taqaddum Air Base', 'Al-Taqaddum Air Base']
Predicate: ['cityServed', 'elevationAboveTheSeaLevel']
Object: ['Fallujah', '84.0']

Triple: [['__subject__ Al-Taqaddum Air Base __predicate__ cityServed __object__ Fallujah', '__subject__ Al-Taqaddum Air Base __predicate__ elevationAboveTheSeaLevel __object__ 84.0']]
Text: Al-Taqaddum Air Base is 84 metres above sea level and serves the city of Fallujah.
Subject: ['Al-Taqaddum Air Base', 'Al-Taqaddum Air Base']
Predicate: ['cityServed', 'elevationAboveTheSeaLevel']
Object: ['Fallujah', '84.0']

Triple: [['__subject__ Al-Taqaddum Air Base __predicate__ cityServed __object__ Fallujah', '__subject__ Fallujah __predicate__ country __object__ Iraq']]
Text: Al-Taqaddum Air Base serves the city of Fallujah which is in Iraq.
Subject: ['Al-Taqaddum Air Base', 'Fallujah']
Predicate: ['cityServed', 'country']
Object: ['Fallujah', 'Iraq']

Triple: [['__subject__ Al-Taqaddum Air Base __predicate__ cityServed __object__ Fallujah', '__subject__ Fallujah __predicate__ country __object__ Iraq']]
Text: The Al Taqaddum Air Base serves the city of Fallujah, Iraq.
Subject: ['Al-Taqaddum Air Base', 'Fallujah']
Predicate: ['cityServed', 'country']
Object: ['Fallujah', 'Iraq']

Triple: [['__subject__ Al-Taqaddum Air Base __predicate__ cityServed __object__ Fallujah', '__subject__ Fallujah __predicate__ country __object__ Iraq']]
Text: The Al Taqaddum Air Base serves the city of Fallujah which is in country of Iraq.
Subject: ['Al-Taqaddum Air Base', 'Fallujah']
Predicate: ['cityServed', 'country']
Object: ['Fallujah', 'Iraq']

Triple: [['__subject__ Al-Taqaddum Air Base __predicate__ runwayLength __object__ 3684.0', '__subject__ Al-Taqaddum Air Base __predicate__ cityServed __object__ Fallujah']]
Text: The Al Taqaddum air base serves Fallujah. The runway length is 3684.
Subject: ['Al-Taqaddum Air Base', 'Al-Taqaddum Air Base']
Predicate: ['runwayLength', 'cityServed']
Object: ['3684.0', 'Fallujah']

Triple: [['__subject__ Al-Taqaddum Air Base __predicate__ runwayLength __object__ 3684.0', '__subject__ Al-Taqaddum Air Base __predicate__ cityServed __object__ Fallujah']]
Text: The length of the runway at Al-Taqaddum Air Base, which serves the city of Fallujah, is 3684.0.
Subject: ['Al-Taqaddum Air Base', 'Al-Taqaddum Air Base']
Predicate: ['runwayLength', 'cityServed']
Object: ['3684.0', 'Fallujah']

Triple: [['__subject__ Al-Taqaddum Air Base __predicate__ runwayLength __object__ 4019.0', '__subject__ Al-Taqaddum Air Base __predicate__ cityServed __object__ Fallujah']]
Text: The runway length of Al-Taqaddum air base is 4019.0 and it serves the city of Fallujah.
Subject: ['Al-Taqaddum Air Base', 'Al-Taqaddum Air Base']
Predicate: ['runwayLength', 'cityServed']
Object: ['4019.0', 'Fallujah']

Triple: [['__subject__ Al Asad Airbase __predicate__ location __object__ Al Anbar Province, Iraq', '__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3078.48']]
Text: Al Asad Airbase is located in Al Anbar Province, Iraq, its runway is 3078.48 long.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['location', 'runwayLength']
Object: ['Al Anbar Province, Iraq', '3078.48']

Triple: [['__subject__ Al Asad Airbase __predicate__ location __object__ Al Anbar Province, Iraq', '__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3078.48']]
Text: Located at Al Anbar Province, in Iraq, Al Asad Airbase has a runway with the length of 3078.48 metres.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['location', 'runwayLength']
Object: ['Al Anbar Province, Iraq', '3078.48']

Triple: [['__subject__ Al Asad Airbase __predicate__ location __object__ Al Anbar Province, Iraq', '__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3078.48']]
Text: Al Asad airbase is located at Al Anbar Province, Iraq and has a runway length of 3078.48.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['location', 'runwayLength']
Object: ['Al Anbar Province, Iraq', '3078.48']

Triple: [['__subject__ Al Asad Airbase __predicate__ location __object__ Iraq', '__subject__ Al Asad Airbase __predicate__ elevationAboveTheSeaLevelInFeet __object__ 618']]
Text: Al Asad Airbase in Iraq is 618 feet above sea level.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['location', 'elevationAboveTheSeaLevelInFeet']
Object: ['Iraq', '618']

Triple: [['__subject__ Al Asad Airbase __predicate__ location __object__ Iraq', '__subject__ Al Asad Airbase __predicate__ elevationAboveTheSeaLevelInFeet __object__ 618']]
Text: Al Asad Airbase is 618 ft above sea level and is located in Iraq.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['location', 'elevationAboveTheSeaLevelInFeet']
Object: ['Iraq', '618']

Triple: [['__subject__ Al Asad Airbase __predicate__ location __object__ Iraq', '__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3078.48']]
Text: The runway length of Al Asad Airbase, Iraq, is 3078.48.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['location', 'runwayLength']
Object: ['Iraq', '3078.48']

Triple: [['__subject__ Al Asad Airbase __predicate__ location __object__ Iraq', '__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3078.48']]
Text: Al Asad Airbase is found in Iraq and has a length of 3078.48m.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['location', 'runwayLength']
Object: ['Iraq', '3078.48']

Triple: [['__subject__ Al Asad Airbase __predicate__ location __object__ Iraq', '__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3078.48']]
Text: The runway length of Al Asad Airbase, located in Iraq, is 3078.48.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['location', 'runwayLength']
Object: ['Iraq', '3078.48']

Triple: [['__subject__ Al Asad Airbase __predicate__ location __object__ Iraq', '__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3090.0']]
Text: Al Asad Airbase in Iraq has a runway length of 3090.0.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['location', 'runwayLength']
Object: ['Iraq', '3090.0']

Triple: [['__subject__ Al Asad Airbase __predicate__ location __object__ Iraq', '__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3990.0']]
Text: Al Asad Airbase, in Iraq, Has a runway length of 3990.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['location', 'runwayLength']
Object: ['Iraq', '3990.0']

Triple: [['__subject__ Al Asad Airbase __predicate__ location __object__ Iraq', '__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3990.0']]
Text: Al Asad Airbase is found in Iraq and has a runway length of 3,990.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['location', 'runwayLength']
Object: ['Iraq', '3990.0']

Triple: [['__subject__ Al Asad Airbase __predicate__ location __object__ Iraq', '__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3990.0']]
Text: In Iraq, the Al Asad Airbase has a runway length of 3,990 metres.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['location', 'runwayLength']
Object: ['Iraq', '3990.0']

Triple: [['__subject__ Al Asad Airbase __predicate__ location __object__ Iraq', '__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3992.88']]
Text: Al Asad Airbase is in Iraq and the length of the runway is 3992.88.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['location', 'runwayLength']
Object: ['Iraq', '3992.88']

Triple: [['__subject__ Al Asad Airbase __predicate__ location __object__ Iraq', '__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3992.88']]
Text: The runway length of Al Asad Airbase, Iraq, is 3,992.88.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['location', 'runwayLength']
Object: ['Iraq', '3992.88']

Triple: [['__subject__ Al Asad Airbase __predicate__ operatingOrganisation __object__ United States Air Force', '__subject__ United States Air Force __predicate__ aircraftFighter __object__ General Dynamics F-16 Fighting Falcon']]
Text: The United States Air Force, who operated Al Asad airbase, deploy the aircraft fighter known as General Dynamics F-16 Fighting Falcon.
Subject: ['Al Asad Airbase', 'United States Air Force']
Predicate: ['operatingOrganisation', 'aircraftFighter']
Object: ['United States Air Force', 'General Dynamics F-16 Fighting Falcon']

Triple: [['__subject__ Al Asad Airbase __predicate__ operatingOrganisation __object__ United States Air Force', '__subject__ United States Air Force __predicate__ aircraftFighter __object__ General Dynamics F-16 Fighting Falcon']]
Text: Al Asad Airbase is operated by the United States Air Force which also uses the General Dynamics F-16 Fighting Falcon aircraft.
Subject: ['Al Asad Airbase', 'United States Air Force']
Predicate: ['operatingOrganisation', 'aircraftFighter']
Object: ['United States Air Force', 'General Dynamics F-16 Fighting Falcon']

Triple: [['__subject__ Al Asad Airbase __predicate__ operatingOrganisation __object__ United States Air Force', '__subject__ United States Air Force __predicate__ aircraftFighter __object__ General Dynamics F-16 Fighting Falcon']]
Text: The General Dynamics F-16 Fighting Falcon is an aircraft fighter in the United States Air Force who are the operating organisation for Al Asad airbase.
Subject: ['Al Asad Airbase', 'United States Air Force']
Predicate: ['operatingOrganisation', 'aircraftFighter']
Object: ['United States Air Force', 'General Dynamics F-16 Fighting Falcon']

Triple: [['__subject__ Al Asad Airbase __predicate__ operatingOrganisation __object__ United States Air Force', '__subject__ United States Air Force __predicate__ aircraftFighter __object__ McDonnell Douglas F-15 Eagle']]
Text: The McDonnell Douglas F-15 Eagle is an aircraft fighter in the U.S. Air Force who are the operating organisation for Al Asad airbase.
Subject: ['Al Asad Airbase', 'United States Air Force']
Predicate: ['operatingOrganisation', 'aircraftFighter']
Object: ['United States Air Force', 'McDonnell Douglas F-15 Eagle']

Triple: [['__subject__ Al Asad Airbase __predicate__ operatingOrganisation __object__ United States Air Force', '__subject__ United States Air Force __predicate__ aircraftFighter __object__ McDonnell Douglas F-15 Eagle']]
Text: Al Asad Airbase, operated by the United States Air Force, uses The McDonnell Douglas F-15 Eagle aircraft carrier.
Subject: ['Al Asad Airbase', 'United States Air Force']
Predicate: ['operatingOrganisation', 'aircraftFighter']
Object: ['United States Air Force', 'McDonnell Douglas F-15 Eagle']

Triple: [['__subject__ Al Asad Airbase __predicate__ operatingOrganisation __object__ United States Air Force', '__subject__ United States Air Force __predicate__ aircraftFighter __object__ McDonnell Douglas F-15 Eagle']]
Text: Al Asad Airbase uses the McDonnell Douglas F-15 Eagle and is operated by The U.S. Air Force.
Subject: ['Al Asad Airbase', 'United States Air Force']
Predicate: ['operatingOrganisation', 'aircraftFighter']
Object: ['United States Air Force', 'McDonnell Douglas F-15 Eagle']

Triple: [['__subject__ Al Asad Airbase __predicate__ operatingOrganisation __object__ United States Air Force', '__subject__ United States Air Force __predicate__ attackAircraft __object__ Lockheed AC-130']]
Text: Al Asad Airbase is operated by the United States Air Force whose aircraft carriers transport the Lockheed AC-130.
Subject: ['Al Asad Airbase', 'United States Air Force']
Predicate: ['operatingOrganisation', 'attackAircraft']
Object: ['United States Air Force', 'Lockheed AC-130']

Triple: [['__subject__ Al Asad Airbase __predicate__ operatingOrganisation __object__ United States Air Force', '__subject__ United States Air Force __predicate__ battle __object__ 1986 United States bombing of Libya']]
Text: The United States Air Force was fighting in the United States bombing of Libya in 1986 and also operates the Al Asad Airbase.
Subject: ['Al Asad Airbase', 'United States Air Force']
Predicate: ['operatingOrganisation', 'battle']
Object: ['United States Air Force', '1986 United States bombing of Libya']

Triple: [['__subject__ Al Asad Airbase __predicate__ operatingOrganisation __object__ United States Air Force', '__subject__ United States Air Force __predicate__ battle __object__ 1986 United States bombing of Libya']]
Text: Al Asad Airbase is operated by the United States Air Force, which carried out the US bombing of Libya.
Subject: ['Al Asad Airbase', 'United States Air Force']
Predicate: ['operatingOrganisation', 'battle']
Object: ['United States Air Force', '1986 United States bombing of Libya']

Triple: [['__subject__ Al Asad Airbase __predicate__ operatingOrganisation __object__ United States Air Force', '__subject__ United States Air Force __predicate__ battle __object__ Korean War']]
Text: The USAF, which fought in the Korean War, operates Al Asad airbase.
Subject: ['Al Asad Airbase', 'United States Air Force']
Predicate: ['operatingOrganisation', 'battle']
Object: ['United States Air Force', 'Korean War']

Triple: [['__subject__ Al Asad Airbase __predicate__ operatingOrganisation __object__ United States Air Force', '__subject__ United States Air Force __predicate__ battle __object__ Korean War']]
Text: The United States Air Force fought battles in the Korean war and operates the Al Asad Airbase.
Subject: ['Al Asad Airbase', 'United States Air Force']
Predicate: ['operatingOrganisation', 'battle']
Object: ['United States Air Force', 'Korean War']

Triple: [['__subject__ Al Asad Airbase __predicate__ operatingOrganisation __object__ United States Air Force', '__subject__ United States Air Force __predicate__ transportAircraft __object__ Lockheed C-130 Hercules']]
Text: Al Asad Airbase is operated by the United States Air Force which uses the transport aircraft, the Lockheed C-130 Hercules.
Subject: ['Al Asad Airbase', 'United States Air Force']
Predicate: ['operatingOrganisation', 'transportAircraft']
Object: ['United States Air Force', 'Lockheed C-130 Hercules']

Triple: [['__subject__ Al Asad Airbase __predicate__ operatingOrganisation __object__ United States Air Force', '__subject__ United States Air Force __predicate__ transportAircraft __object__ Lockheed C-130 Hercules']]
Text: The United States Air Force is the operating organisation for Al Asad airbase and uses the transport aircraft, Lockheed C-130 Hercules.
Subject: ['Al Asad Airbase', 'United States Air Force']
Predicate: ['operatingOrganisation', 'transportAircraft']
Object: ['United States Air Force', 'Lockheed C-130 Hercules']

Triple: [['__subject__ Al Asad Airbase __predicate__ operatingOrganisation __object__ United States Air Force', '__subject__ United States Air Force __predicate__ transportAircraft __object__ Lockheed C-130 Hercules']]
Text: Al Asad Airbase is operated by the United States Air Force which use the Lockheed C-130 Hercules as a transport aircraft.
Subject: ['Al Asad Airbase', 'United States Air Force']
Predicate: ['operatingOrganisation', 'transportAircraft']
Object: ['United States Air Force', 'Lockheed C-130 Hercules']

Triple: [['__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3990.0', '__subject__ Al Asad Airbase __predicate__ location __object__ Al Anbar Province, Iraq']]
Text: Al Asad airbase is located in the Al Anbar province in Iraq and has a runway length of 3990.0.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['runwayLength', 'location']
Object: ['3990.0', 'Al Anbar Province, Iraq']

Triple: [['__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3990.0', '__subject__ Al Asad Airbase __predicate__ location __object__ Al Anbar Province, Iraq']]
Text: The Al Asad Airbase, located in Al Anbar Province, Iraq, has a runway length of 3990 ft.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['runwayLength', 'location']
Object: ['3990.0', 'Al Anbar Province, Iraq']

Triple: [['__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3992.88', '__subject__ Al Asad Airbase __predicate__ location __object__ Al Anbar Province, Iraq']]
Text: Al Asad Airbase in Al Anbar Province, Iraq has a runway that's 3,992.88 long.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['runwayLength', 'location']
Object: ['3992.88', 'Al Anbar Province, Iraq']

Triple: [['__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3992.88', '__subject__ Al Asad Airbase __predicate__ location __object__ Al Anbar Province, Iraq']]
Text: Al Asad Airbase has a runway length of 3992.88 and is located in Al Anbar Province, Iraq.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['runwayLength', 'location']
Object: ['3992.88', 'Al Anbar Province, Iraq']

Triple: [['__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3992.88', '__subject__ Al Asad Airbase __predicate__ location __object__ Al Anbar Province, Iraq']]
Text: The Al Asad Airbase is situated in the Al Anbar Province, Iraq and has a runway length of 3,992.88.
Subject: ['Al Asad Airbase', 'Al Asad Airbase']
Predicate: ['runwayLength', 'location']
Object: ['3992.88', 'Al Anbar Province, Iraq']

Triple: [["__subject__ Alcobendas __predicate__ leaderParty __object__ People's Party (Spain)", '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Alcobendas']]
Text: Adolfo Suárez Madrid–Barajas Airport is located in Alcobendas where the leader party is the Peoples Party (Spain).
Subject: ['Alcobendas', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['leaderParty', 'location']
Object: ["People's Party (Spain)", 'Alcobendas']

Triple: [["__subject__ Alcobendas __predicate__ leaderParty __object__ People's Party (Spain)", '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Alcobendas']]
Text: Adolfo Suárez Madrid–Barajas Airport is in Alcobendas where the Peoples Party (Spain) is the leader party.
Subject: ['Alcobendas', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['leaderParty', 'location']
Object: ["People's Party (Spain)", 'Alcobendas']

Triple: [["__subject__ Alcobendas __predicate__ leaderParty __object__ People's Party (Spain)", '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Alcobendas']]
Text: Adolfo Suárez Madrid Barajas Airport is found in Alcobendas where the leader party is the Peoples Party (Spain).
Subject: ['Alcobendas', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['leaderParty', 'location']
Object: ["People's Party (Spain)", 'Alcobendas']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Asphalt', '__subject__ Alderney Airport __predicate__ cityServed __object__ Alderney']]
Text: The city of Alderney is served by the Alderney Airport which has first runway made of asphalt.
Subject: ['Alderney Airport', 'Alderney Airport']
Predicate: ['1stRunwaySurfaceType', 'cityServed']
Object: ['Asphalt', 'Alderney']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Asphalt', '__subject__ Alderney Airport __predicate__ cityServed __object__ Alderney']]
Text: The first runway at Alderney airport, which serves Alderney, has an asphalt surface.
Subject: ['Alderney Airport', 'Alderney Airport']
Predicate: ['1stRunwaySurfaceType', 'cityServed']
Object: ['Asphalt', 'Alderney']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Asphalt', '__subject__ Alderney Airport __predicate__ cityServed __object__ Alderney']]
Text: Alderney is served by Alderney Airport where the 1st runway has an asphalt surface.
Subject: ['Alderney Airport', 'Alderney Airport']
Predicate: ['1stRunwaySurfaceType', 'cityServed']
Object: ['Asphalt', 'Alderney']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae', '__subject__ Alderney Airport __predicate__ cityServed __object__ Alderney']]
Text: Serving the city of Alderney, Alderney Airport's 1st runway is made from Poaceae.
Subject: ['Alderney Airport', 'Alderney Airport']
Predicate: ['1stRunwaySurfaceType', 'cityServed']
Object: ['Poaceae', 'Alderney']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae', '__subject__ Alderney Airport __predicate__ cityServed __object__ Alderney']]
Text: Alderney Airport serves the city of Alderney and the surface of its 1st runway is poaceae.
Subject: ['Alderney Airport', 'Alderney Airport']
Predicate: ['1stRunwaySurfaceType', 'cityServed']
Object: ['Poaceae', 'Alderney']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae', '__subject__ Alderney Airport __predicate__ cityServed __object__ Alderney']]
Text: The surface of the 1st runway at Alderney airport, which serves Alderney, is poaceae.
Subject: ['Alderney Airport', 'Alderney Airport']
Predicate: ['1stRunwaySurfaceType', 'cityServed']
Object: ['Poaceae', 'Alderney']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae', '__subject__ Alderney Airport __predicate__ runwayLength __object__ 497.0']]
Text: The surface type of the 497.0 long runway at Alderney Airport is poaceae.
Subject: ['Alderney Airport', 'Alderney Airport']
Predicate: ['1stRunwaySurfaceType', 'runwayLength']
Object: ['Poaceae', '497.0']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae', '__subject__ Alderney Airport __predicate__ runwayLength __object__ 497.0']]
Text: The runway length of Alderney Airport is 497.0 and the 1st runway has a poaceae surface.
Subject: ['Alderney Airport', 'Alderney Airport']
Predicate: ['1stRunwaySurfaceType', 'runwayLength']
Object: ['Poaceae', '497.0']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae', '__subject__ Alderney Airport __predicate__ runwayLength __object__ 497.0']]
Text: The 1st runway at Alderney Airport, which is 497.0 in length, is made from Poaceae.
Subject: ['Alderney Airport', 'Alderney Airport']
Predicate: ['1stRunwaySurfaceType', 'runwayLength']
Object: ['Poaceae', '497.0']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae', '__subject__ Alderney Airport __predicate__ runwayLength __object__ 733.0']]
Text: Alderney Airport has a runway with a length of 733.0 metres and its 1st runway is made from Poaceae.
Subject: ['Alderney Airport', 'Alderney Airport']
Predicate: ['1stRunwaySurfaceType', 'runwayLength']
Object: ['Poaceae', '733.0']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae', '__subject__ Alderney Airport __predicate__ runwayLength __object__ 733.0']]
Text: The Alderney Airport has a runway length of 733 and its 1st runway surface is poaceae.
Subject: ['Alderney Airport', 'Alderney Airport']
Predicate: ['1stRunwaySurfaceType', 'runwayLength']
Object: ['Poaceae', '733.0']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae', '__subject__ Alderney Airport __predicate__ runwayLength __object__ 733.0']]
Text: The Alderney Airport runway has a length of 733 and the surface of its 1st runway is poaceae.
Subject: ['Alderney Airport', 'Alderney Airport']
Predicate: ['1stRunwaySurfaceType', 'runwayLength']
Object: ['Poaceae', '733.0']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae', '__subject__ Poaceae __predicate__ order __object__ Commelinids']]
Text: The surface of the 1st runway at Alderney airport is made from poaceae, which belongs to the order of Commelinids.
Subject: ['Alderney Airport', 'Poaceae']
Predicate: ['1stRunwaySurfaceType', 'order']
Object: ['Poaceae', 'Commelinids']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae', '__subject__ Poaceae __predicate__ order __object__ Commelinids']]
Text: The 1st runway at Alderney Airport is made from Poaceae which belongs to the order of Commelinids.
Subject: ['Alderney Airport', 'Poaceae']
Predicate: ['1stRunwaySurfaceType', 'order']
Object: ['Poaceae', 'Commelinids']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae', '__subject__ Poaceae __predicate__ order __object__ Commelinids']]
Text: The surface of the 1st runway at Alderney airport is made from poaceae, Poaceae is the order of Commelinids.
Subject: ['Alderney Airport', 'Poaceae']
Predicate: ['1stRunwaySurfaceType', 'order']
Object: ['Poaceae', 'Commelinids']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae', '__subject__ Poaceae __predicate__ order __object__ Poales']]
Text: The surface of the 1st runway at Alderney airport is poaceae, which is of the order Poales.
Subject: ['Alderney Airport', 'Poaceae']
Predicate: ['1stRunwaySurfaceType', 'order']
Object: ['Poaceae', 'Poales']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae', '__subject__ Poaceae __predicate__ order __object__ Poales']]
Text: The 1st runway at Alderney Airport is made from Poaceae, which is of the order Poales.
Subject: ['Alderney Airport', 'Poaceae']
Predicate: ['1stRunwaySurfaceType', 'order']
Object: ['Poaceae', 'Poales']

Triple: [['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae', '__subject__ Poaceae __predicate__ order __object__ Poales']]
Text: The first runway at Alderney Airport is made from Poaceae, which is a member of the order of Poales.
Subject: ['Alderney Airport', 'Poaceae']
Predicate: ['1stRunwaySurfaceType', 'order']
Object: ['Poaceae', 'Poales']

Triple: [['__subject__ Alderney Airport __predicate__ cityServed __object__ Alderney', '__subject__ Alderney __predicate__ capital __object__ Saint Anne, Alderney']]
Text: The capital of Alderney is Saint Anne and is served by the Alderney Airport.
Subject: ['Alderney Airport', 'Alderney']
Predicate: ['cityServed', 'capital']
Object: ['Alderney', 'Saint Anne, Alderney']

Triple: [['__subject__ Alderney Airport __predicate__ cityServed __object__ Alderney', '__subject__ Alderney __predicate__ capital __object__ Saint Anne, Alderney']]
Text: Alderney Airport serves Alderney, where the capital is Saint Anne.
Subject: ['Alderney Airport', 'Alderney']
Predicate: ['cityServed', 'capital']
Object: ['Alderney', 'Saint Anne, Alderney']

Triple: [['__subject__ Alderney Airport __predicate__ cityServed __object__ Alderney', '__subject__ Alderney __predicate__ language __object__ English language']]
Text: Alderney Airport serves the English speaking city of Alderney.
Subject: ['Alderney Airport', 'Alderney']
Predicate: ['cityServed', 'language']
Object: ['Alderney', 'English language']

Triple: [['__subject__ Alderney Airport __predicate__ cityServed __object__ Alderney', '__subject__ Alderney __predicate__ language __object__ English language']]
Text: The English language is spoken in Alderney which is served by Alderney airport.
Subject: ['Alderney Airport', 'Alderney']
Predicate: ['cityServed', 'language']
Object: ['Alderney', 'English language']

Triple: [['__subject__ Alderney Airport __predicate__ cityServed __object__ Alderney', '__subject__ Alderney __predicate__ leader __object__ Elizabeth II']]
Text: The Alderney Airport serves Alderney whose leader is Elizabeth II.
Subject: ['Alderney Airport', 'Alderney']
Predicate: ['cityServed', 'leader']
Object: ['Alderney', 'Elizabeth II']

Triple: [['__subject__ Alderney Airport __predicate__ cityServed __object__ Alderney', '__subject__ Alderney __predicate__ leader __object__ Elizabeth II']]
Text: Alderney Airport serves the city of Alderney, whose leader is Elizabeth II.
Subject: ['Alderney Airport', 'Alderney']
Predicate: ['cityServed', 'leader']
Object: ['Alderney', 'Elizabeth II']

Triple: [['__subject__ Alderney Airport __predicate__ cityServed __object__ Alderney', '__subject__ Alderney __predicate__ leader __object__ Elizabeth II']]
Text: Alderney Airport serves the city of Alderney, the leader of which is Elizabeth II.
Subject: ['Alderney Airport', 'Alderney']
Predicate: ['cityServed', 'leader']
Object: ['Alderney', 'Elizabeth II']

Triple: [['__subject__ Alderney Airport __predicate__ runwayLength __object__ 497.0', '__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Asphalt']]
Text: The 1st runway at Alderney Airport is made from Asphalt and has a length of 497.0.
Subject: ['Alderney Airport', 'Alderney Airport']
Predicate: ['runwayLength', '1stRunwaySurfaceType']
Object: ['497.0', 'Asphalt']

Triple: [['__subject__ Alderney Airport __predicate__ runwayLength __object__ 497.0', '__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Asphalt']]
Text: Alderney Airport has a runway length of 497.0, it is made of asphalt.
Subject: ['Alderney Airport', 'Alderney Airport']
Predicate: ['runwayLength', '1stRunwaySurfaceType']
Object: ['497.0', 'Asphalt']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Allama Iqbal International Airport __predicate__ operatingOrganisation __object__ Pakistan Civil Aviation Authority']]
Text: The Pakistan Civil Aviation Authority governs the Allama Iqbal International Airport in Pakistan.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['location', 'operatingOrganisation']
Object: ['Pakistan', 'Pakistan Civil Aviation Authority']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Allama Iqbal International Airport __predicate__ operatingOrganisation __object__ Pakistan Civil Aviation Authority']]
Text: In Pakistan, the Pakistan Civil Aviation Authority is the operating organisation of the Allama Iqbal International Airport.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['location', 'operatingOrganisation']
Object: ['Pakistan', 'Pakistan Civil Aviation Authority']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Allama Iqbal International Airport __predicate__ operatingOrganisation __object__ Pakistan Civil Aviation Authority']]
Text: Allama Iqbal International Airport in Pakistan is operated by the Pakistan Civil Aviation Authority.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['location', 'operatingOrganisation']
Object: ['Pakistan', 'Pakistan Civil Aviation Authority']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 2900.0']]
Text: Allama Iqbal International Airport is located in Pakistan and has a runway length of 2900.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['location', 'runwayLength']
Object: ['Pakistan', '2900.0']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 2900.0']]
Text: Allama Iqbal International airport is located in Pakistan with a runway length of 2900m.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['location', 'runwayLength']
Object: ['Pakistan', '2900.0']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 2900.0']]
Text: The runway length of Allama Iqbal International Airport, Pakistan, is 2900.0.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['location', 'runwayLength']
Object: ['Pakistan', '2900.0']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 3310.0']]
Text: The runway length of Allama Iqbal International Airport in Pakistan is 3,310.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['location', 'runwayLength']
Object: ['Pakistan', '3310.0']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 3310.0']]
Text: Allama Iqbal International airport is located in Pakistan and the runway length is 3310.0.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['location', 'runwayLength']
Object: ['Pakistan', '3310.0']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 3310.0']]
Text: Allama Iqbal International airport, with a runway length of 3310.0, is located in Pakistan.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['location', 'runwayLength']
Object: ['Pakistan', '3310.0']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 3360.12']]
Text: Allama Iqbal international airport has a runway length of 3360.12 and is located in Pakistan.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['location', 'runwayLength']
Object: ['Pakistan', '3360.12']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 3360.12']]
Text: The runway at Allama Iqbal International Airport in Pakistan has a length of 3360.12.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['location', 'runwayLength']
Object: ['Pakistan', '3360.12']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Pakistan __predicate__ leader __object__ Mamnoon Hussain']]
Text: Allama Iqbal International airport is located in Pakistan where the leader is Mamnoon Hussain.
Subject: ['Allama Iqbal International Airport', 'Pakistan']
Predicate: ['location', 'leader']
Object: ['Pakistan', 'Mamnoon Hussain']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Pakistan __predicate__ leader __object__ Mamnoon Hussain']]
Text: Allama Iqbal International airport is located in Pakistan, the leader of the country is Mamnoon Hussain.
Subject: ['Allama Iqbal International Airport', 'Pakistan']
Predicate: ['location', 'leader']
Object: ['Pakistan', 'Mamnoon Hussain']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Pakistan __predicate__ leader __object__ Mamnoon Hussain']]
Text: Allama Iqbal International airport is located in Pakistan where Mamnoon Hussain is a leader.
Subject: ['Allama Iqbal International Airport', 'Pakistan']
Predicate: ['location', 'leader']
Object: ['Pakistan', 'Mamnoon Hussain']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Pakistan __predicate__ leader __object__ Nawaz Sharif']]
Text: Allama Iqbal International airport is located in Pakistan where the leader is Nawaz Sharif.
Subject: ['Allama Iqbal International Airport', 'Pakistan']
Predicate: ['location', 'leader']
Object: ['Pakistan', 'Nawaz Sharif']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Pakistan __predicate__ leader __object__ Nawaz Sharif']]
Text: Allama Iqbal International airport is located in Pakistan whose leader is Nawaz Sharif.
Subject: ['Allama Iqbal International Airport', 'Pakistan']
Predicate: ['location', 'leader']
Object: ['Pakistan', 'Nawaz Sharif']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Pakistan __predicate__ leader __object__ Nawaz Sharif']]
Text: Allama Iqbal International airport is located in Pakistan where Nawaz Sharif is a leader.
Subject: ['Allama Iqbal International Airport', 'Pakistan']
Predicate: ['location', 'leader']
Object: ['Pakistan', 'Nawaz Sharif']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Pakistan __predicate__ leader __object__ Sardar Ayaz Sadiq']]
Text: Allama Iqbal International airport is located in Pakistan where Sardar Ayaz Sadiq is the leader.
Subject: ['Allama Iqbal International Airport', 'Pakistan']
Predicate: ['location', 'leader']
Object: ['Pakistan', 'Sardar Ayaz Sadiq']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan', '__subject__ Pakistan __predicate__ leader __object__ Sardar Ayaz Sadiq']]
Text: Allama Iqbal International airport is located in Pakistan, of which Sardar Ayaz Sadiq is the leader.
Subject: ['Allama Iqbal International Airport', 'Pakistan']
Predicate: ['location', 'leader']
Object: ['Pakistan', 'Sardar Ayaz Sadiq']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Punjab, Pakistan', '__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 3360.12']]
Text: Located in Punjab, in Pakistan, Allama Iqbal International Airport has a runway length of 3360.12 metres.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['location', 'runwayLength']
Object: ['Punjab, Pakistan', '3360.12']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Punjab, Pakistan', '__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 3360.12']]
Text: The runway at Allama Iqbal International Airport in Punjab, Pakistan is 3360.12 long.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['location', 'runwayLength']
Object: ['Punjab, Pakistan', '3360.12']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Punjab, Pakistan', '__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 3360.12']]
Text: Allama Iqbal international airport is located in Punjab, Pakistan and has a runway length of 3360.12.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['location', 'runwayLength']
Object: ['Punjab, Pakistan', '3360.12']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Punjab, Pakistan', '__subject__ Punjab, Pakistan __predicate__ leaderTitle __object__ Provincial Assembly of the Punjab']]
Text: Allama Iqbal International Airport is located in Punjab, Pakistan, which is led by the Provincial Assembly of the Punjab.
Subject: ['Allama Iqbal International Airport', 'Punjab, Pakistan']
Predicate: ['location', 'leaderTitle']
Object: ['Punjab, Pakistan', 'Provincial Assembly of the Punjab']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Punjab, Pakistan', '__subject__ Punjab, Pakistan __predicate__ leaderTitle __object__ Provincial Assembly of the Punjab']]
Text: Punjab, Pakistan, led by the Provincial Assembly, is the location of Allama Iqbal International Airport.
Subject: ['Allama Iqbal International Airport', 'Punjab, Pakistan']
Predicate: ['location', 'leaderTitle']
Object: ['Punjab, Pakistan', 'Provincial Assembly of the Punjab']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Punjab, Pakistan', '__subject__ Punjab, Pakistan __predicate__ leaderTitle __object__ Provincial Assembly of the Punjab']]
Text: Allama Iqbal International Airport is located in Punjab, Pakistan which is led by the Provincial Assembly of the Punjab.
Subject: ['Allama Iqbal International Airport', 'Punjab, Pakistan']
Predicate: ['location', 'leaderTitle']
Object: ['Punjab, Pakistan', 'Provincial Assembly of the Punjab']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ operatingOrganisation __object__ Pakistan Civil Aviation Authority', '__subject__ Allama Iqbal International Airport __predicate__ location __object__ Punjab, Pakistan']]
Text: Allama Iqbal International Airport in Punjab, Pakistan, is operated by Pakistan Civil Aviation Authority.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['operatingOrganisation', 'location']
Object: ['Pakistan Civil Aviation Authority', 'Punjab, Pakistan']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ operatingOrganisation __object__ Pakistan Civil Aviation Authority', '__subject__ Allama Iqbal International Airport __predicate__ location __object__ Punjab, Pakistan']]
Text: The Pakistan Civil Aviation Authority is the operating authority of the Allama Iqbal International Airport, which is located in Punjab, Pakistan.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['operatingOrganisation', 'location']
Object: ['Pakistan Civil Aviation Authority', 'Punjab, Pakistan']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ operatingOrganisation __object__ Pakistan Civil Aviation Authority', '__subject__ Allama Iqbal International Airport __predicate__ location __object__ Punjab, Pakistan']]
Text: The Pakistan Civil Aviation Authority is the operating organisation of the Allama Iqbal International Airport in Punjab, Pakistan.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['operatingOrganisation', 'location']
Object: ['Pakistan Civil Aviation Authority', 'Punjab, Pakistan']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ operatingOrganisation __object__ Pakistan Civil Aviation Authority', '__subject__ Pakistan Civil Aviation Authority __predicate__ location __object__ Jinnah International Airport']]
Text: Jinnah International Airport is the location of the HQ of the Pakistan Civil Aviation Authority, who govern Allama Iqbal International Airport.
Subject: ['Allama Iqbal International Airport', 'Pakistan Civil Aviation Authority']
Predicate: ['operatingOrganisation', 'location']
Object: ['Pakistan Civil Aviation Authority', 'Jinnah International Airport']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ operatingOrganisation __object__ Pakistan Civil Aviation Authority', '__subject__ Pakistan Civil Aviation Authority __predicate__ location __object__ Jinnah International Airport']]
Text: The Pakistan Civil Aviation Authority is located at Jinnah International Airport and is the operating organisation of the Allama Iqbal International Airport.
Subject: ['Allama Iqbal International Airport', 'Pakistan Civil Aviation Authority']
Predicate: ['operatingOrganisation', 'location']
Object: ['Pakistan Civil Aviation Authority', 'Jinnah International Airport']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ operatingOrganisation __object__ Pakistan Civil Aviation Authority', '__subject__ Pakistan Civil Aviation Authority __predicate__ location __object__ Jinnah International Airport']]
Text: The Pakistan Civil Aviation Authority which is located at Jinnah International airport, is the operating organisation of the Allama Iqbal International Airport.
Subject: ['Allama Iqbal International Airport', 'Pakistan Civil Aviation Authority']
Predicate: ['operatingOrganisation', 'location']
Object: ['Pakistan Civil Aviation Authority', 'Jinnah International Airport']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 3310.0', '__subject__ Allama Iqbal International Airport __predicate__ location __object__ Punjab, Pakistan']]
Text: Allama Iqbal International Airport has a runway length of 3310.0 and is found in Punjab, Pakistan.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['runwayLength', 'location']
Object: ['3310.0', 'Punjab, Pakistan']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 3310.0', '__subject__ Allama Iqbal International Airport __predicate__ location __object__ Punjab, Pakistan']]
Text: Allama Iqbal International Airport is located in Punjab Pakistan; its runway length is 3,310.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['runwayLength', 'location']
Object: ['3310.0', 'Punjab, Pakistan']

Triple: [['__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 3310.0', '__subject__ Allama Iqbal International Airport __predicate__ location __object__ Punjab, Pakistan']]
Text: Allama Iqbal International Airport located in Punjab, Pakistan has a runway length of 3310.0.
Subject: ['Allama Iqbal International Airport', 'Allama Iqbal International Airport']
Predicate: ['runwayLength', 'location']
Object: ['3310.0', 'Punjab, Pakistan']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ 1stRunwayLengthFeet __object__ 9001', '__subject__ Alpena County Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 210']]
Text: Alpena County Regional Airport is elevated 210 metres above sea level and its first runway has a length of 9,001 feet.
Subject: ['Alpena County Regional Airport', 'Alpena County Regional Airport']
Predicate: ['1stRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['9001', '210']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ 1stRunwayLengthFeet __object__ 9001', '__subject__ Alpena County Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 210']]
Text: Alpena County Regional Airport is 210m above sea level, its first runway is 9001 feet long.
Subject: ['Alpena County Regional Airport', 'Alpena County Regional Airport']
Predicate: ['1stRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['9001', '210']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 210', '__subject__ Alpena County Regional Airport __predicate__ owner __object__ Alpena County, Michigan']]
Text: The Alpena County Regional Airport is elevated 210 metres above sea level and is owned by Alpena County, Michigan.
Subject: ['Alpena County Regional Airport', 'Alpena County Regional Airport']
Predicate: ['elevationAboveTheSeaLevel', 'owner']
Object: ['210', 'Alpena County, Michigan']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 210', '__subject__ Alpena County Regional Airport __predicate__ owner __object__ Alpena County, Michigan']]
Text: Alpena County Regional Airport, which is 210 metres above sea level is owned by Alpena County, Michigan.
Subject: ['Alpena County Regional Airport', 'Alpena County Regional Airport']
Predicate: ['elevationAboveTheSeaLevel', 'owner']
Object: ['210', 'Alpena County, Michigan']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 210', '__subject__ Alpena County Regional Airport __predicate__ owner __object__ Alpena County, Michigan']]
Text: Alpena County, Michigan is the owner of the Alpena County Regional Airport, which has an elevation above sea level of 210 metres.
Subject: ['Alpena County Regional Airport', 'Alpena County Regional Airport']
Predicate: ['elevationAboveTheSeaLevel', 'owner']
Object: ['210', 'Alpena County, Michigan']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ location __object__ Maple Ridge Township, Alpena County, Michigan', '__subject__ Alpena County Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 210']]
Text: Alpena County Regional Airport is located in Maple Ridge Township, Alpena County, Michigan and is 210 metres above sea level.
Subject: ['Alpena County Regional Airport', 'Alpena County Regional Airport']
Predicate: ['location', 'elevationAboveTheSeaLevel']
Object: ['Maple Ridge Township, Alpena County, Michigan', '210']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ location __object__ Maple Ridge Township, Alpena County, Michigan', '__subject__ Alpena County Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 210']]
Text: Alpena County Regional Airport is found in Maple Ridge Township. Alpena County, Michigan and it is 210 metres above sea level.
Subject: ['Alpena County Regional Airport', 'Alpena County Regional Airport']
Predicate: ['location', 'elevationAboveTheSeaLevel']
Object: ['Maple Ridge Township, Alpena County, Michigan', '210']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ location __object__ Maple Ridge Township, Alpena County, Michigan', '__subject__ Alpena County Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 210']]
Text: Alpena County Regional Airport is located in Maple Ridge Township, Alpena County, Michigan, the airport is 210m above sea level.
Subject: ['Alpena County Regional Airport', 'Alpena County Regional Airport']
Predicate: ['location', 'elevationAboveTheSeaLevel']
Object: ['Maple Ridge Township, Alpena County, Michigan', '210']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ location __object__ Maple Ridge Township, Alpena County, Michigan', '__subject__ Maple Ridge Township, Alpena County, Michigan __predicate__ country __object__ United States']]
Text: Alpena County Regional Airport is found in Maple Ridge Township, Alpena County, Michigan, United States.
Subject: ['Alpena County Regional Airport', 'Maple Ridge Township, Alpena County, Michigan']
Predicate: ['location', 'country']
Object: ['Maple Ridge Township, Alpena County, Michigan', 'United States']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ location __object__ Maple Ridge Township, Alpena County, Michigan', '__subject__ Maple Ridge Township, Alpena County, Michigan __predicate__ country __object__ United States']]
Text: Alpena County Regional Airport is located in Maple Ridge Township, Alpena County, Michigan, United States.
Subject: ['Alpena County Regional Airport', 'Maple Ridge Township, Alpena County, Michigan']
Predicate: ['location', 'country']
Object: ['Maple Ridge Township, Alpena County, Michigan', 'United States']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ location __object__ Maple Ridge Township, Alpena County, Michigan', '__subject__ Maple Ridge Township, Alpena County, Michigan __predicate__ country __object__ United States']]
Text: Alpena County Regional Airport is in Maple Ridge Township, Alpena County, Michigan in the U.S.A.
Subject: ['Alpena County Regional Airport', 'Maple Ridge Township, Alpena County, Michigan']
Predicate: ['location', 'country']
Object: ['Maple Ridge Township, Alpena County, Michigan', 'United States']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ location __object__ Wilson Township, Alpena County, Michigan', '__subject__ Alpena County Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 210']]
Text: Alpena County Regional Airport has an elevation of 210 metres above sea level and is located at Wilson Township, Alpena County, Michigan.
Subject: ['Alpena County Regional Airport', 'Alpena County Regional Airport']
Predicate: ['location', 'elevationAboveTheSeaLevel']
Object: ['Wilson Township, Alpena County, Michigan', '210']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ location __object__ Wilson Township, Alpena County, Michigan', '__subject__ Alpena County Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 210']]
Text: Alpena County Regional Airport is elevated 210 metres above sea level and is located in Wilson Township, Alpena County, Michigan.
Subject: ['Alpena County Regional Airport', 'Alpena County Regional Airport']
Predicate: ['location', 'elevationAboveTheSeaLevel']
Object: ['Wilson Township, Alpena County, Michigan', '210']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ location __object__ Wilson Township, Alpena County, Michigan', '__subject__ Wilson Township, Alpena County, Michigan __predicate__ country __object__ United States']]
Text: Alpena County Regional Airport is found in Wilson Township, Alpena County, Michigan United States.
Subject: ['Alpena County Regional Airport', 'Wilson Township, Alpena County, Michigan']
Predicate: ['location', 'country']
Object: ['Wilson Township, Alpena County, Michigan', 'United States']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ location __object__ Wilson Township, Alpena County, Michigan', '__subject__ Wilson Township, Alpena County, Michigan __predicate__ country __object__ United States']]
Text: Alpena County Regional Airport is located in the Wilson Township, Alpena County, Michigan, USA.
Subject: ['Alpena County Regional Airport', 'Wilson Township, Alpena County, Michigan']
Predicate: ['location', 'country']
Object: ['Wilson Township, Alpena County, Michigan', 'United States']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ locationIdentifier __object__ APN', '__subject__ Alpena County Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 210']]
Text: The location identifier of Alpena County Regional airport is APN and is 210m a.s.l.
Subject: ['Alpena County Regional Airport', 'Alpena County Regional Airport']
Predicate: ['locationIdentifier', 'elevationAboveTheSeaLevel']
Object: ['APN', '210']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ locationIdentifier __object__ APN', '__subject__ Alpena County Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 210']]
Text: Alpena County Regional Airport (APN) is 210 metres above sea level.
Subject: ['Alpena County Regional Airport', 'Alpena County Regional Airport']
Predicate: ['locationIdentifier', 'elevationAboveTheSeaLevel']
Object: ['APN', '210']

Triple: [['__subject__ Alpena County Regional Airport __predicate__ locationIdentifier __object__ APN', '__subject__ Alpena County Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 210']]
Text: The Alpena County Regional Airport's location id is "APN", and it is elevated 210 metres above sea level.
Subject: ['Alpena County Regional Airport', 'Alpena County Regional Airport']
Predicate: ['locationIdentifier', 'elevationAboveTheSeaLevel']
Object: ['APN', '210']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ 1stRunwayNumber __object__ 18', '__subject__ Amsterdam Airport Schiphol __predicate__ elevationAboveTheSeaLevel __object__ -3.3528']]
Text: Amsterdam airport Schiphol is -3.3528 above sea level and its first runway is known as Number 18.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['1stRunwayNumber', 'elevationAboveTheSeaLevel']
Object: ['18', '-3.3528']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ 1stRunwayNumber __object__ 18', '__subject__ Amsterdam Airport Schiphol __predicate__ elevationAboveTheSeaLevel __object__ -3.3528']]
Text: Amsterdam Airport Schiphol is -3.3528 metres above sea level and the first runway is known as Number 18.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['1stRunwayNumber', 'elevationAboveTheSeaLevel']
Object: ['18', '-3.3528']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ 1stRunwayNumber __object__ 18', '__subject__ Amsterdam Airport Schiphol __predicate__ elevationAboveTheSeaLevel __object__ -3.3528']]
Text: The number of the 1st runway at Amsterdam Airport Schiphol is 18, the airport is -3.3528 metres above sea level.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['1stRunwayNumber', 'elevationAboveTheSeaLevel']
Object: ['18', '-3.3528']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ 4thRunwaySurfaceType __object__ Asphalt', '__subject__ Amsterdam Airport Schiphol __predicate__ elevationAboveTheSeaLevel __object__ -3.3528']]
Text: Amsterdam Airport Schiphol is 3.3528 below sea level and its fourth runway is made from asphalt.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['4thRunwaySurfaceType', 'elevationAboveTheSeaLevel']
Object: ['Asphalt', '-3.3528']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ 4thRunwaySurfaceType __object__ Asphalt', '__subject__ Amsterdam Airport Schiphol __predicate__ elevationAboveTheSeaLevel __object__ -3.3528']]
Text: Amsterdam Airport Schiphol is -3.3528 metres above sea level and the 4th runway is made of asphalt.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['4thRunwaySurfaceType', 'elevationAboveTheSeaLevel']
Object: ['Asphalt', '-3.3528']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ 5thRunwayNumber __object__ 18', '__subject__ Amsterdam Airport Schiphol __predicate__ elevationAboveTheSeaLevel __object__ -3.3528']]
Text: Amsterdam Airport Schiphol is at an elevation of -3.3528 from sea level and its 5th runway number is 18.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['5thRunwayNumber', 'elevationAboveTheSeaLevel']
Object: ['18', '-3.3528']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ 5thRunwayNumber __object__ 18', '__subject__ Amsterdam Airport Schiphol __predicate__ elevationAboveTheSeaLevel __object__ -3.3528']]
Text: Amsterdam airport Schiphol is -3.3528 above sea level and the 5th runway is known as number 18.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['5thRunwayNumber', 'elevationAboveTheSeaLevel']
Object: ['18', '-3.3528']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ 5thRunwayNumber __object__ 18', '__subject__ Amsterdam Airport Schiphol __predicate__ elevationAboveTheSeaLevel __object__ -3.3528']]
Text: Amsterdam airport Schiphol is -3.3528 above sea level and the 5th runway has the number 18.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['5thRunwayNumber', 'elevationAboveTheSeaLevel']
Object: ['18', '-3.3528']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ 5thRunwaySurfaceType __object__ Asphalt', '__subject__ Amsterdam Airport Schiphol __predicate__ elevationAboveTheSeaLevel __object__ -3.3528']]
Text: Amsterdam airport Schiphol is -3.3528 above sea level and the 5th runway has an asphalt surface.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['5thRunwaySurfaceType', 'elevationAboveTheSeaLevel']
Object: ['Asphalt', '-3.3528']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ 5thRunwaySurfaceType __object__ Asphalt', '__subject__ Amsterdam Airport Schiphol __predicate__ elevationAboveTheSeaLevel __object__ -3.3528']]
Text: Amsterdam Airport Schiphol is at an elevation of -3.3528 from sea level and the 5th runway is made of asphalt.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['5thRunwaySurfaceType', 'elevationAboveTheSeaLevel']
Object: ['Asphalt', '-3.3528']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ 5thRunwaySurfaceType __object__ Asphalt', '__subject__ Amsterdam Airport Schiphol __predicate__ elevationAboveTheSeaLevel __object__ -3.3528']]
Text: Amsterdam Airport Schiphol, which is at an elevation of -3.3528 from sea level, has a fifth runway with an asphalt surface.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['5thRunwaySurfaceType', 'elevationAboveTheSeaLevel']
Object: ['Asphalt', '-3.3528']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ cityServed __object__ Amsterdam', '__subject__ Amsterdam __predicate__ leader __object__ Eberhard van der Laan']]
Text: Eberhard van der Laan is the leader of Amsterdam, where the airport serving the city is called Amsterdam Airport Schiphol.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam']
Predicate: ['cityServed', 'leader']
Object: ['Amsterdam', 'Eberhard van der Laan']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ cityServed __object__ Amsterdam', '__subject__ Amsterdam __predicate__ leader __object__ Eberhard van der Laan']]
Text: Amsterdam Airport Schiphol serves the city of Amsterdam whose leader is Eberhard van der Laan.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam']
Predicate: ['cityServed', 'leader']
Object: ['Amsterdam', 'Eberhard van der Laan']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ cityServed __object__ Amsterdam', '__subject__ Amsterdam __predicate__ leader __object__ Eberhard van der Laan']]
Text: Amsterdam airport, Schiphol serves the city of Amsterdam, the leader of which is Eberhard van der Laan.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam']
Predicate: ['cityServed', 'leader']
Object: ['Amsterdam', 'Eberhard van der Laan']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ cityServed __object__ Amsterdam', '__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3400.0']]
Text: Amsterdam Airport Schiphol, with a runway length of 3400.0, serves the city of Amsterdam.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['cityServed', 'runwayLength']
Object: ['Amsterdam', '3400.0']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ cityServed __object__ Amsterdam', '__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3400.0']]
Text: Serving the city of Amsterdam, Amsterdam Airport Schiphol's runway length is 3400.0 metres.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['cityServed', 'runwayLength']
Object: ['Amsterdam', '3400.0']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ cityServed __object__ Amsterdam', '__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3400.0']]
Text: Amsterdam Airport Schiphol serves the city of Amsterdam and has a runway that is 3400 metres long.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['cityServed', 'runwayLength']
Object: ['Amsterdam', '3400.0']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ cityServed __object__ Amsterdam', '__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3453.0']]
Text: The Amsterdam Airport Schiphol, which serves the city of Amsterdam, has a runway length of 3453.0.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['cityServed', 'runwayLength']
Object: ['Amsterdam', '3453.0']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ cityServed __object__ Amsterdam', '__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3453.0']]
Text: The runway length of Amsterdam Airport Schiphol, which serves the city of Amsterdam, is 3453.0.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['cityServed', 'runwayLength']
Object: ['Amsterdam', '3453.0']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ cityServed __object__ Amsterdam', '__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3500.0']]
Text: The runway length of Amsterdam Airport Schiphol, which serves the city of Amsterdam, is 3500.0.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['cityServed', 'runwayLength']
Object: ['Amsterdam', '3500.0']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ cityServed __object__ Amsterdam', '__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3800.0']]
Text: Schiphol, the Amsterdam Airport, whose runway is 3800 feet, serves Amsterdam.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['cityServed', 'runwayLength']
Object: ['Amsterdam', '3800.0']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ cityServed __object__ Amsterdam', '__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3800.0']]
Text: Amsterdam Airport Schiphol serves Amsterdam and has a runway length of 3800.0.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['cityServed', 'runwayLength']
Object: ['Amsterdam', '3800.0']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ cityServed __object__ Amsterdam', '__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3800.0']]
Text: Amsterdam Airport Schiphol's runway length is 3800.0 and it serves Amsterdam.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['cityServed', 'runwayLength']
Object: ['Amsterdam', '3800.0']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ elevationAboveTheSeaLevel __object__ -3.3528', '__subject__ Amsterdam Airport Schiphol __predicate__ location __object__ Haarlemmermeer']]
Text: The Amsterdam Airport Schiphol in Haarlemmermeer is -3.3528 metres above sea level.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['elevationAboveTheSeaLevel', 'location']
Object: ['-3.3528', 'Haarlemmermeer']

Triple: [['__subject__ Amsterdam Airport Schiphol __predicate__ elevationAboveTheSeaLevel __object__ -3.3528', '__subject__ Amsterdam Airport Schiphol __predicate__ location __object__ Haarlemmermeer']]
Text: Amsterdam Airport Schiphol, located in Haarlemmermeer, is at an elevation of -3.3528 from sea level.
Subject: ['Amsterdam Airport Schiphol', 'Amsterdam Airport Schiphol']
Predicate: ['elevationAboveTheSeaLevel', 'location']
Object: ['-3.3528', 'Haarlemmermeer']

Triple: [['__subject__ Andrews County, Texas __predicate__ countySeat __object__ Andrews, Texas', '__subject__ Andrews County Airport __predicate__ owner __object__ Andrews County, Texas']]
Text: Andrews County, Texas has its county seat in Andrews, Texas and owns the airport with the same name.
Subject: ['Andrews County, Texas', 'Andrews County Airport']
Predicate: ['countySeat', 'owner']
Object: ['Andrews, Texas', 'Andrews County, Texas']

Triple: [['__subject__ Andrews County, Texas __predicate__ countySeat __object__ Andrews, Texas', '__subject__ Andrews County Airport __predicate__ owner __object__ Andrews County, Texas']]
Text: Andrews County Airport is owned by Andrews County, Texas, which has its seat in the county.
Subject: ['Andrews County, Texas', 'Andrews County Airport']
Predicate: ['countySeat', 'owner']
Object: ['Andrews, Texas', 'Andrews County, Texas']

Triple: [['__subject__ Andrews County, Texas __predicate__ largestCity __object__ Andrews, Texas', '__subject__ Andrews County Airport __predicate__ owner __object__ Andrews County, Texas']]
Text: Andrews County Airport is owned by Andrews County, Texas where the largest city is Andrews.
Subject: ['Andrews County, Texas', 'Andrews County Airport']
Predicate: ['largestCity', 'owner']
Object: ['Andrews, Texas', 'Andrews County, Texas']

Triple: [['__subject__ Andrews County, Texas __predicate__ largestCity __object__ Andrews, Texas', '__subject__ Andrews County Airport __predicate__ owner __object__ Andrews County, Texas']]
Text: The owner of Andrews County airport is Andrews County, Texas where the largest city is Andrews.
Subject: ['Andrews County, Texas', 'Andrews County Airport']
Predicate: ['largestCity', 'owner']
Object: ['Andrews, Texas', 'Andrews County, Texas']

Triple: [['__subject__ Andrews County, Texas __predicate__ largestCity __object__ Andrews, Texas', '__subject__ Andrews County Airport __predicate__ owner __object__ Andrews County, Texas']]
Text: Andrews, Texas is the largest city in Andrews County, Texas, which owns the Andrews County Airport.
Subject: ['Andrews County, Texas', 'Andrews County Airport']
Predicate: ['largestCity', 'owner']
Object: ['Andrews, Texas', 'Andrews County, Texas']

Triple: [['__subject__ Andrews County Airport __predicate__ 3rdRunwayLengthFeet __object__ 2939', '__subject__ Andrews County Airport __predicate__ elevationAboveTheSeaLevel __object__ 973.0']]
Text: The 3rd runway at Andrews County Airport is 2939 feet and it is 973 m above sea level.
Subject: ['Andrews County Airport', 'Andrews County Airport']
Predicate: ['3rdRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['2939', '973.0']

Triple: [['__subject__ Andrews County Airport __predicate__ 3rdRunwayLengthFeet __object__ 2939', '__subject__ Andrews County Airport __predicate__ elevationAboveTheSeaLevel __object__ 973.0']]
Text: Andrews County Airport is 973 metres above sea level and the 3rd runway has a length of 2939 feet.
Subject: ['Andrews County Airport', 'Andrews County Airport']
Predicate: ['3rdRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['2939', '973.0']

Triple: [['__subject__ Andrews County Airport __predicate__ 4thRunwayLengthFeet __object__ 25', '__subject__ Andrews County Airport __predicate__ elevationAboveTheSeaLevel __object__ 973.0']]
Text: Andrews County Airport is 973.0 above sea level and the 4th runway has a length of 25 feet.
Subject: ['Andrews County Airport', 'Andrews County Airport']
Predicate: ['4thRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['25', '973.0']

Triple: [['__subject__ Andrews County Airport __predicate__ 4thRunwayLengthFeet __object__ 25', '__subject__ Andrews County Airport __predicate__ elevationAboveTheSeaLevel __object__ 973.0']]
Text: Andrews County Airport is 973 metres above sea level and its 4th runway is 25ft.
Subject: ['Andrews County Airport', 'Andrews County Airport']
Predicate: ['4thRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['25', '973.0']

Triple: [['__subject__ Andrews County Airport __predicate__ location __object__ Texas', '__subject__ Andrews County Airport __predicate__ elevationAboveTheSeaLevel __object__ 973.0']]
Text: Andrews County Airport is located in Texas and is 973 metres above sea level.
Subject: ['Andrews County Airport', 'Andrews County Airport']
Predicate: ['location', 'elevationAboveTheSeaLevel']
Object: ['Texas', '973.0']

Triple: [['__subject__ Andrews County Airport __predicate__ location __object__ Texas', '__subject__ Texas __predicate__ country __object__ United States']]
Text: Andrews County Airport is located in Texas, in the United States.
Subject: ['Andrews County Airport', 'Texas']
Predicate: ['location', 'country']
Object: ['Texas', 'United States']

Triple: [['__subject__ Andrews County Airport __predicate__ location __object__ Texas', '__subject__ Texas __predicate__ country __object__ United States']]
Text: Andrews County Airport is located in Texas, United States.
Subject: ['Andrews County Airport', 'Texas']
Predicate: ['location', 'country']
Object: ['Texas', 'United States']

Triple: [['__subject__ Andrews County Airport __predicate__ location __object__ Texas', '__subject__ Texas __predicate__ demonym __object__ Tejano']]
Text: Andrews County Airport is located in Texas, whose inhabitants are called Tejano.
Subject: ['Andrews County Airport', 'Texas']
Predicate: ['location', 'demonym']
Object: ['Texas', 'Tejano']

Triple: [['__subject__ Andrews County Airport __predicate__ location __object__ Texas', '__subject__ Texas __predicate__ demonym __object__ Tejano']]
Text: Andrews County Airport is located in Texas where tejano is the demonym used.
Subject: ['Andrews County Airport', 'Texas']
Predicate: ['location', 'demonym']
Object: ['Texas', 'Tejano']

Triple: [['__subject__ Andrews County Airport __predicate__ location __object__ Texas', '__subject__ Texas __predicate__ demonym __object__ Tejano']]
Text: Andrews County Airport is located in Texas where the demonym is Tejano.
Subject: ['Andrews County Airport', 'Texas']
Predicate: ['location', 'demonym']
Object: ['Texas', 'Tejano']

Triple: [['__subject__ Andrews County Airport __predicate__ location __object__ Texas', '__subject__ Texas __predicate__ demonym __object__ Texan']]
Text: Andrews County Airport is located in Texas, where the inhabitants have the demonym Texan.
Subject: ['Andrews County Airport', 'Texas']
Predicate: ['location', 'demonym']
Object: ['Texas', 'Texan']

Triple: [['__subject__ Andrews County Airport __predicate__ location __object__ Texas', '__subject__ Texas __predicate__ demonym __object__ Texan']]
Text: Andrews County Airport is located in Texas where the inhabitants are called Texans.
Subject: ['Andrews County Airport', 'Texas']
Predicate: ['location', 'demonym']
Object: ['Texas', 'Texan']

Triple: [['__subject__ Andrews County Airport __predicate__ location __object__ Texas', '__subject__ Texas __predicate__ demonym __object__ Texan']]
Text: Andrews County Airport is located in Texas where the locals are called Texans.
Subject: ['Andrews County Airport', 'Texas']
Predicate: ['location', 'demonym']
Object: ['Texas', 'Texan']

Triple: [['__subject__ Andrews County Airport __predicate__ location __object__ Texas', '__subject__ Texas __predicate__ language __object__ English language']]
Text: Andrews County Airport is located in Texas where they speak English.
Subject: ['Andrews County Airport', 'Texas']
Predicate: ['location', 'language']
Object: ['Texas', 'English language']

Triple: [['__subject__ Andrews County Airport __predicate__ location __object__ Texas', '__subject__ Texas __predicate__ language __object__ English language']]
Text: Andrews County Airport is located in Texas where the spoken language is English.
Subject: ['Andrews County Airport', 'Texas']
Predicate: ['location', 'language']
Object: ['Texas', 'English language']

Triple: [['__subject__ Andrews County Airport __predicate__ location __object__ Texas', '__subject__ Texas __predicate__ language __object__ English language']]
Text: Andrews County Airport is located in Texas where English is the spoken language.
Subject: ['Andrews County Airport', 'Texas']
Predicate: ['location', 'language']
Object: ['Texas', 'English language']

Triple: [['__subject__ Andrews County Airport __predicate__ location __object__ Texas', '__subject__ Texas __predicate__ language __object__ Spanish language']]
Text: Andrews County Airport is located in Texas where Spanish is spoken.
Subject: ['Andrews County Airport', 'Texas']
Predicate: ['location', 'language']
Object: ['Texas', 'Spanish language']

Triple: [['__subject__ Andrews County Airport __predicate__ locationIdentifier __object__ E11', '__subject__ Andrews County Airport __predicate__ elevationAboveTheSeaLevel __object__ 973.0']]
Text: Andrews County Airport is 973 metres above sea level and is located in E11.
Subject: ['Andrews County Airport', 'Andrews County Airport']
Predicate: ['locationIdentifier', 'elevationAboveTheSeaLevel']
Object: ['E11', '973.0']

Triple: [['__subject__ Andrews County Airport __predicate__ locationIdentifier __object__ E11', '__subject__ Andrews County Airport __predicate__ elevationAboveTheSeaLevel __object__ 973.0']]
Text: E11 is the location identifier of Andrews County Airport, which is located 973 metres above sea level.
Subject: ['Andrews County Airport', 'Andrews County Airport']
Predicate: ['locationIdentifier', 'elevationAboveTheSeaLevel']
Object: ['E11', '973.0']

Triple: [['__subject__ Angola International Airport __predicate__ 1stRunwayLengthFeet __object__ 13123', '__subject__ Angola International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 159']]
Text: The length of the first runway at Angola International Airport is 13,123 feet, the airport is 159m above sea level.
Subject: ['Angola International Airport', 'Angola International Airport']
Predicate: ['1stRunwayLengthFeet', 'elevationAboveTheSeaLevelInMetres']
Object: ['13123', '159']

Triple: [['__subject__ Angola International Airport __predicate__ 1stRunwayNumber __object__ 5', '__subject__ Angola International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 159']]
Text: 5 is the number of the first runway of Angola International Airport which is 159m a.s.l.
Subject: ['Angola International Airport', 'Angola International Airport']
Predicate: ['1stRunwayNumber', 'elevationAboveTheSeaLevelInMetres']
Object: ['5', '159']

Triple: [['__subject__ Angola International Airport __predicate__ 1stRunwayNumber __object__ 5', '__subject__ Angola International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 159']]
Text: The first runway at Angola International Airport is known as 5 and is 159 metres above sea level.
Subject: ['Angola International Airport', 'Angola International Airport']
Predicate: ['1stRunwayNumber', 'elevationAboveTheSeaLevelInMetres']
Object: ['5', '159']

Triple: [['__subject__ Angola International Airport __predicate__ 1stRunwayNumber __object__ 5', '__subject__ Angola International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 159']]
Text: Angola International Airport's 1st runway has the number 5, and the elevation of the airport above the sea level is 159 m.
Subject: ['Angola International Airport', 'Angola International Airport']
Predicate: ['1stRunwayNumber', 'elevationAboveTheSeaLevelInMetres']
Object: ['5', '159']

Triple: [['__subject__ Angola International Airport __predicate__ 1stRunwaySurfaceType __object__ Asphalt', '__subject__ Angola International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 159']]
Text: Angola International Airport is 159 metres above the sea level and the 1st runway has an asphalt surface.
Subject: ['Angola International Airport', 'Angola International Airport']
Predicate: ['1stRunwaySurfaceType', 'elevationAboveTheSeaLevelInMetres']
Object: ['Asphalt', '159']

Triple: [['__subject__ Angola International Airport __predicate__ 1stRunwaySurfaceType __object__ Asphalt', '__subject__ Angola International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 159']]
Text: Asphalt is the surface of the first runway of Angola International Airport, which is located 159 metres above sea level.
Subject: ['Angola International Airport', 'Angola International Airport']
Predicate: ['1stRunwaySurfaceType', 'elevationAboveTheSeaLevelInMetres']
Object: ['Asphalt', '159']

Triple: [['__subject__ Angola International Airport __predicate__ location __object__ Ícolo e Bengo', '__subject__ Angola International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 159']]
Text: The Angola International Airport located in Icolo e Bengo is 159 meters above sea level.
Subject: ['Angola International Airport', 'Angola International Airport']
Predicate: ['location', 'elevationAboveTheSeaLevelInMetres']
Object: ['Ícolo e Bengo', '159']

Triple: [['__subject__ Angola International Airport __predicate__ location __object__ Ícolo e Bengo', '__subject__ Angola International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 159']]
Text: Angola International Airport, located in Ícolo e Bengo, is 159 metres above the sea level.
Subject: ['Angola International Airport', 'Angola International Airport']
Predicate: ['location', 'elevationAboveTheSeaLevelInMetres']
Object: ['Ícolo e Bengo', '159']

Triple: [['__subject__ Angola International Airport __predicate__ location __object__ Ícolo e Bengo', '__subject__ Angola International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 159']]
Text: The Angola International Airport which is 159 meters above sea level, is located at Ícolo e Bengo.
Subject: ['Angola International Airport', 'Angola International Airport']
Predicate: ['location', 'elevationAboveTheSeaLevelInMetres']
Object: ['Ícolo e Bengo', '159']

Triple: [['__subject__ Angola International Airport __predicate__ location __object__ Ícolo e Bengo', '__subject__ Ícolo e Bengo __predicate__ isPartOf __object__ Luanda Province']]
Text: Angola International Airport can be found in Ícolo e Bengo, which is in the Luanda Province.
Subject: ['Angola International Airport', 'Ícolo e Bengo']
Predicate: ['location', 'isPartOf']
Object: ['Ícolo e Bengo', 'Luanda Province']

Triple: [['__subject__ Angola International Airport __predicate__ location __object__ Ícolo e Bengo', '__subject__ Ícolo e Bengo __predicate__ isPartOf __object__ Luanda Province']]
Text: Angola International Airport is located at Ícolo e Bengo, part of Luanda Province.
Subject: ['Angola International Airport', 'Ícolo e Bengo']
Predicate: ['location', 'isPartOf']
Object: ['Ícolo e Bengo', 'Luanda Province']

Triple: [['__subject__ Angola International Airport __predicate__ location __object__ Ícolo e Bengo', '__subject__ Ícolo e Bengo __predicate__ isPartOf __object__ Luanda Province']]
Text: Angola International airport is located in Icolo e Bengo, in the Luanda Province.
Subject: ['Angola International Airport', 'Ícolo e Bengo']
Predicate: ['location', 'isPartOf']
Object: ['Ícolo e Bengo', 'Luanda Province']

Triple: [['__subject__ Angola International Airport __predicate__ runwayLength __object__ 4000.0', '__subject__ Angola International Airport __predicate__ cityServed __object__ Luanda']]
Text: Angola International Airport serves Luanda and it is 4000 in length.
Subject: ['Angola International Airport', 'Angola International Airport']
Predicate: ['runwayLength', 'cityServed']
Object: ['4000.0', 'Luanda']

Triple: [['__subject__ Angola International Airport __predicate__ runwayLength __object__ 4000.0', '__subject__ Angola International Airport __predicate__ cityServed __object__ Luanda']]
Text: Angola International Airport serves Luanda and its runway is 4000 long.
Subject: ['Angola International Airport', 'Angola International Airport']
Predicate: ['runwayLength', 'cityServed']
Object: ['4000.0', 'Luanda']

Triple: [['__subject__ Antwerp International Airport __predicate__ cityServed __object__ Antwerp', '__subject__ Antwerp __predicate__ administrativeArrondissement __object__ Arrondissement of Antwerp']]
Text: The arrondissement of Antwerp serves the city of Antwerp, where the Antwerp International Airport is located.
Subject: ['Antwerp International Airport', 'Antwerp']
Predicate: ['cityServed', 'administrativeArrondissement']
Object: ['Antwerp', 'Arrondissement of Antwerp']

Triple: [['__subject__ Antwerp International Airport __predicate__ cityServed __object__ Antwerp', '__subject__ Antwerp __predicate__ administrativeArrondissement __object__ Arrondissement of Antwerp']]
Text: Antwerp International Airport serves the city of Antwerp which is administrated by the Arrondissement of Antwerp.
Subject: ['Antwerp International Airport', 'Antwerp']
Predicate: ['cityServed', 'administrativeArrondissement']
Object: ['Antwerp', 'Arrondissement of Antwerp']

Triple: [['__subject__ Antwerp International Airport __predicate__ cityServed __object__ Antwerp', '__subject__ Antwerp __predicate__ administrativeArrondissement __object__ Arrondissement of Antwerp']]
Text: Arrondissement of Antwerp is the administrative arrondissement of Antwerp which is served by Antwerp International airport.
Subject: ['Antwerp International Airport', 'Antwerp']
Predicate: ['cityServed', 'administrativeArrondissement']
Object: ['Antwerp', 'Arrondissement of Antwerp']

Triple: [['__subject__ Antwerp International Airport __predicate__ cityServed __object__ Antwerp', '__subject__ Antwerp __predicate__ country __object__ Belgium']]
Text: Antwerp International Airport serves the city of Antwerp in Belgium.
Subject: ['Antwerp International Airport', 'Antwerp']
Predicate: ['cityServed', 'country']
Object: ['Antwerp', 'Belgium']

Triple: [['__subject__ Antwerp International Airport __predicate__ cityServed __object__ Antwerp', '__subject__ Antwerp __predicate__ country __object__ Belgium']]
Text: Antwerp in Belgium is served by the Antwerp international airport.
Subject: ['Antwerp International Airport', 'Antwerp']
Predicate: ['cityServed', 'country']
Object: ['Antwerp', 'Belgium']

Triple: [['__subject__ Antwerp International Airport __predicate__ cityServed __object__ Antwerp', '__subject__ Antwerp __predicate__ country __object__ Belgium']]
Text: Antwerp International Airport serves the city of Antwerp, a popular tourist destination in Belgium.
Subject: ['Antwerp International Airport', 'Antwerp']
Predicate: ['cityServed', 'country']
Object: ['Antwerp', 'Belgium']

Triple: [['__subject__ Antwerp International Airport __predicate__ cityServed __object__ Antwerp', '__subject__ Antwerp __predicate__ mayor __object__ Bart De Wever']]
Text: Bart De Wever is the mayor of Antwerp, which is served by Antwerp International airport.
Subject: ['Antwerp International Airport', 'Antwerp']
Predicate: ['cityServed', 'mayor']
Object: ['Antwerp', 'Bart De Wever']

Triple: [['__subject__ Antwerp International Airport __predicate__ cityServed __object__ Antwerp', '__subject__ Antwerp __predicate__ mayor __object__ Bart De Wever']]
Text: Bart De Wever is mayor of Antwerp, home of the Antwerp International Airport.
Subject: ['Antwerp International Airport', 'Antwerp']
Predicate: ['cityServed', 'mayor']
Object: ['Antwerp', 'Bart De Wever']

Triple: [['__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish Government', '__subject__ Antwerp International Airport __predicate__ elevationAboveTheSeaLevel __object__ 12.0']]
Text: The Antwerp International Airport, which is 12 metres above sea level, is operated by the Flemish Government.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['operatingOrganisation', 'elevationAboveTheSeaLevel']
Object: ['Flemish Government', '12.0']

Triple: [['__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish Government', '__subject__ Antwerp International Airport __predicate__ elevationAboveTheSeaLevel __object__ 12.0']]
Text: Antwerp International Airport has an elevation of 12.0 metres above sea level and is operated by the Flemish government.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['operatingOrganisation', 'elevationAboveTheSeaLevel']
Object: ['Flemish Government', '12.0']

Triple: [['__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish Government', '__subject__ Antwerp International Airport __predicate__ elevationAboveTheSeaLevel __object__ 12.0']]
Text: The Antwerp International Airport is operated by the Flemish Government and is 12 metres above sea level.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['operatingOrganisation', 'elevationAboveTheSeaLevel']
Object: ['Flemish Government', '12.0']

Triple: [['__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish Government', '__subject__ Antwerp International Airport __predicate__ owner __object__ Flemish Region']]
Text: The Antwerp International Airport, which is owned by the Flemish Region, is operated by the Flemish Government.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['operatingOrganisation', 'owner']
Object: ['Flemish Government', 'Flemish Region']

Triple: [['__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish Government', '__subject__ Antwerp International Airport __predicate__ owner __object__ Flemish Region']]
Text: Antwerp International Airport is operated by the Flemish government and is owned by the Flemish region.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['operatingOrganisation', 'owner']
Object: ['Flemish Government', 'Flemish Region']

Triple: [['__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish Government', '__subject__ Antwerp International Airport __predicate__ owner __object__ Flemish Region']]
Text: The owner of Antwerp International Airport is the Flemish Region and the operating organisation is the Flemish government.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['operatingOrganisation', 'owner']
Object: ['Flemish Government', 'Flemish Region']

Triple: [['__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish Government', '__subject__ Antwerp International Airport __predicate__ runwayLength __object__ 600.0']]
Text: Antwerp International Airport is operated by the Flemish government and its runway is 600 long.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['operatingOrganisation', 'runwayLength']
Object: ['Flemish Government', '600.0']

Triple: [['__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish Government', '__subject__ Antwerp International Airport __predicate__ runwayLength __object__ 600.0']]
Text: Antwerp International airport, operated by the Flemish government, has a runway length of 600 feet.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['operatingOrganisation', 'runwayLength']
Object: ['Flemish Government', '600.0']

Triple: [['__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish Government', '__subject__ Antwerp International Airport __predicate__ runwayLength __object__ 600.0']]
Text: The Antwerp International Airport is operated by the Flemish Government and its runway is 600 long.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['operatingOrganisation', 'runwayLength']
Object: ['Flemish Government', '600.0']

Triple: [['__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish Government', '__subject__ Flemish Government __predicate__ jurisdiction __object__ Flanders']]
Text: The operating organisation of Antwerp International airport is the Flemish government which has jurisdiction in Flanders.
Subject: ['Antwerp International Airport', 'Flemish Government']
Predicate: ['operatingOrganisation', 'jurisdiction']
Object: ['Flemish Government', 'Flanders']

Triple: [['__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish Government', '__subject__ Flemish Government __predicate__ jurisdiction __object__ Flanders']]
Text: The Antwerp International Airport is operated by the Flemish Government which has jurisdiction over Flanders.
Subject: ['Antwerp International Airport', 'Flemish Government']
Predicate: ['operatingOrganisation', 'jurisdiction']
Object: ['Flemish Government', 'Flanders']

Triple: [['__subject__ Antwerp International Airport __predicate__ owner __object__ Flemish Region', '__subject__ Antwerp International Airport __predicate__ cityServed __object__ Antwerp']]
Text: Antwerp International Airport is owned by the Flemish Region and serves the city of Antwerp.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['owner', 'cityServed']
Object: ['Flemish Region', 'Antwerp']

Triple: [['__subject__ Antwerp International Airport __predicate__ owner __object__ Flemish Region', '__subject__ Antwerp International Airport __predicate__ cityServed __object__ Antwerp']]
Text: Flemish Region owns Antwerp International Airport, which serves the city of Antwerp.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['owner', 'cityServed']
Object: ['Flemish Region', 'Antwerp']

Triple: [['__subject__ Antwerp International Airport __predicate__ owner __object__ Flemish Region', '__subject__ Antwerp International Airport __predicate__ cityServed __object__ Antwerp']]
Text: Antwerp International Airport, serving the city of Antwerp, is owned by Flemish Region.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['owner', 'cityServed']
Object: ['Flemish Region', 'Antwerp']

Triple: [['__subject__ Antwerp International Airport __predicate__ owner __object__ Flemish Region', '__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish department of Mobility and Public Works']]
Text: Flemish Department of Mobility and Public Works operates the Antwerp International Airport which is owned by Flemish Region.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['owner', 'operatingOrganisation']
Object: ['Flemish Region', 'Flemish department of Mobility and Public Works']

Triple: [['__subject__ Antwerp International Airport __predicate__ owner __object__ Flemish Region', '__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish department of Mobility and Public Works']]
Text: Owned by the Flemish Region, Antwerp International Airport's operation organization is Flemish department of mobility and public works.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['owner', 'operatingOrganisation']
Object: ['Flemish Region', 'Flemish department of Mobility and Public Works']

Triple: [['__subject__ Antwerp International Airport __predicate__ owner __object__ Flemish Region', '__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish department of Mobility and Public Works']]
Text: The Flemish Department of Mobility and Public Works operates the Antwerp International Airport, as it is owned by the Flemish Region.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['owner', 'operatingOrganisation']
Object: ['Flemish Region', 'Flemish department of Mobility and Public Works']

Triple: [['__subject__ Antwerp International Airport __predicate__ runwayLength __object__ 1510.0', '__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish department of Mobility and Public Works']]
Text: Antwerp International Airport has a runway length of 1510.0 and is operated by The Flemish Department of Mobility and Public Works.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['runwayLength', 'operatingOrganisation']
Object: ['1510.0', 'Flemish department of Mobility and Public Works']

Triple: [['__subject__ Antwerp International Airport __predicate__ runwayLength __object__ 1510.0', '__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish department of Mobility and Public Works']]
Text: The Flemish Department of Mobility and Public Works are the operators of Antwerp International Airport, which has a runway length of 1510.0.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['runwayLength', 'operatingOrganisation']
Object: ['1510.0', 'Flemish department of Mobility and Public Works']

Triple: [['__subject__ Antwerp International Airport __predicate__ runwayLength __object__ 600.0', '__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish department of Mobility and Public Works']]
Text: The Antwerp International Airport is operated by the Flemish department of Mobility and Public Works; its runway length is 600.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['runwayLength', 'operatingOrganisation']
Object: ['600.0', 'Flemish department of Mobility and Public Works']

Triple: [['__subject__ Antwerp International Airport __predicate__ runwayLength __object__ 600.0', '__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish department of Mobility and Public Works']]
Text: The Flemish Department of Mobility and Public Works is the operator of Antwerp International Airport, which has a runway length of 600.0.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['runwayLength', 'operatingOrganisation']
Object: ['600.0', 'Flemish department of Mobility and Public Works']

Triple: [['__subject__ Antwerp International Airport __predicate__ runwayLength __object__ 600.0', '__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish department of Mobility and Public Works']]
Text: Antwerp International Airport has a runway length of 600.0 and is operated by Flemish Department of Mobility and Public Works.
Subject: ['Antwerp International Airport', 'Antwerp International Airport']
Predicate: ['runwayLength', 'operatingOrganisation']
Object: ['600.0', 'Flemish department of Mobility and Public Works']

Triple: [['__subject__ Appleton, Wisconsin __predicate__ isPartOf __object__ Kimberly, Wisconsin', '__subject__ Appleton International Airport __predicate__ cityServed __object__ Appleton, Wisconsin']]
Text: The Appleton International Airport serves the city of Appleton, Wisconsin which is part of Kimberly, Wisconsin.
Subject: ['Appleton, Wisconsin', 'Appleton International Airport']
Predicate: ['isPartOf', 'cityServed']
Object: ['Kimberly, Wisconsin', 'Appleton, Wisconsin']

Triple: [['__subject__ Appleton, Wisconsin __predicate__ isPartOf __object__ Little Chute, Wisconsin', '__subject__ Appleton International Airport __predicate__ cityServed __object__ Appleton, Wisconsin']]
Text: Appletone International Airport serves Appleton which is part of Little Chute, Wisconsin.
Subject: ['Appleton, Wisconsin', 'Appleton International Airport']
Predicate: ['isPartOf', 'cityServed']
Object: ['Little Chute, Wisconsin', 'Appleton, Wisconsin']

Triple: [['__subject__ Appleton, Wisconsin __predicate__ isPartOf __object__ Little Chute, Wisconsin', '__subject__ Appleton International Airport __predicate__ cityServed __object__ Appleton, Wisconsin']]
Text: The city, Appleton, Wisconsin is part of little chute, Wisconsin, and is served by Appleton International Airport.
Subject: ['Appleton, Wisconsin', 'Appleton International Airport']
Predicate: ['isPartOf', 'cityServed']
Object: ['Little Chute, Wisconsin', 'Appleton, Wisconsin']

Triple: [['__subject__ Appleton, Wisconsin __predicate__ isPartOf __object__ Little Chute, Wisconsin', '__subject__ Appleton International Airport __predicate__ cityServed __object__ Appleton, Wisconsin']]
Text: Little Chute is part of Appleton, Wisconsin which is served by Appleton International Airport.
Subject: ['Appleton, Wisconsin', 'Appleton International Airport']
Predicate: ['isPartOf', 'cityServed']
Object: ['Little Chute, Wisconsin', 'Appleton, Wisconsin']

Triple: [['__subject__ Appleton International Airport __predicate__ 1stRunwayLengthFeet __object__ 8002', '__subject__ Appleton International Airport __predicate__ elevationAboveTheSeaLevel __object__ 280']]
Text: The Appleton International Airport is elevated 280 metres above sea level and the first runway built here has a length of 8002 feet.
Subject: ['Appleton International Airport', 'Appleton International Airport']
Predicate: ['1stRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['8002', '280']

Triple: [['__subject__ Appleton International Airport __predicate__ 1stRunwayLengthFeet __object__ 8002', '__subject__ Appleton International Airport __predicate__ elevationAboveTheSeaLevel __object__ 280']]
Text: The first runway of Appleton International Airport has a length of 8002 feet and an elevation of 280 metres above sea level.
Subject: ['Appleton International Airport', 'Appleton International Airport']
Predicate: ['1stRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['8002', '280']

Triple: [['__subject__ Appleton International Airport __predicate__ elevationAboveTheSeaLevel __object__ 280', '__subject__ Appleton International Airport __predicate__ operatingOrganisation __object__ Outagamie County, Wisconsin']]
Text: Appleton International Airport has an elevation of 280 metres above sea level, and its operators are in Outagamie County, Wisconsin.
Subject: ['Appleton International Airport', 'Appleton International Airport']
Predicate: ['elevationAboveTheSeaLevel', 'operatingOrganisation']
Object: ['280', 'Outagamie County, Wisconsin']

Triple: [['__subject__ Appleton International Airport __predicate__ elevationAboveTheSeaLevel __object__ 280', '__subject__ Appleton International Airport __predicate__ operatingOrganisation __object__ Outagamie County, Wisconsin']]
Text: Outagamie County, Wisconsin is the operating organisation of Appleton International Airport which is elevated 280 metres above sea level.
Subject: ['Appleton International Airport', 'Appleton International Airport']
Predicate: ['elevationAboveTheSeaLevel', 'operatingOrganisation']
Object: ['280', 'Outagamie County, Wisconsin']

Triple: [['__subject__ Appleton International Airport __predicate__ location __object__ Greenville, Wisconsin', '__subject__ Appleton International Airport __predicate__ elevationAboveTheSeaLevel __object__ 280']]
Text: Appleton International Airport is at an elevation of 280 metres above sea level and can be found in Greenville, Wisconsin.
Subject: ['Appleton International Airport', 'Appleton International Airport']
Predicate: ['location', 'elevationAboveTheSeaLevel']
Object: ['Greenville, Wisconsin', '280']

Triple: [['__subject__ Appleton International Airport __predicate__ location __object__ Greenville, Wisconsin', '__subject__ Appleton International Airport __predicate__ elevationAboveTheSeaLevel __object__ 280']]
Text: The Appleton International Airport is in Greenville, Wisconsin and is 280 metres above sea level.
Subject: ['Appleton International Airport', 'Appleton International Airport']
Predicate: ['location', 'elevationAboveTheSeaLevel']
Object: ['Greenville, Wisconsin', '280']

Triple: [['__subject__ Appleton International Airport __predicate__ location __object__ Greenville, Wisconsin', '__subject__ Appleton International Airport __predicate__ elevationAboveTheSeaLevel __object__ 280']]
Text: The Appleton International Airport in Greenville, Wisconsin is 280 metres above sea leve.
Subject: ['Appleton International Airport', 'Appleton International Airport']
Predicate: ['location', 'elevationAboveTheSeaLevel']
Object: ['Greenville, Wisconsin', '280']

Triple: [['__subject__ Appleton International Airport __predicate__ location __object__ Greenville, Wisconsin', '__subject__ Greenville, Wisconsin __predicate__ country __object__ United States']]
Text: Appleton International airport is located in Greenville, Wisconsin, in the United States.
Subject: ['Appleton International Airport', 'Greenville, Wisconsin']
Predicate: ['location', 'country']
Object: ['Greenville, Wisconsin', 'United States']

Triple: [['__subject__ Appleton International Airport __predicate__ location __object__ Greenville, Wisconsin', '__subject__ Greenville, Wisconsin __predicate__ country __object__ United States']]
Text: Appleton International Airport can be found in Greenville, Wisconsin, United States.
Subject: ['Appleton International Airport', 'Greenville, Wisconsin']
Predicate: ['location', 'country']
Object: ['Greenville, Wisconsin', 'United States']

Triple: [['__subject__ Appleton International Airport __predicate__ location __object__ Greenville, Wisconsin', '__subject__ Greenville, Wisconsin __predicate__ country __object__ United States']]
Text: The Appleton International Airport is in Greenville, Wisconsin, United States.
Subject: ['Appleton International Airport', 'Greenville, Wisconsin']
Predicate: ['location', 'country']
Object: ['Greenville, Wisconsin', 'United States']

Triple: [['__subject__ Appleton International Airport __predicate__ locationIdentifier __object__ ATW', '__subject__ Appleton International Airport __predicate__ elevationAboveTheSeaLevel __object__ 280']]
Text: Appleton International Airport has an elevation of 280 metres above sea level and the location ID, ATW.
Subject: ['Appleton International Airport', 'Appleton International Airport']
Predicate: ['locationIdentifier', 'elevationAboveTheSeaLevel']
Object: ['ATW', '280']

Triple: [['__subject__ Appleton International Airport __predicate__ locationIdentifier __object__ ATW', '__subject__ Appleton International Airport __predicate__ elevationAboveTheSeaLevel __object__ 280']]
Text: Appleton International Airport has an elevation of 280 metres above sea level and has the location identifier ATW.
Subject: ['Appleton International Airport', 'Appleton International Airport']
Predicate: ['locationIdentifier', 'elevationAboveTheSeaLevel']
Object: ['ATW', '280']

Triple: [['__subject__ Appleton International Airport __predicate__ locationIdentifier __object__ ATW', '__subject__ Appleton International Airport __predicate__ elevationAboveTheSeaLevel __object__ 280']]
Text: The location identifier of Appleton International Airport is ATW and is 280m a.s.l.
Subject: ['Appleton International Airport', 'Appleton International Airport']
Predicate: ['locationIdentifier', 'elevationAboveTheSeaLevel']
Object: ['ATW', '280']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwayLengthFeet __object__ 1960', '__subject__ Ardmore Airport (New Zealand) __predicate__ elevationAboveTheSeaLevel __object__ 34.0']]
Text: Ardmore Airport in New Zealand, is elevated 34.0 metres above sea level and its 3rd runway is 1960 feet long.
Subject: ['Ardmore Airport (New Zealand)', 'Ardmore Airport (New Zealand)']
Predicate: ['3rdRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['1960', '34.0']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwayLengthFeet __object__ 1960', '__subject__ Ardmore Airport (New Zealand) __predicate__ elevationAboveTheSeaLevel __object__ 34.0']]
Text: The Ardmore Airport in New Zealand is elevated 34.0 metres above sea level and its 3rd runway has a length of 1960 feet.
Subject: ['Ardmore Airport (New Zealand)', 'Ardmore Airport (New Zealand)']
Predicate: ['3rdRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['1960', '34.0']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwayLengthFeet __object__ 1960', '__subject__ Ardmore Airport (New Zealand) __predicate__ elevationAboveTheSeaLevel __object__ 34.0']]
Text: The Ardmore Airport in New Zealand is 34 meters above sea level and the 3rd runway is 1960 feet in length.
Subject: ['Ardmore Airport (New Zealand)', 'Ardmore Airport (New Zealand)']
Predicate: ['3rdRunwayLengthFeet', 'elevationAboveTheSeaLevel']
Object: ['1960', '34.0']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Ardmore Airport (New Zealand) __predicate__ runwayLength __object__ 518.0']]
Text: At New Zealand's Ardmore Airport, one of the runways is 518.0 long and the third runway is made of Poaceae.
Subject: ['Ardmore Airport (New Zealand)', 'Ardmore Airport (New Zealand)']
Predicate: ['3rdRunwaySurfaceType', 'runwayLength']
Object: ['Poaceae', '518.0']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Ardmore Airport (New Zealand) __predicate__ runwayLength __object__ 518.0']]
Text: The 3rd runway at Ardmore Airport (New Zealand) is made of Poaceae and has a length of 518.0.
Subject: ['Ardmore Airport (New Zealand)', 'Ardmore Airport (New Zealand)']
Predicate: ['3rdRunwaySurfaceType', 'runwayLength']
Object: ['Poaceae', '518.0']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Ardmore Airport (New Zealand) __predicate__ runwayName __object__ 03L/21R']]
Text: 03L/21R is the runway name of Ardmore Airport in New Zealand where the 3rd runway is made of Poaceae.
Subject: ['Ardmore Airport (New Zealand)', 'Ardmore Airport (New Zealand)']
Predicate: ['3rdRunwaySurfaceType', 'runwayName']
Object: ['Poaceae', '03L/21R']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Ardmore Airport (New Zealand) __predicate__ runwayName __object__ 03L/21R']]
Text: Ardmore Airport (New Zealand)'s runway name is 03L/21R and its surface type is Poaceae.
Subject: ['Ardmore Airport (New Zealand)', 'Ardmore Airport (New Zealand)']
Predicate: ['3rdRunwaySurfaceType', 'runwayName']
Object: ['Poaceae', '03L/21R']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Ardmore Airport (New Zealand) __predicate__ runwayName __object__ 03L/21R']]
Text: New Zealand's Ardmore airport has the runway name 03L/21R. It also has a third runway surface type which is Poaceae.
Subject: ['Ardmore Airport (New Zealand)', 'Ardmore Airport (New Zealand)']
Predicate: ['3rdRunwaySurfaceType', 'runwayName']
Object: ['Poaceae', '03L/21R']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Ardmore Airport (New Zealand) __predicate__ runwayName __object__ 03R/21L']]
Text: Ardmore airport in New Zealand has a runway named 03R/21L and interestingly the third runway is made of Poaceae.
Subject: ['Ardmore Airport (New Zealand)', 'Ardmore Airport (New Zealand)']
Predicate: ['3rdRunwaySurfaceType', 'runwayName']
Object: ['Poaceae', '03R/21L']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Ardmore Airport (New Zealand) __predicate__ runwayName __object__ 03R/21L']]
Text: The 3rd runway at Ardmore Airport (New Zealand), which is called "03R/21L", is made of Poaceae.
Subject: ['Ardmore Airport (New Zealand)', 'Ardmore Airport (New Zealand)']
Predicate: ['3rdRunwaySurfaceType', 'runwayName']
Object: ['Poaceae', '03R/21L']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Ardmore Airport (New Zealand) __predicate__ runwayName __object__ 03R/21L']]
Text: Ardmore Airport (New Zealand)'s 3rd runway surface type is Poaceae and the runway is called "03R/21L".
Subject: ['Ardmore Airport (New Zealand)', 'Ardmore Airport (New Zealand)']
Predicate: ['3rdRunwaySurfaceType', 'runwayName']
Object: ['Poaceae', '03R/21L']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Ardmore Airport (New Zealand) __predicate__ runwayName __object__ 07/25']]
Text: New Zealand's Ardmore Airport has a runway named 07/25 and its 3rd runway has a Poaceae surface.
Subject: ['Ardmore Airport (New Zealand)', 'Ardmore Airport (New Zealand)']
Predicate: ['3rdRunwaySurfaceType', 'runwayName']
Object: ['Poaceae', '07/25']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Poaceae __predicate__ division __object__ Flowering plant']]
Text: The third runway at Ardmore Airport (New Zealand) is made of Poaceae, which belongs to the division of flowering plants.
Subject: ['Ardmore Airport (New Zealand)', 'Poaceae']
Predicate: ['3rdRunwaySurfaceType', 'division']
Object: ['Poaceae', 'Flowering plant']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Poaceae __predicate__ division __object__ Flowering plant']]
Text: New Zealand's Ardmore Airport has a third type of runway surface, Poaceae which belongs to the division of flowering plants.
Subject: ['Ardmore Airport (New Zealand)', 'Poaceae']
Predicate: ['3rdRunwaySurfaceType', 'division']
Object: ['Poaceae', 'Flowering plant']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Poaceae __predicate__ order __object__ Commelinids']]
Text: Ardmore Airport (New Zealand)'s 3rd runway surface type is Poaceae which is of the order Commelinids.
Subject: ['Ardmore Airport (New Zealand)', 'Poaceae']
Predicate: ['3rdRunwaySurfaceType', 'order']
Object: ['Poaceae', 'Commelinids']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Poaceae __predicate__ order __object__ Commelinids']]
Text: New Zealand's Ardmore Airport's 3rd runway is made of poaceae (Commelinids order).
Subject: ['Ardmore Airport (New Zealand)', 'Poaceae']
Predicate: ['3rdRunwaySurfaceType', 'order']
Object: ['Poaceae', 'Commelinids']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Poaceae __predicate__ order __object__ Commelinids']]
Text: The 3rd runway at Ardmore Airport (New Zealand) is made of Poaceae which is of the order of Commelinids.
Subject: ['Ardmore Airport (New Zealand)', 'Poaceae']
Predicate: ['3rdRunwaySurfaceType', 'order']
Object: ['Poaceae', 'Commelinids']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Poaceae __predicate__ order __object__ Poales']]
Text: The 3rd runway at Ardmore Airport (New Zealand) is made of Poaceae, which is of the order Poales.
Subject: ['Ardmore Airport (New Zealand)', 'Poaceae']
Predicate: ['3rdRunwaySurfaceType', 'order']
Object: ['Poaceae', 'Poales']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Poaceae __predicate__ order __object__ Poales']]
Text: The 3rd runway at Ardmore Airport (New Zealand) is made of Poaceae of the Poales order.
Subject: ['Ardmore Airport (New Zealand)', 'Poaceae']
Predicate: ['3rdRunwaySurfaceType', 'order']
Object: ['Poaceae', 'Poales']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae', '__subject__ Poaceae __predicate__ order __object__ Poales']]
Text: The third runway at Ardmore Airport in New Zealand has a surface type known as Poaceae which is of the Poales order.
Subject: ['Ardmore Airport (New Zealand)', 'Poaceae']
Predicate: ['3rdRunwaySurfaceType', 'order']
Object: ['Poaceae', 'Poales']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ location __object__ Auckland', '__subject__ Ardmore Airport (New Zealand) __predicate__ operatingOrganisation __object__ Civil Aviation Authority of New Zealand']]
Text: The Civil Aviation Authority of New Zealand is the operating organisation for Ardmore Airport, located in Auckland, New Zealand.
Subject: ['Ardmore Airport (New Zealand)', 'Ardmore Airport (New Zealand)']
Predicate: ['location', 'operatingOrganisation']
Object: ['Auckland', 'Civil Aviation Authority of New Zealand']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ location __object__ Auckland', '__subject__ Ardmore Airport (New Zealand) __predicate__ operatingOrganisation __object__ Civil Aviation Authority of New Zealand']]
Text: Ardmore Airport is located in Auckland, New Zealand and is operated by the Civil Aviation Authority of New Zealand.
Subject: ['Ardmore Airport (New Zealand)', 'Ardmore Airport (New Zealand)']
Predicate: ['location', 'operatingOrganisation']
Object: ['Auckland', 'Civil Aviation Authority of New Zealand']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ location __object__ Auckland', '__subject__ Ardmore Airport (New Zealand) __predicate__ operatingOrganisation __object__ Civil Aviation Authority of New Zealand']]
Text: The Ardmore Airport which is operated by the Civil Aviation Authority of New Zealand is in Auckland.
Subject: ['Ardmore Airport (New Zealand)', 'Ardmore Airport (New Zealand)']
Predicate: ['location', 'operatingOrganisation']
Object: ['Auckland', 'Civil Aviation Authority of New Zealand']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ operatingOrganisation __object__ Civil Aviation Authority of New Zealand', '__subject__ Civil Aviation Authority of New Zealand __predicate__ location __object__ Wellington']]
Text: The Civil Aviation Authority of Wellington, New Zealand is the operating organisation for Ardmore Airport, New Zealand.
Subject: ['Ardmore Airport (New Zealand)', 'Civil Aviation Authority of New Zealand']
Predicate: ['operatingOrganisation', 'location']
Object: ['Civil Aviation Authority of New Zealand', 'Wellington']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ operatingOrganisation __object__ Civil Aviation Authority of New Zealand', '__subject__ Civil Aviation Authority of New Zealand __predicate__ location __object__ Wellington']]
Text: Ardmore Airport (New Zealand) is operated by the Civil Aviation Authority of New Zealand, located in Wellington.
Subject: ['Ardmore Airport (New Zealand)', 'Civil Aviation Authority of New Zealand']
Predicate: ['operatingOrganisation', 'location']
Object: ['Civil Aviation Authority of New Zealand', 'Wellington']

Triple: [['__subject__ Ardmore Airport (New Zealand) __predicate__ runwayLength __object__ 1411.0', '__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae']]
Text: The runway length of Ardmore Airport in New Zealand is 1,411 and the 3rd runway surface type is poaceae.
Subject: ['Ardmore Airport (New Zealand)', 'Ardmore Airport (New Zealand)']
Predicate: ['runwayLength', '3rdRunwaySurfaceType']
Object: ['1411.0', 'Poaceae']

Triple: [['__subject__ Ashgabat International Airport __predicate__ 3rdRunwayLengthFeet __object__ 2953', '__subject__ Ashgabat International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 211']]
Text: Ashgabat international airport is 211 metres above sea level and the 3rd runway has a length of 2953 feet.
Subject: ['Ashgabat International Airport', 'Ashgabat International Airport']
Predicate: ['3rdRunwayLengthFeet', 'elevationAboveTheSeaLevelInMetres']
Object: ['2953', '211']

Triple: [['__subject__ Ashgabat International Airport __predicate__ 3rdRunwayLengthFeet __object__ 2953', '__subject__ Ashgabat International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 211']]
Text: The Ashgabat International Airport is 211 metres above sea level and its 3rd runway has length of 2953 feet.
Subject: ['Ashgabat International Airport', 'Ashgabat International Airport']
Predicate: ['3rdRunwayLengthFeet', 'elevationAboveTheSeaLevelInMetres']
Object: ['2953', '211']

Triple: [['__subject__ Ashgabat International Airport __predicate__ 3rdRunwayLengthFeet __object__ 2953', '__subject__ Ashgabat International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 211']]
Text: Ashgabat International Airport's is 211 metres above sea level and its 3rd runway is 2953 ft in length.
Subject: ['Ashgabat International Airport', 'Ashgabat International Airport']
Predicate: ['3rdRunwayLengthFeet', 'elevationAboveTheSeaLevelInMetres']
Object: ['2953', '211']

Triple: [['__subject__ Ashgabat International Airport __predicate__ icaoLocationIdentifier __object__ UTAA', '__subject__ Ashgabat International Airport __predicate__ iataLocationIdentifier __object__ ASB']]
Text: The ICAO Location Identifier of Ashgabat International Airport is UTAA and the IATA location is ASB.
Subject: ['Ashgabat International Airport', 'Ashgabat International Airport']
Predicate: ['icaoLocationIdentifier', 'iataLocationIdentifier']
Object: ['UTAA', 'ASB']

Triple: [['__subject__ Ashgabat International Airport __predicate__ icaoLocationIdentifier __object__ UTAA', '__subject__ Ashgabat International Airport __predicate__ iataLocationIdentifier __object__ ASB']]
Text: UTAA is the ICAO Location Identifier of Ashgabat International Airport and ASB is the IATA identifier.
Subject: ['Ashgabat International Airport', 'Ashgabat International Airport']
Predicate: ['icaoLocationIdentifier', 'iataLocationIdentifier']
Object: ['UTAA', 'ASB']

Triple: [['__subject__ Ashgabat International Airport __predicate__ icaoLocationIdentifier __object__ UTAA', '__subject__ Ashgabat International Airport __predicate__ iataLocationIdentifier __object__ ASB']]
Text: Ashgabat International airport has an ICAO location identifier of UTAA, and an IATA location identifier of ASB.
Subject: ['Ashgabat International Airport', 'Ashgabat International Airport']
Predicate: ['icaoLocationIdentifier', 'iataLocationIdentifier']
Object: ['UTAA', 'ASB']

Triple: [['__subject__ Ashgabat International Airport __predicate__ location __object__ Ashgabat', '__subject__ Ashgabat International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 211']]
Text: Ashgabat International Airport is located in Ashgabat and it is 211 metres above sea level.
Subject: ['Ashgabat International Airport', 'Ashgabat International Airport']
Predicate: ['location', 'elevationAboveTheSeaLevelInMetres']
Object: ['Ashgabat', '211']

Triple: [['__subject__ Ashgabat International Airport __predicate__ location __object__ Ashgabat', '__subject__ Ashgabat International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 211']]
Text: Ashgabat International Airport in Ashgabat is 211 m above sea level.
Subject: ['Ashgabat International Airport', 'Ashgabat International Airport']
Predicate: ['location', 'elevationAboveTheSeaLevelInMetres']
Object: ['Ashgabat', '211']

Triple: [['__subject__ Ashgabat International Airport __predicate__ operatingOrganisation __object__ Turkmenistan Airlines', '__subject__ Ashgabat International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 211']]
Text: Ashgabat International Airport is operated by Turkmenistan Airlines and it is 211 metres above sea level.
Subject: ['Ashgabat International Airport', 'Ashgabat International Airport']
Predicate: ['operatingOrganisation', 'elevationAboveTheSeaLevelInMetres']
Object: ['Turkmenistan Airlines', '211']

Triple: [['__subject__ Ashgabat International Airport __predicate__ operatingOrganisation __object__ Turkmenistan Airlines', '__subject__ Ashgabat International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 211']]
Text: The operating organization for Ashgabat International Airport which is elevated 211 metres above sea level is called Turkmenistan Airlines.
Subject: ['Ashgabat International Airport', 'Ashgabat International Airport']
Predicate: ['operatingOrganisation', 'elevationAboveTheSeaLevelInMetres']
Object: ['Turkmenistan Airlines', '211']

Triple: [['__subject__ Ashgabat International Airport __predicate__ operatingOrganisation __object__ Turkmenistan Airlines', '__subject__ Ashgabat International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 211']]
Text: Ashgabat International Airport is operated by Turkmenistan Airlines, it is 211m above sea level.
Subject: ['Ashgabat International Airport', 'Ashgabat International Airport']
Predicate: ['operatingOrganisation', 'elevationAboveTheSeaLevelInMetres']
Object: ['Turkmenistan Airlines', '211']

Triple: [['__subject__ Ashgabat International Airport __predicate__ operatingOrganisation __object__ Turkmenistan Airlines', '__subject__ Turkmenistan Airlines __predicate__ headquarter __object__ Ashgabat']]
Text: The operating organization for Ashgabat International Airport is called Turkmenistan Airlines who have their headquarters in Ashgabat.
Subject: ['Ashgabat International Airport', 'Turkmenistan Airlines']
Predicate: ['operatingOrganisation', 'headquarter']
Object: ['Turkmenistan Airlines', 'Ashgabat']

Triple: [['__subject__ Ashgabat International Airport __predicate__ operatingOrganisation __object__ Turkmenistan Airlines', '__subject__ Turkmenistan Airlines __predicate__ headquarter __object__ Ashgabat']]
Text: Ashgabat International Airport is operated by Turkmenistan Airlines, whose headquarters are located in Ashgabat.
Subject: ['Ashgabat International Airport', 'Turkmenistan Airlines']
Predicate: ['operatingOrganisation', 'headquarter']
Object: ['Turkmenistan Airlines', 'Ashgabat']

Triple: [['__subject__ Ashgabat International Airport __predicate__ operatingOrganisation __object__ Turkmenistan Airlines', '__subject__ Turkmenistan Airlines __predicate__ hubAirport __object__ Turkmenabat Airport']]
Text: Ashgabat International Airport is operated by Turkmenistan Airlines whose hub airport is Turkmenabat Airport.
Subject: ['Ashgabat International Airport', 'Turkmenistan Airlines']
Predicate: ['operatingOrganisation', 'hubAirport']
Object: ['Turkmenistan Airlines', 'Turkmenabat Airport']

Triple: [['__subject__ Ashgabat International Airport __predicate__ operatingOrganisation __object__ Turkmenistan Airlines', '__subject__ Turkmenistan Airlines __predicate__ hubAirport __object__ Turkmenbashi International Airport']]
Text: Ashgabat International Airport is operated by Turkmenistan Airlines which has Turkmenbashi International Airport as its hub.
Subject: ['Ashgabat International Airport', 'Turkmenistan Airlines']
Predicate: ['operatingOrganisation', 'hubAirport']
Object: ['Turkmenistan Airlines', 'Turkmenbashi International Airport']

Triple: [['__subject__ Ashgabat International Airport __predicate__ operatingOrganisation __object__ Turkmenistan Airlines', '__subject__ Turkmenistan Airlines __predicate__ hubAirport __object__ Turkmenbashi International Airport']]
Text: Ashgabat International Airport is operated by Turkmenistan Airlines whose hub airport is Turkmenbashi International Airport.
Subject: ['Ashgabat International Airport', 'Turkmenistan Airlines']
Predicate: ['operatingOrganisation', 'hubAirport']
Object: ['Turkmenistan Airlines', 'Turkmenbashi International Airport']

Triple: [['__subject__ Ashgabat International Airport __predicate__ operatingOrganisation __object__ Turkmenistan Airlines', '__subject__ Turkmenistan Airlines __predicate__ hubAirport __object__ Turkmenbashi International Airport']]
Text: The hub airport for Turkmenistan Airlines, who are the operating organisation for Ashgabat International Airport, is Turkmenbashi International Airport.
Subject: ['Ashgabat International Airport', 'Turkmenistan Airlines']
Predicate: ['operatingOrganisation', 'hubAirport']
Object: ['Turkmenistan Airlines', 'Turkmenbashi International Airport']

Triple: [['__subject__ Ashgabat International Airport __predicate__ runwayLength __object__ 2989.0', '__subject__ Ashgabat International Airport __predicate__ location __object__ Ashgabat']]
Text: Ashgabat is the location of Ashgabat International Airport and has a runway length of 2989m.
Subject: ['Ashgabat International Airport', 'Ashgabat International Airport']
Predicate: ['runwayLength', 'location']
Object: ['2989.0', 'Ashgabat']

Triple: [['__subject__ Ashgabat International Airport __predicate__ runwayLength __object__ 2989.0', '__subject__ Ashgabat International Airport __predicate__ location __object__ Ashgabat']]
Text: Ashgabat International Airport is located in Ashgabat and has a runway length of 2989 metres.
Subject: ['Ashgabat International Airport', 'Ashgabat International Airport']
Predicate: ['runwayLength', 'location']
Object: ['2989.0', 'Ashgabat']

Triple: [['__subject__ Ashgabat International Airport __predicate__ runwayLength __object__ 2989.0', '__subject__ Ashgabat International Airport __predicate__ location __object__ Ashgabat']]
Text: Ashgabat International Airport in Ashgabat has a runway length of 2989.
Subject: ['Ashgabat International Airport', 'Ashgabat International Airport']
Predicate: ['runwayLength', 'location']
Object: ['2989.0', 'Ashgabat']

Triple: [['__subject__ Athens __predicate__ mayor __object__ Giorgos Kaminis', '__subject__ Athens International Airport __predicate__ cityServed __object__ Athens']]
Text: Athens International Airport serves the city of Athens, where the mayor is Giorgos Kaminis.
Subject: ['Athens', 'Athens International Airport']
Predicate: ['mayor', 'cityServed']
Object: ['Giorgos Kaminis', 'Athens']

Triple: [['__subject__ Athens __predicate__ mayor __object__ Giorgos Kaminis', '__subject__ Athens International Airport __predicate__ cityServed __object__ Athens']]
Text: The Athens International Airport serves the city of Athens where the mayor is Giorgos Kaminis.
Subject: ['Athens', 'Athens International Airport']
Predicate: ['mayor', 'cityServed']
Object: ['Giorgos Kaminis', 'Athens']

Triple: [['__subject__ Athens __predicate__ mayor __object__ Giorgos Kaminis', '__subject__ Athens International Airport __predicate__ cityServed __object__ Athens']]
Text: Athens International Airport serves the city of Athens where the mayor is Giorgos Kaminis.
Subject: ['Athens', 'Athens International Airport']
Predicate: ['mayor', 'cityServed']
Object: ['Giorgos Kaminis', 'Athens']

Triple: [['__subject__ Athens International Airport __predicate__ cityServed __object__ Athens', '__subject__ Athens __predicate__ country __object__ Greece']]
Text: The Athens International Airport serves the city of Athens which is a city in Greece.
Subject: ['Athens International Airport', 'Athens']
Predicate: ['cityServed', 'country']
Object: ['Athens', 'Greece']

Triple: [['__subject__ Athens International Airport __predicate__ cityServed __object__ Athens', '__subject__ Athens __predicate__ country __object__ Greece']]
Text: Athens International Airport serves the city of Athens, Greece.
Subject: ['Athens International Airport', 'Athens']
Predicate: ['cityServed', 'country']
Object: ['Athens', 'Greece']

Triple: [['__subject__ Athens International Airport __predicate__ cityServed __object__ Athens', '__subject__ Athens International Airport __predicate__ runwayLength __object__ 4000.0']]
Text: The Athens international airport serves the city of Athens and has a runway length of 4000.
Subject: ['Athens International Airport', 'Athens International Airport']
Predicate: ['cityServed', 'runwayLength']
Object: ['Athens', '4000.0']

Triple: [['__subject__ Athens International Airport __predicate__ cityServed __object__ Athens', '__subject__ Athens International Airport __predicate__ runwayLength __object__ 4000.0']]
Text: Athens International Airport serves the city of Athens and its runway length is 4000.
Subject: ['Athens International Airport', 'Athens International Airport']
Predicate: ['cityServed', 'runwayLength']
Object: ['Athens', '4000.0']

Triple: [['__subject__ Athens International Airport __predicate__ location __object__ Spata', '__subject__ Athens International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 94']]
Text: Athens International Airport is located in Spata and is 94 metres above sea level.
Subject: ['Athens International Airport', 'Athens International Airport']
Predicate: ['location', 'elevationAboveTheSeaLevelInMetres']
Object: ['Spata', '94']

Triple: [['__subject__ Athens International Airport __predicate__ location __object__ Spata', '__subject__ Athens International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 94']]
Text: Athens International Airport, which is 94 metres above sea level, is in Spata.
Subject: ['Athens International Airport', 'Athens International Airport']
Predicate: ['location', 'elevationAboveTheSeaLevelInMetres']
Object: ['Spata', '94']

Triple: [['__subject__ Athens International Airport __predicate__ location __object__ Spata', '__subject__ Athens International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 94']]
Text: Athens International Airport is located in Spata, at 94 m above the sea level.
Subject: ['Athens International Airport', 'Athens International Airport']
Predicate: ['location', 'elevationAboveTheSeaLevelInMetres']
Object: ['Spata', '94']

Triple: [['__subject__ Atlantic City International Airport __predicate__ cityServed __object__ Atlantic City, New Jersey', '__subject__ Atlantic City, New Jersey __predicate__ leader __object__ Don Guardian']]
Text: Atlantic City International Airport serves the city of Atlantic City, New Jersey and has Don Guardian as its leader.
Subject: ['Atlantic City International Airport', 'Atlantic City, New Jersey']
Predicate: ['cityServed', 'leader']
Object: ['Atlantic City, New Jersey', 'Don Guardian']

Triple: [['__subject__ Atlantic City International Airport __predicate__ cityServed __object__ Atlantic City, New Jersey', '__subject__ Atlantic City, New Jersey __predicate__ leader __object__ Don Guardian']]
Text: Atlantic City, N.J., which is led by Don Guardian, is served by the Atlantic City International Airport.
Subject: ['Atlantic City International Airport', 'Atlantic City, New Jersey']
Predicate: ['cityServed', 'leader']
Object: ['Atlantic City, New Jersey', 'Don Guardian']

Triple: [['__subject__ Atlantic City International Airport __predicate__ location __object__ Egg Harbor Township, New Jersey', '__subject__ Egg Harbor Township, New Jersey __predicate__ isPartOf __object__ Atlantic County, New Jersey']]
Text: Atlantic City International Airport is in Egg Harbor Township which is part of Atlantic County, New Jersey.
Subject: ['Atlantic City International Airport', 'Egg Harbor Township, New Jersey']
Predicate: ['location', 'isPartOf']
Object: ['Egg Harbor Township, New Jersey', 'Atlantic County, New Jersey']

Triple: [['__subject__ Atlantic City International Airport __predicate__ location __object__ Egg Harbor Township, New Jersey', '__subject__ Egg Harbor Township, New Jersey __predicate__ isPartOf __object__ Atlantic County, New Jersey']]
Text: Atlantic City International Airport is located at Egg Harbour Township, which is located in Atlantic County, New Jersey, United States.
Subject: ['Atlantic City International Airport', 'Egg Harbor Township, New Jersey']
Predicate: ['location', 'isPartOf']
Object: ['Egg Harbor Township, New Jersey', 'Atlantic County, New Jersey']

Triple: [['__subject__ Atlantic City International Airport __predicate__ location __object__ Egg Harbor Township, New Jersey', '__subject__ Egg Harbor Township, New Jersey __predicate__ isPartOf __object__ Atlantic County, New Jersey']]
Text: Atlantic City International Airport is in Egg Harbor Township, NJ, which is part of Atlantic County.
Subject: ['Atlantic City International Airport', 'Egg Harbor Township, New Jersey']
Predicate: ['location', 'isPartOf']
Object: ['Egg Harbor Township, New Jersey', 'Atlantic County, New Jersey']

Triple: [['__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey', '__subject__ Atlantic City International Airport __predicate__ elevationAboveTheSeaLevel __object__ 23.0']]
Text: Atlantic City International Airport is operated by the Port Authority of New York and New Jersey and is 23.0 metres above sea level.
Subject: ['Atlantic City International Airport', 'Atlantic City International Airport']
Predicate: ['operatingOrganisation', 'elevationAboveTheSeaLevel']
Object: ['Port Authority of New York and New Jersey', '23.0']

Triple: [['__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey', '__subject__ Atlantic City International Airport __predicate__ elevationAboveTheSeaLevel __object__ 23.0']]
Text: The Atlantic City International Airport is run by the Port Authority of New York and New Jersey and is 23 m above sea level.
Subject: ['Atlantic City International Airport', 'Atlantic City International Airport']
Predicate: ['operatingOrganisation', 'elevationAboveTheSeaLevel']
Object: ['Port Authority of New York and New Jersey', '23.0']

Triple: [['__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey', '__subject__ Atlantic City International Airport __predicate__ elevationAboveTheSeaLevel __object__ 23.0']]
Text: Atlantic City International Airport is 23.0 metres above sea level and is operated by the Port Authority of New York and New Jersey.
Subject: ['Atlantic City International Airport', 'Atlantic City International Airport']
Predicate: ['operatingOrganisation', 'elevationAboveTheSeaLevel']
Object: ['Port Authority of New York and New Jersey', '23.0']

Triple: [['__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey', '__subject__ Atlantic City International Airport __predicate__ runwayName __object__ 13/31']]
Text: 13/31 is the name of a runway at Atlantic City International Airport, operated by Port Authorities of New York and New Jersey.
Subject: ['Atlantic City International Airport', 'Atlantic City International Airport']
Predicate: ['operatingOrganisation', 'runwayName']
Object: ['Port Authority of New York and New Jersey', '13/31']

Triple: [['__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey', '__subject__ Atlantic City International Airport __predicate__ runwayName __object__ 13/31']]
Text: The Port Authority of New York and New Jersey is the operating organisation of Atlantic City International airport, which has the runway name of 13/31.
Subject: ['Atlantic City International Airport', 'Atlantic City International Airport']
Predicate: ['operatingOrganisation', 'runwayName']
Object: ['Port Authority of New York and New Jersey', '13/31']

Triple: [['__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey', '__subject__ Atlantic City International Airport __predicate__ runwayName __object__ 13/31']]
Text: Atlantic City International Airport, operated by the Port Authority of New York and New Jersey, has a runway named "13/31".
Subject: ['Atlantic City International Airport', 'Atlantic City International Airport']
Predicate: ['operatingOrganisation', 'runwayName']
Object: ['Port Authority of New York and New Jersey', '13/31']

Triple: [['__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey', '__subject__ Port Authority of New York and New Jersey __predicate__ headquarter __object__ Four World Trade Center']]
Text: The Atlantic City International Airport is operated by the Port Authority of New York and New Jersey, which has its headquarters at the Four World Trade Centre.
Subject: ['Atlantic City International Airport', 'Port Authority of New York and New Jersey']
Predicate: ['operatingOrganisation', 'headquarter']
Object: ['Port Authority of New York and New Jersey', 'Four World Trade Center']

Triple: [['__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey', '__subject__ Port Authority of New York and New Jersey __predicate__ headquarter __object__ Four World Trade Center']]
Text: The Port Authority of New York and New Jersey is based at the Four World Trade Centre and operates Atlantic City international airport.
Subject: ['Atlantic City International Airport', 'Port Authority of New York and New Jersey']
Predicate: ['operatingOrganisation', 'headquarter']
Object: ['Port Authority of New York and New Jersey', 'Four World Trade Center']

Triple: [['__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey', '__subject__ Port Authority of New York and New Jersey __predicate__ headquarter __object__ New York']]
Text: The Atlantic City International Airport is operated by the Port Authority of New York and New Jersey, based in New York.
Subject: ['Atlantic City International Airport', 'Port Authority of New York and New Jersey']
Predicate: ['operatingOrganisation', 'headquarter']
Object: ['Port Authority of New York and New Jersey', 'New York']

Triple: [['__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey', '__subject__ Port Authority of New York and New Jersey __predicate__ headquarter __object__ New York']]
Text: The Port Authority of New York and New Jersey, headquartered in New York, is the operating organisation of Atlantic City International airport.
Subject: ['Atlantic City International Airport', 'Port Authority of New York and New Jersey']
Predicate: ['operatingOrganisation', 'headquarter']
Object: ['Port Authority of New York and New Jersey', 'New York']

Triple: [['__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey', '__subject__ Port Authority of New York and New Jersey __predicate__ headquarter __object__ New York']]
Text: The Port Authority of New York and New Jersey is the operating organisation of Atlantic City International airport with its headquarters in New York.
Subject: ['Atlantic City International Airport', 'Port Authority of New York and New Jersey']
Predicate: ['operatingOrganisation', 'headquarter']
Object: ['Port Authority of New York and New Jersey', 'New York']

Triple: [['__subject__ Atlantic City International Airport __predicate__ owner __object__ South Jersey Transportation Authority', '__subject__ South Jersey Transportation Authority __predicate__ chief __object__ Stephen Dilts']]
Text: Atlantic City International Airport is owned by South Jersey Transportation Authority whose chief is Stephen Dilts.
Subject: ['Atlantic City International Airport', 'South Jersey Transportation Authority']
Predicate: ['owner', 'chief']
Object: ['South Jersey Transportation Authority', 'Stephen Dilts']

Triple: [['__subject__ Atlantic City International Airport __predicate__ owner __object__ South Jersey Transportation Authority', '__subject__ South Jersey Transportation Authority __predicate__ chief __object__ Stephen Dilts']]
Text: Atlantic City International Airport owned by South Jersey Transportation Authority whose chief is Stephen Dilts.
Subject: ['Atlantic City International Airport', 'South Jersey Transportation Authority']
Predicate: ['owner', 'chief']
Object: ['South Jersey Transportation Authority', 'Stephen Dilts']

Triple: [['__subject__ Atlantic City International Airport __predicate__ owner __object__ South Jersey Transportation Authority', '__subject__ South Jersey Transportation Authority __predicate__ leader __object__ Stephen Dilts']]
Text: Atlantic City International Airport is owned by the South Jersey Transportation Authority whose leader is Stephen Dilts.
Subject: ['Atlantic City International Airport', 'South Jersey Transportation Authority']
Predicate: ['owner', 'leader']
Object: ['South Jersey Transportation Authority', 'Stephen Dilts']

Triple: [['__subject__ Atlantic City International Airport __predicate__ owner __object__ South Jersey Transportation Authority', '__subject__ South Jersey Transportation Authority __predicate__ leader __object__ Stephen Dilts']]
Text: Atlantic City International Airport owner is South Jersey Transportation Authority headed by Stephen Dilts .
Subject: ['Atlantic City International Airport', 'South Jersey Transportation Authority']
Predicate: ['owner', 'leader']
Object: ['South Jersey Transportation Authority', 'Stephen Dilts']

Triple: [['__subject__ Atlantic City International Airport __predicate__ owner __object__ South Jersey Transportation Authority', '__subject__ South Jersey Transportation Authority __predicate__ leader __object__ Stephen Dilts']]
Text: Atlantic City International Airport is owned by the South Jersey Transportation Authority which is headed by Stephen Dilts.
Subject: ['Atlantic City International Airport', 'South Jersey Transportation Authority']
Predicate: ['owner', 'leader']
Object: ['South Jersey Transportation Authority', 'Stephen Dilts']

Triple: [['__subject__ Atlantic City International Airport __predicate__ runwayLength __object__ 1873.0', '__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey']]
Text: The Atlantic City International Airport is operated by the Port Authority of New York and New Jersey, its runway length is 1,873.
Subject: ['Atlantic City International Airport', 'Atlantic City International Airport']
Predicate: ['runwayLength', 'operatingOrganisation']
Object: ['1873.0', 'Port Authority of New York and New Jersey']

Triple: [['__subject__ Atlantic City International Airport __predicate__ runwayLength __object__ 1873.0', '__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey']]
Text: The Port Authority of New York and New Jersey is the operating organisation of Atlantic City International airport, where the runway length is 1873.
Subject: ['Atlantic City International Airport', 'Atlantic City International Airport']
Predicate: ['runwayLength', 'operatingOrganisation']
Object: ['1873.0', 'Port Authority of New York and New Jersey']

Triple: [['__subject__ Atlantic City International Airport __predicate__ runwayLength __object__ 1873.0', '__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey']]
Text: Atlantic City International Airport, run by the Port Authority of New York and New Jersey, has a runway length of 1,873.
Subject: ['Atlantic City International Airport', 'Atlantic City International Airport']
Predicate: ['runwayLength', 'operatingOrganisation']
Object: ['1873.0', 'Port Authority of New York and New Jersey']

Triple: [['__subject__ ENAIRE __predicate__ city __object__ Madrid', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ operatingOrganisation __object__ ENAIRE']]
Text: ENAIRE is the operating organisation for Adolfo Suarez Madrid-Barajas airport in Madrid.
Subject: ['ENAIRE', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['city', 'operatingOrganisation']
Object: ['Madrid', 'ENAIRE']

Triple: [['__subject__ ENAIRE __predicate__ city __object__ Madrid', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ operatingOrganisation __object__ ENAIRE']]
Text: Adolfo Suarez Madrid-Barajas Airport is operated by ENAIRE, Madrid.
Subject: ['ENAIRE', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['city', 'operatingOrganisation']
Object: ['Madrid', 'ENAIRE']

Triple: [['__subject__ ENAIRE __predicate__ city __object__ Madrid', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ operatingOrganisation __object__ ENAIRE']]
Text: The Adolfo Suárez Madrid–Barajas Airport is operated by ENAIRE in Madrid.
Subject: ['ENAIRE', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['city', 'operatingOrganisation']
Object: ['Madrid', 'ENAIRE']

Triple: [['__subject__ Egg Harbor Township, New Jersey __predicate__ isPartOf __object__ New Jersey', '__subject__ Atlantic City International Airport __predicate__ location __object__ Egg Harbor Township, New Jersey']]
Text: Atlantic City International Airport can be found in New Jersey in Egg Harbor Township.
Subject: ['Egg Harbor Township, New Jersey', 'Atlantic City International Airport']
Predicate: ['isPartOf', 'location']
Object: ['New Jersey', 'Egg Harbor Township, New Jersey']

Triple: [['__subject__ Egg Harbor Township, New Jersey __predicate__ isPartOf __object__ New Jersey', '__subject__ Atlantic City International Airport __predicate__ location __object__ Egg Harbor Township, New Jersey']]
Text: Atlantic City International Airport is located in Egg Harbor Township, in New Jersey.
Subject: ['Egg Harbor Township, New Jersey', 'Atlantic City International Airport']
Predicate: ['isPartOf', 'location']
Object: ['New Jersey', 'Egg Harbor Township, New Jersey']

Triple: [['__subject__ Egg Harbor Township, New Jersey __predicate__ isPartOf __object__ New Jersey', '__subject__ Atlantic City International Airport __predicate__ location __object__ Egg Harbor Township, New Jersey']]
Text: Atlantic City International Airport is located in Egg Harbor Township in New Jersey.
Subject: ['Egg Harbor Township, New Jersey', 'Atlantic City International Airport']
Predicate: ['isPartOf', 'location']
Object: ['New Jersey', 'Egg Harbor Township, New Jersey']

Triple: [['__subject__ Flemish Government __predicate__ jurisdiction __object__ Flemish Region', '__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish Government']]
Text: Antwerp international airport is operated by the Flemish government which has full jurisdiction of the Flemish region.
Subject: ['Flemish Government', 'Antwerp International Airport']
Predicate: ['jurisdiction', 'operatingOrganisation']
Object: ['Flemish Region', 'Flemish Government']

Triple: [['__subject__ Flemish Government __predicate__ jurisdiction __object__ Flemish Region', '__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish Government']]
Text: Antwerp International Airport is operated by the Flemish government, which has jurisdiction over the Flemish Region.
Subject: ['Flemish Government', 'Antwerp International Airport']
Predicate: ['jurisdiction', 'operatingOrganisation']
Object: ['Flemish Region', 'Flemish Government']

Triple: [['__subject__ Flemish Government __predicate__ jurisdiction __object__ Flemish Region', '__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish Government']]
Text: The operating organisation of Antwerp International airport is the Flemish government who have jurisdiction of the Flemish Region.
Subject: ['Flemish Government', 'Antwerp International Airport']
Predicate: ['jurisdiction', 'operatingOrganisation']
Object: ['Flemish Region', 'Flemish Government']

Triple: [['__subject__ Indian Air Force __predicate__ aircraftHelicopter __object__ HAL Light Combat Helicopter', '__subject__ Agra Airport __predicate__ operatingOrganisation __object__ Indian Air Force']]
Text: India's Air Force has a helicopter known as the HAL Light Combat Helicopter and also operates Agra Airport.
Subject: ['Indian Air Force', 'Agra Airport']
Predicate: ['aircraftHelicopter', 'operatingOrganisation']
Object: ['HAL Light Combat Helicopter', 'Indian Air Force']

Triple: [['__subject__ Indian Air Force __predicate__ aircraftHelicopter __object__ HAL Light Combat Helicopter', '__subject__ Agra Airport __predicate__ operatingOrganisation __object__ Indian Air Force']]
Text: The HAL Light Combat Helicopter is a Helicopter used by the Indian Air Force who operates the Agra Airport.
Subject: ['Indian Air Force', 'Agra Airport']
Predicate: ['aircraftHelicopter', 'operatingOrganisation']
Object: ['HAL Light Combat Helicopter', 'Indian Air Force']

Triple: [['__subject__ Indian Air Force __predicate__ aircraftHelicopter __object__ HAL Light Combat Helicopter', '__subject__ Agra Airport __predicate__ operatingOrganisation __object__ Indian Air Force']]
Text: The operating organization for Agra Airport is the Indian Air Force who use the HAL Light Combat Helicopter.
Subject: ['Indian Air Force', 'Agra Airport']
Predicate: ['aircraftHelicopter', 'operatingOrganisation']
Object: ['HAL Light Combat Helicopter', 'Indian Air Force']

Triple: [['__subject__ Lahore __predicate__ country __object__ Pakistan', '__subject__ Allama Iqbal International Airport __predicate__ cityServed __object__ Lahore']]
Text: The Allama Iqbal International airport serves the city of Lahore in Pakistan.
Subject: ['Lahore', 'Allama Iqbal International Airport']
Predicate: ['country', 'cityServed']
Object: ['Pakistan', 'Lahore']

Triple: [['__subject__ Lahore __predicate__ country __object__ Pakistan', '__subject__ Allama Iqbal International Airport __predicate__ cityServed __object__ Lahore']]
Text: The city of Lahore in Pakistan is served by Allama Iqbal International airport.
Subject: ['Lahore', 'Allama Iqbal International Airport']
Predicate: ['country', 'cityServed']
Object: ['Pakistan', 'Lahore']

Triple: [['__subject__ Lake Placid, New York __predicate__ isPartOf __object__ Essex County, New York', '__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Lake Placid, New York']]
Text: Adirondack Regional Airport serves the city of Lake Placid, New York which is part of Essex County, New York.
Subject: ['Lake Placid, New York', 'Adirondack Regional Airport']
Predicate: ['isPartOf', 'cityServed']
Object: ['Essex County, New York', 'Lake Placid, New York']

Triple: [['__subject__ Lake Placid, New York __predicate__ isPartOf __object__ Essex County, New York', '__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Lake Placid, New York']]
Text: Lake Placid, New York is part of Essex County, NY and it is served by the Adirondack Regional Airport.
Subject: ['Lake Placid, New York', 'Adirondack Regional Airport']
Predicate: ['isPartOf', 'cityServed']
Object: ['Essex County, New York', 'Lake Placid, New York']

Triple: [['__subject__ Lake Placid, New York __predicate__ isPartOf __object__ Essex County, New York', '__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Lake Placid, New York']]
Text: Lake Placid, is part of Essex County, New York and is served by the Adirondack Regional Airport.
Subject: ['Lake Placid, New York', 'Adirondack Regional Airport']
Predicate: ['isPartOf', 'cityServed']
Object: ['Essex County, New York', 'Lake Placid, New York']

Triple: [['__subject__ Lake Placid, New York __predicate__ isPartOf __object__ New York', '__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Lake Placid, New York']]
Text: Lake Placid, New York is part of New York and is served by the Adirondack Regional Airport.
Subject: ['Lake Placid, New York', 'Adirondack Regional Airport']
Predicate: ['isPartOf', 'cityServed']
Object: ['New York', 'Lake Placid, New York']

Triple: [['__subject__ Lake Placid, New York __predicate__ isPartOf __object__ New York', '__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Lake Placid, New York']]
Text: Adirondack Regional Airport serves the city of Lake Placid which is in and is a part of New York.
Subject: ['Lake Placid, New York', 'Adirondack Regional Airport']
Predicate: ['isPartOf', 'cityServed']
Object: ['New York', 'Lake Placid, New York']

Triple: [['__subject__ Madrid __predicate__ isPartOf __object__ Community of Madrid', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Madrid']]
Text: Adolfo Suarez Madrid-Barajas Airport is located in Madrid, which is part of the community of Madrid.
Subject: ['Madrid', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['isPartOf', 'location']
Object: ['Community of Madrid', 'Madrid']

Triple: [['__subject__ Madrid __predicate__ isPartOf __object__ Community of Madrid', '__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Madrid']]
Text: The Adolfo Suárez Madrid–Barajas Airport is in Madrid, which is part of the community known by the same name.
Subject: ['Madrid', 'Adolfo Suárez Madrid–Barajas Airport']
Predicate: ['isPartOf', 'location']
Object: ['Community of Madrid', 'Madrid']

Triple: [['__subject__ Maple Ridge Township, Alpena County, Michigan __predicate__ isPartOf __object__ United States', '__subject__ Alpena County Regional Airport __predicate__ location __object__ Maple Ridge Township, Alpena County, Michigan']]
Text: Maple Ridge Township, Alpena County, Michigan is in the United States. The Alpena County Regional Airport is located there.
Subject: ['Maple Ridge Township, Alpena County, Michigan', 'Alpena County Regional Airport']
Predicate: ['isPartOf', 'location']
Object: ['United States', 'Maple Ridge Township, Alpena County, Michigan']

Triple: [['__subject__ Maple Ridge Township, Alpena County, Michigan __predicate__ isPartOf __object__ United States', '__subject__ Alpena County Regional Airport __predicate__ location __object__ Maple Ridge Township, Alpena County, Michigan']]
Text: Alpena County Regional Airport is located in the United States in the Maple Ridge Township, Alpena County, Michigan.
Subject: ['Maple Ridge Township, Alpena County, Michigan', 'Alpena County Regional Airport']
Predicate: ['isPartOf', 'location']
Object: ['United States', 'Maple Ridge Township, Alpena County, Michigan']

Triple: [['__subject__ Maple Ridge Township, Alpena County, Michigan __predicate__ isPartOf __object__ United States', '__subject__ Alpena County Regional Airport __predicate__ location __object__ Maple Ridge Township, Alpena County, Michigan']]
Text: Alpena County Regional Airport is located in Maple Ridge Township, Alpena County, Michigan, USA.
Subject: ['Maple Ridge Township, Alpena County, Michigan', 'Alpena County Regional Airport']
Predicate: ['isPartOf', 'location']
Object: ['United States', 'Maple Ridge Township, Alpena County, Michigan']

Triple: [['__subject__ Poaceae __predicate__ class __object__ Monocotyledon', '__subject__ Ardmore Airport (New Zealand) __predicate__ 2ndRunwaySurfaceType __object__ Poaceae']]
Text: The 2nd runway at Ardmore Airport (New Zealand) is made of Poaceae, which is classed as a Monocotyledon.
Subject: ['Poaceae', 'Ardmore Airport (New Zealand)']
Predicate: ['class', '2ndRunwaySurfaceType']
Object: ['Monocotyledon', 'Poaceae']

Triple: [['__subject__ Poaceae __predicate__ class __object__ Monocotyledon', '__subject__ Ardmore Airport (New Zealand) __predicate__ 2ndRunwaySurfaceType __object__ Poaceae']]
Text: Poaceae, of the class Monocotyledon, is the surface type of the second runway at Ardmore Airport, New Zealand.
Subject: ['Poaceae', 'Ardmore Airport (New Zealand)']
Predicate: ['class', '2ndRunwaySurfaceType']
Object: ['Monocotyledon', 'Poaceae']

Triple: [['__subject__ Poaceae __predicate__ class __object__ Monocotyledon', '__subject__ Ardmore Airport (New Zealand) __predicate__ 2ndRunwaySurfaceType __object__ Poaceae']]
Text: Poaceae is in the class Monocotyledon and is used as the surface of the second runway of Ardmore Airport, New Zealand.
Subject: ['Poaceae', 'Ardmore Airport (New Zealand)']
Predicate: ['class', '2ndRunwaySurfaceType']
Object: ['Monocotyledon', 'Poaceae']

Triple: [['__subject__ Poaceae __predicate__ division __object__ Flowering plant', '__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae']]
Text: The surface of the 1st runway at Alderney Airport is covered with poaceae, which belongs to the division of flowering plants.
Subject: ['Poaceae', 'Alderney Airport']
Predicate: ['division', '1stRunwaySurfaceType']
Object: ['Flowering plant', 'Poaceae']

Triple: [['__subject__ Poaceae __predicate__ division __object__ Flowering plant', '__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae']]
Text: The 1st runway at Alderney Airport is made from Poaceae which belongs to the division of flowering plants.
Subject: ['Poaceae', 'Alderney Airport']
Predicate: ['division', '1stRunwaySurfaceType']
Object: ['Flowering plant', 'Poaceae']

Triple: [['__subject__ Poaceae __predicate__ division __object__ Flowering plant', '__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae']]
Text: The surface of the 1st runway at Alderney airport is poaceae which is a type of flowering plant.
Subject: ['Poaceae', 'Alderney Airport']
Predicate: ['division', '1stRunwaySurfaceType']
Object: ['Flowering plant', 'Poaceae']

Triple: [['__subject__ Poaceae __predicate__ division __object__ Flowering plant', '__subject__ Ardmore Airport (New Zealand) __predicate__ 2ndRunwaySurfaceType __object__ Poaceae']]
Text: Poaceae belongs to the division of flowering plants and it is the surface type of the second runway of Ardmore Airport, New Zealand.
Subject: ['Poaceae', 'Ardmore Airport (New Zealand)']
Predicate: ['division', '2ndRunwaySurfaceType']
Object: ['Flowering plant', 'Poaceae']

Triple: [['__subject__ Poaceae __predicate__ division __object__ Flowering plant', '__subject__ Ardmore Airport (New Zealand) __predicate__ 2ndRunwaySurfaceType __object__ Poaceae']]
Text: Poaceae belongs to the division of flowering plants and is the surface type of the second runway of Ardmore Airport, New Zealand.
Subject: ['Poaceae', 'Ardmore Airport (New Zealand)']
Predicate: ['division', '2ndRunwaySurfaceType']
Object: ['Flowering plant', 'Poaceae']

Triple: [['__subject__ Poaceae __predicate__ division __object__ Flowering plant', '__subject__ Ardmore Airport (New Zealand) __predicate__ 2ndRunwaySurfaceType __object__ Poaceae']]
Text: The 2nd runway at Ardmore Airport (New Zealand) is made of Poaceae which belongs to the division of flowering plants.
Subject: ['Poaceae', 'Ardmore Airport (New Zealand)']
Predicate: ['division', '2ndRunwaySurfaceType']
Object: ['Flowering plant', 'Poaceae']

Triple: [['__subject__ Poaceae __predicate__ order __object__ Commelinids', '__subject__ Ardmore Airport (New Zealand) __predicate__ 2ndRunwaySurfaceType __object__ Poaceae']]
Text: Poaceae is the order of Commelinids, it is also the surface type of the second runway of Ardmore Airport, New Zealand.
Subject: ['Poaceae', 'Ardmore Airport (New Zealand)']
Predicate: ['order', '2ndRunwaySurfaceType']
Object: ['Commelinids', 'Poaceae']

Triple: [['__subject__ Poaceae __predicate__ order __object__ Commelinids', '__subject__ Ardmore Airport (New Zealand) __predicate__ 2ndRunwaySurfaceType __object__ Poaceae']]
Text: The 2nd runway at Ardmore Airport (New Zealand) is made of Poaceae which belongs to the order of Commelinids.
Subject: ['Poaceae', 'Ardmore Airport (New Zealand)']
Predicate: ['order', '2ndRunwaySurfaceType']
Object: ['Commelinids', 'Poaceae']

Triple: [['__subject__ Saranac Lake, New York __predicate__ isPartOf __object__ Essex County, New York', '__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Saranac Lake, New York']]
Text: Adirondack Regional Airport serves the city of Saranac Lake, Essex County, New York.
Subject: ['Saranac Lake, New York', 'Adirondack Regional Airport']
Predicate: ['isPartOf', 'cityServed']
Object: ['Essex County, New York', 'Saranac Lake, New York']

Triple: [['__subject__ Saranac Lake, New York __predicate__ isPartOf __object__ Harrietstown, New York', '__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Saranac Lake, New York']]
Text: Adirondack Regional Airport serves the city of Saranac Lake, New York which is part of Harrietstown, N.Y.
Subject: ['Saranac Lake, New York', 'Adirondack Regional Airport']
Predicate: ['isPartOf', 'cityServed']
Object: ['Harrietstown, New York', 'Saranac Lake, New York']

Triple: [['__subject__ Saranac Lake, New York __predicate__ isPartOf __object__ Harrietstown, New York', '__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Saranac Lake, New York']]
Text: Adirondack Regional Airport serves the city of Saranac Lake, New York which is part of Harrietstown, New York.
Subject: ['Saranac Lake, New York', 'Adirondack Regional Airport']
Predicate: ['isPartOf', 'cityServed']
Object: ['Harrietstown, New York', 'Saranac Lake, New York']

Triple: [['__subject__ Saranac Lake, New York __predicate__ isPartOf __object__ Harrietstown, New York', '__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Saranac Lake, New York']]
Text: Adirondack Regional Airport serves the city of Saranac Lake in Harrietstown, New York.
Subject: ['Saranac Lake, New York', 'Adirondack Regional Airport']
Predicate: ['isPartOf', 'cityServed']
Object: ['Harrietstown, New York', 'Saranac Lake, New York']

Triple: [['__subject__ Saranac Lake, New York __predicate__ isPartOf __object__ United States', '__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Saranac Lake, New York']]
Text: Adirondack Regional Airport serves the city of Saranac Lake, New York, in the United States.
Subject: ['Saranac Lake, New York', 'Adirondack Regional Airport']
Predicate: ['isPartOf', 'cityServed']
Object: ['United States', 'Saranac Lake, New York']

Triple: [['__subject__ Saranac Lake, New York __predicate__ isPartOf __object__ United States', '__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Saranac Lake, New York']]
Text: Adirondack Regional Airport serves the city of Saranac Lake, New York, U.S.
Subject: ['Saranac Lake, New York', 'Adirondack Regional Airport']
Predicate: ['isPartOf', 'cityServed']
Object: ['United States', 'Saranac Lake, New York']

Triple: [['__subject__ Saranac Lake, New York __predicate__ isPartOf __object__ United States', '__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Saranac Lake, New York']]
Text: Adirondack Regional Airport serves the city of Saranac Lake, New York which is part of the U.S.
Subject: ['Saranac Lake, New York', 'Adirondack Regional Airport']
Predicate: ['isPartOf', 'cityServed']
Object: ['United States', 'Saranac Lake, New York']

Triple: [['__subject__ Aaron Bertram __predicate__ associatedBand/associatedMusicalArtist __object__ Suburban Legends', '__subject__ Aaron Bertram __predicate__ genre __object__ Ska punk']]
Text: Aaron Bertram is a ska punk musician with the Suburban Legends band.
Subject: ['Aaron Bertram', 'Aaron Bertram']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Suburban Legends', 'Ska punk']

Triple: [['__subject__ Aaron Bertram __predicate__ associatedBand/associatedMusicalArtist __object__ Suburban Legends', '__subject__ Aaron Bertram __predicate__ genre __object__ Ska punk']]
Text: Aaron Bertram performs ska punk music and plays for the Suburban Legends band.
Subject: ['Aaron Bertram', 'Aaron Bertram']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Suburban Legends', 'Ska punk']

Triple: [['__subject__ Aaron Bertram __predicate__ associatedBand/associatedMusicalArtist __object__ Suburban Legends', '__subject__ Aaron Bertram __predicate__ genre __object__ Ska punk']]
Text: Suburban Legends' Aaron Bertram is a Ska punk musician.
Subject: ['Aaron Bertram', 'Aaron Bertram']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Suburban Legends', 'Ska punk']

Triple: [['__subject__ Aaron Bertram __predicate__ associatedBand/associatedMusicalArtist __object__ Suburban Legends', '__subject__ Suburban Legends __predicate__ genre __object__ Pop music']]
Text: Pop music band Suburban Legends includes musician Aaron Bertram.
Subject: ['Aaron Bertram', 'Suburban Legends']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Suburban Legends', 'Pop music']

Triple: [['__subject__ Aaron Bertram __predicate__ associatedBand/associatedMusicalArtist __object__ Suburban Legends', '__subject__ Suburban Legends __predicate__ genre __object__ Pop music']]
Text: Aaron Bertram plays for the Suburban Legends, which is a pop music band.
Subject: ['Aaron Bertram', 'Suburban Legends']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Suburban Legends', 'Pop music']

Triple: [['__subject__ Aaron Bertram __predicate__ associatedBand/associatedMusicalArtist __object__ Suburban Legends', '__subject__ Suburban Legends __predicate__ genre __object__ Pop music']]
Text: Aaron Bertram plays pop music for the Suburban Legends band.
Subject: ['Aaron Bertram', 'Suburban Legends']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Suburban Legends', 'Pop music']

Triple: [['__subject__ Aaron Bertram __predicate__ genre __object__ Ska punk', '__subject__ Aaron Bertram __predicate__ associatedBand/associatedMusicalArtist __object__ Kids Imagine Nation']]
Text: Aaron Bertram plays for the Kids Imagine Nation band and his genre is Ska punk.
Subject: ['Aaron Bertram', 'Aaron Bertram']
Predicate: ['genre', 'associatedBand/associatedMusicalArtist']
Object: ['Ska punk', 'Kids Imagine Nation']

Triple: [['__subject__ Aaron Bertram __predicate__ genre __object__ Ska punk', '__subject__ Aaron Bertram __predicate__ associatedBand/associatedMusicalArtist __object__ Kids Imagine Nation']]
Text: Aaron Bertram is an artist with the band Kids Imagine Nation and he performs ska punk music.
Subject: ['Aaron Bertram', 'Aaron Bertram']
Predicate: ['genre', 'associatedBand/associatedMusicalArtist']
Object: ['Ska punk', 'Kids Imagine Nation']

Triple: [['__subject__ Aaron Bertram __predicate__ genre __object__ Ska punk', '__subject__ Aaron Bertram __predicate__ associatedBand/associatedMusicalArtist __object__ Kids Imagine Nation']]
Text: Aaron Bertram, who plays Ska punk, is an artist with the band Kids Imagine Nation.
Subject: ['Aaron Bertram', 'Aaron Bertram']
Predicate: ['genre', 'associatedBand/associatedMusicalArtist']
Object: ['Ska punk', 'Kids Imagine Nation']

Triple: [['__subject__ Aaron Bertram __predicate__ genre __object__ Ska punk', '__subject__ Ska punk __predicate__ stylisticOrigin __object__ Punk rock']]
Text: Ska Punk, the genre of Aaron Bertram, originates from punk rock.
Subject: ['Aaron Bertram', 'Ska punk']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Ska punk', 'Punk rock']

Triple: [['__subject__ Aaron Bertram __predicate__ genre __object__ Ska punk', '__subject__ Ska punk __predicate__ stylisticOrigin __object__ Punk rock']]
Text: Ska punk, derived from punk rock music, is the genre of Aaron Bertram.
Subject: ['Aaron Bertram', 'Ska punk']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Ska punk', 'Punk rock']

Triple: [['__subject__ Aaron Bertram __predicate__ genre __object__ Ska punk', '__subject__ Ska punk __predicate__ stylisticOrigin __object__ Punk rock']]
Text: Aaron Bertram's musical genre is Ska punk, music whose origins are punk rock.
Subject: ['Aaron Bertram', 'Ska punk']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Ska punk', 'Punk rock']

Triple: [['__subject__ Aaron Deer __predicate__ background __object__ solo singer', '__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia']]
Text: Aaron Deer performs Psychedelia music and has a background as a solo singer.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['background', 'genre']
Object: ['solo singer', 'Psychedelia']

Triple: [['__subject__ Aaron Deer __predicate__ background __object__ solo singer', '__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia']]
Text: Aaron Deer is a solo singer in the genre Psychedelia.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['background', 'genre']
Object: ['solo singer', 'Psychedelia']

Triple: [['__subject__ Aaron Deer __predicate__ background __object__ solo singer', '__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia']]
Text: Aaron Deer has a background as a solo singer and the genre is Psychedelia.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['background', 'genre']
Object: ['solo singer', 'Psychedelia']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ background __object__ solo singer']]
Text: Aaron Deer, an Indie rock musician, also has a background as a solo singer.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'background']
Object: ['Indie rock', 'solo singer']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ background __object__ solo singer']]
Text: Indie rock musician Aaron Deer is a soloist singer.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'background']
Object: ['Indie rock', 'solo singer']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ background __object__ solo singer']]
Text: Indie rock, is the musical genre of Aaron Deer, who has a background as a solo singer.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'background']
Object: ['Indie rock', 'solo singer']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ instrument __object__ Bass guitar']]
Text: Bass guitarist Aaron Deer is a performer of Indie rock.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Bass guitar']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ instrument __object__ Bass guitar']]
Text: Aaron Deer is an Indie Rock bass player.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Bass guitar']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ instrument __object__ Bass guitar']]
Text: Aaron Deer is an Indie rock musician who plays the bass guitar.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Bass guitar']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ instrument __object__ Guitar']]
Text: Aaron Deer plays indie rock guitar music.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Guitar']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ instrument __object__ Guitar']]
Text: Aaron Deer is a an Indie rock guitar player.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Guitar']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ instrument __object__ Guitar']]
Text: Aaron Deer is a performer of the music genre Indie rock and he plays the guitar.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Guitar']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ instrument __object__ Keyboard instrument']]
Text: Aaron Deer is an indie rock keyboard player.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Keyboard instrument']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ instrument __object__ Keyboard instrument']]
Text: Aaron Deer, a keyboardist, is a performer of the Indie rock music genre.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Keyboard instrument']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ instrument __object__ Keyboard instrument']]
Text: Aaron Deer is a performer of the music genre Indie rock and he played the Keyboard instrument.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Keyboard instrument']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ instrument __object__ Piano']]
Text: Aaron Deer is an indie rock performer who plays the piano.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Piano']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ instrument __object__ Piano']]
Text: Aaron Deer is a performer of the music genre Indie rock and he plays the piano.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Piano']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ instrument __object__ Piano']]
Text: Aaron Deer is an Indie rock musician who plays the piano.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Piano']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ instrument __object__ Singing']]
Text: Aaron Deer is a singer in the music genre indie rock.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Singing']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ instrument __object__ Singing']]
Text: Aaron Deer is a singer who performs Indie rock music.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Singing']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Aaron Deer __predicate__ instrument __object__ Singing']]
Text: Aaron Deer is an Indie rock musician and singer.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Singing']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Indie rock __predicate__ instrument __object__ Guitar']]
Text: The guitar is an instrument used in Indie rock, one of the musicians of that genre, is Aaron Deer.
Subject: ['Aaron Deer', 'Indie rock']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Guitar']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Indie rock __predicate__ instrument __object__ Guitar']]
Text: Aaron Deer plays Indie Rock, which features the guitar.
Subject: ['Aaron Deer', 'Indie rock']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Guitar']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock', '__subject__ Indie rock __predicate__ instrument __object__ Guitar']]
Text: Aaron Deer is an Indie rock musician which is a genre of music which uses guitars.
Subject: ['Aaron Deer', 'Indie rock']
Predicate: ['genre', 'instrument']
Object: ['Indie rock', 'Guitar']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia', '__subject__ Aaron Deer __predicate__ instrument __object__ Bass guitar']]
Text: Aaron deer plays the bass guitar and performs Psychedelia music.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Psychedelia', 'Bass guitar']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia', '__subject__ Aaron Deer __predicate__ instrument __object__ Bass guitar']]
Text: Aaron Deer performs Psychedelia music and plays the bass guitar.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Psychedelia', 'Bass guitar']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia', '__subject__ Aaron Deer __predicate__ instrument __object__ Bass guitar']]
Text: Aaron Deer's genre is Psychedelia and he plays the bass guitar.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Psychedelia', 'Bass guitar']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia', '__subject__ Aaron Deer __predicate__ instrument __object__ Keyboard instrument']]
Text: Aaron Deer's genre is Psychedelia and he played the keyboard.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Psychedelia', 'Keyboard instrument']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia', '__subject__ Aaron Deer __predicate__ instrument __object__ Keyboard instrument']]
Text: Aaron Deer played the keyboard and performs psychedelia music.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Psychedelia', 'Keyboard instrument']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia', '__subject__ Aaron Deer __predicate__ instrument __object__ Keyboard instrument']]
Text: Aaron Deers plays the keyboard and performs Psychedelia music.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Psychedelia', 'Keyboard instrument']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia', '__subject__ Aaron Deer __predicate__ instrument __object__ Piano']]
Text: Aaron Deers plays the piano in the Psychedelia genre.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Psychedelia', 'Piano']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia', '__subject__ Aaron Deer __predicate__ instrument __object__ Piano']]
Text: Aaron Deer performs Psychedelia music and plays the piano.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Psychedelia', 'Piano']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia', '__subject__ Aaron Deer __predicate__ instrument __object__ Piano']]
Text: Aaron Deer plays psychedelic piano.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Psychedelia', 'Piano']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia', '__subject__ Aaron Deer __predicate__ instrument __object__ Singing']]
Text: Aaron Deer is a singer who performs Psychedelia music.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Psychedelia', 'Singing']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia', '__subject__ Aaron Deer __predicate__ instrument __object__ Singing']]
Text: Aaron Deer, a singer, performs Psychedelia music.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Psychedelia', 'Singing']

Triple: [['__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia', '__subject__ Aaron Deer __predicate__ instrument __object__ Singing']]
Text: Aaron Deer is a singer whose genre is Psychedelia.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['genre', 'instrument']
Object: ['Psychedelia', 'Singing']

Triple: [['__subject__ Aaron Deer __predicate__ origin __object__ Indianapolis', '__subject__ Aaron Deer __predicate__ origin __object__ Indiana']]
Text: Aaron Deer comes from Indianapolis, Indiana.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['origin', 'origin']
Object: ['Indianapolis', 'Indiana']

Triple: [['__subject__ Aaron Deer __predicate__ origin __object__ Indianapolis', '__subject__ Aaron Deer __predicate__ origin __object__ Indiana']]
Text: Aaron Deer is from Indianapolis, Indiana.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['origin', 'origin']
Object: ['Indianapolis', 'Indiana']

Triple: [['__subject__ Aaron Deer __predicate__ origin __object__ United States', '__subject__ Aaron Deer __predicate__ origin __object__ Indianapolis']]
Text: Aaron Deer was born in the Indianapolis, United States.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['origin', 'origin']
Object: ['United States', 'Indianapolis']

Triple: [['__subject__ Aaron Deer __predicate__ origin __object__ United States', '__subject__ Aaron Deer __predicate__ origin __object__ Indianapolis']]
Text: Aaron Deer is an American from Indianapolis.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['origin', 'origin']
Object: ['United States', 'Indianapolis']

Triple: [['__subject__ Aaron Deer __predicate__ origin __object__ United States', '__subject__ Aaron Deer __predicate__ origin __object__ Indianapolis']]
Text: Aaron Deer is American from Indianapolis.
Subject: ['Aaron Deer', 'Aaron Deer']
Predicate: ['origin', 'origin']
Object: ['United States', 'Indianapolis']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Greymachine', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Isis (band)']]
Text: Aaron Turner, formerly of the Greymachine band, plays for Isis.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Greymachine', 'Isis (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Greymachine', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Isis (band)']]
Text: Aaron Turner is an artist for the band Isis and is associated with the group Greymachine.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Greymachine', 'Isis (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Greymachine', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Isis (band)']]
Text: Aaron Turner is associated with the group Greymachine and the band Isis.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Greymachine', 'Isis (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Lotus Eaters (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Avant-garde metal']]
Text: Aaron Turner is a musician in the Lotus Eaters band and uses the musical genre Avant-garde metal.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Lotus Eaters (band)', 'Avant-garde metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Lotus Eaters (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Avant-garde metal']]
Text: Aaron Turner, of the Lotus Eaters, is an avant-garde metal musician.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Lotus Eaters (band)', 'Avant-garde metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Lotus Eaters (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Avant-garde metal']]
Text: Aaron Turner, a musician in the Lotus Eaters band, performs avant-garde metal music.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Lotus Eaters (band)', 'Avant-garde metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Lotus Eaters (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Black metal']]
Text: Aaron Turner, a Black metal musician, is a musician in the Lotus Eaters band.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Lotus Eaters (band)', 'Black metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Lotus Eaters (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Black metal']]
Text: Aaron Turner, of the band Lotus Eaters, is a performer of black metal music.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Lotus Eaters (band)', 'Black metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Old Man Gloom', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Greymachine']]
Text: Aaron Turner has played for Old Man Gloom and Greymachine band.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Old Man Gloom', 'Greymachine']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Old Man Gloom', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Greymachine']]
Text: Aaron Turner played for the bands Greymachine and Old Man Gloom.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Old Man Gloom', 'Greymachine']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Old Man Gloom', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Greymachine']]
Text: Aaron Turner played for Old Man Gloom and is associated with the group Greymachine.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Old Man Gloom', 'Greymachine']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Old Man Gloom', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Isis (band)']]
Text: Aaron Turner is an artist for the band Isis and he played for Old Man Gloom.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Old Man Gloom', 'Isis (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Old Man Gloom', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Isis (band)']]
Text: Aaron Turner is an artist for the band Isis and formerly played for Old Man Gloom.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Old Man Gloom', 'Isis (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Old Man Gloom', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Isis (band)']]
Text: Aaron Turner is an artist for the band Isis, having previously played for Old Man Gloom.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Old Man Gloom', 'Isis (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Old Man Gloom', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Lotus Eaters (band)']]
Text: Aaron Turner is a musician in the Lotus Eaters band and he played for Old Man Gloom.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Old Man Gloom', 'Lotus Eaters (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Old Man Gloom', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Lotus Eaters (band)']]
Text: Aaron Turner is a member of the Lotus Eaters Band who once played for Old Man Gloom.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Old Man Gloom', 'Lotus Eaters (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Old Man Gloom', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Lotus Eaters (band)']]
Text: Aaron Turner, formerly Old Man Gloom, plays with the Lotus Eaters.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Old Man Gloom', 'Lotus Eaters (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Old Man Gloom', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Sumac (band)']]
Text: Aaron Turner played for Old Man Gloom and he also performed with the band Sumac.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Old Man Gloom', 'Sumac (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Old Man Gloom', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Sumac (band)']]
Text: Aaron Turner performed with the band Sumac and with Old Man Gloom.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Old Man Gloom', 'Sumac (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Old Man Gloom', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Sumac (band)']]
Text: Aaron Turner has played with the bands Old Man Gloom, and Sumac.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Old Man Gloom', 'Sumac (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ House of Low Culture']]
Text: Aaron Turner played with the band Twilight and performed for House of Low Culture.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Twilight (band)', 'House of Low Culture']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ House of Low Culture']]
Text: Aaron Turner played with the band Twilight and performed with House of Low Culture.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Twilight (band)', 'House of Low Culture']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ House of Low Culture']]
Text: Aaron Turner played with Twilight and House of Low Culture.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Twilight (band)', 'House of Low Culture']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Isis (band)']]
Text: Aaron Turner has played with Twilight and Isis.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Twilight (band)', 'Isis (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Isis (band)']]
Text: Aaron Turner is an artist for the band Isis and played with the band Twilight.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Twilight (band)', 'Isis (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Isis (band)']]
Text: Aaron Turner played with both Twilight and Isis.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Twilight (band)', 'Isis (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Lotus Eaters (band)']]
Text: Aaron Turner has played with both Twilight and the Lotus Eaters.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Twilight (band)', 'Lotus Eaters (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Lotus Eaters (band)']]
Text: Aaron Turner is a musician in the Lotus Eaters band and Twilight band.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Twilight (band)', 'Lotus Eaters (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Lotus Eaters (band)']]
Text: Aaron Turner, formerly of Twilight, plays with the Lotus Eaters band.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Twilight (band)', 'Lotus Eaters (band)']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Old Man Gloom']]
Text: Aaron Turner played for Old Man Gloom and the band Twilight.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Twilight (band)', 'Old Man Gloom']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Old Man Gloom']]
Text: Aaron Turner played with the bands Twilight and Old Man Gloom.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Twilight (band)', 'Old Man Gloom']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Old Man Gloom']]
Text: Aaron Turner played with the band Twilight and for Old Man Gloom.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Twilight (band)', 'Old Man Gloom']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Avant-garde metal']]
Text: Aaron Turner played with the band Twilight and he performs avant-garde metal music.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Twilight (band)', 'Avant-garde metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Avant-garde metal']]
Text: Aaron Turner whose musical genre is Avant-garde metal, played with the band Twilight.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Twilight (band)', 'Avant-garde metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Avant-garde metal']]
Text: Aaron Turner falls in the genre of avant-garde metal music and played with the band Twilight.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Twilight (band)', 'Avant-garde metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Black metal']]
Text: Aarons Turner played Black Metal music with the band Twilight.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Twilight (band)', 'Black metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Black metal']]
Text: Aaron Turner played with the band Twilight and his genre is Black Metal.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Twilight (band)', 'Black metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Black metal']]
Text: Aaron Turner played black metal music with the band Twilight.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Twilight (band)', 'Black metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Doom metal']]
Text: Aaron Turner performs doom metal music and played with the band Twilight.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Twilight (band)', 'Doom metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Doom metal']]
Text: Aaron Turner played with the band Twilight and is an exponent of Doom metal.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Twilight (band)', 'Doom metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Doom metal']]
Text: The musical genre of Aaron Turner is Doom metal and he played with the band Twilight.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Twilight (band)', 'Doom metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Post-metal']]
Text: Aaron Turner performs Post-metal music and played with the band Twilight.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Twilight (band)', 'Post-metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Post-metal']]
Text: Aaron Turner played post- metal with Twilight.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Twilight (band)', 'Post-metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Post-metal']]
Text: Aaron Turnerplays post metal music with the band Twilight.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Twilight (band)', 'Post-metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Progressive metal']]
Text: Aaron Turner played with the band Twilight and he plays progressive metal music.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Twilight (band)', 'Progressive metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Progressive metal']]
Text: Aaron Turner played with the band Twilight and performs progressive metal music.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Twilight (band)', 'Progressive metal']

Triple: [['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)', '__subject__ Aaron Turner __predicate__ genre __object__ Progressive metal']]
Text: Twilight's Aaron Turner is a Progressive Metal artist.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Twilight (band)', 'Progressive metal']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Ambient music', '__subject__ Aaron Turner __predicate__ instrument __object__ Electric guitar']]
Text: Aaron Turner plays ambient music using an electric guitar.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['genre', 'instrument']
Object: ['Ambient music', 'Electric guitar']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Ambient music', '__subject__ Aaron Turner __predicate__ instrument __object__ Electric guitar']]
Text: Aaron Turner, who plays electric guitar, performs the genre Ambient music.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['genre', 'instrument']
Object: ['Ambient music', 'Electric guitar']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Ambient music', '__subject__ Aaron Turner __predicate__ instrument __object__ Electric guitar']]
Text: Aaron Turner plays ambient electronic guitar.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['genre', 'instrument']
Object: ['Ambient music', 'Electric guitar']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Ambient music', '__subject__ Aaron Turner __predicate__ instrument __object__ Singing']]
Text: Aaron Turner is a singer whose genre is Ambient music.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['genre', 'instrument']
Object: ['Ambient music', 'Singing']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Ambient music', '__subject__ Aaron Turner __predicate__ instrument __object__ Singing']]
Text: Aaron Turner is a singer who performs ambient music.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['genre', 'instrument']
Object: ['Ambient music', 'Singing']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Ambient music', '__subject__ Aaron Turner __predicate__ instrument __object__ Singing']]
Text: Aaron Turner sings for a living and performs ambient music.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['genre', 'instrument']
Object: ['Ambient music', 'Singing']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Black metal', '__subject__ Black metal __predicate__ musicFusionGenre __object__ Death metal']]
Text: Aaron Turner's music genre is black metal, of which death metal is a fusion.
Subject: ['Aaron Turner', 'Black metal']
Predicate: ['genre', 'musicFusionGenre']
Object: ['Black metal', 'Death metal']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Black metal', '__subject__ Black metal __predicate__ musicFusionGenre __object__ Death metal']]
Text: Aaron Turner is a performer in black metal music. A musical fusion of black metal is called death metal.
Subject: ['Aaron Turner', 'Black metal']
Predicate: ['genre', 'musicFusionGenre']
Object: ['Black metal', 'Death metal']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Black metal', '__subject__ Black metal __predicate__ musicFusionGenre __object__ Death metal']]
Text: Aaron Turner is a Black Metal musician and one of its fusions is Death Metal.
Subject: ['Aaron Turner', 'Black metal']
Predicate: ['genre', 'musicFusionGenre']
Object: ['Black metal', 'Death metal']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Doom metal', '__subject__ Aaron Turner __predicate__ instrument __object__ Electric guitar']]
Text: Aaron Turner is an exponent of Doom metal and he plays the electric guitar.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['genre', 'instrument']
Object: ['Doom metal', 'Electric guitar']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Doom metal', '__subject__ Aaron Turner __predicate__ instrument __object__ Electric guitar']]
Text: Aaron Turner plays the electric guitar and performs doom metal music.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['genre', 'instrument']
Object: ['Doom metal', 'Electric guitar']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Doom metal', '__subject__ Aaron Turner __predicate__ instrument __object__ Electric guitar']]
Text: Aaron Turner plays electric guitar and his musical genre is Doom metal.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['genre', 'instrument']
Object: ['Doom metal', 'Electric guitar']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Electroacoustic music', '__subject__ Aaron Turner __predicate__ instrument __object__ Electric guitar']]
Text: Aaron Turner plays the electric guitar and performs electroacoustic music.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['genre', 'instrument']
Object: ['Electroacoustic music', 'Electric guitar']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Electroacoustic music', '__subject__ Aaron Turner __predicate__ instrument __object__ Electric guitar']]
Text: Aaron Turners plays electracoustic guitar.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['genre', 'instrument']
Object: ['Electroacoustic music', 'Electric guitar']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Electroacoustic music', '__subject__ Aaron Turner __predicate__ instrument __object__ Singing']]
Text: Aaron Turner plays electroacoustic music and is a singer.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['genre', 'instrument']
Object: ['Electroacoustic music', 'Singing']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Electroacoustic music', '__subject__ Aaron Turner __predicate__ instrument __object__ Singing']]
Text: Aaron Turner is a singer who performs electroacoustic music.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['genre', 'instrument']
Object: ['Electroacoustic music', 'Singing']

Triple: [['__subject__ Aaron Turner __predicate__ genre __object__ Electroacoustic music', '__subject__ Aaron Turner __predicate__ instrument __object__ Singing']]
Text: Aaron Turner performs electroacoustic music and sings for a living.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['genre', 'instrument']
Object: ['Electroacoustic music', 'Singing']

Triple: [['__subject__ Aaron Turner __predicate__ instrument __object__ Electric guitar', '__subject__ Aaron Turner __predicate__ genre __object__ Avant-garde metal']]
Text: Aaron Turner plays the electric guitar in avant-garde metal music.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['instrument', 'genre']
Object: ['Electric guitar', 'Avant-garde metal']

Triple: [['__subject__ Aaron Turner __predicate__ instrument __object__ Electric guitar', '__subject__ Aaron Turner __predicate__ genre __object__ Avant-garde metal']]
Text: Aaron Turner falls in the genre of avant-garde metal music and he plays electric guitar.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['instrument', 'genre']
Object: ['Electric guitar', 'Avant-garde metal']

Triple: [['__subject__ Aaron Turner __predicate__ instrument __object__ Electric guitar', '__subject__ Aaron Turner __predicate__ genre __object__ Avant-garde metal']]
Text: Aaron Turner plays the electric guitar and also uses the musical genre Avant-garde metal.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['instrument', 'genre']
Object: ['Electric guitar', 'Avant-garde metal']

Triple: [['__subject__ Aaron Turner __predicate__ instrument __object__ Electric guitar', '__subject__ Aaron Turner __predicate__ genre __object__ Post-metal']]
Text: Aaron Turner, an electric guitar player, plays Post-metal music.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['instrument', 'genre']
Object: ['Electric guitar', 'Post-metal']

Triple: [['__subject__ Aaron Turner __predicate__ instrument __object__ Electric guitar', '__subject__ Aaron Turner __predicate__ genre __object__ Post-metal']]
Text: Aaron Turner's music is Post-metal and he plays the electric guitar.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['instrument', 'genre']
Object: ['Electric guitar', 'Post-metal']

Triple: [['__subject__ Aaron Turner __predicate__ instrument __object__ Electric guitar', '__subject__ Aaron Turner __predicate__ genre __object__ Post-metal']]
Text: Aaron Turner plays post-metal electric guitar.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['instrument', 'genre']
Object: ['Electric guitar', 'Post-metal']

Triple: [['__subject__ Aaron Turner __predicate__ instrument __object__ Singing', '__subject__ Aaron Turner __predicate__ genre __object__ Post-metal']]
Text: Aaron Turner is a singer whose music is Post Metal.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['instrument', 'genre']
Object: ['Singing', 'Post-metal']

Triple: [['__subject__ Aaron Turner __predicate__ instrument __object__ Singing', '__subject__ Aaron Turner __predicate__ genre __object__ Post-metal']]
Text: Aaron Turners sings Post-metal music for a living.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['instrument', 'genre']
Object: ['Singing', 'Post-metal']

Triple: [['__subject__ Aaron Turner __predicate__ instrument __object__ Singing', '__subject__ Aaron Turner __predicate__ genre __object__ Post-metal']]
Text: Aaron Turner is a singer and performer in Post metal music.
Subject: ['Aaron Turner', 'Aaron Turner']
Predicate: ['instrument', 'genre']
Object: ['Singing', 'Post-metal']

Triple: [['__subject__ Abradab __predicate__ birthPlace __object__ Poland', '__subject__ Abradab __predicate__ birthDate __object__ 1978-11-12']]
Text: Abradab was born in Poland on November 12th 1978.
Subject: ['Abradab', 'Abradab']
Predicate: ['birthPlace', 'birthDate']
Object: ['Poland', '1978-11-12']

Triple: [['__subject__ Abradab __predicate__ birthPlace __object__ Poland', '__subject__ Abradab __predicate__ birthDate __object__ 1978-11-12']]
Text: Abradab was born on November 12, 1978 in Poland.
Subject: ['Abradab', 'Abradab']
Predicate: ['birthPlace', 'birthDate']
Object: ['Poland', '1978-11-12']

Triple: [['__subject__ Abradab __predicate__ birthPlace __object__ Poland', '__subject__ Abradab __predicate__ birthDate __object__ 1978-11-12']]
Text: Abradab was born in Poland on November 12th, 1978.
Subject: ['Abradab', 'Abradab']
Predicate: ['birthPlace', 'birthDate']
Object: ['Poland', '1978-11-12']

Triple: [['__subject__ Abradab __predicate__ birthPlace __object__ Poland', '__subject__ Poland __predicate__ ethnicGroup __object__ Kashubians']]
Text: Abradab was born in Poland and one of the country's ethnic groups is Kashubians.
Subject: ['Abradab', 'Poland']
Predicate: ['birthPlace', 'ethnicGroup']
Object: ['Poland', 'Kashubians']

Triple: [['__subject__ Abradab __predicate__ birthPlace __object__ Poland', '__subject__ Poland __predicate__ ethnicGroup __object__ Kashubians']]
Text: The birth place of Abradab is Poland where Kashubians are an ethnic group.
Subject: ['Abradab', 'Poland']
Predicate: ['birthPlace', 'ethnicGroup']
Object: ['Poland', 'Kashubians']

Triple: [['__subject__ Abradab __predicate__ birthPlace __object__ Poland', '__subject__ Poland __predicate__ ethnicGroup __object__ Kashubians']]
Text: Abradab was born in Poland where Kashubians are an ethnic group.
Subject: ['Abradab', 'Poland']
Predicate: ['birthPlace', 'ethnicGroup']
Object: ['Poland', 'Kashubians']

Triple: [['__subject__ Abradab __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ derivative __object__ Drum and bass']]
Text: The band Abradab plays Hip Hop music, a derivative of which is Drum and Bass.
Subject: ['Abradab', 'Hip hop music']
Predicate: ['genre', 'derivative']
Object: ['Hip hop music', 'Drum and bass']

Triple: [['__subject__ Abradab __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ derivative __object__ Drum and bass']]
Text: Drum and bass derives its sounds from hip hop music which is what Abradab performs.
Subject: ['Abradab', 'Hip hop music']
Predicate: ['genre', 'derivative']
Object: ['Hip hop music', 'Drum and bass']

Triple: [['__subject__ Abradab __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ derivative __object__ Drum and bass']]
Text: Drum and bass is a derivative of Hip hop music which is what Abradab performs.
Subject: ['Abradab', 'Hip hop music']
Predicate: ['genre', 'derivative']
Object: ['Hip hop music', 'Drum and bass']

Triple: [['__subject__ Abradab __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ musicSubgenre __object__ Gangsta rap']]
Text: Abradab performs hip hop music which has the sub genre Gangsta rap.
Subject: ['Abradab', 'Hip hop music']
Predicate: ['genre', 'musicSubgenre']
Object: ['Hip hop music', 'Gangsta rap']

Triple: [['__subject__ Abradab __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ musicSubgenre __object__ Gangsta rap']]
Text: The musical genre of Abradab is hip hop music which has the sub genre Gangsta rap.
Subject: ['Abradab', 'Hip hop music']
Predicate: ['genre', 'musicSubgenre']
Object: ['Hip hop music', 'Gangsta rap']

Triple: [['__subject__ Abradab __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ musicSubgenre __object__ Gangsta rap']]
Text: The musical genre of Abradab is Hip Hop music and Gangsta rap is a sub-genre of Hip Hop music.
Subject: ['Abradab', 'Hip hop music']
Predicate: ['genre', 'musicSubgenre']
Object: ['Hip hop music', 'Gangsta rap']

Triple: [['__subject__ Abradab __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Disco']]
Text: Abradab performs hip hop music, a style that originated from disco.
Subject: ['Abradab', 'Hip hop music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Hip hop music', 'Disco']

Triple: [['__subject__ Abradab __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Disco']]
Text: The musical genre of Abradab is hip hop music, the stylistic origins of which, is disco.
Subject: ['Abradab', 'Hip hop music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Hip hop music', 'Disco']

Triple: [['__subject__ Abradab __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Disco']]
Text: The musical genre of Abradab is hip hop music which has its origins in Disco.
Subject: ['Abradab', 'Hip hop music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Hip hop music', 'Disco']

Triple: [['__subject__ Abradab __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Funk']]
Text: Abradab performs hip hop music, a style that originated from funk.
Subject: ['Abradab', 'Hip hop music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Hip hop music', 'Funk']

Triple: [['__subject__ Abradab __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Funk']]
Text: The musical genre of Abradab is hip hop music which originated from funk music.
Subject: ['Abradab', 'Hip hop music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Hip hop music', 'Funk']

Triple: [['__subject__ Abradab __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Funk']]
Text: Abradab performs hip hop music which originated from Funk.
Subject: ['Abradab', 'Hip hop music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Hip hop music', 'Funk']

Triple: [['__subject__ Abradab __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Jazz']]
Text: Abradab performs hip hop which originated from jazz music.
Subject: ['Abradab', 'Hip hop music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Hip hop music', 'Jazz']

Triple: [['__subject__ Abradab __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Jazz']]
Text: Abradab is a hip hop music performer. Hip hop music's style originates from jazz.
Subject: ['Abradab', 'Hip hop music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Hip hop music', 'Jazz']

Triple: [['__subject__ Abradab __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Jazz']]
Text: Abradab performs hip hop music, which has its origins in Jazz.
Subject: ['Abradab', 'Hip hop music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Hip hop music', 'Jazz']

Triple: [['__subject__ Abradab __predicate__ origin __object__ Katowice', '__subject__ Abradab __predicate__ origin __object__ Poland']]
Text: Abradab is from Katowice, in Poland.
Subject: ['Abradab', 'Abradab']
Predicate: ['origin', 'origin']
Object: ['Katowice', 'Poland']

Triple: [['__subject__ Abradab __predicate__ origin __object__ Katowice', '__subject__ Abradab __predicate__ origin __object__ Poland']]
Text: Abradab was born in Katowice, in Poland.
Subject: ['Abradab', 'Abradab']
Predicate: ['origin', 'origin']
Object: ['Katowice', 'Poland']

Triple: [['__subject__ Abradab __predicate__ origin __object__ Katowice', '__subject__ Abradab __predicate__ origin __object__ Poland']]
Text: Abradab originated in Katowice, in Poland.
Subject: ['Abradab', 'Abradab']
Predicate: ['origin', 'origin']
Object: ['Katowice', 'Poland']

Triple: [['__subject__ Ace Wilder __predicate__ background __object__ solo singer', '__subject__ Ace Wilder __predicate__ birthPlace __object__ Sweden']]
Text: Ace Wilder, whose birthplace is Sweden, performs as a solo singer.
Subject: ['Ace Wilder', 'Ace Wilder']
Predicate: ['background', 'birthPlace']
Object: ['solo singer', 'Sweden']

Triple: [['__subject__ Ace Wilder __predicate__ birthPlace __object__ Stockholm', '__subject__ Ace Wilder __predicate__ background __object__ solo singer']]
Text: Ace Wilder is a solo singer who was born in Stockholm.
Subject: ['Ace Wilder', 'Ace Wilder']
Predicate: ['birthPlace', 'background']
Object: ['Stockholm', 'solo singer']

Triple: [['__subject__ Ace Wilder __predicate__ birthPlace __object__ Stockholm', '__subject__ Ace Wilder __predicate__ background __object__ solo singer']]
Text: Born in Stockholm, Ace Wilder, has a background as a solo singer.
Subject: ['Ace Wilder', 'Ace Wilder']
Predicate: ['birthPlace', 'background']
Object: ['Stockholm', 'solo singer']

Triple: [['__subject__ Ace Wilder __predicate__ birthPlace __object__ Stockholm', '__subject__ Ace Wilder __predicate__ background __object__ solo singer']]
Text: Ace Wilder Stockholm native solo singer.
Subject: ['Ace Wilder', 'Ace Wilder']
Predicate: ['birthPlace', 'background']
Object: ['Stockholm', 'solo singer']

Triple: [['__subject__ Ace Wilder __predicate__ genre __object__ Electropop', '__subject__ Electropop __predicate__ stylisticOrigin __object__ Disco']]
Text: Ace Wilder's genre is Electropop which has origins in Disco.
Subject: ['Ace Wilder', 'Electropop']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Electropop', 'Disco']

Triple: [['__subject__ Ace Wilder __predicate__ genre __object__ Electropop', '__subject__ Electropop __predicate__ stylisticOrigin __object__ Disco']]
Text: Ace Wilder performs electropop music which has its origins in Disco.
Subject: ['Ace Wilder', 'Electropop']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Electropop', 'Disco']

Triple: [['__subject__ Ace Wilder __predicate__ genre __object__ Electropop', '__subject__ Electropop __predicate__ stylisticOrigin __object__ Disco']]
Text: Electropop is the musical genre of Ace Wilder and originated from disco.
Subject: ['Ace Wilder', 'Electropop']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Electropop', 'Disco']

Triple: [['__subject__ Ace Wilder __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ derivative __object__ Drum and bass']]
Text: The musical genre of Ace Wilder is hip hop music, in which the sounds are derived from drum and bass.
Subject: ['Ace Wilder', 'Hip hop music']
Predicate: ['genre', 'derivative']
Object: ['Hip hop music', 'Drum and bass']

Triple: [['__subject__ Ace Wilder __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ derivative __object__ Drum and bass']]
Text: Ace Wilder performs hip hop music, the genre that drum and bass is derived from.
Subject: ['Ace Wilder', 'Hip hop music']
Predicate: ['genre', 'derivative']
Object: ['Hip hop music', 'Drum and bass']

Triple: [['__subject__ Ace Wilder __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ derivative __object__ Drum and bass']]
Text: Ace Wilder is an exponent of Hip hop music in which drum and bass is a derivative.
Subject: ['Ace Wilder', 'Hip hop music']
Predicate: ['genre', 'derivative']
Object: ['Hip hop music', 'Drum and bass']

Triple: [['__subject__ Ace Wilder __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ musicSubgenre __object__ Gangsta rap']]
Text: Ace Wilder's musical genre is Hip hop which has the sub genre called Gangsta rap.
Subject: ['Ace Wilder', 'Hip hop music']
Predicate: ['genre', 'musicSubgenre']
Object: ['Hip hop music', 'Gangsta rap']

Triple: [['__subject__ Ace Wilder __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ musicSubgenre __object__ Gangsta rap']]
Text: Gangsta rap is grouped under Hip hop, the genre of Ace Wilder.
Subject: ['Ace Wilder', 'Hip hop music']
Predicate: ['genre', 'musicSubgenre']
Object: ['Hip hop music', 'Gangsta rap']

Triple: [['__subject__ Ace Wilder __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ musicSubgenre __object__ Gangsta rap']]
Text: Ace Wilder is an exponent of Hip hop music and one if its sub genre is Gangsta rap.
Subject: ['Ace Wilder', 'Hip hop music']
Predicate: ['genre', 'musicSubgenre']
Object: ['Hip hop music', 'Gangsta rap']

Triple: [['__subject__ Ace Wilder __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Funk']]
Text: Ace Wilder's musical genre is hip hop which has its stylistic origins in funk.
Subject: ['Ace Wilder', 'Hip hop music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Hip hop music', 'Funk']

Triple: [['__subject__ Ace Wilder __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Funk']]
Text: Ace Wilder's musical genre is Hip hop, a music which originated from funk music.
Subject: ['Ace Wilder', 'Hip hop music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Hip hop music', 'Funk']

Triple: [['__subject__ Ace Wilder __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Funk']]
Text: Funk is the origin of Hip hop the genre of Ace Wilder.
Subject: ['Ace Wilder', 'Hip hop music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Hip hop music', 'Funk']

Triple: [['__subject__ Ace Wilder __predicate__ occupation __object__ Singing', '__subject__ Ace Wilder __predicate__ background __object__ solo singer']]
Text: Ace Wilder is as a solo singer.
Subject: ['Ace Wilder', 'Ace Wilder']
Predicate: ['occupation', 'background']
Object: ['Singing', 'solo singer']

Triple: [['__subject__ Ace Wilder __predicate__ occupation __object__ Singing', '__subject__ Ace Wilder __predicate__ background __object__ solo singer']]
Text: Solo singer Ace Wilder is currently a band singer.
Subject: ['Ace Wilder', 'Ace Wilder']
Predicate: ['occupation', 'background']
Object: ['Singing', 'solo singer']

Triple: [['__subject__ Ace Wilder __predicate__ occupation __object__ Songwriter', '__subject__ Ace Wilder __predicate__ background __object__ solo singer']]
Text: Ace Wilder is a solo singer and songwriter.
Subject: ['Ace Wilder', 'Ace Wilder']
Predicate: ['occupation', 'background']
Object: ['Songwriter', 'solo singer']

Triple: [['__subject__ Ace Wilder __predicate__ occupation __object__ Songwriter', '__subject__ Ace Wilder __predicate__ background __object__ solo singer']]
Text: Ace Wilder is a songwriter and former solo singer.
Subject: ['Ace Wilder', 'Ace Wilder']
Predicate: ['occupation', 'background']
Object: ['Songwriter', 'solo singer']

Triple: [['__subject__ Ace Wilder __predicate__ occupation __object__ Songwriter', '__subject__ Ace Wilder __predicate__ background __object__ solo singer']]
Text: Ace Wilder is a songwriter and a solo singer.
Subject: ['Ace Wilder', 'Ace Wilder']
Predicate: ['occupation', 'background']
Object: ['Songwriter', 'solo singer']

Triple: [['__subject__ Ace Wilder __predicate__ recordLabel __object__ EMI Records', '__subject__ Ace Wilder __predicate__ background __object__ solo singer']]
Text: Ace Wilder, a solo singer, is contracted with the record label EMI Records.
Subject: ['Ace Wilder', 'Ace Wilder']
Predicate: ['recordLabel', 'background']
Object: ['EMI Records', 'solo singer']

Triple: [['__subject__ Ace Wilder __predicate__ recordLabel __object__ EMI Records', '__subject__ Ace Wilder __predicate__ background __object__ solo singer']]
Text: Ace Wilder has a background as a solo singer and his recording label is EMI Records.
Subject: ['Ace Wilder', 'Ace Wilder']
Predicate: ['recordLabel', 'background']
Object: ['EMI Records', 'solo singer']

Triple: [['__subject__ Ace Wilder __predicate__ recordLabel __object__ EMI Records', '__subject__ Ace Wilder __predicate__ background __object__ solo singer']]
Text: Ace Wilder is a solo singer who records for EMI Records.
Subject: ['Ace Wilder', 'Ace Wilder']
Predicate: ['recordLabel', 'background']
Object: ['EMI Records', 'solo singer']

Triple: [['__subject__ Agustín Barboza __predicate__ background __object__ solo singer', '__subject__ Agustín Barboza __predicate__ genre __object__ Guarania (music)']]
Text: Agustin Barboza is a solo singer who plays in the genre Guarania.
Subject: ['Agustín Barboza', 'Agustín Barboza']
Predicate: ['background', 'genre']
Object: ['solo singer', 'Guarania (music)']

Triple: [['__subject__ Agustín Barboza __predicate__ background __object__ solo singer', '__subject__ Agustín Barboza __predicate__ genre __object__ Guarania (music)']]
Text: Agustin Barboza is a solo singer in the Guarania genre.
Subject: ['Agustín Barboza', 'Agustín Barboza']
Predicate: ['background', 'genre']
Object: ['solo singer', 'Guarania (music)']

Triple: [['__subject__ Agustín Barboza __predicate__ background __object__ solo singer', '__subject__ Agustín Barboza __predicate__ genre __object__ Guarania (music)']]
Text: Agustin Barboza plays Guarania style music and has a background as solo singer.
Subject: ['Agustín Barboza', 'Agustín Barboza']
Predicate: ['background', 'genre']
Object: ['solo singer', 'Guarania (music)']

Triple: [['__subject__ Agustín Barboza __predicate__ birthPlace __object__ Paraguay', '__subject__ Agustín Barboza __predicate__ birthPlace __object__ Asunción']]
Text: Agustin Barboza was born in Asuncion in Paraguay.
Subject: ['Agustín Barboza', 'Agustín Barboza']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Paraguay', 'Asunción']

Triple: [['__subject__ Agustín Barboza __predicate__ birthPlace __object__ Paraguay', '__subject__ Agustín Barboza __predicate__ birthPlace __object__ Asunción']]
Text: Agustin Barboza was born in Asuncion, Paraguay.
Subject: ['Agustín Barboza', 'Agustín Barboza']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Paraguay', 'Asunción']

Triple: [['__subject__ Agustín Barboza __predicate__ birthPlace __object__ Paraguay', '__subject__ Agustín Barboza __predicate__ birthPlace __object__ Asunción']]
Text: The birth place of Agustin Barboza is Asuncion, Paraguay.
Subject: ['Agustín Barboza', 'Agustín Barboza']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Paraguay', 'Asunción']

Triple: [['__subject__ Agustín Barboza __predicate__ birthPlace __object__ Paraguay', '__subject__ Agustín Barboza __predicate__ deathPlace __object__ Asunción']]
Text: Agustin Barboza was born in Paraguay and died in Asuncion.
Subject: ['Agustín Barboza', 'Agustín Barboza']
Predicate: ['birthPlace', 'deathPlace']
Object: ['Paraguay', 'Asunción']

Triple: [['__subject__ Agustín Barboza __predicate__ birthPlace __object__ Paraguay', '__subject__ Agustín Barboza __predicate__ deathPlace __object__ Asunción']]
Text: Paraguay born Agustin Barboza, died in Asuncion.
Subject: ['Agustín Barboza', 'Agustín Barboza']
Predicate: ['birthPlace', 'deathPlace']
Object: ['Paraguay', 'Asunción']

Triple: [['__subject__ Agustín Barboza __predicate__ deathPlace __object__ Asunción', '__subject__ Asunción __predicate__ isPartOf __object__ Gran Asunción']]
Text: Agustin Barboza died in Asuncion, part of Gran Asunción.
Subject: ['Agustín Barboza', 'Asunción']
Predicate: ['deathPlace', 'isPartOf']
Object: ['Asunción', 'Gran Asunción']

Triple: [['__subject__ Agustín Barboza __predicate__ deathPlace __object__ Asunción', '__subject__ Asunción __predicate__ isPartOf __object__ Gran Asunción']]
Text: Agustin Barboza died in Asuncion which is part of Gran Asuncion.
Subject: ['Agustín Barboza', 'Asunción']
Predicate: ['deathPlace', 'isPartOf']
Object: ['Asunción', 'Gran Asunción']

Triple: [['__subject__ Agustín Barboza __predicate__ deathPlace __object__ Asunción', '__subject__ Asunción __predicate__ isPartOf __object__ Gran Asunción']]
Text: Agustin Barboza died in Asuncion (part of Gran Asuncion).
Subject: ['Agustín Barboza', 'Asunción']
Predicate: ['deathPlace', 'isPartOf']
Object: ['Asunción', 'Gran Asunción']

Triple: [['__subject__ Agustín Barboza __predicate__ deathPlace __object__ Paraguay', '__subject__ Agustín Barboza __predicate__ birthPlace __object__ Asunción']]
Text: Agustín Barboza was born in Asuncion and died in Paraguay.
Subject: ['Agustín Barboza', 'Agustín Barboza']
Predicate: ['deathPlace', 'birthPlace']
Object: ['Paraguay', 'Asunción']

Triple: [['__subject__ Agustín Barboza __predicate__ deathPlace __object__ Paraguay', '__subject__ Agustín Barboza __predicate__ birthPlace __object__ Asunción']]
Text: Agustín Barboza was born in Asunción, Paraguay.
Subject: ['Agustín Barboza', 'Agustín Barboza']
Predicate: ['deathPlace', 'birthPlace']
Object: ['Paraguay', 'Asunción']

Triple: [['__subject__ Agustín Barboza __predicate__ deathPlace __object__ Paraguay', '__subject__ Agustín Barboza __predicate__ deathPlace __object__ Asunción']]
Text: Agustin Barboza died in Asuncion, Paraguay.
Subject: ['Agustín Barboza', 'Agustín Barboza']
Predicate: ['deathPlace', 'deathPlace']
Object: ['Paraguay', 'Asunción']

Triple: [['__subject__ Agustín Barboza __predicate__ deathPlace __object__ Paraguay', '__subject__ Agustín Barboza __predicate__ deathPlace __object__ Asunción']]
Text: The birth place of Agustin Barboza was Paraguay and Asuncion is where he died.
Subject: ['Agustín Barboza', 'Agustín Barboza']
Predicate: ['deathPlace', 'deathPlace']
Object: ['Paraguay', 'Asunción']

Triple: [['__subject__ Agustín Barboza __predicate__ recordLabel __object__ Philips Records', '__subject__ Agustín Barboza __predicate__ birthPlace __object__ Asunción']]
Text: Born in Asunción, Agustín Barboza, is signed to Philips Records.
Subject: ['Agustín Barboza', 'Agustín Barboza']
Predicate: ['recordLabel', 'birthPlace']
Object: ['Philips Records', 'Asunción']

Triple: [['__subject__ Agustín Barboza __predicate__ recordLabel __object__ Philips Records', '__subject__ Agustín Barboza __predicate__ birthPlace __object__ Asunción']]
Text: Agustin Barboza (born in Asuncion) is signed to Philips Records.
Subject: ['Agustín Barboza', 'Agustín Barboza']
Predicate: ['recordLabel', 'birthPlace']
Object: ['Philips Records', 'Asunción']

Triple: [['__subject__ Agustín Barboza __predicate__ recordLabel __object__ Philips Records', '__subject__ Agustín Barboza __predicate__ birthPlace __object__ Asunción']]
Text: Agustin Barboza was born in Asuncion and is signed to the record label of Philips Records.
Subject: ['Agustín Barboza', 'Agustín Barboza']
Predicate: ['recordLabel', 'birthPlace']
Object: ['Philips Records', 'Asunción']

Triple: [['__subject__ Ahmet Ertegun __predicate__ deathPlace __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Ahmet Ertegun died in the United States which is where African Americans are an ethnic group.
Subject: ['Ahmet Ertegun', 'United States']
Predicate: ['deathPlace', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Ahmet Ertegun __predicate__ deathPlace __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: African Americans are an ethnic group in the U.S., the place where Ahmet Ertegun died.
Subject: ['Ahmet Ertegun', 'United States']
Predicate: ['deathPlace', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Blues', '__subject__ Ahmet Ertegun __predicate__ background __object__ non performing personnel']]
Text: Blues musician Ahmet Ertegun's background is as a non performing artist.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['genre', 'background']
Object: ['Blues', 'non performing personnel']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Blues', '__subject__ Ahmet Ertegun __predicate__ background __object__ non performing personnel']]
Text: Ahmet Ertegun has a background as a non-performing personnel in the Blues.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['genre', 'background']
Object: ['Blues', 'non performing personnel']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Blues', '__subject__ Ahmet Ertegun __predicate__ background __object__ non performing personnel']]
Text: Ahmet Ertegun, a blues performer, also has a background as a non performing personnel.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['genre', 'background']
Object: ['Blues', 'non performing personnel']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rhythm and blues', '__subject__ Ahmet Ertegun __predicate__ background __object__ non performing personnel']]
Text: Rhythm and blues artist Ahmet Ertegun has a background as a non-performing personnel.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['genre', 'background']
Object: ['Rhythm and blues', 'non performing personnel']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rhythm and blues', '__subject__ Ahmet Ertegun __predicate__ background __object__ non performing personnel']]
Text: Rhythm and Blues musician Ahmet Ertegun was a non performing artist.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['genre', 'background']
Object: ['Rhythm and blues', 'non performing personnel']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rhythm and blues', '__subject__ Ahmet Ertegun __predicate__ background __object__ non performing personnel']]
Text: Ahmet Ertegun music genre are Rhythm and Blues and has a background in non performing personnel.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['genre', 'background']
Object: ['Rhythm and blues', 'non performing personnel']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rhythm and blues', '__subject__ Ahmet Ertegun __predicate__ origin __object__ United States']]
Text: American Ahmet Ertegun is a rhythm and blues artist.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['genre', 'origin']
Object: ['Rhythm and blues', 'United States']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rhythm and blues', '__subject__ Ahmet Ertegun __predicate__ origin __object__ United States']]
Text: American Ahmet Ertegun plays Rhythm and Blues music.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['genre', 'origin']
Object: ['Rhythm and blues', 'United States']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rhythm and blues', '__subject__ Ahmet Ertegun __predicate__ origin __object__ United States']]
Text: Ahmet Ertegun is a rhythm and blues performer from the United States.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['genre', 'origin']
Object: ['Rhythm and blues', 'United States']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Disco']]
Text: Ahmet Ertegun's genre is rhythm and blues which is where disco is derived from.
Subject: ['Ahmet Ertegun', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Disco']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Disco']]
Text: Ahmet Ertegun plays rhythm and blues, a derivative of which is Disco.
Subject: ['Ahmet Ertegun', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Disco']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ stylisticOrigin __object__ Blues']]
Text: Ahmet Ertegun music genre are Rhythm and Blues which originated from blues music.
Subject: ['Ahmet Ertegun', 'Rhythm and blues']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rhythm and blues', 'Blues']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ stylisticOrigin __object__ Blues']]
Text: Ahmet Ertegun performs rhythm and blues music, a genre that originated from blues.
Subject: ['Ahmet Ertegun', 'Rhythm and blues']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rhythm and blues', 'Blues']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ stylisticOrigin __object__ Blues']]
Text: Ahmet Ertegun plays rhythm and blues, which originated from the blues.
Subject: ['Ahmet Ertegun', 'Rhythm and blues']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rhythm and blues', 'Blues']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rock and roll', '__subject__ Ahmet Ertegun __predicate__ background __object__ non performing personnel']]
Text: Ahmet Ertegun plays rock and roll music and has a background in non performing personnel.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['genre', 'background']
Object: ['Rock and roll', 'non performing personnel']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rock and roll', '__subject__ Ahmet Ertegun __predicate__ background __object__ non performing personnel']]
Text: Ahmet Ertegun plays rock and roll but has a no-performing background.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['genre', 'background']
Object: ['Rock and roll', 'non performing personnel']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rock and roll', '__subject__ Ahmet Ertegun __predicate__ background __object__ non performing personnel']]
Text: Rock and roll musician Ahmet Ertegun was previously non-performing.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['genre', 'background']
Object: ['Rock and roll', 'non performing personnel']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rock and roll', '__subject__ Ahmet Ertegun __predicate__ origin __object__ Washington, D.C.']]
Text: Ahmet Ertegun came from Washington Dc and plays rock and roll.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['genre', 'origin']
Object: ['Rock and roll', 'Washington, D.C.']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rock and roll', '__subject__ Ahmet Ertegun __predicate__ origin __object__ Washington, D.C.']]
Text: Coming from Washington D.C., Ahmet Ertegun uses the genre Rock and roll.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['genre', 'origin']
Object: ['Rock and roll', 'Washington, D.C.']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rock and roll', '__subject__ Rock and roll __predicate__ stylisticOrigin __object__ Blues']]
Text: Ahmet Ertegun's music genre is rock and roll, which came from the blues.
Subject: ['Ahmet Ertegun', 'Rock and roll']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rock and roll', 'Blues']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rock and roll', '__subject__ Rock and roll __predicate__ stylisticOrigin __object__ Blues']]
Text: Ahmet Ertegun plays rock and roll music, which originated from blues music.
Subject: ['Ahmet Ertegun', 'Rock and roll']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rock and roll', 'Blues']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rock and roll', '__subject__ Rock and roll __predicate__ stylisticOrigin __object__ Blues']]
Text: Ahmet Ertegun plays rock and roll music, the stylistic origins of which come from Blues.
Subject: ['Ahmet Ertegun', 'Rock and roll']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rock and roll', 'Blues']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rock and roll', '__subject__ Rock and roll __predicate__ stylisticOrigin __object__ Country music']]
Text: Ahmet Ertegun plays rock and roll music, whose stylistic origins are in country music.
Subject: ['Ahmet Ertegun', 'Rock and roll']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rock and roll', 'Country music']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rock and roll', '__subject__ Rock and roll __predicate__ stylisticOrigin __object__ Country music']]
Text: Ahmet Ertegun plays rock and roll, which has its roots in country music.
Subject: ['Ahmet Ertegun', 'Rock and roll']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rock and roll', 'Country music']

Triple: [['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rock and roll', '__subject__ Rock and roll __predicate__ stylisticOrigin __object__ Country music']]
Text: Ahmet Ertegun is a rock and roll music performer, whose origins came from country music.
Subject: ['Ahmet Ertegun', 'Rock and roll']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rock and roll', 'Country music']

Triple: [['__subject__ Ahmet Ertegun __predicate__ origin __object__ United States', '__subject__ Ahmet Ertegun __predicate__ origin __object__ Washington, D.C.']]
Text: Ahmet Ertegun is from the Washington D.C., United States.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['origin', 'origin']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ Ahmet Ertegun __predicate__ origin __object__ United States', '__subject__ Ahmet Ertegun __predicate__ origin __object__ Washington, D.C.']]
Text: Ahmet Ertegun is from Washington DC in the United States.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['origin', 'origin']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ Ahmet Ertegun __predicate__ origin __object__ United States', '__subject__ Ahmet Ertegun __predicate__ origin __object__ Washington, D.C.']]
Text: Ahmet Ertegun is originally from Washington D.C. which is in the United States.
Subject: ['Ahmet Ertegun', 'Ahmet Ertegun']
Predicate: ['origin', 'origin']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ Ahmet Ertegun __predicate__ origin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Ahmet Ertegun is from the United States, where African Americans are an ethnic group.
Subject: ['Ahmet Ertegun', 'United States']
Predicate: ['origin', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Ahmet Ertegun __predicate__ origin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Ahmet Ertegun is from the United States where African Americans are an ethnic group.
Subject: ['Ahmet Ertegun', 'United States']
Predicate: ['origin', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Ahmet Ertegun __predicate__ origin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: African Americans are an ethnic group in the United States, the country where Ahmet Ertegun is from.
Subject: ['Ahmet Ertegun', 'United States']
Predicate: ['origin', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ NRBQ', '__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ The Wildweeds']]
Text: Al Anderson plays with the band NRBQ and once also played with The WIldweeds.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['NRBQ', 'The Wildweeds']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ NRBQ', '__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ The Wildweeds']]
Text: Al Anderson plays with the band NRBQ and was a member of The Wildweeds.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['NRBQ', 'The Wildweeds']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ NRBQ', '__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ The Wildweeds']]
Text: Al Anderson plays with the band NRBQ and was once a member of The Wildweeds.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['NRBQ', 'The Wildweeds']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ NRBQ', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music']]
Text: Al Anderson plays with the band NRBQ and his genre is country music.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['NRBQ', 'Country music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ NRBQ', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music']]
Text: Al Anderson plays with country music band NRBQ.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['NRBQ', 'Country music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ NRBQ', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music']]
Text: Al Anderson plays with the country music band NRBQ.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['NRBQ', 'Country music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ NRBQ', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']]
Text: Al Anderson plays with the band NRBQ and performs rock music.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['NRBQ', 'Rock music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ NRBQ', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']]
Text: Rock music is the genre of Al Anderson, who plays with the band NRBQ.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['NRBQ', 'Rock music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ NRBQ', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']]
Text: Al Anderson plays with the band NRBQ and their genre is Rock music.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['NRBQ', 'Rock music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ NRBQ', '__subject__ NRBQ __predicate__ genre __object__ Country music']]
Text: Al Anderson plays with the band NRBQ which are exponents of Country music.
Subject: ['Al Anderson (NRBQ band)', 'NRBQ']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['NRBQ', 'Country music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ NRBQ', '__subject__ NRBQ __predicate__ genre __object__ Country music']]
Text: Al Anderson plays with the band NRBQ whose genre is country music.
Subject: ['Al Anderson (NRBQ band)', 'NRBQ']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['NRBQ', 'Country music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ NRBQ', '__subject__ NRBQ __predicate__ genre __object__ Country music']]
Text: Al Anderson plays with the band NRBQ whose musical genre is country music.
Subject: ['Al Anderson (NRBQ band)', 'NRBQ']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['NRBQ', 'Country music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ The Wildweeds', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music']]
Text: Al Anderson from the NRBQ band was a member of The Wildweeds and uses the musical genre, country music.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['The Wildweeds', 'Country music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ The Wildweeds', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music']]
Text: Al Anderson, who performs Country music, was in the band NRBQ and one played with The Wildweeds.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['The Wildweeds', 'Country music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ The Wildweeds', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music']]
Text: Al Anderson of NRBQ plays country music and was a member of The Wildweeds.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['The Wildweeds', 'Country music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ The Wildweeds', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']]
Text: Al Anderson is a rock musician from the NRBQ band. He was once a member of The Wildweeds.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['The Wildweeds', 'Rock music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ The Wildweeds', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']]
Text: Al Anderson of the NRBQ band whose genre is Rock music, played once with The Wildweeds.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['The Wildweeds', 'Rock music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ The Wildweeds', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']]
Text: Al Anderson, a member of the band NRBQ, performs rock music and was a member of The Wildweeds.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['The Wildweeds', 'Rock music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ United States', '__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ Windsor, Connecticut, United States']]
Text: Al Anderson, of the band NRBQ was born in Windsor, Connecticut, United States.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['birthPlace', 'birthPlace']
Object: ['United States', 'Windsor, Connecticut, United States']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ United States', '__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ Windsor, Connecticut, United States']]
Text: NRBQ band member Al Anderson was born in Windsor, Connecticut, United States.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['birthPlace', 'birthPlace']
Object: ['United States', 'Windsor, Connecticut, United States']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ United States', '__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ Windsor, Connecticut, United States']]
Text: Al Anderson was born in Windsor, Connecticut, United States and is part of the band NRBQ.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['birthPlace', 'birthPlace']
Object: ['United States', 'Windsor, Connecticut, United States']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ Windsor, Connecticut', '__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ Windsor, Connecticut, United States']]
Text: Al Anderson who is a member of NRBQ band, was born in Windsor, Connecticut, United States.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Windsor, Connecticut', 'Windsor, Connecticut, United States']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ Windsor, Connecticut', '__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ Windsor, Connecticut, United States']]
Text: Al Anderson, part of the NRBQ band, was born in Windsor, Connecticut, in the United States.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Windsor, Connecticut', 'Windsor, Connecticut, United States']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ Windsor, Connecticut', '__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ Windsor, Connecticut, United States']]
Text: Al Anderson, from NRBQ, was born in Windsor, Connecticut, United States.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Windsor, Connecticut', 'Windsor, Connecticut, United States']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music', '__subject__ Country music __predicate__ stylisticOrigin __object__ Blues']]
Text: Al Anderson of NRBQ plays country music which originated from blues music.
Subject: ['Al Anderson (NRBQ band)', 'Country music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Country music', 'Blues']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music', '__subject__ Country music __predicate__ stylisticOrigin __object__ Blues']]
Text: Country music has its origins in the blues and one of its performers is Al Anderson of NRBQ.
Subject: ['Al Anderson (NRBQ band)', 'Country music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Country music', 'Blues']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music', '__subject__ Country music __predicate__ stylisticOrigin __object__ Blues']]
Text: Country music, originating from blues music, is performed by Al Anderson (NRBQ band).
Subject: ['Al Anderson (NRBQ band)', 'Country music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Country music', 'Blues']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music', '__subject__ Rock music __predicate__ stylisticOrigin __object__ Blues']]
Text: Al Anderson plays rock music which has its origins in Blues.
Subject: ['Al Anderson (NRBQ band)', 'Rock music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rock music', 'Blues']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music', '__subject__ Rock music __predicate__ stylisticOrigin __object__ Blues']]
Text: Al Anderson plays rock music, which originated from blues music.
Subject: ['Al Anderson (NRBQ band)', 'Rock music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rock music', 'Blues']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music', '__subject__ Rock music __predicate__ stylisticOrigin __object__ Blues']]
Text: Al Anderson is a member of the band NRBQ that performs rock music, which has its stylistic origins in the Blues.
Subject: ['Al Anderson (NRBQ band)', 'Rock music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rock music', 'Blues']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Guitar', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music']]
Text: Al Anderson performs country music with the NRBQ band. He plays the guitar.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['instrument', 'genre']
Object: ['Guitar', 'Country music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Guitar', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music']]
Text: Al Anderson of NRBQ plays country music and the guitar.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['instrument', 'genre']
Object: ['Guitar', 'Country music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Guitar', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music']]
Text: Country music guitar player AI Anderson is part of the band NRBQ.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['instrument', 'genre']
Object: ['Guitar', 'Country music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Guitar', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']]
Text: Al Anderson, a member of the band NRBQ, performs rock music and plays the guitar.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['instrument', 'genre']
Object: ['Guitar', 'Rock music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Guitar', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']]
Text: Rock musician and guitarist Al Anderson is with the band NRBQ.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['instrument', 'genre']
Object: ['Guitar', 'Rock music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Guitar', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']]
Text: Al Anderson is a guitarist for NRBQ, a band which performs rock music.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['instrument', 'genre']
Object: ['Guitar', 'Rock music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Singing', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music']]
Text: Al Anderson from the band, NRBQ, is a singer and his musical genre is country music.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['instrument', 'genre']
Object: ['Singing', 'Country music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Singing', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music']]
Text: Al Anderson is a singer in the band NRBQ and his musical genre is country music.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['instrument', 'genre']
Object: ['Singing', 'Country music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Singing', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music']]
Text: Al Anderson is a singer with the country music band NRBQ.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['instrument', 'genre']
Object: ['Singing', 'Country music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Singing', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']]
Text: Al Anderson from the band, NRBQ, is a singer whose genre is rock music.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['instrument', 'genre']
Object: ['Singing', 'Rock music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Singing', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']]
Text: Al Anderson is a singer for the band NRBQ and their genre is Rock music.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['instrument', 'genre']
Object: ['Singing', 'Rock music']

Triple: [['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Singing', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']]
Text: NRBQ singer Al Anderson plays music in the rock genre.
Subject: ['Al Anderson (NRBQ band)', 'Al Anderson (NRBQ band)']
Predicate: ['instrument', 'genre']
Object: ['Singing', 'Rock music']

Triple: [['__subject__ Alan Frew __predicate__ birthPlace __object__ Coatbridge', '__subject__ Alan Frew __predicate__ background __object__ solo singer']]
Text: Alan Frew, a solo singer, was born in Coatbridge.
Subject: ['Alan Frew', 'Alan Frew']
Predicate: ['birthPlace', 'background']
Object: ['Coatbridge', 'solo singer']

Triple: [['__subject__ Alan Frew __predicate__ birthPlace __object__ Coatbridge', '__subject__ Alan Frew __predicate__ background __object__ solo singer']]
Text: The solo singer Alan Frews was born in Coatbridge.
Subject: ['Alan Frew', 'Alan Frew']
Predicate: ['birthPlace', 'background']
Object: ['Coatbridge', 'solo singer']

Triple: [['__subject__ Alan Frew __predicate__ birthPlace __object__ Scotland', '__subject__ Alan Frew __predicate__ background __object__ solo singer']]
Text: Scotland born Alan Frew is a solo singer.
Subject: ['Alan Frew', 'Alan Frew']
Predicate: ['birthPlace', 'background']
Object: ['Scotland', 'solo singer']

Triple: [['__subject__ Alan Frew __predicate__ birthPlace __object__ Scotland', '__subject__ Alan Frew __predicate__ background __object__ solo singer']]
Text: Alan Frew is a solo singer born in Scotland.
Subject: ['Alan Frew', 'Alan Frew']
Predicate: ['birthPlace', 'background']
Object: ['Scotland', 'solo singer']

Triple: [['__subject__ Alan Frew __predicate__ birthPlace __object__ Scotland', '__subject__ Alan Frew __predicate__ background __object__ solo singer']]
Text: Scotland is the birth place of Alan Frew, a solo singer.
Subject: ['Alan Frew', 'Alan Frew']
Predicate: ['birthPlace', 'background']
Object: ['Scotland', 'solo singer']

Triple: [['__subject__ Alan Frew __predicate__ birthPlace __object__ United Kingdom', '__subject__ Alan Frew __predicate__ background __object__ solo singer']]
Text: Born in the U.K., Alan Frew has a background as a solo singer.
Subject: ['Alan Frew', 'Alan Frew']
Predicate: ['birthPlace', 'background']
Object: ['United Kingdom', 'solo singer']

Triple: [['__subject__ Alan Frew __predicate__ birthPlace __object__ United Kingdom', '__subject__ Alan Frew __predicate__ background __object__ solo singer']]
Text: Alan Frew, who is a solo singer, was born in the United Kingdom.
Subject: ['Alan Frew', 'Alan Frew']
Predicate: ['birthPlace', 'background']
Object: ['United Kingdom', 'solo singer']

Triple: [['__subject__ Alan Frew __predicate__ birthPlace __object__ United Kingdom', '__subject__ Alan Frew __predicate__ background __object__ solo singer']]
Text: The solo singer Alan Frews was born in the United Kingdom.
Subject: ['Alan Frew', 'Alan Frew']
Predicate: ['birthPlace', 'background']
Object: ['United Kingdom', 'solo singer']

Triple: [['__subject__ Alan Frew __predicate__ genre __object__ Alternative rock', '__subject__ Alternative rock __predicate__ musicSubgenre __object__ Christian alternative rock']]
Text: Alan Frew's musical genre is Alternative rock, which has the sungenre, Christian alternative rock.
Subject: ['Alan Frew', 'Alternative rock']
Predicate: ['genre', 'musicSubgenre']
Object: ['Alternative rock', 'Christian alternative rock']

Triple: [['__subject__ Alan Frew __predicate__ genre __object__ Alternative rock', '__subject__ Alternative rock __predicate__ musicSubgenre __object__ Christian alternative rock']]
Text: Alan Frew plays Alternative rock and a sub genre of this music is Christian alternative rock.
Subject: ['Alan Frew', 'Alternative rock']
Predicate: ['genre', 'musicSubgenre']
Object: ['Alternative rock', 'Christian alternative rock']

Triple: [['__subject__ Alan Frew __predicate__ genre __object__ Alternative rock', '__subject__ Alternative rock __predicate__ musicSubgenre __object__ Christian alternative rock']]
Text: Alan Frew performs alternative rock music which has a subgenre known as Christian alternative rock.
Subject: ['Alan Frew', 'Alternative rock']
Predicate: ['genre', 'musicSubgenre']
Object: ['Alternative rock', 'Christian alternative rock']

Triple: [['__subject__ Alan Frew __predicate__ genre __object__ Rock music', '__subject__ Rock music __predicate__ stylisticOrigin __object__ Blues']]
Text: Alan Frews' musical genre is rock music which originated from blues music.
Subject: ['Alan Frew', 'Rock music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rock music', 'Blues']

Triple: [['__subject__ Alan Frew __predicate__ genre __object__ Rock music', '__subject__ Rock music __predicate__ stylisticOrigin __object__ Blues']]
Text: Alan Frew performs rock music, a genre that has the blues as its stylistic origin.
Subject: ['Alan Frew', 'Rock music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rock music', 'Blues']

Triple: [['__subject__ Alan Frew __predicate__ genre __object__ Rock music', '__subject__ Rock music __predicate__ stylisticOrigin __object__ Blues']]
Text: Blues is the origin of Rock music, the style of musician Alan Frew.
Subject: ['Alan Frew', 'Rock music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rock music', 'Blues']

Triple: [['__subject__ Alan Frew __predicate__ genre __object__ Rock music', '__subject__ Rock music __predicate__ stylisticOrigin __object__ Folk music']]
Text: Alan Frew's genre is rock music which has its stylistic origins in folk music.
Subject: ['Alan Frew', 'Rock music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rock music', 'Folk music']

Triple: [['__subject__ Alan Frew __predicate__ genre __object__ Rock music', '__subject__ Rock music __predicate__ stylisticOrigin __object__ Folk music']]
Text: Alan Frew is a performer of rock music, the stylistics of which, originated from folk music.
Subject: ['Alan Frew', 'Rock music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rock music', 'Folk music']

Triple: [['__subject__ Alan Frew __predicate__ origin __object__ Canada', '__subject__ Alan Frew __predicate__ background __object__ solo singer']]
Text: Solo singer, Alan Frew, comes from Canada.
Subject: ['Alan Frew', 'Alan Frew']
Predicate: ['origin', 'background']
Object: ['Canada', 'solo singer']

Triple: [['__subject__ Alan Frew __predicate__ origin __object__ Canada', '__subject__ Alan Frew __predicate__ background __object__ solo singer']]
Text: Alan Frew's origins are from Canada and background is that of solo singer.
Subject: ['Alan Frew', 'Alan Frew']
Predicate: ['origin', 'background']
Object: ['Canada', 'solo singer']

Triple: [['__subject__ Alan Frew __predicate__ origin __object__ Canada', '__subject__ Alan Frew __predicate__ background __object__ solo singer']]
Text: Singer soloist Alan Frew is from Canada.
Subject: ['Alan Frew', 'Alan Frew']
Predicate: ['origin', 'background']
Object: ['Canada', 'solo singer']

Triple: [['__subject__ Alan Frew __predicate__ origin __object__ Canada', '__subject__ Alan Frew __predicate__ origin __object__ Newmarket, Ontario']]
Text: Newmarket Ontario, which is part of Canada, is where Alan Frew is originally from.
Subject: ['Alan Frew', 'Alan Frew']
Predicate: ['origin', 'origin']
Object: ['Canada', 'Newmarket, Ontario']

Triple: [['__subject__ Alan Frew __predicate__ origin __object__ Canada', '__subject__ Alan Frew __predicate__ origin __object__ Newmarket, Ontario']]
Text: Alan Frew comes from Newmarket, Ontario, in Canada.
Subject: ['Alan Frew', 'Alan Frew']
Predicate: ['origin', 'origin']
Object: ['Canada', 'Newmarket, Ontario']

Triple: [['__subject__ Alan Frew __predicate__ origin __object__ Canada', '__subject__ Alan Frew __predicate__ origin __object__ Newmarket, Ontario']]
Text: Alan Frew if from Newmarket, Ontario, Canada.
Subject: ['Alan Frew', 'Alan Frew']
Predicate: ['origin', 'origin']
Object: ['Canada', 'Newmarket, Ontario']

Triple: [['__subject__ Albennie Jones __predicate__ background __object__ solo singer', '__subject__ Albennie Jones __predicate__ genre __object__ Blues']]
Text: Albennie Jones is a solo singer and played blues music.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['background', 'genre']
Object: ['solo singer', 'Blues']

Triple: [['__subject__ Albennie Jones __predicate__ background __object__ solo singer', '__subject__ Albennie Jones __predicate__ genre __object__ Blues']]
Text: Albennie Jones is a solo singer who plays the Blues.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['background', 'genre']
Object: ['solo singer', 'Blues']

Triple: [['__subject__ Albennie Jones __predicate__ background __object__ solo singer', '__subject__ Albennie Jones __predicate__ genre __object__ Blues']]
Text: Albennie Jones is a solo singer who plays blues music.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['background', 'genre']
Object: ['solo singer', 'Blues']

Triple: [['__subject__ Albennie Jones __predicate__ birthPlace __object__ United States', '__subject__ Albennie Jones __predicate__ birthPlace __object__ Errata, Mississippi']]
Text: Albennie Jones was born in Errata, Mississippi in the United States.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['birthPlace', 'birthPlace']
Object: ['United States', 'Errata, Mississippi']

Triple: [['__subject__ Albennie Jones __predicate__ birthPlace __object__ United States', '__subject__ Albennie Jones __predicate__ birthPlace __object__ Errata, Mississippi']]
Text: Albennie Jones was born in Errata Mississippi which is in the United States.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['birthPlace', 'birthPlace']
Object: ['United States', 'Errata, Mississippi']

Triple: [['__subject__ Albennie Jones __predicate__ birthPlace __object__ United States', '__subject__ Albennie Jones __predicate__ birthPlace __object__ Errata, Mississippi']]
Text: Albennie Jones was born in Errata Mississippi in the U.S.A.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['birthPlace', 'birthPlace']
Object: ['United States', 'Errata, Mississippi']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Jazz', '__subject__ Albennie Jones __predicate__ background __object__ solo singer']]
Text: Albennie Jones, a jazz artist, is a solo singer.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['genre', 'background']
Object: ['Jazz', 'solo singer']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Jazz', '__subject__ Albennie Jones __predicate__ background __object__ solo singer']]
Text: Albennie Jones, a jazz artist, has a background as a solo singer.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['genre', 'background']
Object: ['Jazz', 'solo singer']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Jazz', '__subject__ Albennie Jones __predicate__ background __object__ solo singer']]
Text: Albennie Jones is a solo singer and performs jazz music.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['genre', 'background']
Object: ['Jazz', 'solo singer']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Jazz', '__subject__ Albennie Jones __predicate__ birthPlace __object__ United States']]
Text: Albennie Jones is a jazz artist who was born in the U.S.A.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['genre', 'birthPlace']
Object: ['Jazz', 'United States']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Jazz', '__subject__ Albennie Jones __predicate__ birthPlace __object__ United States']]
Text: Jazz musician, Albennie Jones, was born in the U.S.A.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['genre', 'birthPlace']
Object: ['Jazz', 'United States']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Jazz', '__subject__ Albennie Jones __predicate__ birthPlace __object__ United States']]
Text: American born Albennie Jones is a performer of jazz music.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['genre', 'birthPlace']
Object: ['Jazz', 'United States']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Jazz', '__subject__ Jazz __predicate__ musicFusionGenre __object__ Afrobeat']]
Text: Albennie Jones performs jazz music and one type of jazz fusion music is Afrobeat.
Subject: ['Albennie Jones', 'Jazz']
Predicate: ['genre', 'musicFusionGenre']
Object: ['Jazz', 'Afrobeat']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Jazz', '__subject__ Jazz __predicate__ musicFusionGenre __object__ Afrobeat']]
Text: Albennie Jones plays jazz, elements of which are contained in the fusion genre Afrobeat.
Subject: ['Albennie Jones', 'Jazz']
Predicate: ['genre', 'musicFusionGenre']
Object: ['Jazz', 'Afrobeat']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Rhythm and blues', '__subject__ Albennie Jones __predicate__ background __object__ solo singer']]
Text: Solo singer Albennie Jones plays rhythm and blues.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['genre', 'background']
Object: ['Rhythm and blues', 'solo singer']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Rhythm and blues', '__subject__ Albennie Jones __predicate__ background __object__ solo singer']]
Text: Albennie Jonesis a solo singer who performs rhythm and blues.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['genre', 'background']
Object: ['Rhythm and blues', 'solo singer']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Rhythm and blues', '__subject__ Albennie Jones __predicate__ background __object__ solo singer']]
Text: Albennie Jones is a solo singer in the rhythm and blues genre.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['genre', 'background']
Object: ['Rhythm and blues', 'solo singer']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Rhythm and blues', '__subject__ Albennie Jones __predicate__ birthPlace __object__ United States']]
Text: Born in the United States, Albennie Jones, performs in the rhythm and blues genre.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['genre', 'birthPlace']
Object: ['Rhythm and blues', 'United States']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Rhythm and blues', '__subject__ Albennie Jones __predicate__ birthPlace __object__ United States']]
Text: Albennie Jones (born in the United States) performs rhythm and blues music.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['genre', 'birthPlace']
Object: ['Rhythm and blues', 'United States']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Rhythm and blues', '__subject__ Albennie Jones __predicate__ birthPlace __object__ United States']]
Text: Albennie Jones, a performer of rhythm and blues, was born in the United States.
Subject: ['Albennie Jones', 'Albennie Jones']
Predicate: ['genre', 'birthPlace']
Object: ['Rhythm and blues', 'United States']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Disco']]
Text: Disco is a derivative of rhythm and blues which is the musical genre of Albennie Jones.
Subject: ['Albennie Jones', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Disco']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Disco']]
Text: Disco is a derivative of rhythm and blues, one of the performers of the rhythm and blues genre is, Albennie Jones.
Subject: ['Albennie Jones', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Disco']

Triple: [['__subject__ Albennie Jones __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Disco']]
Text: Albennie Jones is a performer of rhythm and blues which is a music genre which has a disco derivative.
Subject: ['Albennie Jones', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Disco']

Triple: [['__subject__ Aleksandra Kovač __predicate__ genre __object__ Funk', '__subject__ Aleksandra Kovač __predicate__ background __object__ solo singer']]
Text: Aleksandra Kovac is a solo singer and her genre of music is Funk.
Subject: ['Aleksandra Kovač', 'Aleksandra Kovač']
Predicate: ['genre', 'background']
Object: ['Funk', 'solo singer']

Triple: [['__subject__ Aleksandra Kovač __predicate__ genre __object__ Funk', '__subject__ Aleksandra Kovač __predicate__ background __object__ solo singer']]
Text: Aleksandra Kovac is an exponent of Funk and a solo singer.
Subject: ['Aleksandra Kovač', 'Aleksandra Kovač']
Predicate: ['genre', 'background']
Object: ['Funk', 'solo singer']

Triple: [['__subject__ Aleksandra Kovač __predicate__ genre __object__ Funk', '__subject__ Aleksandra Kovač __predicate__ background __object__ solo singer']]
Text: Aleksandra Kovac is a solo singer who performs funk music.
Subject: ['Aleksandra Kovač', 'Aleksandra Kovač']
Predicate: ['genre', 'background']
Object: ['Funk', 'solo singer']

Triple: [['__subject__ Aleksandra Kovač __predicate__ genre __object__ Pop music', '__subject__ Pop music __predicate__ musicFusionGenre __object__ Disco']]
Text: Disco is a genre of music that contain elements of other genres such as pop music which is the musical genre of Aleksandra Kovac.
Subject: ['Aleksandra Kovač', 'Pop music']
Predicate: ['genre', 'musicFusionGenre']
Object: ['Pop music', 'Disco']

Triple: [['__subject__ Aleksandra Kovač __predicate__ genre __object__ Pop music', '__subject__ Pop music __predicate__ musicFusionGenre __object__ Disco']]
Text: Aleksandra Kovac is a pop music performer and Disco is a fusion genre of pop music.
Subject: ['Aleksandra Kovač', 'Pop music']
Predicate: ['genre', 'musicFusionGenre']
Object: ['Pop music', 'Disco']

Triple: [['__subject__ Aleksandra Kovač __predicate__ genre __object__ Pop music', '__subject__ Pop music __predicate__ musicFusionGenre __object__ Disco']]
Text: Aleksandra Kovač's musical genre is Pop which is a fusion genre of disco.
Subject: ['Aleksandra Kovač', 'Pop music']
Predicate: ['genre', 'musicFusionGenre']
Object: ['Pop music', 'Disco']

Triple: [['__subject__ Aleksandra Kovač __predicate__ genre __object__ Rhythm and blues', '__subject__ Aleksandra Kovač __predicate__ activeYearsStartYear __object__ 1990']]
Text: Aleksandra Kovac became active in 1990 and uses the musical genre, rhythm and blues.
Subject: ['Aleksandra Kovač', 'Aleksandra Kovač']
Predicate: ['genre', 'activeYearsStartYear']
Object: ['Rhythm and blues', '1990']

Triple: [['__subject__ Aleksandra Kovač __predicate__ genre __object__ Rhythm and blues', '__subject__ Aleksandra Kovač __predicate__ activeYearsStartYear __object__ 1990']]
Text: Aleksandra Kovac, a rhythm and blues artist, started playing in 1990.
Subject: ['Aleksandra Kovač', 'Aleksandra Kovač']
Predicate: ['genre', 'activeYearsStartYear']
Object: ['Rhythm and blues', '1990']

Triple: [['__subject__ Aleksandra Kovač __predicate__ genre __object__ Rhythm and blues', '__subject__ Aleksandra Kovač __predicate__ activeYearsStartYear __object__ 1990']]
Text: Aleksandra Kovač began her musical career in 1990 and her genre is rhythm and blues.
Subject: ['Aleksandra Kovač', 'Aleksandra Kovač']
Predicate: ['genre', 'activeYearsStartYear']
Object: ['Rhythm and blues', '1990']

Triple: [['__subject__ Aleksandra Kovač __predicate__ genre __object__ Rhythm and blues', '__subject__ Aleksandra Kovač __predicate__ background __object__ solo singer']]
Text: Aleksandra Kovac is a solo singer whose musical genre is rhythm and blues.
Subject: ['Aleksandra Kovač', 'Aleksandra Kovač']
Predicate: ['genre', 'background']
Object: ['Rhythm and blues', 'solo singer']

Triple: [['__subject__ Aleksandra Kovač __predicate__ genre __object__ Rhythm and blues', '__subject__ Aleksandra Kovač __predicate__ background __object__ solo singer']]
Text: Solo singer Aleksandra Kovac is a Rhythm and Blues musician.
Subject: ['Aleksandra Kovač', 'Aleksandra Kovač']
Predicate: ['genre', 'background']
Object: ['Rhythm and blues', 'solo singer']

Triple: [['__subject__ Aleksandra Kovač __predicate__ genre __object__ Rhythm and blues', '__subject__ Aleksandra Kovač __predicate__ background __object__ solo singer']]
Text: Aleksandra Kovac is an exponent of rhythm and blues and a solo singer.
Subject: ['Aleksandra Kovač', 'Aleksandra Kovač']
Predicate: ['genre', 'background']
Object: ['Rhythm and blues', 'solo singer']

Triple: [['__subject__ Aleksandra Kovač __predicate__ genre __object__ Soul music', '__subject__ Aleksandra Kovač __predicate__ background __object__ solo singer']]
Text: Aleksandra Kovac is a solo singer with the genre soul music.
Subject: ['Aleksandra Kovač', 'Aleksandra Kovač']
Predicate: ['genre', 'background']
Object: ['Soul music', 'solo singer']

Triple: [['__subject__ Aleksandra Kovač __predicate__ genre __object__ Soul music', '__subject__ Aleksandra Kovač __predicate__ background __object__ solo singer']]
Text: Aleksandra Kovac, a solo singer, performs soul music.
Subject: ['Aleksandra Kovač', 'Aleksandra Kovač']
Predicate: ['genre', 'background']
Object: ['Soul music', 'solo singer']

Triple: [['__subject__ Aleksandra Kovač __predicate__ genre __object__ Soul music', '__subject__ Aleksandra Kovač __predicate__ background __object__ solo singer']]
Text: Aleksandra Kovač, who was once a solo singer, performs soul music.
Subject: ['Aleksandra Kovač', 'Aleksandra Kovač']
Predicate: ['genre', 'background']
Object: ['Soul music', 'solo singer']

Triple: [['__subject__ Alex Day __predicate__ associatedBand/associatedMusicalArtist __object__ Chameleon Circuit (band)', '__subject__ Alex Day __predicate__ associatedBand/associatedMusicalArtist __object__ Charlie McDonnell']]
Text: Chameleon Circuit member Alex Day has collaborated with artist Charlie McDonnell.
Subject: ['Alex Day', 'Alex Day']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Chameleon Circuit (band)', 'Charlie McDonnell']

Triple: [['__subject__ Alex Day __predicate__ associatedBand/associatedMusicalArtist __object__ Chameleon Circuit (band)', '__subject__ Alex Day __predicate__ associatedBand/associatedMusicalArtist __object__ Charlie McDonnell']]
Text: Alex Day plays with Chameleon Circuit and is associated with Charlie McDonnell.
Subject: ['Alex Day', 'Alex Day']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Chameleon Circuit (band)', 'Charlie McDonnell']

Triple: [['__subject__ Alex Day __predicate__ associatedBand/associatedMusicalArtist __object__ Chameleon Circuit (band)', '__subject__ Alex Day __predicate__ associatedBand/associatedMusicalArtist __object__ Charlie McDonnell']]
Text: Alex Day who is associated with the musical artist Charlie McDonnell, plays with the band Chameleon Circuit.
Subject: ['Alex Day', 'Alex Day']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Chameleon Circuit (band)', 'Charlie McDonnell']

Triple: [['__subject__ Alex Day __predicate__ birthPlace __object__ Hornchurch', '__subject__ Alex Day __predicate__ birthPlace __object__ London Borough of Havering']]
Text: Alex Day was born in Hornchurch, in the London Borough of Havering.
Subject: ['Alex Day', 'Alex Day']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Hornchurch', 'London Borough of Havering']

Triple: [['__subject__ Alex Day __predicate__ birthPlace __object__ Hornchurch', '__subject__ Alex Day __predicate__ birthPlace __object__ London Borough of Havering']]
Text: Alex Day was born in Hornchurch in the London Borough of Havering.
Subject: ['Alex Day', 'Alex Day']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Hornchurch', 'London Borough of Havering']

Triple: [['__subject__ Alex Day __predicate__ birthPlace __object__ United Kingdom', '__subject__ Alex Day __predicate__ birthPlace __object__ Hornchurch']]
Text: Alex Day was born in Hornchurch, in the U.K.
Subject: ['Alex Day', 'Alex Day']
Predicate: ['birthPlace', 'birthPlace']
Object: ['United Kingdom', 'Hornchurch']

Triple: [['__subject__ Alex Day __predicate__ birthPlace __object__ United Kingdom', '__subject__ Alex Day __predicate__ birthPlace __object__ Hornchurch']]
Text: Alex Day was born in the Hornchurch, United Kingdom.
Subject: ['Alex Day', 'Alex Day']
Predicate: ['birthPlace', 'birthPlace']
Object: ['United Kingdom', 'Hornchurch']

Triple: [['__subject__ Alex Day __predicate__ birthPlace __object__ United Kingdom', '__subject__ Alex Day __predicate__ birthPlace __object__ Hornchurch']]
Text: Alex Day was born in Hornchurch, United Kingdom.
Subject: ['Alex Day', 'Alex Day']
Predicate: ['birthPlace', 'birthPlace']
Object: ['United Kingdom', 'Hornchurch']

Triple: [['__subject__ Alex Day __predicate__ birthPlace __object__ United Kingdom', '__subject__ Alex Day __predicate__ birthPlace __object__ London Borough of Havering']]
Text: Alex Day was born in the London Borough of Havering in the United Kingdom.
Subject: ['Alex Day', 'Alex Day']
Predicate: ['birthPlace', 'birthPlace']
Object: ['United Kingdom', 'London Borough of Havering']

Triple: [['__subject__ Alex Day __predicate__ birthPlace __object__ United Kingdom', '__subject__ Alex Day __predicate__ birthPlace __object__ London Borough of Havering']]
Text: Alex Day was born in the London Borough of Havering, United Kingdom.
Subject: ['Alex Day', 'Alex Day']
Predicate: ['birthPlace', 'birthPlace']
Object: ['United Kingdom', 'London Borough of Havering']

Triple: [['__subject__ Alex Day __predicate__ birthPlace __object__ United Kingdom', '__subject__ Alex Day __predicate__ birthPlace __object__ London Borough of Havering']]
Text: Alex Day was born in the London borough of Havering in the U.K.
Subject: ['Alex Day', 'Alex Day']
Predicate: ['birthPlace', 'birthPlace']
Object: ['United Kingdom', 'London Borough of Havering']

Triple: [['__subject__ Alex Day __predicate__ genre __object__ Synthpop', '__subject__ Synthpop __predicate__ derivative __object__ House music']]
Text: Alex Day performs Synthpop music, a form of House music.
Subject: ['Alex Day', 'Synthpop']
Predicate: ['genre', 'derivative']
Object: ['Synthpop', 'House music']

Triple: [['__subject__ Alex Day __predicate__ genre __object__ Synthpop', '__subject__ Synthpop __predicate__ derivative __object__ House music']]
Text: The musical genre of Alex Day is Synthpop which is derived from house music.
Subject: ['Alex Day', 'Synthpop']
Predicate: ['genre', 'derivative']
Object: ['Synthpop', 'House music']

Triple: [['__subject__ Alex Day __predicate__ genre __object__ Synthpop', '__subject__ Synthpop __predicate__ derivative __object__ House music']]
Text: Alex Day performs Synthpop music which is a musical derivative of house music.
Subject: ['Alex Day', 'Synthpop']
Predicate: ['genre', 'derivative']
Object: ['Synthpop', 'House music']

Triple: [['__subject__ Alex Day __predicate__ genre __object__ Synthpop', '__subject__ Synthpop __predicate__ stylisticOrigin __object__ Pop music']]
Text: Alex Day performs Synthpop music which is a form of pop music.
Subject: ['Alex Day', 'Synthpop']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Synthpop', 'Pop music']

Triple: [['__subject__ Alex Day __predicate__ genre __object__ Synthpop', '__subject__ Synthpop __predicate__ stylisticOrigin __object__ Pop music']]
Text: Alex Day uses the Synthpop genre, the stylistic origin ofwhich is pop music.
Subject: ['Alex Day', 'Synthpop']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Synthpop', 'Pop music']

Triple: [['__subject__ Alex Day __predicate__ genre __object__ Synthpop', '__subject__ Synthpop __predicate__ stylisticOrigin __object__ Pop music']]
Text: Alex Day uses the Synthpop genre, a form of pop music.
Subject: ['Alex Day', 'Synthpop']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Synthpop', 'Pop music']

Triple: [['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ England', '__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester']]
Text: Alfred Garth Jones was born in Manchester, England.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['birthPlace', 'birthPlace']
Object: ['England', 'Manchester']

Triple: [['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ England', '__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester']]
Text: The birthplace of Alfred Garth Jones is Manchester, England.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['birthPlace', 'birthPlace']
Object: ['England', 'Manchester']

Triple: [['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ England', '__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester']]
Text: Alfred Garth Jones was born in Manchester in England.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['birthPlace', 'birthPlace']
Object: ['England', 'Manchester']

Triple: [['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ England', '__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ Sidcup']]
Text: England born Alfred Garth Jones, died in Sidcup.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['birthPlace', 'deathPlace']
Object: ['England', 'Sidcup']

Triple: [['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ England', '__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ Sidcup']]
Text: Alfred Garth Jones was born in England and died in Sidcup.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['birthPlace', 'deathPlace']
Object: ['England', 'Sidcup']

Triple: [['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ England', '__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ Sidcup']]
Text: Born in England, Alfred Garth Jones died in Sidcup.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['birthPlace', 'deathPlace']
Object: ['England', 'Sidcup']

Triple: [['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester', '__subject__ Alfred Garth Jones __predicate__ birthYear __object__ 1872']]
Text: Alfred Garth Jones was born in Manchester, in 1872.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['birthPlace', 'birthYear']
Object: ['Manchester', '1872']

Triple: [['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester', '__subject__ Alfred Garth Jones __predicate__ birthYear __object__ 1872']]
Text: Alfred Garth Jones was born in 1872 in Manchester.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['birthPlace', 'birthYear']
Object: ['Manchester', '1872']

Triple: [['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester', '__subject__ Alfred Garth Jones __predicate__ birthYear __object__ 1872']]
Text: Alfred Garth Jones was born in Manchester in 1872.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['birthPlace', 'birthYear']
Object: ['Manchester', '1872']

Triple: [['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester', '__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ Sidcup']]
Text: Alfred Garth Jones was born in Manchester and died in Sidcup.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['birthPlace', 'deathPlace']
Object: ['Manchester', 'Sidcup']

Triple: [['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester', '__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ Sidcup']]
Text: Alfred Garth Jones, born in Manchester, died in Sidcup.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['birthPlace', 'deathPlace']
Object: ['Manchester', 'Sidcup']

Triple: [['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester', '__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ Sidcup']]
Text: Alfred Garth Jones was born in Manchester and passed away in Sidcup.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['birthPlace', 'deathPlace']
Object: ['Manchester', 'Sidcup']

Triple: [['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester', '__subject__ Manchester __predicate__ leader __object__ Labour Party (UK)']]
Text: The Labour Party is in the majority in Manchester which is the birthplace of Alfred Garth Jones.
Subject: ['Alfred Garth Jones', 'Manchester']
Predicate: ['birthPlace', 'leader']
Object: ['Manchester', 'Labour Party (UK)']

Triple: [['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester', '__subject__ Manchester __predicate__ leader __object__ Labour Party (UK)']]
Text: The United Kingdom's Labour Party is the leader of Manchester, where Alfred Garth Jones was born.
Subject: ['Alfred Garth Jones', 'Manchester']
Predicate: ['birthPlace', 'leader']
Object: ['Manchester', 'Labour Party (UK)']

Triple: [['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester', '__subject__ Manchester __predicate__ leader __object__ Labour Party (UK)']]
Text: Alfred Garth Jones was born in Manchester where the Labour Party is in the majority.
Subject: ['Alfred Garth Jones', 'Manchester']
Predicate: ['birthPlace', 'leader']
Object: ['Manchester', 'Labour Party (UK)']

Triple: [['__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ London', '__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ England']]
Text: Alfred Garth Jones was born in England and died in London.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['deathPlace', 'birthPlace']
Object: ['London', 'England']

Triple: [['__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ London', '__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester']]
Text: Born in Manchester, Alfred Garth Jones, died in London.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['deathPlace', 'birthPlace']
Object: ['London', 'Manchester']

Triple: [['__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ London', '__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester']]
Text: Alfred Garth Jones was born in Manchester and he died in London.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['deathPlace', 'birthPlace']
Object: ['London', 'Manchester']

Triple: [['__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ London', '__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester']]
Text: Alfred Garth Jones was born in Manchester and died in London.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['deathPlace', 'birthPlace']
Object: ['London', 'Manchester']

Triple: [['__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ London', '__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ Sidcup']]
Text: Alfred Garth Jones died in Sidcup, London.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['deathPlace', 'deathPlace']
Object: ['London', 'Sidcup']

Triple: [['__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ London', '__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ Sidcup']]
Text: Alfred Garth Jones died in Sidcup, in London.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['deathPlace', 'deathPlace']
Object: ['London', 'Sidcup']

Triple: [['__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ London', '__subject__ London __predicate__ leader __object__ Boris Johnson']]
Text: Alfred Garth Jones died in London where Boris Johnson is its leader.
Subject: ['Alfred Garth Jones', 'London']
Predicate: ['deathPlace', 'leader']
Object: ['London', 'Boris Johnson']

Triple: [['__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ London', '__subject__ London __predicate__ leader __object__ Boris Johnson']]
Text: Alfred Garth Jones died in London, where Boris Johnson is leader.
Subject: ['Alfred Garth Jones', 'London']
Predicate: ['deathPlace', 'leader']
Object: ['London', 'Boris Johnson']

Triple: [['__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ London', '__subject__ London __predicate__ leader __object__ Boris Johnson']]
Text: Alfred Garth Jones died in London, where Boris Johnson is a leader.
Subject: ['Alfred Garth Jones', 'London']
Predicate: ['deathPlace', 'leader']
Object: ['London', 'Boris Johnson']

Triple: [['__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ London', '__subject__ London __predicate__ leaderTitle __object__ European Parliament']]
Text: Alfred Garth Jones died in London, where the leader is the European Parliament.
Subject: ['Alfred Garth Jones', 'London']
Predicate: ['deathPlace', 'leaderTitle']
Object: ['London', 'European Parliament']

Triple: [['__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ London', '__subject__ London __predicate__ leaderTitle __object__ European Parliament']]
Text: Alfred Garth Jones died in London, a place led by the European Parliament.
Subject: ['Alfred Garth Jones', 'London']
Predicate: ['deathPlace', 'leaderTitle']
Object: ['London', 'European Parliament']

Triple: [['__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ London', '__subject__ London __predicate__ leaderTitle __object__ European Parliament']]
Text: Alfred Garth Jones died in London, which is led by the European Parliament.
Subject: ['Alfred Garth Jones', 'London']
Predicate: ['deathPlace', 'leaderTitle']
Object: ['London', 'European Parliament']

Triple: [['__subject__ Alfred Garth Jones __predicate__ professionalField __object__ Illustration', '__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester']]
Text: Alfred Garth Jones was born in Manchester and makes a living as an illustrator.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['professionalField', 'birthPlace']
Object: ['Illustration', 'Manchester']

Triple: [['__subject__ Alfred Garth Jones __predicate__ professionalField __object__ Illustration', '__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester']]
Text: The birthplace of Alfred Garth Jones is Manchester and he makes a living as an illustrator.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['professionalField', 'birthPlace']
Object: ['Illustration', 'Manchester']

Triple: [['__subject__ Alfred Garth Jones __predicate__ professionalField __object__ Illustration', '__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester']]
Text: Born in Manchester, Alfred Garth Jones, was a professional illustrator.
Subject: ['Alfred Garth Jones', 'Alfred Garth Jones']
Predicate: ['professionalField', 'birthPlace']
Object: ['Illustration', 'Manchester']

Triple: [['__subject__ Alfredo Zitarrosa __predicate__ birthPlace __object__ Montevideo', '__subject__ Montevideo __predicate__ leader __object__ Daniel Martínez (politician)']]
Text: Alfredo Zitarrosa was born in Montevideo, a place led by Daniel Martinez.
Subject: ['Alfredo Zitarrosa', 'Montevideo']
Predicate: ['birthPlace', 'leader']
Object: ['Montevideo', 'Daniel Martínez (politician)']

Triple: [['__subject__ Alfredo Zitarrosa __predicate__ birthPlace __object__ Montevideo', '__subject__ Montevideo __predicate__ leader __object__ Daniel Martínez (politician)']]
Text: Alfredo Zitarrosa was born in Montevideo where the leader is the politician Daniel Martínez.
Subject: ['Alfredo Zitarrosa', 'Montevideo']
Predicate: ['birthPlace', 'leader']
Object: ['Montevideo', 'Daniel Martínez (politician)']

Triple: [['__subject__ Alfredo Zitarrosa __predicate__ birthPlace __object__ Montevideo', '__subject__ Montevideo __predicate__ leader __object__ Daniel Martínez (politician)']]
Text: The birth place of Alfredo Zitarrosa is Montevideo, where the leader is the politician Daniel Martínez.
Subject: ['Alfredo Zitarrosa', 'Montevideo']
Predicate: ['birthPlace', 'leader']
Object: ['Montevideo', 'Daniel Martínez (politician)']

Triple: [['__subject__ Alfredo Zitarrosa __predicate__ deathPlace __object__ Montevideo', '__subject__ Montevideo __predicate__ country __object__ Uruguay']]
Text: Alfredo Zitarrosa died in Montevideo in Uruguay.
Subject: ['Alfredo Zitarrosa', 'Montevideo']
Predicate: ['deathPlace', 'country']
Object: ['Montevideo', 'Uruguay']

Triple: [['__subject__ Alfredo Zitarrosa __predicate__ deathPlace __object__ Montevideo', '__subject__ Montevideo __predicate__ country __object__ Uruguay']]
Text: Alfredo Zitarrosa died in Montevideo, Uruguay.
Subject: ['Alfredo Zitarrosa', 'Montevideo']
Predicate: ['deathPlace', 'country']
Object: ['Montevideo', 'Uruguay']

Triple: [['__subject__ Alfredo Zitarrosa __predicate__ deathPlace __object__ Montevideo', '__subject__ Montevideo __predicate__ country __object__ Uruguay']]
Text: Alfredo Zitarrosa died in Montevideo, in Uruguay.
Subject: ['Alfredo Zitarrosa', 'Montevideo']
Predicate: ['deathPlace', 'country']
Object: ['Montevideo', 'Uruguay']

Triple: [['__subject__ Alfredo Zitarrosa __predicate__ genre __object__ Candombe', '__subject__ Alfredo Zitarrosa __predicate__ background __object__ solo singer']]
Text: Alfredo Zitarrosa is solo singer and his musical genre is Candombe.
Subject: ['Alfredo Zitarrosa', 'Alfredo Zitarrosa']
Predicate: ['genre', 'background']
Object: ['Candombe', 'solo singer']

Triple: [['__subject__ Alfredo Zitarrosa __predicate__ genre __object__ Candombe', '__subject__ Alfredo Zitarrosa __predicate__ background __object__ solo singer']]
Text: Solo singer Alfredo Zitarrosa plays Candombe music.
Subject: ['Alfredo Zitarrosa', 'Alfredo Zitarrosa']
Predicate: ['genre', 'background']
Object: ['Candombe', 'solo singer']

Triple: [['__subject__ Alfredo Zitarrosa __predicate__ genre __object__ Candombe', '__subject__ Alfredo Zitarrosa __predicate__ background __object__ solo singer']]
Text: Alfredo Zitarrosa's background includes solo singing and his musical genre is Candombe.
Subject: ['Alfredo Zitarrosa', 'Alfredo Zitarrosa']
Predicate: ['genre', 'background']
Object: ['Candombe', 'solo singer']

Triple: [['__subject__ Alfredo Zitarrosa __predicate__ recordLabel __object__ RCA Records', '__subject__ RCA Records __predicate__ distributingCompany __object__ Legacy Recordings']]
Text: Alfredo Zitarrosa was signed to the RCA Records label, the distributing company of which, is Legacy Recordings.
Subject: ['Alfredo Zitarrosa', 'RCA Records']
Predicate: ['recordLabel', 'distributingCompany']
Object: ['RCA Records', 'Legacy Recordings']

Triple: [['__subject__ Alfredo Zitarrosa __predicate__ recordLabel __object__ RCA Records', '__subject__ RCA Records __predicate__ distributingCompany __object__ Legacy Recordings']]
Text: Alfredo Zitarrosa's record label is RCA Records which is distributed by Legacy Recordings.
Subject: ['Alfredo Zitarrosa', 'RCA Records']
Predicate: ['recordLabel', 'distributingCompany']
Object: ['RCA Records', 'Legacy Recordings']

Triple: [['__subject__ Alfredo Zitarrosa __predicate__ recordLabel __object__ RCA Records', '__subject__ RCA Records __predicate__ distributingCompany __object__ Legacy Recordings']]
Text: Alfredo Zitarrosa has a recording label in RCA Records in which Legacy Recordings is the distributing company.
Subject: ['Alfredo Zitarrosa', 'RCA Records']
Predicate: ['recordLabel', 'distributingCompany']
Object: ['RCA Records', 'Legacy Recordings']

Triple: [['__subject__ Alfredo Zitarrosa __predicate__ recordLabel __object__ RCA Records', '__subject__ RCA Records __predicate__ distributingCompany __object__ Sony Music Entertainment']]
Text: Alfredo Zitarrosa has a recording label in RCA Records, in which Sony Music Entertainment is the distribution company.
Subject: ['Alfredo Zitarrosa', 'RCA Records']
Predicate: ['recordLabel', 'distributingCompany']
Object: ['RCA Records', 'Sony Music Entertainment']

Triple: [['__subject__ Alfredo Zitarrosa __predicate__ recordLabel __object__ RCA Records', '__subject__ RCA Records __predicate__ distributingCompany __object__ Sony Music Entertainment']]
Text: Alfredo Zitarrosa is signed to RCA Records whose distributor is Sony Music Entertainment.
Subject: ['Alfredo Zitarrosa', 'RCA Records']
Predicate: ['recordLabel', 'distributingCompany']
Object: ['RCA Records', 'Sony Music Entertainment']

Triple: [['__subject__ Alfredo Zitarrosa __predicate__ recordLabel __object__ RCA Records', '__subject__ RCA Records __predicate__ distributingCompany __object__ Sony Music Entertainment']]
Text: Alfredo Zitarrosa was signed to the RCA Records label, the distribution company of which, is Sony Music Entertainment.
Subject: ['Alfredo Zitarrosa', 'RCA Records']
Predicate: ['recordLabel', 'distributingCompany']
Object: ['RCA Records', 'Sony Music Entertainment']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Flibbertigibbet", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Mellow Candle"]]
Text: Alison O'Donnell was a member of the Flibbertigibbet band and he is also an artist for the band Mellow Candle.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Flibbertigibbet', 'Mellow Candle']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Flibbertigibbet", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Mellow Candle"]]
Text: Alison O'Donnell was a member of both the Flibbertigibbet band and the Mellow Candle band.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Flibbertigibbet', 'Mellow Candle']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Flibbertigibbet", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ United Bible Studies"]]
Text: Alison O'Donnell is a musician for the United Bible Studies band and was previously member of the Flibbertigibbet band.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Flibbertigibbet', 'United Bible Studies']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Flibbertigibbet", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ United Bible Studies"]]
Text: Alison O'Donnell, formerly of the Flibbertigibbet band, plays for United Bible Studies.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Flibbertigibbet', 'United Bible Studies']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Flibbertigibbet", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ United Bible Studies"]]
Text: Alison O'Donnell was a member of the Flibbertigibbet band and performed for the band United Bible Studies.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Flibbertigibbet', 'United Bible Studies']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Mellow Candle", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ United Bible Studies"]]
Text: Alison O'Donnell is an artist for the band Mellow Candle, having previously performed for the band United Bible Studies.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Mellow Candle', 'United Bible Studies']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Mellow Candle", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ United Bible Studies"]]
Text: Alison O'Donnell is a musician for the band United Bible Studies and is an artist for the band Mellow Candle.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Mellow Candle', 'United Bible Studies']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Mellow Candle", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ United Bible Studies"]]
Text: Alison O’Donnell was in the band Mellow Candle and performed for the band United Bible Studies.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Mellow Candle', 'United Bible Studies']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Plastik Mak", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Flibbertigibbet"]]
Text: Alison O'Donnell, formerly of the Flibbertigibbet band, is associated with Plastik Mak.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Plastik Mak', 'Flibbertigibbet']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Plastik Mak", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Flibbertigibbet"]]
Text: Alison O'Donnell is associated with Plastik Mak and was a member of the Flibbertigibbet band.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Plastik Mak', 'Flibbertigibbet']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Plastik Mak", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Flibbertigibbet"]]
Text: Musician Alison O'Donnell is a member of Flibbertigibbet and associated with Plastik Mak.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Plastik Mak', 'Flibbertigibbet']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Plastik Mak", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Mellow Candle"]]
Text: Alison O'Donnell is an artist for the bands Mellow Candle and Plastik Mak.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Plastik Mak', 'Mellow Candle']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Plastik Mak", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Mellow Candle"]]
Text: Alison O’Donnell was in the band Mellow Candle and is associated with the Plastik Mak.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Plastik Mak', 'Mellow Candle']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Plastik Mak", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Mellow Candle"]]
Text: Alison O'Donnell is associated with Plastik Mak and plays with Mellow Candle.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Plastik Mak', 'Mellow Candle']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Plastik Mak", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ The Owl Service (band)"]]
Text: Musician Alison O'Donnell is associated with The Owl Service and Plastik Mak.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Plastik Mak', 'The Owl Service (band)']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Plastik Mak", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ The Owl Service (band)"]]
Text: Alison O'Donnell is associated with Plastik Mak and The Owl Service.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Plastik Mak', 'The Owl Service (band)']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Plastik Mak", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ The Owl Service (band)"]]
Text: Alison O'Donnell is a musician associated with the Plastik Mak and The Owl Service.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Plastik Mak', 'The Owl Service (band)']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Plastik Mak", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ United Bible Studies"]]
Text: Alison O'Donnell performed for the band United Bible Studies and is associated with Plastik Mak.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Plastik Mak', 'United Bible Studies']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Plastik Mak", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ United Bible Studies"]]
Text: Alison O'Donnell is a musician associated with the Plastik Mak and he performed for the band United Bible Studies.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Plastik Mak', 'United Bible Studies']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Plastik Mak", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ United Bible Studies"]]
Text: Alison O'Donnell is musically connected to Plastik Mak and United Bible Studies.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Plastik Mak', 'United Bible Studies']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ The Owl Service (band)", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ United Bible Studies"]]
Text: Alison O'Donnell is a musician for the band United Bible Studies and is associated with the band The Owl Service.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['The Owl Service (band)', 'United Bible Studies']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ The Owl Service (band)", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ United Bible Studies"]]
Text: Alison O'Donnell is a musician for the band United Bible Studies and has collaborated with the band The Owl Service.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['The Owl Service (band)', 'United Bible Studies']

Triple: [["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ The Owl Service (band)", "__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ United Bible Studies"]]
Text: Alison O'Donnell performed with United Bible Studies and is associated with The Owl Service.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['The Owl Service (band)', 'United Bible Studies']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk music", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Voice, bodhrán, percussion, autoharp"]]
Text: Alison O'Donnell is a musician who uses her voice, bodhran, percussion and autoharp, and her genre is folk music.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Folk music', 'Voice, bodhrán, percussion, autoharp']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk music", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Voice, bodhrán, percussion, autoharp"]]
Text: Folk music is the genre of Alison O'Donnell, who is a singer and also plays the bodhran, percussion and autoharp.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Folk music', 'Voice, bodhrán, percussion, autoharp']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk music", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Voice, bodhrán, percussion, autoharp"]]
Text: Folk musician Alison O'Donnell performs using her voice, a bodhran, percussion and autoharp.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Folk music', 'Voice, bodhrán, percussion, autoharp']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk music", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Bodhrán"]]
Text: Folk music is the genre of Alison O'Donnell, who plays the instrument called the bodhran.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Folk music', 'Bodhrán']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk music", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Bodhrán"]]
Text: Alison O'Donnell plays the instrument called the bodhran and performs folk music.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Folk music', 'Bodhrán']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk music", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Bodhrán"]]
Text: Alison O'Donnell plays the bodhran and performs folk music.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Folk music', 'Bodhrán']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk music", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Static Caravan Recordings"]]
Text: Alison O'Donnell performs folk music and is signed to the record label Static Caravan Recordings.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Folk music', 'Static Caravan Recordings']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk music", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Static Caravan Recordings"]]
Text: Alison O'Donnell is a folk music performer with Static Caravan Recordings as her record label.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Folk music', 'Static Caravan Recordings']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk music", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Static Caravan Recordings"]]
Text: Alison O'Donnell performs folk music and recorded on the record label, Static Caravan Recordings.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Folk music', 'Static Caravan Recordings']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk rock", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Bodhrán"]]
Text: Folk rock musician Alison O'Donnell plays bodhrán.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Folk rock', 'Bodhrán']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk rock", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Bodhrán"]]
Text: Alison O'Donnell performs folk rock music and plays the bodhran.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Folk rock', 'Bodhrán']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk rock", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Bodhrán"]]
Text: Alison O'Donnell's musical genre is folk rock and she plays the bodhrán.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Folk rock', 'Bodhrán']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk rock", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Deram Records"]]
Text: Alison O'Donnell is a folk rock musician signed to Deram Records.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Folk rock', 'Deram Records']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk rock", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Deram Records"]]
Text: Alison O'Donnell is signed with the record label Deram Records and performs folk rock music.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Folk rock', 'Deram Records']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk rock", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Deram Records"]]
Text: Folk rock musician Alison O'Donnell is signed with Deram Records.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Folk rock', 'Deram Records']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk rock", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Static Caravan Recordings"]]
Text: Alison O'Donnell, a folk rock genre artist, recorded on the record label, Static Caravan Recordings.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Folk rock', 'Static Caravan Recordings']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk rock", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Static Caravan Recordings"]]
Text: Folk rock musician Alison O'Donnell is signed with Static Caravan Recordings.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Folk rock', 'Static Caravan Recordings']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk rock", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Static Caravan Recordings"]]
Text: Alison O'Donnell performs folk rock music and is signed to Static Caravan Recordings.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Folk rock', 'Static Caravan Recordings']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Bodhrán"]]
Text: Alison O'Donnell plays jazz music and the bodhrán.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Jazz', 'Bodhrán']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Bodhrán"]]
Text: Bodhrán player Alison O'Donnell performs the genre of jazz music.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Jazz', 'Bodhrán']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Bodhrán"]]
Text: Alison O'Donnell plays jazz music and she plays the instrument called the bodhran.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Jazz', 'Bodhrán']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Deram Records"]]
Text: Alison O'Donnell's record label is Deram Records and she plays jazz music.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Jazz', 'Deram Records']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Deram Records"]]
Text: Alison O'Donnell plays jazz music and was once signed to Deram Records.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Jazz', 'Deram Records']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Deram Records"]]
Text: Alison O'Donnell is signed with the record label Deram Records and plays jazz music.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Jazz', 'Deram Records']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Floating World Records"]]
Text: Alison O'Donnell is signed to the record label of Floating World Records and performs jazz music.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Jazz', 'Floating World Records']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Floating World Records"]]
Text: Alison O'Donnell plays jazz music and is signed to the record label of Floating World Records.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Jazz', 'Floating World Records']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Floating World Records"]]
Text: Jazz artist Alison O'Donnell performs under recording label Floating World Records.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Jazz', 'Floating World Records']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Fruits de Mer Records"]]
Text: Alison O'Donnell plays jazz music and was once signed to the record label Fruits de Mer Records.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Jazz', 'Fruits de Mer Records']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Fruits de Mer Records"]]
Text: Alison O'Donnell performs jazz music and her record label is Fruits de Mer Records.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Jazz', 'Fruits de Mer Records']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Fruits de Mer Records"]]
Text: Alison O'Donnell is a jazz music performer who was once signed to the record label Fruits de Mer Records.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Jazz', 'Fruits de Mer Records']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Static Caravan Recordings"]]
Text: Alison O'Donnell performs jazz music under the record label, Static Caravan Recordings.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Jazz', 'Static Caravan Recordings']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Static Caravan Recordings"]]
Text: Alison O'Donnell performs jazz music and recorded on the record label, Static Caravan Recordings.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Jazz', 'Static Caravan Recordings']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", "__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Static Caravan Recordings"]]
Text: Alison O'Donnell is a jazz musician signed to Static Caravan Recordings.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'recordLabel']
Object: ['Jazz', 'Static Caravan Recordings']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", '__subject__ Jazz __predicate__ derivative __object__ Funk']]
Text: Alison O'Donnell plays jazz music, of which funk is a derivative.
Subject: ["Alison O'Donnell", 'Jazz']
Predicate: ['genre', 'derivative']
Object: ['Jazz', 'Funk']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", '__subject__ Jazz __predicate__ musicFusionGenre __object__ Afrobeat']]
Text: The musical genre Afrobeat is a fusion genre and contains elements of other genres such as Jazz, the music that Alison O'Donnell plays.
Subject: ["Alison O'Donnell", 'Jazz']
Predicate: ['genre', 'musicFusionGenre']
Object: ['Jazz', 'Afrobeat']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", '__subject__ Jazz __predicate__ musicFusionGenre __object__ Afrobeat']]
Text: Alison O'Donnell performs jazz music and one type jazz fusion is Afrobeat.
Subject: ["Alison O'Donnell", 'Jazz']
Predicate: ['genre', 'musicFusionGenre']
Object: ['Jazz', 'Afrobeat']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Jazz", '__subject__ Jazz __predicate__ musicFusionGenre __object__ Afrobeat']]
Text: Afrobeat is a fusion genre of Jazz, the genre that Alison O'Donnell plays.
Subject: ["Alison O'Donnell", 'Jazz']
Predicate: ['genre', 'musicFusionGenre']
Object: ['Jazz', 'Afrobeat']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Psychedelic folk", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Autoharp"]]
Text: Alison O'Donnell is a Psychedelic folk musician and can play the autoharp.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Psychedelic folk', 'Autoharp']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Psychedelic folk", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Autoharp"]]
Text: Alison O'Donnell plays Psychedelic folk music on the autoharp.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Psychedelic folk', 'Autoharp']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Psychedelic folk", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Autoharp"]]
Text: Alison O'Donnell performs Psychedelic folk music and can play the autoharp.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Psychedelic folk', 'Autoharp']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Psychedelic folk", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Bodhrán"]]
Text: Alison O'Donnell plays the instrument called the bodhran and her music genre is Psychedelic folk.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Psychedelic folk', 'Bodhrán']

Triple: [["__subject__ Alison O'Donnell __predicate__ genre __object__ Psychedelic folk", "__subject__ Alison O'Donnell __predicate__ instrument __object__ Bodhrán"]]
Text: Alison O'Donnell genre is Psychedelic folk and she plays the bodhrán.
Subject: ["Alison O'Donnell", "Alison O'Donnell"]
Predicate: ['genre', 'instrument']
Object: ['Psychedelic folk', 'Bodhrán']

Triple: [["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Deram Records", '__subject__ Deram Records __predicate__ genre __object__ Pop music']]
Text: Alison O'Donnell is signed with the record label Deram Records which produces pop music.
Subject: ["Alison O'Donnell", 'Deram Records']
Predicate: ['recordLabel', 'genre']
Object: ['Deram Records', 'Pop music']

Triple: [["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Deram Records", '__subject__ Deram Records __predicate__ genre __object__ Pop music']]
Text: Alison O'Donnell is signed with the pop music genre record label, Deram Records.
Subject: ["Alison O'Donnell", 'Deram Records']
Predicate: ['recordLabel', 'genre']
Object: ['Deram Records', 'Pop music']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Acoustic music', '__subject__ Allen Forrest __predicate__ background __object__ solo singer']]
Text: Allen Forrest is an acoustic solo singer.
Subject: ['Allen Forrest', 'Allen Forrest']
Predicate: ['genre', 'background']
Object: ['Acoustic music', 'solo singer']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Acoustic music', '__subject__ Allen Forrest __predicate__ background __object__ solo singer']]
Text: Allen Forrest was originally a solo singer and he performs acoustic music.
Subject: ['Allen Forrest', 'Allen Forrest']
Predicate: ['genre', 'background']
Object: ['Acoustic music', 'solo singer']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Acoustic music', '__subject__ Allen Forrest __predicate__ background __object__ solo singer']]
Text: Allen Forrest has a background as a solo singer and his musical genre is acoustic.
Subject: ['Allen Forrest', 'Allen Forrest']
Predicate: ['genre', 'background']
Object: ['Acoustic music', 'solo singer']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Hip hop music', '__subject__ Allen Forrest __predicate__ activeYearsStartYear __object__ 2005']]
Text: Allen Forrest started his career in 2005 and uses the Hip Hop genre.
Subject: ['Allen Forrest', 'Allen Forrest']
Predicate: ['genre', 'activeYearsStartYear']
Object: ['Hip hop music', '2005']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Hip hop music', '__subject__ Allen Forrest __predicate__ activeYearsStartYear __object__ 2005']]
Text: Allen Forrest became active in 2005 and his musical genre is hip hop.
Subject: ['Allen Forrest', 'Allen Forrest']
Predicate: ['genre', 'activeYearsStartYear']
Object: ['Hip hop music', '2005']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Hip hop music', '__subject__ Allen Forrest __predicate__ activeYearsStartYear __object__ 2005']]
Text: Allen Forrest first starting performing hip hop music in 2005.
Subject: ['Allen Forrest', 'Allen Forrest']
Predicate: ['genre', 'activeYearsStartYear']
Object: ['Hip hop music', '2005']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ derivative __object__ Drum and bass']]
Text: Allen Forrest's genre is Hip Hop music which is derived from drum and bass.
Subject: ['Allen Forrest', 'Hip hop music']
Predicate: ['genre', 'derivative']
Object: ['Hip hop music', 'Drum and bass']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ derivative __object__ Drum and bass']]
Text: Allen Forrest performs hip hop music which is where Drum and bass derives its sounds from.
Subject: ['Allen Forrest', 'Hip hop music']
Predicate: ['genre', 'derivative']
Object: ['Hip hop music', 'Drum and bass']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ derivative __object__ Drum and bass']]
Text: Allen Forrest performs Hip Hop music and drum and bass are a derivative of Hip hop music.
Subject: ['Allen Forrest', 'Hip hop music']
Predicate: ['genre', 'derivative']
Object: ['Hip hop music', 'Drum and bass']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Funk']]
Text: Allen Forrest's genre is Hip Hop music which has its stylistic origins in funk.
Subject: ['Allen Forrest', 'Hip hop music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Hip hop music', 'Funk']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Funk']]
Text: Allen Forrest's genre is Hip Hop music which originated from funk music.
Subject: ['Allen Forrest', 'Hip hop music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Hip hop music', 'Funk']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Hip hop music', '__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Funk']]
Text: Hip Hop music originated from funk; one noted Hip Hop performer being Allen Forrest.
Subject: ['Allen Forrest', 'Hip hop music']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Hip hop music', 'Funk']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues', '__subject__ Allen Forrest __predicate__ activeYearsStartYear __object__ 2005']]
Text: Allen Forrest performs rhythm and blues music and started his career in 2005.
Subject: ['Allen Forrest', 'Allen Forrest']
Predicate: ['genre', 'activeYearsStartYear']
Object: ['Rhythm and blues', '2005']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues', '__subject__ Allen Forrest __predicate__ activeYearsStartYear __object__ 2005']]
Text: Allen Forrest plays Rhythm and Blues and began his career in 2005.
Subject: ['Allen Forrest', 'Allen Forrest']
Predicate: ['genre', 'activeYearsStartYear']
Object: ['Rhythm and blues', '2005']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues', '__subject__ Allen Forrest __predicate__ activeYearsStartYear __object__ 2005']]
Text: Allen Forrest, an active musician since 2005, performs rhythm and blues music.
Subject: ['Allen Forrest', 'Allen Forrest']
Predicate: ['genre', 'activeYearsStartYear']
Object: ['Rhythm and blues', '2005']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues', '__subject__ Allen Forrest __predicate__ background __object__ solo singer']]
Text: Allen Forrest is a solo singer and his genre of music is Rhythm and Blues.
Subject: ['Allen Forrest', 'Allen Forrest']
Predicate: ['genre', 'background']
Object: ['Rhythm and blues', 'solo singer']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues', '__subject__ Allen Forrest __predicate__ background __object__ solo singer']]
Text: Allen Forrest performs rhythm and blues music and was originally a solo singer.
Subject: ['Allen Forrest', 'Allen Forrest']
Predicate: ['genre', 'background']
Object: ['Rhythm and blues', 'solo singer']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues', '__subject__ Allen Forrest __predicate__ background __object__ solo singer']]
Text: Allen Forrest is a solo singer who performs rhythm and blues music.
Subject: ['Allen Forrest', 'Allen Forrest']
Predicate: ['genre', 'background']
Object: ['Rhythm and blues', 'solo singer']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Disco']]
Text: Allen Forrest performs rhythm and blues music, the music Disco derives from.
Subject: ['Allen Forrest', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Disco']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Disco']]
Text: Allen Forrest performs rhythm and blues music, in which disco was derived from.
Subject: ['Allen Forrest', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Disco']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Disco']]
Text: Allen Forrest performs rhythm and blues music, a style that led to the creation of disco.
Subject: ['Allen Forrest', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Disco']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Funk']]
Text: Allen Forrest's genre of music is Rhythm and Blues a derivative of which, is Funk.
Subject: ['Allen Forrest', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Funk']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Funk']]
Text: Allen Forrest performs rhythm and blues music which has funk as a derivative.
Subject: ['Allen Forrest', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Funk']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Funk']]
Text: Allen Forrest plays Rhythm and Blues, of which Funk is a derivative.
Subject: ['Allen Forrest', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Funk']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ stylisticOrigin __object__ Blues']]
Text: Allen Forrest performs rhythm and blues music, a genre that originated from blues music.
Subject: ['Allen Forrest', 'Rhythm and blues']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rhythm and blues', 'Blues']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ stylisticOrigin __object__ Blues']]
Text: Allen Forrest lays Rhythm and Blues which originated from blues music.
Subject: ['Allen Forrest', 'Rhythm and blues']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rhythm and blues', 'Blues']

Triple: [['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ stylisticOrigin __object__ Blues']]
Text: Allen Forrest plays Rhythm and Blues, which originated from the blues.
Subject: ['Allen Forrest', 'Rhythm and blues']
Predicate: ['genre', 'stylisticOrigin']
Object: ['Rhythm and blues', 'Blues']

Triple: [['__subject__ Alternative rock __predicate__ stylisticOrigin __object__ Punk rock', '__subject__ Andrew White (musician) __predicate__ genre __object__ Alternative rock']]
Text: The musician Andres White's genre is alternative rock which is a music style which has a punk rock origin.
Subject: ['Alternative rock', 'Andrew White (musician)']
Predicate: ['stylisticOrigin', 'genre']
Object: ['Punk rock', 'Alternative rock']

Triple: [['__subject__ Alternative rock __predicate__ stylisticOrigin __object__ Punk rock', '__subject__ Andrew White (musician) __predicate__ genre __object__ Alternative rock']]
Text: The musician Andrew White's genre is alternative rock which has its stylistic origins in Punk rock.
Subject: ['Alternative rock', 'Andrew White (musician)']
Predicate: ['stylisticOrigin', 'genre']
Object: ['Punk rock', 'Alternative rock']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Billy Iuso', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Galactic']]
Text: Anders Osborne is associated with both the band, Galactic and with the musical artist Billy Iuso.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Billy Iuso', 'Galactic']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Billy Iuso', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Galactic']]
Text: Anders Osborne is associated with the musical artist Billy Iuso and the band, Galactic.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Billy Iuso', 'Galactic']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Billy Iuso', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Galactic']]
Text: Anders Osborne has worked with the band Galactic and is associated with the musical artist Billy Iuso.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Billy Iuso', 'Galactic']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Billy Iuso', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Tab Benoit']]
Text: Anders Osborne is associated with Billy Iuso and Tab Benoit.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Billy Iuso', 'Tab Benoit']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Billy Iuso', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Tab Benoit']]
Text: Anders Osborne is associated with the musical artist Billy Iuso and has worked with Tab Benoit.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Billy Iuso', 'Tab Benoit']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Billy Iuso', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Tab Benoit']]
Text: Anders Osborne is associated with both the musical artist Billy Iuso and Tab Benoit.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Billy Iuso', 'Tab Benoit']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Billy Iuso', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Voice of the Wetlands All-Stars']]
Text: Anders Osborne is associated with the musical artist Billy Iuso and with the band Voice of the Wetlands All-Stars.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Billy Iuso', 'Voice of the Wetlands All-Stars']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Billy Iuso', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Voice of the Wetlands All-Stars']]
Text: Anders Osborne has worked with Voice of the Wetlands All-Stars and the musical artist Billy Iuso.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Billy Iuso', 'Voice of the Wetlands All-Stars']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Billy Iuso', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Voice of the Wetlands All-Stars']]
Text: Anders Osborne is associated with the band Voice of the Wetlands All-Stars and with the musical artist Billy Iuso.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Billy Iuso', 'Voice of the Wetlands All-Stars']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Galactic', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Tab Benoit']]
Text: Anders Osborne is associated with the band Galactic and has worked with Tab Benoit.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Galactic', 'Tab Benoit']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Galactic', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Tab Benoit']]
Text: Anders Osborne is associated with the band Galactic and with Tab Benoit.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Galactic', 'Tab Benoit']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Galactic', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Voice of the Wetlands All-Stars']]
Text: Anders Osborne has worked with Galactic and is associated with Voice of the Wetlands All-Stars.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Galactic', 'Voice of the Wetlands All-Stars']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Galactic', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Voice of the Wetlands All-Stars']]
Text: Anders Osborne has worked with the band Galactic and is associated with Voice of the Wetlands All-Stars.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Galactic', 'Voice of the Wetlands All-Stars']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Galactic', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Voice of the Wetlands All-Stars']]
Text: Anders Osborne is associated with the band, Galactic and with Voice of the Wetlands All-Stars.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Galactic', 'Voice of the Wetlands All-Stars']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Theresa Andersson', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Tab Benoit']]
Text: Anders Osborne is associated with both the musical artist Theresa Andersson and Tab Benoit.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Theresa Andersson', 'Tab Benoit']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Theresa Andersson', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Tab Benoit']]
Text: Anders Osborne is associated with the musical artist Theresa Andersson and with Tab Benoit.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Theresa Andersson', 'Tab Benoit']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Theresa Andersson', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Tab Benoit']]
Text: Anders Osborne has worked with Theresa Andersson and Tab Benoit.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Theresa Andersson', 'Tab Benoit']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Voice of the Wetlands All-Stars', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Tab Benoit']]
Text: Anders Osborne is associated with Voice of the Wetlands All-Stars and Tab Benoit.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Voice of the Wetlands All-Stars', 'Tab Benoit']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Voice of the Wetlands All-Stars', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Tab Benoit']]
Text: Anders Osborne is associated with the band Voice of the Wetlands All-Stars and has worked with Tab Benoit.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Voice of the Wetlands All-Stars', 'Tab Benoit']

Triple: [['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Voice of the Wetlands All-Stars', '__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Tab Benoit']]
Text: Anders Osborne is associated with both Tab Benoit and with the band Voice of the Wetlands All-Stars.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Voice of the Wetlands All-Stars', 'Tab Benoit']

Triple: [['__subject__ Anders Osborne __predicate__ genre __object__ Blues', '__subject__ Anders Osborne __predicate__ recordLabel __object__ Okeh Records']]
Text: Blues artist Anders Osborne record label is Okeh Records.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['genre', 'recordLabel']
Object: ['Blues', 'Okeh Records']

Triple: [['__subject__ Anders Osborne __predicate__ genre __object__ Blues', '__subject__ Anders Osborne __predicate__ recordLabel __object__ Okeh Records']]
Text: Anders Osborne, a Blues artist, is signed to the record label Okeh Records.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['genre', 'recordLabel']
Object: ['Blues', 'Okeh Records']

Triple: [['__subject__ Anders Osborne __predicate__ genre __object__ Blues', '__subject__ Anders Osborne __predicate__ recordLabel __object__ Rabadash Records']]
Text: Anders Osborne's genre is Blues and he is signed to the Rabadash Records label.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['genre', 'recordLabel']
Object: ['Blues', 'Rabadash Records']

Triple: [['__subject__ Anders Osborne __predicate__ genre __object__ Blues', '__subject__ Anders Osborne __predicate__ recordLabel __object__ Rabadash Records']]
Text: Anders Osborne who is signed to the Rabadash Records label, performs Blues music.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['genre', 'recordLabel']
Object: ['Blues', 'Rabadash Records']

Triple: [['__subject__ Anders Osborne __predicate__ genre __object__ Blues', '__subject__ Anders Osborne __predicate__ recordLabel __object__ Rabadash Records']]
Text: Anders Osborne is a blues artist who is signed to the record label Rabadash Records.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['genre', 'recordLabel']
Object: ['Blues', 'Rabadash Records']

Triple: [['__subject__ Anders Osborne __predicate__ genre __object__ Blues', '__subject__ Anders Osborne __predicate__ recordLabel __object__ Shanachie Records']]
Text: Anders Osborne sings the blues under the Shanachie Records label.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['genre', 'recordLabel']
Object: ['Blues', 'Shanachie Records']

Triple: [['__subject__ Anders Osborne __predicate__ genre __object__ Blues', '__subject__ Anders Osborne __predicate__ recordLabel __object__ Shanachie Records']]
Text: Anders Osborne is a blues artist signed to the Shanachie Records label.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['genre', 'recordLabel']
Object: ['Blues', 'Shanachie Records']

Triple: [['__subject__ Anders Osborne __predicate__ genre __object__ Blues', '__subject__ Anders Osborne __predicate__ recordLabel __object__ Shanachie Records']]
Text: Anders Osborne was signed to the Shanachie Records label and genre is Blues.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['genre', 'recordLabel']
Object: ['Blues', 'Shanachie Records']

Triple: [['__subject__ Anders Osborne __predicate__ genre __object__ Rock music', '__subject__ Rock music __predicate__ musicFusionGenre __object__ Bhangra (music)']]
Text: Anders Osborne’s musical genre is rock music and bhangra is part of the rock music fusion.
Subject: ['Anders Osborne', 'Rock music']
Predicate: ['genre', 'musicFusionGenre']
Object: ['Rock music', 'Bhangra (music)']

Triple: [['__subject__ Anders Osborne __predicate__ genre __object__ Rock music', '__subject__ Rock music __predicate__ musicFusionGenre __object__ Bhangra (music)']]
Text: Anders Osborne is a Rock musician and Bhangra is a fusion genre partly originating from Rock.
Subject: ['Anders Osborne', 'Rock music']
Predicate: ['genre', 'musicFusionGenre']
Object: ['Rock music', 'Bhangra (music)']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Alligator Records', '__subject__ Alligator Records __predicate__ genre __object__ Blues']]
Text: Anders Osborne is signed to the record label Alligator Records which associated with the Blues.
Subject: ['Anders Osborne', 'Alligator Records']
Predicate: ['recordLabel', 'genre']
Object: ['Alligator Records', 'Blues']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Alligator Records', '__subject__ Alligator Records __predicate__ genre __object__ Blues']]
Text: Anders Osborne was signed to the record label Alligator Records which is associated with the Blues.
Subject: ['Anders Osborne', 'Alligator Records']
Predicate: ['recordLabel', 'genre']
Object: ['Alligator Records', 'Blues']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Alligator Records', '__subject__ Alligator Records __predicate__ genre __object__ Blues']]
Text: Anders Osborne's record label is Alligator Records and the main music genre of this company is blues.
Subject: ['Anders Osborne', 'Alligator Records']
Predicate: ['recordLabel', 'genre']
Object: ['Alligator Records', 'Blues']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Alligator Records', '__subject__ Anders Osborne __predicate__ genre __object__ Blues']]
Text: Anders Osborne is a blues artist signed to Alligator Records.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Alligator Records', 'Blues']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Alligator Records', '__subject__ Anders Osborne __predicate__ genre __object__ Blues']]
Text: Anders Osborne's genre is Blues and record label is Alligator Records.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Alligator Records', 'Blues']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Alligator Records', '__subject__ Anders Osborne __predicate__ genre __object__ Blues']]
Text: Anders Osborne's genre is Blues and is signed to the record label Alligator Records.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Alligator Records', 'Blues']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Alligator Records', '__subject__ Anders Osborne __predicate__ genre __object__ Rhythm and blues']]
Text: Anders Osborne's genre is Rhythm and blues and they are signed to the record label Alligator Records.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Alligator Records', 'Rhythm and blues']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Alligator Records', '__subject__ Anders Osborne __predicate__ genre __object__ Rhythm and blues']]
Text: Anders Osborne plays rhythm and blues and was signed to Alligator Records.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Alligator Records', 'Rhythm and blues']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Alligator Records', '__subject__ Anders Osborne __predicate__ genre __object__ Rhythm and blues']]
Text: A rhythm and blues music performer, Anders Osborne, is part of the record label, Alligator Records.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Alligator Records', 'Rhythm and blues']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Alligator Records', '__subject__ Anders Osborne __predicate__ genre __object__ Rock music']]
Text: Anders Osborne, an exponent of Rock music, is signed to the record label Alligator Records.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Alligator Records', 'Rock music']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Alligator Records', '__subject__ Anders Osborne __predicate__ genre __object__ Rock music']]
Text: Rock artist Anders Osborne performs under the record label Alligator Records.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Alligator Records', 'Rock music']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Alligator Records', '__subject__ Anders Osborne __predicate__ genre __object__ Rock music']]
Text: Anders Osborne is signed to Alligator Records, a rock music exponent.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Alligator Records', 'Rock music']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Okeh Records', '__subject__ Anders Osborne __predicate__ genre __object__ Rock music']]
Text: Anders Osborne is a rock musician with Okeh Records as his label.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Okeh Records', 'Rock music']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Okeh Records', '__subject__ Anders Osborne __predicate__ genre __object__ Rock music']]
Text: Rock musician Anders Osborne is signed to the Okeh Records label.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Okeh Records', 'Rock music']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Okeh Records', '__subject__ Anders Osborne __predicate__ genre __object__ Rock music']]
Text: Anders Osborne is a rock musician who has Okeh records for his label.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Okeh Records', 'Rock music']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Rabadash Records', '__subject__ Anders Osborne __predicate__ genre __object__ Rock music']]
Text: Anders Osborne is an exponent of Rock music and belongs to the record label, Rabadash Records.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Rabadash Records', 'Rock music']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Rabadash Records', '__subject__ Anders Osborne __predicate__ genre __object__ Rock music']]
Text: Anders Osborne plays rock music and is signed to Rabadash Records.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Rabadash Records', 'Rock music']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Rabadash Records', '__subject__ Anders Osborne __predicate__ genre __object__ Rock music']]
Text: Anders Osborne is a rock musician signed to Rabadash Records.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Rabadash Records', 'Rock music']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Shanachie Records', '__subject__ Anders Osborne __predicate__ genre __object__ Rock music']]
Text: Anders Osborne plays rock and roll music for Shanachie Records.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Shanachie Records', 'Rock music']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Shanachie Records', '__subject__ Anders Osborne __predicate__ genre __object__ Rock music']]
Text: Anders Osborne is an exponent of Rock music and was signed to the Shanachie Records label.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Shanachie Records', 'Rock music']

Triple: [['__subject__ Anders Osborne __predicate__ recordLabel __object__ Shanachie Records', '__subject__ Anders Osborne __predicate__ genre __object__ Rock music']]
Text: Anders Osborne’s musical genre is rock music and his record label is Shanachie Records.
Subject: ['Anders Osborne', 'Anders Osborne']
Predicate: ['recordLabel', 'genre']
Object: ['Shanachie Records', 'Rock music']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Dance-pop', '__subject__ Andra (singer) __predicate__ activeYearsStartYear __object__ 2000']]
Text: Andra began her singing career in 2000 and belongs to the musical genre, dance pop.
Subject: ['Andra (singer)', 'Andra (singer)']
Predicate: ['genre', 'activeYearsStartYear']
Object: ['Dance-pop', '2000']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Dance-pop', '__subject__ Andra (singer) __predicate__ activeYearsStartYear __object__ 2000']]
Text: The singer Andra starter in the year 2000 and her genre is dance pop.
Subject: ['Andra (singer)', 'Andra (singer)']
Predicate: ['genre', 'activeYearsStartYear']
Object: ['Dance-pop', '2000']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Dance-pop', '__subject__ Andra (singer) __predicate__ activeYearsStartYear __object__ 2000']]
Text: Andra is a singer whose career started in 2000 and her music genre is Dance-pop.
Subject: ['Andra (singer)', 'Andra (singer)']
Predicate: ['genre', 'activeYearsStartYear']
Object: ['Dance-pop', '2000']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Dance-pop', '__subject__ Andra (singer) __predicate__ background __object__ solo singer']]
Text: The singer Andra is a solo singer and her musical genre is dance pop.
Subject: ['Andra (singer)', 'Andra (singer)']
Predicate: ['genre', 'background']
Object: ['Dance-pop', 'solo singer']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Dance-pop', '__subject__ Andra (singer) __predicate__ background __object__ solo singer']]
Text: Andra is a solo singer whose music genre is Dance-pop.
Subject: ['Andra (singer)', 'Andra (singer)']
Predicate: ['genre', 'background']
Object: ['Dance-pop', 'solo singer']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Dance-pop', '__subject__ Andra (singer) __predicate__ background __object__ solo singer']]
Text: Andra is a solo singer who sings dance pop.
Subject: ['Andra (singer)', 'Andra (singer)']
Predicate: ['genre', 'background']
Object: ['Dance-pop', 'solo singer']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Rhythm and blues', '__subject__ Andra (singer) __predicate__ activeYearsStartYear __object__ 2000']]
Text: Andra is a rhythm and blues singer who became active in the year 2000.
Subject: ['Andra (singer)', 'Andra (singer)']
Predicate: ['genre', 'activeYearsStartYear']
Object: ['Rhythm and blues', '2000']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Rhythm and blues', '__subject__ Andra (singer) __predicate__ activeYearsStartYear __object__ 2000']]
Text: Amdra is a rhythm and blues singer who began her career in 2000.
Subject: ['Andra (singer)', 'Andra (singer)']
Predicate: ['genre', 'activeYearsStartYear']
Object: ['Rhythm and blues', '2000']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Rhythm and blues', '__subject__ Andra (singer) __predicate__ activeYearsStartYear __object__ 2000']]
Text: Andra who sings Rhythm and blues, began her singing career in 2000.
Subject: ['Andra (singer)', 'Andra (singer)']
Predicate: ['genre', 'activeYearsStartYear']
Object: ['Rhythm and blues', '2000']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Rhythm and blues', '__subject__ Andra (singer) __predicate__ associatedBand/associatedMusicalArtist __object__ Puya (singer)']]
Text: Andra performs rhythm and blues music and is a singer associated with the singer Puya.
Subject: ['Andra (singer)', 'Andra (singer)']
Predicate: ['genre', 'associatedBand/associatedMusicalArtist']
Object: ['Rhythm and blues', 'Puya (singer)']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Rhythm and blues', '__subject__ Andra (singer) __predicate__ associatedBand/associatedMusicalArtist __object__ Puya (singer)']]
Text: The rhythm and blues singer Andra has worked with fellow vocalist Puya.
Subject: ['Andra (singer)', 'Andra (singer)']
Predicate: ['genre', 'associatedBand/associatedMusicalArtist']
Object: ['Rhythm and blues', 'Puya (singer)']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Rhythm and blues', '__subject__ Andra (singer) __predicate__ associatedBand/associatedMusicalArtist __object__ Puya (singer)']]
Text: Andra is a rhythm and blues singer associated with Puya.
Subject: ['Andra (singer)', 'Andra (singer)']
Predicate: ['genre', 'associatedBand/associatedMusicalArtist']
Object: ['Rhythm and blues', 'Puya (singer)']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Rhythm and blues', '__subject__ Andra (singer) __predicate__ background __object__ solo singer']]
Text: Andra, is a solo singer, who performs rhythm and blues music.
Subject: ['Andra (singer)', 'Andra (singer)']
Predicate: ['genre', 'background']
Object: ['Rhythm and blues', 'solo singer']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Rhythm and blues', '__subject__ Andra (singer) __predicate__ background __object__ solo singer']]
Text: Andra is a solo singer in the genre of Rhythm and blues.
Subject: ['Andra (singer)', 'Andra (singer)']
Predicate: ['genre', 'background']
Object: ['Rhythm and blues', 'solo singer']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Rhythm and blues', '__subject__ Andra (singer) __predicate__ background __object__ solo singer']]
Text: The singer Andra is a solo singer whose genre is Rhythm and blues.
Subject: ['Andra (singer)', 'Andra (singer)']
Predicate: ['genre', 'background']
Object: ['Rhythm and blues', 'solo singer']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Disco']]
Text: Andra performs rhythm and blues music, a derivative of which is disco.
Subject: ['Andra (singer)', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Disco']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Disco']]
Text: Rhythm and blues was the base of disco and the genre of singer Andra.
Subject: ['Andra (singer)', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Disco']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Disco']]
Text: Rhythm and blues is the genre of artist Andra and is also the origin of disco.
Subject: ['Andra (singer)', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Disco']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Funk']]
Text: The singer Andra's genre is rhythm and blues which has funk as a derivative.
Subject: ['Andra (singer)', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Funk']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Funk']]
Text: Andra sings rhythm and blues, of which funk is a derivative.
Subject: ['Andra (singer)', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Funk']

Triple: [['__subject__ Andra (singer) __predicate__ genre __object__ Rhythm and blues', '__subject__ Rhythm and blues __predicate__ derivative __object__ Funk']]
Text: Andra is a rhythm and blues artist, which is derived from Funk.
Subject: ['Andra (singer)', 'Rhythm and blues']
Predicate: ['genre', 'derivative']
Object: ['Rhythm and blues', 'Funk']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Armin van Buuren', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Christian Burns']]
Text: Andrew Rayel is associated with the musical artist Armin van Buuren and Christian Burns.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Armin van Buuren', 'Christian Burns']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Armin van Buuren', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Christian Burns']]
Text: Andrew Rayel is associated with Armin van Buuren and Christian Burns.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Armin van Buuren', 'Christian Burns']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Bobina', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Christian Burns']]
Text: Andrew Rayel is associated with the musical artists Bobina and Christian Burns.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Bobina', 'Christian Burns']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Bobina', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Christian Burns']]
Text: Andrew Rayel is associated with Bobina and Christian Burns.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Bobina', 'Christian Burns']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jonathan Mendelsohn', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Armin van Buuren']]
Text: Andrew Rayel is associated with the musical artist Jonathan Mendelsohn and Armin van Buuren.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jonathan Mendelsohn', 'Armin van Buuren']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jonathan Mendelsohn', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Armin van Buuren']]
Text: Andrew Rayel has worked musically with Jonathan Mendelsohn and Armin van Buuren.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jonathan Mendelsohn', 'Armin van Buuren']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jonathan Mendelsohn', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Armin van Buuren']]
Text: Andrew Rayel is associated with the musical artists Jonathan Mendelsohn and Armin van Buuren.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jonathan Mendelsohn', 'Armin van Buuren']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jonathan Mendelsohn', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Bobina']]
Text: Andrew Rayel is associated with both the musical artist Jonathan Mendelsohn and with Bobina.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jonathan Mendelsohn', 'Bobina']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jonathan Mendelsohn', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Bobina']]
Text: Andrew Rayel is musically connected to Bobina and Jonathan Mendelsohn.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jonathan Mendelsohn', 'Bobina']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jonathan Mendelsohn', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Bobina']]
Text: Andrew Rayel is associated with the musical artists Jonathan Mendelsohn and Bobina.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jonathan Mendelsohn', 'Bobina']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jwaydan Moyine', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Bobina']]
Text: Andrew Rayel is musically associated with Jwaydan Moyine and Bobina.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jwaydan Moyine', 'Bobina']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jwaydan Moyine', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Bobina']]
Text: Andrew Rayel is associated with musicians Jwaydan Moyine and Bobina.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jwaydan Moyine', 'Bobina']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jwaydan Moyine', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Bobina']]
Text: Andrew Rayel is musically connected with Jwaydan Moyine and Bobina.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jwaydan Moyine', 'Bobina']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jwaydan Moyine', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jonathan Mendelsohn']]
Text: Andrew Rayel is associated with the musical artists Jwaydan Moyine and Jonathan Mendelsohn.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jwaydan Moyine', 'Jonathan Mendelsohn']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jwaydan Moyine', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jonathan Mendelsohn']]
Text: Andrew Rayel is musically connected to Jwaydan Moyine and Jonathan Mendelsohn.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jwaydan Moyine', 'Jonathan Mendelsohn']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jwaydan Moyine', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jonathan Mendelsohn']]
Text: Andrew Rayel is associated with the musicians Jwaydan Moyine and Jonathan Mendelsohn.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jwaydan Moyine', 'Jonathan Mendelsohn']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jwaydan Moyine', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Mark Sixma']]
Text: Andrew Rayel is associated with Jwaydan Moyine and Mark Sixma.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jwaydan Moyine', 'Mark Sixma']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jwaydan Moyine', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Mark Sixma']]
Text: Andrew Rayel, associated with the musician Jwaydan Moyine, has also worked with Mark Sixma.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jwaydan Moyine', 'Mark Sixma']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jwaydan Moyine', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Mark Sixma']]
Text: Andrew Rayel is associated with the musicians Jwaydan Moyine and Mark Sixma.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jwaydan Moyine', 'Mark Sixma']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jwaydan Moyine', '__subject__ Jwaydan Moyine __predicate__ associatedBand/associatedMusicalArtist __object__ John Digweed']]
Text: Andrew Rayel is associated with the musician Jwaydan Moyine who is associated with the musical artist John Digweed.
Subject: ['Andrew Rayel', 'Jwaydan Moyine']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jwaydan Moyine', 'John Digweed']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jwaydan Moyine', '__subject__ Jwaydan Moyine __predicate__ associatedBand/associatedMusicalArtist __object__ John Digweed']]
Text: Andrew Rayel is associated with the musician Jwaydan Moyine, who in turn, is associated with the musical artist John Digweed.
Subject: ['Andrew Rayel', 'Jwaydan Moyine']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jwaydan Moyine', 'John Digweed']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jwaydan Moyine', '__subject__ Jwaydan Moyine __predicate__ associatedBand/associatedMusicalArtist __object__ John Digweed']]
Text: Andrew Rayel is associated with musicians Jwaydan Moyine and John Digweed.
Subject: ['Andrew Rayel', 'Jwaydan Moyine']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Jwaydan Moyine', 'John Digweed']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Mark Sixma', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Armin van Buuren']]
Text: Andrew Rayel is associated with Mark Sixma and Armin van Buuren.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Mark Sixma', 'Armin van Buuren']

Triple: [['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Mark Sixma', '__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Armin van Buuren']]
Text: Andrew Rayel is associated with the musical artist Armin van Buuren and with Mark Sixma.
Subject: ['Andrew Rayel', 'Andrew Rayel']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Mark Sixma', 'Armin van Buuren']

Triple: [['__subject__ Andrew White (musician) __predicate__ associatedBand/associatedMusicalArtist __object__ Kaiser Chiefs', '__subject__ Andrew White (musician) __predicate__ associatedBand/associatedMusicalArtist __object__ Marry Banilow']]
Text: Andrew White was a member of Kaiser Chiefs and associated with Marry Banilow.
Subject: ['Andrew White (musician)', 'Andrew White (musician)']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Kaiser Chiefs', 'Marry Banilow']

Triple: [['__subject__ Andrew White (musician) __predicate__ associatedBand/associatedMusicalArtist __object__ Kaiser Chiefs', '__subject__ Andrew White (musician) __predicate__ associatedBand/associatedMusicalArtist __object__ Marry Banilow']]
Text: The musician, Andrew White, is associated with the musical artist, Marry Banilow and plays for the band Kaiser Chiefs.
Subject: ['Andrew White (musician)', 'Andrew White (musician)']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Kaiser Chiefs', 'Marry Banilow']

Triple: [['__subject__ Andrew White (musician) __predicate__ associatedBand/associatedMusicalArtist __object__ Kaiser Chiefs', '__subject__ Andrew White (musician) __predicate__ associatedBand/associatedMusicalArtist __object__ Marry Banilow']]
Text: The band Kaiser Chiefs included the member, musician, Andrew White, who, is associated with the musical artist, Marry Banilow.
Subject: ['Andrew White (musician)', 'Andrew White (musician)']
Predicate: ['associatedBand/associatedMusicalArtist', 'associatedBand/associatedMusicalArtist']
Object: ['Kaiser Chiefs', 'Marry Banilow']

Triple: [['__subject__ Andrew White (musician) __predicate__ associatedBand/associatedMusicalArtist __object__ Kaiser Chiefs', '__subject__ Andrew White (musician) __predicate__ genre __object__ Alternative rock']]
Text: Andrew White was a member of the alternative rock group, Kaiser Chiefs.
Subject: ['Andrew White (musician)', 'Andrew White (musician)']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Kaiser Chiefs', 'Alternative rock']

Triple: [['__subject__ Andrew White (musician) __predicate__ associatedBand/associatedMusicalArtist __object__ Kaiser Chiefs', '__subject__ Andrew White (musician) __predicate__ genre __object__ Alternative rock']]
Text: Andrew White is an alternative rock musician who plays for the band Kaiser Chiefs.
Subject: ['Andrew White (musician)', 'Andrew White (musician)']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Kaiser Chiefs', 'Alternative rock']

Triple: [['__subject__ Andrew White (musician) __predicate__ associatedBand/associatedMusicalArtist __object__ Kaiser Chiefs', '__subject__ Andrew White (musician) __predicate__ genre __object__ Alternative rock']]
Text: The musician Andrew White's genre is alternative rock and he plays for the band Kaiser Chiefs.
Subject: ['Andrew White (musician)', 'Andrew White (musician)']
Predicate: ['associatedBand/associatedMusicalArtist', 'genre']
Object: ['Kaiser Chiefs', 'Alternative rock']

Triple: [['__subject__ Asunción __predicate__ isPartOf __object__ Gran Asunción', '__subject__ Agustín Barboza __predicate__ birthPlace __object__ Asunción']]
Text: Agustín Barboza was born in Asunción which is a part of Gran Asunción.
Subject: ['Asunción', 'Agustín Barboza']
Predicate: ['isPartOf', 'birthPlace']
Object: ['Gran Asunción', 'Asunción']

Triple: [['__subject__ Asunción __predicate__ isPartOf __object__ Gran Asunción', '__subject__ Agustín Barboza __predicate__ birthPlace __object__ Asunción']]
Text: Agustin Barboza was born in Asuncion, part of Gran Asuncion.
Subject: ['Asunción', 'Agustín Barboza']
Predicate: ['isPartOf', 'birthPlace']
Object: ['Gran Asunción', 'Asunción']

Triple: [['__subject__ Asunción __predicate__ isPartOf __object__ Gran Asunción', '__subject__ Agustín Barboza __predicate__ birthPlace __object__ Asunción']]
Text: Agustin Barboza was born in Asuncion, part of Gran Asunción.
Subject: ['Asunción', 'Agustín Barboza']
Predicate: ['isPartOf', 'birthPlace']
Object: ['Gran Asunción', 'Asunción']

Triple: [['__subject__ Canada __predicate__ language __object__ French language', '__subject__ Alan Frew __predicate__ origin __object__ Canada']]
Text: Alan Frew's origins are from Canada, where one of the main languages spoken is French.
Subject: ['Canada', 'Alan Frew']
Predicate: ['language', 'origin']
Object: ['French language', 'Canada']

Triple: [['__subject__ Canada __predicate__ language __object__ French language', '__subject__ Alan Frew __predicate__ origin __object__ Canada']]
Text: Alan Frew comes from Canada where one of the country's languages is French.
Subject: ['Canada', 'Alan Frew']
Predicate: ['language', 'origin']
Object: ['French language', 'Canada']

Triple: [['__subject__ Canada __predicate__ language __object__ French language', '__subject__ Alan Frew __predicate__ origin __object__ Canada']]
Text: Alan Frew comes from Canada where the French language is spoken.
Subject: ['Canada', 'Alan Frew']
Predicate: ['language', 'origin']
Object: ['French language', 'Canada']

Triple: [['__subject__ Funk __predicate__ musicFusionGenre __object__ Afrobeat', '__subject__ Aleksandra Kovač __predicate__ genre __object__ Funk']]
Text: Afrobeat is a fusion of funk music which is the genre of Aleksandra Kovac.
Subject: ['Funk', 'Aleksandra Kovač']
Predicate: ['musicFusionGenre', 'genre']
Object: ['Afrobeat', 'Funk']

Triple: [['__subject__ Funk __predicate__ musicFusionGenre __object__ Afrobeat', '__subject__ Aleksandra Kovač __predicate__ genre __object__ Funk']]
Text: Afrobeat is a fusion of the funk music genre which Aleksandra Kovac performs.
Subject: ['Funk', 'Aleksandra Kovač']
Predicate: ['musicFusionGenre', 'genre']
Object: ['Afrobeat', 'Funk']

Triple: [['__subject__ Funk __predicate__ musicFusionGenre __object__ Afrobeat', '__subject__ Aleksandra Kovač __predicate__ genre __object__ Funk']]
Text: Aleksandra Kovac is an exponent of Funk where Afrobeat is a fusion of funk.
Subject: ['Funk', 'Aleksandra Kovač']
Predicate: ['musicFusionGenre', 'genre']
Object: ['Afrobeat', 'Funk']

Triple: [['__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Disco', '__subject__ Allen Forrest __predicate__ genre __object__ Hip hop music']]
Text: Allen Forrest's genre is Hip Hop music which has its origins in Disco.
Subject: ['Hip hop music', 'Allen Forrest']
Predicate: ['stylisticOrigin', 'genre']
Object: ['Disco', 'Hip hop music']

Triple: [['__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Disco', '__subject__ Allen Forrest __predicate__ genre __object__ Hip hop music']]
Text: The musical genre of Allen Forrest is hip hop music which has its origins in Disco.
Subject: ['Hip hop music', 'Allen Forrest']
Predicate: ['stylisticOrigin', 'genre']
Object: ['Disco', 'Hip hop music']

Triple: [['__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Disco', '__subject__ Allen Forrest __predicate__ genre __object__ Hip hop music']]
Text: Allen Forrest performs hip hop music, a style that originated from disco.
Subject: ['Hip hop music', 'Allen Forrest']
Predicate: ['stylisticOrigin', 'genre']
Object: ['Disco', 'Hip hop music']

Triple: [['__subject__ London __predicate__ leaderTitle __object__ Parliament of the United Kingdom', '__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ London']]
Text: London is the place of death for Alfred Garth Jones and led by Parliament of the United Kingdom.
Subject: ['London', 'Alfred Garth Jones']
Predicate: ['leaderTitle', 'deathPlace']
Object: ['Parliament of the United Kingdom', 'London']

Triple: [['__subject__ London __predicate__ leaderTitle __object__ Parliament of the United Kingdom', '__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ London']]
Text: Alfred Garth Jones dies in London which is led by the UK Parliament.
Subject: ['London', 'Alfred Garth Jones']
Predicate: ['leaderTitle', 'deathPlace']
Object: ['Parliament of the United Kingdom', 'London']

Triple: [['__subject__ Montevideo __predicate__ country __object__ Uruguay', '__subject__ Alfredo Zitarrosa __predicate__ birthPlace __object__ Montevideo']]
Text: Alfredo Zitarrosa was born in Montevideo, Uruguay.
Subject: ['Montevideo', 'Alfredo Zitarrosa']
Predicate: ['country', 'birthPlace']
Object: ['Uruguay', 'Montevideo']

Triple: [['__subject__ Montevideo __predicate__ country __object__ Uruguay', '__subject__ Alfredo Zitarrosa __predicate__ birthPlace __object__ Montevideo']]
Text: Montevideo, Uruguay is the birthplace of Alfredo Zitarrosa.
Subject: ['Montevideo', 'Alfredo Zitarrosa']
Predicate: ['country', 'birthPlace']
Object: ['Uruguay', 'Montevideo']

Triple: [['__subject__ Paraguay __predicate__ leader __object__ Juan Afara', '__subject__ Agustín Barboza __predicate__ birthPlace __object__ Paraguay']]
Text: The birth place of Agustin Barboza is Paraguay, the leader of which, is called Juan Afara.
Subject: ['Paraguay', 'Agustín Barboza']
Predicate: ['leader', 'birthPlace']
Object: ['Juan Afara', 'Paraguay']

Triple: [['__subject__ Paraguay __predicate__ leader __object__ Juan Afara', '__subject__ Agustín Barboza __predicate__ birthPlace __object__ Paraguay']]
Text: The birth place of Agustin Barboza is Paraguay where Juan Afara is the leader.
Subject: ['Paraguay', 'Agustín Barboza']
Predicate: ['leader', 'birthPlace']
Object: ['Juan Afara', 'Paraguay']

Triple: [['__subject__ Paraguay __predicate__ leader __object__ Juan Afara', '__subject__ Agustín Barboza __predicate__ birthPlace __object__ Paraguay']]
Text: Agustín Barboza was born in Paraguay where the leader is Juan Afara.
Subject: ['Paraguay', 'Agustín Barboza']
Predicate: ['leader', 'birthPlace']
Object: ['Juan Afara', 'Paraguay']

Triple: [['__subject__ Paraguay __predicate__ leader __object__ Juan Afara', '__subject__ Agustín Barboza __predicate__ deathPlace __object__ Paraguay']]
Text: The birth place of Agustin Barboza was Paraguay and the leader there is Juan Afara.
Subject: ['Paraguay', 'Agustín Barboza']
Predicate: ['leader', 'deathPlace']
Object: ['Juan Afara', 'Paraguay']

Triple: [['__subject__ Paraguay __predicate__ leader __object__ Juan Afara', '__subject__ Agustín Barboza __predicate__ deathPlace __object__ Paraguay']]
Text: Agustin Barboza died in Paraguay whose leader is Juan Afara.
Subject: ['Paraguay', 'Agustín Barboza']
Predicate: ['leader', 'deathPlace']
Object: ['Juan Afara', 'Paraguay']

Triple: [['__subject__ Paraguay __predicate__ leader __object__ Juan Afara', '__subject__ Agustín Barboza __predicate__ deathPlace __object__ Paraguay']]
Text: The birth place of Agustin Barboza was Paraguay, where Juan Afara is the leader.
Subject: ['Paraguay', 'Agustín Barboza']
Predicate: ['leader', 'deathPlace']
Object: ['Juan Afara', 'Paraguay']

Triple: [['__subject__ Philips Records __predicate__ parentCompany __object__ Universal Music Group', '__subject__ Agustín Barboza __predicate__ recordLabel __object__ Philips Records']]
Text: Universal Music Group's, Philips Records, is the label of Agustín Barboza.
Subject: ['Philips Records', 'Agustín Barboza']
Predicate: ['parentCompany', 'recordLabel']
Object: ['Universal Music Group', 'Philips Records']

Triple: [['__subject__ Philips Records __predicate__ parentCompany __object__ Universal Music Group', '__subject__ Agustín Barboza __predicate__ recordLabel __object__ Philips Records']]
Text: Agustin Barboza is signed to Philips Records, the parent company of which, is the Universal Music Group.
Subject: ['Philips Records', 'Agustín Barboza']
Predicate: ['parentCompany', 'recordLabel']
Object: ['Universal Music Group', 'Philips Records']

Triple: [['__subject__ Philips Records __predicate__ parentCompany __object__ Universal Music Group', '__subject__ Agustín Barboza __predicate__ recordLabel __object__ Philips Records']]
Text: Agustin Barboza is signed to Philips Records wherein Universal Music group is the parent company.
Subject: ['Philips Records', 'Agustín Barboza']
Predicate: ['parentCompany', 'recordLabel']
Object: ['Universal Music Group', 'Philips Records']

Triple: [['__subject__ Pop music __predicate__ musicFusionGenre __object__ Disco', '__subject__ Allen Forrest __predicate__ genre __object__ Pop music']]
Text: Allen Forrest is an exponent of Pop music, which when part of fusion genre, is what Disco music is.
Subject: ['Pop music', 'Allen Forrest']
Predicate: ['musicFusionGenre', 'genre']
Object: ['Disco', 'Pop music']

Triple: [['__subject__ Pop music __predicate__ musicFusionGenre __object__ Disco', '__subject__ Allen Forrest __predicate__ genre __object__ Pop music']]
Text: Disco is a music genre containing other genres like pop music, where you find Allen Forrest as a performer, and therefore can be considered a fusion genre.
Subject: ['Pop music', 'Allen Forrest']
Predicate: ['musicFusionGenre', 'genre']
Object: ['Disco', 'Pop music']

Triple: [['__subject__ Pop music __predicate__ musicFusionGenre __object__ Disco', '__subject__ Allen Forrest __predicate__ genre __object__ Pop music']]
Text: Disco can be thought of as fusion music, because it includes elements of other genres of music, including pop as played by Allen Forrest.
Subject: ['Pop music', 'Allen Forrest']
Predicate: ['musicFusionGenre', 'genre']
Object: ['Disco', 'Pop music']

Triple: [['__subject__ Rock music __predicate__ musicFusionGenre __object__ Bhangra (music)', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']]
Text: Al Anderson plays Rock in NRBQ band. Bhangra is a fusion genre, partly from Rock.
Subject: ['Rock music', 'Al Anderson (NRBQ band)']
Predicate: ['musicFusionGenre', 'genre']
Object: ['Bhangra (music)', 'Rock music']

Triple: [['__subject__ Rock music __predicate__ musicFusionGenre __object__ Bhangra (music)', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']]
Text: The genre of Al Anderson is rock music which is part of the fusion genre Bhangra.
Subject: ['Rock music', 'Al Anderson (NRBQ band)']
Predicate: ['musicFusionGenre', 'genre']
Object: ['Bhangra (music)', 'Rock music']

Triple: [['__subject__ Rock music __predicate__ musicFusionGenre __object__ Bhangra (music)', '__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']]
Text: The genre of Al Anderson is rock music and bhangra music is a rock musical fusion.
Subject: ['Rock music', 'Al Anderson (NRBQ band)']
Predicate: ['musicFusionGenre', 'genre']
Object: ['Bhangra (music)', 'Rock music']

Triple: [['__subject__ Ska punk __predicate__ stylisticOrigin __object__ Ska', '__subject__ Aaron Bertram __predicate__ genre __object__ Ska punk']]
Text: Aaron Bertram plays Ska punk, derived from ska music.
Subject: ['Ska punk', 'Aaron Bertram']
Predicate: ['stylisticOrigin', 'genre']
Object: ['Ska', 'Ska punk']

Triple: [['__subject__ Ska punk __predicate__ stylisticOrigin __object__ Ska', '__subject__ Aaron Bertram __predicate__ genre __object__ Ska punk']]
Text: Aaron Bertram's musical genre is Ska punk which has its origins in Ska.
Subject: ['Ska punk', 'Aaron Bertram']
Predicate: ['stylisticOrigin', 'genre']
Object: ['Ska', 'Ska punk']

Triple: [['__subject__ Ska punk __predicate__ stylisticOrigin __object__ Ska', '__subject__ Aaron Bertram __predicate__ genre __object__ Ska punk']]
Text: Aaron Bertram performs ska punk music which originated from ska music.
Subject: ['Ska punk', 'Aaron Bertram']
Predicate: ['stylisticOrigin', 'genre']
Object: ['Ska', 'Ska punk']

Triple: [['__subject__ Suburban Legends __predicate__ genre __object__ Rock music', '__subject__ Aaron Bertram __predicate__ associatedBand/associatedMusicalArtist __object__ Suburban Legends']]
Text: Aaron Bertram plays for the Suburban Legends band which performs rock music.
Subject: ['Suburban Legends', 'Aaron Bertram']
Predicate: ['genre', 'associatedBand/associatedMusicalArtist']
Object: ['Rock music', 'Suburban Legends']

Triple: [['__subject__ Suburban Legends __predicate__ genre __object__ Rock music', '__subject__ Aaron Bertram __predicate__ associatedBand/associatedMusicalArtist __object__ Suburban Legends']]
Text: Aaron Bertram plays for the Suburban Legends band which has the genre, Rock music.
Subject: ['Suburban Legends', 'Aaron Bertram']
Predicate: ['genre', 'associatedBand/associatedMusicalArtist']
Object: ['Rock music', 'Suburban Legends']

Triple: [['__subject__ Suburban Legends __predicate__ genre __object__ Rock music', '__subject__ Aaron Bertram __predicate__ associatedBand/associatedMusicalArtist __object__ Suburban Legends']]
Text: Aaron Bertram play for the Suburban Legends band which plays rock music.
Subject: ['Suburban Legends', 'Aaron Bertram']
Predicate: ['genre', 'associatedBand/associatedMusicalArtist']
Object: ['Rock music', 'Suburban Legends']

Triple: [['__subject__ Twilight (band) __predicate__ genre __object__ Black metal', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)']]
Text: Aaron Turner played with the band Twilight known for performing black metal music.
Subject: ['Twilight (band)', 'Aaron Turner']
Predicate: ['genre', 'associatedBand/associatedMusicalArtist']
Object: ['Black metal', 'Twilight (band)']

Triple: [['__subject__ Twilight (band) __predicate__ genre __object__ Black metal', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)']]
Text: Aaron Turner played with the band Twilight, the band's musical genre is black metal.
Subject: ['Twilight (band)', 'Aaron Turner']
Predicate: ['genre', 'associatedBand/associatedMusicalArtist']
Object: ['Black metal', 'Twilight (band)']

Triple: [['__subject__ Twilight (band) __predicate__ genre __object__ Black metal', '__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)']]
Text: Aaron Turner played with Twilight, a black metal band.
Subject: ['Twilight (band)', 'Aaron Turner']
Predicate: ['genre', 'associatedBand/associatedMusicalArtist']
Object: ['Black metal', 'Twilight (band)']

Triple: [['__subject__ United Kingdom __predicate__ capital __object__ London', '__subject__ Alex Day __predicate__ birthPlace __object__ United Kingdom']]
Text: Alex Day was born in the UK, where the capital city is London.
Subject: ['United Kingdom', 'Alex Day']
Predicate: ['capital', 'birthPlace']
Object: ['London', 'United Kingdom']

Triple: [['__subject__ United Kingdom __predicate__ capital __object__ London', '__subject__ Alex Day __predicate__ birthPlace __object__ United Kingdom']]
Text: Alex Day was born in the United Kingdom where London is the capital.
Subject: ['United Kingdom', 'Alex Day']
Predicate: ['capital', 'birthPlace']
Object: ['London', 'United Kingdom']

Triple: [['__subject__ United Kingdom __predicate__ capital __object__ London', '__subject__ Alex Day __predicate__ birthPlace __object__ United Kingdom']]
Text: Alex Day was born in the United Kingdom whose capital city is London.
Subject: ['United Kingdom', 'Alex Day']
Predicate: ['capital', 'birthPlace']
Object: ['London', 'United Kingdom']

Triple: [['__subject__ United Kingdom __predicate__ leader __object__ Elizabeth II', '__subject__ Alfred Garth Jones __predicate__ nationality __object__ United Kingdom']]
Text: Elizabeth II is the leader of the United Kingdom, the country of Alfred Garth Jones' birth.
Subject: ['United Kingdom', 'Alfred Garth Jones']
Predicate: ['leader', 'nationality']
Object: ['Elizabeth II', 'United Kingdom']

Triple: [['__subject__ United Kingdom __predicate__ leader __object__ Elizabeth II', '__subject__ Alfred Garth Jones __predicate__ nationality __object__ United Kingdom']]
Text: Elizabeth II is the leader of the United Kingdom, which is where Alfred Garth Jones was born.
Subject: ['United Kingdom', 'Alfred Garth Jones']
Predicate: ['leader', 'nationality']
Object: ['Elizabeth II', 'United Kingdom']

Triple: [['__subject__ United Kingdom __predicate__ leader __object__ Elizabeth II', '__subject__ Alfred Garth Jones __predicate__ nationality __object__ United Kingdom']]
Text: Alfred Garth Jones comes from the United Kingdom, where Elizabeth II is the leader.
Subject: ['United Kingdom', 'Alfred Garth Jones']
Predicate: ['leader', 'nationality']
Object: ['Elizabeth II', 'United Kingdom']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ African Americans', '__subject__ Albennie Jones __predicate__ birthPlace __object__ United States']]
Text: Albennie Jones was born in the United States where African Americans are one of the ethnic groups.
Subject: ['United States', 'Albennie Jones']
Predicate: ['ethnicGroup', 'birthPlace']
Object: ['African Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ African Americans', '__subject__ Albennie Jones __predicate__ birthPlace __object__ United States']]
Text: Albennie Jones was born in the United States, where African Americans are an ethnic group.
Subject: ['United States', 'Albennie Jones']
Predicate: ['ethnicGroup', 'birthPlace']
Object: ['African Americans', 'United States']

Triple: [['__subject__ Uruguay __predicate__ leader __object__ Raúl Fernando Sendic Rodríguez', '__subject__ Alfredo Zitarrosa __predicate__ birthPlace __object__ Uruguay']]
Text: Alfredo Zitarrosa was born in Uruguay where the leader is Raul Fernando Sendic Rodriguez.
Subject: ['Uruguay', 'Alfredo Zitarrosa']
Predicate: ['leader', 'birthPlace']
Object: ['Raúl Fernando Sendic Rodríguez', 'Uruguay']

Triple: [['__subject__ Uruguay __predicate__ leader __object__ Raúl Fernando Sendic Rodríguez', '__subject__ Alfredo Zitarrosa __predicate__ birthPlace __object__ Uruguay']]
Text: Alfredo Zitarrosa's birth place was Uruguay, where the leader is, Raul Fernando Sendic Rodriguez.
Subject: ['Uruguay', 'Alfredo Zitarrosa']
Predicate: ['leader', 'birthPlace']
Object: ['Raúl Fernando Sendic Rodríguez', 'Uruguay']

Triple: [['__subject__ Uruguay __predicate__ leader __object__ Raúl Fernando Sendic Rodríguez', '__subject__ Alfredo Zitarrosa __predicate__ birthPlace __object__ Uruguay']]
Text: Alfredo Zitarrosa was born in Uruguay, a country led by Raul Fernando Sendic Rodriguez.
Subject: ['Uruguay', 'Alfredo Zitarrosa']
Predicate: ['leader', 'birthPlace']
Object: ['Raúl Fernando Sendic Rodríguez', 'Uruguay']

Triple: [['__subject__ Uruguay __predicate__ leader __object__ Raúl Fernando Sendic Rodríguez', '__subject__ Alfredo Zitarrosa __predicate__ deathPlace __object__ Uruguay']]
Text: Alfredo Zitarrosa died in Uruguay where the leader is Raul Fernando Sendic Rodriguez.
Subject: ['Uruguay', 'Alfredo Zitarrosa']
Predicate: ['leader', 'deathPlace']
Object: ['Raúl Fernando Sendic Rodríguez', 'Uruguay']

Triple: [['__subject__ Uruguay __predicate__ leader __object__ Raúl Fernando Sendic Rodríguez', '__subject__ Alfredo Zitarrosa __predicate__ deathPlace __object__ Uruguay']]
Text: Alfredo Zitarrosa died in Uruguay, a country led by Raul Fernando Sendic Rodriguez.
Subject: ['Uruguay', 'Alfredo Zitarrosa']
Predicate: ['leader', 'deathPlace']
Object: ['Raúl Fernando Sendic Rodríguez', 'Uruguay']

Triple: [['__subject__ Uruguay __predicate__ leader __object__ Tabaré Vázquez', '__subject__ Alfredo Zitarrosa __predicate__ deathPlace __object__ Uruguay']]
Text: Alfredo Zitarrosa died in Uruguay where the leader is Tabaré Vázquez.
Subject: ['Uruguay', 'Alfredo Zitarrosa']
Predicate: ['leader', 'deathPlace']
Object: ['Tabaré Vázquez', 'Uruguay']

Triple: [['__subject__ Uruguay __predicate__ leader __object__ Tabaré Vázquez', '__subject__ Alfredo Zitarrosa __predicate__ deathPlace __object__ Uruguay']]
Text: Alfredo Zitarrosa died in Uruguay, the leader of which, is Tabare Vazquez.
Subject: ['Uruguay', 'Alfredo Zitarrosa']
Predicate: ['leader', 'deathPlace']
Object: ['Tabaré Vázquez', 'Uruguay']

Triple: [['__subject__ Alan Bean __predicate__ birthDate __object__ 1932-03-15', '__subject__ Alan Bean __predicate__ almaMater __object__ UT Austin, B.S. 1955']]
Text: Alan Bean was born on March 15, 1932 and received a Bachelor of Science degree at the University of Texas at Austin in 1955.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['birthDate', 'almaMater']
Object: ['1932-03-15', 'UT Austin, B.S. 1955']

Triple: [['__subject__ Alan Bean __predicate__ birthDate __object__ 1932-03-15', '__subject__ Alan Bean __predicate__ almaMater __object__ UT Austin, B.S. 1955']]
Text: Alan Bean was born on the 15th of March 1932 and graduated from UT Austin in 1955 with a B.S.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['birthDate', 'almaMater']
Object: ['1932-03-15', 'UT Austin, B.S. 1955']

Triple: [['__subject__ Alan Bean __predicate__ birthDate __object__ 1932-03-15', '__subject__ Alan Bean __predicate__ almaMater __object__ UT Austin, B.S. 1955']]
Text: Alan Bean was born on the 15th of March 1932 and his Alma Mater is UT Austin, B.S. 1955.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['birthDate', 'almaMater']
Object: ['1932-03-15', 'UT Austin, B.S. 1955']

Triple: [['__subject__ Alan Bean __predicate__ birthDate __object__ 1932-03-15', '__subject__ Alan Bean __predicate__ almaMater __object__ UT Austin, B.S. 1955']]
Text: Alan Bean (born 1932-03-15)'s alma mater was UT Austin B.S. 1955.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['birthDate', 'almaMater']
Object: ['1932-03-15', 'UT Austin, B.S. 1955']

Triple: [['__subject__ Alan Bean __predicate__ birthDate __object__ 1932-03-15', '__subject__ Alan Bean __predicate__ almaMater __object__ UT Austin, B.S. 1955']]
Text: Alan Bean (born on 1932-03-15) graduated from UT Austin in 1955 with a B.Sc. degree.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['birthDate', 'almaMater']
Object: ['1932-03-15', 'UT Austin, B.S. 1955']

Triple: [['__subject__ Alan Bean __predicate__ birthDate __object__ 1932-03-15', '__subject__ Alan Bean __predicate__ almaMater __object__ UT Austin, B.S. 1955']]
Text: Alan Bean was born on March 15, 1932 and his alma mater was UT Austin BS, in 1955.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['birthDate', 'almaMater']
Object: ['1932-03-15', 'UT Austin, B.S. 1955']

Triple: [['__subject__ Alan Bean __predicate__ birthDate __object__ 1932-03-15', '__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']]
Text: Alan Bean was born in Wheeler, Texas on Mar 15, 1932 .
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['birthDate', 'birthPlace']
Object: ['1932-03-15', 'Wheeler, Texas']

Triple: [['__subject__ Alan Bean __predicate__ birthDate __object__ 1932-03-15', '__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']]
Text: Alan Bean was born on Mar 15, 1932, in Wheeler, Texas.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['birthDate', 'birthPlace']
Object: ['1932-03-15', 'Wheeler, Texas']

Triple: [['__subject__ Alan Bean __predicate__ birthDate __object__ 1932-03-15', '__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']]
Text: Alan Bean was born in Wheeler, Texas on March 15th, 1932.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['birthDate', 'birthPlace']
Object: ['1932-03-15', 'Wheeler, Texas']

Triple: [['__subject__ Alan Bean __predicate__ nationality __object__ United States', '__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']]
Text: American Alan Bean was born in Wheeler Texas.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['nationality', 'birthPlace']
Object: ['United States', 'Wheeler, Texas']

Triple: [['__subject__ Alan Bean __predicate__ nationality __object__ United States', '__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']]
Text: Alan Bean was an American, who was born in Wheeler, Texas.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['nationality', 'birthPlace']
Object: ['United States', 'Wheeler, Texas']

Triple: [['__subject__ Alan Bean __predicate__ nationality __object__ United States', '__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']]
Text: Alan Bean is an American who was born in Wheeler, Texas.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['nationality', 'birthPlace']
Object: ['United States', 'Wheeler, Texas']

Triple: [['__subject__ Alan Bean __predicate__ nationality __object__ United States', '__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']]
Text: Alan Bean was born in Wheeler, Texas, United States.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['nationality', 'birthPlace']
Object: ['United States', 'Wheeler, Texas']

Triple: [['__subject__ Alan Bean __predicate__ nationality __object__ United States', '__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']]
Text: Alan Bean was born in Wheeler, Texas and is a citizen of the United States.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['nationality', 'birthPlace']
Object: ['United States', 'Wheeler, Texas']

Triple: [['__subject__ Alan Bean __predicate__ nationality __object__ United States', '__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']]
Text: Alan Bean is an American, born in Wheeler, Texas.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['nationality', 'birthPlace']
Object: ['United States', 'Wheeler, Texas']

Triple: [['__subject__ Alan Bean __predicate__ occupation __object__ Test pilot', '__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']]
Text: Alan Bean, who was born in Wheeler Texas, performed as a test pilot.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['occupation', 'birthPlace']
Object: ['Test pilot', 'Wheeler, Texas']

Triple: [['__subject__ Alan Bean __predicate__ occupation __object__ Test pilot', '__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']]
Text: Alan Bean, born in Wheeler, Texas, performs as a test pilot.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['occupation', 'birthPlace']
Object: ['Test pilot', 'Wheeler, Texas']

Triple: [['__subject__ Alan Bean __predicate__ occupation __object__ Test pilot', '__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']]
Text: Alan Bean was a test pilot who was born in Wheeler, Texas.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['occupation', 'birthPlace']
Object: ['Test pilot', 'Wheeler, Texas']

Triple: [['__subject__ Alan Bean __predicate__ occupation __object__ Test pilot', '__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']]
Text: Alan Bean was born in Wheeler, Texas and pursued a career as a test pilot.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['occupation', 'birthPlace']
Object: ['Test pilot', 'Wheeler, Texas']

Triple: [['__subject__ Alan Bean __predicate__ occupation __object__ Test pilot', '__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']]
Text: Alan Bean (born in Wheeler Texas) served as a test pilot.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['occupation', 'birthPlace']
Object: ['Test pilot', 'Wheeler, Texas']

Triple: [['__subject__ Alan Bean __predicate__ occupation __object__ Test pilot', '__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']]
Text: Alan Bean (born in Wheeler Texas) served as test pilot.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['occupation', 'birthPlace']
Object: ['Test pilot', 'Wheeler, Texas']

Triple: [['__subject__ Alan Bean __predicate__ occupation __object__ Test pilot', '__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']]
Text: Alan Bean, a test pilot, was born in Wheeler, Texas.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['occupation', 'birthPlace']
Object: ['Test pilot', 'Wheeler, Texas']

Triple: [['__subject__ Alan Bean __predicate__ timeInSpace __object__ 100305.0(minutes)', '__subject__ Alan Bean __predicate__ selectedByNasa __object__ 1963']]
Text: Alan Bean, hired by NASA in 1963, spent over 69 days in space.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['timeInSpace', 'selectedByNasa']
Object: ['100305.0(minutes)', '1963']

Triple: [['__subject__ Alan Bean __predicate__ timeInSpace __object__ 100305.0(minutes)', '__subject__ Alan Bean __predicate__ selectedByNasa __object__ 1963']]
Text: After being recruited by NASA in 1963, Alan Bean spent 100305 minutes in space.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['timeInSpace', 'selectedByNasa']
Object: ['100305.0(minutes)', '1963']

Triple: [['__subject__ Alan Bean __predicate__ timeInSpace __object__ 100305.0(minutes)', '__subject__ Alan Bean __predicate__ selectedByNasa __object__ 1963']]
Text: Alan Bean, who was picked by NASA in 1963 for the space program, was in space for a total of 100,305 minutes.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['timeInSpace', 'selectedByNasa']
Object: ['100305.0(minutes)', '1963']

Triple: [['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12', '__subject__ Alan Bean __predicate__ dateOfRetirement __object__ June 1981']]
Text: Astronaut Alan Bean, who was part of the Apollo 12 crew, retired in June 1981.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['mission', 'dateOfRetirement']
Object: ['Apollo 12', 'June 1981']

Triple: [['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12', '__subject__ Alan Bean __predicate__ dateOfRetirement __object__ June 1981']]
Text: Before he retired in June 1981, Alan Bean was a member of Apollo 12.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['mission', 'dateOfRetirement']
Object: ['Apollo 12', 'June 1981']

Triple: [['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12', '__subject__ Alan Bean __predicate__ dateOfRetirement __object__ June 1981']]
Text: Alan Bean, who was one of the astronauts on Apollo 12, retired in June 1981.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['mission', 'dateOfRetirement']
Object: ['Apollo 12', 'June 1981']

Triple: [['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12', '__subject__ Alan Bean __predicate__ dateOfRetirement __object__ June 1981']]
Text: Alan Bean (retired June 1981) was a crew member of Apollo 12.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['mission', 'dateOfRetirement']
Object: ['Apollo 12', 'June 1981']

Triple: [['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12', '__subject__ Alan Bean __predicate__ dateOfRetirement __object__ June 1981']]
Text: Alan Bean, a crew member of Apollo 12, retired in June 1981.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['mission', 'dateOfRetirement']
Object: ['Apollo 12', 'June 1981']

Triple: [['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12', '__subject__ Alan Bean __predicate__ dateOfRetirement __object__ June 1981']]
Text: Alan Bean, formerly a crew member of Apollo 12 retired in June 1981.
Subject: ['Alan Bean', 'Alan Bean']
Predicate: ['mission', 'dateOfRetirement']
Object: ['Apollo 12', 'June 1981']

Triple: [['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12', '__subject__ Apollo 12 __predicate__ operator __object__ NASA']]
Text: NASA's Apollo 12 crew included Alan Bean.
Subject: ['Alan Bean', 'Apollo 12']
Predicate: ['mission', 'operator']
Object: ['Apollo 12', 'NASA']

Triple: [['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12', '__subject__ Apollo 12 __predicate__ operator __object__ NASA']]
Text: Alan Bean was part of Apollo 12 which was operated by NASA.
Subject: ['Alan Bean', 'Apollo 12']
Predicate: ['mission', 'operator']
Object: ['Apollo 12', 'NASA']

Triple: [['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12', '__subject__ Apollo 12 __predicate__ operator __object__ NASA']]
Text: Alan Bean was a crew member of the NASA operated Apollo 12.
Subject: ['Alan Bean', 'Apollo 12']
Predicate: ['mission', 'operator']
Object: ['Apollo 12', 'NASA']

Triple: [['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12', '__subject__ Apollo 12 __predicate__ operator __object__ NASA']]
Text: Alan Bean was a crew member of NASA's Apollo 12.
Subject: ['Alan Bean', 'Apollo 12']
Predicate: ['mission', 'operator']
Object: ['Apollo 12', 'NASA']

Triple: [['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12', '__subject__ Apollo 12 __predicate__ operator __object__ NASA']]
Text: Alan Bean served as a crew member of Apollo 12 which is operated by NASA.
Subject: ['Alan Bean', 'Apollo 12']
Predicate: ['mission', 'operator']
Object: ['Apollo 12', 'NASA']

Triple: [['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12', '__subject__ Apollo 12 __predicate__ operator __object__ NASA']]
Text: Alan Bean was a crew member of Apollo 12, which was operated by nasa.
Subject: ['Alan Bean', 'Apollo 12']
Predicate: ['mission', 'operator']
Object: ['Apollo 12', 'NASA']

Triple: [['__subject__ Alan Shepard __predicate__ almaMater __object__ NWC, M.A. 1957', '__subject__ Alan Shepard __predicate__ award __object__ Distinguished Service Medal (United States Navy)']]
Text: Alan Shepard, who was awarded the Distinguished Service Medal by the United States Navy, went to school at NWC and graduated with an MA in 1957.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['almaMater', 'award']
Object: ['NWC, M.A. 1957', 'Distinguished Service Medal (United States Navy)']

Triple: [['__subject__ Alan Shepard __predicate__ almaMater __object__ NWC, M.A. 1957', '__subject__ Alan Shepard __predicate__ award __object__ Distinguished Service Medal (United States Navy)']]
Text: 1957 NWC M.A. graduate Alan Shepard is a recipient of the United States Navy's Distinguished Service Medal.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['almaMater', 'award']
Object: ['NWC, M.A. 1957', 'Distinguished Service Medal (United States Navy)']

Triple: [['__subject__ Alan Shepard __predicate__ almaMater __object__ NWC, M.A. 1957', '__subject__ Alan Shepard __predicate__ award __object__ Distinguished Service Medal (United States Navy)']]
Text: Alan Shepard who graduated from NWC with an MA in 1957 was awarded the Distinguished Service Medal by the US Navy.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['almaMater', 'award']
Object: ['NWC, M.A. 1957', 'Distinguished Service Medal (United States Navy)']

Triple: [['__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire', '__subject__ Alan Shepard __predicate__ award __object__ Distinguished Service Medal (United States Navy)']]
Text: Born in New Hampshire, Alan Shepard got a distinguished Service Medal by the US Navy.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['birthPlace', 'award']
Object: ['New Hampshire', 'Distinguished Service Medal (United States Navy)']

Triple: [['__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire', '__subject__ Alan Shepard __predicate__ award __object__ Distinguished Service Medal (United States Navy)']]
Text: Alan Shepard, who was born in New Hampshire, was awarded the United States Navy Distinguished Service Medal.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['birthPlace', 'award']
Object: ['New Hampshire', 'Distinguished Service Medal (United States Navy)']

Triple: [['__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire', '__subject__ Alan Shepard __predicate__ award __object__ Distinguished Service Medal (United States Navy)']]
Text: Alan Shepard, who was born in New Hampshire, was awarded the Distinguished Service Medal by the U.S. Navy.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['birthPlace', 'award']
Object: ['New Hampshire', 'Distinguished Service Medal (United States Navy)']

Triple: [['__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire', '__subject__ Alan Shepard __predicate__ award __object__ Distinguished Service Medal (United States Navy)']]
Text: Alan Shepard born in New Hampshire, was awarded the " Distinguished Service Medal".
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['birthPlace', 'award']
Object: ['New Hampshire', 'Distinguished Service Medal (United States Navy)']

Triple: [['__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire', '__subject__ Alan Shepard __predicate__ award __object__ Distinguished Service Medal (United States Navy)']]
Text: Alan Shepard (born in New Hampshire) was awarded the Distinguished Service Medal of United States Navy.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['birthPlace', 'award']
Object: ['New Hampshire', 'Distinguished Service Medal (United States Navy)']

Triple: [['__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire', '__subject__ Alan Shepard __predicate__ nationality __object__ United States']]
Text: Alan Shepard is an American citizen who was born in New Hampshire.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['birthPlace', 'nationality']
Object: ['New Hampshire', 'United States']

Triple: [['__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire', '__subject__ Alan Shepard __predicate__ nationality __object__ United States']]
Text: Alan Shepard was born in the American state of New Hampshire.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['birthPlace', 'nationality']
Object: ['New Hampshire', 'United States']

Triple: [['__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire', '__subject__ Alan Shepard __predicate__ nationality __object__ United States']]
Text: Alan Shepard is an American who was born in New Hampshire.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['birthPlace', 'nationality']
Object: ['New Hampshire', 'United States']

Triple: [['__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire', '__subject__ Alan Shepard __predicate__ nationality __object__ United States']]
Text: Alan Shepard is a US citizen born in New Hampshire.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['birthPlace', 'nationality']
Object: ['New Hampshire', 'United States']

Triple: [['__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire', '__subject__ Alan Shepard __predicate__ nationality __object__ United States']]
Text: Alan Shepard has a US nationality and was born in the New Hampshire.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['birthPlace', 'nationality']
Object: ['New Hampshire', 'United States']

Triple: [['__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire', '__subject__ Alan Shepard __predicate__ nationality __object__ United States']]
Text: Alan Shepard was born in New Hampshire (US).
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['birthPlace', 'nationality']
Object: ['New Hampshire', 'United States']

Triple: [['__subject__ Alan Shepard __predicate__ deathPlace __object__ California', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Alan Shepard was born in New Hampshire but died in California.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['deathPlace', 'birthPlace']
Object: ['California', 'New Hampshire']

Triple: [['__subject__ Alan Shepard __predicate__ deathPlace __object__ California', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Alan Shepard was born in New Hampshire and died in California.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['deathPlace', 'birthPlace']
Object: ['California', 'New Hampshire']

Triple: [['__subject__ Alan Shepard __predicate__ deathPlace __object__ California', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Alan Shepard (born in New Hampshire) died in California.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['deathPlace', 'birthPlace']
Object: ['California', 'New Hampshire']

Triple: [['__subject__ Alan Shepard __predicate__ deathPlace __object__ California', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Alan Shepard who born in New Hampshire died in California.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['deathPlace', 'birthPlace']
Object: ['California', 'New Hampshire']

Triple: [['__subject__ Alan Shepard __predicate__ deathPlace __object__ California', '__subject__ Alan Shepard __predicate__ deathDate __object__ 1998-07-21']]
Text: Alan Shepard died in California on July 21, 1998.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['deathPlace', 'deathDate']
Object: ['California', '1998-07-21']

Triple: [['__subject__ Alan Shepard __predicate__ deathPlace __object__ California', '__subject__ Alan Shepard __predicate__ deathDate __object__ 1998-07-21']]
Text: Alan Shepard died in California om July 21, 1998.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['deathPlace', 'deathDate']
Object: ['California', '1998-07-21']

Triple: [['__subject__ Alan Shepard __predicate__ deathPlace __object__ California', '__subject__ Alan Shepard __predicate__ deathDate __object__ 1998-07-21']]
Text: Alan Shepard died in California on July 21st, 1998.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['deathPlace', 'deathDate']
Object: ['California', '1998-07-21']

Triple: [['__subject__ Alan Shepard __predicate__ deathPlace __object__ California', '__subject__ Alan Shepard __predicate__ deathDate __object__ 1998-07-21']]
Text: Alan Shepard died in California on 1998-07-21.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['deathPlace', 'deathDate']
Object: ['California', '1998-07-21']

Triple: [['__subject__ Alan Shepard __predicate__ deathPlace __object__ California', '__subject__ Alan Shepard __predicate__ deathDate __object__ 1998-07-21']]
Text: Alan Shepard passed away on 1998-07-21 in California.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['deathPlace', 'deathDate']
Object: ['California', '1998-07-21']

Triple: [['__subject__ Alan Shepard __predicate__ deathPlace __object__ California', '__subject__ California __predicate__ senators __object__ Dianne Feinstein']]
Text: Dianne Feinstein is one of the senators of California, where Alan Shepard died.
Subject: ['Alan Shepard', 'California']
Predicate: ['deathPlace', 'senators']
Object: ['California', 'Dianne Feinstein']

Triple: [['__subject__ Alan Shepard __predicate__ deathPlace __object__ California', '__subject__ California __predicate__ senators __object__ Dianne Feinstein']]
Text: Alan Shepard died in California where Dianne Feinstein was the Senator representing the state.
Subject: ['Alan Shepard', 'California']
Predicate: ['deathPlace', 'senators']
Object: ['California', 'Dianne Feinstein']

Triple: [['__subject__ Alan Shepard __predicate__ deathPlace __object__ California', '__subject__ California __predicate__ senators __object__ Dianne Feinstein']]
Text: Senator Dianne Feinstein and Alan Shepard are both Californians.
Subject: ['Alan Shepard', 'California']
Predicate: ['deathPlace', 'senators']
Object: ['California', 'Dianne Feinstein']

Triple: [['__subject__ Alan Shepard __predicate__ nationality __object__ United States', '__subject__ Alan Shepard __predicate__ birthDate __object__ 1923-11-18']]
Text: American Alan Shepard was born on Nov. 18, 1923.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['nationality', 'birthDate']
Object: ['United States', '1923-11-18']

Triple: [['__subject__ Alan Shepard __predicate__ nationality __object__ United States', '__subject__ Alan Shepard __predicate__ birthDate __object__ 1923-11-18']]
Text: Alan Shepard was born on the 18th November 1923 in the United States.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['nationality', 'birthDate']
Object: ['United States', '1923-11-18']

Triple: [['__subject__ Alan Shepard __predicate__ nationality __object__ United States', '__subject__ Alan Shepard __predicate__ birthDate __object__ 1923-11-18']]
Text: Alan Shepard was an American who was born on November 18th, 1923.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['nationality', 'birthDate']
Object: ['United States', '1923-11-18']

Triple: [['__subject__ Alan Shepard __predicate__ servedAsChiefOfTheAstronautOfficeIn __object__ 1963', '__subject__ Alan Shepard __predicate__ title __object__ Chief of the Astronaut Office']]
Text: In 1963 the Chief of the Astronaut office was Alan Shepard.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['servedAsChiefOfTheAstronautOfficeIn', 'title']
Object: ['1963', 'Chief of the Astronaut Office']

Triple: [['__subject__ Alan Shepard __predicate__ servedAsChiefOfTheAstronautOfficeIn __object__ 1963', '__subject__ Alan Shepard __predicate__ title __object__ Chief of the Astronaut Office']]
Text: In 1963 Alan Shepard was Chief of the Astronaut Office.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['servedAsChiefOfTheAstronautOfficeIn', 'title']
Object: ['1963', 'Chief of the Astronaut Office']

Triple: [['__subject__ Alan Shepard __predicate__ servedAsChiefOfTheAstronautOfficeIn __object__ 1963', '__subject__ Alan Shepard __predicate__ title __object__ Chief of the Astronaut Office']]
Text: Alan Shepard held the position of the Chief of the Astronaut Office in 1963.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['servedAsChiefOfTheAstronautOfficeIn', 'title']
Object: ['1963', 'Chief of the Astronaut Office']

Triple: [['__subject__ Alan Shepard __predicate__ timeInSpace __object__ 13017.0(minutes)', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Alan Shepard, born in New Hampshire, spent 13017 minutes in space.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['timeInSpace', 'birthPlace']
Object: ['13017.0(minutes)', 'New Hampshire']

Triple: [['__subject__ Alan Shepard __predicate__ timeInSpace __object__ 13017.0(minutes)', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Alan Shepard, who was born in New Hampshire has spent 13017,0 minutes in space.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['timeInSpace', 'birthPlace']
Object: ['13017.0(minutes)', 'New Hampshire']

Triple: [['__subject__ Alan Shepard __predicate__ timeInSpace __object__ 13017.0(minutes)', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Alan Shepard was born in New Hampshire and spent 13017 minutes in space.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['timeInSpace', 'birthPlace']
Object: ['13017.0(minutes)', 'New Hampshire']

Triple: [['__subject__ Alan Shepard __predicate__ timeInSpace __object__ 13017.0(minutes)', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Alan Shepard was born in New Hampshire and spent 13017.0 minutes in space.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['timeInSpace', 'birthPlace']
Object: ['13017.0(minutes)', 'New Hampshire']

Triple: [['__subject__ Alan Shepard __predicate__ title __object__ Chief of the Astronaut Office', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Alan Shepard was born in New Hampshire and he served as the Chief of the Astronaut Office.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['title', 'birthPlace']
Object: ['Chief of the Astronaut Office', 'New Hampshire']

Triple: [['__subject__ Alan Shepard __predicate__ title __object__ Chief of the Astronaut Office', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Alan Shepard, who was born in New Hampshire, later became the Chief of the Astronaut Office.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['title', 'birthPlace']
Object: ['Chief of the Astronaut Office', 'New Hampshire']

Triple: [['__subject__ Alan Shepard __predicate__ title __object__ Chief of the Astronaut Office', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Alan Shepard, who was born in New Hampshire, held the position of the Chief of the Astronaut Office.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['title', 'birthPlace']
Object: ['Chief of the Astronaut Office', 'New Hampshire']

Triple: [['__subject__ Alan Shepard __predicate__ title __object__ Chief of the Astronaut Office', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Alan Shepard is Chief of the Astronaut Office and was born in New Hampshire.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['title', 'birthPlace']
Object: ['Chief of the Astronaut Office', 'New Hampshire']

Triple: [['__subject__ Alan Shepard __predicate__ title __object__ Chief of the Astronaut Office', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Alan Shepard who was born in New Hampshire held the title Chief of the Astronaut Office.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['title', 'birthPlace']
Object: ['Chief of the Astronaut Office', 'New Hampshire']

Triple: [['__subject__ Alan Shepard __predicate__ title __object__ Chief of the Astronaut Office', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Alan Shepard, who was born in New Hampshire is the Chief of the Astronaut Office.
Subject: ['Alan Shepard', 'Alan Shepard']
Predicate: ['title', 'birthPlace']
Object: ['Chief of the Astronaut Office', 'New Hampshire']

Triple: [['__subject__ Alan Shepard __predicate__ mission __object__ Apollo 14', '__subject__ Apollo 14 __predicate__ operator __object__ NASA']]
Text: Alan Shepard was a member of the crew of Apollo 14 which was operated by NASA.
Subject: ['Alan Shepard', 'Apollo 14']
Predicate: ['mission', 'operator']
Object: ['Apollo 14', 'NASA']

Triple: [['__subject__ Alan Shepard __predicate__ mission __object__ Apollo 14', '__subject__ Apollo 14 __predicate__ operator __object__ NASA']]
Text: NASA's Apollo 14 mission crew included Alan Shepard.
Subject: ['Alan Shepard', 'Apollo 14']
Predicate: ['mission', 'operator']
Object: ['Apollo 14', 'NASA']

Triple: [['__subject__ Alan Shepard __predicate__ mission __object__ Apollo 14', '__subject__ Apollo 14 __predicate__ operator __object__ NASA']]
Text: NASA's Apollo 14 saw Alan Shepard as one of its crew members.
Subject: ['Alan Shepard', 'Apollo 14']
Predicate: ['mission', 'operator']
Object: ['Apollo 14', 'NASA']

Triple: [['__subject__ Alan Shepard __predicate__ mission __object__ Apollo 14', '__subject__ Apollo 14 __predicate__ operator __object__ NASA']]
Text: Alan Shepard was a crew member of NASA's Apollo 14.
Subject: ['Alan Shepard', 'Apollo 14']
Predicate: ['mission', 'operator']
Object: ['Apollo 14', 'NASA']

Triple: [['__subject__ British Hong Kong __predicate__ representative __object__ Chris Patten', '__subject__ William Anders __predicate__ birthPlace __object__ British Hong Kong']]
Text: William Anders was born in British Hong Kong represented by Chris Patten.
Subject: ['British Hong Kong', 'William Anders']
Predicate: ['representative', 'birthPlace']
Object: ['Chris Patten', 'British Hong Kong']

Triple: [['__subject__ British Hong Kong __predicate__ representative __object__ Chris Patten', '__subject__ William Anders __predicate__ birthPlace __object__ British Hong Kong']]
Text: Chris Patten is a representative of British Hong Kong which coincidentally is the birthplace of William Anders.
Subject: ['British Hong Kong', 'William Anders']
Predicate: ['representative', 'birthPlace']
Object: ['Chris Patten', 'British Hong Kong']

Triple: [['__subject__ Buzz Aldrin __predicate__ alternativeName __object__ Edwin E. Aldrin, Jr.', '__subject__ Buzz Aldrin __predicate__ birthDate __object__ 1930-01-20']]
Text: Edwin E. Aldrin, Jr. who was born on 20th January 1930, went on to be known as Buzz Aldrin.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['alternativeName', 'birthDate']
Object: ['Edwin E. Aldrin, Jr.', '1930-01-20']

Triple: [['__subject__ Buzz Aldrin __predicate__ alternativeName __object__ Edwin E. Aldrin, Jr.', '__subject__ Buzz Aldrin __predicate__ birthDate __object__ 1930-01-20']]
Text: Edwin E. Aldrin, Jr. was commonly known as Buzz Aldrin and was born January 20, 1930.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['alternativeName', 'birthDate']
Object: ['Edwin E. Aldrin, Jr.', '1930-01-20']

Triple: [['__subject__ Buzz Aldrin __predicate__ alternativeName __object__ Edwin E. Aldrin, Jr.', '__subject__ Buzz Aldrin __predicate__ birthDate __object__ 1930-01-20']]
Text: Edwin E. Aldrin Junior's nickname was Buzz Aldrin and he was born on January 20th, 1930.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['alternativeName', 'birthDate']
Object: ['Edwin E. Aldrin, Jr.', '1930-01-20']

Triple: [['__subject__ Buzz Aldrin __predicate__ awards __object__ 20', '__subject__ Buzz Aldrin __predicate__ almaMater __object__ Massachusetts Institute of Technology, Sc.D. 1963']]
Text: Buzz Aldrin, who graduated from Massachusetts Institute of Technology, Sc.D. in 1963, has received 20 awards.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['awards', 'almaMater']
Object: ['20', 'Massachusetts Institute of Technology, Sc.D. 1963']

Triple: [['__subject__ Buzz Aldrin __predicate__ awards __object__ 20', '__subject__ Buzz Aldrin __predicate__ almaMater __object__ Massachusetts Institute of Technology, Sc.D. 1963']]
Text: Buzz Aldrin, who graduated from Massachusetts Institute of Technology in 1963 with a doctorate in Science, has received 20 awards.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['awards', 'almaMater']
Object: ['20', 'Massachusetts Institute of Technology, Sc.D. 1963']

Triple: [['__subject__ Buzz Aldrin __predicate__ awards __object__ 20', '__subject__ Buzz Aldrin __predicate__ almaMater __object__ Massachusetts Institute of Technology, Sc.D. 1963']]
Text: Buzz Aldrin, who graduated from Massachusetts Institute of Technology with a Sc.D in 1963, has won 20 awards.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['awards', 'almaMater']
Object: ['20', 'Massachusetts Institute of Technology, Sc.D. 1963']

Triple: [['__subject__ Buzz Aldrin __predicate__ awards __object__ 20', '__subject__ Buzz Aldrin __predicate__ almaMater __object__ Massachusetts Institute of Technology, Sc.D. 1963']]
Text: Buzz Aldrin graduated from the Massachusetts Institute of Technology, Sc.D. 1963 and is the recipient of 20 awards.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['awards', 'almaMater']
Object: ['20', 'Massachusetts Institute of Technology, Sc.D. 1963']

Triple: [['__subject__ Buzz Aldrin __predicate__ awards __object__ 20', '__subject__ Buzz Aldrin __predicate__ almaMater __object__ Massachusetts Institute of Technology, Sc.D. 1963']]
Text: Buzz Aldrin graduated from Massachusetts Institute of Technology in 1963. He obtained 20 awards.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['awards', 'almaMater']
Object: ['20', 'Massachusetts Institute of Technology, Sc.D. 1963']

Triple: [['__subject__ Buzz Aldrin __predicate__ dateOfRetirement __object__ 1971-07-01', '__subject__ Buzz Aldrin __predicate__ timeInSpace __object__ 52.0(minutes)']]
Text: Buzz Aldrin, who retired on July 1, 1971, spent 52.0 minutes in space.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['dateOfRetirement', 'timeInSpace']
Object: ['1971-07-01', '52.0(minutes)']

Triple: [['__subject__ Buzz Aldrin __predicate__ dateOfRetirement __object__ 1971-07-01', '__subject__ Buzz Aldrin __predicate__ timeInSpace __object__ 52.0(minutes)']]
Text: Buzz Aldrin spent 52 minutes in outer space before he retired on January 7th, 1971.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['dateOfRetirement', 'timeInSpace']
Object: ['1971-07-01', '52.0(minutes)']

Triple: [['__subject__ Buzz Aldrin __predicate__ dateOfRetirement __object__ 1971-07-01', '__subject__ Buzz Aldrin __predicate__ timeInSpace __object__ 52.0(minutes)']]
Text: Buzz Aldrin, who retired on July 1st 1971, once spent 52 minutes in outer space.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['dateOfRetirement', 'timeInSpace']
Object: ['1971-07-01', '52.0(minutes)']

Triple: [['__subject__ Buzz Aldrin __predicate__ nationality __object__ United States', '__subject__ Buzz Aldrin __predicate__ status __object__ Retired']]
Text: The American Buzz Aldrin is now retired.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['nationality', 'status']
Object: ['United States', 'Retired']

Triple: [['__subject__ Buzz Aldrin __predicate__ nationality __object__ United States', '__subject__ Buzz Aldrin __predicate__ status __object__ Retired']]
Text: Buzz Aldrin, now retired, was born in the United States.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['nationality', 'status']
Object: ['United States', 'Retired']

Triple: [['__subject__ Buzz Aldrin __predicate__ nationality __object__ United States', '__subject__ United States __predicate__ leader __object__ Joe Biden']]
Text: Leader, Joe Biden, and Buzz Aldrin are both American.
Subject: ['Buzz Aldrin', 'United States']
Predicate: ['nationality', 'leader']
Object: ['United States', 'Joe Biden']

Triple: [['__subject__ Buzz Aldrin __predicate__ nationality __object__ United States', '__subject__ United States __predicate__ leader __object__ Joe Biden']]
Text: Buzz Aldrin is a US national led by Joe Biden.
Subject: ['Buzz Aldrin', 'United States']
Predicate: ['nationality', 'leader']
Object: ['United States', 'Joe Biden']

Triple: [['__subject__ Buzz Aldrin __predicate__ nationality __object__ United States', '__subject__ United States __predicate__ leader __object__ Joe Biden']]
Text: Buzz Aldrin is united states citizen whose leader is Joe Biden.
Subject: ['Buzz Aldrin', 'United States']
Predicate: ['nationality', 'leader']
Object: ['United States', 'Joe Biden']

Triple: [['__subject__ Buzz Aldrin __predicate__ ribbonAward __object__ Legion of Merit ribbon.svg', '__subject__ Buzz Aldrin __predicate__ birthName __object__ Edwin Eugene Aldrin Jr.']]
Text: Buzz Aldrin, real name Edwin Eugene Aldrin Jr., was awarded the Legion of Merit ribbon.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['ribbonAward', 'birthName']
Object: ['Legion of Merit ribbon.svg', 'Edwin Eugene Aldrin Jr.']

Triple: [['__subject__ Buzz Aldrin __predicate__ ribbonAward __object__ Legion of Merit ribbon.svg', '__subject__ Buzz Aldrin __predicate__ birthName __object__ Edwin Eugene Aldrin Jr.']]
Text: Buzz Aldrin, born Edwin Eugene Aldrin Jr., was awarded the Legion of Merit ribbon.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['ribbonAward', 'birthName']
Object: ['Legion of Merit ribbon.svg', 'Edwin Eugene Aldrin Jr.']

Triple: [['__subject__ Buzz Aldrin __predicate__ ribbonAward __object__ Legion of Merit ribbon.svg', '__subject__ Buzz Aldrin __predicate__ birthName __object__ Edwin Eugene Aldrin Jr.']]
Text: Buzz Aldrin's real name is Edwin Eugene Aldrin Jr. and he won the Legion of Merit ribbon.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['ribbonAward', 'birthName']
Object: ['Legion of Merit ribbon.svg', 'Edwin Eugene Aldrin Jr.']

Triple: [['__subject__ Buzz Aldrin __predicate__ selectedByNasa __object__ 1963', '__subject__ Buzz Aldrin __predicate__ status __object__ Retired']]
Text: Buzz Aldrin was selected to work for NASA in 1963 and has since retired.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['selectedByNasa', 'status']
Object: ['1963', 'Retired']

Triple: [['__subject__ Buzz Aldrin __predicate__ selectedByNasa __object__ 1963', '__subject__ Buzz Aldrin __predicate__ status __object__ Retired']]
Text: Buzz Aldrin, now retired, was hired by NASA in 1963.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['selectedByNasa', 'status']
Object: ['1963', 'Retired']

Triple: [['__subject__ Buzz Aldrin __predicate__ selectedByNasa __object__ 1963', '__subject__ Buzz Aldrin __predicate__ status __object__ Retired']]
Text: Retiree Buzz Aldrin joined NASA in 1963.
Subject: ['Buzz Aldrin', 'Buzz Aldrin']
Predicate: ['selectedByNasa', 'status']
Object: ['1963', 'Retired']

Triple: [['__subject__ California __predicate__ gemstone __object__ Benitoite', '__subject__ Alan Shepard __predicate__ deathPlace __object__ California']]
Text: Alan Shepard died in California, the common place to find the gem Benitoite.
Subject: ['California', 'Alan Shepard']
Predicate: ['gemstone', 'deathPlace']
Object: ['Benitoite', 'California']

Triple: [['__subject__ California __predicate__ gemstone __object__ Benitoite', '__subject__ Alan Shepard __predicate__ deathPlace __object__ California']]
Text: California is well known for the gemstone benitoite, and as the state where Alan Shepard died.
Subject: ['California', 'Alan Shepard']
Predicate: ['gemstone', 'deathPlace']
Object: ['Benitoite', 'California']

Triple: [['__subject__ California __predicate__ gemstone __object__ Benitoite', '__subject__ Alan Shepard __predicate__ deathPlace __object__ California']]
Text: Alan Shepard died in California, which has as its gemstone, Benitoite.
Subject: ['California', 'Alan Shepard']
Predicate: ['gemstone', 'deathPlace']
Object: ['Benitoite', 'California']

Triple: [['__subject__ Dallas __predicate__ partsType __object__ List of counties in Texas', '__subject__ Elliot See __predicate__ birthPlace __object__ Dallas']]
Text: Elliot See was born in Dallas, Texas.
Subject: ['Dallas', 'Elliot See']
Predicate: ['partsType', 'birthPlace']
Object: ['List of counties in Texas', 'Dallas']

Triple: [['__subject__ Dallas __predicate__ partsType __object__ List of counties in Texas', '__subject__ Elliot See __predicate__ birthPlace __object__ Dallas']]
Text: Elliot See was born in Dallas County, Dallas Texas.
Subject: ['Dallas', 'Elliot See']
Predicate: ['partsType', 'birthPlace']
Object: ['List of counties in Texas', 'Dallas']

Triple: [['__subject__ Distinguished Service Medal (United States Navy) __predicate__ higher __object__ Department of Commerce Gold Medal', '__subject__ Alan Shepard __predicate__ award __object__ Distinguished Service Medal (United States Navy)']]
Text: Alan Shepard's Distinguished Service Medal from the U.S. Navy ranks higher than Department of Commerce Gold Medal.
Subject: ['Distinguished Service Medal (United States Navy)', 'Alan Shepard']
Predicate: ['higher', 'award']
Object: ['Department of Commerce Gold Medal', 'Distinguished Service Medal (United States Navy)']

Triple: [['__subject__ Distinguished Service Medal (United States Navy) __predicate__ higher __object__ Department of Commerce Gold Medal', '__subject__ Alan Shepard __predicate__ award __object__ Distinguished Service Medal (United States Navy)']]
Text: Alan Shepard was the recipient of the Distinguished Service Medal in the United States Navy and this is a medal that is ranked higher than Department of Commerce Gold Medal.
Subject: ['Distinguished Service Medal (United States Navy)', 'Alan Shepard']
Predicate: ['higher', 'award']
Object: ['Department of Commerce Gold Medal', 'Distinguished Service Medal (United States Navy)']

Triple: [['__subject__ Distinguished Service Medal (United States Navy) __predicate__ higher __object__ Department of Commerce Gold Medal', '__subject__ Alan Shepard __predicate__ award __object__ Distinguished Service Medal (United States Navy)']]
Text: Alan Shepard got the Distinguished Service Medal of United States Navy, which has a higher rank than the Department of Commerce Gold Medal.
Subject: ['Distinguished Service Medal (United States Navy)', 'Alan Shepard']
Predicate: ['higher', 'award']
Object: ['Department of Commerce Gold Medal', 'Distinguished Service Medal (United States Navy)']

Triple: [['__subject__ Elliot See __predicate__ almaMater __object__ University of Texas at Austin', '__subject__ Elliot See __predicate__ birthDate __object__ 1927-07-23']]
Text: Elliot See was born on July 23rd, 1927, and was a student at University of Texas at Austin.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['almaMater', 'birthDate']
Object: ['University of Texas at Austin', '1927-07-23']

Triple: [['__subject__ Elliot See __predicate__ almaMater __object__ University of Texas at Austin', '__subject__ Elliot See __predicate__ birthDate __object__ 1927-07-23']]
Text: Elliot See, who was born on July 23, 1927, graduated from the University of Texas at Austin.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['almaMater', 'birthDate']
Object: ['University of Texas at Austin', '1927-07-23']

Triple: [['__subject__ Elliot See __predicate__ almaMater __object__ University of Texas at Austin', '__subject__ Elliot See __predicate__ birthDate __object__ 1927-07-23']]
Text: Elliot See, a student at University of Texas at Austin and was born on 23rd July 1927.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['almaMater', 'birthDate']
Object: ['University of Texas at Austin', '1927-07-23']

Triple: [['__subject__ Elliot See __predicate__ almaMater __object__ University of Texas at Austin', '__subject__ Elliot See __predicate__ birthPlace __object__ Dallas']]
Text: Elliot See was was born in Dallas and was a student at University of Texas at Austin.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['almaMater', 'birthPlace']
Object: ['University of Texas at Austin', 'Dallas']

Triple: [['__subject__ Elliot See __predicate__ almaMater __object__ University of Texas at Austin', '__subject__ Elliot See __predicate__ birthPlace __object__ Dallas']]
Text: Elliot See graduated from the University of Texas at Austin and was also born in Dallas, Texas.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['almaMater', 'birthPlace']
Object: ['University of Texas at Austin', 'Dallas']

Triple: [['__subject__ Elliot See __predicate__ almaMater __object__ University of Texas at Austin', '__subject__ Elliot See __predicate__ birthPlace __object__ Dallas']]
Text: Elliot See was born in Dallas and went on to attend the University of Texas at Austin.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['almaMater', 'birthPlace']
Object: ['University of Texas at Austin', 'Dallas']

Triple: [['__subject__ Elliot See __predicate__ almaMater __object__ University of Texas at Austin', '__subject__ Elliot See __predicate__ birthPlace __object__ Dallas']]
Text: Dallas native Elliot See's alma mater was the University of Texas at Austin.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['almaMater', 'birthPlace']
Object: ['University of Texas at Austin', 'Dallas']

Triple: [['__subject__ Elliot See __predicate__ almaMater __object__ University of Texas at Austin', '__subject__ Elliot See __predicate__ birthPlace __object__ Dallas']]
Text: Elliot See graduated from the University of Texas, Austin. He was born in Dallas.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['almaMater', 'birthPlace']
Object: ['University of Texas at Austin', 'Dallas']

Triple: [['__subject__ Elliot See __predicate__ almaMater __object__ University of Texas at Austin', '__subject__ University of Texas at Austin __predicate__ affiliation __object__ University of Texas System']]
Text: Elliot See graduated from the University of Texas at Austin, affiliated to the university of Texas system.
Subject: ['Elliot See', 'University of Texas at Austin']
Predicate: ['almaMater', 'affiliation']
Object: ['University of Texas at Austin', 'University of Texas System']

Triple: [['__subject__ Elliot See __predicate__ almaMater __object__ University of Texas at Austin', '__subject__ University of Texas at Austin __predicate__ affiliation __object__ University of Texas System']]
Text: Elliot See was a student at the University of Texas at Austin which is part of the University of Texas system.
Subject: ['Elliot See', 'University of Texas at Austin']
Predicate: ['almaMater', 'affiliation']
Object: ['University of Texas at Austin', 'University of Texas System']

Triple: [['__subject__ Elliot See __predicate__ almaMater __object__ University of Texas at Austin', '__subject__ University of Texas at Austin __predicate__ affiliation __object__ University of Texas System']]
Text: Elliot See graduated from the University of Texas at Austin, which is affiliated with the University of Texas System.
Subject: ['Elliot See', 'University of Texas at Austin']
Predicate: ['almaMater', 'affiliation']
Object: ['University of Texas at Austin', 'University of Texas System']

Triple: [['__subject__ Elliot See __predicate__ almaMater __object__ University of Texas at Austin', '__subject__ University of Texas at Austin __predicate__ affiliation __object__ University of Texas System']]
Text: Elliot See's alma mater is the University of Texas at Austin which is affiliated with the University of Texas System.
Subject: ['Elliot See', 'University of Texas at Austin']
Predicate: ['almaMater', 'affiliation']
Object: ['University of Texas at Austin', 'University of Texas System']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ Elliot See __predicate__ deathDate __object__ 1966-02-28']]
Text: Elliot See died on February 28, 1966, in St Louis.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['deathPlace', 'deathDate']
Object: ['St. Louis', '1966-02-28']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ Elliot See __predicate__ deathDate __object__ 1966-02-28']]
Text: Elliot See died in St Louis on February 28,1966.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['deathPlace', 'deathDate']
Object: ['St. Louis', '1966-02-28']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ Elliot See __predicate__ deathDate __object__ 1966-02-28']]
Text: Elliot See died in St Louis on February 28, 1966.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['deathPlace', 'deathDate']
Object: ['St. Louis', '1966-02-28']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ Elliot See __predicate__ deathDate __object__ 1966-02-28']]
Text: Elliot See died in St. Louis on February 28th, 1966.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['deathPlace', 'deathDate']
Object: ['St. Louis', '1966-02-28']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ Elliot See __predicate__ deathDate __object__ 1966-02-28']]
Text: Elliot See died in St. Louis on 1966-02-28.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['deathPlace', 'deathDate']
Object: ['St. Louis', '1966-02-28']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ Elliot See __predicate__ deathDate __object__ 1966-02-28']]
Text: Elliot See died in St Louis on 28/02/1966.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['deathPlace', 'deathDate']
Object: ['St. Louis', '1966-02-28']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ Elliot See __predicate__ deathDate __object__ 1966-02-28']]
Text: Elliot See passed away on 1966-02-28 in St. Louis.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['deathPlace', 'deathDate']
Object: ['St. Louis', '1966-02-28']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ Elliot See __predicate__ selectedByNasa __object__ 1962']]
Text: Elliot See, who worked for NASA beginning in 1962, died in St. Louis.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['deathPlace', 'selectedByNasa']
Object: ['St. Louis', '1962']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ Elliot See __predicate__ selectedByNasa __object__ 1962']]
Text: Elliot See joined NASA in 1962 and died in St Louis.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['deathPlace', 'selectedByNasa']
Object: ['St. Louis', '1962']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ Elliot See __predicate__ selectedByNasa __object__ 1962']]
Text: Elliot See, who was selected by NASA in 1962, died in St. Louis.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['deathPlace', 'selectedByNasa']
Object: ['St. Louis', '1962']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ Elliot See __predicate__ selectedByNasa __object__ 1962']]
Text: Elliot See, who died in St. Louis, was selected by the NASA in 1962.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['deathPlace', 'selectedByNasa']
Object: ['St. Louis', '1962']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ Elliot See __predicate__ selectedByNasa __object__ 1962']]
Text: In 1962 Elliot See, who died later in St. Louis, was selected by NASA.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['deathPlace', 'selectedByNasa']
Object: ['St. Louis', '1962']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ Elliot See __predicate__ selectedByNasa __object__ 1962']]
Text: Elliot see selected by NASA in 1962 died in St. Louis.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['deathPlace', 'selectedByNasa']
Object: ['St. Louis', '1962']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ St. Louis __predicate__ isPartOf __object__ Kingdom of France']]
Text: Elliot See died in St. Louis, the Kingdom of France.
Subject: ['Elliot See', 'St. Louis']
Predicate: ['deathPlace', 'isPartOf']
Object: ['St. Louis', 'Kingdom of France']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ St. Louis __predicate__ isPartOf __object__ Kingdom of France']]
Text: Elliot See died in St Louis situated in the Kingdom of France.
Subject: ['Elliot See', 'St. Louis']
Predicate: ['deathPlace', 'isPartOf']
Object: ['St. Louis', 'Kingdom of France']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ St. Louis __predicate__ isPartOf __object__ Kingdom of France']]
Text: Elliot See died in St. Louis which was once part of the Kingdom of France.
Subject: ['Elliot See', 'St. Louis']
Predicate: ['deathPlace', 'isPartOf']
Object: ['St. Louis', 'Kingdom of France']

Triple: [['__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis', '__subject__ St. Louis __predicate__ isPartOf __object__ Kingdom of France']]
Text: Elliot See died in St. Louis (part of Kingdom of France).
Subject: ['Elliot See', 'St. Louis']
Predicate: ['deathPlace', 'isPartOf']
Object: ['St. Louis', 'Kingdom of France']

Triple: [['__subject__ Elliot See __predicate__ status __object__ Deceased', '__subject__ Elliot See __predicate__ birthPlace __object__ Dallas']]
Text: Elliot See, who is now dead, was born in Dallas.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['status', 'birthPlace']
Object: ['Deceased', 'Dallas']

Triple: [['__subject__ Elliot See __predicate__ status __object__ Deceased', '__subject__ Elliot See __predicate__ birthPlace __object__ Dallas']]
Text: Elliot See, who was born in Dallas, has died.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['status', 'birthPlace']
Object: ['Deceased', 'Dallas']

Triple: [['__subject__ Elliot See __predicate__ status __object__ Deceased', '__subject__ Elliot See __predicate__ birthPlace __object__ Dallas']]
Text: Elliot See (deceased) was born in Dallas.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['status', 'birthPlace']
Object: ['Deceased', 'Dallas']

Triple: [['__subject__ Elliot See __predicate__ status __object__ Deceased', '__subject__ Elliot See __predicate__ birthPlace __object__ Dallas']]
Text: Elliot See, deceased, was born in Dallas.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['status', 'birthPlace']
Object: ['Deceased', 'Dallas']

Triple: [['__subject__ Elliot See __predicate__ status __object__ Deceased', '__subject__ Elliot See __predicate__ birthPlace __object__ Dallas']]
Text: Elliot See, born in Dallas, has already passed away.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['status', 'birthPlace']
Object: ['Deceased', 'Dallas']

Triple: [['__subject__ Elliot See __predicate__ status __object__ Deceased', '__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis']]
Text: Elliot See died in St. Louis.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['status', 'deathPlace']
Object: ['Deceased', 'St. Louis']

Triple: [['__subject__ Elliot See __predicate__ status __object__ Deceased', '__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis']]
Text: Elliot See passed away in St Louis.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['status', 'deathPlace']
Object: ['Deceased', 'St. Louis']

Triple: [['__subject__ Elliot See __predicate__ status __object__ Deceased', '__subject__ Elliot See __predicate__ deathPlace __object__ St. Louis']]
Text: Elliot See is deceased and died in St. Louis.
Subject: ['Elliot See', 'Elliot See']
Predicate: ['status', 'deathPlace']
Object: ['Deceased', 'St. Louis']

Triple: [['__subject__ New Hampshire __predicate__ bird __object__ Purple finch', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Alan Shepard was born in New Hampshire, where the purple finch is a native bird.
Subject: ['New Hampshire', 'Alan Shepard']
Predicate: ['bird', 'birthPlace']
Object: ['Purple finch', 'New Hampshire']

Triple: [['__subject__ New Hampshire __predicate__ bird __object__ Purple finch', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Alan Shepard was born in New Hampshire, a state where one can find the purple finch bird.
Subject: ['New Hampshire', 'Alan Shepard']
Predicate: ['bird', 'birthPlace']
Object: ['Purple finch', 'New Hampshire']

Triple: [['__subject__ New Hampshire __predicate__ bird __object__ Purple finch', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: The purple finch is the bird of New Hampshire, the birthplace of Alan Shepard.
Subject: ['New Hampshire', 'Alan Shepard']
Predicate: ['bird', 'birthPlace']
Object: ['Purple finch', 'New Hampshire']

Triple: [['__subject__ New Hampshire __predicate__ bird __object__ Purple finch', '__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']]
Text: Purple finch is the bird of New Hampshire which is the birthplace of Alan Shepard.
Subject: ['New Hampshire', 'Alan Shepard']
Predicate: ['bird', 'birthPlace']
Object: ['Purple finch', 'New Hampshire']

Triple: [['__subject__ William Anders __predicate__ birthDate __object__ 1933-10-17', '__subject__ William Anders __predicate__ almaMater __object__ AFIT, M.S. 1962']]
Text: William Anders was born on the 17th of October 1933 and graduated from AFIT in 1962 with an M.S.
Subject: ['William Anders', 'William Anders']
Predicate: ['birthDate', 'almaMater']
Object: ['1933-10-17', 'AFIT, M.S. 1962']

Triple: [['__subject__ William Anders __predicate__ birthDate __object__ 1933-10-17', '__subject__ William Anders __predicate__ almaMater __object__ AFIT, M.S. 1962']]
Text: William Anders, who was born on the 17th of October 1933, graduated from AFIT, M.S. in 1962.
Subject: ['William Anders', 'William Anders']
Predicate: ['birthDate', 'almaMater']
Object: ['1933-10-17', 'AFIT, M.S. 1962']

Triple: [['__subject__ William Anders __predicate__ birthDate __object__ 1933-10-17', '__subject__ William Anders __predicate__ almaMater __object__ AFIT, M.S. 1962']]
Text: William Anders was born 1933-10-17 and he received an MS from AFIT in 1962.
Subject: ['William Anders', 'William Anders']
Predicate: ['birthDate', 'almaMater']
Object: ['1933-10-17', 'AFIT, M.S. 1962']

Triple: [['__subject__ William Anders __predicate__ birthDate __object__ 1933-10-17', '__subject__ William Anders __predicate__ almaMater __object__ AFIT, M.S. 1962']]
Text: William Anders (1933-10-17) graduated from AFIT with a master of science in 1962.
Subject: ['William Anders', 'William Anders']
Predicate: ['birthDate', 'almaMater']
Object: ['1933-10-17', 'AFIT, M.S. 1962']

Triple: [['__subject__ William Anders __predicate__ birthDate __object__ 1933-10-17', '__subject__ William Anders __predicate__ almaMater __object__ AFIT, M.S. 1962']]
Text: William Anders was born on October 17th, 1933 and his Alma Mater was AFIT, M.S. which he attended in 1962.
Subject: ['William Anders', 'William Anders']
Predicate: ['birthDate', 'almaMater']
Object: ['1933-10-17', 'AFIT, M.S. 1962']

Triple: [['__subject__ William Anders __predicate__ birthDate __object__ 1933-10-17', '__subject__ William Anders __predicate__ almaMater __object__ AFIT, M.S. 1962']]
Text: William Anders (born on 1933-10-17) graduated from AFIT, M.S. in 1962.
Subject: ['William Anders', 'William Anders']
Predicate: ['birthDate', 'almaMater']
Object: ['1933-10-17', 'AFIT, M.S. 1962']

Triple: [['__subject__ William Anders __predicate__ dateOfRetirement __object__ 1969-09-01', '__subject__ William Anders __predicate__ mission __object__ Apollo 8']]
Text: William Anders, who crewed Apollo 8, retired on September 1st, 1969.
Subject: ['William Anders', 'William Anders']
Predicate: ['dateOfRetirement', 'mission']
Object: ['1969-09-01', 'Apollo 8']

Triple: [['__subject__ William Anders __predicate__ dateOfRetirement __object__ 1969-09-01', '__subject__ William Anders __predicate__ mission __object__ Apollo 8']]
Text: William Anders, who served as a crew member of Apollo 8, retired on September 1st, 1969.
Subject: ['William Anders', 'William Anders']
Predicate: ['dateOfRetirement', 'mission']
Object: ['1969-09-01', 'Apollo 8']

Triple: [['__subject__ William Anders __predicate__ dateOfRetirement __object__ 1969-09-01', '__subject__ William Anders __predicate__ mission __object__ Apollo 8']]
Text: William Anders was once a crew member of Apollo 8 and he retired on September 1st, 1969.
Subject: ['William Anders', 'William Anders']
Predicate: ['dateOfRetirement', 'mission']
Object: ['1969-09-01', 'Apollo 8']

Triple: [['__subject__ William Anders __predicate__ dateOfRetirement __object__ 1969-09-01', '__subject__ William Anders __predicate__ mission __object__ Apollo 8']]
Text: William Anders, crew member of Apollo 8 retired as of 1969-09-01.
Subject: ['William Anders', 'William Anders']
Predicate: ['dateOfRetirement', 'mission']
Object: ['1969-09-01', 'Apollo 8']

Triple: [['__subject__ William Anders __predicate__ dateOfRetirement __object__ 1969-09-01', '__subject__ William Anders __predicate__ mission __object__ Apollo 8']]
Text: William Anders, a crew member of Apollo 8, retired 1969/09/01.
Subject: ['William Anders', 'William Anders']
Predicate: ['dateOfRetirement', 'mission']
Object: ['1969-09-01', 'Apollo 8']

Triple: [['__subject__ William Anders __predicate__ dateOfRetirement __object__ 1969-09-01', '__subject__ William Anders __predicate__ mission __object__ Apollo 8']]
Text: William Anders retired the 1st of August in 1969. He was a crew member of the Apollo 8.
Subject: ['William Anders', 'William Anders']
Predicate: ['dateOfRetirement', 'mission']
Object: ['1969-09-01', 'Apollo 8']

Triple: [['__subject__ William Anders __predicate__ nationality __object__ United States', '__subject__ William Anders __predicate__ birthPlace __object__ British Hong Kong']]
Text: The American William Anders was born in British Hong Kong.
Subject: ['William Anders', 'William Anders']
Predicate: ['nationality', 'birthPlace']
Object: ['United States', 'British Hong Kong']

Triple: [['__subject__ William Anders __predicate__ nationality __object__ United States', '__subject__ William Anders __predicate__ birthPlace __object__ British Hong Kong']]
Text: William Anders, who was from the United States, was actually born in British Hong Kong.
Subject: ['William Anders', 'William Anders']
Predicate: ['nationality', 'birthPlace']
Object: ['United States', 'British Hong Kong']

Triple: [['__subject__ William Anders __predicate__ nationality __object__ United States', '__subject__ William Anders __predicate__ birthPlace __object__ British Hong Kong']]
Text: Although William Anders was from the United States, he was actually born in British Hong Kong.
Subject: ['William Anders', 'William Anders']
Predicate: ['nationality', 'birthPlace']
Object: ['United States', 'British Hong Kong']

Triple: [['__subject__ William Anders __predicate__ nationality __object__ United States', '__subject__ William Anders __predicate__ birthPlace __object__ British Hong Kong']]
Text: William Anders nationality is the United States, but he was born in British Hong Kong.
Subject: ['William Anders', 'William Anders']
Predicate: ['nationality', 'birthPlace']
Object: ['United States', 'British Hong Kong']

Triple: [['__subject__ William Anders __predicate__ nationality __object__ United States', '__subject__ William Anders __predicate__ birthPlace __object__ British Hong Kong']]
Text: William Anders was born in British Hong Kong but has a United States nationality.
Subject: ['William Anders', 'William Anders']
Predicate: ['nationality', 'birthPlace']
Object: ['United States', 'British Hong Kong']

Triple: [['__subject__ William Anders __predicate__ nationality __object__ United States', '__subject__ William Anders __predicate__ birthPlace __object__ British Hong Kong']]
Text: William Anders from the United States was born in British Hong Kong.
Subject: ['William Anders', 'William Anders']
Predicate: ['nationality', 'birthPlace']
Object: ['United States', 'British Hong Kong']

Triple: [['__subject__ William Anders __predicate__ nationality __object__ United States', '__subject__ William Anders __predicate__ birthPlace __object__ British Hong Kong']]
Text: William Anders was born in British Hong Kong and is a citizen of the United States.
Subject: ['William Anders', 'William Anders']
Predicate: ['nationality', 'birthPlace']
Object: ['United States', 'British Hong Kong']

Triple: [['__subject__ William Anders __predicate__ occupation __object__ Fighter pilot', '__subject__ William Anders __predicate__ birthPlace __object__ British Hong Kong']]
Text: William Anders was born in British Hong Kong and later in life became a fighter pilot.
Subject: ['William Anders', 'William Anders']
Predicate: ['occupation', 'birthPlace']
Object: ['Fighter pilot', 'British Hong Kong']

Triple: [['__subject__ William Anders __predicate__ occupation __object__ Fighter pilot', '__subject__ William Anders __predicate__ birthPlace __object__ British Hong Kong']]
Text: William Anders was a fighter pilot who was born in British, Hong Kong.
Subject: ['William Anders', 'William Anders']
Predicate: ['occupation', 'birthPlace']
Object: ['Fighter pilot', 'British Hong Kong']

Triple: [['__subject__ William Anders __predicate__ occupation __object__ Fighter pilot', '__subject__ William Anders __predicate__ birthPlace __object__ British Hong Kong']]
Text: William Anders (born in British Hong Kong) served as a Fighter pilot.
Subject: ['William Anders', 'William Anders']
Predicate: ['occupation', 'birthPlace']
Object: ['Fighter pilot', 'British Hong Kong']

Triple: [['__subject__ William Anders __predicate__ occupation __object__ Fighter pilot', '__subject__ William Anders __predicate__ birthPlace __object__ British Hong Kong']]
Text: William Anders who was born in British Hong Kong served as a fighter pilot.
Subject: ['William Anders', 'William Anders']
Predicate: ['occupation', 'birthPlace']
Object: ['Fighter pilot', 'British Hong Kong']

Triple: [['__subject__ William Anders __predicate__ occupation __object__ Fighter pilot', '__subject__ William Anders __predicate__ birthPlace __object__ British Hong Kong']]
Text: William Anders, born in British Hong Kong, was a fighter pilot.
Subject: ['William Anders', 'William Anders']
Predicate: ['occupation', 'birthPlace']
Object: ['Fighter pilot', 'British Hong Kong']

Triple: [['__subject__ William Anders __predicate__ occupation __object__ Fighter pilot', '__subject__ William Anders __predicate__ mission __object__ Apollo 8']]
Text: William Anders is a fighter pilot and member of Apollo 8's crew.
Subject: ['William Anders', 'William Anders']
Predicate: ['occupation', 'mission']
Object: ['Fighter pilot', 'Apollo 8']

Triple: [['__subject__ William Anders __predicate__ occupation __object__ Fighter pilot', '__subject__ William Anders __predicate__ mission __object__ Apollo 8']]
Text: William Anders was part of the Apollo 8 crew and was once a fighter pilot.
Subject: ['William Anders', 'William Anders']
Predicate: ['occupation', 'mission']
Object: ['Fighter pilot', 'Apollo 8']

Triple: [['__subject__ William Anders __predicate__ occupation __object__ Fighter pilot', '__subject__ William Anders __predicate__ mission __object__ Apollo 8']]
Text: William Anders was a fighter pilot and a crew member of Apollo 8.
Subject: ['William Anders', 'William Anders']
Predicate: ['occupation', 'mission']
Object: ['Fighter pilot', 'Apollo 8']

Triple: [['__subject__ William Anders __predicate__ servedAsChiefOfTheAstronautOfficeIn __object__ 1976', '__subject__ William Anders __predicate__ title __object__ United States Ambassador to Norway']]
Text: William Anders served as Chief of the Astronaut Office in 1976 and had a title as the United States Ambassador to Norway.
Subject: ['William Anders', 'William Anders']
Predicate: ['servedAsChiefOfTheAstronautOfficeIn', 'title']
Object: ['1976', 'United States Ambassador to Norway']

Triple: [['__subject__ William Anders __predicate__ servedAsChiefOfTheAstronautOfficeIn __object__ 1976', '__subject__ William Anders __predicate__ title __object__ United States Ambassador to Norway']]
Text: William Anders time as Chief of the Astronaut Office in 1976 has prepared him well for his new position as United States Ambassador to Norway.
Subject: ['William Anders', 'William Anders']
Predicate: ['servedAsChiefOfTheAstronautOfficeIn', 'title']
Object: ['1976', 'United States Ambassador to Norway']

Triple: [['__subject__ William Anders __predicate__ servedAsChiefOfTheAstronautOfficeIn __object__ 1976', '__subject__ William Anders __predicate__ title __object__ United States Ambassador to Norway']]
Text: The United States Ambassador to Norway, William Anders, served as Chief of the Astronaut Office in 1976.
Subject: ['William Anders', 'William Anders']
Predicate: ['servedAsChiefOfTheAstronautOfficeIn', 'title']
Object: ['1976', 'United States Ambassador to Norway']

Triple: [['__subject__ William Anders __predicate__ mission __object__ Apollo 8', '__subject__ Apollo 8 __predicate__ crewMembers __object__ Frank Borman']]
Text: Both William Anders and Frank Borman were crew members aboard Apollo 8.
Subject: ['William Anders', 'Apollo 8']
Predicate: ['mission', 'crewMembers']
Object: ['Apollo 8', 'Frank Borman']

Triple: [['__subject__ William Anders __predicate__ mission __object__ Apollo 8', '__subject__ Apollo 8 __predicate__ crewMembers __object__ Frank Borman']]
Text: Both William Anders and Frank Borman served as crew members on Apollo 8.
Subject: ['William Anders', 'Apollo 8']
Predicate: ['mission', 'crewMembers']
Object: ['Apollo 8', 'Frank Borman']

Triple: [['__subject__ William Anders __predicate__ mission __object__ Apollo 8', '__subject__ Apollo 8 __predicate__ crewMembers __object__ Frank Borman']]
Text: Among the crew of Apollo 8 were William Anders and Frank Borman.
Subject: ['William Anders', 'Apollo 8']
Predicate: ['mission', 'crewMembers']
Object: ['Apollo 8', 'Frank Borman']

Triple: [['__subject__ William Anders __predicate__ mission __object__ Apollo 8', '__subject__ Apollo 8 __predicate__ crewMembers __object__ Frank Borman']]
Text: Among the crew members of Apollo 8 were William Anders and Frank Borman.
Subject: ['William Anders', 'Apollo 8']
Predicate: ['mission', 'crewMembers']
Object: ['Apollo 8', 'Frank Borman']

Triple: [['__subject__ William Anders __predicate__ mission __object__ Apollo 8', '__subject__ Apollo 8 __predicate__ crewMembers __object__ Frank Borman']]
Text: William Anders and Frank Borman were Apollo 8 were crew members.
Subject: ['William Anders', 'Apollo 8']
Predicate: ['mission', 'crewMembers']
Object: ['Apollo 8', 'Frank Borman']

Triple: [['__subject__ William Anders __predicate__ selectedByNasa __object__ 1963', '__subject__ William Anders __predicate__ birthDate __object__ 1933-10-17']]
Text: Born on 17 October, 1933, William Anders joined NASA in 1963.
Subject: ['William Anders', 'William Anders']
Predicate: ['selectedByNasa', 'birthDate']
Object: ['1963', '1933-10-17']

Triple: [['__subject__ William Anders __predicate__ selectedByNasa __object__ 1963', '__subject__ William Anders __predicate__ birthDate __object__ 1933-10-17']]
Text: Born on October 17, 1933, William Anders was selected by NASA in 1963.
Subject: ['William Anders', 'William Anders']
Predicate: ['selectedByNasa', 'birthDate']
Object: ['1963', '1933-10-17']

Triple: [['__subject__ William Anders __predicate__ selectedByNasa __object__ 1963', '__subject__ William Anders __predicate__ birthDate __object__ 1933-10-17']]
Text: William Anders was born on October 17th, 1933 and joined NASA in 1963.
Subject: ['William Anders', 'William Anders']
Predicate: ['selectedByNasa', 'birthDate']
Object: ['1963', '1933-10-17']

Triple: [['__subject__ A.C. Milan __predicate__ league __object__ Serie A', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.C. Milan']]
Text: Alessio Romagnoli plays in Serie A for AC Milan.
Subject: ['A.C. Milan', 'Alessio Romagnoli']
Predicate: ['league', 'club']
Object: ['Serie A', 'A.C. Milan']

Triple: [['__subject__ A.C. Milan __predicate__ league __object__ Serie A', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.C. Milan']]
Text: Alessio Romagnoli plays for the club A.C. Milan which is in the Serie A league.
Subject: ['A.C. Milan', 'Alessio Romagnoli']
Predicate: ['league', 'club']
Object: ['Serie A', 'A.C. Milan']

Triple: [['__subject__ A.C. Milan __predicate__ league __object__ Serie A', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.C. Milan']]
Text: Alessio Romagnoli is a member of the A.C. Milan club which plays in the Serie A league.
Subject: ['A.C. Milan', 'Alessio Romagnoli']
Predicate: ['league', 'club']
Object: ['Serie A', 'A.C. Milan']

Triple: [['__subject__ A.S. Roma __predicate__ league __object__ Serie A', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma']]
Text: Alessio Romagnoli is a member of A.S. Roma who play in the Serie A league.
Subject: ['A.S. Roma', 'Alessio Romagnoli']
Predicate: ['league', 'club']
Object: ['Serie A', 'A.S. Roma']

Triple: [['__subject__ A.S. Roma __predicate__ league __object__ Serie A', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma']]
Text: Alessio Romagnoli plays for A.S. Roma, which is playing in the Serie A.
Subject: ['A.S. Roma', 'Alessio Romagnoli']
Predicate: ['league', 'club']
Object: ['Serie A', 'A.S. Roma']

Triple: [['__subject__ A.S. Roma __predicate__ league __object__ Serie A', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma']]
Text: Alessio Romagnoli is part of the A.S. Roma Serie A team.
Subject: ['A.S. Roma', 'Alessio Romagnoli']
Predicate: ['league', 'club']
Object: ['Serie A', 'A.S. Roma']

Triple: [['__subject__ A.S. Roma __predicate__ position __object__ Serie A', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma']]
Text: Alessio Romagnoli plays for AS Roma in Serie A.
Subject: ['A.S. Roma', 'Alessio Romagnoli']
Predicate: ['position', 'club']
Object: ['Serie A', 'A.S. Roma']

Triple: [['__subject__ A.S. Roma __predicate__ position __object__ Serie A', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma']]
Text: Alessio Romagnoli plays for AS Roma in the Serie A.
Subject: ['A.S. Roma', 'Alessio Romagnoli']
Predicate: ['position', 'club']
Object: ['Serie A', 'A.S. Roma']

Triple: [['__subject__ A.S. Roma __predicate__ position __object__ Serie A', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma']]
Text: Alessio Romagnoli plays for A.S. Roma in Serie A.
Subject: ['A.S. Roma', 'Alessio Romagnoli']
Predicate: ['position', 'club']
Object: ['Serie A', 'A.S. Roma']

Triple: [['__subject__ AZ Alkmaar __predicate__ ground __object__ AFAS Stadion', '__subject__ Adam Maher __predicate__ club __object__ AZ Alkmaar']]
Text: Adam Maher's club is AZ Alkmaar whose ground is AFAS Stadion.
Subject: ['AZ Alkmaar', 'Adam Maher']
Predicate: ['ground', 'club']
Object: ['AFAS Stadion', 'AZ Alkmaar']

Triple: [['__subject__ AZ Alkmaar __predicate__ ground __object__ AFAS Stadion', '__subject__ Adam Maher __predicate__ club __object__ AZ Alkmaar']]
Text: Adam Maher is connected to the AZ Alkmaar club whose ground is AFAS Stadion.
Subject: ['AZ Alkmaar', 'Adam Maher']
Predicate: ['ground', 'club']
Object: ['AFAS Stadion', 'AZ Alkmaar']

Triple: [['__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada', '__subject__ Canada __predicate__ language __object__ Inuktitut']]
Text: Inuktitut is a spoken language in Canada, the birthplace of Aaron Boogaard.
Subject: ['Aaron Boogaard', 'Canada']
Predicate: ['birthPlace', 'language']
Object: ['Canada', 'Inuktitut']

Triple: [['__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada', '__subject__ Canada __predicate__ language __object__ Inuktitut']]
Text: Inuktitut is a language spoken in Canada where Aaron Boogaard was born.
Subject: ['Aaron Boogaard', 'Canada']
Predicate: ['birthPlace', 'language']
Object: ['Canada', 'Inuktitut']

Triple: [['__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada', '__subject__ Canada __predicate__ language __object__ Inuktitut']]
Text: Aaron Boogaard's birthplace was Canada, where one of the languages spoken is Inuktitut.
Subject: ['Aaron Boogaard', 'Canada']
Predicate: ['birthPlace', 'language']
Object: ['Canada', 'Inuktitut']

Triple: [['__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Regina, Saskatchewan', '__subject__ Aaron Boogaard __predicate__ club __object__ Wichita Thunder']]
Text: Aaron Boogaard's birthplace is Regina, Saskatchewan and he plays for Wichita Thunder.
Subject: ['Aaron Boogaard', 'Aaron Boogaard']
Predicate: ['birthPlace', 'club']
Object: ['Regina, Saskatchewan', 'Wichita Thunder']

Triple: [['__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Regina, Saskatchewan', '__subject__ Aaron Boogaard __predicate__ club __object__ Wichita Thunder']]
Text: Aaron Boogaard plays for the Wichita Thunder and was born in Regina, Saskatchewan.
Subject: ['Aaron Boogaard', 'Aaron Boogaard']
Predicate: ['birthPlace', 'club']
Object: ['Regina, Saskatchewan', 'Wichita Thunder']

Triple: [['__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Regina, Saskatchewan', '__subject__ Aaron Boogaard __predicate__ club __object__ Wichita Thunder']]
Text: Aaron Boogaard was born in Regina, Saskatchewan and his club is Wichita Thunder.
Subject: ['Aaron Boogaard', 'Aaron Boogaard']
Predicate: ['birthPlace', 'club']
Object: ['Regina, Saskatchewan', 'Wichita Thunder']

Triple: [['__subject__ Aaron Boogaard __predicate__ birthYear __object__ 1986', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Aaron Boogaard was born in 1986 in Canada.
Subject: ['Aaron Boogaard', 'Aaron Boogaard']
Predicate: ['birthYear', 'birthPlace']
Object: ['1986', 'Canada']

Triple: [['__subject__ Aaron Boogaard __predicate__ birthYear __object__ 1986', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Aaron Boogaard was born in Canada in 1986.
Subject: ['Aaron Boogaard', 'Aaron Boogaard']
Predicate: ['birthYear', 'birthPlace']
Object: ['1986', 'Canada']

Triple: [['__subject__ Aaron Boogaard __predicate__ birthYear __object__ 1986', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Regina, Saskatchewan']]
Text: Aaron Boogaard was born in 1986 in Regina, Saskatchewan.
Subject: ['Aaron Boogaard', 'Aaron Boogaard']
Predicate: ['birthYear', 'birthPlace']
Object: ['1986', 'Regina, Saskatchewan']

Triple: [['__subject__ Aaron Boogaard __predicate__ birthYear __object__ 1986', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Regina, Saskatchewan']]
Text: Aaron Boogaard was born in Regina, Saskatchewan in 1986.
Subject: ['Aaron Boogaard', 'Aaron Boogaard']
Predicate: ['birthYear', 'birthPlace']
Object: ['1986', 'Regina, Saskatchewan']

Triple: [['__subject__ Aaron Boogaard __predicate__ birthYear __object__ 1986', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Saskatchewan']]
Text: Aaron Boogaard was born in Saskatchewan in 1986.
Subject: ['Aaron Boogaard', 'Aaron Boogaard']
Predicate: ['birthYear', 'birthPlace']
Object: ['1986', 'Saskatchewan']

Triple: [['__subject__ Aaron Boogaard __predicate__ birthYear __object__ 1986', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Saskatchewan']]
Text: AAron Boogaard was in Saskatchewan in 1986.
Subject: ['Aaron Boogaard', 'Aaron Boogaard']
Predicate: ['birthYear', 'birthPlace']
Object: ['1986', 'Saskatchewan']

Triple: [['__subject__ Aaron Boogaard __predicate__ club __object__ Wichita Thunder', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Aaron Boogaard was born in Canada and plays for Wichita Thunder.
Subject: ['Aaron Boogaard', 'Aaron Boogaard']
Predicate: ['club', 'birthPlace']
Object: ['Wichita Thunder', 'Canada']

Triple: [['__subject__ Aaron Boogaard __predicate__ club __object__ Wichita Thunder', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Aaron Boogaard was born in Canada and his club is Wichita Thunder.
Subject: ['Aaron Boogaard', 'Aaron Boogaard']
Predicate: ['club', 'birthPlace']
Object: ['Wichita Thunder', 'Canada']

Triple: [['__subject__ Aaron Boogaard __predicate__ club __object__ Wichita Thunder', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Aaron Boogaard was born in Canada and his club is the Wichita Thunders.
Subject: ['Aaron Boogaard', 'Aaron Boogaard']
Predicate: ['club', 'birthPlace']
Object: ['Wichita Thunder', 'Canada']

Triple: [['__subject__ Aaron Boogaard __predicate__ draftTeam __object__ Minnesota Wild', '__subject__ Minnesota Wild __predicate__ generalManager __object__ Chuck Fletcher']]
Text: Aaron Boogaard's draft team is Minnesota Wild where Chuck Fletcher is the general manager.
Subject: ['Aaron Boogaard', 'Minnesota Wild']
Predicate: ['draftTeam', 'generalManager']
Object: ['Minnesota Wild', 'Chuck Fletcher']

Triple: [['__subject__ Aaron Boogaard __predicate__ draftTeam __object__ Minnesota Wild', '__subject__ Minnesota Wild __predicate__ generalManager __object__ Chuck Fletcher']]
Text: Aaron Boogaard's draft team is Minnesota Wild where the general manager is Chuck Fletcher.
Subject: ['Aaron Boogaard', 'Minnesota Wild']
Predicate: ['draftTeam', 'generalManager']
Object: ['Minnesota Wild', 'Chuck Fletcher']

Triple: [['__subject__ Aaron Boogaard __predicate__ draftTeam __object__ Minnesota Wild', '__subject__ Minnesota Wild __predicate__ generalManager __object__ Chuck Fletcher']]
Text: Aaron Boogaard's draft team is Minnesota Wild, whose manager is Chuck Fletcher.
Subject: ['Aaron Boogaard', 'Minnesota Wild']
Predicate: ['draftTeam', 'generalManager']
Object: ['Minnesota Wild', 'Chuck Fletcher']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ Hamburger SV', '__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen']]
Text: Aaron Hunt, former player for Hamburger SV, now plays for SV Werder Bremen.
Subject: ['Aaron Hunt', 'Aaron Hunt']
Predicate: ['club', 'club']
Object: ['Hamburger SV', 'SV Werder Bremen']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ Hamburger SV', '__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen']]
Text: Aaron Hunt played for the club SV Werder Bremen and now plays for Hamburger SV.
Subject: ['Aaron Hunt', 'Aaron Hunt']
Predicate: ['club', 'club']
Object: ['Hamburger SV', 'SV Werder Bremen']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ Hamburger SV', '__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen']]
Text: Aaron Hunt has played for Hamburger SV and SV Werder Bremen.
Subject: ['Aaron Hunt', 'Aaron Hunt']
Predicate: ['club', 'club']
Object: ['Hamburger SV', 'SV Werder Bremen']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ Hamburger SV', '__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen II']]
Text: Aaron Hunt, former player for SV Werder Bremen II, now plays for Hamburger SV.
Subject: ['Aaron Hunt', 'Aaron Hunt']
Predicate: ['club', 'club']
Object: ['Hamburger SV', 'SV Werder Bremen II']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ Hamburger SV', '__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen II']]
Text: Aaron Hunt plays for the clubs Hamburger SV and SV Werder Bremen II.
Subject: ['Aaron Hunt', 'Aaron Hunt']
Predicate: ['club', 'club']
Object: ['Hamburger SV', 'SV Werder Bremen II']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ Hamburger SV', '__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen II']]
Text: Aaron Hunt plays for SV Werder Bremen II and used to play for Hamburger SV.
Subject: ['Aaron Hunt', 'Aaron Hunt']
Predicate: ['club', 'club']
Object: ['Hamburger SV', 'SV Werder Bremen II']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen', '__subject__ SV Werder Bremen __predicate__ manager __object__ Viktor Skrypnyk']]
Text: Aaron Hunt played for the club SV Werder Bremen which is managed by Viktor Skrypnyk.
Subject: ['Aaron Hunt', 'SV Werder Bremen']
Predicate: ['club', 'manager']
Object: ['SV Werder Bremen', 'Viktor Skrypnyk']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen', '__subject__ SV Werder Bremen __predicate__ manager __object__ Viktor Skrypnyk']]
Text: Aaron Hunt plays for SV Werder Bremen which is managed by Viktor Skrypnyk.
Subject: ['Aaron Hunt', 'SV Werder Bremen']
Predicate: ['club', 'manager']
Object: ['SV Werder Bremen', 'Viktor Skrypnyk']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen', '__subject__ SV Werder Bremen __predicate__ manager __object__ Viktor Skrypnyk']]
Text: Aaron Hunt played for SV Werder Bremen which is managed by Viktor Skrypnyk.
Subject: ['Aaron Hunt', 'SV Werder Bremen']
Predicate: ['club', 'manager']
Object: ['SV Werder Bremen', 'Viktor Skrypnyk']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen II', '__subject__ SV Werder Bremen II __predicate__ manager __object__ Alexander Nouri']]
Text: Aaron Hunt plays for the club SV Werder Bremen II managed by Alexander Nouri.
Subject: ['Aaron Hunt', 'SV Werder Bremen II']
Predicate: ['club', 'manager']
Object: ['SV Werder Bremen II', 'Alexander Nouri']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen II', '__subject__ SV Werder Bremen II __predicate__ manager __object__ Alexander Nouri']]
Text: Aaron Hunter played for SV Werder Bremen II which is managed by Alexander Nouri.
Subject: ['Aaron Hunt', 'SV Werder Bremen II']
Predicate: ['club', 'manager']
Object: ['SV Werder Bremen II', 'Alexander Nouri']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen II', '__subject__ SV Werder Bremen II __predicate__ manager __object__ Alexander Nouri']]
Text: Aaron Hunt plays for SV Werder Bremen II managed by Alexander Nouri.
Subject: ['Aaron Hunt', 'SV Werder Bremen II']
Predicate: ['club', 'manager']
Object: ['SV Werder Bremen II', 'Alexander Nouri']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ VfL Wolfsburg', '__subject__ Aaron Hunt __predicate__ club __object__ Hamburger SV']]
Text: Aaron Hunt plays for Vfl Wolfsburg and Hamburger SV.
Subject: ['Aaron Hunt', 'Aaron Hunt']
Predicate: ['club', 'club']
Object: ['VfL Wolfsburg', 'Hamburger SV']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ VfL Wolfsburg', '__subject__ Aaron Hunt __predicate__ club __object__ Hamburger SV']]
Text: Aaron Hunt's previous clubs include VfL Wolfsburg and Hamburger SV.
Subject: ['Aaron Hunt', 'Aaron Hunt']
Predicate: ['club', 'club']
Object: ['VfL Wolfsburg', 'Hamburger SV']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ VfL Wolfsburg', '__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen']]
Text: Aaron Hunt played for SV Werder Bremen and his club is now VfL Wolfsburg.
Subject: ['Aaron Hunt', 'Aaron Hunt']
Predicate: ['club', 'club']
Object: ['VfL Wolfsburg', 'SV Werder Bremen']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ VfL Wolfsburg', '__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen']]
Text: Aaron Hunt played for SV Werder Bremen and now plays for Vfl Wolfsburg.
Subject: ['Aaron Hunt', 'Aaron Hunt']
Predicate: ['club', 'club']
Object: ['VfL Wolfsburg', 'SV Werder Bremen']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ VfL Wolfsburg', '__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen']]
Text: Aaron Hunt's former clubs include VfL Wolfsburg and SV Werder Bremen.
Subject: ['Aaron Hunt', 'Aaron Hunt']
Predicate: ['club', 'club']
Object: ['VfL Wolfsburg', 'SV Werder Bremen']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ VfL Wolfsburg', '__subject__ VfL Wolfsburg __predicate__ manager __object__ Dieter Hecking']]
Text: Aaron Hunt plays for Vfl Wolfsburg which is managed by Dieter Hecking .
Subject: ['Aaron Hunt', 'VfL Wolfsburg']
Predicate: ['club', 'manager']
Object: ['VfL Wolfsburg', 'Dieter Hecking']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ VfL Wolfsburg', '__subject__ VfL Wolfsburg __predicate__ manager __object__ Dieter Hecking']]
Text: Aaron Hunt plays football for Vfl Wolfsburg where Dieter Hecking is the manager.
Subject: ['Aaron Hunt', 'VfL Wolfsburg']
Predicate: ['club', 'manager']
Object: ['VfL Wolfsburg', 'Dieter Hecking']

Triple: [['__subject__ Aaron Hunt __predicate__ club __object__ VfL Wolfsburg', '__subject__ VfL Wolfsburg __predicate__ manager __object__ Dieter Hecking']]
Text: Aaron Hunt plays football for Vfl Wolfsburg who are managed by Dieter Hecking.
Subject: ['Aaron Hunt', 'VfL Wolfsburg']
Predicate: ['club', 'manager']
Object: ['VfL Wolfsburg', 'Dieter Hecking']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Central Español', '__subject__ Abel Hernández __predicate__ club __object__ U.S. Città di Palermo']]
Text: Abel Hernandez played for the Central Espanol club and now plays for US Citta di Palermo.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Central Español', 'U.S. Città di Palermo']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Central Español', '__subject__ Abel Hernández __predicate__ club __object__ U.S. Città di Palermo']]
Text: Abel Hernandez played for Central Espanol and now plays for US Citta di Palermo.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Central Español', 'U.S. Città di Palermo']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Central Español', '__subject__ Abel Hernández __predicate__ club __object__ U.S. Città di Palermo']]
Text: Abel Hernandez's club is US Citta di Palermo and he has also played for Central Espanol.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Central Español', 'U.S. Città di Palermo']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Central Español', '__subject__ Abel Hernández __predicate__ club __object__ Uruguay national football team']]
Text: Abel Hernandez, a member of the Central Espanol club, plays for the Uruguay national football team.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Central Español', 'Uruguay national football team']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Central Español', '__subject__ Abel Hernández __predicate__ club __object__ Uruguay national football team']]
Text: Abel Hernandez previously played for the Central Espanol club and now plays for the Uruguay national football team.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Central Español', 'Uruguay national football team']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Central Español', '__subject__ Abel Hernández __predicate__ club __object__ Uruguay national football team']]
Text: Abel Hernandez, whose club is the Uruguay National football team, used to play for the Central Espanol club.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Central Español', 'Uruguay national football team']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Hull City A.F.C.', '__subject__ Abel Hernández __predicate__ club __object__ Central Español']]
Text: Abel Hernandez has played for both Central Espanol and HUll City AFC.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Hull City A.F.C.', 'Central Español']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Hull City A.F.C.', '__subject__ Abel Hernández __predicate__ club __object__ Central Español']]
Text: Abel Hernandez played for the Central Espanol club and currently for Hull City AFC.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Hull City A.F.C.', 'Central Español']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Hull City A.F.C.', '__subject__ Abel Hernández __predicate__ club __object__ Uruguay national football team']]
Text: Hull City AFC player Abel Hernandez has represented the Uruguay national football team.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Hull City A.F.C.', 'Uruguay national football team']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Hull City A.F.C.', '__subject__ Abel Hernández __predicate__ club __object__ Uruguay national football team']]
Text: Abel Hernandez plays for Hull City AFC and the Uruguay National football team.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Hull City A.F.C.', 'Uruguay national football team']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Hull City A.F.C.', '__subject__ Abel Hernández __predicate__ club __object__ Uruguay national football team']]
Text: Abel Hernandez plays for Hull City A.F.C. and for the Uruguay national football team.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Hull City A.F.C.', 'Uruguay national football team']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Uruguay national football team', '__subject__ Abel Hernández __predicate__ club __object__ Peñarol']]
Text: Abel Hernandez plays for the Uruguay national football team and Penarol.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Uruguay national football team', 'Peñarol']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Uruguay national football team', '__subject__ Abel Hernández __predicate__ club __object__ Peñarol']]
Text: Abel Hernandez's club is the Uruguay National football team and he also played for Penarol.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Uruguay national football team', 'Peñarol']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Uruguay national football team', '__subject__ Abel Hernández __predicate__ club __object__ Peñarol']]
Text: Abel Hernandez, whose club is Penarol, plays for the Uruguay national football team.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Uruguay national football team', 'Peñarol']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Uruguay national football team', '__subject__ Abel Hernández __predicate__ club __object__ U.S. Città di Palermo']]
Text: Abel Hernandez plays for U.S. Citta di Palermo and the Uruguay national football team.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Uruguay national football team', 'U.S. Città di Palermo']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Uruguay national football team', '__subject__ Abel Hernández __predicate__ club __object__ U.S. Città di Palermo']]
Text: Abel Hernández plays for U.S. Città di Palermo club and the Uruguay National football team.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Uruguay national football team', 'U.S. Città di Palermo']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Uruguay national football team', '__subject__ Abel Hernández __predicate__ club __object__ U.S. Città di Palermo']]
Text: Abel Hernandez's club is the Uruguay National football team and he also plays for US Citta di Palermo.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Uruguay national football team', 'U.S. Città di Palermo']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Uruguay national under-20 football team', '__subject__ Abel Hernández __predicate__ club __object__ U.S. Città di Palermo']]
Text: Abel Hernandez 's club is the Uruguay national under 20 football team and also US Citta di Palermo.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Uruguay national under-20 football team', 'U.S. Città di Palermo']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Uruguay national under-20 football team', '__subject__ Abel Hernández __predicate__ club __object__ U.S. Città di Palermo']]
Text: Abel Hernandez's club is the Uruguay national under 20 football team and he plays for the club, U.S. Città di Palermo.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Uruguay national under-20 football team', 'U.S. Città di Palermo']

Triple: [['__subject__ Abel Hernández __predicate__ club __object__ Uruguay national under-20 football team', '__subject__ Abel Hernández __predicate__ club __object__ U.S. Città di Palermo']]
Text: Abel Hernandez plays for US Citta di Palermo and the Uruguay under 20 team.
Subject: ['Abel Hernández', 'Abel Hernández']
Predicate: ['club', 'club']
Object: ['Uruguay national under-20 football team', 'U.S. Città di Palermo']

Triple: [['__subject__ Abner (footballer) __predicate__ club __object__ Brazil national under-17 football team', '__subject__ Abner (footballer) __predicate__ club __object__ Coritiba Foot Ball Club']]
Text: Abner plays for Coritiba Football Club and has represented Brazil at Under 17 level.
Subject: ['Abner (footballer)', 'Abner (footballer)']
Predicate: ['club', 'club']
Object: ['Brazil national under-17 football team', 'Coritiba Foot Ball Club']

Triple: [['__subject__ Abner (footballer) __predicate__ club __object__ Brazil national under-17 football team', '__subject__ Abner (footballer) __predicate__ club __object__ Coritiba Foot Ball Club']]
Text: Abner, who plays for the Coritiba Football club, has represented Brazil at under 17 level.
Subject: ['Abner (footballer)', 'Abner (footballer)']
Predicate: ['club', 'club']
Object: ['Brazil national under-17 football team', 'Coritiba Foot Ball Club']

Triple: [['__subject__ Abner (footballer) __predicate__ club __object__ Brazil national under-17 football team', '__subject__ Abner (footballer) __predicate__ club __object__ Coritiba Foot Ball Club']]
Text: The footballer Abner plays for Coritiba Football Club and the Brazil national under-17 football team.
Subject: ['Abner (footballer)', 'Abner (footballer)']
Predicate: ['club', 'club']
Object: ['Brazil national under-17 football team', 'Coritiba Foot Ball Club']

Triple: [['__subject__ Abner (footballer) __predicate__ club __object__ Brazil national under-20 football team', '__subject__ Abner (footballer) __predicate__ club __object__ Coritiba Foot Ball Club']]
Text: Abner plays for Coritiba Football Club and has played for the Brazil under 20 team.
Subject: ['Abner (footballer)', 'Abner (footballer)']
Predicate: ['club', 'club']
Object: ['Brazil national under-20 football team', 'Coritiba Foot Ball Club']

Triple: [['__subject__ Abner (footballer) __predicate__ club __object__ Brazil national under-20 football team', '__subject__ Abner (footballer) __predicate__ club __object__ Coritiba Foot Ball Club']]
Text: The footballer Abner plays for the Brazilian national under 20 football team and the Coritiba Football club.
Subject: ['Abner (footballer)', 'Abner (footballer)']
Predicate: ['club', 'club']
Object: ['Brazil national under-20 football team', 'Coritiba Foot Ball Club']

Triple: [['__subject__ Abner (footballer) __predicate__ club __object__ Coritiba Foot Ball Club', '__subject__ Abner (footballer) __predicate__ club __object__ C.D. FAS']]
Text: Abners plays for the CD FAS Club and Coritiba Football Club.
Subject: ['Abner (footballer)', 'Abner (footballer)']
Predicate: ['club', 'club']
Object: ['Coritiba Foot Ball Club', 'C.D. FAS']

Triple: [['__subject__ Abner (footballer) __predicate__ club __object__ Coritiba Foot Ball Club', '__subject__ Abner (footballer) __predicate__ club __object__ C.D. FAS']]
Text: Abner has played for C.D. FAS. and Coritiba Football Club in his football career.
Subject: ['Abner (footballer)', 'Abner (footballer)']
Predicate: ['club', 'club']
Object: ['Coritiba Foot Ball Club', 'C.D. FAS']

Triple: [['__subject__ Abner (footballer) __predicate__ club __object__ Coritiba Foot Ball Club', '__subject__ Abner (footballer) __predicate__ club __object__ C.D. FAS']]
Text: Abner plays for Coritiba Football club and C.D. FAS.
Subject: ['Abner (footballer)', 'Abner (footballer)']
Predicate: ['club', 'club']
Object: ['Coritiba Foot Ball Club', 'C.D. FAS']

Triple: [['__subject__ Abner (footballer) __predicate__ club __object__ Real Madrid Castilla', '__subject__ Abner (footballer) __predicate__ club __object__ Brazil national under-20 football team']]
Text: Abner is a footballer who has represented the Brazil national under 20 team and also played for Real Madrid Castilla.
Subject: ['Abner (footballer)', 'Abner (footballer)']
Predicate: ['club', 'club']
Object: ['Real Madrid Castilla', 'Brazil national under-20 football team']

Triple: [['__subject__ Abner (footballer) __predicate__ club __object__ Real Madrid Castilla', '__subject__ Abner (footballer) __predicate__ club __object__ Brazil national under-20 football team']]
Text: The footballer Abner plays for the Brazilian national under 20 football team and the club, Real Madrid Castilla.
Subject: ['Abner (footballer)', 'Abner (footballer)']
Predicate: ['club', 'club']
Object: ['Real Madrid Castilla', 'Brazil national under-20 football team']

Triple: [['__subject__ Abner (footballer) __predicate__ club __object__ Real Madrid Castilla', '__subject__ Abner (footballer) __predicate__ club __object__ Brazil national under-20 football team']]
Text: The footballer Abner has represented the Brazil national under 20 team and plays for Real Madrid Castilla.
Subject: ['Abner (footballer)', 'Abner (footballer)']
Predicate: ['club', 'club']
Object: ['Real Madrid Castilla', 'Brazil national under-20 football team']

Triple: [['__subject__ Abner (footballer) __predicate__ club __object__ Real Madrid Castilla', '__subject__ Abner (footballer) __predicate__ club __object__ C.D. FAS']]
Text: Abner has played football for Real Madrid Castilla and C.D. FAS.
Subject: ['Abner (footballer)', 'Abner (footballer)']
Predicate: ['club', 'club']
Object: ['Real Madrid Castilla', 'C.D. FAS']

Triple: [['__subject__ Abner (footballer) __predicate__ club __object__ Real Madrid Castilla', '__subject__ Abner (footballer) __predicate__ club __object__ C.D. FAS']]
Text: Previous clubs of the footballer Abner include Real Madrid Castilla and CD FAS.
Subject: ['Abner (footballer)', 'Abner (footballer)']
Predicate: ['club', 'club']
Object: ['Real Madrid Castilla', 'C.D. FAS']

Triple: [['__subject__ Abner (footballer) __predicate__ club __object__ Real Madrid Castilla', '__subject__ Abner (footballer) __predicate__ club __object__ C.D. FAS']]
Text: Abner plays for the club, Real Madrid Castilla and the CD FAS club.
Subject: ['Abner (footballer)', 'Abner (footballer)']
Predicate: ['club', 'club']
Object: ['Real Madrid Castilla', 'C.D. FAS']

Triple: [['__subject__ Abner (footballer) __predicate__ club __object__ Real Madrid Castilla', '__subject__ Abner (footballer) __predicate__ club __object__ Coritiba Foot Ball Club']]
Text: Abner is a footballer for the Coritiba Football club and also Real Madrid Castilla.
Subject: ['Abner (footballer)', 'Abner (footballer)']
Predicate: ['club', 'club']
Object: ['Real Madrid Castilla', 'Coritiba Foot Ball Club']

Triple: [['__subject__ Abner (footballer) __predicate__ club __object__ Real Madrid Castilla', '__subject__ Abner (footballer) __predicate__ club __object__ Coritiba Foot Ball Club']]
Text: Footballer Abner plays for Real Madrid Castilla and Coritiba Football Club.
Subject: ['Abner (footballer)', 'Abner (footballer)']
Predicate: ['club', 'club']
Object: ['Real Madrid Castilla', 'Coritiba Foot Ball Club']

Triple: [['__subject__ Adam Maher __predicate__ club __object__ PSV Eindhoven', '__subject__ Adam Maher __predicate__ club __object__ AZ Alkmaar']]
Text: Adam Maher's clubs are PSV Eindhoven and AZ Alkmaar.
Subject: ['Adam Maher', 'Adam Maher']
Predicate: ['club', 'club']
Object: ['PSV Eindhoven', 'AZ Alkmaar']

Triple: [['__subject__ Adam Maher __predicate__ club __object__ PSV Eindhoven', '__subject__ Adam Maher __predicate__ club __object__ AZ Alkmaar']]
Text: Adam Maher plays for PSV Eindhoven and has been connected to the club AZ Alkmaar.
Subject: ['Adam Maher', 'Adam Maher']
Predicate: ['club', 'club']
Object: ['PSV Eindhoven', 'AZ Alkmaar']

Triple: [['__subject__ Adam McQuaid __predicate__ birthPlace __object__ Canada', '__subject__ Adam McQuaid __predicate__ birthYear __object__ 1986']]
Text: Adam McQuaid was born in Canada in 1986.
Subject: ['Adam McQuaid', 'Adam McQuaid']
Predicate: ['birthPlace', 'birthYear']
Object: ['Canada', '1986']

Triple: [['__subject__ Adam McQuaid __predicate__ birthPlace __object__ Charlottetown', '__subject__ Adam McQuaid __predicate__ birthYear __object__ 1986']]
Text: Adam McQuaid was born in Charlottetown in 1986.
Subject: ['Adam McQuaid', 'Adam McQuaid']
Predicate: ['birthPlace', 'birthYear']
Object: ['Charlottetown', '1986']

Triple: [['__subject__ Adam McQuaid __predicate__ birthPlace __object__ Charlottetown', '__subject__ Adam McQuaid __predicate__ birthYear __object__ 1986']]
Text: Adam McQuaid was born in 1986, in Charlottetown.
Subject: ['Adam McQuaid', 'Adam McQuaid']
Predicate: ['birthPlace', 'birthYear']
Object: ['Charlottetown', '1986']

Triple: [['__subject__ Adam McQuaid __predicate__ birthPlace __object__ Prince Edward Island', '__subject__ Adam McQuaid __predicate__ birthYear __object__ 1986']]
Text: Adam McQuaid was born in 1986 on Prince Edward Island.
Subject: ['Adam McQuaid', 'Adam McQuaid']
Predicate: ['birthPlace', 'birthYear']
Object: ['Prince Edward Island', '1986']

Triple: [['__subject__ Adam McQuaid __predicate__ birthPlace __object__ Prince Edward Island', '__subject__ Adam McQuaid __predicate__ birthYear __object__ 1986']]
Text: Adam McQuaid was born on Prince Edward Island in 1986.
Subject: ['Adam McQuaid', 'Adam McQuaid']
Predicate: ['birthPlace', 'birthYear']
Object: ['Prince Edward Island', '1986']

Triple: [['__subject__ Adam McQuaid __predicate__ draftTeam __object__ Columbus Blue Jackets', '__subject__ Columbus Blue Jackets __predicate__ city __object__ Columbus, Ohio']]
Text: Adam McQuaid's draft team is the Columbus Blue Jackets in Columbus, Ohio.
Subject: ['Adam McQuaid', 'Columbus Blue Jackets']
Predicate: ['draftTeam', 'city']
Object: ['Columbus Blue Jackets', 'Columbus, Ohio']

Triple: [['__subject__ Adam McQuaid __predicate__ draftTeam __object__ Columbus Blue Jackets', '__subject__ Columbus Blue Jackets __predicate__ city __object__ Columbus, Ohio']]
Text: Adam McQuaid's draft team is the Columbus Blue Jackets, which are based in Columbus, Ohio.
Subject: ['Adam McQuaid', 'Columbus Blue Jackets']
Predicate: ['draftTeam', 'city']
Object: ['Columbus Blue Jackets', 'Columbus, Ohio']

Triple: [['__subject__ Adam McQuaid __predicate__ draftTeam __object__ Columbus Blue Jackets', '__subject__ Columbus Blue Jackets __predicate__ city __object__ Columbus, Ohio']]
Text: The Columbus Blue Jackets in Columbus, Ohio drafted Adam McQuaid.
Subject: ['Adam McQuaid', 'Columbus Blue Jackets']
Predicate: ['draftTeam', 'city']
Object: ['Columbus Blue Jackets', 'Columbus, Ohio']

Triple: [['__subject__ Adam McQuaid __predicate__ draftTeam __object__ Columbus Blue Jackets', '__subject__ Columbus Blue Jackets __predicate__ generalManager __object__ Jarmo Kekäläinen']]
Text: Adam McQuaid's draft team is the Columbus Blue Jackets, whose general manager is Jarmo Kekalainen.
Subject: ['Adam McQuaid', 'Columbus Blue Jackets']
Predicate: ['draftTeam', 'generalManager']
Object: ['Columbus Blue Jackets', 'Jarmo Kekäläinen']

Triple: [['__subject__ Adam McQuaid __predicate__ draftTeam __object__ Columbus Blue Jackets', '__subject__ Columbus Blue Jackets __predicate__ generalManager __object__ Jarmo Kekäläinen']]
Text: Adam McQuaid was drafted to the Columbus Blue Jackets which is managed by Jarmo Kekalainen.
Subject: ['Adam McQuaid', 'Columbus Blue Jackets']
Predicate: ['draftTeam', 'generalManager']
Object: ['Columbus Blue Jackets', 'Jarmo Kekäläinen']

Triple: [['__subject__ Adam McQuaid __predicate__ draftTeam __object__ Columbus Blue Jackets', '__subject__ Columbus Blue Jackets __predicate__ generalManager __object__ Jarmo Kekäläinen']]
Text: Adam McQuaid's draft team was the Columbus Blue Jackets whose general manager is Jarmo Kekalainen.
Subject: ['Adam McQuaid', 'Columbus Blue Jackets']
Predicate: ['draftTeam', 'generalManager']
Object: ['Columbus Blue Jackets', 'Jarmo Kekäläinen']

Triple: [['__subject__ Adam McQuaid __predicate__ weight __object__ 94.8024 (kilograms)', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Canada']]
Text: Adam McQuaid was born in Canada and he weighs 94.8024 kg.
Subject: ['Adam McQuaid', 'Adam McQuaid']
Predicate: ['weight', 'birthPlace']
Object: ['94.8024 (kilograms)', 'Canada']

Triple: [['__subject__ Adam McQuaid __predicate__ weight __object__ 94.8024 (kilograms)', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Canada']]
Text: Adam McQuaid was born in Canada and his weight is 94.8024 kgs.
Subject: ['Adam McQuaid', 'Adam McQuaid']
Predicate: ['weight', 'birthPlace']
Object: ['94.8024 (kilograms)', 'Canada']

Triple: [['__subject__ Adam McQuaid __predicate__ weight __object__ 94.8024 (kilograms)', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Canada']]
Text: Adam McQuaid was born in Canada and weighs 94.8024 kilograms.
Subject: ['Adam McQuaid', 'Adam McQuaid']
Predicate: ['weight', 'birthPlace']
Object: ['94.8024 (kilograms)', 'Canada']

Triple: [['__subject__ Adam McQuaid __predicate__ weight __object__ 94.8024 (kilograms)', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Charlottetown']]
Text: Adam McQuaid, who was born in Charlottetown, weighs 94.8024kg.
Subject: ['Adam McQuaid', 'Adam McQuaid']
Predicate: ['weight', 'birthPlace']
Object: ['94.8024 (kilograms)', 'Charlottetown']

Triple: [['__subject__ Adam McQuaid __predicate__ weight __object__ 94.8024 (kilograms)', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Charlottetown']]
Text: Adam McQuaid's weight is 94.8024 kilograms and he was born in Charlottetown.
Subject: ['Adam McQuaid', 'Adam McQuaid']
Predicate: ['weight', 'birthPlace']
Object: ['94.8024 (kilograms)', 'Charlottetown']

Triple: [['__subject__ Adam McQuaid __predicate__ weight __object__ 94.8024 (kilograms)', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Charlottetown']]
Text: Adam McQuaid was born in Charlottetown and weighs 94.8024 kgs.
Subject: ['Adam McQuaid', 'Adam McQuaid']
Predicate: ['weight', 'birthPlace']
Object: ['94.8024 (kilograms)', 'Charlottetown']

Triple: [['__subject__ Adam McQuaid __predicate__ weight __object__ 94.8024 (kilograms)', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Prince Edward Island']]
Text: Adam McQuaid was born on Prince Edward Island and weighs 94.8024 kg.
Subject: ['Adam McQuaid', 'Adam McQuaid']
Predicate: ['weight', 'birthPlace']
Object: ['94.8024 (kilograms)', 'Prince Edward Island']

Triple: [['__subject__ Adam McQuaid __predicate__ weight __object__ 94.8024 (kilograms)', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Prince Edward Island']]
Text: Adam McQuaid was born on Prince Edward Island and weighs 94.8024 kilograms.
Subject: ['Adam McQuaid', 'Adam McQuaid']
Predicate: ['weight', 'birthPlace']
Object: ['94.8024 (kilograms)', 'Prince Edward Island']

Triple: [['__subject__ Adam McQuaid __predicate__ weight __object__ 94.8024 (kilograms)', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Prince Edward Island']]
Text: Adam McQuaid weighs 94.8024 kilograms and was born on Prince Edward Island.
Subject: ['Adam McQuaid', 'Adam McQuaid']
Predicate: ['weight', 'birthPlace']
Object: ['94.8024 (kilograms)', 'Prince Edward Island']

Triple: [["__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Zawra'a SC", "__subject__ Al-Zawra'a SC __predicate__ manager __object__ Basim Qasim"]]
Text: Ahmad Kadhim Assad plays for Al-Zawra'a SC, whose manager is Basim Qasim.
Subject: ['Ahmad Kadhim Assad', "Al-Zawra'a SC"]
Predicate: ['club', 'manager']
Object: ["Al-Zawra'a SC", 'Basim Qasim']

Triple: [["__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Zawra'a SC", "__subject__ Al-Zawra'a SC __predicate__ manager __object__ Basim Qasim"]]
Text: Ahmad Kadhim Assad plays for Al-Zawra'a SC managed by Basim Qasim.
Subject: ['Ahmad Kadhim Assad', "Al-Zawra'a SC"]
Predicate: ['club', 'manager']
Object: ["Al-Zawra'a SC", 'Basim Qasim']

Triple: [["__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Zawra'a SC", "__subject__ Al-Zawra'a SC __predicate__ manager __object__ Basim Qasim"]]
Text: Ahmad Kadhim Assad's club is Al-Zawra'a SC which is managed by Basim Qasim.
Subject: ['Ahmad Kadhim Assad', "Al-Zawra'a SC"]
Predicate: ['club', 'manager']
Object: ["Al-Zawra'a SC", 'Basim Qasim']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al Shorta SC', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Quwa Al-Jawiya']]
Text: Ahmad Kadhim Assad plays for Al-Quwa Al-Jawiya and his club is Al Shorta SC.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Al Shorta SC', 'Al-Quwa Al-Jawiya']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al Shorta SC', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Quwa Al-Jawiya']]
Text: Ahmad Kadhim Assad played for the clubs Al Shorta SC and Al-Quwa Al-Jawiya.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Al Shorta SC', 'Al-Quwa Al-Jawiya']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al Shorta SC', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Quwa Al-Jawiya']]
Text: Ahmad Kadhim Assad's club is Al Shorta SC and he played for the club Al-Quwa Al-Jawiya.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Al Shorta SC', 'Al-Quwa Al-Jawiya']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Esteghlal Ahvaz F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Naft']]
Text: Ahmad Kadhim Assad has played for both Al-Naft and Esteghlal Ahvaz FC.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Esteghlal Ahvaz F.C.', 'Al-Naft']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Esteghlal Ahvaz F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Naft']]
Text: Ahmad Kadhim Assad used to play for Esteghlal Ahvaz F.C. and now palys for Al-Naft.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Esteghlal Ahvaz F.C.', 'Al-Naft']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Esteghlal Ahvaz F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Naft']]
Text: Ahmad Kadhim Assad, whose club is Esteghlal Ahvaz F C. plays for Al-Naft.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Esteghlal Ahvaz F.C.', 'Al-Naft']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Esteghlal Ahvaz F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Quwa Al-Jawiya']]
Text: Ahmad Kadhim Assad plays for Al-Quwa Al-Jawiya and is part of the Esteghlal Ahvaz F.C.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Esteghlal Ahvaz F.C.', 'Al-Quwa Al-Jawiya']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Esteghlal Ahvaz F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Quwa Al-Jawiya']]
Text: Ahmad Kadhim Assad played for Esteghlal Ahvaz FC and Al-Quwa Al-Jawiya.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Esteghlal Ahvaz F.C.', 'Al-Quwa Al-Jawiya']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Esteghlal Ahvaz F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Quwa Al-Jawiya']]
Text: Ahmad Kadhim Assad played for the club Al-Quwa Al-Jawiya and is part of the Esteghlal Ahvaz F.C.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Esteghlal Ahvaz F.C.', 'Al-Quwa Al-Jawiya']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Esteghlal Ahvaz F.C.', '__subject__ Esteghlal Ahvaz F.C. __predicate__ manager __object__ Adnan Hamad']]
Text: Ahmad Kadhim Assad's club is Esteghlal Ahvaz FC which is managed by Adnan Hamad.
Subject: ['Ahmad Kadhim Assad', 'Esteghlal Ahvaz F.C.']
Predicate: ['club', 'manager']
Object: ['Esteghlal Ahvaz F.C.', 'Adnan Hamad']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Esteghlal Ahvaz F.C.', '__subject__ Esteghlal Ahvaz F.C. __predicate__ manager __object__ Adnan Hamad']]
Text: Ahmad Kadhim Assad played for the Esteghlal Ahvaz F C whose manager is Adnan Hamad.
Subject: ['Ahmad Kadhim Assad', 'Esteghlal Ahvaz F.C.']
Predicate: ['club', 'manager']
Object: ['Esteghlal Ahvaz F.C.', 'Adnan Hamad']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Esteghlal Ahvaz F.C.', '__subject__ Esteghlal Ahvaz F.C. __predicate__ manager __object__ Adnan Hamad']]
Text: Ahmad Kadhim Assad plays for the Esteghlal Ahvaz F.C. which is managed by Adnan Hamad.
Subject: ['Ahmad Kadhim Assad', 'Esteghlal Ahvaz F.C.']
Predicate: ['club', 'manager']
Object: ['Esteghlal Ahvaz F.C.', 'Adnan Hamad']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Steel Azin F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Jaish SC (Syria)']]
Text: Ahmad Kadhim Assad has played for the Syrian club Al Jaish SC and also Steel Azin FC.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Steel Azin F.C.', 'Al-Jaish SC (Syria)']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Steel Azin F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Jaish SC (Syria)']]
Text: Ahmad Kadhim Assad used to play for Steel Azin F.C. and now plays for Al-Jaish SC (Syria).
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Steel Azin F.C.', 'Al-Jaish SC (Syria)']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Steel Azin F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Jaish SC (Syria)']]
Text: Ahmad Kadhim Assad formerly played for Steel Azin F.C. and now plays for Al-Jaish SC in Syria.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Steel Azin F.C.', 'Al-Jaish SC (Syria)']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Steel Azin F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Quwa Al-Jawiya']]
Text: Ahmad Kadhim Assad has played for both Steel Azin F.C. and Al-Quwa Al-Jawiya.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Steel Azin F.C.', 'Al-Quwa Al-Jawiya']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Steel Azin F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Quwa Al-Jawiya']]
Text: Ahmad Kadhim Assad played for club Al-Quwa Al-Jawiya of Steel Azin F.C.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Steel Azin F.C.', 'Al-Quwa Al-Jawiya']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Steel Azin F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Quwa Al-Jawiya']]
Text: Ahmad Kadhim Assad has played for Al-Quwa Al-Jawiya and Steel Azin F.C.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Steel Azin F.C.', 'Al-Quwa Al-Jawiya']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Steel Azin F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Talaba SC']]
Text: Ahmad Kadhim Assad plays for Al Talaba SC and also for the club Steel Azin FC.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Steel Azin F.C.', 'Al-Talaba SC']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Steel Azin F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Talaba SC']]
Text: Ahmad Kadhim Assad, who plays for Steel Azin F.C. also plays for Al Talaba SC.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Steel Azin F.C.', 'Al-Talaba SC']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Steel Azin F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ PAS Tehran F.C.']]
Text: Ahmad Kadhim Assad is a player forSteel Azin F.C. and also PAS Tehran FC.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Steel Azin F.C.', 'PAS Tehran F.C.']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Steel Azin F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ PAS Tehran F.C.']]
Text: Ahmad Kadhim Assad's club is Steel Azin FC and he plays for PAS Tehran FC.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Steel Azin F.C.', 'PAS Tehran F.C.']

Triple: [['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Steel Azin F.C.', '__subject__ Ahmad Kadhim Assad __predicate__ club __object__ PAS Tehran F.C.']]
Text: Ahmad Kadhim Assad plays for Steel Azin FC and also played for PAS Tehran FC.
Subject: ['Ahmad Kadhim Assad', 'Ahmad Kadhim Assad']
Predicate: ['club', 'club']
Object: ['Steel Azin F.C.', 'PAS Tehran F.C.']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ Central F.C.']]
Text: Akeem Adams plays for Ferencvarosi TC and his club is Central FC.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'Central F.C.']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ Central F.C.']]
Text: Akeem Adams plays for Central fC and Ferencvarosi TC.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'Central F.C.']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ Central F.C.']]
Text: Former clubs of Akeem Adams inlcude Central FC and Ferencvarosi TC.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'Central F.C.']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ T&TEC Sports Club']]
Text: Former clubs of Akeem Adams include T&TEC Sports Club and Ferencvarosi TC.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'T&TEC Sports Club']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ T&TEC Sports Club']]
Text: Akeem Adams club is Ferencvarosi TC and he plays for the T&TEC Sports Club.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'T&TEC Sports Club']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ T&TEC Sports Club']]
Text: Akeem Adams played for T&TEC Sports Club and now plays for Ferencvarosi TC.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'T&TEC Sports Club']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ Trinidad and Tobago national football team']]
Text: Akeem Adams plays for Ferencvarosi TC and the Trinidad and Tobago national football team.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'Trinidad and Tobago national football team']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ Trinidad and Tobago national football team']]
Text: Akeem Adams is in Ferencvarosi TC. Plays for Trinidad and Tobago national football team.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'Trinidad and Tobago national football team']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ Trinidad and Tobago national football team']]
Text: Akeem Adams club is Ferencvarosi TC and he plays for the Trinidad and Tobago national football team.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'Trinidad and Tobago national football team']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ Trinidad and Tobago national under-17 football team']]
Text: Akeem Adams, who represented the Trinidad and Tobago national under 17 football team, has played for the club Ferencvarosi TC.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'Trinidad and Tobago national under-17 football team']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ Trinidad and Tobago national under-17 football team']]
Text: Akeem Adams clubs are Ferencvarosi TC and Trinidad and Tobago national under 17 football teams.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'Trinidad and Tobago national under-17 football team']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ Trinidad and Tobago national under-17 football team']]
Text: Akeem Adams plays for Ferencvarosi TC and the Trinidad and Tobago Under 17 football team.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'Trinidad and Tobago national under-17 football team']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ Trinidad and Tobago national under-20 football team']]
Text: Akeem Adams plays for the Trinidad and Tobago national under-20 football team and also for Ferencvarosi TC.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'Trinidad and Tobago national under-20 football team']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ Trinidad and Tobago national under-20 football team']]
Text: Akeem Adams played football for the Trinidad and Tobago national under 20 team and his club is Ferencvarosi TC.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'Trinidad and Tobago national under-20 football team']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ Trinidad and Tobago national under-20 football team']]
Text: Akeem Adams has played for Ferencvarosi TC and represented Trinidad and Tobago at under 20 level.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'Trinidad and Tobago national under-20 football team']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ United Petrotrin F.C.']]
Text: Akeem Adams club is Ferencvarosi TC and he is a member of the United Petrotrin FC.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'United Petrotrin F.C.']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ United Petrotrin F.C.']]
Text: Akeem Adams' former clubs include Ferencvarosi TC and United Petrotrin FC.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'United Petrotrin F.C.']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Akeem Adams __predicate__ club __object__ United Petrotrin F.C.']]
Text: Akeem Adams Club is Ferencvarosi TC, but he also played for United Petrotrin F.C.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['Ferencvárosi TC', 'United Petrotrin F.C.']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Ferencvárosi TC __predicate__ chairman __object__ Gábor Kubatov']]
Text: Akeem Adams plays for Ferencvarosi TC, whose chairman is Gábor Kubatov.
Subject: ['Akeem Adams', 'Ferencvárosi TC']
Predicate: ['club', 'chairman']
Object: ['Ferencvárosi TC', 'Gábor Kubatov']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC', '__subject__ Ferencvárosi TC __predicate__ chairman __object__ Gábor Kubatov']]
Text: Akeem Adams plays for Ferencvarosi TC chaired by Gabor Kubatov.
Subject: ['Akeem Adams', 'Ferencvárosi TC']
Predicate: ['club', 'chairman']
Object: ['Ferencvárosi TC', 'Gábor Kubatov']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ T&TEC Sports Club', '__subject__ Akeem Adams __predicate__ club __object__ United Petrotrin F.C.']]
Text: Akeem Adams played for the club T&TEC Sports Club and played for United Petrotrin FC.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['T&TEC Sports Club', 'United Petrotrin F.C.']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ T&TEC Sports Club', '__subject__ Akeem Adams __predicate__ club __object__ United Petrotrin F.C.']]
Text: Akeem Adams plays for the T&TEC Sports Club and also played for United Petrotrin F.C.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['T&TEC Sports Club', 'United Petrotrin F.C.']

Triple: [['__subject__ Akeem Adams __predicate__ club __object__ T&TEC Sports Club', '__subject__ Akeem Adams __predicate__ club __object__ United Petrotrin F.C.']]
Text: Akeem Adams plays for T&TEC Sports Club and formerly for United Petrotrin F.C.
Subject: ['Akeem Adams', 'Akeem Adams']
Predicate: ['club', 'club']
Object: ['T&TEC Sports Club', 'United Petrotrin F.C.']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams', '__subject__ Akeem Ayers __predicate__ debutTeam __object__ Tennessee Titans']]
Text: Akeem Ayers debuted for the Tennessee Titans and also played for the Los Angeles Rams.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'debutTeam']
Object: ['Los Angeles Rams', 'Tennessee Titans']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams', '__subject__ Akeem Ayers __predicate__ debutTeam __object__ Tennessee Titans']]
Text: Akeem Ayers made his debut for the Tennessee Titans and played for the Los Angeles Rams.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'debutTeam']
Object: ['Los Angeles Rams', 'Tennessee Titans']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams', '__subject__ Akeem Ayers __predicate__ debutTeam __object__ Tennessee Titans']]
Text: Akeem Ayers made his debut for the Tennessee Titans and used to play for the Los Angeles Rams.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'debutTeam']
Object: ['Los Angeles Rams', 'Tennessee Titans']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams', '__subject__ Akeem Ayers __predicate__ draftPick __object__ 39']]
Text: Akeem Ayers draft pick is 39 and he used to play for Los Angeles Rams.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'draftPick']
Object: ['Los Angeles Rams', '39']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams', '__subject__ Akeem Ayers __predicate__ draftPick __object__ 39']]
Text: Akeem Ayers former team is the Los Angeles Rams and his draft pick is 39.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'draftPick']
Object: ['Los Angeles Rams', '39']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams', '__subject__ Akeem Ayers __predicate__ draftPick __object__ 39']]
Text: Akeem Ayers once played for the Los Angeles Rams and was number 29 in the draft pick.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'draftPick']
Object: ['Los Angeles Rams', '39']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams', '__subject__ Akeem Ayers __predicate__ draftRound __object__ 2']]
Text: Akeem Ayers' former team was the Los Angeles Rams and his draft round was 2.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'draftRound']
Object: ['Los Angeles Rams', '2']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams', '__subject__ Akeem Ayers __predicate__ draftRound __object__ 2']]
Text: Akeem Ayers was in draft round 2 and his former team was the Los Angeles Rams.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'draftRound']
Object: ['Los Angeles Rams', '2']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams', '__subject__ Akeem Ayers __predicate__ draftRound __object__ 2']]
Text: Akeem Ayers' draft round was 2 and he used to play for the Los Angeles Rams.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'draftRound']
Object: ['Los Angeles Rams', '2']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams', '__subject__ Los Angeles Rams __predicate__ city __object__ Los Angeles Memorial Coliseum']]
Text: Akeem Ayers' former team was the Los Angeles Rams who play in their home city at Los Angeles Memorial Coliseum.
Subject: ['Akeem Ayers', 'Los Angeles Rams']
Predicate: ['formerTeam', 'city']
Object: ['Los Angeles Rams', 'Los Angeles Memorial Coliseum']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams', '__subject__ Los Angeles Rams __predicate__ city __object__ Los Angeles Memorial Coliseum']]
Text: Los Angeles Memorial Coliseum is home for the Los Angeles Rams, former team of Akeem Ayers.
Subject: ['Akeem Ayers', 'Los Angeles Rams']
Predicate: ['formerTeam', 'city']
Object: ['Los Angeles Rams', 'Los Angeles Memorial Coliseum']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams', '__subject__ Los Angeles Rams __predicate__ city __object__ Los Angeles Memorial Coliseum']]
Text: Akeem Ayers former team is the Los Angeles Rams who play at the Los Angeles Memorial Coliseum.
Subject: ['Akeem Ayers', 'Los Angeles Rams']
Predicate: ['formerTeam', 'city']
Object: ['Los Angeles Rams', 'Los Angeles Memorial Coliseum']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ New England Patriots', '__subject__ Akeem Ayers __predicate__ debutTeam __object__ Tennessee Titans']]
Text: Akeem Ayers, who made his debut for the Tennessee Titans, later played for the New England Patriots.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'debutTeam']
Object: ['New England Patriots', 'Tennessee Titans']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ New England Patriots', '__subject__ Akeem Ayers __predicate__ debutTeam __object__ Tennessee Titans']]
Text: Akeem Ayers debuted for Tennessee Titans, but has also played with The New England Patriots.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'debutTeam']
Object: ['New England Patriots', 'Tennessee Titans']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ St. Louis Rams', '__subject__ Akeem Ayers __predicate__ debutTeam __object__ Tennessee Titans']]
Text: Akeem Ayers made his debut for the Tennessee Titans and later played for the St Louis Rams.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'debutTeam']
Object: ['St. Louis Rams', 'Tennessee Titans']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ St. Louis Rams', '__subject__ Akeem Ayers __predicate__ debutTeam __object__ Tennessee Titans']]
Text: The debut team of Akeem Ayers was the Tennessee Titans and he also formerly played for the St Louis Rams.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'debutTeam']
Object: ['St. Louis Rams', 'Tennessee Titans']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ St. Louis Rams', '__subject__ Akeem Ayers __predicate__ draftPick __object__ 39']]
Text: Akeem Ayers is 39 in the draft pick and used to play for the St. Louis Rams.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'draftPick']
Object: ['St. Louis Rams', '39']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ St. Louis Rams', '__subject__ Akeem Ayers __predicate__ draftPick __object__ 39']]
Text: Akeem Ayers was number 39 in the draft pick and once played for the St Louis Rams.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'draftPick']
Object: ['St. Louis Rams', '39']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ St. Louis Rams', '__subject__ Akeem Ayers __predicate__ draftPick __object__ 39']]
Text: Akeem Ayers was number 39 in the draft pick and played for the St. Louis Rams.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'draftPick']
Object: ['St. Louis Rams', '39']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ St. Louis Rams', '__subject__ Akeem Ayers __predicate__ draftRound __object__ 2']]
Text: Akeem Ayers was drafted in round 2 and used to play for the St, Louis Rams.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'draftRound']
Object: ['St. Louis Rams', '2']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ St. Louis Rams', '__subject__ Akeem Ayers __predicate__ draftRound __object__ 2']]
Text: St Louis Rams is the former team of Akeem Ayers who was in draft round 2.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'draftRound']
Object: ['St. Louis Rams', '2']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ St. Louis Rams', '__subject__ Akeem Ayers __predicate__ draftRound __object__ 2']]
Text: Akeem Ayers, who used to play for the St. Louis Rams, was drafted in round 2.
Subject: ['Akeem Ayers', 'Akeem Ayers']
Predicate: ['formerTeam', 'draftRound']
Object: ['St. Louis Rams', '2']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ St. Louis Rams', '__subject__ St. Louis Rams __predicate__ city __object__ St. Louis']]
Text: Akeem Ayers played for the American Football team, St. Louis Rams.
Subject: ['Akeem Ayers', 'St. Louis Rams']
Predicate: ['formerTeam', 'city']
Object: ['St. Louis Rams', 'St. Louis']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ St. Louis Rams', '__subject__ St. Louis Rams __predicate__ city __object__ St. Louis']]
Text: The St. Louis Rams, based in St. Louis, is Akeem Ayers' former team.
Subject: ['Akeem Ayers', 'St. Louis Rams']
Predicate: ['formerTeam', 'city']
Object: ['St. Louis Rams', 'St. Louis']

Triple: [['__subject__ Akeem Ayers __predicate__ formerTeam __object__ St. Louis Rams', '__subject__ St. Louis Rams __predicate__ city __object__ St. Louis']]
Text: Based in the city of St Louis, the St Louis Rams are a former team of Akeem Ayers.
Subject: ['Akeem Ayers', 'St. Louis Rams']
Predicate: ['formerTeam', 'city']
Object: ['St. Louis Rams', 'St. Louis']

Triple: [['__subject__ Akeem Dent __predicate__ birthDate __object__ 1987-09-27', '__subject__ Akeem Dent __predicate__ birthPlace __object__ Atlanta, Georgia']]
Text: Akeem Dent was born in Atlanta, Georgia on the 27th September 1987.
Subject: ['Akeem Dent', 'Akeem Dent']
Predicate: ['birthDate', 'birthPlace']
Object: ['1987-09-27', 'Atlanta, Georgia']

Triple: [['__subject__ Akeem Dent __predicate__ birthDate __object__ 1987-09-27', '__subject__ Akeem Dent __predicate__ birthPlace __object__ Atlanta, Georgia']]
Text: Akeem Dent was born on 27/09/1987 in Atlanta, Georgia.
Subject: ['Akeem Dent', 'Akeem Dent']
Predicate: ['birthDate', 'birthPlace']
Object: ['1987-09-27', 'Atlanta, Georgia']

Triple: [['__subject__ Akeem Dent __predicate__ birthDate __object__ 1987-09-27', '__subject__ Akeem Dent __predicate__ birthPlace __object__ Atlanta, Georgia']]
Text: Akeem Dent was born in Atlanta, Georgia on 27 September 1987.
Subject: ['Akeem Dent', 'Akeem Dent']
Predicate: ['birthDate', 'birthPlace']
Object: ['1987-09-27', 'Atlanta, Georgia']

Triple: [['__subject__ Akeem Dent __predicate__ club __object__ Houston Texans', '__subject__ Akeem Dent __predicate__ birthPlace __object__ Atlanta, Georgia']]
Text: Akeem Dent was born in Atlanta, Georgia and his club is the Houston Texans.
Subject: ['Akeem Dent', 'Akeem Dent']
Predicate: ['club', 'birthPlace']
Object: ['Houston Texans', 'Atlanta, Georgia']

Triple: [['__subject__ Akeem Dent __predicate__ club __object__ Houston Texans', '__subject__ Akeem Dent __predicate__ birthPlace __object__ Atlanta, Georgia']]
Text: Akeem Dent was born in Atlanta Georgia and plays for the Houston Texans club.
Subject: ['Akeem Dent', 'Akeem Dent']
Predicate: ['club', 'birthPlace']
Object: ['Houston Texans', 'Atlanta, Georgia']

Triple: [['__subject__ Akeem Dent __predicate__ club __object__ Houston Texans', '__subject__ Akeem Dent __predicate__ birthPlace __object__ Atlanta, Georgia']]
Text: Akeem Dent, whose birthplace is Atlanta, Georgia, plays for the Houston Texans.
Subject: ['Akeem Dent', 'Akeem Dent']
Predicate: ['club', 'birthPlace']
Object: ['Houston Texans', 'Atlanta, Georgia']

Triple: [['__subject__ Akeem Dent __predicate__ debutTeam __object__ Atlanta Falcons', '__subject__ Akeem Dent __predicate__ formerTeam __object__ Houston Texans']]
Text: Akeem Dent's first team were the Atlanta Falcons and another former team was the Houston Texans.
Subject: ['Akeem Dent', 'Akeem Dent']
Predicate: ['debutTeam', 'formerTeam']
Object: ['Atlanta Falcons', 'Houston Texans']

Triple: [['__subject__ Akeem Dent __predicate__ debutTeam __object__ Atlanta Falcons', '__subject__ Akeem Dent __predicate__ formerTeam __object__ Houston Texans']]
Text: Akeem Dent debuted with the Atlanta Falcons and also played for the Houston Texans.
Subject: ['Akeem Dent', 'Akeem Dent']
Predicate: ['debutTeam', 'formerTeam']
Object: ['Atlanta Falcons', 'Houston Texans']

Triple: [['__subject__ Akeem Dent __predicate__ debutTeam __object__ Atlanta Falcons', '__subject__ Akeem Dent __predicate__ formerTeam __object__ Houston Texans']]
Text: Akeem Dent debuted with Atlanta Falcons and also played for Houston Texans.
Subject: ['Akeem Dent', 'Akeem Dent']
Predicate: ['debutTeam', 'formerTeam']
Object: ['Atlanta Falcons', 'Houston Texans']

Triple: [['__subject__ Akeem Dent __predicate__ debutTeam __object__ Atlanta Falcons', '__subject__ Atlanta Falcons __predicate__ city __object__ Atlanta']]
Text: Akeem Dent first team were the Atlanta based Atlanta Falcons.
Subject: ['Akeem Dent', 'Atlanta Falcons']
Predicate: ['debutTeam', 'city']
Object: ['Atlanta Falcons', 'Atlanta']

Triple: [['__subject__ Akeem Dent __predicate__ debutTeam __object__ Atlanta Falcons', '__subject__ Atlanta Falcons __predicate__ city __object__ Atlanta']]
Text: Akeem Dent's first team were the Atlanta Falcons who play in Atlanta.
Subject: ['Akeem Dent', 'Atlanta Falcons']
Predicate: ['debutTeam', 'city']
Object: ['Atlanta Falcons', 'Atlanta']

Triple: [['__subject__ Akeem Dent __predicate__ debutTeam __object__ Atlanta Falcons', '__subject__ Atlanta Falcons __predicate__ city __object__ Atlanta']]
Text: Akeem Dent's debut team was the Atlanta Falcons who play in the city of Atlanta.
Subject: ['Akeem Dent', 'Atlanta Falcons']
Predicate: ['debutTeam', 'city']
Object: ['Atlanta Falcons', 'Atlanta']

Triple: [['__subject__ Akeem Dent __predicate__ formerTeam __object__ Atlanta Falcons', '__subject__ Atlanta Falcons __predicate__ city __object__ Atlanta']]
Text: Akeem Dent used to play for the Atlanta Falcons in Atlanta.
Subject: ['Akeem Dent', 'Atlanta Falcons']
Predicate: ['formerTeam', 'city']
Object: ['Atlanta Falcons', 'Atlanta']

Triple: [['__subject__ Akeem Dent __predicate__ formerTeam __object__ Atlanta Falcons', '__subject__ Atlanta Falcons __predicate__ city __object__ Atlanta']]
Text: Akeem Dent used to play for the Atlanta Falcons based in Atlanta.
Subject: ['Akeem Dent', 'Atlanta Falcons']
Predicate: ['formerTeam', 'city']
Object: ['Atlanta Falcons', 'Atlanta']

Triple: [['__subject__ Akeem Dent __predicate__ formerTeam __object__ Atlanta Falcons', '__subject__ Atlanta Falcons __predicate__ city __object__ Atlanta']]
Text: Akeem Dent played for the Atlanta Falcons, based in Atlanta.
Subject: ['Akeem Dent', 'Atlanta Falcons']
Predicate: ['formerTeam', 'city']
Object: ['Atlanta Falcons', 'Atlanta']

Triple: [['__subject__ Akeem Dent __predicate__ formerTeam __object__ Atlanta Falcons', '__subject__ Atlanta Falcons __predicate__ coach __object__ Dan Quinn (American football)']]
Text: Akeem Dent once played with the Atlanta Falcons whose coach was Dan Quinn.
Subject: ['Akeem Dent', 'Atlanta Falcons']
Predicate: ['formerTeam', 'coach']
Object: ['Atlanta Falcons', 'Dan Quinn (American football)']

Triple: [['__subject__ Akeem Dent __predicate__ formerTeam __object__ Atlanta Falcons', '__subject__ Atlanta Falcons __predicate__ coach __object__ Dan Quinn (American football)']]
Text: Dan Quinn, an American football coach, coaches the Atlanta Falcons which is the former team of Akeem Dent.
Subject: ['Akeem Dent', 'Atlanta Falcons']
Predicate: ['formerTeam', 'coach']
Object: ['Atlanta Falcons', 'Dan Quinn (American football)']

Triple: [['__subject__ Akeem Dent __predicate__ formerTeam __object__ Atlanta Falcons', '__subject__ Atlanta Falcons __predicate__ coach __object__ Dan Quinn (American football)']]
Text: Akeem Dent's former team is the Atlanta Falcons, where the team is now coached by Dan Quinn.
Subject: ['Akeem Dent', 'Atlanta Falcons']
Predicate: ['formerTeam', 'coach']
Object: ['Atlanta Falcons', 'Dan Quinn (American football)']

Triple: [['__subject__ Akeem Dent __predicate__ formerTeam __object__ Houston Texans', '__subject__ Houston Texans __predicate__ city __object__ Houston']]
Text: Akeem Dent's former team was the Houston based Houston Texans.
Subject: ['Akeem Dent', 'Houston Texans']
Predicate: ['formerTeam', 'city']
Object: ['Houston Texans', 'Houston']

Triple: [['__subject__ Akeem Dent __predicate__ formerTeam __object__ Houston Texans', '__subject__ Houston Texans __predicate__ city __object__ Houston']]
Text: Akeem Dent used to play for Houston Texans in Houston.
Subject: ['Akeem Dent', 'Houston Texans']
Predicate: ['formerTeam', 'city']
Object: ['Houston Texans', 'Houston']

Triple: [['__subject__ Akeem Dent __predicate__ formerTeam __object__ Houston Texans', '__subject__ Houston Texans __predicate__ city __object__ Houston']]
Text: The Houston Texans, based in the city of Houston, was Akeem Dent's former team.
Subject: ['Akeem Dent', 'Houston Texans']
Predicate: ['formerTeam', 'city']
Object: ['Houston Texans', 'Houston']

Triple: [['__subject__ Akeem Dent __predicate__ position __object__ Linebacker', '__subject__ Akeem Dent __predicate__ birthPlace __object__ Atlanta, Georgia']]
Text: Linebacker Akeem Dent was born in Atlanta, Georgia.
Subject: ['Akeem Dent', 'Akeem Dent']
Predicate: ['position', 'birthPlace']
Object: ['Linebacker', 'Atlanta, Georgia']

Triple: [['__subject__ Akeem Dent __predicate__ position __object__ Linebacker', '__subject__ Akeem Dent __predicate__ birthPlace __object__ Atlanta, Georgia']]
Text: Akeem Dent, who was born in Atlanta, Georgia is a linebacker.
Subject: ['Akeem Dent', 'Akeem Dent']
Predicate: ['position', 'birthPlace']
Object: ['Linebacker', 'Atlanta, Georgia']

Triple: [['__subject__ Akeem Dent __predicate__ position __object__ Linebacker', '__subject__ Akeem Dent __predicate__ birthPlace __object__ Atlanta, Georgia']]
Text: Born in Atlanta, Georgia, Akeem Dent's position is linebacker.
Subject: ['Akeem Dent', 'Akeem Dent']
Predicate: ['position', 'birthPlace']
Object: ['Linebacker', 'Atlanta, Georgia']

Triple: [['__subject__ Akeem Priestley __predicate__ birthPlace __object__ Jamaica', '__subject__ Jamaica __predicate__ leader __object__ Elizabeth II']]
Text: Akeem Priestley was born in Jamaica, where that country's leader is Elizabeth II.
Subject: ['Akeem Priestley', 'Jamaica']
Predicate: ['birthPlace', 'leader']
Object: ['Jamaica', 'Elizabeth II']

Triple: [['__subject__ Akeem Priestley __predicate__ birthPlace __object__ Jamaica', '__subject__ Jamaica __predicate__ leader __object__ Elizabeth II']]
Text: Akeem Priestley's birth place is Jamaica, which is led by Elizabeth II.
Subject: ['Akeem Priestley', 'Jamaica']
Predicate: ['birthPlace', 'leader']
Object: ['Jamaica', 'Elizabeth II']

Triple: [['__subject__ Akeem Priestley __predicate__ birthPlace __object__ Jamaica', '__subject__ Jamaica __predicate__ leader __object__ Elizabeth II']]
Text: Akeem Priestley was born in Jamaica, whose monarch is Queen Elizabeth II.
Subject: ['Akeem Priestley', 'Jamaica']
Predicate: ['birthPlace', 'leader']
Object: ['Jamaica', 'Elizabeth II']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ Dayton Dutch Lions', '__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.']]
Text: Akeem Priestley plays for Dayton Dutch Lions and Harbour View F.C.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['Dayton Dutch Lions', 'Harbour View F.C.']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ Dayton Dutch Lions', '__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.']]
Text: Akeem Priestley's clubs are Dayton Dutch Lions and Harbour View FC.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['Dayton Dutch Lions', 'Harbour View F.C.']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ Dayton Dutch Lions', '__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.']]
Text: Akeem Priestley's club is Dayton Dutch Lions and he plays for Harbour View F.C.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['Dayton Dutch Lions', 'Harbour View F.C.']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ FK Mughan', '__subject__ Akeem Priestley __predicate__ club __object__ Sheikh Russel KC']]
Text: Akeem Priestley played for FK Mughan and Sheikh Russel KC.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['FK Mughan', 'Sheikh Russel KC']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ FK Mughan', '__subject__ Akeem Priestley __predicate__ club __object__ Sheikh Russel KC']]
Text: Akeem Priestley plays for FK Mughan and formerly for Sheikh Russel KC.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['FK Mughan', 'Sheikh Russel KC']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ FK Mughan', '__subject__ Akeem Priestley __predicate__ club __object__ Sheikh Russel KC']]
Text: Akeem Priestley has played for the clubs FK Mughan and Sheikh Russel KC.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['FK Mughan', 'Sheikh Russel KC']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.', '__subject__ Akeem Priestley __predicate__ club __object__ Antigua GFC']]
Text: Akeem Priestley played for Antigua GFC and now plays for Harbour View FC.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['Harbour View F.C.', 'Antigua GFC']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.', '__subject__ Akeem Priestley __predicate__ club __object__ Antigua GFC']]
Text: Akeem Priestley plays for Harbour View Fc and Antigua GFC.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['Harbour View F.C.', 'Antigua GFC']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.', '__subject__ Akeem Priestley __predicate__ club __object__ Antigua GFC']]
Text: Akeem Priestley plays football for Harbour View FC and Antigua GFC.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['Harbour View F.C.', 'Antigua GFC']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ Jacksonville Dolphins', '__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.']]
Text: Akeem Priestley plays for Jacksonville Dolphins and the Harbour View F.C.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['Jacksonville Dolphins', 'Harbour View F.C.']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ Jacksonville Dolphins', '__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.']]
Text: Akeem Priestley plays for Jacksonville Dolphins and his club is Harbour View F.C.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['Jacksonville Dolphins', 'Harbour View F.C.']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ Jacksonville Dolphins', '__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.']]
Text: Akeem Priestley's former clubs include Harbour View FC and Jacksonville Dolphins.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['Jacksonville Dolphins', 'Harbour View F.C.']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ Jacksonville Dolphins', '__subject__ Akeem Priestley __predicate__ club __object__ Sheikh Russel KC']]
Text: Akeem Priestley is in the Jacksonville Dolphins club and previously played for the club Sheikh Russel KC.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['Jacksonville Dolphins', 'Sheikh Russel KC']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ Jacksonville Dolphins', '__subject__ Akeem Priestley __predicate__ club __object__ Sheikh Russel KC']]
Text: Akeem Priestley plays for Jacksonville Dolphins Club and for Sheikh Russel KC.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['Jacksonville Dolphins', 'Sheikh Russel KC']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ Jacksonville Dolphins', '__subject__ Akeem Priestley __predicate__ club __object__ Sheikh Russel KC']]
Text: Akeem Priestley plays for Jacksonville Dolphins Club and used to play for Sheikh Russel KC.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['Jacksonville Dolphins', 'Sheikh Russel KC']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ RoPS', '__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.']]
Text: Akeem Priestley's clubs are Harbour View F.C. and RoPS.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['RoPS', 'Harbour View F.C.']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ RoPS', '__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.']]
Text: Akeem Priestley, a member of club RoPS, is a player for the Harbour View F.C.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['RoPS', 'Harbour View F.C.']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ RoPS', '__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.']]
Text: Akeem Priestley's former clubs include Harbour View FC and RoPS.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['RoPS', 'Harbour View F.C.']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ Sheikh Russel KC', '__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.']]
Text: Akeem Priestley's club is Harbour View F.C and he plays for Sheikh Russel KC.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['Sheikh Russel KC', 'Harbour View F.C.']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ Sheikh Russel KC', '__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.']]
Text: Akeem Priestley, whose club is Harbour View FC, plays for Sheikh Russel KC.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['Sheikh Russel KC', 'Harbour View F.C.']

Triple: [['__subject__ Akeem Priestley __predicate__ club __object__ Sheikh Russel KC', '__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.']]
Text: Akeem Priestley, whose club is Harbour View F.C. played for the club Sheikh Russel KC.
Subject: ['Akeem Priestley', 'Akeem Priestley']
Predicate: ['club', 'club']
Object: ['Sheikh Russel KC', 'Harbour View F.C.']

Triple: [['__subject__ Al-Khor Sports Club __predicate__ league __object__ Qatar Stars League', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Khor Sports Club']]
Text: Alaa Abdul-Zahra is in the Al-Khor Sports Club which is in the Qatar Stars League.
Subject: ['Al-Khor Sports Club', 'Alaa Abdul-Zahra']
Predicate: ['league', 'club']
Object: ['Qatar Stars League', 'Al-Khor Sports Club']

Triple: [['__subject__ Al-Khor Sports Club __predicate__ league __object__ Qatar Stars League', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Khor Sports Club']]
Text: Alaa Abdul-Zahra has played for the Al-Khor Sports Club in the Qatar Stars League.
Subject: ['Al-Khor Sports Club', 'Alaa Abdul-Zahra']
Predicate: ['league', 'club']
Object: ['Qatar Stars League', 'Al-Khor Sports Club']

Triple: [['__subject__ Al-Khor Sports Club __predicate__ league __object__ Qatar Stars League', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Khor Sports Club']]
Text: Alaa Abdul Zahra plays for Al-Khor Sports Club which plays in the Qatar Stars League.
Subject: ['Al-Khor Sports Club', 'Alaa Abdul-Zahra']
Predicate: ['league', 'club']
Object: ['Qatar Stars League', 'Al-Khor Sports Club']

Triple: [['__subject__ Al-Wakrah Sport Club __predicate__ league __object__ Qatar Stars League', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Wakrah Sport Club']]
Text: Alaa Abdul-Zahra plays for Al-Wakrah Sports Club which is part of the Qatar Stars League.
Subject: ['Al-Wakrah Sport Club', 'Alaa Abdul-Zahra']
Predicate: ['league', 'club']
Object: ['Qatar Stars League', 'Al-Wakrah Sport Club']

Triple: [['__subject__ Al-Wakrah Sport Club __predicate__ league __object__ Qatar Stars League', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Wakrah Sport Club']]
Text: Alaa Abdul-Zahra plays for the Al-Wakrah Sport Club which is in the Qatar Stars League.
Subject: ['Al-Wakrah Sport Club', 'Alaa Abdul-Zahra']
Predicate: ['league', 'club']
Object: ['Qatar Stars League', 'Al-Wakrah Sport Club']

Triple: [['__subject__ Al-Wakrah Sport Club __predicate__ league __object__ Qatar Stars League', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Wakrah Sport Club']]
Text: Alaa Abdul-Zahra plays for the Al-Wakrah Sports Club in the Qatar Stars League.
Subject: ['Al-Wakrah Sport Club', 'Alaa Abdul-Zahra']
Predicate: ['league', 'club']
Object: ['Qatar Stars League', 'Al-Wakrah Sport Club']

Triple: [['__subject__ Al-Wakrah Sport Club __predicate__ position __object__ Qatar Stars League', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Wakrah Sport Club']]
Text: Alaa Abdul-Zahra plays for Al-Wakrah Sport Club in the Qatar Stars league.
Subject: ['Al-Wakrah Sport Club', 'Alaa Abdul-Zahra']
Predicate: ['position', 'club']
Object: ['Qatar Stars League', 'Al-Wakrah Sport Club']

Triple: [['__subject__ Al-Wakrah Sport Club __predicate__ position __object__ Qatar Stars League', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Wakrah Sport Club']]
Text: Alaa Abdul-Zahra plays for the Al-Wakrah Sport Club positioned in the Qatar Stars League.
Subject: ['Al-Wakrah Sport Club', 'Alaa Abdul-Zahra']
Predicate: ['position', 'club']
Object: ['Qatar Stars League', 'Al-Wakrah Sport Club']

Triple: [['__subject__ Al-Wakrah Sport Club __predicate__ position __object__ Qatar Stars League', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Wakrah Sport Club']]
Text: Alaa Abdul-Zahra plays for the Al-Wakrah Sport Club in the Qatar Stars league.
Subject: ['Al-Wakrah Sport Club', 'Alaa Abdul-Zahra']
Predicate: ['position', 'club']
Object: ['Qatar Stars League', 'Al-Wakrah Sport Club']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Khor Sports Club', '__subject__ Al-Khor Sports Club __predicate__ position __object__ Qatar Stars League']]
Text: Alaa Abdul-Zahra is in the Al-Khor Sports Club which is in the Qatar Stars league.
Subject: ['Alaa Abdul-Zahra', 'Al-Khor Sports Club']
Predicate: ['club', 'position']
Object: ['Al-Khor Sports Club', 'Qatar Stars League']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Khor Sports Club', '__subject__ Al-Khor Sports Club __predicate__ position __object__ Qatar Stars League']]
Text: Alaa Abdul Zahra plays for Al Khor Sports Club in the Qatar Stars League.
Subject: ['Alaa Abdul-Zahra', 'Al-Khor Sports Club']
Predicate: ['club', 'position']
Object: ['Al-Khor Sports Club', 'Qatar Stars League']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Khor Sports Club', '__subject__ Al-Khor Sports Club __predicate__ position __object__ Qatar Stars League']]
Text: Alaa Abdul Zahra plays for Al-Khor Sports Club within the Qatar Stars League.
Subject: ['Alaa Abdul-Zahra', 'Al-Khor Sports Club']
Predicate: ['club', 'position']
Object: ['Al-Khor Sports Club', 'Qatar Stars League']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Kharaitiyat SC', '__subject__ Al Kharaitiyat SC __predicate__ ground __object__ Al Khor']]
Text: Alaa Abdul Zahra plays for Al Kharaitiyat SC who have their ground at Al Khor.
Subject: ['Alaa Abdul-Zahra', 'Al Kharaitiyat SC']
Predicate: ['club', 'ground']
Object: ['Al Kharaitiyat SC', 'Al Khor']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Kharaitiyat SC', '__subject__ Al Kharaitiyat SC __predicate__ ground __object__ Al Khor']]
Text: Alaa Abdul Zahra plays for Al Kharaitiyat SC who play their home games at Al Khor.
Subject: ['Alaa Abdul-Zahra', 'Al Kharaitiyat SC']
Predicate: ['club', 'ground']
Object: ['Al Kharaitiyat SC', 'Al Khor']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Kharaitiyat SC', '__subject__ Al Kharaitiyat SC __predicate__ ground __object__ Al Khor']]
Text: Alaa Abdul Zahra's club is AL Kharaitiyat SC located in Al Khor.
Subject: ['Alaa Abdul-Zahra', 'Al Kharaitiyat SC']
Predicate: ['club', 'ground']
Object: ['Al Kharaitiyat SC', 'Al Khor']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Kharaitiyat SC', '__subject__ Al Kharaitiyat SC __predicate__ league __object__ Qatar Stars League']]
Text: Alaa Abdul Zahra plays for Al Kharaitiyat SC in the Qatar Stars League.
Subject: ['Alaa Abdul-Zahra', 'Al Kharaitiyat SC']
Predicate: ['club', 'league']
Object: ['Al Kharaitiyat SC', 'Qatar Stars League']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Kharaitiyat SC', '__subject__ Al Kharaitiyat SC __predicate__ league __object__ Qatar Stars League']]
Text: Alaa Abdul Zahra's club is AL Kharaitiyat SC which is in the Qatar Stars League.
Subject: ['Alaa Abdul-Zahra', 'Al Kharaitiyat SC']
Predicate: ['club', 'league']
Object: ['Al Kharaitiyat SC', 'Qatar Stars League']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Kharaitiyat SC', '__subject__ Al Kharaitiyat SC __predicate__ league __object__ Qatar Stars League']]
Text: Alaa Abdul Zahra's club is AL Kharaitiyat SC who play in the Qatar Stars league.
Subject: ['Alaa Abdul-Zahra', 'Al Kharaitiyat SC']
Predicate: ['club', 'league']
Object: ['Al Kharaitiyat SC', 'Qatar Stars League']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Kharaitiyat SC', '__subject__ Al Kharaitiyat SC __predicate__ position __object__ Qatar Stars League']]
Text: Alaa Abdul Zahra plays for Al Kharaitiyat SC who are in the Qatar Stars League.
Subject: ['Alaa Abdul-Zahra', 'Al Kharaitiyat SC']
Predicate: ['club', 'position']
Object: ['Al Kharaitiyat SC', 'Qatar Stars League']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Kharaitiyat SC', '__subject__ Al Kharaitiyat SC __predicate__ position __object__ Qatar Stars League']]
Text: Alaa Abdul Zahra plays for Al Kharaitiyat SC which is part of the Qatar Stars League.
Subject: ['Alaa Abdul-Zahra', 'Al Kharaitiyat SC']
Predicate: ['club', 'position']
Object: ['Al Kharaitiyat SC', 'Qatar Stars League']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Kharaitiyat SC', '__subject__ Al Kharaitiyat SC __predicate__ position __object__ Qatar Stars League']]
Text: Alaa Abdul Zahra's club is AL Kharaitiyat SC which plays in the Qatar Stars League.
Subject: ['Alaa Abdul-Zahra', 'Al Kharaitiyat SC']
Predicate: ['club', 'position']
Object: ['Al Kharaitiyat SC', 'Qatar Stars League']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Iraq national under-20 football team', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Kharaitiyat SC']]
Text: Alaa Abdul-Zahra plays for the Iraq national under-20 football team and Al Kharaitiyat SC.
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['club', 'club']
Object: ['Iraq national under-20 football team', 'Al Kharaitiyat SC']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Iraq national under-20 football team', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Kharaitiyat SC']]
Text: Alaa Abdul Zahra plays for Al Kharaitiyat SC and the Iraq under 20 team.
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['club', 'club']
Object: ['Iraq national under-20 football team', 'Al Kharaitiyat SC']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Iraq national under-20 football team', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Kharaitiyat SC']]
Text: Alaa Abdul Zahra plays for the club AL Kharaitiyat SC and has represented the Iraq national Under 20 football team.
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['club', 'club']
Object: ['Iraq national under-20 football team', 'Al Kharaitiyat SC']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Shabab Al-Ordon Club', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Khor Sports Club']]
Text: Alaa Abdul-Zahra has payed for Shabab Al-Ordon Club and Al-Khor Sports Club.
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['club', 'club']
Object: ['Shabab Al-Ordon Club', 'Al-Khor Sports Club']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Shabab Al-Ordon Club', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Khor Sports Club']]
Text: Alaa Abdul-Zahra belongs to Shabab Al-Ordon Club and plays for Al-Khor Sports Club.
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['club', 'club']
Object: ['Shabab Al-Ordon Club', 'Al-Khor Sports Club']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Shabab Al-Ordon Club', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Khor Sports Club']]
Text: Alaa Abdul-Zahra has played for both Shabab Al-Ordon Club and Al-Khor Sports Club.
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['club', 'club']
Object: ['Shabab Al-Ordon Club', 'Al-Khor Sports Club']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Shabab Al-Ordon Club', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Kharaitiyat SC']]
Text: Alaa Abdul-Zahra', whose club is Shabab Al-Ordon, plays for Al Kharaitiyat SC.
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['club', 'club']
Object: ['Shabab Al-Ordon Club', 'Al Kharaitiyat SC']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Shabab Al-Ordon Club', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Kharaitiyat SC']]
Text: Alaa Abdul-Zahra's clubs are Shabab Al-Ordon and AL Kharaitiyat SC.
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['club', 'club']
Object: ['Shabab Al-Ordon Club', 'Al Kharaitiyat SC']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Shabab Al-Ordon Club', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Shorta SC']]
Text: Alaa Abdul Zahra plays for Al Shorta SC and his club is Shabab Al-Ordon .
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['club', 'club']
Object: ['Shabab Al-Ordon Club', 'Al Shorta SC']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Shabab Al-Ordon Club', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Shorta SC']]
Text: Al Shorta SC and Shabab Al-Ordon Club are former teams of Alaa Abdul-Zahra.
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['club', 'club']
Object: ['Shabab Al-Ordon Club', 'Al Shorta SC']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Shabab Al-Ordon Club', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Shorta SC']]
Text: Alaa Abdul-Zahra plays for Shabab Al-Ordon Club and Al Shorta SC.
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['club', 'club']
Object: ['Shabab Al-Ordon Club', 'Al Shorta SC']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Shabab Al-Ordon Club', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Iraq national under-20 football team']]
Text: Alaa Abdul-Zahra plays for the Iraq national under-20 football team and his club is Shabab Al-Ordon.
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['club', 'club']
Object: ['Shabab Al-Ordon Club', 'Iraq national under-20 football team']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Shabab Al-Ordon Club', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Iraq national under-20 football team']]
Text: Alaa Abdul-Zahra's club is Shabab Al-Ordon Club and he plays for the Iraq national under 20 football team.
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['club', 'club']
Object: ['Shabab Al-Ordon Club', 'Iraq national under-20 football team']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Shabab Al-Ordon Club', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Iraq national under-20 football team']]
Text: Alaa Abdul-Zahra's club is Shabab Al-Ordon and he plays for the Iraq under 20 team.
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['club', 'club']
Object: ['Shabab Al-Ordon Club', 'Iraq national under-20 football team']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ position __object__ Forward (football)', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Shorta SC']]
Text: Alaa Abdul-Zahra is a forward and his club is Al Shorta SC.
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['position', 'club']
Object: ['Forward (football)', 'Al Shorta SC']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ position __object__ Forward (football)', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Shorta SC']]
Text: Alaa Abdul Zahra is a forward for Al Shorta SC.
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['position', 'club']
Object: ['Forward (football)', 'Al Shorta SC']

Triple: [['__subject__ Alaa Abdul-Zahra __predicate__ position __object__ Forward (football)', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Shorta SC']]
Text: Footballer Alaa Abdul-Zahra is a forward and plays for the club Al Shorta SC.
Subject: ['Alaa Abdul-Zahra', 'Alaa Abdul-Zahra']
Predicate: ['position', 'club']
Object: ['Forward (football)', 'Al Shorta SC']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Accrington Stanley F.C.', '__subject__ Accrington Stanley F.C. __predicate__ ground __object__ Accrington']]
Text: Alan Martin played for the Accrington club, Accrington Stanley F.C.
Subject: ['Alan Martin (footballer)', 'Accrington Stanley F.C.']
Predicate: ['club', 'ground']
Object: ['Accrington Stanley F.C.', 'Accrington']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Accrington Stanley F.C.', '__subject__ Accrington Stanley F.C. __predicate__ ground __object__ Accrington']]
Text: Alan Martin played for Accrington Stanley FC, whose ground can be found in Accrington.
Subject: ['Alan Martin (footballer)', 'Accrington Stanley F.C.']
Predicate: ['club', 'ground']
Object: ['Accrington Stanley F.C.', 'Accrington']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Accrington Stanley F.C.', '__subject__ Accrington Stanley F.C. __predicate__ ground __object__ Accrington']]
Text: Alan Martin played football for Accrington Stanley F.C who are based in Accrington.
Subject: ['Alan Martin (footballer)', 'Accrington Stanley F.C.']
Predicate: ['club', 'ground']
Object: ['Accrington Stanley F.C.', 'Accrington']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Accrington Stanley F.C.', '__subject__ Alan Martin (footballer) __predicate__ club __object__ Hamilton Academical F.C.']]
Text: Alan Martin is a footballer for the Hamilton Academical FC and also for Accrington Stanley FC.
Subject: ['Alan Martin (footballer)', 'Alan Martin (footballer)']
Predicate: ['club', 'club']
Object: ['Accrington Stanley F.C.', 'Hamilton Academical F.C.']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Accrington Stanley F.C.', '__subject__ Alan Martin (footballer) __predicate__ club __object__ Hamilton Academical F.C.']]
Text: Alan Martin played football for Accrington Stanley F.C and now plays for Hamilton Academical F.C.
Subject: ['Alan Martin (footballer)', 'Alan Martin (footballer)']
Predicate: ['club', 'club']
Object: ['Accrington Stanley F.C.', 'Hamilton Academical F.C.']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Accrington Stanley F.C.', '__subject__ Alan Martin (footballer) __predicate__ club __object__ Hamilton Academical F.C.']]
Text: Alan Martin is a footballer for the Hamilton Academical FC and previously played for Accrington Stanley FC.
Subject: ['Alan Martin (footballer)', 'Alan Martin (footballer)']
Predicate: ['club', 'club']
Object: ['Accrington Stanley F.C.', 'Hamilton Academical F.C.']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Clyde F.C.', '__subject__ Clyde F.C. __predicate__ ground __object__ Broadwood Stadium']]
Text: Alan Martin played for the Clyde F.C. at Broadwood Stadium.
Subject: ['Alan Martin (footballer)', 'Clyde F.C.']
Predicate: ['club', 'ground']
Object: ['Clyde F.C.', 'Broadwood Stadium']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Clyde F.C.', '__subject__ Clyde F.C. __predicate__ ground __object__ Broadwood Stadium']]
Text: Alan Martin plays football for the Clyde FC club at The Broadwood Stadium.
Subject: ['Alan Martin (footballer)', 'Clyde F.C.']
Predicate: ['club', 'ground']
Object: ['Clyde F.C.', 'Broadwood Stadium']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Clyde F.C.', '__subject__ Clyde F.C. __predicate__ ground __object__ Broadwood Stadium']]
Text: Alan Martin played for Clyde F.C. whose home ground is Broadwood Stadium.
Subject: ['Alan Martin (footballer)', 'Clyde F.C.']
Predicate: ['club', 'ground']
Object: ['Clyde F.C.', 'Broadwood Stadium']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Hamilton Academical F.C.', '__subject__ Alan Martin (footballer) __predicate__ club __object__ Aldershot Town F.C.']]
Text: Hamilton Academicals FC and Aldershot Town FC are former clubs of the footballer Alan Martin.
Subject: ['Alan Martin (footballer)', 'Alan Martin (footballer)']
Predicate: ['club', 'club']
Object: ['Hamilton Academical F.C.', 'Aldershot Town F.C.']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Hamilton Academical F.C.', '__subject__ Alan Martin (footballer) __predicate__ club __object__ Aldershot Town F.C.']]
Text: The footballer Alan Martin has previously played for Aldershot Town FC and Hamilton Academicals FC.
Subject: ['Alan Martin (footballer)', 'Alan Martin (footballer)']
Predicate: ['club', 'club']
Object: ['Hamilton Academical F.C.', 'Aldershot Town F.C.']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Hamilton Academical F.C.', '__subject__ Alan Martin (footballer) __predicate__ club __object__ Aldershot Town F.C.']]
Text: Alan Martin is a footballer for Aldershot Town FC and played for Hamilton Academical FC.
Subject: ['Alan Martin (footballer)', 'Alan Martin (footballer)']
Predicate: ['club', 'club']
Object: ['Hamilton Academical F.C.', 'Aldershot Town F.C.']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Hamilton Academical F.C.', '__subject__ Alan Martin (footballer) __predicate__ club __object__ Crewe Alexandra F.C.']]
Text: Alan Martin plays for Hamilton Academical F.C. and Crewe Alexandra F.C.
Subject: ['Alan Martin (footballer)', 'Alan Martin (footballer)']
Predicate: ['club', 'club']
Object: ['Hamilton Academical F.C.', 'Crewe Alexandra F.C.']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Hamilton Academical F.C.', '__subject__ Alan Martin (footballer) __predicate__ club __object__ Crewe Alexandra F.C.']]
Text: Alan Martin is a footballer for the Hamilton Academical FC and also Crewe Alexandra F.C.
Subject: ['Alan Martin (footballer)', 'Alan Martin (footballer)']
Predicate: ['club', 'club']
Object: ['Hamilton Academical F.C.', 'Crewe Alexandra F.C.']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Hamilton Academical F.C.', '__subject__ Alan Martin (footballer) __predicate__ club __object__ Crewe Alexandra F.C.']]
Text: Alan Martin is a footballer for the Crewe Alexandra FC and Hamilton Academicals.
Subject: ['Alan Martin (footballer)', 'Alan Martin (footballer)']
Predicate: ['club', 'club']
Object: ['Hamilton Academical F.C.', 'Crewe Alexandra F.C.']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Hamilton Academical F.C.', '__subject__ Hamilton Academical F.C. __predicate__ ground __object__ Hamilton, South Lanarkshire']]
Text: Alan Martin played for Hamilton Academical F.C. where the ground is located in South Lanarkshire.
Subject: ['Alan Martin (footballer)', 'Hamilton Academical F.C.']
Predicate: ['club', 'ground']
Object: ['Hamilton Academical F.C.', 'Hamilton, South Lanarkshire']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Hamilton Academical F.C.', '__subject__ Hamilton Academical F.C. __predicate__ ground __object__ Hamilton, South Lanarkshire']]
Text: The footballer Alan Martin played for Hamilton Academicals FC, located in Hamilton, South Lanarkshire.
Subject: ['Alan Martin (footballer)', 'Hamilton Academical F.C.']
Predicate: ['club', 'ground']
Object: ['Hamilton Academical F.C.', 'Hamilton, South Lanarkshire']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Hamilton Academical F.C.', '__subject__ Hamilton Academical F.C. __predicate__ ground __object__ Hamilton, South Lanarkshire']]
Text: Alan Martin is a footballer for the Hamilton Academical FC who play in Hamilton, South Lanarkshire.
Subject: ['Alan Martin (footballer)', 'Hamilton Academical F.C.']
Predicate: ['club', 'ground']
Object: ['Hamilton Academical F.C.', 'Hamilton, South Lanarkshire']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Scotland national under-21 football team', '__subject__ Scotland national under-21 football team __predicate__ coach __object__ Ricky Sbragia']]
Text: Alan Martin played for the Scotland national under 21 team, which is managed by Ricky Sbragia.
Subject: ['Alan Martin (footballer)', 'Scotland national under-21 football team']
Predicate: ['club', 'coach']
Object: ['Scotland national under-21 football team', 'Ricky Sbragia']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Scotland national under-21 football team', '__subject__ Scotland national under-21 football team __predicate__ coach __object__ Ricky Sbragia']]
Text: The footballer Alan Martin plays in the Scottish National under 21 football team who are coached by Ricky Sbragia.
Subject: ['Alan Martin (footballer)', 'Scotland national under-21 football team']
Predicate: ['club', 'coach']
Object: ['Scotland national under-21 football team', 'Ricky Sbragia']

Triple: [['__subject__ Alan Martin (footballer) __predicate__ club __object__ Scotland national under-21 football team', '__subject__ Scotland national under-21 football team __predicate__ coach __object__ Ricky Sbragia']]
Text: Alan Martin played for the Scotland under 21 football team, whose coach is Ricky Sbragia.
Subject: ['Alan Martin (footballer)', 'Scotland national under-21 football team']
Predicate: ['club', 'coach']
Object: ['Scotland national under-21 football team', 'Ricky Sbragia']

Triple: [['__subject__ Aleksander Barkov, Jr. __predicate__ birthDate __object__ 1995-09-02', '__subject__ Aleksander Barkov, Jr. __predicate__ birthPlace __object__ Tampere, Finland']]
Text: Aleksander Barkov Jr was born 1995-09-02 in Tampere, Finland.
Subject: ['Aleksander Barkov, Jr.', 'Aleksander Barkov, Jr.']
Predicate: ['birthDate', 'birthPlace']
Object: ['1995-09-02', 'Tampere, Finland']

Triple: [['__subject__ Aleksander Barkov, Jr. __predicate__ birthDate __object__ 1995-09-02', '__subject__ Aleksander Barkov, Jr. __predicate__ birthPlace __object__ Tampere, Finland']]
Text: Aleksander Barkov Junior was born in Tampere, Finland on 2 September 1995.
Subject: ['Aleksander Barkov, Jr.', 'Aleksander Barkov, Jr.']
Predicate: ['birthDate', 'birthPlace']
Object: ['1995-09-02', 'Tampere, Finland']

Triple: [['__subject__ Aleksander Barkov, Jr. __predicate__ birthYear __object__ 1995', '__subject__ Aleksander Barkov, Jr. __predicate__ birthPlace __object__ Tampere, Finland']]
Text: Aleksander Barkov Jr . was born in Tampere, Finland in 1995.
Subject: ['Aleksander Barkov, Jr.', 'Aleksander Barkov, Jr.']
Predicate: ['birthYear', 'birthPlace']
Object: ['1995', 'Tampere, Finland']

Triple: [['__subject__ Aleksander Barkov, Jr. __predicate__ birthYear __object__ 1995', '__subject__ Aleksander Barkov, Jr. __predicate__ birthPlace __object__ Tampere, Finland']]
Text: Aleksander Barkov Jr was born in 1995 in Tampere. Finland.
Subject: ['Aleksander Barkov, Jr.', 'Aleksander Barkov, Jr.']
Predicate: ['birthYear', 'birthPlace']
Object: ['1995', 'Tampere, Finland']

Triple: [['__subject__ Aleksander Barkov, Jr. __predicate__ birthYear __object__ 1995', '__subject__ Aleksander Barkov, Jr. __predicate__ birthPlace __object__ Tampere, Finland']]
Text: Aleksander Barkov Jr was born in 1995 in Tampere, Finland.
Subject: ['Aleksander Barkov, Jr.', 'Aleksander Barkov, Jr.']
Predicate: ['birthYear', 'birthPlace']
Object: ['1995', 'Tampere, Finland']

Triple: [['__subject__ Aleksander Barkov, Jr. __predicate__ birthYear __object__ 1995', '__subject__ Aleksander Barkov, Jr. __predicate__ club __object__ Florida Panthers']]
Text: Born in 1995, Aleksander Barkov Jr plays for the Florida Panthers.
Subject: ['Aleksander Barkov, Jr.', 'Aleksander Barkov, Jr.']
Predicate: ['birthYear', 'club']
Object: ['1995', 'Florida Panthers']

Triple: [['__subject__ Aleksander Barkov, Jr. __predicate__ birthYear __object__ 1995', '__subject__ Aleksander Barkov, Jr. __predicate__ club __object__ Florida Panthers']]
Text: Aleksander Barkov, Jr. was born in 1995 and has played for the Florida Panthers.
Subject: ['Aleksander Barkov, Jr.', 'Aleksander Barkov, Jr.']
Predicate: ['birthYear', 'club']
Object: ['1995', 'Florida Panthers']

Triple: [['__subject__ Aleksander Barkov, Jr. __predicate__ draftTeam __object__ Florida Panthers', '__subject__ Florida Panthers __predicate__ generalManager __object__ Dale Tallon']]
Text: Aleksander Barkov Jr's draft team was the Florida Panthers whose general manager is Dale Tallon.
Subject: ['Aleksander Barkov, Jr.', 'Florida Panthers']
Predicate: ['draftTeam', 'generalManager']
Object: ['Florida Panthers', 'Dale Tallon']

Triple: [['__subject__ Aleksander Barkov, Jr. __predicate__ draftTeam __object__ Florida Panthers', '__subject__ Florida Panthers __predicate__ generalManager __object__ Dale Tallon']]
Text: Aleksander Barkov Jr's draft team is the Florida Panthers which is managed by Dale Tallon.
Subject: ['Aleksander Barkov, Jr.', 'Florida Panthers']
Predicate: ['draftTeam', 'generalManager']
Object: ['Florida Panthers', 'Dale Tallon']

Triple: [['__subject__ Aleksander Barkov, Jr. __predicate__ league __object__ National Hockey League', '__subject__ National Hockey League __predicate__ mostChampions __object__ Montreal Canadiens']]
Text: Aleksander Barkov Jr. plays in the National Hockey League where the Montreal Canadiens have won the most championships.
Subject: ['Aleksander Barkov, Jr.', 'National Hockey League']
Predicate: ['league', 'mostChampions']
Object: ['National Hockey League', 'Montreal Canadiens']

Triple: [['__subject__ Aleksander Barkov, Jr. __predicate__ league __object__ National Hockey League', '__subject__ National Hockey League __predicate__ mostChampions __object__ Montreal Canadiens']]
Text: Aleksander Barkov Jr. plays in the National Hockey League where most championships have been won by the Montreal Canadiens.
Subject: ['Aleksander Barkov, Jr.', 'National Hockey League']
Predicate: ['league', 'mostChampions']
Object: ['National Hockey League', 'Montreal Canadiens']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ birthPlace __object__ Moscow', '__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow']]
Text: Aleksandr Chumakov was born in Moscow, Russia and plays for is FC Torpedo Moscow.
Subject: ['Aleksandr Chumakov', 'Aleksandr Chumakov']
Predicate: ['birthPlace', 'club']
Object: ['Moscow', 'FC Torpedo Moscow']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ birthPlace __object__ Moscow', '__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow']]
Text: Aleksandr Chumakov plays for is FC Torpedo Moscow which is where he was born.
Subject: ['Aleksandr Chumakov', 'Aleksandr Chumakov']
Predicate: ['birthPlace', 'club']
Object: ['Moscow', 'FC Torpedo Moscow']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ birthPlace __object__ Moscow', '__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow']]
Text: Aleksandr Chumakov was born in Moscow, Russia and has played for FC Torpedo Moscow.
Subject: ['Aleksandr Chumakov', 'Aleksandr Chumakov']
Predicate: ['birthPlace', 'club']
Object: ['Moscow', 'FC Torpedo Moscow']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow', '__subject__ Aleksandr Chumakov __predicate__ birthPlace __object__ Soviet Union']]
Text: Aleksandr Chumakov was born in the Soviet Union and his club was FC Torpedo Moscow.
Subject: ['Aleksandr Chumakov', 'Aleksandr Chumakov']
Predicate: ['club', 'birthPlace']
Object: ['FC Torpedo Moscow', 'Soviet Union']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow', '__subject__ Aleksandr Chumakov __predicate__ birthPlace __object__ Soviet Union']]
Text: Aleksandr Chumakov, who was born in the Soviet Union, has played for FC Torpedo Moscow.
Subject: ['Aleksandr Chumakov', 'Aleksandr Chumakov']
Predicate: ['club', 'birthPlace']
Object: ['FC Torpedo Moscow', 'Soviet Union']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow', '__subject__ Aleksandr Chumakov __predicate__ birthPlace __object__ Soviet Union']]
Text: Aleksandr Chumakov was born in the Soviet Union and played for FC Torpedo Moscow.
Subject: ['Aleksandr Chumakov', 'Aleksandr Chumakov']
Predicate: ['club', 'birthPlace']
Object: ['FC Torpedo Moscow', 'Soviet Union']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow', '__subject__ FC Torpedo Moscow __predicate__ chairman __object__ Aleksandr Tukmanov']]
Text: Aleksandr Chumakov was in the Torpedo Moscow FC whose chairman is Aleksandr Tukmanov.
Subject: ['Aleksandr Chumakov', 'FC Torpedo Moscow']
Predicate: ['club', 'chairman']
Object: ['FC Torpedo Moscow', 'Aleksandr Tukmanov']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow', '__subject__ FC Torpedo Moscow __predicate__ chairman __object__ Aleksandr Tukmanov']]
Text: Aleksandr Chumakov played for FC Torpedo Moscow, the chairman of which is Aleksandr Tukmanov.
Subject: ['Aleksandr Chumakov', 'FC Torpedo Moscow']
Predicate: ['club', 'chairman']
Object: ['FC Torpedo Moscow', 'Aleksandr Tukmanov']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ club __object__ Soviet Union national football team', '__subject__ Aleksandr Chumakov __predicate__ birthPlace __object__ Moscow']]
Text: Aleksandr Chumakov was born in Moscow and plays for the Soviet Union national football team.
Subject: ['Aleksandr Chumakov', 'Aleksandr Chumakov']
Predicate: ['club', 'birthPlace']
Object: ['Soviet Union national football team', 'Moscow']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ club __object__ Soviet Union national football team', '__subject__ Aleksandr Chumakov __predicate__ birthPlace __object__ Moscow']]
Text: Aleksandr Chumakov was born in Moscow and has represented the Soviet Union national football team.
Subject: ['Aleksandr Chumakov', 'Aleksandr Chumakov']
Predicate: ['club', 'birthPlace']
Object: ['Soviet Union national football team', 'Moscow']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ club __object__ Soviet Union national football team', '__subject__ Aleksandr Chumakov __predicate__ birthPlace __object__ Soviet Union']]
Text: Aleksandr Chumakov was born in the Soviet Union and was a member of the Soviet Union national football team.
Subject: ['Aleksandr Chumakov', 'Aleksandr Chumakov']
Predicate: ['club', 'birthPlace']
Object: ['Soviet Union national football team', 'Soviet Union']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ club __object__ Soviet Union national football team', '__subject__ Aleksandr Chumakov __predicate__ birthPlace __object__ Soviet Union']]
Text: Soviet Union born Aleksandr Chumakov has represented his national football team.
Subject: ['Aleksandr Chumakov', 'Aleksandr Chumakov']
Predicate: ['club', 'birthPlace']
Object: ['Soviet Union national football team', 'Soviet Union']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ club __object__ Soviet Union national football team', '__subject__ Aleksandr Chumakov __predicate__ birthPlace __object__ Soviet Union']]
Text: Aleksandr Chumakov was born in the Soviet Union and plays for the Soviet Union national football team.
Subject: ['Aleksandr Chumakov', 'Aleksandr Chumakov']
Predicate: ['club', 'birthPlace']
Object: ['Soviet Union national football team', 'Soviet Union']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ club __object__ Soviet Union national football team', '__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow']]
Text: Aleksandr Chumakov played for FC Torpedo Moscow and represented the Soviet Union national football team.
Subject: ['Aleksandr Chumakov', 'Aleksandr Chumakov']
Predicate: ['club', 'club']
Object: ['Soviet Union national football team', 'FC Torpedo Moscow']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ club __object__ Soviet Union national football team', '__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow']]
Text: Aleksandr Chumakov plays for FC Torpedo Moscow and the Soviet Union national football team.
Subject: ['Aleksandr Chumakov', 'Aleksandr Chumakov']
Predicate: ['club', 'club']
Object: ['Soviet Union national football team', 'FC Torpedo Moscow']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ club __object__ Soviet Union national football team', '__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow']]
Text: Aleksandr Chumakov was a member of the Soviet Union national football team and played for FC Torpedo Moscow.
Subject: ['Aleksandr Chumakov', 'Aleksandr Chumakov']
Predicate: ['club', 'club']
Object: ['Soviet Union national football team', 'FC Torpedo Moscow']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ deathPlace __object__ Moscow', '__subject__ Moscow __predicate__ leader __object__ Sergey Sobyanin']]
Text: Aleksandr Chumakov died in Moscow, where the leader is Sergey Sobyanin.
Subject: ['Aleksandr Chumakov', 'Moscow']
Predicate: ['deathPlace', 'leader']
Object: ['Moscow', 'Sergey Sobyanin']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ deathPlace __object__ Moscow', '__subject__ Moscow __predicate__ leader __object__ Sergey Sobyanin']]
Text: Moscow is led by Sergey Sobyanin and is the deathplace of Aleksandr Chumakov.
Subject: ['Aleksandr Chumakov', 'Moscow']
Predicate: ['deathPlace', 'leader']
Object: ['Moscow', 'Sergey Sobyanin']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ deathPlace __object__ Moscow', '__subject__ Moscow __predicate__ leader __object__ Sergey Sobyanin']]
Text: Aleksandr Chumakov passed away in Moscow whose leader is Sergey Sobyanin.
Subject: ['Aleksandr Chumakov', 'Moscow']
Predicate: ['deathPlace', 'leader']
Object: ['Moscow', 'Sergey Sobyanin']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ deathPlace __object__ Russia', '__subject__ Russia __predicate__ leader __object__ Valentina Matviyenko']]
Text: Aleksandr Chumakov died in Russia, where Valentina Matviyenko is the leader.
Subject: ['Aleksandr Chumakov', 'Russia']
Predicate: ['deathPlace', 'leader']
Object: ['Russia', 'Valentina Matviyenko']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ deathPlace __object__ Russia', '__subject__ Russia __predicate__ leader __object__ Valentina Matviyenko']]
Text: Aleksandr Chumakov died in Russia where Valentina Matviyenko is a leader.
Subject: ['Aleksandr Chumakov', 'Russia']
Predicate: ['deathPlace', 'leader']
Object: ['Russia', 'Valentina Matviyenko']

Triple: [['__subject__ Aleksandr Chumakov __predicate__ deathPlace __object__ Russia', '__subject__ Russia __predicate__ leader __object__ Valentina Matviyenko']]
Text: Valentina Matviyenko is a leader in Russia which is where Aleksandr Chumakov died.
Subject: ['Aleksandr Chumakov', 'Russia']
Predicate: ['deathPlace', 'leader']
Object: ['Russia', 'Valentina Matviyenko']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Amkar Perm', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Tom Tomsk']]
Text: Aleksandr Prudnikov plays for FC Amkar Perm and FC Tom Tomsk.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Amkar Perm', 'FC Tom Tomsk']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Amkar Perm', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Tom Tomsk']]
Text: Aleksandr Prudnikov played for FC Amkar Perm and his club is Tom Tomsk.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Amkar Perm', 'FC Tom Tomsk']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Amkar Perm', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Tom Tomsk']]
Text: Aleksandr Prudnikov plays for FC Tom Tomsk and FC Amkar Perm football club.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Amkar Perm', 'FC Tom Tomsk']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Amkar Perm', '__subject__ FC Amkar Perm __predicate__ manager __object__ Gadzhi Gadzhiyev']]
Text: Aleksandr Prudnikov plays for the FC Amkar Perm football club managed by Gadzhi Gadzhiyev.
Subject: ['Aleksandr Prudnikov', 'FC Amkar Perm']
Predicate: ['club', 'manager']
Object: ['FC Amkar Perm', 'Gadzhi Gadzhiyev']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Amkar Perm', '__subject__ FC Amkar Perm __predicate__ manager __object__ Gadzhi Gadzhiyev']]
Text: Aleksandr Prudnikov played for FC Amkar Perm football club, where the manager is Gadzhi Gadzhiyev.
Subject: ['Aleksandr Prudnikov', 'FC Amkar Perm']
Predicate: ['club', 'manager']
Object: ['FC Amkar Perm', 'Gadzhi Gadzhiyev']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Kuban Krasnodar', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Tom Tomsk']]
Text: Aleksandr Prudnikov's club is FC Tom Tomsk and he also plays for FC Kuban Krasnodar.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Kuban Krasnodar', 'FC Tom Tomsk']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Kuban Krasnodar', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Tom Tomsk']]
Text: Aleksandr Prudnikov plays football for FC Kuban Krasnodar and FC Tom Tomsk.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Kuban Krasnodar', 'FC Tom Tomsk']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Kuban Krasnodar', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Tom Tomsk']]
Text: Aleksandr Prudnikov plays for FC Tom Tomsk and FC Kuban Krasnodar club.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Kuban Krasnodar', 'FC Tom Tomsk']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Kuban Krasnodar', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ Sparta Prague']]
Text: Aleksandr Prudnikov's club is called Sparta Prague and he plays for FC Kuban Krasnodar.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Kuban Krasnodar', 'Sparta Prague']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Kuban Krasnodar', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ Sparta Prague']]
Text: Aleksandr Prudnikov plays for Sparta Prague and FC Kuban Krasnodar.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Kuban Krasnodar', 'Sparta Prague']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Kuban Krasnodar', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ Sparta Prague']]
Text: Aleksandr Prudnikov plays for FC Kuban Krasnodar and his club is called Sparta Prague.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Kuban Krasnodar', 'Sparta Prague']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Spartak Moscow', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Amkar Perm']]
Text: Aleksandr Prudnikov has played for FC Amkar Perm and for FC Spartak Moscow.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Spartak Moscow', 'FC Amkar Perm']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Spartak Moscow', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Amkar Perm']]
Text: Aleksandr Prudnikov plays for FC Spartak Moscow and also for FC Amkar Perm football club.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Spartak Moscow', 'FC Amkar Perm']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Spartak Moscow', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Amkar Perm']]
Text: Aleksandr Prudnikov plays for FC Amkar Perm and played for FC Spartak Moscow.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Spartak Moscow', 'FC Amkar Perm']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Spartak Moscow', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Tom Tomsk']]
Text: Aleksandr Prudnikov plays for FC Spartak Moscow and FC Tom Tomsk.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Spartak Moscow', 'FC Tom Tomsk']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Spartak Moscow', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Tom Tomsk']]
Text: Aleksandr Prudnikov plays for FC Tom Tomsk and previously played for FC Spartak Moscow.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Spartak Moscow', 'FC Tom Tomsk']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Spartak Moscow', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Tom Tomsk']]
Text: Aleksandr Prudnikov plays for FC Tom Tomsk and the FC Spartak Moscow club.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Spartak Moscow', 'FC Tom Tomsk']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Spartak Moscow', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ Sparta Prague']]
Text: Former clubs of Aleksandr Prudnikov include Sparta Prague and FC Spartak Moscow.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Spartak Moscow', 'Sparta Prague']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Spartak Moscow', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ Sparta Prague']]
Text: Aleksandr Prudnikov played for FC Spartak Moscow and his club is called Sparta Prague.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Spartak Moscow', 'Sparta Prague']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Spartak Moscow', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ Sparta Prague']]
Text: Aleksandr Prudnikov's club is called Sparta Prague or FC Spartak Moscow.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Spartak Moscow', 'Sparta Prague']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Terek Grozny', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Alania Vladikavkaz']]
Text: Aleksandr Prudnikov played for FC Terek Grozny however he now plays for FC Alania Vladikavkaz.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Terek Grozny', 'FC Alania Vladikavkaz']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Terek Grozny', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Alania Vladikavkaz']]
Text: Former clubs of Aleksandr Prudnikov include FC Terek Grozny and FC Alania Vladikavkaz.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Terek Grozny', 'FC Alania Vladikavkaz']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Terek Grozny', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Alania Vladikavkaz']]
Text: Aleksandr Prudnikov is in the FC Terek Grozny club and he plays for FC Alania Vladikavkaz.
Subject: ['Aleksandr Prudnikov', 'Aleksandr Prudnikov']
Predicate: ['club', 'club']
Object: ['FC Terek Grozny', 'FC Alania Vladikavkaz']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Terek Grozny', '__subject__ FC Terek Grozny __predicate__ manager __object__ Rashid Rakhimov']]
Text: Aleksandr Prudnikov played for FC Terek Grozny managed by Rashid Rakhimov.
Subject: ['Aleksandr Prudnikov', 'FC Terek Grozny']
Predicate: ['club', 'manager']
Object: ['FC Terek Grozny', 'Rashid Rakhimov']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Terek Grozny', '__subject__ FC Terek Grozny __predicate__ manager __object__ Rashid Rakhimov']]
Text: Aleksandr Prudnikov plays for FC Terek Grozny which is managed by Rashid Rakhimov.
Subject: ['Aleksandr Prudnikov', 'FC Terek Grozny']
Predicate: ['club', 'manager']
Object: ['FC Terek Grozny', 'Rashid Rakhimov']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Terek Grozny', '__subject__ FC Terek Grozny __predicate__ manager __object__ Rashid Rakhimov']]
Text: Aleksandr Prudnikov played for FC Terek Grozny which is managed by Rashid Rakhimov.
Subject: ['Aleksandr Prudnikov', 'FC Terek Grozny']
Predicate: ['club', 'manager']
Object: ['FC Terek Grozny', 'Rashid Rakhimov']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ currentclub __object__ FC Amkar Perm', '__subject__ FC Amkar Perm __predicate__ manager __object__ Gadzhi Gadzhiyev']]
Text: Aleksandr Prudnikov currently plays for the team FC Amkar Perm, which is managed by Gadzhi Gadzhiyev.
Subject: ['Aleksandr Prudnikov', 'FC Amkar Perm']
Predicate: ['currentclub', 'manager']
Object: ['FC Amkar Perm', 'Gadzhi Gadzhiyev']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ currentclub __object__ FC Amkar Perm', '__subject__ FC Amkar Perm __predicate__ manager __object__ Gadzhi Gadzhiyev']]
Text: Aleksandr Prudnikov plays for FC Amkar Perm which is managed by Gadzhi Gadzhiyev.
Subject: ['Aleksandr Prudnikov', 'FC Amkar Perm']
Predicate: ['currentclub', 'manager']
Object: ['FC Amkar Perm', 'Gadzhi Gadzhiyev']

Triple: [['__subject__ Aleksandr Prudnikov __predicate__ currentclub __object__ FC Amkar Perm', '__subject__ FC Amkar Perm __predicate__ manager __object__ Gadzhi Gadzhiyev']]
Text: Aleksandr Prudnikov's current club is FC Amkar Perm which is managed by Gadzhi Gadzhiyev.
Subject: ['Aleksandr Prudnikov', 'FC Amkar Perm']
Predicate: ['currentclub', 'manager']
Object: ['FC Amkar Perm', 'Gadzhi Gadzhiyev']

Triple: [['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Karpaty Lviv', '__subject__ Aleksandre Guruli __predicate__ club __object__ FC Dila Gori']]
Text: Aleksandre Guruli played for FC Karpaty Lviv and FC Dila Gori.
Subject: ['Aleksandre Guruli', 'Aleksandre Guruli']
Predicate: ['club', 'club']
Object: ['FC Karpaty Lviv', 'FC Dila Gori']

Triple: [['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Karpaty Lviv', '__subject__ Aleksandre Guruli __predicate__ club __object__ FC Dila Gori']]
Text: Aleksandre Guruli plays for FC Dila Gori and used to play for FC Karpaty Lviv.
Subject: ['Aleksandre Guruli', 'Aleksandre Guruli']
Predicate: ['club', 'club']
Object: ['FC Karpaty Lviv', 'FC Dila Gori']

Triple: [['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Karpaty Lviv', '__subject__ Aleksandre Guruli __predicate__ club __object__ FC Dila Gori']]
Text: Aleksandre Guruli has represented the clubs FC Dila Gori and FC Karpaty Lviv.
Subject: ['Aleksandre Guruli', 'Aleksandre Guruli']
Predicate: ['club', 'club']
Object: ['FC Karpaty Lviv', 'FC Dila Gori']

Triple: [['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Karpaty Lviv', '__subject__ Aleksandre Guruli __predicate__ club __object__ FC Zestafoni']]
Text: Aleksandre Guruli played for FC Karpaty Lviv and FC Zestafoni.
Subject: ['Aleksandre Guruli', 'Aleksandre Guruli']
Predicate: ['club', 'club']
Object: ['FC Karpaty Lviv', 'FC Zestafoni']

Triple: [['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Karpaty Lviv', '__subject__ Aleksandre Guruli __predicate__ club __object__ FC Zestafoni']]
Text: Former clubs of Aleksandre Guruli include FC Karpaty Lviv and FC Zestafoni.
Subject: ['Aleksandre Guruli', 'Aleksandre Guruli']
Predicate: ['club', 'club']
Object: ['FC Karpaty Lviv', 'FC Zestafoni']

Triple: [['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Karpaty Lviv', '__subject__ Aleksandre Guruli __predicate__ club __object__ FC Zestafoni']]
Text: Aleksandre Guruli is in the FC Zestafoni club and he played for FC Karpaty Lviv.
Subject: ['Aleksandre Guruli', 'Aleksandre Guruli']
Predicate: ['club', 'club']
Object: ['FC Karpaty Lviv', 'FC Zestafoni']

Triple: [['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Karpaty Lviv', '__subject__ Aleksandre Guruli __predicate__ club __object__ US Boulogne']]
Text: Aleksandre Guruli plays for FC Karpaty Lviv club and also for US Boulogne.
Subject: ['Aleksandre Guruli', 'Aleksandre Guruli']
Predicate: ['club', 'club']
Object: ['FC Karpaty Lviv', 'US Boulogne']

Triple: [['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Karpaty Lviv', '__subject__ Aleksandre Guruli __predicate__ club __object__ US Boulogne']]
Text: Clubs played for by Aleksandre Guruli include US Boulogne and FC Karpaty Lviv.
Subject: ['Aleksandre Guruli', 'Aleksandre Guruli']
Predicate: ['club', 'club']
Object: ['FC Karpaty Lviv', 'US Boulogne']

Triple: [['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Karpaty Lviv', '__subject__ Aleksandre Guruli __predicate__ club __object__ US Boulogne']]
Text: Aleksandre Guruli plays for FC Karpaty Lviv and US Boulogne.
Subject: ['Aleksandre Guruli', 'Aleksandre Guruli']
Predicate: ['club', 'club']
Object: ['FC Karpaty Lviv', 'US Boulogne']

Triple: [['__subject__ Aleksandre Guruli __predicate__ club __object__ Olympique Lyonnais', '__subject__ Olympique Lyonnais __predicate__ ground __object__ Parc Olympique Lyonnais']]
Text: Aleksandre Guruli played for the Olympique Lyonnais club who play their home games at the Parc Olympique Lyonnais.
Subject: ['Aleksandre Guruli', 'Olympique Lyonnais']
Predicate: ['club', 'ground']
Object: ['Olympique Lyonnais', 'Parc Olympique Lyonnais']

Triple: [['__subject__ Aleksandre Guruli __predicate__ club __object__ Olympique Lyonnais', '__subject__ Olympique Lyonnais __predicate__ ground __object__ Parc Olympique Lyonnais']]
Text: Aleksandre Guruli played for the Olympique Lyonnais club whose home ground is the Parc Olympique Lyonnais stadium.
Subject: ['Aleksandre Guruli', 'Olympique Lyonnais']
Predicate: ['club', 'ground']
Object: ['Olympique Lyonnais', 'Parc Olympique Lyonnais']

Triple: [['__subject__ Aleksandre Guruli __predicate__ club __object__ Olympique Lyonnais', '__subject__ Olympique Lyonnais __predicate__ ground __object__ Parc Olympique Lyonnais']]
Text: Aleksandre Guruli's club is Olympique Lyonnais whose home ground is the Parc Olympique Lyonnais stadium.
Subject: ['Aleksandre Guruli', 'Olympique Lyonnais']
Predicate: ['club', 'ground']
Object: ['Olympique Lyonnais', 'Parc Olympique Lyonnais']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ A.C. Milan', '__subject__ A.C. Milan __predicate__ manager __object__ Siniša Mihajlović']]
Text: Alessio Romagnoli plays for A.C. Milan which is managed by Siniša Mihajlović .
Subject: ['Alessio Romagnoli', 'A.C. Milan']
Predicate: ['club', 'manager']
Object: ['A.C. Milan', 'Siniša Mihajlović']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ A.C. Milan', '__subject__ A.C. Milan __predicate__ manager __object__ Siniša Mihajlović']]
Text: Alessio Romagnoli plays for A.C. Milan managed by Sinisa Mihajlovic.
Subject: ['Alessio Romagnoli', 'A.C. Milan']
Predicate: ['club', 'manager']
Object: ['A.C. Milan', 'Siniša Mihajlović']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma', '__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']]
Text: Former clubs of Alessio Romagnoli include UC Sampdoria and AS Roma.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['A.S. Roma', 'U.C. Sampdoria']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma', '__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']]
Text: Alessio Romagnoli, a member of A.S. Roma, is connected to UC Sampdoria.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['A.S. Roma', 'U.C. Sampdoria']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma', '__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']]
Text: Alessio Romagnoli has previously played for AS Roma and UC Sampdoria.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['A.S. Roma', 'U.C. Sampdoria']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-16 football team', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma']]
Text: AS Roma player Alessio Romagnoli represented Italy at Under 16 level.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['Italy national under-16 football team', 'A.S. Roma']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-16 football team', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma']]
Text: Alessio Romagnoli plays for A S Roma and is also in the Italy national under 16's football team.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['Italy national under-16 football team', 'A.S. Roma']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-16 football team', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma']]
Text: Alessio Romagnoli plays for A.S. Roma and formerly for the Italian national under 16 football team.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['Italy national under-16 football team', 'A.S. Roma']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-16 football team', '__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']]
Text: Alessio Romagnoli is connected to UC Sampdoria of the Italy national under 16's football league.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['Italy national under-16 football team', 'U.C. Sampdoria']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-16 football team', '__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']]
Text: Alessio Romagnoli has represented U.C. Sampdoria in the Italy national under 16's football league.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['Italy national under-16 football team', 'U.C. Sampdoria']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-16 football team', '__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']]
Text: Alessio Romagnoli played for U.C. Sampdoria in the Italy national under-16 football league.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['Italy national under-16 football team', 'U.C. Sampdoria']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-16 football team', '__subject__ Italy national under-16 football team __predicate__ coach __object__ Daniele Zoratto']]
Text: Alessio Romagnoli played for the Italy national under-16 football team coached by Daniele Zoratto.
Subject: ['Alessio Romagnoli', 'Italy national under-16 football team']
Predicate: ['club', 'coach']
Object: ['Italy national under-16 football team', 'Daniele Zoratto']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-16 football team', '__subject__ Italy national under-16 football team __predicate__ coach __object__ Daniele Zoratto']]
Text: Alessio Romagnoli is in the Italy national under 16's football team which is coach by Daniele Zoratto.
Subject: ['Alessio Romagnoli', 'Italy national under-16 football team']
Predicate: ['club', 'coach']
Object: ['Italy national under-16 football team', 'Daniele Zoratto']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-16 football team', '__subject__ Italy national under-16 football team __predicate__ coach __object__ Daniele Zoratto']]
Text: Alessio Romagnoli played for the Italian national under 16 football team which is coached by Daniele Zoratto.
Subject: ['Alessio Romagnoli', 'Italy national under-16 football team']
Predicate: ['club', 'coach']
Object: ['Italy national under-16 football team', 'Daniele Zoratto']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-17 football team', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma']]
Text: Alessio Romagnoli is a member of the Italian national under 17 football team and plays for A.S. Roma.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['Italy national under-17 football team', 'A.S. Roma']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-17 football team', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma']]
Text: Alessio Romagnoli plays for AS Roma and the Italian under 17 teams.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['Italy national under-17 football team', 'A.S. Roma']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-17 football team', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma']]
Text: Alessio Romagnoli is a member of the Italian national under 17 football team and A.S. Roma.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['Italy national under-17 football team', 'A.S. Roma']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-17 football team', '__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']]
Text: Alessio Romagnoli plays for the Italy national under-17 football team and for the club U.C. Sampdoria.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['Italy national under-17 football team', 'U.C. Sampdoria']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-17 football team', '__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']]
Text: Alessio Romagnoli is in the club Italy national under 17's for the club U.C. Sampdoria.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['Italy national under-17 football team', 'U.C. Sampdoria']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-17 football team', '__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']]
Text: Footballer Alessio Romagnoli, who represented Italy at under 17 level, is connected to UC Sampdoria.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['Italy national under-17 football team', 'U.C. Sampdoria']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-17 football team', '__subject__ Italy national under-17 football team __predicate__ coach __object__ Alessandro Dal Canto']]
Text: Alessio Romagnoli plays for the Italy national under-17 football team which is coached by Alessandro Dal Canto .
Subject: ['Alessio Romagnoli', 'Italy national under-17 football team']
Predicate: ['club', 'coach']
Object: ['Italy national under-17 football team', 'Alessandro Dal Canto']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-17 football team', '__subject__ Italy national under-17 football team __predicate__ coach __object__ Alessandro Dal Canto']]
Text: Alessio Romagnoli is a member of the Italian national under 17 football team coached by Alessandro Dal Canto.
Subject: ['Alessio Romagnoli', 'Italy national under-17 football team']
Predicate: ['club', 'coach']
Object: ['Italy national under-17 football team', 'Alessandro Dal Canto']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-17 football team', '__subject__ Italy national under-17 football team __predicate__ coach __object__ Alessandro Dal Canto']]
Text: Alessio Romagnoli plays for the Italy national under-17 football team, where Alessandro Dal Canto is the coach.
Subject: ['Alessio Romagnoli', 'Italy national under-17 football team']
Predicate: ['club', 'coach']
Object: ['Italy national under-17 football team', 'Alessandro Dal Canto']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-19 football team', '__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']]
Text: Alessio Romagnoli's club is the Italy national under 19 football team and he is also connected to UC Sampdoria.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['Italy national under-19 football team', 'U.C. Sampdoria']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-19 football team', '__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']]
Text: Alessio Romagnoli is with the club U.C. Sampdoria. He is part of the club which is Italy's national under 19 football team.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['Italy national under-19 football team', 'U.C. Sampdoria']

Triple: [['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-19 football team', '__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']]
Text: Alessio Romagnoli used to play for the Italian national under-19 football team and U.C. Sampdoria.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['club', 'club']
Object: ['Italy national under-19 football team', 'U.C. Sampdoria']

Triple: [['__subject__ Alessio Romagnoli __predicate__ currentclub __object__ A.C. Milan', '__subject__ A.C. Milan __predicate__ manager __object__ Siniša Mihajlović']]
Text: Alessio Romagnoli's current club is AC Milan, which is managed by Siniša Mihajlović.
Subject: ['Alessio Romagnoli', 'A.C. Milan']
Predicate: ['currentclub', 'manager']
Object: ['A.C. Milan', 'Siniša Mihajlović']

Triple: [['__subject__ Alessio Romagnoli __predicate__ currentclub __object__ A.C. Milan', '__subject__ A.C. Milan __predicate__ manager __object__ Siniša Mihajlović']]
Text: Siniša Mihajlović manages A. C. Milan where Alessio Romagnoli currently plays.
Subject: ['Alessio Romagnoli', 'A.C. Milan']
Predicate: ['currentclub', 'manager']
Object: ['A.C. Milan', 'Siniša Mihajlović']

Triple: [['__subject__ Alessio Romagnoli __predicate__ currentclub __object__ A.C. Milan', '__subject__ A.C. Milan __predicate__ manager __object__ Siniša Mihajlović']]
Text: Alessio Romagnoli is currently with A.C. Milan whose manager is Sinisa Mihajlovic.
Subject: ['Alessio Romagnoli', 'A.C. Milan']
Predicate: ['currentclub', 'manager']
Object: ['A.C. Milan', 'Siniša Mihajlović']

Triple: [['__subject__ Alessio Romagnoli __predicate__ position __object__ Defender (football)', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma']]
Text: Alessio Romagnoli is a defender for A.S. Roma.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['position', 'club']
Object: ['Defender (football)', 'A.S. Roma']

Triple: [['__subject__ Alessio Romagnoli __predicate__ position __object__ Defender (football)', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma']]
Text: Alessio Romagnoli was a defender for AS Roma.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['position', 'club']
Object: ['Defender (football)', 'A.S. Roma']

Triple: [['__subject__ Alessio Romagnoli __predicate__ position __object__ Defender (football)', '__subject__ Alessio Romagnoli __predicate__ club __object__ A.S. Roma']]
Text: Alessio Romagnoli plays for A.S. Roma as a defender.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['position', 'club']
Object: ['Defender (football)', 'A.S. Roma']

Triple: [['__subject__ Alessio Romagnoli __predicate__ position __object__ Defender (football)', '__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']]
Text: Alessio Romagnoli plays for the club U.C. Sampdoria as one of the team's Defenders.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['position', 'club']
Object: ['Defender (football)', 'U.C. Sampdoria']

Triple: [['__subject__ Alessio Romagnoli __predicate__ position __object__ Defender (football)', '__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']]
Text: Alessio Romagnoli plays for the club U.C. Sampdoria as a defender.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['position', 'club']
Object: ['Defender (football)', 'U.C. Sampdoria']

Triple: [['__subject__ Alessio Romagnoli __predicate__ position __object__ Defender (football)', '__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']]
Text: Alessio Romagnoli, a defender, played for the club UC Sampdoria.
Subject: ['Alessio Romagnoli', 'Alessio Romagnoli']
Predicate: ['position', 'club']
Object: ['Defender (football)', 'U.C. Sampdoria']

Triple: [['__subject__ Alex Plante __predicate__ birthPlace __object__ Brandon, Manitoba', '__subject__ Alex Plante __predicate__ birthYear __object__ 1989']]
Text: Alex Plante was born in Brandon, Manitoba in 1989.
Subject: ['Alex Plante', 'Alex Plante']
Predicate: ['birthPlace', 'birthYear']
Object: ['Brandon, Manitoba', '1989']

Triple: [['__subject__ Alex Plante __predicate__ birthPlace __object__ Brandon, Manitoba', '__subject__ Alex Plante __predicate__ birthYear __object__ 1989']]
Text: Alex Plante's birth place is Brandon Manitoba, where he was born in 1989.
Subject: ['Alex Plante', 'Alex Plante']
Predicate: ['birthPlace', 'birthYear']
Object: ['Brandon, Manitoba', '1989']

Triple: [['__subject__ Alex Plante __predicate__ birthPlace __object__ Brandon, Manitoba', '__subject__ Alex Plante __predicate__ birthYear __object__ 1989']]
Text: Alex Plante was born in 1989 in Brandon, Manitoba.
Subject: ['Alex Plante', 'Alex Plante']
Predicate: ['birthPlace', 'birthYear']
Object: ['Brandon, Manitoba', '1989']

Triple: [['__subject__ Alex Plante __predicate__ birthPlace __object__ Brandon, Manitoba', '__subject__ Alex Plante __predicate__ club __object__ Anyang Halla']]
Text: Alex Plante has played for the club Anyang Halla and was born in Brandon Manitoba.
Subject: ['Alex Plante', 'Alex Plante']
Predicate: ['birthPlace', 'club']
Object: ['Brandon, Manitoba', 'Anyang Halla']

Triple: [['__subject__ Alex Plante __predicate__ birthPlace __object__ Brandon, Manitoba', '__subject__ Alex Plante __predicate__ club __object__ Anyang Halla']]
Text: Alex Plante was born in Brandon, Manitoba and plays for Anyang Halla.
Subject: ['Alex Plante', 'Alex Plante']
Predicate: ['birthPlace', 'club']
Object: ['Brandon, Manitoba', 'Anyang Halla']

Triple: [['__subject__ Alex Plante __predicate__ birthPlace __object__ Brandon, Manitoba', '__subject__ Alex Plante __predicate__ club __object__ Anyang Halla']]
Text: Alex Plante was born in Brandon, Manitoba and played for Anyang Halla.
Subject: ['Alex Plante', 'Alex Plante']
Predicate: ['birthPlace', 'club']
Object: ['Brandon, Manitoba', 'Anyang Halla']

Triple: [['__subject__ Alex Plante __predicate__ birthPlace __object__ Brandon, Manitoba', '__subject__ Brandon, Manitoba __predicate__ leader __object__ Larry Maguire']]
Text: Larry Maguire is the leader of Brandon, Manitoba, the birthplace of Alex Plante.
Subject: ['Alex Plante', 'Brandon, Manitoba']
Predicate: ['birthPlace', 'leader']
Object: ['Brandon, Manitoba', 'Larry Maguire']

Triple: [['__subject__ Alex Plante __predicate__ birthPlace __object__ Brandon, Manitoba', '__subject__ Brandon, Manitoba __predicate__ leader __object__ Larry Maguire']]
Text: Alex Plante was born in Brandon, Manitoba where the leader is Larry Maguire.
Subject: ['Alex Plante', 'Brandon, Manitoba']
Predicate: ['birthPlace', 'leader']
Object: ['Brandon, Manitoba', 'Larry Maguire']

Triple: [['__subject__ Alex Plante __predicate__ birthPlace __object__ Brandon, Manitoba', '__subject__ Brandon, Manitoba __predicate__ leader __object__ Larry Maguire']]
Text: Larry Maguire is the leader in Brandon, Manitoba which is where Alex Plante was born.
Subject: ['Alex Plante', 'Brandon, Manitoba']
Predicate: ['birthPlace', 'leader']
Object: ['Brandon, Manitoba', 'Larry Maguire']

Triple: [['__subject__ Alex Plante __predicate__ birthYear __object__ 1989', '__subject__ Alex Plante __predicate__ birthPlace __object__ Canada']]
Text: Alex Plante was born in Canada in 1989.
Subject: ['Alex Plante', 'Alex Plante']
Predicate: ['birthYear', 'birthPlace']
Object: ['1989', 'Canada']

Triple: [['__subject__ Alex Plante __predicate__ birthYear __object__ 1989', '__subject__ Alex Plante __predicate__ birthPlace __object__ Canada']]
Text: Alex Plante was born in 1989 in Canada.
Subject: ['Alex Plante', 'Alex Plante']
Predicate: ['birthYear', 'birthPlace']
Object: ['1989', 'Canada']

Triple: [['__subject__ Alex Plante __predicate__ club __object__ Anyang Halla', '__subject__ Alex Plante __predicate__ birthPlace __object__ Canada']]
Text: Alex Plante was born in Canada and plays for Anyang Halla.
Subject: ['Alex Plante', 'Alex Plante']
Predicate: ['club', 'birthPlace']
Object: ['Anyang Halla', 'Canada']

Triple: [['__subject__ Alex Plante __predicate__ club __object__ Anyang Halla', '__subject__ Alex Plante __predicate__ birthPlace __object__ Canada']]
Text: Alex Plante, who was born in Canada, played for the club Anyang Halla.
Subject: ['Alex Plante', 'Alex Plante']
Predicate: ['club', 'birthPlace']
Object: ['Anyang Halla', 'Canada']

Triple: [['__subject__ Alex Plante __predicate__ club __object__ Anyang Halla', '__subject__ Alex Plante __predicate__ birthPlace __object__ Canada']]
Text: Alex Plante who has played for the club Anyang Halla was born in Canada.
Subject: ['Alex Plante', 'Alex Plante']
Predicate: ['club', 'birthPlace']
Object: ['Anyang Halla', 'Canada']

Triple: [['__subject__ Alex Plante __predicate__ club __object__ Anyang Halla', '__subject__ Alex Plante __predicate__ birthPlace __object__ Manitoba']]
Text: Alex Plante was born in Manitoba and his club is Anyang Halla.
Subject: ['Alex Plante', 'Alex Plante']
Predicate: ['club', 'birthPlace']
Object: ['Anyang Halla', 'Manitoba']

Triple: [['__subject__ Alex Plante __predicate__ club __object__ Anyang Halla', '__subject__ Alex Plante __predicate__ birthPlace __object__ Manitoba']]
Text: Alex Plante, who was born in Manitoba, has played for the club Anyang Halla.
Subject: ['Alex Plante', 'Alex Plante']
Predicate: ['club', 'birthPlace']
Object: ['Anyang Halla', 'Manitoba']

Triple: [['__subject__ Alex Plante __predicate__ club __object__ Anyang Halla', '__subject__ Alex Plante __predicate__ birthPlace __object__ Manitoba']]
Text: Born in Manitoba, Alex Plante played for Anyang Halla club.
Subject: ['Alex Plante', 'Alex Plante']
Predicate: ['club', 'birthPlace']
Object: ['Anyang Halla', 'Manitoba']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Anadolu Efes S.K.', '__subject__ Alex Tyus __predicate__ league __object__ Euroleague']]
Text: Alex Tyus plays in the Euroleague and also for Anadolu Efes SK.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['club', 'league']
Object: ['Anadolu Efes S.K.', 'Euroleague']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Anadolu Efes S.K.', '__subject__ Alex Tyus __predicate__ league __object__ Euroleague']]
Text: Alex Tyus plays for the Euroleague club Anadolu Efes SK.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['club', 'league']
Object: ['Anadolu Efes S.K.', 'Euroleague']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Anadolu Efes S.K.', '__subject__ Alex Tyus __predicate__ league __object__ Euroleague']]
Text: Alex Tyus played for Anadolu Efes SK in the Euroleague.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['club', 'league']
Object: ['Anadolu Efes S.K.', 'Euroleague']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Anadolu Efes S.K.', '__subject__ Alex Tyus __predicate__ league __object__ Turkish Basketball Super League']]
Text: Alex Tyus has played for Anadolu Efes Sk in the Turkish Basketball Super League.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['club', 'league']
Object: ['Anadolu Efes S.K.', 'Turkish Basketball Super League']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Anadolu Efes S.K.', '__subject__ Alex Tyus __predicate__ league __object__ Turkish Basketball Super League']]
Text: Alex Tyus plays for Anadolu Efes SK in the Turkish Basketball Super League.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['club', 'league']
Object: ['Anadolu Efes S.K.', 'Turkish Basketball Super League']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Anadolu Efes S.K.', '__subject__ Alex Tyus __predicate__ league __object__ Turkish Basketball Super League']]
Text: Alex Tyus played for the club Anadolu Efes S.K and he plays in the Turkish Basketball Super League.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['club', 'league']
Object: ['Anadolu Efes S.K.', 'Turkish Basketball Super League']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Maccabi Tel Aviv B.C.', '__subject__ Alex Tyus __predicate__ birthDate __object__ 1988-01-08']]
Text: Alex Tyus was born on 8th January 1988 and played for Maccabi Tel Aviv B.C.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['club', 'birthDate']
Object: ['Maccabi Tel Aviv B.C.', '1988-01-08']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Maccabi Tel Aviv B.C.', '__subject__ Alex Tyus __predicate__ birthDate __object__ 1988-01-08']]
Text: Alex Tyus was born on 8th January 1988 and plays for the club Maccabi Tel Aviv BC.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['club', 'birthDate']
Object: ['Maccabi Tel Aviv B.C.', '1988-01-08']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Maccabi Tel Aviv B.C.', '__subject__ Alex Tyus __predicate__ birthDate __object__ 1988-01-08']]
Text: Alex Tyus, who was born on 8 January 1988 and his club is Maccabi Tel Aviv BC.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['club', 'birthDate']
Object: ['Maccabi Tel Aviv B.C.', '1988-01-08']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Pallacanestro Cantù', '__subject__ Alex Tyus __predicate__ league __object__ Euroleague']]
Text: Alex Tyus belongs to the Pallacanestro Cantu club, which is in the Euroleague.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['club', 'league']
Object: ['Pallacanestro Cantù', 'Euroleague']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Pallacanestro Cantù', '__subject__ Alex Tyus __predicate__ league __object__ Euroleague']]
Text: Alex Tyus plays in the Euroleague for the club Pallacanestro Cantù.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['club', 'league']
Object: ['Pallacanestro Cantù', 'Euroleague']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Pallacanestro Cantù', '__subject__ Alex Tyus __predicate__ league __object__ Euroleague']]
Text: Alex Tyus plays in the Euroleague for club Pallacanestro Cantu.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['club', 'league']
Object: ['Pallacanestro Cantù', 'Euroleague']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Pallacanestro Cantù', '__subject__ Alex Tyus __predicate__ league __object__ Turkish Basketball Super League']]
Text: Alex Tyus plays for Pallacanestro Cantu in the Turkish Basketball Super League.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['club', 'league']
Object: ['Pallacanestro Cantù', 'Turkish Basketball Super League']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Pallacanestro Cantù', '__subject__ Alex Tyus __predicate__ league __object__ Turkish Basketball Super League']]
Text: Alex Tyus plays with the club Pallacanestro Cantù in the Turkish Basketball Super League.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['club', 'league']
Object: ['Pallacanestro Cantù', 'Turkish Basketball Super League']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Pallacanestro Cantù', '__subject__ Pallacanestro Cantù __predicate__ league __object__ Lega Basket Serie A']]
Text: Alex Tyus belongs to the club, Pallacanestro Cantu, in the Lega Basket Serie A league.
Subject: ['Alex Tyus', 'Pallacanestro Cantù']
Predicate: ['club', 'league']
Object: ['Pallacanestro Cantù', 'Lega Basket Serie A']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Pallacanestro Cantù', '__subject__ Pallacanestro Cantù __predicate__ league __object__ Lega Basket Serie A']]
Text: Alex Tyus plays for Pallacanestro Cantu of the Lega Basket Serie A.
Subject: ['Alex Tyus', 'Pallacanestro Cantù']
Predicate: ['club', 'league']
Object: ['Pallacanestro Cantù', 'Lega Basket Serie A']

Triple: [['__subject__ Alex Tyus __predicate__ club __object__ Pallacanestro Cantù', '__subject__ Pallacanestro Cantù __predicate__ league __object__ Lega Basket Serie A']]
Text: Alex Tyus plays for the club Pallacanestro Cantù which is in the Lega Basket Serie A league.
Subject: ['Alex Tyus', 'Pallacanestro Cantù']
Predicate: ['club', 'league']
Object: ['Pallacanestro Cantù', 'Lega Basket Serie A']

Triple: [['__subject__ Alex Tyus __predicate__ league __object__ Euroleague', '__subject__ Alex Tyus __predicate__ club __object__ Maccabi Ashdod B.C.']]
Text: Alex Tyus is in the Euroleague and plays for Maccabi Ashdod B.C.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['league', 'club']
Object: ['Euroleague', 'Maccabi Ashdod B.C.']

Triple: [['__subject__ Alex Tyus __predicate__ league __object__ Euroleague', '__subject__ Alex Tyus __predicate__ club __object__ Maccabi Ashdod B.C.']]
Text: Alex Tyus is in the Euroleague with club Maccabi Ashdod BC.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['league', 'club']
Object: ['Euroleague', 'Maccabi Ashdod B.C.']

Triple: [['__subject__ Alex Tyus __predicate__ league __object__ Euroleague', '__subject__ Alex Tyus __predicate__ club __object__ Maccabi Ashdod B.C.']]
Text: Alex Tyus has played in the Euroleague and for the Maccabi Ashdod B.C.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['league', 'club']
Object: ['Euroleague', 'Maccabi Ashdod B.C.']

Triple: [['__subject__ Alex Tyus __predicate__ league __object__ Euroleague', '__subject__ Alex Tyus __predicate__ club __object__ Maccabi Tel Aviv B.C.']]
Text: Alex Tyus plays in the Euroleague for the club, Maccabi Tel Aviv B.C.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['league', 'club']
Object: ['Euroleague', 'Maccabi Tel Aviv B.C.']

Triple: [['__subject__ Alex Tyus __predicate__ league __object__ Euroleague', '__subject__ Alex Tyus __predicate__ club __object__ Maccabi Tel Aviv B.C.']]
Text: Alex Tyus, now in the Euroleague, played for Maccabi Tel Aviv B.C.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['league', 'club']
Object: ['Euroleague', 'Maccabi Tel Aviv B.C.']

Triple: [['__subject__ Alex Tyus __predicate__ league __object__ Euroleague', '__subject__ Alex Tyus __predicate__ club __object__ Maccabi Tel Aviv B.C.']]
Text: Alex Tyus, who played for Maccabi Tel Aviv B.C., plays in the Euroleague.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['league', 'club']
Object: ['Euroleague', 'Maccabi Tel Aviv B.C.']

Triple: [['__subject__ Alex Tyus __predicate__ league __object__ Turkish Basketball Super League', '__subject__ Alex Tyus __predicate__ club __object__ Maccabi Ashdod B.C.']]
Text: Alex Tyus has played for Maccabi Ashdod BC and has also played in the Turkish Basketball Super League.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['league', 'club']
Object: ['Turkish Basketball Super League', 'Maccabi Ashdod B.C.']

Triple: [['__subject__ Alex Tyus __predicate__ league __object__ Turkish Basketball Super League', '__subject__ Alex Tyus __predicate__ club __object__ Maccabi Ashdod B.C.']]
Text: Alex Tyus plays for Maccabi Ashdod BC of the Turkish Basketball Super League.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['league', 'club']
Object: ['Turkish Basketball Super League', 'Maccabi Ashdod B.C.']

Triple: [['__subject__ Alex Tyus __predicate__ league __object__ Turkish Basketball Super League', '__subject__ Alex Tyus __predicate__ club __object__ Maccabi Ashdod B.C.']]
Text: Alex Tyus plays for the club Maccabi Ashdod BC, which is part of the Turkish Basketball Super League.
Subject: ['Alex Tyus', 'Alex Tyus']
Predicate: ['league', 'club']
Object: ['Turkish Basketball Super League', 'Maccabi Ashdod B.C.']

Triple: [['__subject__ Brandon, Manitoba __predicate__ leader __object__ Drew Caldwell', '__subject__ Alex Plante __predicate__ birthPlace __object__ Brandon, Manitoba']]
Text: Alex Plante was born in Brandon, Manitoba where the leader is Drew Caldwell.
Subject: ['Brandon, Manitoba', 'Alex Plante']
Predicate: ['leader', 'birthPlace']
Object: ['Drew Caldwell', 'Brandon, Manitoba']

Triple: [['__subject__ Brandon, Manitoba __predicate__ leader __object__ Drew Caldwell', '__subject__ Alex Plante __predicate__ birthPlace __object__ Brandon, Manitoba']]
Text: Alex Plante's birth place is Brandon, Manitoba where the leader is Drew Caldwell.
Subject: ['Brandon, Manitoba', 'Alex Plante']
Predicate: ['leader', 'birthPlace']
Object: ['Drew Caldwell', 'Brandon, Manitoba']

Triple: [['__subject__ Brandon, Manitoba __predicate__ leader __object__ Drew Caldwell', '__subject__ Alex Plante __predicate__ birthPlace __object__ Brandon, Manitoba']]
Text: Drew Caldwell is a leader in Brandon, Manitoba where Alex Plante was born.
Subject: ['Brandon, Manitoba', 'Alex Plante']
Predicate: ['leader', 'birthPlace']
Object: ['Drew Caldwell', 'Brandon, Manitoba']

Triple: [['__subject__ Budapest __predicate__ country __object__ Hungary', '__subject__ Akeem Adams __predicate__ deathPlace __object__ Budapest']]
Text: Akeem Adams died in Budapest, Hungary.
Subject: ['Budapest', 'Akeem Adams']
Predicate: ['country', 'deathPlace']
Object: ['Hungary', 'Budapest']

Triple: [['__subject__ Budapest __predicate__ country __object__ Hungary', '__subject__ Akeem Adams __predicate__ deathPlace __object__ Budapest']]
Text: Akeem Adams died in the Hungarian ciry of Budapest.
Subject: ['Budapest', 'Akeem Adams']
Predicate: ['country', 'deathPlace']
Object: ['Hungary', 'Budapest']

Triple: [['__subject__ Budapest __predicate__ country __object__ Hungary', '__subject__ Akeem Adams __predicate__ deathPlace __object__ Budapest']]
Text: Akeem Adams died in the city of Budapest, Hungary.
Subject: ['Budapest', 'Akeem Adams']
Predicate: ['country', 'deathPlace']
Object: ['Hungary', 'Budapest']

Triple: [['__subject__ C.D. FAS __predicate__ league __object__ Salvadoran Primera División', '__subject__ Abner (footballer) __predicate__ club __object__ C.D. FAS']]
Text: Abner plays for CD FAS in the Salvadoran Primera Division.
Subject: ['C.D. FAS', 'Abner (footballer)']
Predicate: ['league', 'club']
Object: ['Salvadoran Primera División', 'C.D. FAS']

Triple: [['__subject__ C.D. FAS __predicate__ league __object__ Salvadoran Primera División', '__subject__ Abner (footballer) __predicate__ club __object__ C.D. FAS']]
Text: Abner is a footballer for the CD FAS club whose league is the Salvadoran Primera Division.
Subject: ['C.D. FAS', 'Abner (footballer)']
Predicate: ['league', 'club']
Object: ['Salvadoran Primera División', 'C.D. FAS']

Triple: [['__subject__ C.D. FAS __predicate__ position __object__ Salvadoran Primera División', '__subject__ Abner (footballer) __predicate__ club __object__ C.D. FAS']]
Text: Abner is a footballer for the CD FAS club, which is a member team of the Salvadoran Primera Division.
Subject: ['C.D. FAS', 'Abner (footballer)']
Predicate: ['position', 'club']
Object: ['Salvadoran Primera División', 'C.D. FAS']

Triple: [['__subject__ C.D. FAS __predicate__ position __object__ Salvadoran Primera División', '__subject__ Abner (footballer) __predicate__ club __object__ C.D. FAS']]
Text: C.D FAS play in the Salvadoran Primera Division and is a former club of the footballer Abner.
Subject: ['C.D. FAS', 'Abner (footballer)']
Predicate: ['position', 'club']
Object: ['Salvadoran Primera División', 'C.D. FAS']

Triple: [['__subject__ C.D. FAS __predicate__ position __object__ Salvadoran Primera División', '__subject__ Abner (footballer) __predicate__ club __object__ C.D. FAS']]
Text: Abner plays for CD FAS in the Salvadoran Primera Division.
Subject: ['C.D. FAS', 'Abner (footballer)']
Predicate: ['position', 'club']
Object: ['Salvadoran Primera División', 'C.D. FAS']

Triple: [['__subject__ C.D. FAS __predicate__ position __object__ Salvadoran Primera División', '__subject__ Abner (footballer) __predicate__ club __object__ C.D. FAS']]
Text: Abner is a footballer for the CD FAS club which plays in the Salvadoran Primera division.
Subject: ['C.D. FAS', 'Abner (footballer)']
Predicate: ['position', 'club']
Object: ['Salvadoran Primera División', 'C.D. FAS']

Triple: [['__subject__ Canada __predicate__ anthem __object__ O Canada', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Aaron Boogaard was born in Canada, where the national anthem is 'O Canada'.
Subject: ['Canada', 'Aaron Boogaard']
Predicate: ['anthem', 'birthPlace']
Object: ['O Canada', 'Canada']

Triple: [['__subject__ Canada __predicate__ anthem __object__ O Canada', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Aaron Boogaard was born in Canada where the national anthem is called "O Canada".
Subject: ['Canada', 'Aaron Boogaard']
Predicate: ['anthem', 'birthPlace']
Object: ['O Canada', 'Canada']

Triple: [['__subject__ Canada __predicate__ anthem __object__ O Canada', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Aaron Boogaard's birthplace is Canada where the national anthem is O Canada.
Subject: ['Canada', 'Aaron Boogaard']
Predicate: ['anthem', 'birthPlace']
Object: ['O Canada', 'Canada']

Triple: [['__subject__ Canada __predicate__ anthem __object__ O Canada', '__subject__ Alex Plante __predicate__ birthPlace __object__ Canada']]
Text: The national anthem of Canada, where Alex Plante was born, is O Canada.
Subject: ['Canada', 'Alex Plante']
Predicate: ['anthem', 'birthPlace']
Object: ['O Canada', 'Canada']

Triple: [['__subject__ Canada __predicate__ anthem __object__ O Canada', '__subject__ Alex Plante __predicate__ birthPlace __object__ Canada']]
Text: Alex Plante was born in Canada where the country's anthem is O Canada.
Subject: ['Canada', 'Alex Plante']
Predicate: ['anthem', 'birthPlace']
Object: ['O Canada', 'Canada']

Triple: [['__subject__ Canada __predicate__ ethnicGroup __object__ Asian Canadians', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Asian Canadians are an ethnic group in Canada which is the birthplace of Aaron Boogaard.
Subject: ['Canada', 'Aaron Boogaard']
Predicate: ['ethnicGroup', 'birthPlace']
Object: ['Asian Canadians', 'Canada']

Triple: [['__subject__ Canada __predicate__ ethnicGroup __object__ Asian Canadians', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Asian Canadians are one of the ethnic groups in Canada which is the birthplace of Aaron Boogaard.
Subject: ['Canada', 'Aaron Boogaard']
Predicate: ['ethnicGroup', 'birthPlace']
Object: ['Asian Canadians', 'Canada']

Triple: [['__subject__ Canada __predicate__ ethnicGroup __object__ Asian Canadians', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Asian Canadians are one of the ethnic groups in Canada which is where Aaron Boogaard was born.
Subject: ['Canada', 'Aaron Boogaard']
Predicate: ['ethnicGroup', 'birthPlace']
Object: ['Asian Canadians', 'Canada']

Triple: [['__subject__ Canada __predicate__ language __object__ French language', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Aaron Boogaard's birthplace is Canada where one of the languages used is French.
Subject: ['Canada', 'Aaron Boogaard']
Predicate: ['language', 'birthPlace']
Object: ['French language', 'Canada']

Triple: [['__subject__ Canada __predicate__ language __object__ French language', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: The French language is spoken in Canada which is the birthplace of Aaron Boogaard.
Subject: ['Canada', 'Aaron Boogaard']
Predicate: ['language', 'birthPlace']
Object: ['French language', 'Canada']

Triple: [['__subject__ Canada __predicate__ language __object__ French language', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Canada, where one of the languages spoken is French, was the birthplace of Aaron Boogaard.
Subject: ['Canada', 'Aaron Boogaard']
Predicate: ['language', 'birthPlace']
Object: ['French language', 'Canada']

Triple: [['__subject__ Canada __predicate__ language __object__ French language', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Canada']]
Text: Canada's spoken languages include French and is the birthplace of Adam McQuaid.
Subject: ['Canada', 'Adam McQuaid']
Predicate: ['language', 'birthPlace']
Object: ['French language', 'Canada']

Triple: [['__subject__ Canada __predicate__ language __object__ French language', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Canada']]
Text: French is a spoken language of Canada which is the birthplace of Adam McQuaid.
Subject: ['Canada', 'Adam McQuaid']
Predicate: ['language', 'birthPlace']
Object: ['French language', 'Canada']

Triple: [['__subject__ Canada __predicate__ language __object__ French language', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Canada']]
Text: The French language is spoken in Canada, the birthplace of Adam McQuaid.
Subject: ['Canada', 'Adam McQuaid']
Predicate: ['language', 'birthPlace']
Object: ['French language', 'Canada']

Triple: [['__subject__ Canada __predicate__ language __object__ Inuktitut', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Canada']]
Text: Adam McQuaid was born in Canada where one of the spoken languages is Inuktitut.
Subject: ['Canada', 'Adam McQuaid']
Predicate: ['language', 'birthPlace']
Object: ['Inuktitut', 'Canada']

Triple: [['__subject__ Canada __predicate__ language __object__ Inuktitut', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Canada']]
Text: Canada uses the Inuktitut language and is the birthplace of Adam McQuaid.
Subject: ['Canada', 'Adam McQuaid']
Predicate: ['language', 'birthPlace']
Object: ['Inuktitut', 'Canada']

Triple: [['__subject__ Canada __predicate__ language __object__ Inuktitut', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Canada']]
Text: Canada is the birthplace of both Adam McQuaid and the Inuktitut language.
Subject: ['Canada', 'Adam McQuaid']
Predicate: ['language', 'birthPlace']
Object: ['Inuktitut', 'Canada']

Triple: [['__subject__ Canada __predicate__ language __object__ Slavey language', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: The Slavey language is used in Canada, the birthplace of Aaron Boogaard.
Subject: ['Canada', 'Aaron Boogaard']
Predicate: ['language', 'birthPlace']
Object: ['Slavey language', 'Canada']

Triple: [['__subject__ Canada __predicate__ language __object__ Slavey language', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Aaron Boogaard was born in Canada, where Slavey is one of the languages spoken.
Subject: ['Canada', 'Aaron Boogaard']
Predicate: ['language', 'birthPlace']
Object: ['Slavey language', 'Canada']

Triple: [['__subject__ Canada __predicate__ language __object__ Slavey language', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Aaron Boogaard came from Canada. The Slavey language is spoken in Canada.
Subject: ['Canada', 'Aaron Boogaard']
Predicate: ['language', 'birthPlace']
Object: ['Slavey language', 'Canada']

Triple: [['__subject__ Canada __predicate__ leader __object__ Elizabeth II', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Canada is led by Elizabeth II and is the birthplace of Aaron Boogaard.
Subject: ['Canada', 'Aaron Boogaard']
Predicate: ['leader', 'birthPlace']
Object: ['Elizabeth II', 'Canada']

Triple: [['__subject__ Canada __predicate__ leader __object__ Elizabeth II', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Aaron Boogaard was born in Canada where the leader is Elizabeth II.
Subject: ['Canada', 'Aaron Boogaard']
Predicate: ['leader', 'birthPlace']
Object: ['Elizabeth II', 'Canada']

Triple: [['__subject__ Canada __predicate__ leader __object__ Elizabeth II', '__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Canada']]
Text: Aaron Boogaard was born in Canada, which is led by Elizabeth II.
Subject: ['Canada', 'Aaron Boogaard']
Predicate: ['leader', 'birthPlace']
Object: ['Elizabeth II', 'Canada']

Triple: [['__subject__ Canada __predicate__ leader __object__ Elizabeth II', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Canada']]
Text: Canada is led by Elizabeth II and is where Adam McQuaid was born.
Subject: ['Canada', 'Adam McQuaid']
Predicate: ['leader', 'birthPlace']
Object: ['Elizabeth II', 'Canada']

Triple: [['__subject__ Canada __predicate__ leader __object__ Elizabeth II', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Canada']]
Text: Canada, which is led by Elizabeth II, is the birth place of Adam McQuaid.
Subject: ['Canada', 'Adam McQuaid']
Predicate: ['leader', 'birthPlace']
Object: ['Elizabeth II', 'Canada']

Triple: [['__subject__ Canada __predicate__ leader __object__ Elizabeth II', '__subject__ Adam McQuaid __predicate__ birthPlace __object__ Canada']]
Text: Adam McQuaid was born in Canada where the leader is Elizabeth II.
Subject: ['Canada', 'Adam McQuaid']
Predicate: ['leader', 'birthPlace']
Object: ['Elizabeth II', 'Canada']

Triple: [['__subject__ Canada __predicate__ leader __object__ Elizabeth II', '__subject__ Alex Plante __predicate__ birthPlace __object__ Canada']]
Text: Alex Plante was born in Canada, whose leaser is Elizabeth II.
Subject: ['Canada', 'Alex Plante']
Predicate: ['leader', 'birthPlace']
Object: ['Elizabeth II', 'Canada']

Triple: [['__subject__ Canada __predicate__ leader __object__ Elizabeth II', '__subject__ Alex Plante __predicate__ birthPlace __object__ Canada']]
Text: Canada, where the leader is Elizabeth II, was the birthplace of Alex Plante.
Subject: ['Canada', 'Alex Plante']
Predicate: ['leader', 'birthPlace']
Object: ['Elizabeth II', 'Canada']

Triple: [['__subject__ Canada __predicate__ leader __object__ Elizabeth II', '__subject__ Alex Plante __predicate__ birthPlace __object__ Canada']]
Text: Alex Plante was born in Canada, which is led by Elizabeth II.
Subject: ['Canada', 'Alex Plante']
Predicate: ['leader', 'birthPlace']
Object: ['Elizabeth II', 'Canada']

Triple: [['__subject__ FC Karpaty Lviv __predicate__ manager __object__ Oleh Luzhny', '__subject__ Aleksandre Guruli __predicate__ club __object__ FC Karpaty Lviv']]
Text: Aleksandre Guruli played for FC Karpaty Lviv who is managed by Oleh Luzhny.
Subject: ['FC Karpaty Lviv', 'Aleksandre Guruli']
Predicate: ['manager', 'club']
Object: ['Oleh Luzhny', 'FC Karpaty Lviv']

Triple: [['__subject__ FC Karpaty Lviv __predicate__ manager __object__ Oleh Luzhny', '__subject__ Aleksandre Guruli __predicate__ club __object__ FC Karpaty Lviv']]
Text: Aleksandre Guruli played for the club FC Karpaty Lviv, where the manager was Oleh Luzhny.
Subject: ['FC Karpaty Lviv', 'Aleksandre Guruli']
Predicate: ['manager', 'club']
Object: ['Oleh Luzhny', 'FC Karpaty Lviv']

Triple: [['__subject__ FC Karpaty Lviv __predicate__ manager __object__ Oleh Luzhny', '__subject__ Aleksandre Guruli __predicate__ club __object__ FC Karpaty Lviv']]
Text: Aleksandre Guruli played for FC Karpaty Lviv, which is managed by Oleh Luzhny.
Subject: ['FC Karpaty Lviv', 'Aleksandre Guruli']
Predicate: ['manager', 'club']
Object: ['Oleh Luzhny', 'FC Karpaty Lviv']

Triple: [['__subject__ FC Samtredia __predicate__ ground __object__ Erosi Manjgaladze Stadium', '__subject__ Aleksandre Guruli __predicate__ club __object__ FC Samtredia']]
Text: Aleksandre Guruli has played for FC Samtredia, whose home ground is at the Erosi Manjgaladze Stadium.
Subject: ['FC Samtredia', 'Aleksandre Guruli']
Predicate: ['ground', 'club']
Object: ['Erosi Manjgaladze Stadium', 'FC Samtredia']

Triple: [['__subject__ FC Samtredia __predicate__ ground __object__ Erosi Manjgaladze Stadium', '__subject__ Aleksandre Guruli __predicate__ club __object__ FC Samtredia']]
Text: Aleksandre Guruli plays for FC Samtredia whose home ground is located in Erosi Manjgaladze Stadium.
Subject: ['FC Samtredia', 'Aleksandre Guruli']
Predicate: ['ground', 'club']
Object: ['Erosi Manjgaladze Stadium', 'FC Samtredia']

Triple: [['__subject__ FC Samtredia __predicate__ ground __object__ Erosi Manjgaladze Stadium', '__subject__ Aleksandre Guruli __predicate__ club __object__ FC Samtredia']]
Text: Aleksandre Guruli's club is FC Samtredia who play their home games at the Erosi Manjgaladze stadium.
Subject: ['FC Samtredia', 'Aleksandre Guruli']
Predicate: ['ground', 'club']
Object: ['Erosi Manjgaladze Stadium', 'FC Samtredia']

Triple: [['__subject__ FC Spartak Moscow __predicate__ chairman __object__ Sergey Rodionov', '__subject__ Aleksandr Prudnikov __predicate__ youthclub __object__ FC Spartak Moscow']]
Text: The chairman of FC Spartak Moscow is Sergey Rodionov and Aleksandr Prudnikov played for their youth team.
Subject: ['FC Spartak Moscow', 'Aleksandr Prudnikov']
Predicate: ['chairman', 'youthclub']
Object: ['Sergey Rodionov', 'FC Spartak Moscow']

Triple: [['__subject__ FC Spartak Moscow __predicate__ chairman __object__ Sergey Rodionov', '__subject__ Aleksandr Prudnikov __predicate__ youthclub __object__ FC Spartak Moscow']]
Text: Aleksandr Prudnikov's youth football club was FC Spartak Moscow chaired by Sergey Rodionov.
Subject: ['FC Spartak Moscow', 'Aleksandr Prudnikov']
Predicate: ['chairman', 'youthclub']
Object: ['Sergey Rodionov', 'FC Spartak Moscow']

Triple: [['__subject__ FC Spartak Moscow __predicate__ chairman __object__ Sergey Rodionov', '__subject__ Aleksandr Prudnikov __predicate__ youthclub __object__ FC Spartak Moscow']]
Text: FC Spartak Moscow's chairman is Sergey Rodionov and Aleksandr Prudnikov once played for the club's youth side.
Subject: ['FC Spartak Moscow', 'Aleksandr Prudnikov']
Predicate: ['chairman', 'youthclub']
Object: ['Sergey Rodionov', 'FC Spartak Moscow']

Triple: [['__subject__ FC Spartak Moscow __predicate__ ground __object__ Otkrytiye Arena', '__subject__ Aleksandr Prudnikov __predicate__ youthclub __object__ FC Spartak Moscow']]
Text: Aleksandr Prudnikov's youth football club was FC Spartak Moscow whose ground is at the Otkrytiye Arena.
Subject: ['FC Spartak Moscow', 'Aleksandr Prudnikov']
Predicate: ['ground', 'youthclub']
Object: ['Otkrytiye Arena', 'FC Spartak Moscow']

Triple: [['__subject__ FC Spartak Moscow __predicate__ ground __object__ Otkrytiye Arena', '__subject__ Aleksandr Prudnikov __predicate__ youthclub __object__ FC Spartak Moscow']]
Text: Aleksandr Prudnikov played at Otkrytiye Arena for FC Spartak Moscow's youth team.
Subject: ['FC Spartak Moscow', 'Aleksandr Prudnikov']
Predicate: ['ground', 'youthclub']
Object: ['Otkrytiye Arena', 'FC Spartak Moscow']

Triple: [['__subject__ FC Spartak Moscow __predicate__ ground __object__ Otkrytiye Arena', '__subject__ Aleksandr Prudnikov __predicate__ youthclub __object__ FC Spartak Moscow']]
Text: Aleksandr Prudnikov's played youth football for FC Spartak Moscow in the Otkrytiye Arena .
Subject: ['FC Spartak Moscow', 'Aleksandr Prudnikov']
Predicate: ['ground', 'youthclub']
Object: ['Otkrytiye Arena', 'FC Spartak Moscow']

Triple: [['__subject__ FC Terek Grozny __predicate__ ground __object__ Grozny', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Terek Grozny']]
Text: Aleksandr Prudnikov played for FC Terek Grozny based in Grozny.
Subject: ['FC Terek Grozny', 'Aleksandr Prudnikov']
Predicate: ['ground', 'club']
Object: ['Grozny', 'FC Terek Grozny']

Triple: [['__subject__ FC Terek Grozny __predicate__ ground __object__ Grozny', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Terek Grozny']]
Text: Aleksandr Prudnikov plays for FC Terek Grozny who have their home ground in Grozny.
Subject: ['FC Terek Grozny', 'Aleksandr Prudnikov']
Predicate: ['ground', 'club']
Object: ['Grozny', 'FC Terek Grozny']

Triple: [['__subject__ FC Terek Grozny __predicate__ ground __object__ Grozny', '__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Terek Grozny']]
Text: FC Terek Grozny, whose ground is located in Grozny, is the former club of the player Aleksandr Prudnikov.
Subject: ['FC Terek Grozny', 'Aleksandr Prudnikov']
Predicate: ['ground', 'club']
Object: ['Grozny', 'FC Terek Grozny']

Triple: [['__subject__ FC Torpedo Moscow __predicate__ season __object__ 2014–15 Russian Premier League', '__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow']]
Text: Aleksandr Chumakov has played for FC Torpedo Moscow who played the 2014–15 season in the Russian Premier League.
Subject: ['FC Torpedo Moscow', 'Aleksandr Chumakov']
Predicate: ['season', 'club']
Object: ['2014–15 Russian Premier League', 'FC Torpedo Moscow']

Triple: [['__subject__ FC Torpedo Moscow __predicate__ season __object__ 2014–15 Russian Premier League', '__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow']]
Text: The club Aleksandr Chumakov plays for is FC Torpedo Moscow who played in the 2014-15 Russian Premier league.
Subject: ['FC Torpedo Moscow', 'Aleksandr Chumakov']
Predicate: ['season', 'club']
Object: ['2014–15 Russian Premier League', 'FC Torpedo Moscow']

Triple: [['__subject__ FC Torpedo Moscow __predicate__ season __object__ 2014–15 Russian Premier League', '__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow']]
Text: Aleksandr Chumakov played for the club FC Torpedo Moscow, which was part of the Russian Premier League in the 2014-15 season.
Subject: ['FC Torpedo Moscow', 'Aleksandr Chumakov']
Predicate: ['season', 'club']
Object: ['2014–15 Russian Premier League', 'FC Torpedo Moscow']

Triple: [['__subject__ Houston Texans __predicate__ city __object__ Texas', '__subject__ Akeem Dent __predicate__ formerTeam __object__ Houston Texans']]
Text: Akeem Dent used to play for the Houston Texans who are based in Texas.
Subject: ['Houston Texans', 'Akeem Dent']
Predicate: ['city', 'formerTeam']
Object: ['Texas', 'Houston Texans']

Triple: [['__subject__ Houston Texans __predicate__ city __object__ Texas', '__subject__ Akeem Dent __predicate__ formerTeam __object__ Houston Texans']]
Text: Akeem Dent used to play for the Houston Texans, who play in Texas.
Subject: ['Houston Texans', 'Akeem Dent']
Predicate: ['city', 'formerTeam']
Object: ['Texas', 'Houston Texans']

Triple: [['__subject__ Houston Texans __predicate__ city __object__ Texas', '__subject__ Akeem Dent __predicate__ formerTeam __object__ Houston Texans']]
Text: Houston Texans reside in Texas, which is Akeem Dent's former team.
Subject: ['Houston Texans', 'Akeem Dent']
Predicate: ['city', 'formerTeam']
Object: ['Texas', 'Houston Texans']

Triple: [['__subject__ Los Angeles Rams __predicate__ city __object__ Los Angeles', '__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams']]
Text: Akeem Ayers once played for the Los Angeles Rams, who are located in LA.
Subject: ['Los Angeles Rams', 'Akeem Ayers']
Predicate: ['city', 'formerTeam']
Object: ['Los Angeles', 'Los Angeles Rams']

Triple: [['__subject__ Los Angeles Rams __predicate__ city __object__ Los Angeles', '__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams']]
Text: Akeem Ayers has played for the Los Angeles Rams, the club which is located in LA.
Subject: ['Los Angeles Rams', 'Akeem Ayers']
Predicate: ['city', 'formerTeam']
Object: ['Los Angeles', 'Los Angeles Rams']

Triple: [['__subject__ Los Angeles Rams __predicate__ city __object__ Los Angeles', '__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams']]
Text: Akeem Ayers used to play for Los Angeles Rams who are based in LA.
Subject: ['Los Angeles Rams', 'Akeem Ayers']
Predicate: ['city', 'formerTeam']
Object: ['Los Angeles', 'Los Angeles Rams']

Triple: [['__subject__ Motherwell F.C. __predicate__ ground __object__ Fir Park', '__subject__ Alan Martin (footballer) __predicate__ club __object__ Motherwell F.C.']]
Text: Motherwell FC, who play their home games at Fir Park, is a former club of footballer Alan Martin.
Subject: ['Motherwell F.C.', 'Alan Martin (footballer)']
Predicate: ['ground', 'club']
Object: ['Fir Park', 'Motherwell F.C.']

Triple: [['__subject__ Motherwell F.C. __predicate__ ground __object__ Fir Park', '__subject__ Alan Martin (footballer) __predicate__ club __object__ Motherwell F.C.']]
Text: Fir Park is the home ground of Motherwell FC where Alan Martin plays football.
Subject: ['Motherwell F.C.', 'Alan Martin (footballer)']
Predicate: ['ground', 'club']
Object: ['Fir Park', 'Motherwell F.C.']

Triple: [['__subject__ Motherwell F.C. __predicate__ ground __object__ Fir Park', '__subject__ Alan Martin (footballer) __predicate__ club __object__ Motherwell F.C.']]
Text: Motherwell FC, former club of the player Alan Martin, play their home games at Fir Park.
Subject: ['Motherwell F.C.', 'Alan Martin (footballer)']
Predicate: ['ground', 'club']
Object: ['Fir Park', 'Motherwell F.C.']

Triple: [['__subject__ Olympique Lyonnais __predicate__ chairman __object__ Jean-Michel Aulas', '__subject__ Aleksandre Guruli __predicate__ club __object__ Olympique Lyonnais']]
Text: Aleksandre Guruli played for the Olympique Lyonnais, whose chairman is Jean-Michel Aulas.
Subject: ['Olympique Lyonnais', 'Aleksandre Guruli']
Predicate: ['chairman', 'club']
Object: ['Jean-Michel Aulas', 'Olympique Lyonnais']

Triple: [['__subject__ Olympique Lyonnais __predicate__ chairman __object__ Jean-Michel Aulas', '__subject__ Aleksandre Guruli __predicate__ club __object__ Olympique Lyonnais']]
Text: Aleksandre Guruli played for the Olympique Lyonnais club whose chairman is Jean-Michel Aulas.
Subject: ['Olympique Lyonnais', 'Aleksandre Guruli']
Predicate: ['chairman', 'club']
Object: ['Jean-Michel Aulas', 'Olympique Lyonnais']

Triple: [['__subject__ Olympique Lyonnais __predicate__ chairman __object__ Jean-Michel Aulas', '__subject__ Aleksandre Guruli __predicate__ club __object__ Olympique Lyonnais']]
Text: Aleksandre Guruli's club is Olympique Lyonnais where Jean-Michel Aulas is the chairman.
Subject: ['Olympique Lyonnais', 'Aleksandre Guruli']
Predicate: ['chairman', 'club']
Object: ['Jean-Michel Aulas', 'Olympique Lyonnais']

Triple: [['__subject__ Orange County Blues FC __predicate__ manager __object__ Oliver Wyss', '__subject__ Akeem Priestley __predicate__ club __object__ Orange County Blues FC']]
Text: Akeem Priestley is connected to the Orange County Blues Football Club which is managed by Oliver Wyss.
Subject: ['Orange County Blues FC', 'Akeem Priestley']
Predicate: ['manager', 'club']
Object: ['Oliver Wyss', 'Orange County Blues FC']

Triple: [['__subject__ Orange County Blues FC __predicate__ manager __object__ Oliver Wyss', '__subject__ Akeem Priestley __predicate__ club __object__ Orange County Blues FC']]
Text: Akeem Priestley plays for Orange County Blues FC which is managed by Oliver Wyss.
Subject: ['Orange County Blues FC', 'Akeem Priestley']
Predicate: ['manager', 'club']
Object: ['Oliver Wyss', 'Orange County Blues FC']

Triple: [['__subject__ Orange County Blues FC __predicate__ manager __object__ Oliver Wyss', '__subject__ Akeem Priestley __predicate__ club __object__ Orange County Blues FC']]
Text: Akeem Priestley played for the Orange County Blues FC, the manager of which is Oliver Wyss.
Subject: ['Orange County Blues FC', 'Akeem Priestley']
Predicate: ['manager', 'club']
Object: ['Oliver Wyss', 'Orange County Blues FC']

Triple: [['__subject__ Real Madrid Castilla __predicate__ manager __object__ Luis Miguel Ramis', '__subject__ Abner (footballer) __predicate__ club __object__ Real Madrid Castilla']]
Text: Footballer, Abner plays for the club Real Madrid Castilla managed by Luis Miguel Ramis.
Subject: ['Real Madrid Castilla', 'Abner (footballer)']
Predicate: ['manager', 'club']
Object: ['Luis Miguel Ramis', 'Real Madrid Castilla']

Triple: [['__subject__ Real Madrid Castilla __predicate__ manager __object__ Luis Miguel Ramis', '__subject__ Abner (footballer) __predicate__ club __object__ Real Madrid Castilla']]
Text: Abner played for the football club Real Madrid Castilla which is managed by Luis Miguel Ramis.
Subject: ['Real Madrid Castilla', 'Abner (footballer)']
Predicate: ['manager', 'club']
Object: ['Luis Miguel Ramis', 'Real Madrid Castilla']

Triple: [['__subject__ Scotland national under-19 football team __predicate__ coach __object__ Scot Gemmill', '__subject__ Alan Martin (footballer) __predicate__ club __object__ Scotland national under-19 football team']]
Text: Alan Martin played football for the Scotland national under 19 team which is coached by Scot Gemmill.
Subject: ['Scotland national under-19 football team', 'Alan Martin (footballer)']
Predicate: ['coach', 'club']
Object: ['Scot Gemmill', 'Scotland national under-19 football team']

Triple: [['__subject__ Scotland national under-19 football team __predicate__ coach __object__ Scot Gemmill', '__subject__ Alan Martin (footballer) __predicate__ club __object__ Scotland national under-19 football team']]
Text: Alan Martin plays for the Scottish under 19 football team coached by Scot Gemmill.
Subject: ['Scotland national under-19 football team', 'Alan Martin (footballer)']
Predicate: ['coach', 'club']
Object: ['Scot Gemmill', 'Scotland national under-19 football team']

Triple: [['__subject__ Scotland national under-19 football team __predicate__ coach __object__ Scot Gemmill', '__subject__ Alan Martin (footballer) __predicate__ club __object__ Scotland national under-19 football team']]
Text: Alan Martin has represented Scotland under 19 football team, which is managed by Scot Gemmill.
Subject: ['Scotland national under-19 football team', 'Alan Martin (footballer)']
Predicate: ['coach', 'club']
Object: ['Scot Gemmill', 'Scotland national under-19 football team']

Triple: [['__subject__ Shabab Al-Ordon Club __predicate__ league __object__ Jordan Premier League', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Shabab Al-Ordon Club']]
Text: Alaa Abdul-Zahra plays for Shabab Al-Ordon Club in the Jordan Premier league.
Subject: ['Shabab Al-Ordon Club', 'Alaa Abdul-Zahra']
Predicate: ['league', 'club']
Object: ['Jordan Premier League', 'Shabab Al-Ordon Club']

Triple: [['__subject__ Shabab Al-Ordon Club __predicate__ league __object__ Jordan Premier League', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Shabab Al-Ordon Club']]
Text: Alaa Abdul-Zahra's club is Shabab Al-Ordon Club who play in the Jordan Premier League.
Subject: ['Shabab Al-Ordon Club', 'Alaa Abdul-Zahra']
Predicate: ['league', 'club']
Object: ['Jordan Premier League', 'Shabab Al-Ordon Club']

Triple: [['__subject__ Shabab Al-Ordon Club __predicate__ league __object__ Jordan Premier League', '__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Shabab Al-Ordon Club']]
Text: Alaa Abdul-Zahra plays for Shabab Al-Ordon Club in the Jordan Premier League.
Subject: ['Shabab Al-Ordon Club', 'Alaa Abdul-Zahra']
Predicate: ['league', 'club']
Object: ['Jordan Premier League', 'Shabab Al-Ordon Club']

Triple: [['__subject__ Tennessee Titans __predicate__ city __object__ Nashville, Tennessee', '__subject__ Akeem Ayers __predicate__ debutTeam __object__ Tennessee Titans']]
Text: Akeem Ayers made his debut with the Tennessee Titans who are based in Nashville, Tennessee.
Subject: ['Tennessee Titans', 'Akeem Ayers']
Predicate: ['city', 'debutTeam']
Object: ['Nashville, Tennessee', 'Tennessee Titans']

Triple: [['__subject__ Tennessee Titans __predicate__ city __object__ Nashville, Tennessee', '__subject__ Akeem Ayers __predicate__ debutTeam __object__ Tennessee Titans']]
Text: The debut team of Akeem Ayers was the Tennessee Titans who are based in Nashville, Tennessee.
Subject: ['Tennessee Titans', 'Akeem Ayers']
Predicate: ['city', 'debutTeam']
Object: ['Nashville, Tennessee', 'Tennessee Titans']

Triple: [['__subject__ Tennessee Titans __predicate__ city __object__ Nashville, Tennessee', '__subject__ Akeem Ayers __predicate__ debutTeam __object__ Tennessee Titans']]
Text: Akeem Ayers made his debut for the Tennessee Titans who are based in Nashville, Tennessee.
Subject: ['Tennessee Titans', 'Akeem Ayers']
Predicate: ['city', 'debutTeam']
Object: ['Nashville, Tennessee', 'Tennessee Titans']

Triple: [['__subject__ Tennessee Titans __predicate__ city __object__ Nashville, Tennessee', '__subject__ Akeem Ayers __predicate__ formerTeam __object__ Tennessee Titans']]
Text: Akeem Ayers' former team was Tennessee Titans who are based in Nashville, Tennessee.
Subject: ['Tennessee Titans', 'Akeem Ayers']
Predicate: ['city', 'formerTeam']
Object: ['Nashville, Tennessee', 'Tennessee Titans']

Triple: [['__subject__ Tennessee Titans __predicate__ city __object__ Nashville, Tennessee', '__subject__ Akeem Ayers __predicate__ formerTeam __object__ Tennessee Titans']]
Text: Akeem Ayers used to play for Tennessee Titans who are based in the city of Nashville, Tennessee.
Subject: ['Tennessee Titans', 'Akeem Ayers']
Predicate: ['city', 'formerTeam']
Object: ['Nashville, Tennessee', 'Tennessee Titans']

Triple: [['__subject__ Tennessee Titans __predicate__ city __object__ Nashville, Tennessee', '__subject__ Akeem Ayers __predicate__ formerTeam __object__ Tennessee Titans']]
Text: Akeem Ayers once played for the Tennessee Titans who are based in the city of Nashville, Tennessee.
Subject: ['Tennessee Titans', 'Akeem Ayers']
Predicate: ['city', 'formerTeam']
Object: ['Nashville, Tennessee', 'Tennessee Titans']

Triple: [['__subject__ U.S. Città di Palermo __predicate__ manager __object__ Giuseppe Iachini', '__subject__ Abel Hernández __predicate__ club __object__ U.S. Città di Palermo']]
Text: Abel Hernández plays for the club, U.S. Città di Palermo which is managed by Giuseppe Iachini.
Subject: ['U.S. Città di Palermo', 'Abel Hernández']
Predicate: ['manager', 'club']
Object: ['Giuseppe Iachini', 'U.S. Città di Palermo']

Triple: [['__subject__ U.S. Città di Palermo __predicate__ manager __object__ Giuseppe Iachini', '__subject__ Abel Hernández __predicate__ club __object__ U.S. Città di Palermo']]
Text: Abel Hernandez has played for the club US Citta di Palermo whose manager is Giuseppe Iachini.
Subject: ['U.S. Città di Palermo', 'Abel Hernández']
Predicate: ['manager', 'club']
Object: ['Giuseppe Iachini', 'U.S. Città di Palermo']

Triple: [['__subject__ U.S. Città di Palermo __predicate__ manager __object__ Giuseppe Iachini', '__subject__ Abel Hernández __predicate__ club __object__ U.S. Città di Palermo']]
Text: Abel Hernandez plays for the club, U.S. Citta di Palermo, managed by Giuseppe Iachini.
Subject: ['U.S. Città di Palermo', 'Abel Hernández']
Predicate: ['manager', 'club']
Object: ['Giuseppe Iachini', 'U.S. Città di Palermo']

Triple: [['__subject__ United Petrotrin F.C. __predicate__ ground __object__ Palo Seco', '__subject__ Akeem Adams __predicate__ club __object__ United Petrotrin F.C.']]
Text: Akeem Adams is a member of the United Petrotrin F.C. club who play in Palo Seco.
Subject: ['United Petrotrin F.C.', 'Akeem Adams']
Predicate: ['ground', 'club']
Object: ['Palo Seco', 'United Petrotrin F.C.']

Triple: [['__subject__ United Petrotrin F.C. __predicate__ ground __object__ Palo Seco', '__subject__ Akeem Adams __predicate__ club __object__ United Petrotrin F.C.']]
Text: Akeem Adams played for United Petrotrin FC whose ground is Palo Seco.
Subject: ['United Petrotrin F.C.', 'Akeem Adams']
Predicate: ['ground', 'club']
Object: ['Palo Seco', 'United Petrotrin F.C.']

Triple: [['__subject__ United Petrotrin F.C. __predicate__ ground __object__ Palo Seco', '__subject__ Akeem Adams __predicate__ club __object__ United Petrotrin F.C.']]
Text: Akeem Adams is a member of the United Petrotrin F.C. club whose ground is Palo Seco.
Subject: ['United Petrotrin F.C.', 'Akeem Adams']
Predicate: ['ground', 'club']
Object: ['Palo Seco', 'United Petrotrin F.C.']

Triple: [['__subject__ 103 Colmore Row __predicate__ architect __object__ John Madin', '__subject__ 103 Colmore Row __predicate__ location __object__ Colmore Row, Birmingham, England']]
Text: Architect John Madin, designed 103 Colmore Row, located on Colmore Row, in Birmingham, England.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['architect', 'location']
Object: ['John Madin', 'Colmore Row, Birmingham, England']

Triple: [['__subject__ 103 Colmore Row __predicate__ architect __object__ John Madin', '__subject__ 103 Colmore Row __predicate__ location __object__ Colmore Row, Birmingham, England']]
Text: John Madin designed 103 Colmore Row, Birmingham, England.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['architect', 'location']
Object: ['John Madin', 'Colmore Row, Birmingham, England']

Triple: [['__subject__ 103 Colmore Row __predicate__ architect __object__ John Madin', '__subject__ 103 Colmore Row __predicate__ location __object__ Colmore Row, Birmingham, England']]
Text: 103 Colmore Row located in Birmingham, England was designed by the architect John Madin.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['architect', 'location']
Object: ['John Madin', 'Colmore Row, Birmingham, England']

Triple: [['__subject__ 103 Colmore Row __predicate__ architect __object__ John Madin', '__subject__ 103 Colmore Row __predicate__ location __object__ Colmore Row']]
Text: 103 Colmore Row, located at Colmore Row, was designed by the architect, John Madin.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['architect', 'location']
Object: ['John Madin', 'Colmore Row']

Triple: [['__subject__ 103 Colmore Row __predicate__ architect __object__ John Madin', '__subject__ 103 Colmore Row __predicate__ location __object__ Colmore Row']]
Text: John Madin is the architect of 103 Colmore Row, located in Colmore Row.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['architect', 'location']
Object: ['John Madin', 'Colmore Row']

Triple: [['__subject__ 103 Colmore Row __predicate__ architect __object__ John Madin', '__subject__ 103 Colmore Row __predicate__ location __object__ Colmore Row']]
Text: Architect John Madin designed 103 Colmore Row, located at Colmore Row.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['architect', 'location']
Object: ['John Madin', 'Colmore Row']

Triple: [['__subject__ 103 Colmore Row __predicate__ architect __object__ John Madin', '__subject__ John Madin __predicate__ birthPlace __object__ Birmingham']]
Text: 103 Colmore Row was designed by John Madin, born in Birmingham.
Subject: ['103 Colmore Row', 'John Madin']
Predicate: ['architect', 'birthPlace']
Object: ['John Madin', 'Birmingham']

Triple: [['__subject__ 103 Colmore Row __predicate__ architect __object__ John Madin', '__subject__ John Madin __predicate__ birthPlace __object__ Birmingham']]
Text: 103 Colmore Row was designed by the architect John Madin who was born in Birmingham.
Subject: ['103 Colmore Row', 'John Madin']
Predicate: ['architect', 'birthPlace']
Object: ['John Madin', 'Birmingham']

Triple: [['__subject__ 103 Colmore Row __predicate__ architect __object__ John Madin', '__subject__ John Madin __predicate__ birthPlace __object__ Birmingham']]
Text: Architect John Madin, born in Birmingham, designed 103 Colmore Row.
Subject: ['103 Colmore Row', 'John Madin']
Predicate: ['architect', 'birthPlace']
Object: ['John Madin', 'Birmingham']

Triple: [['__subject__ 103 Colmore Row __predicate__ architect __object__ John Madin', '__subject__ John Madin __predicate__ origin __object__ Birmingham']]
Text: John Madin was an architect from Birmingham who designed 103 Colmore Row.
Subject: ['103 Colmore Row', 'John Madin']
Predicate: ['architect', 'origin']
Object: ['John Madin', 'Birmingham']

Triple: [['__subject__ 103 Colmore Row __predicate__ architect __object__ John Madin', '__subject__ John Madin __predicate__ origin __object__ Birmingham']]
Text: 103 Colmore Row was designed by the architect John Madin whose hometown was Birmingham.
Subject: ['103 Colmore Row', 'John Madin']
Predicate: ['architect', 'origin']
Object: ['John Madin', 'Birmingham']

Triple: [['__subject__ 103 Colmore Row __predicate__ architect __object__ John Madin', '__subject__ John Madin __predicate__ origin __object__ Birmingham']]
Text: John Madin from Birmingham was the architect of 103 Colmore Row.
Subject: ['103 Colmore Row', 'John Madin']
Predicate: ['architect', 'origin']
Object: ['John Madin', 'Birmingham']

Triple: [['__subject__ 103 Colmore Row __predicate__ completionDate __object__ 1976', '__subject__ 103 Colmore Row __predicate__ location __object__ Colmore Row']]
Text: 103 Colmore Row at Colmore Row was completed in 1976.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['completionDate', 'location']
Object: ['1976', 'Colmore Row']

Triple: [['__subject__ 103 Colmore Row __predicate__ completionDate __object__ 1976', '__subject__ 103 Colmore Row __predicate__ location __object__ Colmore Row']]
Text: 103 Colmore Row was completed in 1976.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['completionDate', 'location']
Object: ['1976', 'Colmore Row']

Triple: [['__subject__ 103 Colmore Row __predicate__ completionDate __object__ 1976', '__subject__ 103 Colmore Row __predicate__ location __object__ Colmore Row']]
Text: Number 103 in Colmore Row was completed in 1976.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['completionDate', 'location']
Object: ['1976', 'Colmore Row']

Triple: [['__subject__ 103 Colmore Row __predicate__ floorCount __object__ 23', '__subject__ 103 Colmore Row __predicate__ location __object__ Colmore Row']]
Text: 103 Colmore Row actually on Colmore Row has 23 floors.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['floorCount', 'location']
Object: ['23', 'Colmore Row']

Triple: [['__subject__ 103 Colmore Row __predicate__ location __object__ Colmore Row, Birmingham, England', '__subject__ 103 Colmore Row __predicate__ floorCount __object__ 23']]
Text: There are 23 floors at 103 Colmore Row, Birmingham, England.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['location', 'floorCount']
Object: ['Colmore Row, Birmingham, England', '23']

Triple: [['__subject__ 103 Colmore Row __predicate__ location __object__ Colmore Row, Birmingham, England', '__subject__ 103 Colmore Row __predicate__ floorCount __object__ 23']]
Text: 103 Colmore Row is in Birmingham, England and has 23 floors.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['location', 'floorCount']
Object: ['Colmore Row, Birmingham, England', '23']

Triple: [['__subject__ 103 Colmore Row __predicate__ location __object__ Colmore Row, Birmingham, England', '__subject__ 103 Colmore Row __predicate__ floorCount __object__ 23']]
Text: 103 Colmore Row with 23 floors, is located on Colmore Row, Birmingham, England.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['location', 'floorCount']
Object: ['Colmore Row, Birmingham, England', '23']

Triple: [['__subject__ 103 Colmore Row __predicate__ location __object__ Birmingham', '__subject__ 103 Colmore Row __predicate__ architect __object__ John Madin']]
Text: 103 Colmore Row, designed by the architect John Madin is located in Birmingham.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['location', 'architect']
Object: ['Birmingham', 'John Madin']

Triple: [['__subject__ 103 Colmore Row __predicate__ location __object__ Birmingham', '__subject__ 103 Colmore Row __predicate__ architect __object__ John Madin']]
Text: 103 Colmore Row, designed by architect John Madin, is located in Birmingham.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['location', 'architect']
Object: ['Birmingham', 'John Madin']

Triple: [['__subject__ 103 Colmore Row __predicate__ location __object__ Birmingham', '__subject__ 103 Colmore Row __predicate__ architect __object__ John Madin']]
Text: 103 Colmore Row is located in Birmingham and was designed by the architect John Madin.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['location', 'architect']
Object: ['Birmingham', 'John Madin']

Triple: [['__subject__ 103 Colmore Row __predicate__ location __object__ Birmingham', '__subject__ 103 Colmore Row __predicate__ floorCount __object__ 23']]
Text: 103 Colmore Row, Birmingham is a building with 23 floors.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['location', 'floorCount']
Object: ['Birmingham', '23']

Triple: [['__subject__ 103 Colmore Row __predicate__ location __object__ Birmingham', '__subject__ 103 Colmore Row __predicate__ floorCount __object__ 23']]
Text: 103 Colmore Row, with 23 floors, is located in Birmingham.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['location', 'floorCount']
Object: ['Birmingham', '23']

Triple: [['__subject__ 103 Colmore Row __predicate__ location __object__ Birmingham', '__subject__ 103 Colmore Row __predicate__ floorCount __object__ 23']]
Text: 103 Colmore Row, located in Birmingham has 23 floors.
Subject: ['103 Colmore Row', '103 Colmore Row']
Predicate: ['location', 'floorCount']
Object: ['Birmingham', '23']

Triple: [['__subject__ 108 St Georges Terrace __predicate__ cost __object__ 120 million (Australian dollars)', '__subject__ 108 St Georges Terrace __predicate__ floorCount __object__ 50']]
Text: 108 St Georges Terrace cost 120 million Australian dollars and has 50 floors.
Subject: ['108 St Georges Terrace', '108 St Georges Terrace']
Predicate: ['cost', 'floorCount']
Object: ['120 million (Australian dollars)', '50']

Triple: [['__subject__ 108 St Georges Terrace __predicate__ cost __object__ 120 million (Australian dollars)', '__subject__ 108 St Georges Terrace __predicate__ floorCount __object__ 50']]
Text: 108 St Georges Terrace has 50 floors and cost 120 million Australian dollars.
Subject: ['108 St Georges Terrace', '108 St Georges Terrace']
Predicate: ['cost', 'floorCount']
Object: ['120 million (Australian dollars)', '50']

Triple: [['__subject__ 108 St Georges Terrace __predicate__ location __object__ Perth', '__subject__ Perth __predicate__ country __object__ Australia']]
Text: 108 St. Georges Terrace is located in Perth, Australia.
Subject: ['108 St Georges Terrace', 'Perth']
Predicate: ['location', 'country']
Object: ['Perth', 'Australia']

Triple: [['__subject__ 108 St Georges Terrace __predicate__ location __object__ Perth', '__subject__ Perth __predicate__ country __object__ Australia']]
Text: The 108 St. Georges Terrace is located in Perth, Australia.
Subject: ['108 St Georges Terrace', 'Perth']
Predicate: ['location', 'country']
Object: ['Perth', 'Australia']

Triple: [['__subject__ 11 Diagonal Street __predicate__ completionDate __object__ 1983', '__subject__ 11 Diagonal Street __predicate__ architect __object__ Helmut Jahn']]
Text: The architect of 11 Diagonal Street, completed in 1983, was Helmut Jahn.
Subject: ['11 Diagonal Street', '11 Diagonal Street']
Predicate: ['completionDate', 'architect']
Object: ['1983', 'Helmut Jahn']

Triple: [['__subject__ 11 Diagonal Street __predicate__ completionDate __object__ 1983', '__subject__ 11 Diagonal Street __predicate__ architect __object__ Helmut Jahn']]
Text: Completed in 1983, the architect of 11 Diagonal Street was Helmut Jahn.
Subject: ['11 Diagonal Street', '11 Diagonal Street']
Predicate: ['completionDate', 'architect']
Object: ['1983', 'Helmut Jahn']

Triple: [['__subject__ 11 Diagonal Street __predicate__ completionDate __object__ 1983', '__subject__ 11 Diagonal Street __predicate__ architect __object__ Helmut Jahn']]
Text: 11 Diagonal Street was designed by Helmut Jahn and completed in 1983.
Subject: ['11 Diagonal Street', '11 Diagonal Street']
Predicate: ['completionDate', 'architect']
Object: ['1983', 'Helmut Jahn']

Triple: [['__subject__ 11 Diagonal Street __predicate__ completionDate __object__ 1983', '__subject__ 11 Diagonal Street __predicate__ floorCount __object__ 20']]
Text: 11 Diagonal Street has 20 floors and was completed in 1983.
Subject: ['11 Diagonal Street', '11 Diagonal Street']
Predicate: ['completionDate', 'floorCount']
Object: ['1983', '20']

Triple: [['__subject__ 11 Diagonal Street __predicate__ completionDate __object__ 1983', '__subject__ 11 Diagonal Street __predicate__ floorCount __object__ 20']]
Text: 11 Diagonal Street was completed in 1983 and has 20 floors.
Subject: ['11 Diagonal Street', '11 Diagonal Street']
Predicate: ['completionDate', 'floorCount']
Object: ['1983', '20']

Triple: [['__subject__ 11 Diagonal Street __predicate__ floorCount __object__ 20', '__subject__ 11 Diagonal Street __predicate__ architect __object__ Helmut Jahn']]
Text: 11 Diagonal Street has 20 floors and was designed by Helmut Jahn.
Subject: ['11 Diagonal Street', '11 Diagonal Street']
Predicate: ['floorCount', 'architect']
Object: ['20', 'Helmut Jahn']

Triple: [['__subject__ 11 Diagonal Street __predicate__ floorCount __object__ 20', '__subject__ 11 Diagonal Street __predicate__ architect __object__ Helmut Jahn']]
Text: 11 Diagonal Street has 20 floors and its architect is Helmut Jahn.
Subject: ['11 Diagonal Street', '11 Diagonal Street']
Predicate: ['floorCount', 'architect']
Object: ['20', 'Helmut Jahn']

Triple: [['__subject__ 11 Diagonal Street __predicate__ floorCount __object__ 20', '__subject__ 11 Diagonal Street __predicate__ owner __object__ Redefine Properties Limited']]
Text: 11 Diagonal Street has 20 floors and is owned by Redefine Properties Limited.
Subject: ['11 Diagonal Street', '11 Diagonal Street']
Predicate: ['floorCount', 'owner']
Object: ['20', 'Redefine Properties Limited']

Triple: [['__subject__ 11 Diagonal Street __predicate__ floorCount __object__ 20', '__subject__ 11 Diagonal Street __predicate__ owner __object__ Redefine Properties Limited']]
Text: 11 Diagonal Street, which is owned by Redefine Properties Limited, has 20 floors.
Subject: ['11 Diagonal Street', '11 Diagonal Street']
Predicate: ['floorCount', 'owner']
Object: ['20', 'Redefine Properties Limited']

Triple: [['__subject__ 11 Diagonal Street __predicate__ floorCount __object__ 20', '__subject__ 11 Diagonal Street __predicate__ owner __object__ Redefine Properties Limited']]
Text: 11 Diagonal Street which has 20 floors is owned by Redefine Properties Ltd.
Subject: ['11 Diagonal Street', '11 Diagonal Street']
Predicate: ['floorCount', 'owner']
Object: ['20', 'Redefine Properties Limited']

Triple: [['__subject__ 11 Diagonal Street __predicate__ location __object__ South Africa', '__subject__ South Africa __predicate__ capital __object__ Cape Town']]
Text: Cape Town is the capital of South Africa where 11 Diagonal Street is located.
Subject: ['11 Diagonal Street', 'South Africa']
Predicate: ['location', 'capital']
Object: ['South Africa', 'Cape Town']

Triple: [['__subject__ 11 Diagonal Street __predicate__ location __object__ South Africa', '__subject__ South Africa __predicate__ ethnicGroup __object__ Asian South Africans']]
Text: 11 Diagonal Street is located in South Africa, where there is an ethnic group of Asian South Africans.
Subject: ['11 Diagonal Street', 'South Africa']
Predicate: ['location', 'ethnicGroup']
Object: ['South Africa', 'Asian South Africans']

Triple: [['__subject__ 11 Diagonal Street __predicate__ location __object__ South Africa', '__subject__ South Africa __predicate__ ethnicGroup __object__ Asian South Africans']]
Text: 11 Diagonal Street is found in South Africa where one of the ethnic groups is Asian South Africans.
Subject: ['11 Diagonal Street', 'South Africa']
Predicate: ['location', 'ethnicGroup']
Object: ['South Africa', 'Asian South Africans']

Triple: [['__subject__ 11 Diagonal Street __predicate__ location __object__ South Africa', '__subject__ South Africa __predicate__ ethnicGroup __object__ Asian South Africans']]
Text: There is an ethnic group of Asian South Africans and the address 11 Diagonal Street is also located in South Africa.
Subject: ['11 Diagonal Street', 'South Africa']
Predicate: ['location', 'ethnicGroup']
Object: ['South Africa', 'Asian South Africans']

Triple: [['__subject__ 11 Diagonal Street __predicate__ location __object__ South Africa', '__subject__ South Africa __predicate__ ethnicGroup __object__ White South African']]
Text: 11 Diagonal Street is located in South Africa where white South Africans are an ethnic group.
Subject: ['11 Diagonal Street', 'South Africa']
Predicate: ['location', 'ethnicGroup']
Object: ['South Africa', 'White South African']

Triple: [['__subject__ 11 Diagonal Street __predicate__ location __object__ South Africa', '__subject__ South Africa __predicate__ ethnicGroup __object__ White South African']]
Text: The address, 11 Diagonal Street is located in South Africa where White South Africans are one of the ethnic groups.
Subject: ['11 Diagonal Street', 'South Africa']
Predicate: ['location', 'ethnicGroup']
Object: ['South Africa', 'White South African']

Triple: [['__subject__ 11 Diagonal Street __predicate__ location __object__ South Africa', '__subject__ South Africa __predicate__ leader __object__ Cyril Ramaphosa']]
Text: 11 Diagonal Street is located in South Africa, which has Cyril Ramaphosa as a leader.
Subject: ['11 Diagonal Street', 'South Africa']
Predicate: ['location', 'leader']
Object: ['South Africa', 'Cyril Ramaphosa']

Triple: [['__subject__ 11 Diagonal Street __predicate__ location __object__ South Africa', '__subject__ South Africa __predicate__ leader __object__ Cyril Ramaphosa']]
Text: 11 Diagonal Street is located in South Africa, a country led by Cyril Ramaphosa.
Subject: ['11 Diagonal Street', 'South Africa']
Predicate: ['location', 'leader']
Object: ['South Africa', 'Cyril Ramaphosa']

Triple: [['__subject__ 11 Diagonal Street __predicate__ location __object__ South Africa', '__subject__ South Africa __predicate__ leader __object__ Cyril Ramaphosa']]
Text: The address, 11 Diagonal Street is located in South Africa, the country that has Cyril Ramaphosa as one of its leaders.
Subject: ['11 Diagonal Street', 'South Africa']
Predicate: ['location', 'leader']
Object: ['South Africa', 'Cyril Ramaphosa']

Triple: [['__subject__ 11 Diagonal Street __predicate__ location __object__ South Africa', '__subject__ South Africa __predicate__ leader __object__ Jacob Zuma']]
Text: 11 Diagonal Street is located in South Africa, where the leader is called Jacob Zuma.
Subject: ['11 Diagonal Street', 'South Africa']
Predicate: ['location', 'leader']
Object: ['South Africa', 'Jacob Zuma']

Triple: [['__subject__ 11 Diagonal Street __predicate__ location __object__ South Africa', '__subject__ South Africa __predicate__ leader __object__ Jacob Zuma']]
Text: Jacob Zuma is the leader of South Africa which is also the location of 11 Diagonal Street.
Subject: ['11 Diagonal Street', 'South Africa']
Predicate: ['location', 'leader']
Object: ['South Africa', 'Jacob Zuma']

Triple: [['__subject__ 11 Diagonal Street __predicate__ location __object__ South Africa', '__subject__ South Africa __predicate__ leader __object__ Jacob Zuma']]
Text: The address, 11 Diagonal Street is located in South Africa, which is led by Jacob Zuma.
Subject: ['11 Diagonal Street', 'South Africa']
Predicate: ['location', 'leader']
Object: ['South Africa', 'Jacob Zuma']

Triple: [['__subject__ 200 Public Square __predicate__ floorCount __object__ 45', '__subject__ 200 Public Square __predicate__ completionDate __object__ 1985']]
Text: 200 Public Square, completed in 1985, has a floor count of 45.
Subject: ['200 Public Square', '200 Public Square']
Predicate: ['floorCount', 'completionDate']
Object: ['45', '1985']

Triple: [['__subject__ 200 Public Square __predicate__ floorCount __object__ 45', '__subject__ 200 Public Square __predicate__ completionDate __object__ 1985']]
Text: 200 Public Square finished in 1985 has 45 floors.
Subject: ['200 Public Square', '200 Public Square']
Predicate: ['floorCount', 'completionDate']
Object: ['45', '1985']

Triple: [['__subject__ 200 Public Square __predicate__ floorCount __object__ 45', '__subject__ 200 Public Square __predicate__ completionDate __object__ 1985']]
Text: 200 Public Square was completed in 1985 and has 45 floors.
Subject: ['200 Public Square', '200 Public Square']
Predicate: ['floorCount', 'completionDate']
Object: ['45', '1985']

Triple: [['__subject__ 200 Public Square __predicate__ floorCount __object__ 45', '__subject__ 200 Public Square __predicate__ location __object__ Cleveland, Ohio 44114']]
Text: 200 Public Square, which has 45 floors, is located in Cleveland, Ohio 44114.
Subject: ['200 Public Square', '200 Public Square']
Predicate: ['floorCount', 'location']
Object: ['45', 'Cleveland, Ohio 44114']

Triple: [['__subject__ 200 Public Square __predicate__ floorCount __object__ 45', '__subject__ 200 Public Square __predicate__ location __object__ Cleveland, Ohio 44114']]
Text: There are 45 floors of 200 Public Square in Cleveland, Ohio, 44114.
Subject: ['200 Public Square', '200 Public Square']
Predicate: ['floorCount', 'location']
Object: ['45', 'Cleveland, Ohio 44114']

Triple: [['__subject__ 200 Public Square __predicate__ floorCount __object__ 45', '__subject__ 200 Public Square __predicate__ location __object__ Cleveland, Ohio 44114']]
Text: 200 Public Square, which has a floor count of 45, is located in Cleveland, Ohio 44114.
Subject: ['200 Public Square', '200 Public Square']
Predicate: ['floorCount', 'location']
Object: ['45', 'Cleveland, Ohio 44114']

Triple: [['__subject__ 200 Public Square __predicate__ location __object__ Cleveland', '__subject__ Cleveland __predicate__ country __object__ United States']]
Text: 200 Public square is in Cleveland, USA.
Subject: ['200 Public Square', 'Cleveland']
Predicate: ['location', 'country']
Object: ['Cleveland', 'United States']

Triple: [['__subject__ 200 Public Square __predicate__ location __object__ Cleveland', '__subject__ Cleveland __predicate__ country __object__ United States']]
Text: 200 Public Square is located in Cleveland, United States.
Subject: ['200 Public Square', 'Cleveland']
Predicate: ['location', 'country']
Object: ['Cleveland', 'United States']

Triple: [['__subject__ 200 Public Square __predicate__ location __object__ Cleveland', '__subject__ Cleveland __predicate__ governingBody __object__ Cleveland City Council']]
Text: 200 Public Square is in Cleveland, governed by Cleveland City Council.
Subject: ['200 Public Square', 'Cleveland']
Predicate: ['location', 'governingBody']
Object: ['Cleveland', 'Cleveland City Council']

Triple: [['__subject__ 200 Public Square __predicate__ location __object__ Cleveland', '__subject__ Cleveland __predicate__ governingBody __object__ Cleveland City Council']]
Text: 200 Public Square is located in Cleveland whose governing body is Cleveland City Council.
Subject: ['200 Public Square', 'Cleveland']
Predicate: ['location', 'governingBody']
Object: ['Cleveland', 'Cleveland City Council']

Triple: [['__subject__ 200 Public Square __predicate__ location __object__ Cleveland', '__subject__ Cleveland __predicate__ governingBody __object__ Cleveland City Council']]
Text: 200 Public Square is in Cleveland which is governed by Cleveland City Council.
Subject: ['200 Public Square', 'Cleveland']
Predicate: ['location', 'governingBody']
Object: ['Cleveland', 'Cleveland City Council']

Triple: [['__subject__ 200 Public Square __predicate__ location __object__ Cleveland', '__subject__ Cleveland __predicate__ isPartOf __object__ Cuyahoga County, Ohio']]
Text: 200 Public Square is located in Cleveland, Cuyahoga County, Ohio.
Subject: ['200 Public Square', 'Cleveland']
Predicate: ['location', 'isPartOf']
Object: ['Cleveland', 'Cuyahoga County, Ohio']

Triple: [['__subject__ 200 Public Square __predicate__ location __object__ Cleveland', '__subject__ Cleveland __predicate__ isPartOf __object__ Cuyahoga County, Ohio']]
Text: 200 Public square is in Cleveland, which is part of Cuyahoga County, Ohio.
Subject: ['200 Public Square', 'Cleveland']
Predicate: ['location', 'isPartOf']
Object: ['Cleveland', 'Cuyahoga County, Ohio']

Triple: [['__subject__ 200 Public Square __predicate__ location __object__ Cleveland', '__subject__ Cleveland __predicate__ isPartOf __object__ Ohio']]
Text: 200 Public Square is found in Cleveland, Ohio.
Subject: ['200 Public Square', 'Cleveland']
Predicate: ['location', 'isPartOf']
Object: ['Cleveland', 'Ohio']

Triple: [['__subject__ 200 Public Square __predicate__ location __object__ Cleveland', '__subject__ Cleveland __predicate__ isPartOf __object__ Ohio']]
Text: 200 Public Square is located in Cleveland, Ohio.
Subject: ['200 Public Square', 'Cleveland']
Predicate: ['location', 'isPartOf']
Object: ['Cleveland', 'Ohio']

Triple: [['__subject__ 200 Public Square __predicate__ location __object__ Cleveland', '__subject__ Cleveland __predicate__ isPartOf __object__ Ohio']]
Text: 200 Public Square is in Cleveland, Ohio.
Subject: ['200 Public Square', 'Cleveland']
Predicate: ['location', 'isPartOf']
Object: ['Cleveland', 'Ohio']

Triple: [['__subject__ 200 Public Square __predicate__ location __object__ Cleveland', '__subject__ Cleveland __predicate__ leader __object__ Frank G. Jackson']]
Text: 200 Public square is in Cleveland which is led by Frank G Jackson.
Subject: ['200 Public Square', 'Cleveland']
Predicate: ['location', 'leader']
Object: ['Cleveland', 'Frank G. Jackson']

Triple: [['__subject__ 200 Public Square __predicate__ location __object__ Public Square, Cleveland', '__subject__ 200 Public Square __predicate__ floorCount __object__ 45']]
Text: 200 Public Square is located at Public Square, Cleveland and has a floor count of 45.
Subject: ['200 Public Square', '200 Public Square']
Predicate: ['location', 'floorCount']
Object: ['Public Square, Cleveland', '45']

Triple: [['__subject__ 200 Public Square __predicate__ location __object__ Public Square, Cleveland', '__subject__ 200 Public Square __predicate__ floorCount __object__ 45']]
Text: 200 Public Square has 45 floors and is located in Public Square, Cleveland.
Subject: ['200 Public Square', '200 Public Square']
Predicate: ['location', 'floorCount']
Object: ['Public Square, Cleveland', '45']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ buildingStartDate __object__ January 2009', '__subject__ 20 Fenchurch Street __predicate__ floorArea __object__ 62145.3 (square metres)']]
Text: 20 Fenchurch Street has a floor area of 62145.3 square metres and was begun in January 2009.
Subject: ['20 Fenchurch Street', '20 Fenchurch Street']
Predicate: ['buildingStartDate', 'floorArea']
Object: ['January 2009', '62145.3 (square metres)']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ buildingStartDate __object__ January 2009', '__subject__ 20 Fenchurch Street __predicate__ floorArea __object__ 62145.3 (square metres)']]
Text: Construction of 20 Fenchurch Street began in January 2009 and the building has a floor area of 62145.3 square metres.
Subject: ['20 Fenchurch Street', '20 Fenchurch Street']
Predicate: ['buildingStartDate', 'floorArea']
Object: ['January 2009', '62145.3 (square metres)']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ completionDate __object__ April 2014', '__subject__ 20 Fenchurch Street __predicate__ floorArea __object__ 62145.3 (square metres)']]
Text: 20 Fenchurch Street was completed in April 2014 and has a floor area of 62145.3 square meters.
Subject: ['20 Fenchurch Street', '20 Fenchurch Street']
Predicate: ['completionDate', 'floorArea']
Object: ['April 2014', '62145.3 (square metres)']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ completionDate __object__ April 2014', '__subject__ 20 Fenchurch Street __predicate__ floorArea __object__ 62145.3 (square metres)']]
Text: 20 Fenchurch Street, with a floor area of 62145.3 square metres, was completed in April of 2014.
Subject: ['20 Fenchurch Street', '20 Fenchurch Street']
Predicate: ['completionDate', 'floorArea']
Object: ['April 2014', '62145.3 (square metres)']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ completionDate __object__ April 2014', '__subject__ 20 Fenchurch Street __predicate__ floorArea __object__ 62145.3 (square metres)']]
Text: 20 Fenchurch Street was completed in April 2014 and has a floor area of 62145.3 square metres.
Subject: ['20 Fenchurch Street', '20 Fenchurch Street']
Predicate: ['completionDate', 'floorArea']
Object: ['April 2014', '62145.3 (square metres)']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ completionDate __object__ April 2014', '__subject__ 20 Fenchurch Street __predicate__ floorCount __object__ 34']]
Text: 20 Fenchurch Street, which has a floor count of 34, was completed in April 2014.
Subject: ['20 Fenchurch Street', '20 Fenchurch Street']
Predicate: ['completionDate', 'floorCount']
Object: ['April 2014', '34']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ completionDate __object__ April 2014', '__subject__ 20 Fenchurch Street __predicate__ floorCount __object__ 34']]
Text: 20 Fenchurch Street was completed in April 2014, and has 34 floors.
Subject: ['20 Fenchurch Street', '20 Fenchurch Street']
Predicate: ['completionDate', 'floorCount']
Object: ['April 2014', '34']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ completionDate __object__ April 2014', '__subject__ 20 Fenchurch Street __predicate__ floorCount __object__ 34']]
Text: 20 Fenchurch Street, with 34 floors, was completed April 2014.
Subject: ['20 Fenchurch Street', '20 Fenchurch Street']
Predicate: ['completionDate', 'floorCount']
Object: ['April 2014', '34']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ location __object__ London', '__subject__ London __predicate__ leader __object__ Boris Johnson']]
Text: Boris Johnson is the leader of London, the city where 20 Fenchurch Street is located.
Subject: ['20 Fenchurch Street', 'London']
Predicate: ['location', 'leader']
Object: ['London', 'Boris Johnson']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ location __object__ London', '__subject__ London __predicate__ leader __object__ Boris Johnson']]
Text: The leader of London is Boris Johnson and is home to 20 Fenchurch Street.
Subject: ['20 Fenchurch Street', 'London']
Predicate: ['location', 'leader']
Object: ['London', 'Boris Johnson']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ location __object__ London', '__subject__ London __predicate__ leaderTitle __object__ Parliament of the United Kingdom']]
Text: 20 Fenchurch Street is located in London whose leader is the Parliament of the United Kingdom.
Subject: ['20 Fenchurch Street', 'London']
Predicate: ['location', 'leaderTitle']
Object: ['London', 'Parliament of the United Kingdom']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ location __object__ London', '__subject__ London __predicate__ leaderTitle __object__ Parliament of the United Kingdom']]
Text: 20 Fenchurch Street is located in London, which is led by the parliament of the United Kingdom.
Subject: ['20 Fenchurch Street', 'London']
Predicate: ['location', 'leaderTitle']
Object: ['London', 'Parliament of the United Kingdom']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ location __object__ London', '__subject__ London __predicate__ leaderTitle __object__ Parliament of the United Kingdom']]
Text: The Parliament of the United Kingdom is the leader of London, the city in which 20 Fenchurch Street is located.
Subject: ['20 Fenchurch Street', 'London']
Predicate: ['location', 'leaderTitle']
Object: ['London', 'Parliament of the United Kingdom']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ location __object__ United Kingdom', '__subject__ United Kingdom __predicate__ currency __object__ Pound sterling']]
Text: 20 Fenchurch Street is located within the United Kingdom, where the currency is pounds sterling.
Subject: ['20 Fenchurch Street', 'United Kingdom']
Predicate: ['location', 'currency']
Object: ['United Kingdom', 'Pound sterling']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ location __object__ United Kingdom', '__subject__ United Kingdom __predicate__ currency __object__ Pound sterling']]
Text: 20 Fenchurch Street is located in the United Kingdom, whose currency is the Pound sterling.
Subject: ['20 Fenchurch Street', 'United Kingdom']
Predicate: ['location', 'currency']
Object: ['United Kingdom', 'Pound sterling']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ location __object__ United Kingdom', '__subject__ United Kingdom __predicate__ currency __object__ Pound sterling']]
Text: The pound sterling is the currency of the United Kingdom, which is also the location of 20 Fenchurch Street.
Subject: ['20 Fenchurch Street', 'United Kingdom']
Predicate: ['location', 'currency']
Object: ['United Kingdom', 'Pound sterling']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ location __object__ United Kingdom', '__subject__ United Kingdom __predicate__ demonym __object__ British people']]
Text: 20 Fenchurch Street is located in the United Kingdom where we call the natives British people.
Subject: ['20 Fenchurch Street', 'United Kingdom']
Predicate: ['location', 'demonym']
Object: ['United Kingdom', 'British people']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ location __object__ United Kingdom', '__subject__ United Kingdom __predicate__ demonym __object__ British people']]
Text: 20 Fenchurch Street is in the United Kingdom where the demonym for natives is British people.
Subject: ['20 Fenchurch Street', 'United Kingdom']
Predicate: ['location', 'demonym']
Object: ['United Kingdom', 'British people']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ location __object__ United Kingdom', '__subject__ United Kingdom __predicate__ demonym __object__ British people']]
Text: 20 Fenchurch Street is located in the United Kingdom which is occupied by British People which is the demonym for the natives.
Subject: ['20 Fenchurch Street', 'United Kingdom']
Predicate: ['location', 'demonym']
Object: ['United Kingdom', 'British people']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ location __object__ United Kingdom', '__subject__ United Kingdom __predicate__ leader __object__ Elizabeth II']]
Text: Elizabeth 11 is a leader in the United Kingdom and 20 Fenchurch Street is also located in the United Kingdom.
Subject: ['20 Fenchurch Street', 'United Kingdom']
Predicate: ['location', 'leader']
Object: ['United Kingdom', 'Elizabeth II']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ location __object__ United Kingdom', '__subject__ United Kingdom __predicate__ leader __object__ Elizabeth II']]
Text: 20 Fenchurch Street is located in the United Kingdom whose leader is Elizabeth II.
Subject: ['20 Fenchurch Street', 'United Kingdom']
Predicate: ['location', 'leader']
Object: ['United Kingdom', 'Elizabeth II']

Triple: [['__subject__ 20 Fenchurch Street __predicate__ location __object__ United Kingdom', '__subject__ United Kingdom __predicate__ leader __object__ Elizabeth II']]
Text: 20 Fenchurch Street is located in the United Kingdom, where Queen Elizabeth II reigns.
Subject: ['20 Fenchurch Street', 'United Kingdom']
Predicate: ['location', 'leader']
Object: ['United Kingdom', 'Elizabeth II']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ buildingStartDate __object__ January, 2014', '__subject__ 250 Delaware Avenue __predicate__ floorCount __object__ 12']]
Text: 250 Delaware Ave. was begun in January 2014 and has 12 floors.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['buildingStartDate', 'floorCount']
Object: ['January, 2014', '12']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ buildingStartDate __object__ January, 2014', '__subject__ 250 Delaware Avenue __predicate__ floorCount __object__ 12']]
Text: The construction of 250 Delaware Avenue, which has 12 floors, began in January 2014.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['buildingStartDate', 'floorCount']
Object: ['January, 2014', '12']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ floorArea __object__ 30843.8 (square metres)', '__subject__ 250 Delaware Avenue __predicate__ floorCount __object__ 12']]
Text: 250 Delaware Avenue has a floor area of 30843.8 square metres and has 12 floors.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['floorArea', 'floorCount']
Object: ['30843.8 (square metres)', '12']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ floorArea __object__ 30843.8 (square metres)', '__subject__ 250 Delaware Avenue __predicate__ floorCount __object__ 12']]
Text: 250 Delaware Avenue has 12 floors and a total floor area of 30843.8 square metres.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['floorArea', 'floorCount']
Object: ['30843.8 (square metres)', '12']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ floorArea __object__ 30843.8 (square metres)', '__subject__ 250 Delaware Avenue __predicate__ floorCount __object__ 12']]
Text: 250 Delaware Avenue has a floor area of 30843.8 square metres and a floor count of 12.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['floorArea', 'floorCount']
Object: ['30843.8 (square metres)', '12']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ 250 Delaware Avenue __predicate__ architecturalStyle __object__ Postmodern architecture']]
Text: 250 Delaware Avenue is in Buffalo, New York, and it has the Postmodern style of architecture.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['location', 'architecturalStyle']
Object: ['Buffalo, New York', 'Postmodern architecture']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ 250 Delaware Avenue __predicate__ architecturalStyle __object__ Postmodern architecture']]
Text: 250 Delaware Ave. in Buffalo, N.Y. is a Postmodern style.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['location', 'architecturalStyle']
Object: ['Buffalo, New York', 'Postmodern architecture']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ 250 Delaware Avenue __predicate__ floorArea __object__ 30843.8 (square metres)']]
Text: 250 Delaware Avenue, Buffalo, New York, has a floor area of 30843.8 square metres.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['location', 'floorArea']
Object: ['Buffalo, New York', '30843.8 (square metres)']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ 250 Delaware Avenue __predicate__ floorArea __object__ 30843.8 (square metres)']]
Text: 250 Delaware Avenue is located in Buffalo, New York, and has a floor area of 30843.8 square metres.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['location', 'floorArea']
Object: ['Buffalo, New York', '30843.8 (square metres)']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ 250 Delaware Avenue __predicate__ floorArea __object__ 30843.8 (square metres)']]
Text: 250 Delaware Avenue has a floor area of 30843.8 square metres and is located in Buffalo, New York.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['location', 'floorArea']
Object: ['Buffalo, New York', '30843.8 (square metres)']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ 250 Delaware Avenue __predicate__ floorCount __object__ 12']]
Text: 250 Delaware Avenue has a floor count of 12 and is located in Buffalo New York.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['location', 'floorCount']
Object: ['Buffalo, New York', '12']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ 250 Delaware Avenue __predicate__ floorCount __object__ 12']]
Text: 250 Delaware Avenue is a location in Buffalo, New York, with a floor count of 12.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['location', 'floorCount']
Object: ['Buffalo, New York', '12']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ 250 Delaware Avenue __predicate__ floorCount __object__ 12']]
Text: 250 Delaware Avenue is in Buffalo, New York and has 12 floors.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['location', 'floorCount']
Object: ['Buffalo, New York', '12']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ Buffalo, New York __predicate__ isPartOf __object__ Erie County, New York']]
Text: 250 Delaware Avenue is in Buffalo, New York which is in Erie County New York.
Subject: ['250 Delaware Avenue', 'Buffalo, New York']
Predicate: ['location', 'isPartOf']
Object: ['Buffalo, New York', 'Erie County, New York']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ Buffalo, New York __predicate__ isPartOf __object__ Erie County, New York']]
Text: 250 Delaware Avenue is located in Buffalo, New York, which is part of Erie County New York.
Subject: ['250 Delaware Avenue', 'Buffalo, New York']
Predicate: ['location', 'isPartOf']
Object: ['Buffalo, New York', 'Erie County, New York']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ Buffalo, New York __predicate__ isPartOf __object__ Erie County, New York']]
Text: 250 Delaware Avenue is in Buffalo, New York, which is part of Erie County New York.
Subject: ['250 Delaware Avenue', 'Buffalo, New York']
Predicate: ['location', 'isPartOf']
Object: ['Buffalo, New York', 'Erie County, New York']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ Buffalo, New York __predicate__ isPartOf __object__ New York']]
Text: 250 Delaware Avenue is a location in Buffalo, New York, New York State.
Subject: ['250 Delaware Avenue', 'Buffalo, New York']
Predicate: ['location', 'isPartOf']
Object: ['Buffalo, New York', 'New York']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ Buffalo, New York __predicate__ isPartOf __object__ New York']]
Text: 250 Delaware Avenue is in Buffalo which is part of New York.
Subject: ['250 Delaware Avenue', 'Buffalo, New York']
Predicate: ['location', 'isPartOf']
Object: ['Buffalo, New York', 'New York']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ Buffalo, New York __predicate__ isPartOf __object__ New York']]
Text: 250 Delaware Avenue is located in Buffalo which is a part of New York.
Subject: ['250 Delaware Avenue', 'Buffalo, New York']
Predicate: ['location', 'isPartOf']
Object: ['Buffalo, New York', 'New York']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ Buffalo, New York __predicate__ leader __object__ Byron Brown']]
Text: Byron Brown is the leader of Buffalo, New York, where 250 Delaware Avenue is located.
Subject: ['250 Delaware Avenue', 'Buffalo, New York']
Predicate: ['location', 'leader']
Object: ['Buffalo, New York', 'Byron Brown']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ Buffalo, New York __predicate__ leader __object__ Byron Brown']]
Text: 250 Delaware Avenue is in Buffalo, New York, where Byron Brown is the leader.
Subject: ['250 Delaware Avenue', 'Buffalo, New York']
Predicate: ['location', 'leader']
Object: ['Buffalo, New York', 'Byron Brown']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York', '__subject__ Buffalo, New York __predicate__ leader __object__ Byron Brown']]
Text: 250 Delaware Avenue is in Buffalo, New York, which is led by Byron Brown.
Subject: ['250 Delaware Avenue', 'Buffalo, New York']
Predicate: ['location', 'leader']
Object: ['Buffalo, New York', 'Byron Brown']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ United States', '__subject__ 250 Delaware Avenue __predicate__ architecturalStyle __object__ Postmodern architecture']]
Text: 250 Delaware Avenue has the Postmodern style of architecture and is located in the United States.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['location', 'architecturalStyle']
Object: ['United States', 'Postmodern architecture']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ United States', '__subject__ 250 Delaware Avenue __predicate__ floorCount __object__ 12']]
Text: 250 Delaware Avenue has 12 floors and is located in the United States.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['location', 'floorCount']
Object: ['United States', '12']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ United States', '__subject__ 250 Delaware Avenue __predicate__ floorCount __object__ 12']]
Text: 250 Delaware Avenue (which has a total of 12 floors) is located in the United States.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['location', 'floorCount']
Object: ['United States', '12']

Triple: [['__subject__ 250 Delaware Avenue __predicate__ location __object__ United States', '__subject__ 250 Delaware Avenue __predicate__ floorCount __object__ 12']]
Text: 250 Delaware Avenue is located in the United States and has a floor count of 12.
Subject: ['250 Delaware Avenue', '250 Delaware Avenue']
Predicate: ['location', 'floorCount']
Object: ['United States', '12']

Triple: [['__subject__ 300 North LaSalle __predicate__ floorCount __object__ 60', '__subject__ 300 North LaSalle __predicate__ completionDate __object__ 2009']]
Text: 300 North LaSalle has 60 floors and was completed in 2009.
Subject: ['300 North LaSalle', '300 North LaSalle']
Predicate: ['floorCount', 'completionDate']
Object: ['60', '2009']

Triple: [['__subject__ 300 North LaSalle __predicate__ floorCount __object__ 60', '__subject__ 300 North LaSalle __predicate__ completionDate __object__ 2009']]
Text: There are 60 floors at 300 North LaSalle, a building that was completed in 2009.
Subject: ['300 North LaSalle', '300 North LaSalle']
Predicate: ['floorCount', 'completionDate']
Object: ['60', '2009']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ 300 North LaSalle __predicate__ architect __object__ Pickard Chilton']]
Text: 300 North LaSalle is located in Chicago and was designed by Pickard Chilton.
Subject: ['300 North LaSalle', '300 North LaSalle']
Predicate: ['location', 'architect']
Object: ['Chicago', 'Pickard Chilton']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ 300 North LaSalle __predicate__ architect __object__ Pickard Chilton']]
Text: Pickard Chilton was the architect of 300 North LaSalle in Chicago.
Subject: ['300 North LaSalle', '300 North LaSalle']
Predicate: ['location', 'architect']
Object: ['Chicago', 'Pickard Chilton']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ 300 North LaSalle __predicate__ architect __object__ Pickard Chilton']]
Text: Pickard Chilton is the architect of 300 North LaSalle in Chicago.
Subject: ['300 North LaSalle', '300 North LaSalle']
Predicate: ['location', 'architect']
Object: ['Chicago', 'Pickard Chilton']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ country __object__ United States']]
Text: 300 North LaSalle is located in Chicago, United States.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'country']
Object: ['Chicago', 'United States']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ country __object__ United States']]
Text: 300 North LaSalle is located in Chicago, in the United States.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'country']
Object: ['Chicago', 'United States']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ country __object__ United States']]
Text: 300 North LaSalle is located in Chicago, US.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'country']
Object: ['Chicago', 'United States']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ isPartOf __object__ Cook County, Illinois']]
Text: 300 North LaSalle is located in Cook County, Chicago, Illinois.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'isPartOf']
Object: ['Chicago', 'Cook County, Illinois']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ isPartOf __object__ Cook County, Illinois']]
Text: 300 North LaSalle is in Chicago in Cook County, Illinois.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'isPartOf']
Object: ['Chicago', 'Cook County, Illinois']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ isPartOf __object__ Cook County, Illinois']]
Text: 300 North LaSalle is located in Chicago which is part of Cook County, Illinois.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'isPartOf']
Object: ['Chicago', 'Cook County, Illinois']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ isPartOf __object__ DuPage County, Illinois']]
Text: 300 North LaSalle is in Chicago part of DuPage County in Illinois.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'isPartOf']
Object: ['Chicago', 'DuPage County, Illinois']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ isPartOf __object__ DuPage County, Illinois']]
Text: 300 North LaSalle is located in Chicago, which is part of DuPage County, Illinois.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'isPartOf']
Object: ['Chicago', 'DuPage County, Illinois']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ isPartOf __object__ DuPage County, Illinois']]
Text: 300 North LaSalle is located in Chicago, which is a part of Dupage County, Illinois.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'isPartOf']
Object: ['Chicago', 'DuPage County, Illinois']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ isPartOf __object__ Illinois']]
Text: 300 North LaSalle is in Chicago, in the State of Illinois.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'isPartOf']
Object: ['Chicago', 'Illinois']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ isPartOf __object__ Illinois']]
Text: 300 North LaSalle is located in Chicago, Illinois.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'isPartOf']
Object: ['Chicago', 'Illinois']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ isPartOf __object__ Illinois']]
Text: 300 North LaSalle is located in Chicago which is part of Illinois.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'isPartOf']
Object: ['Chicago', 'Illinois']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ leader __object__ Rahm Emanuel']]
Text: 300 North LaSalle is located in Chicago which is led by Rahm Emanuel.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'leader']
Object: ['Chicago', 'Rahm Emanuel']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ leader __object__ Rahm Emanuel']]
Text: 300 North LaSalle is located in Chicago, whose leader is called Rahm Emanuel.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'leader']
Object: ['Chicago', 'Rahm Emanuel']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ leader __object__ Rahm Emanuel']]
Text: 300 North LaSalle is located in Chicago where Rahm Emanuel is a leader.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'leader']
Object: ['Chicago', 'Rahm Emanuel']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ leader __object__ Susana Mendoza']]
Text: 300 North LaSalle is located in Chicago where Susana Mendoza is a leader.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'leader']
Object: ['Chicago', 'Susana Mendoza']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ leader __object__ Susana Mendoza']]
Text: The leader of Chicago is Susana Mendoza and 300 North LaSalle is also located in that city.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'leader']
Object: ['Chicago', 'Susana Mendoza']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Chicago', '__subject__ Chicago __predicate__ leader __object__ Susana Mendoza']]
Text: 300 North LaSalle is located in Chicago, which is led by Susana Mendoza.
Subject: ['300 North LaSalle', 'Chicago']
Predicate: ['location', 'leader']
Object: ['Chicago', 'Susana Mendoza']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Illinois', '__subject__ 300 North LaSalle __predicate__ architect __object__ Pickard Chilton']]
Text: The architect of 300 North Lasalle located in Illinois was Pickard Chilton.
Subject: ['300 North LaSalle', '300 North LaSalle']
Predicate: ['location', 'architect']
Object: ['Illinois', 'Pickard Chilton']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Illinois', '__subject__ 300 North LaSalle __predicate__ architect __object__ Pickard Chilton']]
Text: Pickard Chilton is the architect of 300 North LaSalle which is in Illinois.
Subject: ['300 North LaSalle', '300 North LaSalle']
Predicate: ['location', 'architect']
Object: ['Illinois', 'Pickard Chilton']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Illinois', '__subject__ 300 North LaSalle __predicate__ architect __object__ Pickard Chilton']]
Text: The architect of 300 North LaSalle, Illinois is Pickard Chilton.
Subject: ['300 North LaSalle', '300 North LaSalle']
Predicate: ['location', 'architect']
Object: ['Illinois', 'Pickard Chilton']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Illinois', '__subject__ 300 North LaSalle __predicate__ completionDate __object__ 2009']]
Text: 300 North LaSalle, Illinois, was completed in 2009.
Subject: ['300 North LaSalle', '300 North LaSalle']
Predicate: ['location', 'completionDate']
Object: ['Illinois', '2009']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Illinois', '__subject__ 300 North LaSalle __predicate__ completionDate __object__ 2009']]
Text: 300 North Lasalle was completed in 2009 and is located in Illinois.
Subject: ['300 North LaSalle', '300 North LaSalle']
Predicate: ['location', 'completionDate']
Object: ['Illinois', '2009']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Illinois', '__subject__ Illinois __predicate__ country __object__ United States']]
Text: 300 North LaSalle is located in Illinois in the United States.
Subject: ['300 North LaSalle', 'Illinois']
Predicate: ['location', 'country']
Object: ['Illinois', 'United States']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Illinois', '__subject__ Illinois __predicate__ country __object__ United States']]
Text: 300 North LaSalle is in Illinois, United States.
Subject: ['300 North LaSalle', 'Illinois']
Predicate: ['location', 'country']
Object: ['Illinois', 'United States']

Triple: [['__subject__ 300 North LaSalle __predicate__ location __object__ Illinois', '__subject__ Illinois __predicate__ country __object__ United States']]
Text: 300 North LaSalle is in Illinois which is a state in the United States.
Subject: ['300 North LaSalle', 'Illinois']
Predicate: ['location', 'country']
Object: ['Illinois', 'United States']

Triple: [['__subject__ 320 South Boston Building __predicate__ completionDate __object__ 1929', '__subject__ 320 South Boston Building __predicate__ floorCount __object__ 22']]
Text: Completed in 1929, 320 South Boston Building has 22 floors.
Subject: ['320 South Boston Building', '320 South Boston Building']
Predicate: ['completionDate', 'floorCount']
Object: ['1929', '22']

Triple: [['__subject__ 320 South Boston Building __predicate__ completionDate __object__ 1929', '__subject__ 320 South Boston Building __predicate__ floorCount __object__ 22']]
Text: 320 South Boston Building was completed in 1929 and has 22 floors.
Subject: ['320 South Boston Building', '320 South Boston Building']
Predicate: ['completionDate', 'floorCount']
Object: ['1929', '22']

Triple: [['__subject__ 320 South Boston Building __predicate__ height __object__ 121.92 (metres)', '__subject__ 320 South Boston Building __predicate__ floorCount __object__ 22']]
Text: The 320 South Boston Building is 121.92 metres tall and has 22 floors.
Subject: ['320 South Boston Building', '320 South Boston Building']
Predicate: ['height', 'floorCount']
Object: ['121.92 (metres)', '22']

Triple: [['__subject__ 320 South Boston Building __predicate__ height __object__ 121.92 (metres)', '__subject__ 320 South Boston Building __predicate__ floorCount __object__ 22']]
Text: The 320 South Boston Building has a height of 121.92 metres and has 22 floors.
Subject: ['320 South Boston Building', '320 South Boston Building']
Predicate: ['height', 'floorCount']
Object: ['121.92 (metres)', '22']

Triple: [['__subject__ 320 South Boston Building __predicate__ height __object__ 121.92 (metres)', '__subject__ 320 South Boston Building __predicate__ floorCount __object__ 22']]
Text: The 320 South Boston Building is 121.92 metres and has 22 floors.
Subject: ['320 South Boston Building', '320 South Boston Building']
Predicate: ['height', 'floorCount']
Object: ['121.92 (metres)', '22']

Triple: [['__subject__ 3Arena __predicate__ architect __object__ HOK SVE', '__subject__ 3Arena __predicate__ completionDate __object__ December 2008']]
Text: HOK SVE was the architect of the 3Arena, and it was completed in December 2008.
Subject: ['3Arena', '3Arena']
Predicate: ['architect', 'completionDate']
Object: ['HOK SVE', 'December 2008']

Triple: [['__subject__ 3Arena __predicate__ architect __object__ HOK SVE', '__subject__ 3Arena __predicate__ completionDate __object__ December 2008']]
Text: HOK SVE was the architect of 3Arena which was completed in December 2008.
Subject: ['3Arena', '3Arena']
Predicate: ['architect', 'completionDate']
Object: ['HOK SVE', 'December 2008']

Triple: [['__subject__ 3Arena __predicate__ architect __object__ HOK SVE', '__subject__ 3Arena __predicate__ completionDate __object__ December 2008']]
Text: 3Arena, designed by HOK SVE, was completed in December 2008.
Subject: ['3Arena', '3Arena']
Predicate: ['architect', 'completionDate']
Object: ['HOK SVE', 'December 2008']

Triple: [['__subject__ 3Arena __predicate__ architect __object__ Populous (company)', '__subject__ 3Arena __predicate__ completionDate __object__ December 2008']]
Text: 3Arena was completed on December 2008 and its architect was the company Populous.
Subject: ['3Arena', '3Arena']
Predicate: ['architect', 'completionDate']
Object: ['Populous (company)', 'December 2008']

Triple: [['__subject__ 3Arena __predicate__ architect __object__ Populous (company)', '__subject__ 3Arena __predicate__ completionDate __object__ December 2008']]
Text: The 3Arena was completed in December 2008 and was designed by the company Populous.
Subject: ['3Arena', '3Arena']
Predicate: ['architect', 'completionDate']
Object: ['Populous (company)', 'December 2008']

Triple: [['__subject__ 3Arena __predicate__ architect __object__ Populous (company)', '__subject__ 3Arena __predicate__ location __object__ North Wall, Dublin']]
Text: The 3Arena is located at North Wall, Dublin and the architect was the company Populous.
Subject: ['3Arena', '3Arena']
Predicate: ['architect', 'location']
Object: ['Populous (company)', 'North Wall, Dublin']

Triple: [['__subject__ 3Arena __predicate__ architect __object__ Populous (company)', '__subject__ 3Arena __predicate__ location __object__ North Wall, Dublin']]
Text: Populous were architects that designed the 3Arena that is in North Wall, Dublin.
Subject: ['3Arena', '3Arena']
Predicate: ['architect', 'location']
Object: ['Populous (company)', 'North Wall, Dublin']

Triple: [['__subject__ 3Arena __predicate__ architect __object__ Populous (company)', '__subject__ 3Arena __predicate__ location __object__ North Wall, Dublin']]
Text: Populous is the architect of 3Arena located at North Wall, Dublin.
Subject: ['3Arena', '3Arena']
Predicate: ['architect', 'location']
Object: ['Populous (company)', 'North Wall, Dublin']

Triple: [['__subject__ 3Arena __predicate__ location __object__ East Link Bridge', '__subject__ 3Arena __predicate__ architect __object__ Populous (company)']]
Text: The 3Arena, designed by the company Populous, is located at East Link Bridge.
Subject: ['3Arena', '3Arena']
Predicate: ['location', 'architect']
Object: ['East Link Bridge', 'Populous (company)']

Triple: [['__subject__ 3Arena __predicate__ location __object__ East Link Bridge', '__subject__ 3Arena __predicate__ architect __object__ Populous (company)']]
Text: Populous were the architects of the 3Arena at East Link Bridge.
Subject: ['3Arena', '3Arena']
Predicate: ['location', 'architect']
Object: ['East Link Bridge', 'Populous (company)']

Triple: [['__subject__ 3Arena __predicate__ location __object__ North Wall Quay', '__subject__ 3Arena __predicate__ architect __object__ HOK SVE']]
Text: HOK SVE was the architect of the 3Arena which is located on North Wall Quay.
Subject: ['3Arena', '3Arena']
Predicate: ['location', 'architect']
Object: ['North Wall Quay', 'HOK SVE']

Triple: [['__subject__ 3Arena __predicate__ location __object__ North Wall Quay', '__subject__ 3Arena __predicate__ architect __object__ HOK SVE']]
Text: HOK SVE was the architect of the 3Arena, which is located at the North Wall Quay.
Subject: ['3Arena', '3Arena']
Predicate: ['location', 'architect']
Object: ['North Wall Quay', 'HOK SVE']

Triple: [['__subject__ 3Arena __predicate__ location __object__ North Wall Quay', '__subject__ 3Arena __predicate__ architect __object__ HOK SVE']]
Text: HOK SVE was the architect of the 3Arena which is located at "North Wall Quay".
Subject: ['3Arena', '3Arena']
Predicate: ['location', 'architect']
Object: ['North Wall Quay', 'HOK SVE']

Triple: [['__subject__ 3Arena __predicate__ location __object__ North Wall Quay', '__subject__ 3Arena __predicate__ architect __object__ Populous (company)']]
Text: The 3Arena, designed by the architectural company Populous, is located at "North Wall Quay".
Subject: ['3Arena', '3Arena']
Predicate: ['location', 'architect']
Object: ['North Wall Quay', 'Populous (company)']

Triple: [['__subject__ 3Arena __predicate__ location __object__ North Wall Quay', '__subject__ 3Arena __predicate__ architect __object__ Populous (company)']]
Text: The architect of 3Arena (on North Wall Quay) was the company Populous.
Subject: ['3Arena', '3Arena']
Predicate: ['location', 'architect']
Object: ['North Wall Quay', 'Populous (company)']

Triple: [['__subject__ 3Arena __predicate__ location __object__ North Wall Quay', '__subject__ 3Arena __predicate__ architect __object__ Populous (company)']]
Text: The 3Arena is located at "North Wall Quay.", and was built by the company Populous.
Subject: ['3Arena', '3Arena']
Predicate: ['location', 'architect']
Object: ['North Wall Quay', 'Populous (company)']

Triple: [['__subject__ 3Arena __predicate__ location __object__ Dublin', '__subject__ 3Arena __predicate__ architect __object__ HOK SVE']]
Text: HOK SVE was the architect of the 3Arena, which can be found in Dublin.
Subject: ['3Arena', '3Arena']
Predicate: ['location', 'architect']
Object: ['Dublin', 'HOK SVE']

Triple: [['__subject__ 3Arena __predicate__ location __object__ Dublin', '__subject__ 3Arena __predicate__ architect __object__ HOK SVE']]
Text: 3Arena is located in Dublin and its architect was HOK SVE.
Subject: ['3Arena', '3Arena']
Predicate: ['location', 'architect']
Object: ['Dublin', 'HOK SVE']

Triple: [['__subject__ 3Arena __predicate__ location __object__ Dublin', '__subject__ Dublin __predicate__ isPartOf __object__ Leinster']]
Text: 3Arena is in Dublin which is part of Leinster.
Subject: ['3Arena', 'Dublin']
Predicate: ['location', 'isPartOf']
Object: ['Dublin', 'Leinster']

Triple: [['__subject__ 3Arena __predicate__ location __object__ Dublin', '__subject__ Dublin __predicate__ isPartOf __object__ Leinster']]
Text: Located in Dublin, a part of Leinster, is the 3Arena.
Subject: ['3Arena', 'Dublin']
Predicate: ['location', 'isPartOf']
Object: ['Dublin', 'Leinster']

Triple: [['__subject__ 3Arena __predicate__ location __object__ Dublin', '__subject__ Dublin __predicate__ isPartOf __object__ Leinster']]
Text: 3Arena is located in Dublin in Leinster.
Subject: ['3Arena', 'Dublin']
Predicate: ['location', 'isPartOf']
Object: ['Dublin', 'Leinster']

Triple: [['__subject__ 3Arena __predicate__ owner __object__ Live Nation Entertainment', '__subject__ 3Arena __predicate__ location __object__ North Wall Quay']]
Text: 3Arena at the North Wall Quay is owned by Live Nation Entertainment.
Subject: ['3Arena', '3Arena']
Predicate: ['owner', 'location']
Object: ['Live Nation Entertainment', 'North Wall Quay']

Triple: [['__subject__ 3Arena __predicate__ owner __object__ Live Nation Entertainment', '__subject__ 3Arena __predicate__ location __object__ North Wall Quay']]
Text: 3Arena at North Wall Quay is owned by Live Nation Entertainment.
Subject: ['3Arena', '3Arena']
Predicate: ['owner', 'location']
Object: ['Live Nation Entertainment', 'North Wall Quay']

Triple: [['__subject__ 3Arena __predicate__ owner __object__ Live Nation Entertainment', '__subject__ 3Arena __predicate__ location __object__ North Wall Quay']]
Text: 3Arena is located in North Wall Quay and its owner is Live Nation Entertainment.
Subject: ['3Arena', '3Arena']
Predicate: ['owner', 'location']
Object: ['Live Nation Entertainment', 'North Wall Quay']

Triple: [['__subject__ 3Arena __predicate__ owner __object__ Live Nation Entertainment', '__subject__ 3Arena __predicate__ location __object__ Dublin']]
Text: 3Arena, in Dublin, is owned by Live Nation Entertainment.
Subject: ['3Arena', '3Arena']
Predicate: ['owner', 'location']
Object: ['Live Nation Entertainment', 'Dublin']

Triple: [['__subject__ 3Arena __predicate__ owner __object__ Live Nation Entertainment', '__subject__ 3Arena __predicate__ location __object__ Dublin']]
Text: The 3Arena (located in Dublin) is owned by Live Nation Entertainment.
Subject: ['3Arena', '3Arena']
Predicate: ['owner', 'location']
Object: ['Live Nation Entertainment', 'Dublin']

Triple: [['__subject__ 3Arena __predicate__ owner __object__ Live Nation Entertainment', '__subject__ 3Arena __predicate__ location __object__ Dublin']]
Text: The 3Arena is located in Dublin, which is owned by Live Nation Entertainment.
Subject: ['3Arena', '3Arena']
Predicate: ['owner', 'location']
Object: ['Live Nation Entertainment', 'Dublin']

Triple: [['__subject__ 3Arena __predicate__ owner __object__ Live Nation Entertainment', '__subject__ 3Arena __predicate__ location __object__ North Wall, Dublin']]
Text: 3Arena is located in North Wall, Dublin and is owned by Live Nation Entertainment.
Subject: ['3Arena', '3Arena']
Predicate: ['owner', 'location']
Object: ['Live Nation Entertainment', 'North Wall, Dublin']

Triple: [['__subject__ 3Arena __predicate__ owner __object__ Live Nation Entertainment', '__subject__ 3Arena __predicate__ location __object__ North Wall, Dublin']]
Text: The owner of 3Arena, located at North Wall, Dublin, is Live Nation Entertainment.
Subject: ['3Arena', '3Arena']
Predicate: ['owner', 'location']
Object: ['Live Nation Entertainment', 'North Wall, Dublin']

Triple: [['__subject__ 3Arena __predicate__ owner __object__ Live Nation Entertainment', '__subject__ 3Arena __predicate__ location __object__ North Wall, Dublin']]
Text: Live Nation Entertainment own 3Arena at North Wall in Dublin.
Subject: ['3Arena', '3Arena']
Predicate: ['owner', 'location']
Object: ['Live Nation Entertainment', 'North Wall, Dublin']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ architect __object__ 3XN', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ floorCount __object__ 23']]
Text: The architect of the AC Hotel Bella Sky, Copenhagen, which has 23 floors, was 3XN.
Subject: ['AC Hotel Bella Sky Copenhagen', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['architect', 'floorCount']
Object: ['3XN', '23']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ architect __object__ 3XN', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ floorCount __object__ 23']]
Text: The AC Hotel Bella Sky in Copenhagen, which has 23 floors, was designed by the architects of the 3XN firm.
Subject: ['AC Hotel Bella Sky Copenhagen', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['architect', 'floorCount']
Object: ['3XN', '23']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ architect __object__ 3XN', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ floorCount __object__ 23']]
Text: The AC Hotel Bella Sky Copenhagen was designed by architect 3XN and has 23 floors.
Subject: ['AC Hotel Bella Sky Copenhagen', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['architect', 'floorCount']
Object: ['3XN', '23']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ developer __object__ Bella Center', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ numberOfRooms __object__ 814']]
Text: The AC Hotel Bella Sky, Copenhagen, which has 814 rooms was developed by the Bella Center.
Subject: ['AC Hotel Bella Sky Copenhagen', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['developer', 'numberOfRooms']
Object: ['Bella Center', '814']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ developer __object__ Bella Center', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ numberOfRooms __object__ 814']]
Text: Bella Center were developers of AC Hotel Bella Sky Copenhagen which has 814 rooms.
Subject: ['AC Hotel Bella Sky Copenhagen', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['developer', 'numberOfRooms']
Object: ['Bella Center', '814']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ developer __object__ Bella Center', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ numberOfRooms __object__ 814']]
Text: The AC Hotel Bella Sky, Copenhagen has 814 rooms and was developed by the Bella Center.
Subject: ['AC Hotel Bella Sky Copenhagen', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['developer', 'numberOfRooms']
Object: ['Bella Center', '814']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ location __object__ Denmark', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ tenant __object__ Marriott International']]
Text: Marriott International rents the AC Hotel Bella Sky Copenhagen which is in Denmark.
Subject: ['AC Hotel Bella Sky Copenhagen', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['location', 'tenant']
Object: ['Denmark', 'Marriott International']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ location __object__ Denmark', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ tenant __object__ Marriott International']]
Text: The Marriott International Hotel in Denmark is a tenant of AC Hotel Bella Sky Copenhagen.
Subject: ['AC Hotel Bella Sky Copenhagen', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['location', 'tenant']
Object: ['Denmark', 'Marriott International']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ owner __object__ Bella Center', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ architect __object__ 3XN']]
Text: AC Hotel Bella Sky Copenhagen whose architect was 3XN is owned by Bella Center.
Subject: ['AC Hotel Bella Sky Copenhagen', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['owner', 'architect']
Object: ['Bella Center', '3XN']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ owner __object__ Bella Center', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ architect __object__ 3XN']]
Text: AC Hotel Bella Sky Copenhagen was designed by the architects of 3XN and is owned by Bella Center.
Subject: ['AC Hotel Bella Sky Copenhagen', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['owner', 'architect']
Object: ['Bella Center', '3XN']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ owner __object__ Bella Center', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ architect __object__ 3XN']]
Text: 3XN was the architect of AC Hotel Bella Sky Copenhagen which is owned by Bella Center.
Subject: ['AC Hotel Bella Sky Copenhagen', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['owner', 'architect']
Object: ['Bella Center', '3XN']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ owner __object__ Bella Center', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ floorCount __object__ 23']]
Text: The owner of the AC Hotel Bella Sky Copenhagen (which has 23 floors) is Bella Center.
Subject: ['AC Hotel Bella Sky Copenhagen', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['owner', 'floorCount']
Object: ['Bella Center', '23']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ owner __object__ Bella Center', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ floorCount __object__ 23']]
Text: The owner of the 23 floor AC Hotel Bella Sky Copenhagen is Bella Center.
Subject: ['AC Hotel Bella Sky Copenhagen', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['owner', 'floorCount']
Object: ['Bella Center', '23']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ owner __object__ Bella Center', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ floorCount __object__ 23']]
Text: AC Hotel Bella Sky Copenhagen, which has 23 floors, is owned by Bella Center.
Subject: ['AC Hotel Bella Sky Copenhagen', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['owner', 'floorCount']
Object: ['Bella Center', '23']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ tenant __object__ Marriott International', '__subject__ Marriott International __predicate__ keyPerson __object__ Bill Marriott']]
Text: Marriott International, with Bill Marriott as a key leader, is the tenant of AC Hotel Bella Sky Copenhagen.
Subject: ['AC Hotel Bella Sky Copenhagen', 'Marriott International']
Predicate: ['tenant', 'keyPerson']
Object: ['Marriott International', 'Bill Marriott']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ tenant __object__ Marriott International', '__subject__ Marriott International __predicate__ keyPerson __object__ Bill Marriott']]
Text: The tenant of the AC Hotel Bella Sky Copenhagen is Marriott International, one of whose key people is Bill Marriott.
Subject: ['AC Hotel Bella Sky Copenhagen', 'Marriott International']
Predicate: ['tenant', 'keyPerson']
Object: ['Marriott International', 'Bill Marriott']

Triple: [['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ tenant __object__ Marriott International', '__subject__ Marriott International __predicate__ keyPerson __object__ Bill Marriott']]
Text: AC Hotel Bella Sky Copenhagen is in the Marriott International Hotel overseen by Bill Marriott of Marriott International.
Subject: ['AC Hotel Bella Sky Copenhagen', 'Marriott International']
Predicate: ['tenant', 'keyPerson']
Object: ['Marriott International', 'Bill Marriott']

Triple: [['__subject__ Adare __predicate__ isPartOf __object__ Munster', '__subject__ Adare Manor __predicate__ location __object__ Adare']]
Text: Adare Manore is located in Adare which is a part of Munster.
Subject: ['Adare', 'Adare Manor']
Predicate: ['isPartOf', 'location']
Object: ['Munster', 'Adare']

Triple: [['__subject__ Adare __predicate__ isPartOf __object__ Munster', '__subject__ Adare Manor __predicate__ location __object__ Adare']]
Text: Adare Manor is located in Adare, Munster.
Subject: ['Adare', 'Adare Manor']
Predicate: ['isPartOf', 'location']
Object: ['Munster', 'Adare']

Triple: [['__subject__ Adare __predicate__ isPartOf __object__ Munster', '__subject__ Adare Manor __predicate__ location __object__ Adare']]
Text: Adare Manor is located in Adare in Munster.
Subject: ['Adare', 'Adare Manor']
Predicate: ['isPartOf', 'location']
Object: ['Munster', 'Adare']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ James Pain and George Richard Pain,', '__subject__ Adare Manor __predicate__ completionDate __object__ 1862']]
Text: The architects James Pain and George Richard Pain designed Adare Manor, which was completed in 1862.
Subject: ['Adare Manor', 'Adare Manor']
Predicate: ['architect', 'completionDate']
Object: ['James Pain and George Richard Pain,', '1862']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ James Pain and George Richard Pain,', '__subject__ Adare Manor __predicate__ completionDate __object__ 1862']]
Text: James Pain and George Richard Pain are the architects of the Adare Manor, completed in 1862.
Subject: ['Adare Manor', 'Adare Manor']
Predicate: ['architect', 'completionDate']
Object: ['James Pain and George Richard Pain,', '1862']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ James Pain and George Richard Pain,', '__subject__ Adare Manor __predicate__ completionDate __object__ 1862']]
Text: James Pain and George Richard Pain were the architects of Adare Manor, completed in 1862.
Subject: ['Adare Manor', 'Adare Manor']
Predicate: ['architect', 'completionDate']
Object: ['James Pain and George Richard Pain,', '1862']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ Augustus Pugin', '__subject__ Adare Manor __predicate__ completionDate __object__ 1862']]
Text: The architect of Adare Manor, completed in 1862, was Augustus Pugin.
Subject: ['Adare Manor', 'Adare Manor']
Predicate: ['architect', 'completionDate']
Object: ['Augustus Pugin', '1862']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ Augustus Pugin', '__subject__ Adare Manor __predicate__ completionDate __object__ 1862']]
Text: The architect of Adare Manor was Augustus Pugin and the building was completed in 1862.
Subject: ['Adare Manor', 'Adare Manor']
Predicate: ['architect', 'completionDate']
Object: ['Augustus Pugin', '1862']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ Augustus Pugin', '__subject__ Augustus Pugin __predicate__ birthPlace __object__ Bloomsbury']]
Text: The architect of Adare Manor is Augustus Pugin, whose birthplace is Bloomsbury.
Subject: ['Adare Manor', 'Augustus Pugin']
Predicate: ['architect', 'birthPlace']
Object: ['Augustus Pugin', 'Bloomsbury']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ Augustus Pugin', '__subject__ Augustus Pugin __predicate__ birthPlace __object__ Bloomsbury']]
Text: Augustus Pugin, the architect of Adare Manor, was born in Bloomsbury.
Subject: ['Adare Manor', 'Augustus Pugin']
Predicate: ['architect', 'birthPlace']
Object: ['Augustus Pugin', 'Bloomsbury']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ Augustus Pugin', '__subject__ Augustus Pugin __predicate__ birthPlace __object__ Bloomsbury']]
Text: Augustus Pugin born in Bloomsbury, is the creator of Adare Manor.
Subject: ['Adare Manor', 'Augustus Pugin']
Predicate: ['architect', 'birthPlace']
Object: ['Augustus Pugin', 'Bloomsbury']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ Augustus Pugin', '__subject__ Augustus Pugin __predicate__ significantBuilding __object__ Palace of Westminster']]
Text: The architect of Adare Manor is Augustus Pugin, who also designed the Palace Of Westminster.
Subject: ['Adare Manor', 'Augustus Pugin']
Predicate: ['architect', 'significantBuilding']
Object: ['Augustus Pugin', 'Palace of Westminster']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ Augustus Pugin', '__subject__ Augustus Pugin __predicate__ significantBuilding __object__ Palace of Westminster']]
Text: Augustus Pugin was the architect of Adare Manor and the Palace of Westminster.
Subject: ['Adare Manor', 'Augustus Pugin']
Predicate: ['architect', 'significantBuilding']
Object: ['Augustus Pugin', 'Palace of Westminster']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ James Pain', '__subject__ Adare Manor __predicate__ completionDate __object__ 1862']]
Text: James Pain was the architect of Adare Manor, which was completed in 1862.
Subject: ['Adare Manor', 'Adare Manor']
Predicate: ['architect', 'completionDate']
Object: ['James Pain', '1862']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ James Pain', '__subject__ Adare Manor __predicate__ completionDate __object__ 1862']]
Text: The architect of Adare Manor was James Pain and the construction of the building was completed in 1862.
Subject: ['Adare Manor', 'Adare Manor']
Predicate: ['architect', 'completionDate']
Object: ['James Pain', '1862']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ Lewis Nockalls Cottingham', '__subject__ Adare Manor __predicate__ completionDate __object__ 1862']]
Text: Adare Manor, designed by Lewis N. Cottingham, was completed in 1862.
Subject: ['Adare Manor', 'Adare Manor']
Predicate: ['architect', 'completionDate']
Object: ['Lewis Nockalls Cottingham', '1862']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ Lewis Nockalls Cottingham', '__subject__ Adare Manor __predicate__ completionDate __object__ 1862']]
Text: Adare Manor was designed by Lewis Nockalls Cottingham and was completed in 1862.
Subject: ['Adare Manor', 'Adare Manor']
Predicate: ['architect', 'completionDate']
Object: ['Lewis Nockalls Cottingham', '1862']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ Lewis Nockalls Cottingham', '__subject__ Adare Manor __predicate__ completionDate __object__ 1862']]
Text: Adare Manor was completed in 1862, and was designed by Lewis Nockalls Cottingham.
Subject: ['Adare Manor', 'Adare Manor']
Predicate: ['architect', 'completionDate']
Object: ['Lewis Nockalls Cottingham', '1862']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ Philip Charles Hardwick', '__subject__ Adare Manor __predicate__ completionDate __object__ 1862']]
Text: The architect responsible for Adare Manor was Philip Charles Hardwick and the building was completed in 1862.
Subject: ['Adare Manor', 'Adare Manor']
Predicate: ['architect', 'completionDate']
Object: ['Philip Charles Hardwick', '1862']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ Philip Charles Hardwick', '__subject__ Adare Manor __predicate__ completionDate __object__ 1862']]
Text: Philip Charles Hardwick was the architect of Adare Manor which was completed in 1862.
Subject: ['Adare Manor', 'Adare Manor']
Predicate: ['architect', 'completionDate']
Object: ['Philip Charles Hardwick', '1862']

Triple: [['__subject__ Adare Manor __predicate__ architect __object__ Philip Charles Hardwick', '__subject__ Adare Manor __predicate__ completionDate __object__ 1862']]
Text: Adare Manor, completed in 1862, was designed by Philip Charles Hardwick.
Subject: ['Adare Manor', 'Adare Manor']
Predicate: ['architect', 'completionDate']
Object: ['Philip Charles Hardwick', '1862']

Triple: [['__subject__ Adare Manor __predicate__ country __object__ Republic of Ireland', '__subject__ Republic of Ireland __predicate__ leader __object__ Enda Kenny']]
Text: Enda Kenny is the leader of the Republic of Ireland where Adare Manor is located.
Subject: ['Adare Manor', 'Republic of Ireland']
Predicate: ['country', 'leader']
Object: ['Republic of Ireland', 'Enda Kenny']

Triple: [['__subject__ Adare Manor __predicate__ country __object__ Republic of Ireland', '__subject__ Republic of Ireland __predicate__ leader __object__ Enda Kenny']]
Text: Enda Kenny is the leader of the Republic of Ireland where Adare Manor can be found.
Subject: ['Adare Manor', 'Republic of Ireland']
Predicate: ['country', 'leader']
Object: ['Republic of Ireland', 'Enda Kenny']

Triple: [['__subject__ Adare Manor __predicate__ country __object__ Republic of Ireland', '__subject__ Republic of Ireland __predicate__ leader __object__ Enda Kenny']]
Text: Adare Manor is located in the Republic of Ireland, which is led by Enda Kenny.
Subject: ['Adare Manor', 'Republic of Ireland']
Predicate: ['country', 'leader']
Object: ['Republic of Ireland', 'Enda Kenny']

Triple: [['__subject__ Addis Ababa __predicate__ isPartOf __object__ Addis Ababa Stadium', '__subject__ Addis Ababa City Hall __predicate__ location __object__ Addis Ababa']]
Text: Both the Addis Ababa Stadium and the Addis Ababa City Hall are located in Addis Ababa.
Subject: ['Addis Ababa', 'Addis Ababa City Hall']
Predicate: ['isPartOf', 'location']
Object: ['Addis Ababa Stadium', 'Addis Ababa']

Triple: [['__subject__ Addis Ababa __predicate__ isPartOf __object__ Addis Ababa Stadium', '__subject__ Addis Ababa City Hall __predicate__ location __object__ Addis Ababa']]
Text: Addis Ababa Stadium and Addis Ababa City Hall are located in Addis Ababa.
Subject: ['Addis Ababa', 'Addis Ababa City Hall']
Predicate: ['isPartOf', 'location']
Object: ['Addis Ababa Stadium', 'Addis Ababa']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ buildingStartDate __object__ 1961', '__subject__ Addis Ababa City Hall __predicate__ floorArea __object__ 140000.0 (square metres)']]
Text: Addis Ababa City hall began being constructed in 1961 and has a floor area of 140000.0 square metres.
Subject: ['Addis Ababa City Hall', 'Addis Ababa City Hall']
Predicate: ['buildingStartDate', 'floorArea']
Object: ['1961', '140000.0 (square metres)']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ buildingStartDate __object__ 1961', '__subject__ Addis Ababa City Hall __predicate__ floorArea __object__ 140000.0 (square metres)']]
Text: Addis Ababa City Hall began construction in 1961 and has a floor area of 140000.0 square metres.
Subject: ['Addis Ababa City Hall', 'Addis Ababa City Hall']
Predicate: ['buildingStartDate', 'floorArea']
Object: ['1961', '140000.0 (square metres)']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ buildingStartDate __object__ 1961', '__subject__ Addis Ababa City Hall __predicate__ floorArea __object__ 140000.0 (square metres)']]
Text: The Addis Ababa City Hall was built in 1961 and has 140000 square metre floor area.
Subject: ['Addis Ababa City Hall', 'Addis Ababa City Hall']
Predicate: ['buildingStartDate', 'floorArea']
Object: ['1961', '140000.0 (square metres)']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ completionDate __object__ 1964', '__subject__ Addis Ababa City Hall __predicate__ floorArea __object__ 140000.0 (square metres)']]
Text: Addis Ababa City Hall was completed in 1964 and has a floor area of 140000.0 square metres.
Subject: ['Addis Ababa City Hall', 'Addis Ababa City Hall']
Predicate: ['completionDate', 'floorArea']
Object: ['1964', '140000.0 (square metres)']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ completionDate __object__ 1964', '__subject__ Addis Ababa City Hall __predicate__ floorArea __object__ 140000.0 (square metres)']]
Text: Addis Ababa City Hall, with a 140000.0 (square metres) floor area, was completed in 1964.
Subject: ['Addis Ababa City Hall', 'Addis Ababa City Hall']
Predicate: ['completionDate', 'floorArea']
Object: ['1964', '140000.0 (square metres)']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ completionDate __object__ 1964', '__subject__ Addis Ababa City Hall __predicate__ floorArea __object__ 140000.0 (square metres)']]
Text: Addis Ababa City Hall, with a floor area of 140000,0 square metres, was completed in 1964.
Subject: ['Addis Ababa City Hall', 'Addis Ababa City Hall']
Predicate: ['completionDate', 'floorArea']
Object: ['1964', '140000.0 (square metres)']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ country __object__ Ethiopia', '__subject__ Ethiopia __predicate__ currency __object__ Ethiopian birr']]
Text: Addis Ababa City Hall is in Ethiopia, where the currency is the Ethiopian birr.
Subject: ['Addis Ababa City Hall', 'Ethiopia']
Predicate: ['country', 'currency']
Object: ['Ethiopia', 'Ethiopian birr']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ country __object__ Ethiopia', '__subject__ Ethiopia __predicate__ currency __object__ Ethiopian birr']]
Text: The Ethiopian Birr is the currency of Ethiopia while The Addis Ababa City Hall is also located in Ethiopia.
Subject: ['Addis Ababa City Hall', 'Ethiopia']
Predicate: ['country', 'currency']
Object: ['Ethiopia', 'Ethiopian birr']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ country __object__ Ethiopia', '__subject__ Ethiopia __predicate__ currency __object__ Ethiopian birr']]
Text: The Addis Ababa City Hall is in the country of Ethiopia, where the currency is the Ethiopian Birr.
Subject: ['Addis Ababa City Hall', 'Ethiopia']
Predicate: ['country', 'currency']
Object: ['Ethiopia', 'Ethiopian birr']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ country __object__ Ethiopia', '__subject__ Ethiopia __predicate__ language __object__ Amharic']]
Text: The Addis Ababa City Hall is in the country of Ethiopia, where Amharic is spoken.
Subject: ['Addis Ababa City Hall', 'Ethiopia']
Predicate: ['country', 'language']
Object: ['Ethiopia', 'Amharic']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ country __object__ Ethiopia', '__subject__ Ethiopia __predicate__ language __object__ Amharic']]
Text: The Addis Ababa City Hall is in Ethiopia where they speak Amharic.
Subject: ['Addis Ababa City Hall', 'Ethiopia']
Predicate: ['country', 'language']
Object: ['Ethiopia', 'Amharic']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ country __object__ Ethiopia', '__subject__ Ethiopia __predicate__ language __object__ Amharic']]
Text: The language of Ethiopia is Amharic and the Addis Ababa City Hall is located in Ethiopia.
Subject: ['Addis Ababa City Hall', 'Ethiopia']
Predicate: ['country', 'language']
Object: ['Ethiopia', 'Amharic']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ currentTenants __object__ Government of Addis Ababa', '__subject__ Addis Ababa City Hall __predicate__ floorArea __object__ 140000.0 (square metres)']]
Text: The Addis Ababa City Hall is where the Government of Addis Ababa is currently located and its floor area covers 140000.0 (square metres).
Subject: ['Addis Ababa City Hall', 'Addis Ababa City Hall']
Predicate: ['currentTenants', 'floorArea']
Object: ['Government of Addis Ababa', '140000.0 (square metres)']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ currentTenants __object__ Government of Addis Ababa', '__subject__ Addis Ababa City Hall __predicate__ floorArea __object__ 140000.0 (square metres)']]
Text: Addis Ababa City Hall has a floor area of 140000.0 square metres and its current tenants are the Government of Addis Ababa.
Subject: ['Addis Ababa City Hall', 'Addis Ababa City Hall']
Predicate: ['currentTenants', 'floorArea']
Object: ['Government of Addis Ababa', '140000.0 (square metres)']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ currentTenants __object__ Government of Addis Ababa', '__subject__ Addis Ababa City Hall __predicate__ floorArea __object__ 140000.0 (square metres)']]
Text: The " Government of Addis Ababa" are the current tenants of Addis Ababa City Hall, which has a floor area of 140000.0 square metres.
Subject: ['Addis Ababa City Hall', 'Addis Ababa City Hall']
Predicate: ['currentTenants', 'floorArea']
Object: ['Government of Addis Ababa', '140000.0 (square metres)']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ location __object__ Addis Ababa', '__subject__ Addis Ababa __predicate__ country __object__ Ethiopia']]
Text: The Addis Ababa City Hall is located in Addis Ababa, Ethiopia.
Subject: ['Addis Ababa City Hall', 'Addis Ababa']
Predicate: ['location', 'country']
Object: ['Addis Ababa', 'Ethiopia']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ location __object__ Addis Ababa', '__subject__ Addis Ababa __predicate__ country __object__ Ethiopia']]
Text: Addis Ababa city hall is located in the city of Addis Ababa which is in the country of Ethiopia.
Subject: ['Addis Ababa City Hall', 'Addis Ababa']
Predicate: ['location', 'country']
Object: ['Addis Ababa', 'Ethiopia']

Triple: [['__subject__ Addis Ababa City Hall __predicate__ location __object__ Addis Ababa', '__subject__ Addis Ababa __predicate__ country __object__ Ethiopia']]
Text: Addis Ababa City Hall is located in Addis Ababa, Ethiopia.
Subject: ['Addis Ababa City Hall', 'Addis Ababa']
Predicate: ['location', 'country']
Object: ['Addis Ababa', 'Ethiopia']

Triple: [['__subject__ Adisham Hall __predicate__ architecturalStyle __object__ Tudor and Jacabian', '__subject__ Adisham Hall __predicate__ location __object__ Haputale']]
Text: Adisham Hall whose architectural style is Tudor and Jacabian is located in Haputale.
Subject: ['Adisham Hall', 'Adisham Hall']
Predicate: ['architecturalStyle', 'location']
Object: ['Tudor and Jacabian', 'Haputale']

Triple: [['__subject__ Adisham Hall __predicate__ architecturalStyle __object__ Tudor and Jacabian', '__subject__ Adisham Hall __predicate__ location __object__ Haputale']]
Text: Adisham Hall is located in Haputale and has the architectural style of Tudor and Jacobean.
Subject: ['Adisham Hall', 'Adisham Hall']
Predicate: ['architecturalStyle', 'location']
Object: ['Tudor and Jacabian', 'Haputale']

Triple: [['__subject__ Adisham Hall __predicate__ architecturalStyle __object__ Tudor and Jacabian', '__subject__ Adisham Hall __predicate__ location __object__ Haputale']]
Text: The architecture style of adisham hall of Haputale, is Tudor and jacabian.
Subject: ['Adisham Hall', 'Adisham Hall']
Predicate: ['architecturalStyle', 'location']
Object: ['Tudor and Jacabian', 'Haputale']

Triple: [['__subject__ Adisham Hall __predicate__ architecturalStyle __object__ Tudor and Jacabian', '__subject__ Adisham Hall __predicate__ location __object__ Sri Lanka']]
Text: Adisham Hall which is located in Sri Lanka has the architectural style of Tudor and Jacobean.
Subject: ['Adisham Hall', 'Adisham Hall']
Predicate: ['architecturalStyle', 'location']
Object: ['Tudor and Jacabian', 'Sri Lanka']

Triple: [['__subject__ Adisham Hall __predicate__ architecturalStyle __object__ Tudor and Jacabian', '__subject__ Adisham Hall __predicate__ location __object__ Sri Lanka']]
Text: The architectural style of Adisham Hall in Sri Lanka is Tudor and Jacobean.
Subject: ['Adisham Hall', 'Adisham Hall']
Predicate: ['architecturalStyle', 'location']
Object: ['Tudor and Jacabian', 'Sri Lanka']

Triple: [['__subject__ Adisham Hall __predicate__ architecturalStyle __object__ Tudor and Jacabian', '__subject__ Adisham Hall __predicate__ location __object__ Sri Lanka']]
Text: Adisham Hall, Sri Lanka, has the Architectural style of Tudor and Jacobean.
Subject: ['Adisham Hall', 'Adisham Hall']
Predicate: ['architecturalStyle', 'location']
Object: ['Tudor and Jacabian', 'Sri Lanka']

Triple: [['__subject__ Adisham Hall __predicate__ architecturalStyle __object__ Tudor Revival architecture', '__subject__ Adisham Hall __predicate__ location __object__ Haputale']]
Text: Adisham Hall has the Tudor Revival architectural style, and it is located in Haputale.
Subject: ['Adisham Hall', 'Adisham Hall']
Predicate: ['architecturalStyle', 'location']
Object: ['Tudor Revival architecture', 'Haputale']

Triple: [['__subject__ Adisham Hall __predicate__ architecturalStyle __object__ Tudor Revival architecture', '__subject__ Adisham Hall __predicate__ location __object__ Haputale']]
Text: Adisham Hall is styled as Tudor Revival and found in Haputale.
Subject: ['Adisham Hall', 'Adisham Hall']
Predicate: ['architecturalStyle', 'location']
Object: ['Tudor Revival architecture', 'Haputale']

Triple: [['__subject__ Adisham Hall __predicate__ architecturalStyle __object__ Tudor Revival architecture', '__subject__ Adisham Hall __predicate__ location __object__ Haputale']]
Text: Located in Haputale, Adisham Hall is Tudor Revival in style.
Subject: ['Adisham Hall', 'Adisham Hall']
Predicate: ['architecturalStyle', 'location']
Object: ['Tudor Revival architecture', 'Haputale']

Triple: [['__subject__ Adisham Hall __predicate__ completionDate __object__ 1931', '__subject__ Adisham Hall __predicate__ location __object__ Haputale']]
Text: Adisham Hall, Haputale was completed in 1931.
Subject: ['Adisham Hall', 'Adisham Hall']
Predicate: ['completionDate', 'location']
Object: ['1931', 'Haputale']

Triple: [['__subject__ Adisham Hall __predicate__ country __object__ Sri Lanka', '__subject__ Sri Lanka __predicate__ capital __object__ Sri Jayawardenepura Kotte']]
Text: Adisham Hall is located in Sri Lanka, whose capital is Sri Jayawardenepura Kotte.
Subject: ['Adisham Hall', 'Sri Lanka']
Predicate: ['country', 'capital']
Object: ['Sri Lanka', 'Sri Jayawardenepura Kotte']

Triple: [['__subject__ Adisham Hall __predicate__ country __object__ Sri Lanka', '__subject__ Sri Lanka __predicate__ capital __object__ Sri Jayawardenepura Kotte']]
Text: Sri Jayawardenepura Kotte is the capital of Sri Lanka where Adisham Hall is located.
Subject: ['Adisham Hall', 'Sri Lanka']
Predicate: ['country', 'capital']
Object: ['Sri Lanka', 'Sri Jayawardenepura Kotte']

Triple: [['__subject__ Adisham Hall __predicate__ country __object__ Sri Lanka', '__subject__ Sri Lanka __predicate__ currency __object__ Sri Lankan rupee']]
Text: Adisham Hall is located in Sri Lanka, whose currency is the Sri Lankan rupee.
Subject: ['Adisham Hall', 'Sri Lanka']
Predicate: ['country', 'currency']
Object: ['Sri Lanka', 'Sri Lankan rupee']

Triple: [['__subject__ Adisham Hall __predicate__ country __object__ Sri Lanka', '__subject__ Sri Lanka __predicate__ currency __object__ Sri Lankan rupee']]
Text: Adisham Hall is located in Sri Lanka, where the currency is the Sri Lankan rupee.
Subject: ['Adisham Hall', 'Sri Lanka']
Predicate: ['country', 'currency']
Object: ['Sri Lanka', 'Sri Lankan rupee']

Triple: [['__subject__ Adisham Hall __predicate__ country __object__ Sri Lanka', '__subject__ Sri Lanka __predicate__ currency __object__ Sri Lankan rupee']]
Text: Adisham Hall is in Sri Lanka where the currency is the Sri Lankan rupee.
Subject: ['Adisham Hall', 'Sri Lanka']
Predicate: ['country', 'currency']
Object: ['Sri Lanka', 'Sri Lankan rupee']

Triple: [['__subject__ Adisham Hall __predicate__ country __object__ Sri Lanka', '__subject__ Sri Lanka __predicate__ leader __object__ Ranil Wickremesinghe']]
Text: Adisham Hall is in Sri Lanka where the leader is Ranil Wickremesinghe.
Subject: ['Adisham Hall', 'Sri Lanka']
Predicate: ['country', 'leader']
Object: ['Sri Lanka', 'Ranil Wickremesinghe']

Triple: [['__subject__ Adisham Hall __predicate__ country __object__ Sri Lanka', '__subject__ Sri Lanka __predicate__ leader __object__ Ranil Wickremesinghe']]
Text: Adisham Hall is located in the country of Sri Lanka, which is led by Ranil Wickremesinghe.
Subject: ['Adisham Hall', 'Sri Lanka']
Predicate: ['country', 'leader']
Object: ['Sri Lanka', 'Ranil Wickremesinghe']

Triple: [['__subject__ Adisham Hall __predicate__ location __object__ Haputale, Sri Lanka', '__subject__ Adisham Hall __predicate__ completionDate __object__ 1931']]
Text: Adisham Hall is in Haputale, Sri Lanka and was completed in 1931.
Subject: ['Adisham Hall', 'Adisham Hall']
Predicate: ['location', 'completionDate']
Object: ['Haputale, Sri Lanka', '1931']

Triple: [['__subject__ Adisham Hall __predicate__ location __object__ Haputale, Sri Lanka', '__subject__ Adisham Hall __predicate__ completionDate __object__ 1931']]
Text: Adisham Hall in Haputale, Sri Lanka, was finished in 1931.
Subject: ['Adisham Hall', 'Adisham Hall']
Predicate: ['location', 'completionDate']
Object: ['Haputale, Sri Lanka', '1931']

Triple: [['__subject__ Adisham Hall __predicate__ location __object__ Haputale, Sri Lanka', '__subject__ Adisham Hall __predicate__ completionDate __object__ 1931']]
Text: Adisham Hall, completed in 1931, is located at Haputale, Sri Lanka.
Subject: ['Adisham Hall', 'Adisham Hall']
Predicate: ['location', 'completionDate']
Object: ['Haputale, Sri Lanka', '1931']

Triple: [['__subject__ Adisham Hall __predicate__ location __object__ Sri Lanka', '__subject__ Adisham Hall __predicate__ completionDate __object__ 1931']]
Text: The construction of Adisham Hall, Sri Lanka, was completed in 1931.
Subject: ['Adisham Hall', 'Adisham Hall']
Predicate: ['location', 'completionDate']
Object: ['Sri Lanka', '1931']

Triple: [['__subject__ Adisham Hall __predicate__ location __object__ Sri Lanka', '__subject__ Adisham Hall __predicate__ completionDate __object__ 1931']]
Text: Adisham Hall was completed in 1931 and is located in Sri Lanka.
Subject: ['Adisham Hall', 'Adisham Hall']
Predicate: ['location', 'completionDate']
Object: ['Sri Lanka', '1931']

Triple: [['__subject__ Adisham Hall __predicate__ location __object__ Sri Lanka', '__subject__ Adisham Hall __predicate__ completionDate __object__ 1931']]
Text: Finished in 1931, Adisham Hall is located in Sri Lanka.
Subject: ['Adisham Hall', 'Adisham Hall']
Predicate: ['location', 'completionDate']
Object: ['Sri Lanka', '1931']

Triple: [['__subject__ Adisham Hall __predicate__ location __object__ Sri Lanka', '__subject__ Sri Lanka __predicate__ leader __object__ Ranil Wickremesinghe']]
Text: Ranil Wickremesinghe is a leader in Sri Lanka where Adisham Hall is located.
Subject: ['Adisham Hall', 'Sri Lanka']
Predicate: ['location', 'leader']
Object: ['Sri Lanka', 'Ranil Wickremesinghe']

Triple: [['__subject__ Adisham Hall __predicate__ location __object__ Sri Lanka', '__subject__ Sri Lanka __predicate__ leader __object__ Ranil Wickremesinghe']]
Text: Adisham Hall is in Sri Lanka whose leader is Ranil Wickremesinghe.
Subject: ['Adisham Hall', 'Sri Lanka']
Predicate: ['location', 'leader']
Object: ['Sri Lanka', 'Ranil Wickremesinghe']

Triple: [['__subject__ Akita Museum of Art __predicate__ country __object__ Japan', '__subject__ Akita Museum of Art __predicate__ location __object__ Akita, Akita']]
Text: Akita Museum of Art is located in Akita, Japan.
Subject: ['Akita Museum of Art', 'Akita Museum of Art']
Predicate: ['country', 'location']
Object: ['Japan', 'Akita, Akita']

Triple: [['__subject__ Akita Museum of Art __predicate__ country __object__ Japan', '__subject__ Akita Museum of Art __predicate__ location __object__ Akita, Akita']]
Text: The Akita Museum of Art is located in Akita, Akita, Japan.
Subject: ['Akita Museum of Art', 'Akita Museum of Art']
Predicate: ['country', 'location']
Object: ['Japan', 'Akita, Akita']

Triple: [['__subject__ Akita Museum of Art __predicate__ country __object__ Japan', '__subject__ Akita Museum of Art __predicate__ location __object__ Akita, Akita']]
Text: The Akita Museum of Art is located in Akita, Japan.
Subject: ['Akita Museum of Art', 'Akita Museum of Art']
Predicate: ['country', 'location']
Object: ['Japan', 'Akita, Akita']

Triple: [['__subject__ Akita Museum of Art __predicate__ country __object__ Japan', '__subject__ Akita Museum of Art __predicate__ location __object__ Akita Prefecture']]
Text: Akita Museum of Art located in Akita Prefecture is found in Japan.
Subject: ['Akita Museum of Art', 'Akita Museum of Art']
Predicate: ['country', 'location']
Object: ['Japan', 'Akita Prefecture']

Triple: [['__subject__ Akita Museum of Art __predicate__ country __object__ Japan', '__subject__ Akita Museum of Art __predicate__ location __object__ Akita Prefecture']]
Text: The Akita Museum of Art is located in Akita Prefecture in Japan.
Subject: ['Akita Museum of Art', 'Akita Museum of Art']
Predicate: ['country', 'location']
Object: ['Japan', 'Akita Prefecture']

Triple: [['__subject__ Akita Museum of Art __predicate__ country __object__ Japan', '__subject__ Akita Museum of Art __predicate__ location __object__ Akita Prefecture']]
Text: Akita Museum of Art is located in Akita Prefecture, Japan.
Subject: ['Akita Museum of Art', 'Akita Museum of Art']
Predicate: ['country', 'location']
Object: ['Japan', 'Akita Prefecture']

Triple: [['__subject__ Akita Museum of Art __predicate__ floorCount __object__ 3', '__subject__ Akita Museum of Art __predicate__ floorArea __object__ 3746.66 (square metres)']]
Text: The Akita Museum of Art has 3 floors and 3746.66 square metres of floor area.
Subject: ['Akita Museum of Art', 'Akita Museum of Art']
Predicate: ['floorCount', 'floorArea']
Object: ['3', '3746.66 (square metres)']

Triple: [['__subject__ Akita Museum of Art __predicate__ floorCount __object__ 3', '__subject__ Akita Museum of Art __predicate__ floorArea __object__ 3746.66 (square metres)']]
Text: The Akita Museum of Art has 3 floors and an area of 3746.66(square meters).
Subject: ['Akita Museum of Art', 'Akita Museum of Art']
Predicate: ['floorCount', 'floorArea']
Object: ['3', '3746.66 (square metres)']

Triple: [['__subject__ Akita Museum of Art __predicate__ floorCount __object__ 3', '__subject__ Akita Museum of Art __predicate__ floorArea __object__ 3746.66 (square metres)']]
Text: The Akita Museum of Art is located on 3 floors and is 3746.66 square metres.
Subject: ['Akita Museum of Art', 'Akita Museum of Art']
Predicate: ['floorCount', 'floorArea']
Object: ['3', '3746.66 (square metres)']

Triple: [['__subject__ Akita Museum of Art __predicate__ location __object__ Akita, Akita', '__subject__ Akita, Akita __predicate__ country __object__ Japan']]
Text: The Akita Museum of Art is in Akita, Akita Japan.
Subject: ['Akita Museum of Art', 'Akita, Akita']
Predicate: ['location', 'country']
Object: ['Akita, Akita', 'Japan']

Triple: [['__subject__ Akita Museum of Art __predicate__ location __object__ Akita, Akita', '__subject__ Akita, Akita __predicate__ country __object__ Japan']]
Text: The Akita Museum of Art is located in Akita, Akita, which is found in Japan.
Subject: ['Akita Museum of Art', 'Akita, Akita']
Predicate: ['location', 'country']
Object: ['Akita, Akita', 'Japan']

Triple: [['__subject__ Akita Museum of Art __predicate__ location __object__ Akita, Akita', '__subject__ Akita, Akita __predicate__ isPartOf __object__ Akita Prefecture']]
Text: The Akita Museum of Art is located in Akita, Akita, part of Akita Prefecture.
Subject: ['Akita Museum of Art', 'Akita, Akita']
Predicate: ['location', 'isPartOf']
Object: ['Akita, Akita', 'Akita Prefecture']

Triple: [['__subject__ Akita Museum of Art __predicate__ location __object__ Akita, Akita', '__subject__ Akita, Akita __predicate__ isPartOf __object__ Akita Prefecture']]
Text: Akita Museum of Art is an art museum in the city of Akita, and is part of Akita Prefecture.
Subject: ['Akita Museum of Art', 'Akita, Akita']
Predicate: ['location', 'isPartOf']
Object: ['Akita, Akita', 'Akita Prefecture']

Triple: [['__subject__ Akita Museum of Art __predicate__ location __object__ Akita, Akita', '__subject__ Akita, Akita __predicate__ isPartOf __object__ Akita Prefecture']]
Text: Akita Museum of Art is located in Akita, Akita which is part of Akita Prefecture.
Subject: ['Akita Museum of Art', 'Akita, Akita']
Predicate: ['location', 'isPartOf']
Object: ['Akita, Akita', 'Akita Prefecture']

Triple: [['__subject__ Akita Museum of Art __predicate__ location __object__ Akita, Akita', '__subject__ Akita Museum of Art __predicate__ location __object__ Akita Prefecture']]
Text: Akita Museum of Art is located in Akita, Akita Prefecture.
Subject: ['Akita Museum of Art', 'Akita Museum of Art']
Predicate: ['location', 'location']
Object: ['Akita, Akita', 'Akita Prefecture']

Triple: [['__subject__ Akita Museum of Art __predicate__ location __object__ Akita, Akita', '__subject__ Akita Museum of Art __predicate__ location __object__ Akita Prefecture']]
Text: The Akita Museum of Art is located in Akita, Akita Prefecture.
Subject: ['Akita Museum of Art', 'Akita Museum of Art']
Predicate: ['location', 'location']
Object: ['Akita, Akita', 'Akita Prefecture']

Triple: [['__subject__ Akita Museum of Art __predicate__ location __object__ Akita, Akita', '__subject__ Akita Museum of Art __predicate__ location __object__ Akita Prefecture']]
Text: The Akita Museum of Art is located in Akita, in the Akita Prefecture.
Subject: ['Akita Museum of Art', 'Akita Museum of Art']
Predicate: ['location', 'location']
Object: ['Akita, Akita', 'Akita Prefecture']

Triple: [['__subject__ Akita Prefecture __predicate__ country __object__ Japan', '__subject__ Akita Museum of Art __predicate__ location __object__ Akita Prefecture']]
Text: The Akita Museum of Art is located in Akita Prefecture, Japan.
Subject: ['Akita Prefecture', 'Akita Museum of Art']
Predicate: ['country', 'location']
Object: ['Japan', 'Akita Prefecture']

Triple: [['__subject__ Akita Prefecture __predicate__ country __object__ Japan', '__subject__ Akita Museum of Art __predicate__ location __object__ Akita Prefecture']]
Text: The Akita Museum of Art is located in The Akita Prefecture in Japan.
Subject: ['Akita Prefecture', 'Akita Museum of Art']
Predicate: ['country', 'location']
Object: ['Japan', 'Akita Prefecture']

Triple: [['__subject__ Akita Prefecture __predicate__ country __object__ Japan', '__subject__ Akita Museum of Art __predicate__ location __object__ Akita Prefecture']]
Text: Akita Museum of Art is located in Akita Prefecture, Japan.
Subject: ['Akita Prefecture', 'Akita Museum of Art']
Predicate: ['country', 'location']
Object: ['Japan', 'Akita Prefecture']

Triple: [['__subject__ Alan B. Miller Hall __predicate__ completionDate __object__ 2009-06-01', '__subject__ Alan B. Miller Hall __predicate__ address __object__ 101 Ukrop Way']]
Text: Alan B. Miller Hall is at 101 Ukrop Way and was completed on 1 June 2009.
Subject: ['Alan B. Miller Hall', 'Alan B. Miller Hall']
Predicate: ['completionDate', 'address']
Object: ['2009-06-01', '101 Ukrop Way']

Triple: [['__subject__ Alan B. Miller Hall __predicate__ completionDate __object__ 2009-06-01', '__subject__ Alan B. Miller Hall __predicate__ address __object__ 101 Ukrop Way']]
Text: Alan B. Miller Hall was completed on 1 June 2009, and its address is 101 Ukrop Way.
Subject: ['Alan B. Miller Hall', 'Alan B. Miller Hall']
Predicate: ['completionDate', 'address']
Object: ['2009-06-01', '101 Ukrop Way']

Triple: [['__subject__ Alan B. Miller Hall __predicate__ currentTenants __object__ Mason School of Business', '__subject__ Alan B. Miller Hall __predicate__ architect __object__ Robert A. M. Stern']]
Text: Robert A. M. Stern is the architect of Alan B. Miller Hall of which The Mason School of Business is the current tenant.
Subject: ['Alan B. Miller Hall', 'Alan B. Miller Hall']
Predicate: ['currentTenants', 'architect']
Object: ['Mason School of Business', 'Robert A. M. Stern']

Triple: [['__subject__ Alan B. Miller Hall __predicate__ currentTenants __object__ Mason School of Business', '__subject__ Alan B. Miller Hall __predicate__ architect __object__ Robert A. M. Stern']]
Text: The Mason School of Business are the current tenants of Alan B Miller Hall, which was designed by Robert A M Stern.
Subject: ['Alan B. Miller Hall', 'Alan B. Miller Hall']
Predicate: ['currentTenants', 'architect']
Object: ['Mason School of Business', 'Robert A. M. Stern']

Triple: [['__subject__ Alan B. Miller Hall __predicate__ currentTenants __object__ Mason School of Business', '__subject__ Alan B. Miller Hall __predicate__ architect __object__ Robert A. M. Stern']]
Text: The Mason School of Business are the current tenants of Alan B Miller Hall, designed by Robert A M Stern.
Subject: ['Alan B. Miller Hall', 'Alan B. Miller Hall']
Predicate: ['currentTenants', 'architect']
Object: ['Mason School of Business', 'Robert A. M. Stern']

Triple: [['__subject__ Alan B. Miller Hall __predicate__ inaugurationDate __object__ 2009-10-02', '__subject__ Alan B. Miller Hall __predicate__ address __object__ 101 Ukrop Way']]
Text: Alan B Miller Hall (which was inaugurated on 2009-10-02) has the address "101 Ukrop Way".
Subject: ['Alan B. Miller Hall', 'Alan B. Miller Hall']
Predicate: ['inaugurationDate', 'address']
Object: ['2009-10-02', '101 Ukrop Way']

Triple: [['__subject__ Alan B. Miller Hall __predicate__ inaugurationDate __object__ 2009-10-02', '__subject__ Alan B. Miller Hall __predicate__ address __object__ 101 Ukrop Way']]
Text: Alan B. Miller Hall which is located at 101 Ukrop Way was inaugurated on 2009-10-02.
Subject: ['Alan B. Miller Hall', 'Alan B. Miller Hall']
Predicate: ['inaugurationDate', 'address']
Object: ['2009-10-02', '101 Ukrop Way']

Triple: [['__subject__ Alan B. Miller Hall __predicate__ inaugurationDate __object__ 2009-10-02', '__subject__ Alan B. Miller Hall __predicate__ address __object__ 101 Ukrop Way']]
Text: The inauguration date of Alan B. Miller Hall, located at 101 Ukrop Way, was October 2, 2009.
Subject: ['Alan B. Miller Hall', 'Alan B. Miller Hall']
Predicate: ['inaugurationDate', 'address']
Object: ['2009-10-02', '101 Ukrop Way']

Triple: [['__subject__ Alan B. Miller Hall __predicate__ location __object__ Virginia', '__subject__ Alan B. Miller Hall __predicate__ owner __object__ College of William & Mary']]
Text: Alan B Miller Hall in Virginia is owned by The College of William and Mary.
Subject: ['Alan B. Miller Hall', 'Alan B. Miller Hall']
Predicate: ['location', 'owner']
Object: ['Virginia', 'College of William & Mary']

Triple: [['__subject__ Alan B. Miller Hall __predicate__ location __object__ Virginia', '__subject__ Alan B. Miller Hall __predicate__ owner __object__ College of William & Mary']]
Text: The Alan B. Miller Hall is owned by The College of William and Mary in Virginia.
Subject: ['Alan B. Miller Hall', 'Alan B. Miller Hall']
Predicate: ['location', 'owner']
Object: ['Virginia', 'College of William & Mary']

Triple: [['__subject__ Alan B. Miller Hall __predicate__ location __object__ Virginia', '__subject__ Alan B. Miller Hall __predicate__ owner __object__ College of William & Mary']]
Text: Alan B Miller Hall, which is owned by The College of William and Mary, is located in Virginia.
Subject: ['Alan B. Miller Hall', 'Alan B. Miller Hall']
Predicate: ['location', 'owner']
Object: ['Virginia', 'College of William & Mary']

Triple: [['__subject__ Alan B. Miller Hall __predicate__ owner __object__ College of William & Mary', '__subject__ College of William & Mary __predicate__ chancellor __object__ Robert Gates']]
Text: The College of William and Mary owns the Alan B. Miller Hall and the Chancellor of the College is Robert Gates.
Subject: ['Alan B. Miller Hall', 'College of William & Mary']
Predicate: ['owner', 'chancellor']
Object: ['College of William & Mary', 'Robert Gates']

Triple: [['__subject__ Alan B. Miller Hall __predicate__ owner __object__ College of William & Mary', '__subject__ College of William & Mary __predicate__ chancellor __object__ Robert Gates']]
Text: Robert Gates is the chancellor of The College of William and Mary which owns Alan B. Miller Hall.
Subject: ['Alan B. Miller Hall', 'College of William & Mary']
Predicate: ['owner', 'chancellor']
Object: ['College of William & Mary', 'Robert Gates']

Triple: [['__subject__ Alan B. Miller Hall __predicate__ owner __object__ College of William & Mary', '__subject__ College of William & Mary __predicate__ chancellor __object__ Robert Gates']]
Text: Robert Gates served as chancellor of the College of William and Mary, which is the owner of the Alan B. Miller Hall.
Subject: ['Alan B. Miller Hall', 'College of William & Mary']
Predicate: ['owner', 'chancellor']
Object: ['College of William & Mary', 'Robert Gates']

Triple: [['__subject__ Alan B. Miller Hall __predicate__ tenant __object__ Mason School of Business', '__subject__ Mason School of Business __predicate__ country __object__ United States']]
Text: The Mason School of Business is a tenant of Alan B. Miller Hall in the United States.
Subject: ['Alan B. Miller Hall', 'Mason School of Business']
Predicate: ['tenant', 'country']
Object: ['Mason School of Business', 'United States']

Triple: [['__subject__ Alan B. Miller Hall __predicate__ tenant __object__ Mason School of Business', '__subject__ Mason School of Business __predicate__ country __object__ United States']]
Text: Mason School of Business is a tenant of Alan B. Miller Hall which is located in the United States.
Subject: ['Alan B. Miller Hall', 'Mason School of Business']
Predicate: ['tenant', 'country']
Object: ['Mason School of Business', 'United States']

Triple: [['__subject__ Amdavad ni Gufa __predicate__ address __object__ Lalbhai Dalpatbhai Campus, near CEPT University, opp. Gujarat University, University Road', '__subject__ Amdavad ni Gufa __predicate__ location __object__ Ahmedabad']]
Text: The address for Amdavad ni Gufa is Lalbhai Dalpatbhai Campus, near CEPT University, opp. Gujarat University, University Road, Ahmedabad.
Subject: ['Amdavad ni Gufa', 'Amdavad ni Gufa']
Predicate: ['address', 'location']
Object: ['Lalbhai Dalpatbhai Campus, near CEPT University, opp. Gujarat University, University Road', 'Ahmedabad']

Triple: [['__subject__ Amdavad ni Gufa __predicate__ address __object__ Lalbhai Dalpatbhai Campus, near CEPT University, opp. Gujarat University, University Road', '__subject__ Amdavad ni Gufa __predicate__ location __object__ Ahmedabad']]
Text: The address of Amdavad ni Gufa is Lalbhai Dalpatbhai Campus, near CEPT University, opp. Gujarat University, University Road, Ahmedabad.
Subject: ['Amdavad ni Gufa', 'Amdavad ni Gufa']
Predicate: ['address', 'location']
Object: ['Lalbhai Dalpatbhai Campus, near CEPT University, opp. Gujarat University, University Road', 'Ahmedabad']

Triple: [['__subject__ Amdavad ni Gufa __predicate__ address __object__ Lalbhai Dalpatbhai Campus, near CEPT University, opp. Gujarat University, University Road', '__subject__ Amdavad ni Gufa __predicate__ location __object__ Ahmedabad']]
Text: The address of Amdavad ni Gufa is Lalbhai Dalpatbhai Campus, Ahmedabad near CEPT University, opp. Gujarat University, University Road.
Subject: ['Amdavad ni Gufa', 'Amdavad ni Gufa']
Predicate: ['address', 'location']
Object: ['Lalbhai Dalpatbhai Campus, near CEPT University, opp. Gujarat University, University Road', 'Ahmedabad']

Triple: [['__subject__ Amdavad ni Gufa __predicate__ country __object__ India', '__subject__ India __predicate__ leader __object__ Narendra Modi']]
Text: The prime minister of India is Narendra Modi and Amdavad ni Gufa is also located in India.
Subject: ['Amdavad ni Gufa', 'India']
Predicate: ['country', 'leader']
Object: ['India', 'Narendra Modi']

Triple: [['__subject__ Amdavad ni Gufa __predicate__ country __object__ India', '__subject__ India __predicate__ leader __object__ Sumitra Mahajan']]
Text: Sumitra Mahajan is the leader of India where Amdavad ni Gufa is found.
Subject: ['Amdavad ni Gufa', 'India']
Predicate: ['country', 'leader']
Object: ['India', 'Sumitra Mahajan']

Triple: [['__subject__ Amdavad ni Gufa __predicate__ country __object__ India', '__subject__ India __predicate__ leader __object__ Sumitra Mahajan']]
Text: Amdavad ni Gufa is located in India, the country which has Sumitra Mahajan as one of its leaders.
Subject: ['Amdavad ni Gufa', 'India']
Predicate: ['country', 'leader']
Object: ['India', 'Sumitra Mahajan']

Triple: [['__subject__ Amdavad ni Gufa __predicate__ country __object__ India', '__subject__ India __predicate__ leader __object__ Sumitra Mahajan']]
Text: Amdavad ni Gufa is located in India whose leader is Sumitra Mahajan.
Subject: ['Amdavad ni Gufa', 'India']
Predicate: ['country', 'leader']
Object: ['India', 'Sumitra Mahajan']

Triple: [['__subject__ Amdavad ni Gufa __predicate__ location __object__ Ahmedabad', '__subject__ Amdavad ni Gufa __predicate__ country __object__ India']]
Text: Amdavad ni Gufa is located in Ahmedabad in India.
Subject: ['Amdavad ni Gufa', 'Amdavad ni Gufa']
Predicate: ['location', 'country']
Object: ['Ahmedabad', 'India']

Triple: [['__subject__ Amdavad ni Gufa __predicate__ location __object__ Ahmedabad', '__subject__ Amdavad ni Gufa __predicate__ country __object__ India']]
Text: Amdavad ni Gufa is located in Ahmedabad, India.
Subject: ['Amdavad ni Gufa', 'Amdavad ni Gufa']
Predicate: ['location', 'country']
Object: ['Ahmedabad', 'India']

Triple: [['__subject__ Amdavad ni Gufa __predicate__ location __object__ Ahmedabad', '__subject__ Amdavad ni Gufa __predicate__ country __object__ India']]
Text: The location of Amdavad ni Gufa is Ahmedabad, India.
Subject: ['Amdavad ni Gufa', 'Amdavad ni Gufa']
Predicate: ['location', 'country']
Object: ['Ahmedabad', 'India']

Triple: [['__subject__ Amdavad ni Gufa __predicate__ location __object__ Gujarat', '__subject__ Amdavad ni Gufa __predicate__ country __object__ India']]
Text: Amdavad ni Gufa is located in Gujarat, India.
Subject: ['Amdavad ni Gufa', 'Amdavad ni Gufa']
Predicate: ['location', 'country']
Object: ['Gujarat', 'India']

Triple: [['__subject__ Amdavad ni Gufa __predicate__ location __object__ Gujarat', '__subject__ Amdavad ni Gufa __predicate__ location __object__ Ahmedabad']]
Text: Amdavad ni Gufa is in Gujarat Ahmedabad.
Subject: ['Amdavad ni Gufa', 'Amdavad ni Gufa']
Predicate: ['location', 'location']
Object: ['Gujarat', 'Ahmedabad']

Triple: [['__subject__ Amdavad ni Gufa __predicate__ location __object__ Gujarat', '__subject__ Amdavad ni Gufa __predicate__ location __object__ Ahmedabad']]
Text: Amdavad ni Gufa is in Ahmedabad, Gujarat.
Subject: ['Amdavad ni Gufa', 'Amdavad ni Gufa']
Predicate: ['location', 'location']
Object: ['Gujarat', 'Ahmedabad']

Triple: [['__subject__ Amdavad ni Gufa __predicate__ location __object__ Gujarat', '__subject__ Amdavad ni Gufa __predicate__ location __object__ Ahmedabad']]
Text: Amdavad ni Gufa is located in Gujarat, Ahmedabad.
Subject: ['Amdavad ni Gufa', 'Amdavad ni Gufa']
Predicate: ['location', 'location']
Object: ['Gujarat', 'Ahmedabad']

Triple: [['__subject__ Ampara Hospital __predicate__ country __object__ Sri Lanka', '__subject__ Ampara Hospital __predicate__ bedCount __object__ 476']]
Text: Ampara Hospital (bed count 476) is located in Sri Lanka.
Subject: ['Ampara Hospital', 'Ampara Hospital']
Predicate: ['country', 'bedCount']
Object: ['Sri Lanka', '476']

Triple: [['__subject__ Ampara Hospital __predicate__ country __object__ Sri Lanka', '__subject__ Ampara Hospital __predicate__ bedCount __object__ 476']]
Text: Ampara Hospital, with a count of 473 beds, is in Sri Lanka.
Subject: ['Ampara Hospital', 'Ampara Hospital']
Predicate: ['country', 'bedCount']
Object: ['Sri Lanka', '476']

Triple: [['__subject__ Ampara Hospital __predicate__ country __object__ Sri Lanka', '__subject__ Ampara Hospital __predicate__ bedCount __object__ 476']]
Text: Ampara Hospital is located in Sri Lanka and has 476 beds.
Subject: ['Ampara Hospital', 'Ampara Hospital']
Predicate: ['country', 'bedCount']
Object: ['Sri Lanka', '476']

Triple: [['__subject__ Ampara Hospital __predicate__ country __object__ Sri Lanka', '__subject__ Ampara Hospital __predicate__ location __object__ Ampara']]
Text: The Ampara Hospital is located in Ampara, Sri Lanka.
Subject: ['Ampara Hospital', 'Ampara Hospital']
Predicate: ['country', 'location']
Object: ['Sri Lanka', 'Ampara']

Triple: [['__subject__ Ampara Hospital __predicate__ country __object__ Sri Lanka', '__subject__ Ampara Hospital __predicate__ location __object__ Ampara']]
Text: Ampara Hospital is in Sri Lanka, Ampara.
Subject: ['Ampara Hospital', 'Ampara Hospital']
Predicate: ['country', 'location']
Object: ['Sri Lanka', 'Ampara']

Triple: [['__subject__ Ampara Hospital __predicate__ country __object__ Sri Lanka', '__subject__ Ampara Hospital __predicate__ location __object__ Ampara']]
Text: Ampara Hospital is located in Ampara, Sri Lanka.
Subject: ['Ampara Hospital', 'Ampara Hospital']
Predicate: ['country', 'location']
Object: ['Sri Lanka', 'Ampara']

Triple: [['__subject__ Ampara Hospital __predicate__ country __object__ Sri Lanka', '__subject__ Ampara Hospital __predicate__ state __object__ Eastern Province, Sri Lanka']]
Text: Ampara Hospital is located in Eastern Province, Sri Lanka.
Subject: ['Ampara Hospital', 'Ampara Hospital']
Predicate: ['country', 'state']
Object: ['Sri Lanka', 'Eastern Province, Sri Lanka']

Triple: [['__subject__ Ampara Hospital __predicate__ country __object__ Sri Lanka', '__subject__ Ampara Hospital __predicate__ state __object__ Eastern Province, Sri Lanka']]
Text: Ampara Hospital is located in the Eastern Province, Sri Lanka.
Subject: ['Ampara Hospital', 'Ampara Hospital']
Predicate: ['country', 'state']
Object: ['Sri Lanka', 'Eastern Province, Sri Lanka']

Triple: [['__subject__ Ampara Hospital __predicate__ country __object__ Sri Lanka', '__subject__ Ampara Hospital __predicate__ state __object__ Eastern Province, Sri Lanka']]
Text: Ampara Hospital is in Eastern Province, a part of Sri Lanka.
Subject: ['Ampara Hospital', 'Ampara Hospital']
Predicate: ['country', 'state']
Object: ['Sri Lanka', 'Eastern Province, Sri Lanka']

Triple: [['__subject__ Ampara Hospital __predicate__ country __object__ Sri Lanka', '__subject__ Sri Lanka __predicate__ leader __object__ Ranil Wickremesinghe']]
Text: Ampara Hospital is in Sri Lanka, whose leader is Ranil Wickremesinghe.
Subject: ['Ampara Hospital', 'Sri Lanka']
Predicate: ['country', 'leader']
Object: ['Sri Lanka', 'Ranil Wickremesinghe']

Triple: [['__subject__ Ampara Hospital __predicate__ country __object__ Sri Lanka', '__subject__ Sri Lanka __predicate__ leader __object__ Ranil Wickremesinghe']]
Text: Sri Lanka's leader is Ranil Wickremesinghe and it is home to the Ampara Hospital.
Subject: ['Ampara Hospital', 'Sri Lanka']
Predicate: ['country', 'leader']
Object: ['Sri Lanka', 'Ranil Wickremesinghe']

Triple: [['__subject__ Ampara Hospital __predicate__ country __object__ Sri Lanka', '__subject__ Sri Lanka __predicate__ leader __object__ Ranil Wickremesinghe']]
Text: Ampara Hospital is in Sri Lanka whose leader is Ranil Wickremesinghe.
Subject: ['Ampara Hospital', 'Sri Lanka']
Predicate: ['country', 'leader']
Object: ['Sri Lanka', 'Ranil Wickremesinghe']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ architect __object__ Alfred Giles (architect)', '__subject__ Alfred Giles (architect) __predicate__ birthPlace __object__ England']]
Text: The architect of Asher and Mary Isabelle Richardson House was Alfred Giles, who was born in England.
Subject: ['Asher and Mary Isabelle Richardson House', 'Alfred Giles (architect)']
Predicate: ['architect', 'birthPlace']
Object: ['Alfred Giles (architect)', 'England']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ architect __object__ Alfred Giles (architect)', '__subject__ Alfred Giles (architect) __predicate__ birthPlace __object__ England']]
Text: Asher and Mary Isabelle Richardson House was designed by architect Alfred Giles, who was born in England.
Subject: ['Asher and Mary Isabelle Richardson House', 'Alfred Giles (architect)']
Predicate: ['architect', 'birthPlace']
Object: ['Alfred Giles (architect)', 'England']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ architect __object__ Alfred Giles (architect)', '__subject__ Alfred Giles (architect) __predicate__ birthPlace __object__ England']]
Text: Alfred Giles from England was the architect of Asher and Mary Isabelle Richardson House.
Subject: ['Asher and Mary Isabelle Richardson House', 'Alfred Giles (architect)']
Predicate: ['architect', 'birthPlace']
Object: ['Alfred Giles (architect)', 'England']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ architect __object__ Alfred Giles (architect)', '__subject__ Alfred Giles (architect) __predicate__ deathPlace __object__ Kendall County, Texas']]
Text: Alfred Giles was the architect of Asher and Mary Isabelle Richardson House and died in Kendall County, Texas.
Subject: ['Asher and Mary Isabelle Richardson House', 'Alfred Giles (architect)']
Predicate: ['architect', 'deathPlace']
Object: ['Alfred Giles (architect)', 'Kendall County, Texas']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ architect __object__ Alfred Giles (architect)', '__subject__ Alfred Giles (architect) __predicate__ deathPlace __object__ Kendall County, Texas']]
Text: Asher and Mary Isabelle Richardson House was designed by architect Alfred Giles who died in Kendall County, Texas.
Subject: ['Asher and Mary Isabelle Richardson House', 'Alfred Giles (architect)']
Predicate: ['architect', 'deathPlace']
Object: ['Alfred Giles (architect)', 'Kendall County, Texas']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ architect __object__ Alfred Giles (architect)', '__subject__ Alfred Giles (architect) __predicate__ deathPlace __object__ Kendall County, Texas']]
Text: Alfred Giles, architect of The Asher and Mary Isabelle Richardson House died in Kendall County, Texas.
Subject: ['Asher and Mary Isabelle Richardson House', 'Alfred Giles (architect)']
Predicate: ['architect', 'deathPlace']
Object: ['Alfred Giles (architect)', 'Kendall County, Texas']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ Asherton, Texas', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ NationalRegisterOfHistoricPlacesReferenceNumber __object__ 88002539']]
Text: Asher and Mary Isabelle Richardson House, located in Asherton, Texas, has the reference number 88002539 in the National Register of Historic Places.
Subject: ['Asher and Mary Isabelle Richardson House', 'Asher and Mary Isabelle Richardson House']
Predicate: ['location', 'NationalRegisterOfHistoricPlacesReferenceNumber']
Object: ['Asherton, Texas', '88002539']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ Asherton, Texas', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ NationalRegisterOfHistoricPlacesReferenceNumber __object__ 88002539']]
Text: Asher and Mary Isabelle Richardson House is located in Asherton Texas and has a reference number of 88002539 in the National Register of Historic Places.
Subject: ['Asher and Mary Isabelle Richardson House', 'Asher and Mary Isabelle Richardson House']
Predicate: ['location', 'NationalRegisterOfHistoricPlacesReferenceNumber']
Object: ['Asherton, Texas', '88002539']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ Asherton, Texas', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ NationalRegisterOfHistoricPlacesReferenceNumber __object__ 88002539']]
Text: The Reference Number in the National Register of Historic Places for Asher and Mary Isabelle Richardson House in Asherton, Texas, is 88002539.
Subject: ['Asher and Mary Isabelle Richardson House', 'Asher and Mary Isabelle Richardson House']
Predicate: ['location', 'NationalRegisterOfHistoricPlacesReferenceNumber']
Object: ['Asherton, Texas', '88002539']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ Asherton, Texas', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ yearOfConstruction __object__ 1911']]
Text: The Asher and Mary Isabelle Richardson House, constructed in 1911, is located in Asherton, Texas.
Subject: ['Asher and Mary Isabelle Richardson House', 'Asher and Mary Isabelle Richardson House']
Predicate: ['location', 'yearOfConstruction']
Object: ['Asherton, Texas', '1911']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ Asherton, Texas', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ yearOfConstruction __object__ 1911']]
Text: Asher and Mary Isabelle Richardson House, built in 1911, is located in Asherton, Texas.
Subject: ['Asher and Mary Isabelle Richardson House', 'Asher and Mary Isabelle Richardson House']
Predicate: ['location', 'yearOfConstruction']
Object: ['Asherton, Texas', '1911']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ Asherton, Texas', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ yearOfConstruction __object__ 1911']]
Text: Asher and Mary Isabelle Richardson House was built in 1911, and is located in Asherton, Texas.
Subject: ['Asher and Mary Isabelle Richardson House', 'Asher and Mary Isabelle Richardson House']
Predicate: ['location', 'yearOfConstruction']
Object: ['Asherton, Texas', '1911']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ U.S. Route 83', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ addedToTheNationalRegisterOfHistoricPlaces __object__ 1988-11-22']]
Text: Asher and Mary Isabelle Richardson House is located on U.S. Route 83 and was added to the National Register of Historic Places on 1988-11-22.
Subject: ['Asher and Mary Isabelle Richardson House', 'Asher and Mary Isabelle Richardson House']
Predicate: ['location', 'addedToTheNationalRegisterOfHistoricPlaces']
Object: ['U.S. Route 83', '1988-11-22']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ U.S. Route 83', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ addedToTheNationalRegisterOfHistoricPlaces __object__ 1988-11-22']]
Text: Asher and Mary Isabelle Richardson House is at U.S. Route 83 and was added to the National Register of Historic Places on November 22, 1988.
Subject: ['Asher and Mary Isabelle Richardson House', 'Asher and Mary Isabelle Richardson House']
Predicate: ['location', 'addedToTheNationalRegisterOfHistoricPlaces']
Object: ['U.S. Route 83', '1988-11-22']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ U.S. Route 83', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ yearOfConstruction __object__ 1911']]
Text: Asher and Mary Isabelle Richardson House, built in 1911, is located at U.S. Route 83.
Subject: ['Asher and Mary Isabelle Richardson House', 'Asher and Mary Isabelle Richardson House']
Predicate: ['location', 'yearOfConstruction']
Object: ['U.S. Route 83', '1911']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ U.S. Route 83', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ yearOfConstruction __object__ 1911']]
Text: The Asher and Mary Isabelle Richardson House is on U.S. Route 83 and was constructed in 1911.
Subject: ['Asher and Mary Isabelle Richardson House', 'Asher and Mary Isabelle Richardson House']
Predicate: ['location', 'yearOfConstruction']
Object: ['U.S. Route 83', '1911']

Triple: [['__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ U.S. Route 83', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ yearOfConstruction __object__ 1911']]
Text: The Asher and Mary Isabelle Richardson House is located on U.S. Route 83 and was built in 1911.
Subject: ['Asher and Mary Isabelle Richardson House', 'Asher and Mary Isabelle Richardson House']
Predicate: ['location', 'yearOfConstruction']
Object: ['U.S. Route 83', '1911']

Triple: [['__subject__ Asherton, Texas __predicate__ country __object__ United States', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ Asherton, Texas']]
Text: Asher and Mary Isabelle Richardson House is located in Asherton, Texas, USA.
Subject: ['Asherton, Texas', 'Asher and Mary Isabelle Richardson House']
Predicate: ['country', 'location']
Object: ['United States', 'Asherton, Texas']

Triple: [['__subject__ Asherton, Texas __predicate__ country __object__ United States', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ Asherton, Texas']]
Text: Asher and Mary Isabelle Richardson House is located in Asherton, Texas in the United States.
Subject: ['Asherton, Texas', 'Asher and Mary Isabelle Richardson House']
Predicate: ['country', 'location']
Object: ['United States', 'Asherton, Texas']

Triple: [['__subject__ Asherton, Texas __predicate__ country __object__ United States', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ Asherton, Texas']]
Text: Asher and Mary Isabelle Richardson House is located in Asherton, Texas, United States.
Subject: ['Asherton, Texas', 'Asher and Mary Isabelle Richardson House']
Predicate: ['country', 'location']
Object: ['United States', 'Asherton, Texas']

Triple: [['__subject__ Asherton, Texas __predicate__ isPartOf __object__ Dimmit County, Texas', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ Asherton, Texas']]
Text: Asher and Mary Isabelle Richardson House is located in Asherton, a part of Dimmit County, Texas.
Subject: ['Asherton, Texas', 'Asher and Mary Isabelle Richardson House']
Predicate: ['isPartOf', 'location']
Object: ['Dimmit County, Texas', 'Asherton, Texas']

Triple: [['__subject__ Asherton, Texas __predicate__ isPartOf __object__ Dimmit County, Texas', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ Asherton, Texas']]
Text: Asher and Mary Isabelle Richardson House is located in Asherton, Dimmit County, Texas.
Subject: ['Asherton, Texas', 'Asher and Mary Isabelle Richardson House']
Predicate: ['isPartOf', 'location']
Object: ['Dimmit County, Texas', 'Asherton, Texas']

Triple: [['__subject__ Asherton, Texas __predicate__ isPartOf __object__ Dimmit County, Texas', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ Asherton, Texas']]
Text: Asher and Mary Isabelle Richardson House is located in Asherton, Texas, which is part of Dimmit County, Texas.
Subject: ['Asherton, Texas', 'Asher and Mary Isabelle Richardson House']
Predicate: ['isPartOf', 'location']
Object: ['Dimmit County, Texas', 'Asherton, Texas']

Triple: [['__subject__ Asherton, Texas __predicate__ isPartOf __object__ United States', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ Asherton, Texas']]
Text: Asher and Mary Isabelle Richardson House is located in Asherton, Texas, which is a part of the United States.
Subject: ['Asherton, Texas', 'Asher and Mary Isabelle Richardson House']
Predicate: ['isPartOf', 'location']
Object: ['United States', 'Asherton, Texas']

Triple: [['__subject__ Asherton, Texas __predicate__ isPartOf __object__ United States', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ Asherton, Texas']]
Text: Asher and Mary Isabelle Richardson House is located in Asherton, Texas, United States.
Subject: ['Asherton, Texas', 'Asher and Mary Isabelle Richardson House']
Predicate: ['isPartOf', 'location']
Object: ['United States', 'Asherton, Texas']

Triple: [['__subject__ Asherton, Texas __predicate__ isPartOf __object__ United States', '__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ Asherton, Texas']]
Text: Asher and Mary Isabelle Richardson House is located in Asherton, Texas in the United States.
Subject: ['Asherton, Texas', 'Asher and Mary Isabelle Richardson House']
Predicate: ['isPartOf', 'location']
Object: ['United States', 'Asherton, Texas']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ architect __object__ Julia Morgan', '__subject__ Julia Morgan __predicate__ birthPlace __object__ California']]
Text: Julia Morgan was born in California and is the architect of Asilomar Conference Grounds.
Subject: ['Asilomar Conference Grounds', 'Julia Morgan']
Predicate: ['architect', 'birthPlace']
Object: ['Julia Morgan', 'California']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ architect __object__ Julia Morgan', '__subject__ Julia Morgan __predicate__ birthPlace __object__ California']]
Text: Asilomar Conference Grounds was designed by Julia Morgan, who was born in California.
Subject: ['Asilomar Conference Grounds', 'Julia Morgan']
Predicate: ['architect', 'birthPlace']
Object: ['Julia Morgan', 'California']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ architect __object__ Julia Morgan', '__subject__ Julia Morgan __predicate__ birthPlace __object__ San Francisco']]
Text: Julia Morgan from San Francisco was the designer of the Asilomar Conference Grounds.
Subject: ['Asilomar Conference Grounds', 'Julia Morgan']
Predicate: ['architect', 'birthPlace']
Object: ['Julia Morgan', 'San Francisco']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ architect __object__ Julia Morgan', '__subject__ Julia Morgan __predicate__ birthPlace __object__ San Francisco']]
Text: The architect of Asilomar Conference Grounds was Julia Morgan, who was born in San Francisco.
Subject: ['Asilomar Conference Grounds', 'Julia Morgan']
Predicate: ['architect', 'birthPlace']
Object: ['Julia Morgan', 'San Francisco']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ architect __object__ Julia Morgan', '__subject__ Julia Morgan __predicate__ significantBuilding __object__ Asilomar State Beach']]
Text: Asilomar State Beach is one of the significant buildings designed by architect Julia Morgan, who also designed The Asilomar Conference Grounds.
Subject: ['Asilomar Conference Grounds', 'Julia Morgan']
Predicate: ['architect', 'significantBuilding']
Object: ['Julia Morgan', 'Asilomar State Beach']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ architect __object__ Julia Morgan', '__subject__ Julia Morgan __predicate__ significantBuilding __object__ Asilomar State Beach']]
Text: Julia Morgan was the architect of the grounds of Asilomar Conference and the Asilomar State Beach.
Subject: ['Asilomar Conference Grounds', 'Julia Morgan']
Predicate: ['architect', 'significantBuilding']
Object: ['Julia Morgan', 'Asilomar State Beach']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ architect __object__ Julia Morgan', '__subject__ Julia Morgan __predicate__ significantBuilding __object__ Chinatown, San Francisco']]
Text: Julia Morgan is the architect of Asilomar Conference Grounds and Chinatown in San Francisco.
Subject: ['Asilomar Conference Grounds', 'Julia Morgan']
Predicate: ['architect', 'significantBuilding']
Object: ['Julia Morgan', 'Chinatown, San Francisco']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ architect __object__ Julia Morgan', '__subject__ Julia Morgan __predicate__ significantBuilding __object__ Chinatown, San Francisco']]
Text: Julia Morgan was the architect behind Chinatown in San Francisco and the grounds of Asilomar Conference.
Subject: ['Asilomar Conference Grounds', 'Julia Morgan']
Predicate: ['architect', 'significantBuilding']
Object: ['Julia Morgan', 'Chinatown, San Francisco']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ architect __object__ Julia Morgan', '__subject__ Julia Morgan __predicate__ significantBuilding __object__ Chinatown, San Francisco']]
Text: The architect of Asilomar Conference Grounds was Julia Morgan who also designed significant buildings in Chinatown, San Francisco.
Subject: ['Asilomar Conference Grounds', 'Julia Morgan']
Predicate: ['architect', 'significantBuilding']
Object: ['Julia Morgan', 'Chinatown, San Francisco']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ architect __object__ Julia Morgan', '__subject__ Julia Morgan __predicate__ significantBuilding __object__ Los Angeles Herald-Examiner']]
Text: Julia Morgan designed the Asilomar Conference Grounds, and the landmark Los Angeles Herald Examiner building in California.
Subject: ['Asilomar Conference Grounds', 'Julia Morgan']
Predicate: ['architect', 'significantBuilding']
Object: ['Julia Morgan', 'Los Angeles Herald-Examiner']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ architect __object__ Julia Morgan', '__subject__ Julia Morgan __predicate__ significantBuilding __object__ Los Angeles Herald-Examiner']]
Text: Julia Morgan has designed many significant buildings, including the Los Angeles Herald Examiner building, and also designed Asilomar Conference Grounds.
Subject: ['Asilomar Conference Grounds', 'Julia Morgan']
Predicate: ['architect', 'significantBuilding']
Object: ['Julia Morgan', 'Los Angeles Herald-Examiner']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ architect __object__ Julia Morgan', '__subject__ Julia Morgan __predicate__ significantBuilding __object__ Los Angeles Herald-Examiner']]
Text: Julia Morgan is the architect of the grounds of the Asilomar Conference as well as many other significant buildings including the Los Angeles Herald Examiner building.
Subject: ['Asilomar Conference Grounds', 'Julia Morgan']
Predicate: ['architect', 'significantBuilding']
Object: ['Julia Morgan', 'Los Angeles Herald-Examiner']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ architect __object__ Julia Morgan', '__subject__ Julia Morgan __predicate__ significantBuilding __object__ Riverside Art Museum']]
Text: Julia Morgan was the architect of the Asilomar Conference Grounds and the Riverside Art Museum.
Subject: ['Asilomar Conference Grounds', 'Julia Morgan']
Predicate: ['architect', 'significantBuilding']
Object: ['Julia Morgan', 'Riverside Art Museum']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ architect __object__ Julia Morgan', '__subject__ Julia Morgan __predicate__ significantBuilding __object__ Riverside Art Museum']]
Text: Julia Morgan was the architect of the grounds of Asilomar Conference and the Riverside Art Museum.
Subject: ['Asilomar Conference Grounds', 'Julia Morgan']
Predicate: ['architect', 'significantBuilding']
Object: ['Julia Morgan', 'Riverside Art Museum']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Asilomar Blvd., Pacific Grove, California', '__subject__ Asilomar Conference Grounds __predicate__ addedToTheNationalRegisterOfHistoricPlaces __object__ 1987-02-27']]
Text: Asilomar Conference Grounds, which is located at Asilomar Blvd., Pacific Grove, California, was added to the National Register of Historic Places on February the 27nd 1987.
Subject: ['Asilomar Conference Grounds', 'Asilomar Conference Grounds']
Predicate: ['location', 'addedToTheNationalRegisterOfHistoricPlaces']
Object: ['Asilomar Blvd., Pacific Grove, California', '1987-02-27']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Asilomar Blvd., Pacific Grove, California', '__subject__ Asilomar Conference Grounds __predicate__ addedToTheNationalRegisterOfHistoricPlaces __object__ 1987-02-27']]
Text: Asilomar Conference Grounds is located at Asilomar Blvd., Pacific Grove, California and was added to the National Register of Historic Places on February the 27nd 1987.
Subject: ['Asilomar Conference Grounds', 'Asilomar Conference Grounds']
Predicate: ['location', 'addedToTheNationalRegisterOfHistoricPlaces']
Object: ['Asilomar Blvd., Pacific Grove, California', '1987-02-27']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Asilomar Blvd., Pacific Grove, California', '__subject__ Asilomar Conference Grounds __predicate__ addedToTheNationalRegisterOfHistoricPlaces __object__ 1987-02-27']]
Text: Asilomar Conference Grounds is located on Asilomar Blvd, Pacific Grove, California and was added to the National Register of Historic Places on February the 27nd 1987.
Subject: ['Asilomar Conference Grounds', 'Asilomar Conference Grounds']
Predicate: ['location', 'addedToTheNationalRegisterOfHistoricPlaces']
Object: ['Asilomar Blvd., Pacific Grove, California', '1987-02-27']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Asilomar Blvd., Pacific Grove, California', '__subject__ Asilomar Conference Grounds __predicate__ architecturalStyle __object__ American Craftsman']]
Text: Asilomar Conference Grounds, with the American Craftsman architectural style, is located at Asilomar Blvd., Pacific Grove, California.
Subject: ['Asilomar Conference Grounds', 'Asilomar Conference Grounds']
Predicate: ['location', 'architecturalStyle']
Object: ['Asilomar Blvd., Pacific Grove, California', 'American Craftsman']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Asilomar Blvd., Pacific Grove, California', '__subject__ Asilomar Conference Grounds __predicate__ architecturalStyle __object__ American Craftsman']]
Text: Asilomar Conference Grounds, which has the architectural style of American Craftsman, is located at Asilomar Blvd., Pacific Grove, California.
Subject: ['Asilomar Conference Grounds', 'Asilomar Conference Grounds']
Predicate: ['location', 'architecturalStyle']
Object: ['Asilomar Blvd., Pacific Grove, California', 'American Craftsman']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Asilomar Blvd., Pacific Grove, California', '__subject__ Asilomar Conference Grounds __predicate__ architecturalStyle __object__ American Craftsman']]
Text: Asilomar Conference Grounds is located on Asilomar Blvd, Pacific Grove, California and has the architectural style of American Craftsman.
Subject: ['Asilomar Conference Grounds', 'Asilomar Conference Grounds']
Predicate: ['location', 'architecturalStyle']
Object: ['Asilomar Blvd., Pacific Grove, California', 'American Craftsman']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Asilomar Blvd., Pacific Grove, California', '__subject__ Asilomar Conference Grounds __predicate__ yearOfConstruction __object__ 1913']]
Text: Asilomar Conference Grounds is located at Asilomar Blvd., Pacific Grove, California and was constructed in 1913.
Subject: ['Asilomar Conference Grounds', 'Asilomar Conference Grounds']
Predicate: ['location', 'yearOfConstruction']
Object: ['Asilomar Blvd., Pacific Grove, California', '1913']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Asilomar Blvd., Pacific Grove, California', '__subject__ Asilomar Conference Grounds __predicate__ yearOfConstruction __object__ 1913']]
Text: The Asilomar Conference Grounds were made in 1913 and are on the Asilomar Blvd, Pacific Grove, CA.
Subject: ['Asilomar Conference Grounds', 'Asilomar Conference Grounds']
Predicate: ['location', 'yearOfConstruction']
Object: ['Asilomar Blvd., Pacific Grove, California', '1913']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Pacific Grove, California', '__subject__ Asilomar Conference Grounds __predicate__ NationalRegisterOfHistoricPlacesReferenceNumber __object__ 87000823']]
Text: Asilomar Conference Grounds are located in Pacific Grove, California and has the reference number 87000823 in the National Register of Historic Places.
Subject: ['Asilomar Conference Grounds', 'Asilomar Conference Grounds']
Predicate: ['location', 'NationalRegisterOfHistoricPlacesReferenceNumber']
Object: ['Pacific Grove, California', '87000823']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Pacific Grove, California', '__subject__ Asilomar Conference Grounds __predicate__ NationalRegisterOfHistoricPlacesReferenceNumber __object__ 87000823']]
Text: Asilomar Conference Grounds is located in Pacific Grove, California. 87000823 is its reference number in the National Register of Historic Places.
Subject: ['Asilomar Conference Grounds', 'Asilomar Conference Grounds']
Predicate: ['location', 'NationalRegisterOfHistoricPlacesReferenceNumber']
Object: ['Pacific Grove, California', '87000823']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Pacific Grove, California', '__subject__ Asilomar Conference Grounds __predicate__ architecturalStyle __object__ Arts and Crafts movement']]
Text: The Asilomar Conference Grounds, with an Arts and Crafts movement style architecture, is located at Pacific Grove, California.
Subject: ['Asilomar Conference Grounds', 'Asilomar Conference Grounds']
Predicate: ['location', 'architecturalStyle']
Object: ['Pacific Grove, California', 'Arts and Crafts movement']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Pacific Grove, California', '__subject__ Asilomar Conference Grounds __predicate__ architecturalStyle __object__ Arts and Crafts movement']]
Text: Asilomar Conference Grounds, with an architectural style of the Arts and Crafts Movement, is located in Pacific Grove, California.
Subject: ['Asilomar Conference Grounds', 'Asilomar Conference Grounds']
Predicate: ['location', 'architecturalStyle']
Object: ['Pacific Grove, California', 'Arts and Crafts movement']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Pacific Grove, California', '__subject__ Asilomar Conference Grounds __predicate__ architecturalStyle __object__ Arts and Crafts movement']]
Text: Asilomar Conference Grounds are located in Pacific Grove, California and has the architectural style of Arts and Crafts Movement.
Subject: ['Asilomar Conference Grounds', 'Asilomar Conference Grounds']
Predicate: ['location', 'architecturalStyle']
Object: ['Pacific Grove, California', 'Arts and Crafts movement']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Pacific Grove, California', '__subject__ Asilomar Conference Grounds __predicate__ yearOfConstruction __object__ 1913']]
Text: Asilomar Conference Grounds were constructed in 1913 and are located in Pacific Grove, California.
Subject: ['Asilomar Conference Grounds', 'Asilomar Conference Grounds']
Predicate: ['location', 'yearOfConstruction']
Object: ['Pacific Grove, California', '1913']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Pacific Grove, California', '__subject__ Asilomar Conference Grounds __predicate__ yearOfConstruction __object__ 1913']]
Text: The Asilomar Conference Grounds, constructed in 1913, is located at Pacific Grove, California.
Subject: ['Asilomar Conference Grounds', 'Asilomar Conference Grounds']
Predicate: ['location', 'yearOfConstruction']
Object: ['Pacific Grove, California', '1913']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Pacific Grove, California', '__subject__ Asilomar Conference Grounds __predicate__ yearOfConstruction __object__ 1913']]
Text: Constructed in 1913, the Asilomar Conference Grounds are located at Pacific Grove, California.
Subject: ['Asilomar Conference Grounds', 'Asilomar Conference Grounds']
Predicate: ['location', 'yearOfConstruction']
Object: ['Pacific Grove, California', '1913']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Pacific Grove, California', '__subject__ Pacific Grove, California __predicate__ country __object__ United States']]
Text: The Asilomar Conference Grounds is located at Pacific Grove, California in the United States.
Subject: ['Asilomar Conference Grounds', 'Pacific Grove, California']
Predicate: ['location', 'country']
Object: ['Pacific Grove, California', 'United States']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Pacific Grove, California', '__subject__ Pacific Grove, California __predicate__ country __object__ United States']]
Text: The Asilomar Conference Grounds are in Pacific Grove, California in the United States.
Subject: ['Asilomar Conference Grounds', 'Pacific Grove, California']
Predicate: ['location', 'country']
Object: ['Pacific Grove, California', 'United States']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Pacific Grove, California', '__subject__ Pacific Grove, California __predicate__ country __object__ United States']]
Text: Asilomar Conference Grounds are located in Pacific Grove, California which is in the United States.
Subject: ['Asilomar Conference Grounds', 'Pacific Grove, California']
Predicate: ['location', 'country']
Object: ['Pacific Grove, California', 'United States']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Pacific Grove, California', '__subject__ Pacific Grove, California __predicate__ isPartOf __object__ California']]
Text: Asilomar Conference Grounds in Pacific Grove, CA is part of the state of California.
Subject: ['Asilomar Conference Grounds', 'Pacific Grove, California']
Predicate: ['location', 'isPartOf']
Object: ['Pacific Grove, California', 'California']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Pacific Grove, California', '__subject__ Pacific Grove, California __predicate__ isPartOf __object__ California']]
Text: The Asilomar Conference Grounds is located at Pacific Grove, which is part of California.
Subject: ['Asilomar Conference Grounds', 'Pacific Grove, California']
Predicate: ['location', 'isPartOf']
Object: ['Pacific Grove, California', 'California']

Triple: [['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Pacific Grove, California', '__subject__ Pacific Grove, California __predicate__ isPartOf __object__ California']]
Text: Asilomar Conference Grounds are located in Pacific Grove, a part of California.
Subject: ['Asilomar Conference Grounds', 'Pacific Grove, California']
Predicate: ['location', 'isPartOf']
Object: ['Pacific Grove, California', 'California']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ Asser Levy Place and East 23rd Street', '__subject__ Asser Levy Public Baths __predicate__ yearOfConstruction __object__ 1904']]
Text: The Asser Levy Public Baths are located in Asser Levy Place on East 23rd Street and were built in 1904.
Subject: ['Asser Levy Public Baths', 'Asser Levy Public Baths']
Predicate: ['location', 'yearOfConstruction']
Object: ['Asser Levy Place and East 23rd Street', '1904']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ Asser Levy Place and East 23rd Street', '__subject__ Asser Levy Public Baths __predicate__ yearOfConstruction __object__ 1904']]
Text: Asser Levy Public Baths, built in 1904, are located on Asser Levy Place and East 23rd Street.
Subject: ['Asser Levy Public Baths', 'Asser Levy Public Baths']
Predicate: ['location', 'yearOfConstruction']
Object: ['Asser Levy Place and East 23rd Street', '1904']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ Asser Levy Place and East 23rd Street', '__subject__ Asser Levy Public Baths __predicate__ yearOfConstruction __object__ 1904']]
Text: The Asser Levy Public Baths (constructed in 1904) is in Asser Levy Place and East 23rd Street.
Subject: ['Asser Levy Public Baths', 'Asser Levy Public Baths']
Predicate: ['location', 'yearOfConstruction']
Object: ['Asser Levy Place and East 23rd Street', '1904']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ Avenue A (Manhattan)', '__subject__ Asser Levy Public Baths __predicate__ yearOfConstruction __object__ 1904']]
Text: Asser Levy Public Baths located at Avenue A, Manhattan. and constructed in 1904.
Subject: ['Asser Levy Public Baths', 'Asser Levy Public Baths']
Predicate: ['location', 'yearOfConstruction']
Object: ['Avenue A (Manhattan)', '1904']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ Avenue A (Manhattan)', '__subject__ Asser Levy Public Baths __predicate__ yearOfConstruction __object__ 1904']]
Text: Asser Levy Public Baths, which was built in 1904, is located in Avenue A, Manhattan.
Subject: ['Asser Levy Public Baths', 'Asser Levy Public Baths']
Predicate: ['location', 'yearOfConstruction']
Object: ['Avenue A (Manhattan)', '1904']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ Avenue A (Manhattan)', '__subject__ Asser Levy Public Baths __predicate__ yearOfConstruction __object__ 1904']]
Text: Asser Levy Public Baths, which were constructed in 1904, is located in Avenue A, Manhattan.
Subject: ['Asser Levy Public Baths', 'Asser Levy Public Baths']
Predicate: ['location', 'yearOfConstruction']
Object: ['Avenue A (Manhattan)', '1904']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ Manhattan', '__subject__ Asser Levy Public Baths __predicate__ yearOfConstruction __object__ 1904']]
Text: Asser Levy Public Baths, built in 1904, is located in Manhattan.
Subject: ['Asser Levy Public Baths', 'Asser Levy Public Baths']
Predicate: ['location', 'yearOfConstruction']
Object: ['Manhattan', '1904']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ Manhattan', '__subject__ Asser Levy Public Baths __predicate__ yearOfConstruction __object__ 1904']]
Text: Asser Levy Public Baths in Manhattan were constructed in 1904.
Subject: ['Asser Levy Public Baths', 'Asser Levy Public Baths']
Predicate: ['location', 'yearOfConstruction']
Object: ['Manhattan', '1904']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ Manhattan', '__subject__ Manhattan __predicate__ isPartOf __object__ New York']]
Text: Asser Levy Public Baths is located in Manhattan, which is a part of New York.
Subject: ['Asser Levy Public Baths', 'Manhattan']
Predicate: ['location', 'isPartOf']
Object: ['Manhattan', 'New York']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ Manhattan', '__subject__ Manhattan __predicate__ isPartOf __object__ New York']]
Text: Asser Levy Public Baths are in Manhattan, New York.
Subject: ['Asser Levy Public Baths', 'Manhattan']
Predicate: ['location', 'isPartOf']
Object: ['Manhattan', 'New York']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ Manhattan', '__subject__ Manhattan __predicate__ leader __object__ Cyrus Vance, Jr.']]
Text: Asser Levy Public Baths is located in Manhattan where Cyrus Vance Jr. is the leader.
Subject: ['Asser Levy Public Baths', 'Manhattan']
Predicate: ['location', 'leader']
Object: ['Manhattan', 'Cyrus Vance, Jr.']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ Manhattan', '__subject__ Manhattan __predicate__ leader __object__ Cyrus Vance, Jr.']]
Text: Asser Levy Public Baths is located in Manhattan where Cyrus Vance Jr. is one of the leaders.
Subject: ['Asser Levy Public Baths', 'Manhattan']
Predicate: ['location', 'leader']
Object: ['Manhattan', 'Cyrus Vance, Jr.']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ Manhattan', '__subject__ Manhattan __predicate__ leader __object__ Gale Brewer']]
Text: Gale Brewer is the leader of Manhattan, which is the location of Asser Levy Public Baths.
Subject: ['Asser Levy Public Baths', 'Manhattan']
Predicate: ['location', 'leader']
Object: ['Manhattan', 'Gale Brewer']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ Manhattan', '__subject__ Manhattan __predicate__ leader __object__ Gale Brewer']]
Text: Gale Brewer is the leader of Manhattan, where the Asser Levy Public Baths can be found.
Subject: ['Asser Levy Public Baths', 'Manhattan']
Predicate: ['location', 'leader']
Object: ['Manhattan', 'Gale Brewer']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ Manhattan', '__subject__ Manhattan __predicate__ leader __object__ Gale Brewer']]
Text: Asser Levy Public Baths is located in Manhattan whose leader is Gale Brewer.
Subject: ['Asser Levy Public Baths', 'Manhattan']
Predicate: ['location', 'leader']
Object: ['Manhattan', 'Gale Brewer']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ New York City', '__subject__ Asser Levy Public Baths __predicate__ yearOfConstruction __object__ 1904']]
Text: The Asser Levy Public Baths which was built in 1904 is located in New York City.
Subject: ['Asser Levy Public Baths', 'Asser Levy Public Baths']
Predicate: ['location', 'yearOfConstruction']
Object: ['New York City', '1904']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ New York City', '__subject__ Asser Levy Public Baths __predicate__ yearOfConstruction __object__ 1904']]
Text: Asser Levy Public Baths (constructed in 1904) are located in New York City.
Subject: ['Asser Levy Public Baths', 'Asser Levy Public Baths']
Predicate: ['location', 'yearOfConstruction']
Object: ['New York City', '1904']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ New York City', '__subject__ Asser Levy Public Baths __predicate__ yearOfConstruction __object__ 1904']]
Text: The location of Asser Levy Public Baths, built in 1904, is New York City.
Subject: ['Asser Levy Public Baths', 'Asser Levy Public Baths']
Predicate: ['location', 'yearOfConstruction']
Object: ['New York City', '1904']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ New York City', '__subject__ New York City __predicate__ isPartOf __object__ Manhattan']]
Text: Asser Levy Public Baths are located in New York City which Manhattan is a part of.
Subject: ['Asser Levy Public Baths', 'New York City']
Predicate: ['location', 'isPartOf']
Object: ['New York City', 'Manhattan']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ New York City', '__subject__ New York City __predicate__ isPartOf __object__ Manhattan']]
Text: The Asser Levy Public Baths are in New York City which is part of Manhattan.
Subject: ['Asser Levy Public Baths', 'New York City']
Predicate: ['location', 'isPartOf']
Object: ['New York City', 'Manhattan']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ New York City', '__subject__ New York City __predicate__ isPartOf __object__ New Netherland']]
Text: Asser Levy Public Baths are in New York City of which New Netherland is a part.
Subject: ['Asser Levy Public Baths', 'New York City']
Predicate: ['location', 'isPartOf']
Object: ['New York City', 'New Netherland']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ New York City', '__subject__ New York City __predicate__ isPartOf __object__ New Netherland']]
Text: Asser Levy Public Baths are located in New York City, which is part of New Netherland.
Subject: ['Asser Levy Public Baths', 'New York City']
Predicate: ['location', 'isPartOf']
Object: ['New York City', 'New Netherland']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ New York City', '__subject__ New York City __predicate__ isPartOf __object__ New York']]
Text: New York City, part of New York, has the Asser Levy Public Baths.
Subject: ['Asser Levy Public Baths', 'New York City']
Predicate: ['location', 'isPartOf']
Object: ['New York City', 'New York']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ New York City', '__subject__ New York City __predicate__ isPartOf __object__ New York']]
Text: Asser Levy Public Baths are located in New York City, which is part of New York.
Subject: ['Asser Levy Public Baths', 'New York City']
Predicate: ['location', 'isPartOf']
Object: ['New York City', 'New York']

Triple: [['__subject__ Asser Levy Public Baths __predicate__ location __object__ New York City', '__subject__ New York City __predicate__ isPartOf __object__ New York']]
Text: The location of Asser Levy Public Baths are New York City, New York State.
Subject: ['Asser Levy Public Baths', 'New York City']
Predicate: ['location', 'isPartOf']
Object: ['New York City', 'New York']

Triple: [['__subject__ Dublin __predicate__ country __object__ Republic of Ireland', '__subject__ 3Arena __predicate__ location __object__ Dublin']]
Text: 3Arena is located in Dublin, in the Republic of Ireland.
Subject: ['Dublin', '3Arena']
Predicate: ['country', 'location']
Object: ['Republic of Ireland', 'Dublin']

Triple: [['__subject__ Dublin __predicate__ country __object__ Republic of Ireland', '__subject__ 3Arena __predicate__ location __object__ Dublin']]
Text: 3Arena is located in Dublin, Republic of Ireland.
Subject: ['Dublin', '3Arena']
Predicate: ['country', 'location']
Object: ['Republic of Ireland', 'Dublin']

Triple: [['__subject__ Ethiopia __predicate__ leader __object__ Hailemariam Desalegn', '__subject__ Addis Ababa City Hall __predicate__ country __object__ Ethiopia']]
Text: Addis Ababa City Hall is located in the country of Ethiopia which is led by Hailemariam Desalegn.
Subject: ['Ethiopia', 'Addis Ababa City Hall']
Predicate: ['leader', 'country']
Object: ['Hailemariam Desalegn', 'Ethiopia']

Triple: [['__subject__ Ethiopia __predicate__ leader __object__ Hailemariam Desalegn', '__subject__ Addis Ababa City Hall __predicate__ country __object__ Ethiopia']]
Text: Hailemariam Desalegn is the leader of Ethiopia where Addis Ababa City Hall is located.
Subject: ['Ethiopia', 'Addis Ababa City Hall']
Predicate: ['leader', 'country']
Object: ['Hailemariam Desalegn', 'Ethiopia']

Triple: [['__subject__ Ethiopia __predicate__ leader __object__ Hailemariam Desalegn', '__subject__ Addis Ababa City Hall __predicate__ country __object__ Ethiopia']]
Text: The leader of Ethipoia is Hailemariam Desalegn and Addis Ababa City Hall is also located in Ethiopia.
Subject: ['Ethiopia', 'Addis Ababa City Hall']
Predicate: ['leader', 'country']
Object: ['Hailemariam Desalegn', 'Ethiopia']

Triple: [['__subject__ Ethiopia __predicate__ leader __object__ Mulatu Teshome', '__subject__ Addis Ababa City Hall __predicate__ country __object__ Ethiopia']]
Text: Addis Ababa City Hall is located in Ethiopia whose leader is Mulatu Teshome.
Subject: ['Ethiopia', 'Addis Ababa City Hall']
Predicate: ['leader', 'country']
Object: ['Mulatu Teshome', 'Ethiopia']

Triple: [['__subject__ Ethiopia __predicate__ leader __object__ Mulatu Teshome', '__subject__ Addis Ababa City Hall __predicate__ country __object__ Ethiopia']]
Text: The leader of Ethiopia is Mulatu Teshome and the Addis Ababa City Hall is located in Ethiopia.
Subject: ['Ethiopia', 'Addis Ababa City Hall']
Predicate: ['leader', 'country']
Object: ['Mulatu Teshome', 'Ethiopia']

Triple: [['__subject__ Ethiopia __predicate__ leader __object__ Mulatu Teshome', '__subject__ Addis Ababa City Hall __predicate__ country __object__ Ethiopia']]
Text: The Addis Ababa City Hall is in Ethiopia, the country which has Mulatu Teshome as one of its leaders.
Subject: ['Ethiopia', 'Addis Ababa City Hall']
Predicate: ['leader', 'country']
Object: ['Mulatu Teshome', 'Ethiopia']

Triple: [['__subject__ India __predicate__ demonym __object__ Indian people', '__subject__ Amdavad ni Gufa __predicate__ country __object__ India']]
Text: The demonym for people living in India, where Amdavad ni Gufa is located, is Indian.
Subject: ['India', 'Amdavad ni Gufa']
Predicate: ['demonym', 'country']
Object: ['Indian people', 'India']

Triple: [['__subject__ India __predicate__ demonym __object__ Indian people', '__subject__ Amdavad ni Gufa __predicate__ country __object__ India']]
Text: Amdavad ni Gufa is located in India and the demonym for people living in India is Indian.
Subject: ['India', 'Amdavad ni Gufa']
Predicate: ['demonym', 'country']
Object: ['Indian people', 'India']

Triple: [['__subject__ India __predicate__ demonym __object__ Indian people', '__subject__ Amdavad ni Gufa __predicate__ country __object__ India']]
Text: Amdavad ni Gufa is located in India, which is populated by Indian People.
Subject: ['India', 'Amdavad ni Gufa']
Predicate: ['demonym', 'country']
Object: ['Indian people', 'India']

Triple: [['__subject__ India __predicate__ leader __object__ T. S. Thakur', '__subject__ Amdavad ni Gufa __predicate__ country __object__ India']]
Text: T S Thakur is the leader of India; also the location of Amdavad ni Gufa.
Subject: ['India', 'Amdavad ni Gufa']
Predicate: ['leader', 'country']
Object: ['T. S. Thakur', 'India']

Triple: [['__subject__ Marriott International __predicate__ foundationPlace __object__ Washington, D.C.', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ tenant __object__ Marriott International']]
Text: Marriott International which was founded in Washington, D.C. is the tenant of AC Hotel Bella Sky Copenhagen.
Subject: ['Marriott International', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['foundationPlace', 'tenant']
Object: ['Washington, D.C.', 'Marriott International']

Triple: [['__subject__ Marriott International __predicate__ foundationPlace __object__ Washington, D.C.', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ tenant __object__ Marriott International']]
Text: The tenant of the AC Hotel Bella Sky Copenhagen is the Marriott International Hotel which was founded in Washington, D.C.
Subject: ['Marriott International', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['foundationPlace', 'tenant']
Object: ['Washington, D.C.', 'Marriott International']

Triple: [['__subject__ Marriott International __predicate__ foundationPlace __object__ Washington, D.C.', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ tenant __object__ Marriott International']]
Text: Marriott International is a tenant of AC Hotel Bella Sky Copenhagen and was founded in Washington, D.C.
Subject: ['Marriott International', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['foundationPlace', 'tenant']
Object: ['Washington, D.C.', 'Marriott International']

Triple: [['__subject__ Marriott International __predicate__ location __object__ Bethesda, Maryland', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ tenant __object__ Marriott International']]
Text: The tenant of the AC Hotel Bella Sky Copenhagen is the Marriott International Hotel whose headquarters are in Bethesda, Maryland.
Subject: ['Marriott International', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['location', 'tenant']
Object: ['Bethesda, Maryland', 'Marriott International']

Triple: [['__subject__ Marriott International __predicate__ location __object__ Bethesda, Maryland', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ tenant __object__ Marriott International']]
Text: The tenant of the AC Hotel Bella Sky Copenhagen is Marriott International, the company that is located in Bethesda, Maryland.
Subject: ['Marriott International', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['location', 'tenant']
Object: ['Bethesda, Maryland', 'Marriott International']

Triple: [['__subject__ Marriott International __predicate__ location __object__ Bethesda, Maryland', '__subject__ AC Hotel Bella Sky Copenhagen __predicate__ tenant __object__ Marriott International']]
Text: The tenant of the AC Hotel Bella Sky Copenhagen is the Marriott International Hotel which has its office at Bethesda Maryland.
Subject: ['Marriott International', 'AC Hotel Bella Sky Copenhagen']
Predicate: ['location', 'tenant']
Object: ['Bethesda, Maryland', 'Marriott International']

Triple: [['__subject__ Mason School of Business __predicate__ country __object__ United States', '__subject__ Alan B. Miller Hall __predicate__ currentTenants __object__ Mason School of Business']]
Text: The Mason School of Business is located in the United States, and are the current tenants of Alan B Miller Hall.
Subject: ['Mason School of Business', 'Alan B. Miller Hall']
Predicate: ['country', 'currentTenants']
Object: ['United States', 'Mason School of Business']

Triple: [['__subject__ Mason School of Business __predicate__ country __object__ United States', '__subject__ Alan B. Miller Hall __predicate__ currentTenants __object__ Mason School of Business']]
Text: The Mason School of Business is the tenant of the Alan B Miller Hall in the United States.
Subject: ['Mason School of Business', 'Alan B. Miller Hall']
Predicate: ['country', 'currentTenants']
Object: ['United States', 'Mason School of Business']

Triple: [['__subject__ Mason School of Business __predicate__ country __object__ United States', '__subject__ Alan B. Miller Hall __predicate__ currentTenants __object__ Mason School of Business']]
Text: The Mason School of Business is located in Alan B Miller Hall in the United States.
Subject: ['Mason School of Business', 'Alan B. Miller Hall']
Predicate: ['country', 'currentTenants']
Object: ['United States', 'Mason School of Business']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ 250 Delaware Avenue __predicate__ location __object__ United States']]
Text: 250 Delaware Avenue is located in the United States, in which English is the main language.
Subject: ['United States', '250 Delaware Avenue']
Predicate: ['language', 'location']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ 250 Delaware Avenue __predicate__ location __object__ United States']]
Text: English is the language of the United States, where 250 Delaware Avenue is located.
Subject: ['United States', '250 Delaware Avenue']
Predicate: ['language', 'location']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ 250 Delaware Avenue __predicate__ location __object__ United States']]
Text: 250 Delaware Avenue is located in the United States where they speak the English language.
Subject: ['United States', '250 Delaware Avenue']
Predicate: ['language', 'location']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Joe Biden', '__subject__ 250 Delaware Avenue __predicate__ location __object__ United States']]
Text: 250 Delaware Avenue is located in the United States, which is led by Joe Biden.
Subject: ['United States', '250 Delaware Avenue']
Predicate: ['leader', 'location']
Object: ['Joe Biden', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Joe Biden', '__subject__ 250 Delaware Avenue __predicate__ location __object__ United States']]
Text: Joe Biden is a leader of the United States, which is also the location of 250 Delaware Avenue.
Subject: ['United States', '250 Delaware Avenue']
Predicate: ['leader', 'location']
Object: ['Joe Biden', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Joe Biden', '__subject__ 250 Delaware Avenue __predicate__ location __object__ United States']]
Text: 250 Delaware Avenue is in the United States where Joe Biden is a leader.
Subject: ['United States', '250 Delaware Avenue']
Predicate: ['leader', 'location']
Object: ['Joe Biden', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ John Roberts', '__subject__ 250 Delaware Avenue __predicate__ location __object__ United States']]
Text: A leader of the United States, which is home to 250 Delaware Avenue, is John Roberts.
Subject: ['United States', '250 Delaware Avenue']
Predicate: ['leader', 'location']
Object: ['John Roberts', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Paul Ryan', '__subject__ 250 Delaware Avenue __predicate__ location __object__ United States']]
Text: 250 Delaware Avenue is located in the United States which is led by Paul Ryan.
Subject: ['United States', '250 Delaware Avenue']
Predicate: ['leader', 'location']
Object: ['Paul Ryan', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Paul Ryan', '__subject__ 250 Delaware Avenue __predicate__ location __object__ United States']]
Text: 250 Delaware Avenue is located in the United States whose leader is Paul Ryan.
Subject: ['United States', '250 Delaware Avenue']
Predicate: ['leader', 'location']
Object: ['Paul Ryan', 'United States']

Triple: [['__subject__ United States __predicate__ leaderTitle __object__ President of the United States', '__subject__ 250 Delaware Avenue __predicate__ location __object__ United States']]
Text: 250 Delaware Avenue is located in the USA and its leader is the President.
Subject: ['United States', '250 Delaware Avenue']
Predicate: ['leaderTitle', 'location']
Object: ['President of the United States', 'United States']

Triple: [['__subject__ United States __predicate__ leaderTitle __object__ President of the United States', '__subject__ 250 Delaware Avenue __predicate__ location __object__ United States']]
Text: 250 Delaware Avenue is located in the United States whose leader has the title of President.
Subject: ['United States', '250 Delaware Avenue']
Predicate: ['leaderTitle', 'location']
Object: ['President of the United States', 'United States']

Triple: [["__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Donal O'Ceallaigh", '__subject__ (15788) 1993 SB __predicate__ epoch __object__ 2006-03-06']]
Text: Donal O'Ceallaigh discovered 15788 1993 SB which has an epoch date of March 6th 2006.
Subject: ['(15788) 1993 SB', '(15788) 1993 SB']
Predicate: ['discoverer', 'epoch']
Object: ["Donal O'Ceallaigh", '2006-03-06']

Triple: [["__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Donal O'Ceallaigh", '__subject__ (15788) 1993 SB __predicate__ epoch __object__ 2006-03-06']]
Text: (15788) 1993 SB's epoch is 6th March 2006 and it was discovered by Donal O'Ceallaigh.
Subject: ['(15788) 1993 SB', '(15788) 1993 SB']
Predicate: ['discoverer', 'epoch']
Object: ["Donal O'Ceallaigh", '2006-03-06']

Triple: [["__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Donal O'Ceallaigh", '__subject__ (15788) 1993 SB __predicate__ epoch __object__ 2006-03-06']]
Text: (15788) 1993 SB has an epoch date of March 6th 2006 and it was discovered by Donal O'Ceallaigh.
Subject: ['(15788) 1993 SB', '(15788) 1993 SB']
Predicate: ['discoverer', 'epoch']
Object: ["Donal O'Ceallaigh", '2006-03-06']

Triple: [['__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Iwan P. Williams', '__subject__ (15788) 1993 SB __predicate__ epoch __object__ 2006-03-06']]
Text: (15788) 1993 SB's epoch is March 5, 2006 and it was discovered by Iwan P Williams.
Subject: ['(15788) 1993 SB', '(15788) 1993 SB']
Predicate: ['discoverer', 'epoch']
Object: ['Iwan P. Williams', '2006-03-06']

Triple: [['__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Iwan P. Williams', '__subject__ (15788) 1993 SB __predicate__ epoch __object__ 2006-03-06']]
Text: (15788) 1993 SB, with an epoch date of 6th March 2006, was discovered by Iwan P Williams.
Subject: ['(15788) 1993 SB', '(15788) 1993 SB']
Predicate: ['discoverer', 'epoch']
Object: ['Iwan P. Williams', '2006-03-06']

Triple: [['__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Iwan P. Williams', '__subject__ (15788) 1993 SB __predicate__ epoch __object__ 2006-03-06']]
Text: (15788) 1993 SB has an epoch date of March 6th 2006 and was discovered by Iwan P Williams.
Subject: ['(15788) 1993 SB', '(15788) 1993 SB']
Predicate: ['discoverer', 'epoch']
Object: ['Iwan P. Williams', '2006-03-06']

Triple: [['__subject__ (15788) 1993 SB __predicate__ epoch __object__ 2006-03-06', '__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Alan Fitzsimmons']]
Text: Alan Fitzsimmons discovered (15788) 1993 SB which has an epoch of 6th March 2006.
Subject: ['(15788) 1993 SB', '(15788) 1993 SB']
Predicate: ['epoch', 'discoverer']
Object: ['2006-03-06', 'Alan Fitzsimmons']

Triple: [['__subject__ (15788) 1993 SB __predicate__ epoch __object__ 2006-03-06', '__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Alan Fitzsimmons']]
Text: (15788) 1993 SB has an epoch date of March 6th 2006 and was discovered by Alan Fitzsimmons.
Subject: ['(15788) 1993 SB', '(15788) 1993 SB']
Predicate: ['epoch', 'discoverer']
Object: ['2006-03-06', 'Alan Fitzsimmons']

Triple: [['__subject__ (15788) 1993 SB __predicate__ epoch __object__ 2006-03-06', '__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Roque de los Muchachos Observatory']]
Text: (15788) 1993 SB was discovered by Roque de los Muchachos Observatory and its epoch is 6th March 2006.
Subject: ['(15788) 1993 SB', '(15788) 1993 SB']
Predicate: ['epoch', 'discoverer']
Object: ['2006-03-06', 'Roque de los Muchachos Observatory']

Triple: [['__subject__ (15788) 1993 SB __predicate__ epoch __object__ 2006-03-06', '__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Roque de los Muchachos Observatory']]
Text: (15788) 1993 SB has an epoch date of March 6th 2006 and it was discovered by Roque de los Muchachos Observatory.
Subject: ['(15788) 1993 SB', '(15788) 1993 SB']
Predicate: ['epoch', 'discoverer']
Object: ['2006-03-06', 'Roque de los Muchachos Observatory']

Triple: [['__subject__ (15788) 1993 SB __predicate__ epoch __object__ 2006-03-06', '__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Roque de los Muchachos Observatory']]
Text: 15788 1993 SB was discovered by Roque de los Muchachos Observatory and its epoch is 6th March 2006.
Subject: ['(15788) 1993 SB', '(15788) 1993 SB']
Predicate: ['epoch', 'discoverer']
Object: ['2006-03-06', 'Roque de los Muchachos Observatory']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ apoapsis __object__ 6603633000.0 (kilometres)', '__subject__ (19255) 1994 VK8 __predicate__ averageSpeed __object__ 4.56 (kilometrePerSeconds)']]
Text: The apoapsis of (19255) 1994 VK8 is 6603633000.0 km and it has an average speed of 4.56 km/s.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['6603633000.0 (kilometres)', '4.56 (kilometrePerSeconds)']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ apoapsis __object__ 6603633000.0 (kilometres)', '__subject__ (19255) 1994 VK8 __predicate__ averageSpeed __object__ 4.56 (kilometrePerSeconds)']]
Text: (19255) 1994 VK8 has an apoapsis of 6603633000.0 kilometres and an average speed of 4.56 km/s.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['6603633000.0 (kilometres)', '4.56 (kilometrePerSeconds)']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ apoapsis __object__ 6603633000.0 (kilometres)', '__subject__ (19255) 1994 VK8 __predicate__ averageSpeed __object__ 4.56 (kilometrePerSeconds)']]
Text: The apoapsis of (19255) 1994 VK8 is 6603633000.0 km and its average speed is 4.56 km/s.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['6603633000.0 (kilometres)', '4.56 (kilometrePerSeconds)']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ apoapsis __object__ 6603633000.0 (kilometres)', '__subject__ (19255) 1994 VK8 __predicate__ temperature __object__ 43.0 (kelvins)']]
Text: (19255) 1994 VK8 has an apoapsis of 6603633000.0 km and the temperature is 43 kelvins.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['apoapsis', 'temperature']
Object: ['6603633000.0 (kilometres)', '43.0 (kelvins)']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ apoapsis __object__ 6603633000.0 (kilometres)', '__subject__ (19255) 1994 VK8 __predicate__ temperature __object__ 43.0 (kelvins)']]
Text: (19255) 1994 VK8 has an apoapsis of 6603633000.0 km and a temperature of 43 kelvins.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['apoapsis', 'temperature']
Object: ['6603633000.0 (kilometres)', '43.0 (kelvins)']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ apoapsis __object__ 6603633000.0 (kilometres)', '__subject__ (19255) 1994 VK8 __predicate__ temperature __object__ 43.0 (kelvins)']]
Text: (19255) 1994 VK8 has an apoapsis of 6603633000.0 km and a temperature of 43.0 kelvins.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['apoapsis', 'temperature']
Object: ['6603633000.0 (kilometres)', '43.0 (kelvins)']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ density __object__ 2.0 (gramPerCubicCentimetres)', '__subject__ (19255) 1994 VK8 __predicate__ apoapsis __object__ 6603633000.0 (kilometres)']]
Text: The celestial body known as, (19255) 1994 VK8, has a density of 2 grams per cubic centimetres, and an apoapsis of 6603633000.0 kilometres.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['density', 'apoapsis']
Object: ['2.0 (gramPerCubicCentimetres)', '6603633000.0 (kilometres)']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ density __object__ 2.0 (gramPerCubicCentimetres)', '__subject__ (19255) 1994 VK8 __predicate__ apoapsis __object__ 6603633000.0 (kilometres)']]
Text: (19255) 1994 VK8 has a denisty of 2.0 grams per cubic centimetre and an apoapsis of 6603633000.0 km.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['density', 'apoapsis']
Object: ['2.0 (gramPerCubicCentimetres)', '6603633000.0 (kilometres)']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ density __object__ 2.0 (gramPerCubicCentimetres)', '__subject__ (19255) 1994 VK8 __predicate__ apoapsis __object__ 6603633000.0 (kilometres)']]
Text: (19255) 1994 VK8 has a density of 2.0 grams per cubic centimetre and an apoapsis of 6603633000.0 km.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['density', 'apoapsis']
Object: ['2.0 (gramPerCubicCentimetres)', '6603633000.0 (kilometres)']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ epoch __object__ 2006-12-31', '__subject__ (19255) 1994 VK8 __predicate__ mass __object__ 5.6 (kilograms)']]
Text: 19255 1994 VK8 has a mass of 5.6kg and has an epoch date of 31.12.2006.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['epoch', 'mass']
Object: ['2006-12-31', '5.6 (kilograms)']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ epoch __object__ 2006-12-31', '__subject__ (19255) 1994 VK8 __predicate__ mass __object__ 5.6 (kilograms)']]
Text: 19255 1994 VK8 has a mass of 5.6 kgs and an epoch date of 31 December 2006.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['epoch', 'mass']
Object: ['2006-12-31', '5.6 (kilograms)']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ epoch __object__ 2006-12-31', '__subject__ (19255) 1994 VK8 __predicate__ mass __object__ 5.6 (kilograms)']]
Text: The epoch of (19255) 1994 VK8, which has a mass of 5.6kg, is on 31 December 2006.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['epoch', 'mass']
Object: ['2006-12-31', '5.6 (kilograms)']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ epoch __object__ 2006-12-31', '__subject__ (19255) 1994 VK8 __predicate__ orbitalPeriod __object__ 8788850000.0']]
Text: The epoch of (19255) 1994 VK8 was on 31 December 2006 and its orbital period is 8788850000.0.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2006-12-31', '8788850000.0']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ epoch __object__ 2006-12-31', '__subject__ (19255) 1994 VK8 __predicate__ orbitalPeriod __object__ 8788850000.0']]
Text: (19255) 1994 VK8 has an orbital period of 8788850000.0 and its epoch is on 31 December 2006.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2006-12-31', '8788850000.0']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ epoch __object__ 2006-12-31', '__subject__ (19255) 1994 VK8 __predicate__ orbitalPeriod __object__ 8788850000.0']]
Text: (19255) 1994 VK8 has the epoch date 31st December 2006 and an orbital period of 8788850000.0.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2006-12-31', '8788850000.0']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ epoch __object__ 2006-12-31', '__subject__ (19255) 1994 VK8 __predicate__ periapsis __object__ 6155910000000.0']]
Text: The periapsis of (19255) 1994 VK8 is 6155910000000.0 and its epoch is on 31 December 2006.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['epoch', 'periapsis']
Object: ['2006-12-31', '6155910000000.0']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ epoch __object__ 2006-12-31', '__subject__ (19255) 1994 VK8 __predicate__ periapsis __object__ 6155910000000.0']]
Text: The epoch of (19255) 1994 VK8 is on 31 December 2006 and it has a periapsis of 6155910000000.0.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['epoch', 'periapsis']
Object: ['2006-12-31', '6155910000000.0']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ epoch __object__ 2006-12-31', '__subject__ (19255) 1994 VK8 __predicate__ periapsis __object__ 6155910000000.0']]
Text: The epoch of (19255) 1994 VK8 is on 31 December 2006 and its periapsis is 6155910000000.0.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['epoch', 'periapsis']
Object: ['2006-12-31', '6155910000000.0']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ mass __object__ 5.6 (kilograms)', '__subject__ (19255) 1994 VK8 __predicate__ apoapsis __object__ 6603633000.0 (kilometres)']]
Text: 19255 1994 VK8, has a mass of 5.6kg, and an apoapsis of, 6603633000.0 km.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['mass', 'apoapsis']
Object: ['5.6 (kilograms)', '6603633000.0 (kilometres)']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ mass __object__ 5.6 (kilograms)', '__subject__ (19255) 1994 VK8 __predicate__ apoapsis __object__ 6603633000.0 (kilometres)']]
Text: (19255) 1994 VK8 has a mass of 5.6 kilograms and an apoapsis of 6603633000.0 kilometres.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['mass', 'apoapsis']
Object: ['5.6 (kilograms)', '6603633000.0 (kilometres)']

Triple: [['__subject__ (19255) 1994 VK8 __predicate__ mass __object__ 5.6 (kilograms)', '__subject__ (19255) 1994 VK8 __predicate__ apoapsis __object__ 6603633000.0 (kilometres)']]
Text: 19255 1994 VK8 has a mass of 5.6 kgs and its apoapsis is 6603633000.0 km.
Subject: ['(19255) 1994 VK8', '(19255) 1994 VK8']
Predicate: ['mass', 'apoapsis']
Object: ['5.6 (kilograms)', '6603633000.0 (kilometres)']

Triple: [['__subject__ (29075) 1950 DA __predicate__ epoch __object__ 2011-Aug-27', '__subject__ (29075) 1950 DA __predicate__ orbitalPeriod __object__ 69862200.0']]
Text: The celestial body known as (29075) 1950 DA has an orbital period of 69862200 and its epoch is on the 27th of August 2011.
Subject: ['(29075) 1950 DA', '(29075) 1950 DA']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2011-Aug-27', '69862200.0']

Triple: [['__subject__ (29075) 1950 DA __predicate__ epoch __object__ 2011-Aug-27', '__subject__ (29075) 1950 DA __predicate__ orbitalPeriod __object__ 69862200.0']]
Text: (29075) 1950 DA has the epoch date of 27 August 2011 and an orbital period of 69862200.0.
Subject: ['(29075) 1950 DA', '(29075) 1950 DA']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2011-Aug-27', '69862200.0']

Triple: [['__subject__ (29075) 1950 DA __predicate__ epoch __object__ 2011-Aug-27', '__subject__ (29075) 1950 DA __predicate__ orbitalPeriod __object__ 69862200.0']]
Text: (29075) 1950 DA has an epoch date of August 27th 2011 and an orbital period of 69862200.0.
Subject: ['(29075) 1950 DA', '(29075) 1950 DA']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2011-Aug-27', '69862200.0']

Triple: [['__subject__ (29075) 1950 DA __predicate__ epoch __object__ 2011-Aug-27', '__subject__ (29075) 1950 DA __predicate__ periapsis __object__ 124950000000.0']]
Text: (29075) 1950 DA has a periapsis of 124950000000.0, and the epoch date of August 27th 2011.
Subject: ['(29075) 1950 DA', '(29075) 1950 DA']
Predicate: ['epoch', 'periapsis']
Object: ['2011-Aug-27', '124950000000.0']

Triple: [['__subject__ (29075) 1950 DA __predicate__ epoch __object__ 2011-Aug-27', '__subject__ (29075) 1950 DA __predicate__ periapsis __object__ 124950000000.0']]
Text: 29075 1950 DA has the epoch date of 27 August 2011 and its periapsis is 124950000000.0.
Subject: ['(29075) 1950 DA', '(29075) 1950 DA']
Predicate: ['epoch', 'periapsis']
Object: ['2011-Aug-27', '124950000000.0']

Triple: [['__subject__ (29075) 1950 DA __predicate__ epoch __object__ 2011-Aug-27', '__subject__ (29075) 1950 DA __predicate__ rotationPeriod __object__ 7637.76']]
Text: The epoch for (29075) 1950 DA is on the 27th of August 2011 and has a rotation period of 7637.76.
Subject: ['(29075) 1950 DA', '(29075) 1950 DA']
Predicate: ['epoch', 'rotationPeriod']
Object: ['2011-Aug-27', '7637.76']

Triple: [['__subject__ (29075) 1950 DA __predicate__ epoch __object__ 2011-Aug-27', '__subject__ (29075) 1950 DA __predicate__ rotationPeriod __object__ 7637.76']]
Text: (29075) 1950 DA has an epoch date of 27th August 2011 and its rotation period is 7637.76.
Subject: ['(29075) 1950 DA', '(29075) 1950 DA']
Predicate: ['epoch', 'rotationPeriod']
Object: ['2011-Aug-27', '7637.76']

Triple: [['__subject__ (29075) 1950 DA __predicate__ orbitalPeriod __object__ 69862200.0', '__subject__ (29075) 1950 DA __predicate__ mass __object__ 4.0 (kilograms)']]
Text: (29075) 1950 DA has a mass of 4.0 kilograms and an orbital period of 69862200.0.
Subject: ['(29075) 1950 DA', '(29075) 1950 DA']
Predicate: ['orbitalPeriod', 'mass']
Object: ['69862200.0', '4.0 (kilograms)']

Triple: [['__subject__ (29075) 1950 DA __predicate__ orbitalPeriod __object__ 69862200.0', '__subject__ (29075) 1950 DA __predicate__ mass __object__ 4.0 (kilograms)']]
Text: The celestial body known as (29075) 1950 DA has an orbital period of 69862200 and a mass of 4.0 kgs.
Subject: ['(29075) 1950 DA', '(29075) 1950 DA']
Predicate: ['orbitalPeriod', 'mass']
Object: ['69862200.0', '4.0 (kilograms)']

Triple: [['__subject__ (29075) 1950 DA __predicate__ orbitalPeriod __object__ 69862200.0', '__subject__ (29075) 1950 DA __predicate__ mass __object__ 4.0 (kilograms)']]
Text: The celestial body known as (29075) 1950 DA has an orbital period of 69862200 and has a mass of 4.0 kilograms.
Subject: ['(29075) 1950 DA', '(29075) 1950 DA']
Predicate: ['orbitalPeriod', 'mass']
Object: ['69862200.0', '4.0 (kilograms)']

Triple: [['__subject__ (29075) 1950 DA __predicate__ orbitalPeriod __object__ 69862200.0', '__subject__ (29075) 1950 DA __predicate__ periapsis __object__ 124950000000.0']]
Text: (29075) 1950 DA, with an orbital period of 69862200.0 has a periapsis of 124950000000.0.
Subject: ['(29075) 1950 DA', '(29075) 1950 DA']
Predicate: ['orbitalPeriod', 'periapsis']
Object: ['69862200.0', '124950000000.0']

Triple: [['__subject__ (29075) 1950 DA __predicate__ orbitalPeriod __object__ 69862200.0', '__subject__ (29075) 1950 DA __predicate__ periapsis __object__ 124950000000.0']]
Text: (29075) 1950 DA, has an orbital period of 69862200.0, and a periapsis of 124950000000.0.
Subject: ['(29075) 1950 DA', '(29075) 1950 DA']
Predicate: ['orbitalPeriod', 'periapsis']
Object: ['69862200.0', '124950000000.0']

Triple: [['__subject__ (29075) 1950 DA __predicate__ orbitalPeriod __object__ 69862200.0', '__subject__ (29075) 1950 DA __predicate__ periapsis __object__ 124950000000.0']]
Text: The celestial body known as (29075) 1950 DA has an orbital period of 69862200 and a periapsis of 124950000000.0.
Subject: ['(29075) 1950 DA', '(29075) 1950 DA']
Predicate: ['orbitalPeriod', 'periapsis']
Object: ['69862200.0', '124950000000.0']

Triple: [['__subject__ (410777) 2009 FD __predicate__ absoluteMagnitude __object__ 22.1', '__subject__ (410777) 2009 FD __predicate__ discoverer __object__ Spacewatch']]
Text: (410777) 2009 FD was discovered by Spacewatch and has an absolute magnitude of 22.1.
Subject: ['(410777) 2009 FD', '(410777) 2009 FD']
Predicate: ['absoluteMagnitude', 'discoverer']
Object: ['22.1', 'Spacewatch']

Triple: [['__subject__ (410777) 2009 FD __predicate__ absoluteMagnitude __object__ 22.1', '__subject__ (410777) 2009 FD __predicate__ discoverer __object__ Spacewatch']]
Text: 410777 2009 FD was discovered by Spacewatch and has an absolute magnitude of 22.1.
Subject: ['(410777) 2009 FD', '(410777) 2009 FD']
Predicate: ['absoluteMagnitude', 'discoverer']
Object: ['22.1', 'Spacewatch']

Triple: [['__subject__ (410777) 2009 FD __predicate__ density __object__ 1890.0 (kilogramPerCubicMetres)', '__subject__ (410777) 2009 FD __predicate__ apoapsis __object__ 259776702.47055 (kilometres)']]
Text: (410777) 2009 FD has a density of 1890.0 kilograms per cubic metres and an apoapsis of 259776702.47055 km.
Subject: ['(410777) 2009 FD', '(410777) 2009 FD']
Predicate: ['density', 'apoapsis']
Object: ['1890.0 (kilogramPerCubicMetres)', '259776702.47055 (kilometres)']

Triple: [['__subject__ (410777) 2009 FD __predicate__ density __object__ 1890.0 (kilogramPerCubicMetres)', '__subject__ (410777) 2009 FD __predicate__ apoapsis __object__ 259776702.47055 (kilometres)']]
Text: 410777) 2009 FD has an apoapsis of 259776702.47055 kilometres and a density of 1890.0 kilograms per cubic metres.
Subject: ['(410777) 2009 FD', '(410777) 2009 FD']
Predicate: ['density', 'apoapsis']
Object: ['1890.0 (kilogramPerCubicMetres)', '259776702.47055 (kilometres)']

Triple: [['__subject__ (410777) 2009 FD __predicate__ density __object__ 1890.0 (kilogramPerCubicMetres)', '__subject__ (410777) 2009 FD __predicate__ apoapsis __object__ 259776702.47055 (kilometres)']]
Text: (410777) 2009 FD has an apoapsis of 259776702.47055 kilometres and a density of 1890.0 kilogram Per Cubic Metres.
Subject: ['(410777) 2009 FD', '(410777) 2009 FD']
Predicate: ['density', 'apoapsis']
Object: ['1890.0 (kilogramPerCubicMetres)', '259776702.47055 (kilometres)']

Triple: [['__subject__ (410777) 2009 FD __predicate__ epoch __object__ 2015-06-27', '__subject__ (410777) 2009 FD __predicate__ discoverer __object__ Spacewatch']]
Text: 410777 2009 FD was discovered by Spacewatch and its epoch date is 27 June 2015.
Subject: ['(410777) 2009 FD', '(410777) 2009 FD']
Predicate: ['epoch', 'discoverer']
Object: ['2015-06-27', 'Spacewatch']

Triple: [['__subject__ (410777) 2009 FD __predicate__ epoch __object__ 2015-06-27', '__subject__ (410777) 2009 FD __predicate__ discoverer __object__ Spacewatch']]
Text: The epoch date of 410777 2009 FD is 27 June 2015, and it was discovered by Spacewatch.
Subject: ['(410777) 2009 FD', '(410777) 2009 FD']
Predicate: ['epoch', 'discoverer']
Object: ['2015-06-27', 'Spacewatch']

Triple: [['__subject__ (410777) 2009 FD __predicate__ epoch __object__ 2015-06-27', '__subject__ (410777) 2009 FD __predicate__ discoverer __object__ Spacewatch']]
Text: (410777) 2009 FD has an epoch date of 27th June 2015 and was discovered by Spacewatch.
Subject: ['(410777) 2009 FD', '(410777) 2009 FD']
Predicate: ['epoch', 'discoverer']
Object: ['2015-06-27', 'Spacewatch']

Triple: [['__subject__ (410777) 2009 FD __predicate__ maximumTemperature __object__ 362.0 (kelvins)', '__subject__ (410777) 2009 FD __predicate__ apoapsis __object__ 259776702.47055 (kilometres)']]
Text: The apoapsis of (410777) 2009 FD is 259776702.47055 kilometers and it has a maximum temperature of 362 kelvins.
Subject: ['(410777) 2009 FD', '(410777) 2009 FD']
Predicate: ['maximumTemperature', 'apoapsis']
Object: ['362.0 (kelvins)', '259776702.47055 (kilometres)']

Triple: [['__subject__ (410777) 2009 FD __predicate__ maximumTemperature __object__ 362.0 (kelvins)', '__subject__ (410777) 2009 FD __predicate__ apoapsis __object__ 259776702.47055 (kilometres)']]
Text: The celestial body known as (410777) 2009 FD has a maximum temperature of 362 kelvins and its periapsis is 259776702.47055 kilometers.
Subject: ['(410777) 2009 FD', '(410777) 2009 FD']
Predicate: ['maximumTemperature', 'apoapsis']
Object: ['362.0 (kelvins)', '259776702.47055 (kilometres)']

Triple: [['__subject__ (410777) 2009 FD __predicate__ maximumTemperature __object__ 362.0 (kelvins)', '__subject__ (410777) 2009 FD __predicate__ apoapsis __object__ 259776702.47055 (kilometres)']]
Text: (410777) 2009 FD, with a maximum temperature of 362.0 kelvins, has an apoapsis of 259776702.47055 kilometres.
Subject: ['(410777) 2009 FD', '(410777) 2009 FD']
Predicate: ['maximumTemperature', 'apoapsis']
Object: ['362.0 (kelvins)', '259776702.47055 (kilometres)']

Triple: [['__subject__ (410777) 2009 FD __predicate__ meanTemperature __object__ 258.0 (kelvins)', '__subject__ (410777) 2009 FD __predicate__ apoapsis __object__ 259776702.47055 (kilometres)']]
Text: (410777) 2009 FD has an apoapsis of 259776702.47055 kilometres and a mean temperature of 258.0 kelvins.
Subject: ['(410777) 2009 FD', '(410777) 2009 FD']
Predicate: ['meanTemperature', 'apoapsis']
Object: ['258.0 (kelvins)', '259776702.47055 (kilometres)']

Triple: [['__subject__ (410777) 2009 FD __predicate__ meanTemperature __object__ 258.0 (kelvins)', '__subject__ (410777) 2009 FD __predicate__ apoapsis __object__ 259776702.47055 (kilometres)']]
Text: (410777) 2009 FD has a mean temperature of 258 Kelvins and an apoapsis of 259776702.47055 kilometers.
Subject: ['(410777) 2009 FD', '(410777) 2009 FD']
Predicate: ['meanTemperature', 'apoapsis']
Object: ['258.0 (kelvins)', '259776702.47055 (kilometres)']

Triple: [['__subject__ (410777) 2009 FD __predicate__ meanTemperature __object__ 258.0 (kelvins)', '__subject__ (410777) 2009 FD __predicate__ apoapsis __object__ 259776702.47055 (kilometres)']]
Text: The apoapsis of (410777) 2009 FD is 259776702.47055 kilometers and it has a mean temperature of 258.0 kelvins.
Subject: ['(410777) 2009 FD', '(410777) 2009 FD']
Predicate: ['meanTemperature', 'apoapsis']
Object: ['258.0 (kelvins)', '259776702.47055 (kilometres)']

Triple: [['__subject__ (410777) 2009 FD __predicate__ orbitalPeriod __object__ 39447000.0', '__subject__ (410777) 2009 FD __predicate__ discoverer __object__ Spacewatch']]
Text: (410777) 2009 FD was discovered by Spacewatch and has an orbital period of 39447000.0.
Subject: ['(410777) 2009 FD', '(410777) 2009 FD']
Predicate: ['orbitalPeriod', 'discoverer']
Object: ['39447000.0', 'Spacewatch']

Triple: [['__subject__ (410777) 2009 FD __predicate__ orbitalPeriod __object__ 39447000.0', '__subject__ (410777) 2009 FD __predicate__ discoverer __object__ Spacewatch']]
Text: The celestial body known as (410777) 2009 FD has an orbital period of 39447000 and was discovered by Spacewatch.
Subject: ['(410777) 2009 FD', '(410777) 2009 FD']
Predicate: ['orbitalPeriod', 'discoverer']
Object: ['39447000.0', 'Spacewatch']

Triple: [['__subject__ (66063) 1998 RO1 __predicate__ epoch __object__ 2013-11-04', '__subject__ (66063) 1998 RO1 __predicate__ formerName __object__ 1999 SN5']]
Text: 1999 SN5 was once the name of the asteroid (66063) 1998 RO1, which had its epoch on 13th January 2016.
Subject: ['(66063) 1998 RO1', '(66063) 1998 RO1']
Predicate: ['epoch', 'formerName']
Object: ['2013-11-04', '1999 SN5']

Triple: [['__subject__ (66063) 1998 RO1 __predicate__ epoch __object__ 2013-11-04', '__subject__ (66063) 1998 RO1 __predicate__ formerName __object__ 1999 SN5']]
Text: "1999 SN5" was the former name of (66063) 1998 RO1, which has an epoch date of 2013-11-04.
Subject: ['(66063) 1998 RO1', '(66063) 1998 RO1']
Predicate: ['epoch', 'formerName']
Object: ['2013-11-04', '1999 SN5']

Triple: [['__subject__ (66063) 1998 RO1 __predicate__ epoch __object__ 2013-11-04', '__subject__ (66063) 1998 RO1 __predicate__ orbitalPeriod __object__ 360.29 (days)']]
Text: (66063) 1998 RO1 has an epoch date of 2013-11-04 and an orbital period of 360.29 days.
Subject: ['(66063) 1998 RO1', '(66063) 1998 RO1']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2013-11-04', '360.29 (days)']

Triple: [['__subject__ (66063) 1998 RO1 __predicate__ epoch __object__ 2013-11-04', '__subject__ (66063) 1998 RO1 __predicate__ orbitalPeriod __object__ 360.29 (days)']]
Text: (66063) 1998 RO1 has an epoch date of 4 November 2013 and an orbital period of 360.29 days.
Subject: ['(66063) 1998 RO1', '(66063) 1998 RO1']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2013-11-04', '360.29 (days)']

Triple: [['__subject__ (66063) 1998 RO1 __predicate__ epoch __object__ 2013-11-04', '__subject__ (66063) 1998 RO1 __predicate__ periapsis __object__ 41498400000.0']]
Text: (66063) 1998 RO1 has an epoch date of 4 November 2013 and a periapsis of 41498400000.
Subject: ['(66063) 1998 RO1', '(66063) 1998 RO1']
Predicate: ['epoch', 'periapsis']
Object: ['2013-11-04', '41498400000.0']

Triple: [['__subject__ (66063) 1998 RO1 __predicate__ epoch __object__ 2013-11-04', '__subject__ (66063) 1998 RO1 __predicate__ periapsis __object__ 41498400000.0']]
Text: (66063) 1998 RO1, which has a periapsis measuring 41498400000.0, has the epoch date 13th January 2016.
Subject: ['(66063) 1998 RO1', '(66063) 1998 RO1']
Predicate: ['epoch', 'periapsis']
Object: ['2013-11-04', '41498400000.0']

Triple: [['__subject__ (66063) 1998 RO1 __predicate__ maximumTemperature __object__ 500.0 (kelvins)', '__subject__ (66063) 1998 RO1 __predicate__ apoapsis __object__ 254989570.60815 (kilometres)']]
Text: (66063) 1998 RO1, with a maximum temperature of 500.00 kelvins, has an apoapsis of 254989570.60815 kilometres.
Subject: ['(66063) 1998 RO1', '(66063) 1998 RO1']
Predicate: ['maximumTemperature', 'apoapsis']
Object: ['500.0 (kelvins)', '254989570.60815 (kilometres)']

Triple: [['__subject__ (66063) 1998 RO1 __predicate__ maximumTemperature __object__ 500.0 (kelvins)', '__subject__ (66063) 1998 RO1 __predicate__ apoapsis __object__ 254989570.60815 (kilometres)']]
Text: The celestial body known as (66063) 1998 RO1 has a maximum temperature of 500 kelvins and its apoapsis is 254989570.60815 kilometres.
Subject: ['(66063) 1998 RO1', '(66063) 1998 RO1']
Predicate: ['maximumTemperature', 'apoapsis']
Object: ['500.0 (kelvins)', '254989570.60815 (kilometres)']

Triple: [['__subject__ (66063) 1998 RO1 __predicate__ maximumTemperature __object__ 500.0 (kelvins)', '__subject__ (66063) 1998 RO1 __predicate__ apoapsis __object__ 254989570.60815 (kilometres)']]
Text: The celestial body, (66063) 1998 RO1 has a maximum temperature of 500 kelvins and an apoapsis of 254989570.60815 km.
Subject: ['(66063) 1998 RO1', '(66063) 1998 RO1']
Predicate: ['maximumTemperature', 'apoapsis']
Object: ['500.0 (kelvins)', '254989570.60815 (kilometres)']

Triple: [['__subject__ (66063) 1998 RO1 __predicate__ meanTemperature __object__ 265.0 (kelvins)', '__subject__ (66063) 1998 RO1 __predicate__ apoapsis __object__ 254989570.60815 (kilometres)']]
Text: The mean temperature of (66063) 1998 RO1 is 265.0 kelvins and its apoapsis is 254989570.60815 kilometres.
Subject: ['(66063) 1998 RO1', '(66063) 1998 RO1']
Predicate: ['meanTemperature', 'apoapsis']
Object: ['265.0 (kelvins)', '254989570.60815 (kilometres)']

Triple: [['__subject__ (66063) 1998 RO1 __predicate__ meanTemperature __object__ 265.0 (kelvins)', '__subject__ (66063) 1998 RO1 __predicate__ apoapsis __object__ 254989570.60815 (kilometres)']]
Text: (66063) 1998 RO1 has a mean temperature of 265 kelvins and its apoapsis is 254989570.60815 kilometres.
Subject: ['(66063) 1998 RO1', '(66063) 1998 RO1']
Predicate: ['meanTemperature', 'apoapsis']
Object: ['265.0 (kelvins)', '254989570.60815 (kilometres)']

Triple: [['__subject__ (66063) 1998 RO1 __predicate__ meanTemperature __object__ 265.0 (kelvins)', '__subject__ (66063) 1998 RO1 __predicate__ apoapsis __object__ 254989570.60815 (kilometres)']]
Text: (66063) 1998 RO1 has a mean temperature of 265.0 kelvins and an apoapsis of 254989570.60815.
Subject: ['(66063) 1998 RO1', '(66063) 1998 RO1']
Predicate: ['meanTemperature', 'apoapsis']
Object: ['265.0 (kelvins)', '254989570.60815 (kilometres)']

Triple: [['__subject__ (66063) 1998 RO1 __predicate__ minimumTemperature __object__ -71.0 (degreeCelsius)', '__subject__ (66063) 1998 RO1 __predicate__ apoapsis __object__ 254989570.60815 (kilometres)']]
Text: 66063 1998 RO1 has a minimum temperature of -71.0 degrees Celsius and its apoapsis is 254989570.60815 km.
Subject: ['(66063) 1998 RO1', '(66063) 1998 RO1']
Predicate: ['minimumTemperature', 'apoapsis']
Object: ['-71.0 (degreeCelsius)', '254989570.60815 (kilometres)']

Triple: [['__subject__ (66063) 1998 RO1 __predicate__ minimumTemperature __object__ -71.0 (degreeCelsius)', '__subject__ (66063) 1998 RO1 __predicate__ apoapsis __object__ 254989570.60815 (kilometres)']]
Text: (66063) 1998 RO1 has a minimum temperature of -71.0 degrees Celsius and its apoapsis is 254989570.60815 kilometres.
Subject: ['(66063) 1998 RO1', '(66063) 1998 RO1']
Predicate: ['minimumTemperature', 'apoapsis']
Object: ['-71.0 (degreeCelsius)', '254989570.60815 (kilometres)']

Triple: [['__subject__ (66063) 1998 RO1 __predicate__ minimumTemperature __object__ -71.0 (degreeCelsius)', '__subject__ (66063) 1998 RO1 __predicate__ apoapsis __object__ 254989570.60815 (kilometres)']]
Text: (66063) 1998 RO1 has a minimum temperature of -71.0 degrees Celsius and an apoapsis of 254989570.60815 km.
Subject: ['(66063) 1998 RO1', '(66063) 1998 RO1']
Predicate: ['minimumTemperature', 'apoapsis']
Object: ['-71.0 (degreeCelsius)', '254989570.60815 (kilometres)']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)', '__subject__ (66391) 1999 KW4 __predicate__ averageSpeed __object__ 37.16 (kilometrePerSeconds)']]
Text: (66391) 1999 KW4 has an apoapsis measurement of 162164091.8388 (kilometres) and an average speed of 37.16 kilometres per second.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['162164091.8388 (kilometres)', '37.16 (kilometrePerSeconds)']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)', '__subject__ (66391) 1999 KW4 __predicate__ averageSpeed __object__ 37.16 (kilometrePerSeconds)']]
Text: (66391) 1999 KW4 has an apoapsis of 162164091.8388 km and its average speed is 37.16 km per second.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['162164091.8388 (kilometres)', '37.16 (kilometrePerSeconds)']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)', '__subject__ (66391) 1999 KW4 __predicate__ averageSpeed __object__ 37.16 (kilometrePerSeconds)']]
Text: (66391) 1999 KW4 has an apoapsis measurement of 162164091.8388 (kilometres) with an average speed of 37.16 km per second.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['162164091.8388 (kilometres)', '37.16 (kilometrePerSeconds)']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)', '__subject__ (66391) 1999 KW4 __predicate__ density __object__ 2.0 (gramPerCubicCentimetres)']]
Text: (66391) 1999 KW4 has an apoapsis of 162164091.8388 kilometres and a density of 2.0 gram per cubic centimetres.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['apoapsis', 'density']
Object: ['162164091.8388 (kilometres)', '2.0 (gramPerCubicCentimetres)']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)', '__subject__ (66391) 1999 KW4 __predicate__ density __object__ 2.0 (gramPerCubicCentimetres)']]
Text: (66391) 1999 KW4 has an apoapsis measurement of 162164091.8388 (kilometres) and a density of 2.0 grams per cubic centimetre.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['apoapsis', 'density']
Object: ['162164091.8388 (kilometres)', '2.0 (gramPerCubicCentimetres)']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)', '__subject__ (66391) 1999 KW4 __predicate__ density __object__ 2.0 (gramPerCubicCentimetres)']]
Text: (66391) 1999 KW4 has an apoapsis measurement of 162164091.8388 km and a density of 2.0 grams per cubic centimetre.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['apoapsis', 'density']
Object: ['162164091.8388 (kilometres)', '2.0 (gramPerCubicCentimetres)']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ epoch __object__ 2004-07-14', '__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)']]
Text: The celestial body, (66391) 1999 KW4, has an apoapsis of 162164091.8388 km and its epoch date is 14 July 2004.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['epoch', 'apoapsis']
Object: ['2004-07-14', '162164091.8388 (kilometres)']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ epoch __object__ 2004-07-14', '__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)']]
Text: 66391 1999 KW4 epoch was on 2004-07.14. and its apoapsis is 162164091.8388 kilometres.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['epoch', 'apoapsis']
Object: ['2004-07-14', '162164091.8388 (kilometres)']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ epoch __object__ 2004-07-14', '__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)']]
Text: (66391) 1999 KW4 has an epoch date of July 14th 2004 and an apoapsis of 162164091.8388 km.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['epoch', 'apoapsis']
Object: ['2004-07-14', '162164091.8388 (kilometres)']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ epoch __object__ 2004-07-14', '__subject__ (66391) 1999 KW4 __predicate__ periapsis __object__ 29919600000.0']]
Text: (66391) 1999 KW4 has a peripsis of 29919600000.0 and an epoch date of 2004-07.14.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['epoch', 'periapsis']
Object: ['2004-07-14', '29919600000.0']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ epoch __object__ 2004-07-14', '__subject__ (66391) 1999 KW4 __predicate__ periapsis __object__ 29919600000.0']]
Text: (66391) 1999 KW4 has an epoch date of July 14th 2004 and its periapsis is 29919600000.0.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['epoch', 'periapsis']
Object: ['2004-07-14', '29919600000.0']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ epoch __object__ 2004-07-14', '__subject__ (66391) 1999 KW4 __predicate__ periapsis __object__ 29919600000.0']]
Text: (66391) 1999 KW4 has en epoch date of July 14th 2004 and a peripsis of 29919600000.0.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['epoch', 'periapsis']
Object: ['2004-07-14', '29919600000.0']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ escapeVelocity __object__ 0', '__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)']]
Text: (66391) 1999 KW4 has an apoapsis of 162164091.8388 kilometres and an escape velocity of 0.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0', '162164091.8388 (kilometres)']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ escapeVelocity __object__ 0', '__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)']]
Text: (66391) 1999 KW4 has an escape velocity of 0 and an apoapsis measurement of 162164091.8388 km.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0', '162164091.8388 (kilometres)']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ escapeVelocity __object__ 0', '__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)']]
Text: (66391) 1999 KW4 has an escape velocity of 0 and an apoapsis of 162164091.8388 km.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0', '162164091.8388 (kilometres)']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ rotationPeriod __object__ 9953.28', '__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)']]
Text: (66391) 1999 KW4 has a rotation period of 9953.28 and an apoapsis of 162164091.8388 km.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['9953.28', '162164091.8388 (kilometres)']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ rotationPeriod __object__ 9953.28', '__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)']]
Text: (66391) 1999 KW4 has an apoapsis measurement of 162164091.8388 (kilometres) and a rotation period of 9953.28.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['9953.28', '162164091.8388 (kilometres)']

Triple: [['__subject__ (66391) 1999 KW4 __predicate__ rotationPeriod __object__ 9953.28', '__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)']]
Text: (66391) 1999 KW4 has a rotation period of 9953.28 and an apoapsis of 162164091.8388 kilometres.
Subject: ['(66391) 1999 KW4', '(66391) 1999 KW4']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['9953.28', '162164091.8388 (kilometres)']

Triple: [['__subject__ 1000 Piazzia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1000 Piazzia __predicate__ formerName __object__ 1923 NZ1951 OB']]
Text: The epoch of 1000 Piazzia-formerly known as 1923 NZ1951OB -is 2015-06-27.
Subject: ['1000 Piazzia', '1000 Piazzia']
Predicate: ['epoch', 'formerName']
Object: ['2015-06-27', '1923 NZ1951 OB']

Triple: [['__subject__ 1000 Piazzia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1000 Piazzia __predicate__ formerName __object__ 1923 NZ1951 OB']]
Text: 1000 Piazzia was formerly called "1923 NZ1951 OB" and has the epoch date of 27 June 2015.
Subject: ['1000 Piazzia', '1000 Piazzia']
Predicate: ['epoch', 'formerName']
Object: ['2015-06-27', '1923 NZ1951 OB']

Triple: [['__subject__ 1000 Piazzia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1000 Piazzia __predicate__ formerName __object__ 1923 NZ1951 OB']]
Text: 1000 Piazzia, formerly known as 1923NZ1951 OB, has an epoch of 2015-06-27.
Subject: ['1000 Piazzia', '1000 Piazzia']
Predicate: ['epoch', 'formerName']
Object: ['2015-06-27', '1923 NZ1951 OB']

Triple: [['__subject__ 1000 Piazzia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1000 Piazzia __predicate__ mass __object__ 1.1 (kilograms)']]
Text: 1000 Piazzia was discovered on the 27-06-2015 and has a mass of 1.1kgs.
Subject: ['1000 Piazzia', '1000 Piazzia']
Predicate: ['epoch', 'mass']
Object: ['2015-06-27', '1.1 (kilograms)']

Triple: [['__subject__ 1000 Piazzia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1000 Piazzia __predicate__ mass __object__ 1.1 (kilograms)']]
Text: 1000 Piazzia, with a mass of 1.1kg, has an epoch date of June 27th 2015.
Subject: ['1000 Piazzia', '1000 Piazzia']
Predicate: ['epoch', 'mass']
Object: ['2015-06-27', '1.1 (kilograms)']

Triple: [['__subject__ 1000 Piazzia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1000 Piazzia __predicate__ mass __object__ 1.1 (kilograms)']]
Text: The celestial body known as 1000 Piazzia has a mass of 1.1kg and an epoch date of 27 June 2015.
Subject: ['1000 Piazzia', '1000 Piazzia']
Predicate: ['epoch', 'mass']
Object: ['2015-06-27', '1.1 (kilograms)']

Triple: [['__subject__ 1000 Piazzia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1000 Piazzia __predicate__ orbitalPeriod __object__ 488160.0']]
Text: The epoch of the dark asteroid, 1000 Piazzia, is 27th June 2015 and it has an orbital period of 488160.0.
Subject: ['1000 Piazzia', '1000 Piazzia']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2015-06-27', '488160.0']

Triple: [['__subject__ 1000 Piazzia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1000 Piazzia __predicate__ orbitalPeriod __object__ 488160.0']]
Text: The celestial body known as 1000 Piazzia has an orbital period of 488160 and its epoch is 27 June 2015.
Subject: ['1000 Piazzia', '1000 Piazzia']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2015-06-27', '488160.0']

Triple: [['__subject__ 1000 Piazzia __predicate__ formerName __object__ 1967 ED', '__subject__ 1000 Piazzia __predicate__ epoch __object__ 2015-06-27']]
Text: 1967 ED was the former name of 1000 Piazzia which has the epoch of 2015-06-27.
Subject: ['1000 Piazzia', '1000 Piazzia']
Predicate: ['formerName', 'epoch']
Object: ['1967 ED', '2015-06-27']

Triple: [['__subject__ 1000 Piazzia __predicate__ formerName __object__ 1967 ED', '__subject__ 1000 Piazzia __predicate__ epoch __object__ 2015-06-27']]
Text: 1000 Piazzia, which was formerly known as '1967 ED', has an epoch of 2015-06-27.
Subject: ['1000 Piazzia', '1000 Piazzia']
Predicate: ['formerName', 'epoch']
Object: ['1967 ED', '2015-06-27']

Triple: [['__subject__ 1000 Piazzia __predicate__ formerName __object__ 1967 ED', '__subject__ 1000 Piazzia __predicate__ epoch __object__ 2015-06-27']]
Text: The epoch of 1000 Piazzia, a celestial body formally known as 1967 ED, is 27 June 2015.
Subject: ['1000 Piazzia', '1000 Piazzia']
Predicate: ['formerName', 'epoch']
Object: ['1967 ED', '2015-06-27']

Triple: [['__subject__ 1000 Piazzia __predicate__ periapsis __object__ 352497000000.0', '__subject__ 1000 Piazzia __predicate__ epoch __object__ 2015-06-27']]
Text: The epoch of 1000 Piazzia, which has a periapsis of 352497000000.0, is 2015-06-27.
Subject: ['1000 Piazzia', '1000 Piazzia']
Predicate: ['periapsis', 'epoch']
Object: ['352497000000.0', '2015-06-27']

Triple: [['__subject__ 1000 Piazzia __predicate__ periapsis __object__ 352497000000.0', '__subject__ 1000 Piazzia __predicate__ epoch __object__ 2015-06-27']]
Text: The dark asteroid 1000 Piazzia has a periapsis is 352497000000.0 and an epoch date of 27 June 2015.
Subject: ['1000 Piazzia', '1000 Piazzia']
Predicate: ['periapsis', 'epoch']
Object: ['352497000000.0', '2015-06-27']

Triple: [['__subject__ 1000 Piazzia __predicate__ periapsis __object__ 352497000000.0', '__subject__ 1000 Piazzia __predicate__ epoch __object__ 2015-06-27']]
Text: 1000 Piazzia has a periapsis is 352497000000.0 and its epoch is 2015-06-27.
Subject: ['1000 Piazzia', '1000 Piazzia']
Predicate: ['periapsis', 'epoch']
Object: ['352497000000.0', '2015-06-27']

Triple: [['__subject__ 1001 Gaussia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1001 Gaussia __predicate__ formerName __object__ 1923 OAA907 XC']]
Text: The epoch date of 1001 Gaussia, formerly known as 1923 OAA907 XC, is 27 June 2015.
Subject: ['1001 Gaussia', '1001 Gaussia']
Predicate: ['epoch', 'formerName']
Object: ['2015-06-27', '1923 OAA907 XC']

Triple: [['__subject__ 1001 Gaussia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1001 Gaussia __predicate__ formerName __object__ 1923 OAA907 XC']]
Text: 1923 OAA907 XC, which us now know as 1001 Gaussia, has an epoch date of June 27th 2015.
Subject: ['1001 Gaussia', '1001 Gaussia']
Predicate: ['epoch', 'formerName']
Object: ['2015-06-27', '1923 OAA907 XC']

Triple: [['__subject__ 1001 Gaussia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1001 Gaussia __predicate__ formerName __object__ A911 MD']]
Text: A911 MD is the former name of 1001 Gaussia which has an epoch date of 31 July 2016.
Subject: ['1001 Gaussia', '1001 Gaussia']
Predicate: ['epoch', 'formerName']
Object: ['2015-06-27', 'A911 MD']

Triple: [['__subject__ 1001 Gaussia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1001 Gaussia __predicate__ formerName __object__ A911 MD']]
Text: The celestial body known as 1001 Gaussia was formerly called A911 MD, its epoch date is 2015-06-27.
Subject: ['1001 Gaussia', '1001 Gaussia']
Predicate: ['epoch', 'formerName']
Object: ['2015-06-27', 'A911 MD']

Triple: [['__subject__ 1001 Gaussia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1001 Gaussia __predicate__ formerName __object__ A911 MD']]
Text: The epoch of 1001 Gaussia, previously known as A911 MD, is 2015-06-27.
Subject: ['1001 Gaussia', '1001 Gaussia']
Predicate: ['epoch', 'formerName']
Object: ['2015-06-27', 'A911 MD']

Triple: [['__subject__ 1001 Gaussia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1001 Gaussia __predicate__ orbitalPeriod __object__ 5.75 (days)']]
Text: The epoch of 1001 Gaussia is on 31st July 2016 and its orbital period is 5.75 days.
Subject: ['1001 Gaussia', '1001 Gaussia']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2015-06-27', '5.75 (days)']

Triple: [['__subject__ 1001 Gaussia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1001 Gaussia __predicate__ orbitalPeriod __object__ 5.75 (days)']]
Text: 1001 Gaussia, has an orbital period of 5.75 days, and its epoch is on 31 July 2016.
Subject: ['1001 Gaussia', '1001 Gaussia']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2015-06-27', '5.75 (days)']

Triple: [['__subject__ 1001 Gaussia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1001 Gaussia __predicate__ orbitalPeriod __object__ 5.75 (days)']]
Text: The orbital Period of 1001 Gaussia is 5.75 days and the epoch date is 27 June 2015.
Subject: ['1001 Gaussia', '1001 Gaussia']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2015-06-27', '5.75 (days)']

Triple: [['__subject__ 1001 Gaussia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1001 Gaussia __predicate__ periapsis __object__ 419113394.55312 (kilometres)']]
Text: 1001 Gaussia has a periapsis of 419113394.55312 kilometres, and its epoch date is 2015-06-27.
Subject: ['1001 Gaussia', '1001 Gaussia']
Predicate: ['epoch', 'periapsis']
Object: ['2015-06-27', '419113394.55312 (kilometres)']

Triple: [['__subject__ 1001 Gaussia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1001 Gaussia __predicate__ periapsis __object__ 419113394.55312 (kilometres)']]
Text: 1001 Gaussia, has a periapsis of 419113394.55312 kilometres, and its epoch is on 31 July 2016.
Subject: ['1001 Gaussia', '1001 Gaussia']
Predicate: ['epoch', 'periapsis']
Object: ['2015-06-27', '419113394.55312 (kilometres)']

Triple: [['__subject__ 1001 Gaussia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1001 Gaussia __predicate__ rotationPeriod __object__ 33012.0']]
Text: 1001 Gaussia has a rotation period of 33012.0 and an epoch date of 31 July 2016.
Subject: ['1001 Gaussia', '1001 Gaussia']
Predicate: ['epoch', 'rotationPeriod']
Object: ['2015-06-27', '33012.0']

Triple: [['__subject__ 1001 Gaussia __predicate__ epoch __object__ 2015-06-27', '__subject__ 1001 Gaussia __predicate__ rotationPeriod __object__ 33012.0']]
Text: 1001 Gaussia's epoch date is 27 June 2015 and has a rotation period of 33012.0.
Subject: ['1001 Gaussia', '1001 Gaussia']
Predicate: ['epoch', 'rotationPeriod']
Object: ['2015-06-27', '33012.0']

Triple: [['__subject__ 1001 Gaussia __predicate__ meanTemperature __object__ 154.0 (kelvins)', '__subject__ 1001 Gaussia __predicate__ maximumTemperature __object__ 165.0 (kelvins)']]
Text: The celestial body known as 1001 Gaussia has a mean temperature of 154 kelvins and a maximum temperature of 165 kelvins.
Subject: ['1001 Gaussia', '1001 Gaussia']
Predicate: ['meanTemperature', 'maximumTemperature']
Object: ['154.0 (kelvins)', '165.0 (kelvins)']

Triple: [['__subject__ 1001 Gaussia __predicate__ meanTemperature __object__ 154.0 (kelvins)', '__subject__ 1001 Gaussia __predicate__ maximumTemperature __object__ 165.0 (kelvins)']]
Text: 1001 Gaussia has a mean temperature of 154.0 kelvins, its maximum temperature is 165 Kelvins.
Subject: ['1001 Gaussia', '1001 Gaussia']
Predicate: ['meanTemperature', 'maximumTemperature']
Object: ['154.0 (kelvins)', '165.0 (kelvins)']

Triple: [['__subject__ 101 Helena __predicate__ apoapsis __object__ 441092000.0 (kilometres)', '__subject__ 101 Helena __predicate__ temperature __object__ 173.0 (kelvins)']]
Text: 101 Helena, has an apoapsis of 441092000.0 kilometres, and an average temperature is 173.0 kelvins.
Subject: ['101 Helena', '101 Helena']
Predicate: ['apoapsis', 'temperature']
Object: ['441092000.0 (kilometres)', '173.0 (kelvins)']

Triple: [['__subject__ 101 Helena __predicate__ apoapsis __object__ 441092000.0 (kilometres)', '__subject__ 101 Helena __predicate__ temperature __object__ 173.0 (kelvins)']]
Text: The apoapsis of 101 Helena is 441092000.0 km and it has an average temperature of 173.0 kelvins.
Subject: ['101 Helena', '101 Helena']
Predicate: ['apoapsis', 'temperature']
Object: ['441092000.0 (kilometres)', '173.0 (kelvins)']

Triple: [['__subject__ 101 Helena __predicate__ apoapsis __object__ 441092000.0 (kilometres)', '__subject__ 101 Helena __predicate__ temperature __object__ 173.0 (kelvins)']]
Text: 101 Helena has a temperature of 173.0 kelvins and an apoapsis of 441092000.0 kilometres.
Subject: ['101 Helena', '101 Helena']
Predicate: ['apoapsis', 'temperature']
Object: ['441092000.0 (kilometres)', '173.0 (kelvins)']

Triple: [['__subject__ 101 Helena __predicate__ density __object__ 2.0 (gramPerCubicCentimetres)', '__subject__ 101 Helena __predicate__ apoapsis __object__ 441092000.0 (kilometres)']]
Text: 101 Helena has a density of 2.0 grams per cubic centimetres and an apoapsis of 441092000.0 kilometres.
Subject: ['101 Helena', '101 Helena']
Predicate: ['density', 'apoapsis']
Object: ['2.0 (gramPerCubicCentimetres)', '441092000.0 (kilometres)']

Triple: [['__subject__ 101 Helena __predicate__ density __object__ 2.0 (gramPerCubicCentimetres)', '__subject__ 101 Helena __predicate__ apoapsis __object__ 441092000.0 (kilometres)']]
Text: The density of 101 Helena is 2.0 gram per cubic cm and an apoapsis of 441092000.0 (kilometres).
Subject: ['101 Helena', '101 Helena']
Predicate: ['density', 'apoapsis']
Object: ['2.0 (gramPerCubicCentimetres)', '441092000.0 (kilometres)']

Triple: [['__subject__ 101 Helena __predicate__ density __object__ 2.0 (gramPerCubicCentimetres)', '__subject__ 101 Helena __predicate__ apoapsis __object__ 441092000.0 (kilometres)']]
Text: 101 Helena has a density of 2.0 gram per Cubic centimeters, and an apoapsis of 441092000.0 (kilometres).
Subject: ['101 Helena', '101 Helena']
Predicate: ['density', 'apoapsis']
Object: ['2.0 (gramPerCubicCentimetres)', '441092000.0 (kilometres)']

Triple: [['__subject__ 101 Helena __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ almaMater __object__ University of Michigan']]
Text: James Craig Watson's Alma mater is the University of Michigan and he discovered 101 Helena.
Subject: ['101 Helena', 'James Craig Watson']
Predicate: ['discoverer', 'almaMater']
Object: ['James Craig Watson', 'University of Michigan']

Triple: [['__subject__ 101 Helena __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ almaMater __object__ University of Michigan']]
Text: James Craig Watson, who discovered 101 Helena, studied at the University of Michigan.
Subject: ['101 Helena', 'James Craig Watson']
Predicate: ['discoverer', 'almaMater']
Object: ['James Craig Watson', 'University of Michigan']

Triple: [['__subject__ 101 Helena __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ almaMater __object__ University of Michigan']]
Text: James Craig Watson studied at the University of Michigan and was the discoverer of 101 Helena.
Subject: ['101 Helena', 'James Craig Watson']
Predicate: ['discoverer', 'almaMater']
Object: ['James Craig Watson', 'University of Michigan']

Triple: [['__subject__ 101 Helena __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ deathPlace __object__ Madison, Wisconsin']]
Text: James Craig Watson, who discovered 101 Helena, died in Madison, Wisconsin.
Subject: ['101 Helena', 'James Craig Watson']
Predicate: ['discoverer', 'deathPlace']
Object: ['James Craig Watson', 'Madison, Wisconsin']

Triple: [['__subject__ 101 Helena __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ deathPlace __object__ Madison, Wisconsin']]
Text: James Craig Watson who discovered the 101 Helena died in Madison, Wisconsin.
Subject: ['101 Helena', 'James Craig Watson']
Predicate: ['discoverer', 'deathPlace']
Object: ['James Craig Watson', 'Madison, Wisconsin']

Triple: [['__subject__ 101 Helena __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ deathPlace __object__ Madison, Wisconsin']]
Text: James Craig Watson, who died in Madison, Wisconsin, was the discoverer of 101 Helena.
Subject: ['101 Helena', 'James Craig Watson']
Predicate: ['discoverer', 'deathPlace']
Object: ['James Craig Watson', 'Madison, Wisconsin']

Triple: [['__subject__ 101 Helena __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ nationality __object__ Canada']]
Text: James Craig Watson is the Canadian national who discovered 101 Helena.
Subject: ['101 Helena', 'James Craig Watson']
Predicate: ['discoverer', 'nationality']
Object: ['James Craig Watson', 'Canada']

Triple: [['__subject__ 101 Helena __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ nationality __object__ Canada']]
Text: The discoverer of 101 Helena is the Canadian James Craig Watson.
Subject: ['101 Helena', 'James Craig Watson']
Predicate: ['discoverer', 'nationality']
Object: ['James Craig Watson', 'Canada']

Triple: [['__subject__ 101 Helena __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ nationality __object__ Canada']]
Text: 101 Helena was discovered by the Canadian James Craig Watson.
Subject: ['101 Helena', 'James Craig Watson']
Predicate: ['discoverer', 'nationality']
Object: ['James Craig Watson', 'Canada']

Triple: [['__subject__ 101 Helena __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ stateOfOrigin __object__ Canada']]
Text: 101 Helena was discovered by, the Canadian, James Craig Watson.
Subject: ['101 Helena', 'James Craig Watson']
Predicate: ['discoverer', 'stateOfOrigin']
Object: ['James Craig Watson', 'Canada']

Triple: [['__subject__ 101 Helena __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ stateOfOrigin __object__ Canada']]
Text: 101 Helena was discovered by James Craig Watson, who comes from Canada.
Subject: ['101 Helena', 'James Craig Watson']
Predicate: ['discoverer', 'stateOfOrigin']
Object: ['James Craig Watson', 'Canada']

Triple: [['__subject__ 101 Helena __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ stateOfOrigin __object__ Canada']]
Text: 101 Helena was discovered by James Craig Watson from Canada.
Subject: ['101 Helena', 'James Craig Watson']
Predicate: ['discoverer', 'stateOfOrigin']
Object: ['James Craig Watson', 'Canada']

Triple: [['__subject__ 101 Helena __predicate__ escapeVelocity __object__ 0.0348 (kilometrePerSeconds)', '__subject__ 101 Helena __predicate__ apoapsis __object__ 441092000.0 (kilometres)']]
Text: 101 Helena has an escape velocity of 0.0348 km per second and an apoapsis of 441092000.0 km.
Subject: ['101 Helena', '101 Helena']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0348 (kilometrePerSeconds)', '441092000.0 (kilometres)']

Triple: [['__subject__ 101 Helena __predicate__ escapeVelocity __object__ 0.0348 (kilometrePerSeconds)', '__subject__ 101 Helena __predicate__ apoapsis __object__ 441092000.0 (kilometres)']]
Text: 101 Helena has an escape velocity of 0.0348 km/s and an apoapsis of 441092000.0 km.
Subject: ['101 Helena', '101 Helena']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0348 (kilometrePerSeconds)', '441092000.0 (kilometres)']

Triple: [['__subject__ 101 Helena __predicate__ escapeVelocity __object__ 0.0348 (kilometrePerSeconds)', '__subject__ 101 Helena __predicate__ apoapsis __object__ 441092000.0 (kilometres)']]
Text: 101 Helena has an apoapsis of 441092000.0 km and an escape velocity of 0.0348 km per sec.
Subject: ['101 Helena', '101 Helena']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0348 (kilometrePerSeconds)', '441092000.0 (kilometres)']

Triple: [['__subject__ 101 Helena __predicate__ mass __object__ 3.0 (kilograms)', '__subject__ 101 Helena __predicate__ apoapsis __object__ 441092000.0 (kilometres)']]
Text: 101 Helena has a mass of 3.0 kg and an apoapsis of 441092000.0 km.
Subject: ['101 Helena', '101 Helena']
Predicate: ['mass', 'apoapsis']
Object: ['3.0 (kilograms)', '441092000.0 (kilometres)']

Triple: [['__subject__ 101 Helena __predicate__ mass __object__ 3.0 (kilograms)', '__subject__ 101 Helena __predicate__ apoapsis __object__ 441092000.0 (kilometres)']]
Text: 101 Helena, with a mass of 3.0 kgs, has an apoapsis of 441092000.0 (kilometres).
Subject: ['101 Helena', '101 Helena']
Predicate: ['mass', 'apoapsis']
Object: ['3.0 (kilograms)', '441092000.0 (kilometres)']

Triple: [['__subject__ 101 Helena __predicate__ orbitalPeriod __object__ 1516.6700000000003 (days)', '__subject__ 101 Helena __predicate__ epoch __object__ 2006-12-31']]
Text: The orbital period for 101 Helena is 1516.6700000000003 (days) and it has the epoch date of 31 December 2006.
Subject: ['101 Helena', '101 Helena']
Predicate: ['orbitalPeriod', 'epoch']
Object: ['1516.6700000000003 (days)', '2006-12-31']

Triple: [['__subject__ 101 Helena __predicate__ orbitalPeriod __object__ 1516.6700000000003 (days)', '__subject__ 101 Helena __predicate__ epoch __object__ 2006-12-31']]
Text: 101 Helena has an orbital period of 1516.6700000000003 days and an epoch of December 31st 2006.
Subject: ['101 Helena', '101 Helena']
Predicate: ['orbitalPeriod', 'epoch']
Object: ['1516.6700000000003 (days)', '2006-12-31']

Triple: [['__subject__ 101 Helena __predicate__ orbitalPeriod __object__ 1516.6700000000003 (days)', '__subject__ 101 Helena __predicate__ epoch __object__ 2006-12-31']]
Text: 101 Helena, with the epoch date 31 December 2006, has an orbital period of 1516.6700000000003 (days).
Subject: ['101 Helena', '101 Helena']
Predicate: ['orbitalPeriod', 'epoch']
Object: ['1516.6700000000003 (days)', '2006-12-31']

Triple: [['__subject__ 101 Helena __predicate__ periapsis __object__ 331683000.0 (kilometres)', '__subject__ 101 Helena __predicate__ epoch __object__ 2006-12-31']]
Text: The periapsis of 101 Helena, which has the epoch date of 31 December 2006, is 331683000.0 km.
Subject: ['101 Helena', '101 Helena']
Predicate: ['periapsis', 'epoch']
Object: ['331683000.0 (kilometres)', '2006-12-31']

Triple: [['__subject__ 101 Helena __predicate__ periapsis __object__ 331683000.0 (kilometres)', '__subject__ 101 Helena __predicate__ epoch __object__ 2006-12-31']]
Text: 101 Helena has an epoch of 2006-12-31 and a periapsis of 331683000.0 km.
Subject: ['101 Helena', '101 Helena']
Predicate: ['periapsis', 'epoch']
Object: ['331683000.0 (kilometres)', '2006-12-31']

Triple: [['__subject__ 101 Helena __predicate__ periapsis __object__ 331683000.0 (kilometres)', '__subject__ 101 Helena __predicate__ epoch __object__ 2006-12-31']]
Text: 101 Helena has a periapsis of 331683000.0 Kilometers, and its epoch is on 2006-12-31.
Subject: ['101 Helena', '101 Helena']
Predicate: ['periapsis', 'epoch']
Object: ['331683000.0 (kilometres)', '2006-12-31']

Triple: [['__subject__ 1036 Ganymed __predicate__ apoapsis __object__ 611961000.0 (kilometres)', '__subject__ 1036 Ganymed __predicate__ temperature __object__ 160.0 (kelvins)']]
Text: 1036 Ganymed, which has a temperature of 160.0 kelvins, has an apoapsis of 611961000.0 (kilometres).
Subject: ['1036 Ganymed', '1036 Ganymed']
Predicate: ['apoapsis', 'temperature']
Object: ['611961000.0 (kilometres)', '160.0 (kelvins)']

Triple: [['__subject__ 1036 Ganymed __predicate__ apoapsis __object__ 611961000.0 (kilometres)', '__subject__ 1036 Ganymed __predicate__ temperature __object__ 160.0 (kelvins)']]
Text: 1036 Ganymed has an apoapsis of 611961000.0 km and a temperature of 160 kelvins.
Subject: ['1036 Ganymed', '1036 Ganymed']
Predicate: ['apoapsis', 'temperature']
Object: ['611961000.0 (kilometres)', '160.0 (kelvins)']

Triple: [['__subject__ 1036 Ganymed __predicate__ apoapsis __object__ 611961000.0 (kilometres)', '__subject__ 1036 Ganymed __predicate__ temperature __object__ 160.0 (kelvins)']]
Text: 1036 Ganymed, has a temperature of, 160 kelvins, and its apoapsis measurement is 611961000.0 kilometres.
Subject: ['1036 Ganymed', '1036 Ganymed']
Predicate: ['apoapsis', 'temperature']
Object: ['611961000.0 (kilometres)', '160.0 (kelvins)']

Triple: [['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade', '__subject__ Walter Baade __predicate__ almaMater __object__ University of Göttingen']]
Text: Walter Baade, who graduated from the University of Gottingen, discovered 1036 Ganymed.
Subject: ['1036 Ganymed', 'Walter Baade']
Predicate: ['discoverer', 'almaMater']
Object: ['Walter Baade', 'University of Göttingen']

Triple: [['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade', '__subject__ Walter Baade __predicate__ almaMater __object__ University of Göttingen']]
Text: Walter Baade, who discovered 1036 Ganymed, graduated from the University of Gottingen.
Subject: ['1036 Ganymed', 'Walter Baade']
Predicate: ['discoverer', 'almaMater']
Object: ['Walter Baade', 'University of Göttingen']

Triple: [['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade', '__subject__ Walter Baade __predicate__ almaMater __object__ University of Göttingen']]
Text: 1036 Ganymed was discovered by Walter Baade who studied at the University of Gottingen.
Subject: ['1036 Ganymed', 'Walter Baade']
Predicate: ['discoverer', 'almaMater']
Object: ['Walter Baade', 'University of Göttingen']

Triple: [['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade', '__subject__ Walter Baade __predicate__ birthPlace __object__ Preußisch Oldendorf']]
Text: Walter Baade was born in Preussisch Oldendorf and he discovered the 1036 Ganymed.
Subject: ['1036 Ganymed', 'Walter Baade']
Predicate: ['discoverer', 'birthPlace']
Object: ['Walter Baade', 'Preußisch Oldendorf']

Triple: [['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade', '__subject__ Walter Baade __predicate__ birthPlace __object__ Preußisch Oldendorf']]
Text: 1036 Ganymed was discovered by Walter Baade, who was born in Preußisch Oldendorf.
Subject: ['1036 Ganymed', 'Walter Baade']
Predicate: ['discoverer', 'birthPlace']
Object: ['Walter Baade', 'Preußisch Oldendorf']

Triple: [['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade', '__subject__ Walter Baade __predicate__ birthPlace __object__ Preußisch Oldendorf']]
Text: 1036 Ganymed was discovered by Walter Baade, born in Preußisch Oldendorf.
Subject: ['1036 Ganymed', 'Walter Baade']
Predicate: ['discoverer', 'birthPlace']
Object: ['Walter Baade', 'Preußisch Oldendorf']

Triple: [['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade', '__subject__ Walter Baade __predicate__ deathPlace __object__ Göttingen']]
Text: Walter Baade, who discovered 1036 Ganymed, died in Göttingen.
Subject: ['1036 Ganymed', 'Walter Baade']
Predicate: ['discoverer', 'deathPlace']
Object: ['Walter Baade', 'Göttingen']

Triple: [['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade', '__subject__ Walter Baade __predicate__ deathPlace __object__ Göttingen']]
Text: Walter Baade, who discovered, 1036 Ganymed, died in Gottingen.
Subject: ['1036 Ganymed', 'Walter Baade']
Predicate: ['discoverer', 'deathPlace']
Object: ['Walter Baade', 'Göttingen']

Triple: [['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade', '__subject__ Walter Baade __predicate__ deathPlace __object__ Göttingen']]
Text: Walter Baade, who died in Gottingen, discovered 1036 Ganymed.
Subject: ['1036 Ganymed', 'Walter Baade']
Predicate: ['discoverer', 'deathPlace']
Object: ['Walter Baade', 'Göttingen']

Triple: [['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade', '__subject__ Walter Baade __predicate__ deathPlace __object__ West Germany']]
Text: Walter Baade, who died in West Germany, discovered 1036 Ganymed.
Subject: ['1036 Ganymed', 'Walter Baade']
Predicate: ['discoverer', 'deathPlace']
Object: ['Walter Baade', 'West Germany']

Triple: [['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade', '__subject__ Walter Baade __predicate__ deathPlace __object__ West Germany']]
Text: 1036 Ganymed was discovered by Walter Baade, who died in West Germany.
Subject: ['1036 Ganymed', 'Walter Baade']
Predicate: ['discoverer', 'deathPlace']
Object: ['Walter Baade', 'West Germany']

Triple: [['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade', '__subject__ Walter Baade __predicate__ deathPlace __object__ West Germany']]
Text: Walter Baade discovered 1036 Ganymed and he died in West Germany.
Subject: ['1036 Ganymed', 'Walter Baade']
Predicate: ['discoverer', 'deathPlace']
Object: ['Walter Baade', 'West Germany']

Triple: [['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade', '__subject__ Walter Baade __predicate__ doctoralStudent __object__ Allan Sandage']]
Text: Walter Baade, who discovered 1036 Ganymed, had a doctoral student named Allan Sandage.
Subject: ['1036 Ganymed', 'Walter Baade']
Predicate: ['discoverer', 'doctoralStudent']
Object: ['Walter Baade', 'Allan Sandage']

Triple: [['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade', '__subject__ Walter Baade __predicate__ doctoralStudent __object__ Allan Sandage']]
Text: Allan Sandage was a doctoral student of Walter Baade, who discovered 1036 Ganymed.
Subject: ['1036 Ganymed', 'Walter Baade']
Predicate: ['discoverer', 'doctoralStudent']
Object: ['Walter Baade', 'Allan Sandage']

Triple: [['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade', '__subject__ Walter Baade __predicate__ doctoralStudent __object__ Halton Arp']]
Text: Halton Arp was the doctoral student of Walter Baade who discovered 1036 Ganymed.
Subject: ['1036 Ganymed', 'Walter Baade']
Predicate: ['discoverer', 'doctoralStudent']
Object: ['Walter Baade', 'Halton Arp']

Triple: [['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade', '__subject__ Walter Baade __predicate__ doctoralStudent __object__ Halton Arp']]
Text: 1036 Ganymed was discovered by Walter Baade, whose doctoral student was Halton Arp.
Subject: ['1036 Ganymed', 'Walter Baade']
Predicate: ['discoverer', 'doctoralStudent']
Object: ['Walter Baade', 'Halton Arp']

Triple: [['__subject__ 1036 Ganymed __predicate__ rotationPeriod __object__ 37116.0', '__subject__ 1036 Ganymed __predicate__ apoapsis __object__ 611961000.0 (kilometres)']]
Text: 1036 Ganymed has a rotational period of 37116.0 and an apoapsis measurement of 611961000.0 km.
Subject: ['1036 Ganymed', '1036 Ganymed']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['37116.0', '611961000.0 (kilometres)']

Triple: [['__subject__ 1036 Ganymed __predicate__ rotationPeriod __object__ 37116.0', '__subject__ 1036 Ganymed __predicate__ apoapsis __object__ 611961000.0 (kilometres)']]
Text: 1036 Ganymed has a rotational period of 37116.0, and an apoapsis of 611961000.0 kilometres.
Subject: ['1036 Ganymed', '1036 Ganymed']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['37116.0', '611961000.0 (kilometres)']

Triple: [['__subject__ 1036 Ganymed __predicate__ rotationPeriod __object__ 37116.0', '__subject__ 1036 Ganymed __predicate__ apoapsis __object__ 611961000.0 (kilometres)']]
Text: 1036 Ganymed which has a rotation period of 37116 also has an apoapsis measurement of 611961000 kilometres.
Subject: ['1036 Ganymed', '1036 Ganymed']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['37116.0', '611961000.0 (kilometres)']

Triple: [['__subject__ 103 Hera __predicate__ apoapsis __object__ 437170000.0 (kilometres)', '__subject__ 103 Hera __predicate__ averageSpeed __object__ 18.09 (kilometrePerSeconds)']]
Text: The average speed of 103 Hera is 18.09 km per sec and it has an apoapsis of 437170000.0 (kilometres).
Subject: ['103 Hera', '103 Hera']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['437170000.0 (kilometres)', '18.09 (kilometrePerSeconds)']

Triple: [['__subject__ 103 Hera __predicate__ apoapsis __object__ 437170000.0 (kilometres)', '__subject__ 103 Hera __predicate__ averageSpeed __object__ 18.09 (kilometrePerSeconds)']]
Text: 103 Hera has an apoapsis of 437170000.0 kilometres and an average speed of 18.09 km/s.
Subject: ['103 Hera', '103 Hera']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['437170000.0 (kilometres)', '18.09 (kilometrePerSeconds)']

Triple: [['__subject__ 103 Hera __predicate__ apoapsis __object__ 437170000.0 (kilometres)', '__subject__ 103 Hera __predicate__ averageSpeed __object__ 18.09 (kilometrePerSeconds)']]
Text: 103 Hera has an apoapsis of 437170000.0 km and an average speed of 18.09 km per sec.
Subject: ['103 Hera', '103 Hera']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['437170000.0 (kilometres)', '18.09 (kilometrePerSeconds)']

Triple: [['__subject__ 103 Hera __predicate__ apoapsis __object__ 437170000.0 (kilometres)', '__subject__ 103 Hera __predicate__ temperature __object__ 170.0 (kelvins)']]
Text: 103 Hera has an apoapsis of 437170000.0 km and a temperature of 170.0 kelvins.
Subject: ['103 Hera', '103 Hera']
Predicate: ['apoapsis', 'temperature']
Object: ['437170000.0 (kilometres)', '170.0 (kelvins)']

Triple: [['__subject__ 103 Hera __predicate__ apoapsis __object__ 437170000.0 (kilometres)', '__subject__ 103 Hera __predicate__ temperature __object__ 170.0 (kelvins)']]
Text: 103 Hera, with a temperature of 170 kelvins, has an apoapsis of 437170000.0 (kilometres).
Subject: ['103 Hera', '103 Hera']
Predicate: ['apoapsis', 'temperature']
Object: ['437170000.0 (kilometres)', '170.0 (kelvins)']

Triple: [['__subject__ 103 Hera __predicate__ apoapsis __object__ 437170000.0 (kilometres)', '__subject__ 103 Hera __predicate__ temperature __object__ 170.0 (kelvins)']]
Text: 103 Hera has a temperature of 170.0 kelvins and its apoapsis is 437170000.0 kilometres.
Subject: ['103 Hera', '103 Hera']
Predicate: ['apoapsis', 'temperature']
Object: ['437170000.0 (kilometres)', '170.0 (kelvins)']

Triple: [['__subject__ 103 Hera __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ almaMater __object__ University of Michigan']]
Text: James Craig Watson's Alma mater is the University of Michigan and he discovered the 103 Hera.
Subject: ['103 Hera', 'James Craig Watson']
Predicate: ['discoverer', 'almaMater']
Object: ['James Craig Watson', 'University of Michigan']

Triple: [['__subject__ 103 Hera __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ almaMater __object__ University of Michigan']]
Text: James Craig Watson, whose alma mater was the University of Michigan, discovered 103 Hera.
Subject: ['103 Hera', 'James Craig Watson']
Predicate: ['discoverer', 'almaMater']
Object: ['James Craig Watson', 'University of Michigan']

Triple: [['__subject__ 103 Hera __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ almaMater __object__ University of Michigan']]
Text: James Craig Watson, who discovered 103 Hera, studied at the University of Michigan.
Subject: ['103 Hera', 'James Craig Watson']
Predicate: ['discoverer', 'almaMater']
Object: ['James Craig Watson', 'University of Michigan']

Triple: [['__subject__ 103 Hera __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ deathPlace __object__ Madison, Wisconsin']]
Text: James Craig Watson, who discovered 103 Hera, died in Madison, Wisconsin.
Subject: ['103 Hera', 'James Craig Watson']
Predicate: ['discoverer', 'deathPlace']
Object: ['James Craig Watson', 'Madison, Wisconsin']

Triple: [['__subject__ 103 Hera __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ deathPlace __object__ Madison, Wisconsin']]
Text: James Craig Watson died in Madison, Wisconsin and discovered 103 Hera.
Subject: ['103 Hera', 'James Craig Watson']
Predicate: ['discoverer', 'deathPlace']
Object: ['James Craig Watson', 'Madison, Wisconsin']

Triple: [['__subject__ 103 Hera __predicate__ discoverer __object__ James Craig Watson', '__subject__ James Craig Watson __predicate__ deathPlace __object__ Madison, Wisconsin']]
Text: James Craig Watson, who died in Madison, Wisconsin, discovered 103 Hera.
Subject: ['103 Hera', 'James Craig Watson']
Predicate: ['discoverer', 'deathPlace']
Object: ['James Craig Watson', 'Madison, Wisconsin']

Triple: [['__subject__ 103 Hera __predicate__ epoch __object__ 2011-08-27', '__subject__ 103 Hera __predicate__ orbitalPeriod __object__ 1622.213 (days)']]
Text: The epoch of 103 Hera is 31st July 2016 and its orbital period is 1622.213 days.
Subject: ['103 Hera', '103 Hera']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2011-08-27', '1622.213 (days)']

Triple: [['__subject__ 103 Hera __predicate__ epoch __object__ 2011-08-27', '__subject__ 103 Hera __predicate__ orbitalPeriod __object__ 1622.213 (days)']]
Text: 103 Hera has an orbital period of 1622.213 days and an epoch date of August 27th 2011.
Subject: ['103 Hera', '103 Hera']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2011-08-27', '1622.213 (days)']

Triple: [['__subject__ 103 Hera __predicate__ epoch __object__ 2011-08-27', '__subject__ 103 Hera __predicate__ orbitalPeriod __object__ 1622.213 (days)']]
Text: 103 Hera has an epoch date of August 27th 2011, and an orbital period of 1622.213 days.
Subject: ['103 Hera', '103 Hera']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2011-08-27', '1622.213 (days)']

Triple: [['__subject__ 103 Hera __predicate__ escapeVelocity __object__ 0.0482 (kilometrePerSeconds)', '__subject__ 103 Hera __predicate__ apoapsis __object__ 437170000.0 (kilometres)']]
Text: 103 Hera has the escape velocity of 0.0482 km per sec and its apoapsis is 437170000.0 (kilometres).
Subject: ['103 Hera', '103 Hera']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0482 (kilometrePerSeconds)', '437170000.0 (kilometres)']

Triple: [['__subject__ 103 Hera __predicate__ escapeVelocity __object__ 0.0482 (kilometrePerSeconds)', '__subject__ 103 Hera __predicate__ apoapsis __object__ 437170000.0 (kilometres)']]
Text: 103 Hera has an escape velocity of 0.0482 kilometres per second and its apoapsis is 437170000.0 kms.
Subject: ['103 Hera', '103 Hera']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0482 (kilometrePerSeconds)', '437170000.0 (kilometres)']

Triple: [['__subject__ 103 Hera __predicate__ escapeVelocity __object__ 0.0482 (kilometrePerSeconds)', '__subject__ 103 Hera __predicate__ apoapsis __object__ 437170000.0 (kilometres)']]
Text: The celestial body, 103 Hera, has an escape velocity of 0.0482 k.p.s and an apoapsis of 437170000.0 km.
Subject: ['103 Hera', '103 Hera']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0482 (kilometrePerSeconds)', '437170000.0 (kilometres)']

Triple: [['__subject__ 103 Hera __predicate__ mass __object__ 7.9 (kilograms)', '__subject__ 103 Hera __predicate__ apoapsis __object__ 437170000.0 (kilometres)']]
Text: 103 Hera has a mass of 7.9 kg and an apoapsis of 437170000.0 km.
Subject: ['103 Hera', '103 Hera']
Predicate: ['mass', 'apoapsis']
Object: ['7.9 (kilograms)', '437170000.0 (kilometres)']

Triple: [['__subject__ 103 Hera __predicate__ mass __object__ 7.9 (kilograms)', '__subject__ 103 Hera __predicate__ apoapsis __object__ 437170000.0 (kilometres)']]
Text: 103 Hera has a mass is 7.9kg and an apoapsis of 437170000.0 km.
Subject: ['103 Hera', '103 Hera']
Predicate: ['mass', 'apoapsis']
Object: ['7.9 (kilograms)', '437170000.0 (kilometres)']

Triple: [['__subject__ 103 Hera __predicate__ rotationPeriod __object__ 85466.9', '__subject__ 103 Hera __predicate__ apoapsis __object__ 437170000.0 (kilometres)']]
Text: 103 Hera, with an apoapsis of 437170000.0 km, has a rotation period of 85466.9.
Subject: ['103 Hera', '103 Hera']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['85466.9', '437170000.0 (kilometres)']

Triple: [['__subject__ 103 Hera __predicate__ rotationPeriod __object__ 85466.9', '__subject__ 103 Hera __predicate__ apoapsis __object__ 437170000.0 (kilometres)']]
Text: 103 Hera has a rotation period of 85466.9 and an apoapsis of 437170000.0 (kilometres).
Subject: ['103 Hera', '103 Hera']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['85466.9', '437170000.0 (kilometres)']

Triple: [['__subject__ 103 Hera __predicate__ rotationPeriod __object__ 85466.9', '__subject__ 103 Hera __predicate__ apoapsis __object__ 437170000.0 (kilometres)']]
Text: 103 Hera has a rotation period of 85466.9 and an apoapsis of 437170000.0 km.
Subject: ['103 Hera', '103 Hera']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['85466.9', '437170000.0 (kilometres)']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ A. Storrs', '__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31']]
Text: A Storrs discovered 107 Camilla, the epoch of which, is 31 December 2006.
Subject: ['107 Camilla', '107 Camilla']
Predicate: ['discoverer', 'epoch']
Object: ['A. Storrs', '2006-12-31']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ A. Storrs', '__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31']]
Text: 107 Camilla was discovered by A Storrs and has an epoch date of December 31st 2006.
Subject: ['107 Camilla', '107 Camilla']
Predicate: ['discoverer', 'epoch']
Object: ['A. Storrs', '2006-12-31']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ A. Storrs', '__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31']]
Text: 107 Camillais an asteroid discovered by A Storrs. It has an epoch of 31 December 2006.
Subject: ['107 Camilla', '107 Camilla']
Predicate: ['discoverer', 'epoch']
Object: ['A. Storrs', '2006-12-31']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ B. Zellner', '__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31']]
Text: B. Zellner discovered 107 Camilla, which has an epoch date of December 31st 2006.
Subject: ['107 Camilla', '107 Camilla']
Predicate: ['discoverer', 'epoch']
Object: ['B. Zellner', '2006-12-31']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ B. Zellner', '__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31']]
Text: B. Zellner was the discoverer of 107 Camilla, which has an epoch date of December 31st 2006.
Subject: ['107 Camilla', '107 Camilla']
Predicate: ['discoverer', 'epoch']
Object: ['B. Zellner', '2006-12-31']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ B. Zellner', '__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31']]
Text: 107 Camilla, discovered by B Zellner, has the epoch 31 December 2006.
Subject: ['107 Camilla', '107 Camilla']
Predicate: ['discoverer', 'epoch']
Object: ['B. Zellner', '2006-12-31']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ C. Woods', '__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31']]
Text: 107 Camilla was discovered by C. Woods and its epoch was on the 31 December 2006.
Subject: ['107 Camilla', '107 Camilla']
Predicate: ['discoverer', 'epoch']
Object: ['C. Woods', '2006-12-31']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ C. Woods', '__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31']]
Text: 107 Camilla has an epoch date of December 31st 2006 and was discovered by C Woods.
Subject: ['107 Camilla', '107 Camilla']
Predicate: ['discoverer', 'epoch']
Object: ['C. Woods', '2006-12-31']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ C. Woods', '__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31']]
Text: 107 Camilla, discovered by C Woods, has the epoch 31 December 2006.
Subject: ['107 Camilla', '107 Camilla']
Predicate: ['discoverer', 'epoch']
Object: ['C. Woods', '2006-12-31']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ E. Wells', '__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31']]
Text: Discovered by E. Wells, 107 Camilla, has the epoch 31 December 2006.
Subject: ['107 Camilla', '107 Camilla']
Predicate: ['discoverer', 'epoch']
Object: ['E. Wells', '2006-12-31']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ E. Wells', '__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31']]
Text: 107 Camilla was discovered by E. Wells and has an epoch date of December 31st 2006.
Subject: ['107 Camilla', '107 Camilla']
Predicate: ['discoverer', 'epoch']
Object: ['E. Wells', '2006-12-31']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ E. Wells', '__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31']]
Text: E Wells discovered 107 Camilla, which has an epoch date of 31 December 2006.
Subject: ['107 Camilla', '107 Camilla']
Predicate: ['discoverer', 'epoch']
Object: ['E. Wells', '2006-12-31']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ N. R. Pogson', '__subject__ N. R. Pogson __predicate__ deathPlace __object__ Chennai']]
Text: 107 Camilla was discovered by N.R. Pogson, who died in Chennai.
Subject: ['107 Camilla', 'N. R. Pogson']
Predicate: ['discoverer', 'deathPlace']
Object: ['N. R. Pogson', 'Chennai']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ N. R. Pogson', '__subject__ N. R. Pogson __predicate__ deathPlace __object__ Chennai']]
Text: N. R. Pogson, who discovered 107 Camilla, died in Chennai.
Subject: ['107 Camilla', 'N. R. Pogson']
Predicate: ['discoverer', 'deathPlace']
Object: ['N. R. Pogson', 'Chennai']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ N. R. Pogson', '__subject__ N. R. Pogson __predicate__ deathPlace __object__ Chennai']]
Text: N R Pogson, who died in Chennai, discovered 107 Camilla.
Subject: ['107 Camilla', 'N. R. Pogson']
Predicate: ['discoverer', 'deathPlace']
Object: ['N. R. Pogson', 'Chennai']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ N. R. Pogson', '__subject__ N. R. Pogson __predicate__ nationality __object__ England']]
Text: Englishman N R Pogson discovered 107 Camilla.
Subject: ['107 Camilla', 'N. R. Pogson']
Predicate: ['discoverer', 'nationality']
Object: ['N. R. Pogson', 'England']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ N. R. Pogson', '__subject__ N. R. Pogson __predicate__ nationality __object__ England']]
Text: N.R. Pogson, an English national, discovered 107 Camilla.
Subject: ['107 Camilla', 'N. R. Pogson']
Predicate: ['discoverer', 'nationality']
Object: ['N. R. Pogson', 'England']

Triple: [['__subject__ 107 Camilla __predicate__ discoverer __object__ N. R. Pogson', '__subject__ N. R. Pogson __predicate__ nationality __object__ England']]
Text: 107 Camilla was discovered by NR Pogson who is English.
Subject: ['107 Camilla', 'N. R. Pogson']
Predicate: ['discoverer', 'nationality']
Object: ['N. R. Pogson', 'England']

Triple: [['__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31', '__subject__ 107 Camilla __predicate__ discoverer __object__ M. Gaffey']]
Text: M. Gaffey discovered 107 Camilla, which has an epoch date of December 31st 2006.
Subject: ['107 Camilla', '107 Camilla']
Predicate: ['epoch', 'discoverer']
Object: ['2006-12-31', 'M. Gaffey']

Triple: [['__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31', '__subject__ 107 Camilla __predicate__ discoverer __object__ M. Gaffey']]
Text: 107 Camilla was discovered by M Gaffey and has an epoch date of 31.12.2006.
Subject: ['107 Camilla', '107 Camilla']
Predicate: ['epoch', 'discoverer']
Object: ['2006-12-31', 'M. Gaffey']

Triple: [['__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31', '__subject__ 107 Camilla __predicate__ discoverer __object__ M. Gaffey']]
Text: 107 Camilla, which was discovered by M Gaffey, has the epoch 31 December 2006.
Subject: ['107 Camilla', '107 Camilla']
Predicate: ['epoch', 'discoverer']
Object: ['2006-12-31', 'M. Gaffey']

Triple: [['__subject__ 1089 Tama __predicate__ apoapsis __object__ 373513000.0 (kilometres)', '__subject__ 1089 Tama __predicate__ averageSpeed __object__ 19.94 (kilometrePerSeconds)']]
Text: The apoapsis for 1089 Tama is 373513000.0 (kilometres) and it has an average speed of 19.94 km per sec.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['373513000.0 (kilometres)', '19.94 (kilometrePerSeconds)']

Triple: [['__subject__ 1089 Tama __predicate__ apoapsis __object__ 373513000.0 (kilometres)', '__subject__ 1089 Tama __predicate__ averageSpeed __object__ 19.94 (kilometrePerSeconds)']]
Text: 1089 Tama has an average speed of 19.94 kilometers per second and an apoapsis of 373513000.0 (kilometres).
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['373513000.0 (kilometres)', '19.94 (kilometrePerSeconds)']

Triple: [['__subject__ 1089 Tama __predicate__ epoch __object__ 2005-11-26', '__subject__ 1089 Tama __predicate__ formerName __object__ 1930 ST; 1952 HE4']]
Text: The former name of 1089 Tama is "1930 ST; 1952 HE4", its epoch date is 26 November 2005.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['epoch', 'formerName']
Object: ['2005-11-26', '1930 ST; 1952 HE4']

Triple: [['__subject__ 1089 Tama __predicate__ epoch __object__ 2005-11-26', '__subject__ 1089 Tama __predicate__ formerName __object__ 1930 ST; 1952 HE4']]
Text: The former name of 1089 Tama is "1930 ST; 1952 HE4" and it has an epoch date of 26 November 2005.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['epoch', 'formerName']
Object: ['2005-11-26', '1930 ST; 1952 HE4']

Triple: [['__subject__ 1089 Tama __predicate__ epoch __object__ 2005-11-26', '__subject__ 1089 Tama __predicate__ formerName __object__ 1930 ST; 1952 HE4']]
Text: The epoch of 1089 Tama, formerly known as "1930 ST; 1952 HE4" is 2005-11-26.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['epoch', 'formerName']
Object: ['2005-11-26', '1930 ST; 1952 HE4']

Triple: [['__subject__ 1089 Tama __predicate__ epoch __object__ 2005-11-26', '__subject__ 1089 Tama __predicate__ formerName __object__ A894 VA; A904 VD;']]
Text: 1089 Tama had the former name of "A894 VA; A904 VD;" and has an epoch date of 26 November 2005.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['epoch', 'formerName']
Object: ['2005-11-26', 'A894 VA; A904 VD;']

Triple: [['__subject__ 1089 Tama __predicate__ epoch __object__ 2005-11-26', '__subject__ 1089 Tama __predicate__ formerName __object__ A894 VA; A904 VD;']]
Text: The epoch date of 1089 Tama formerly called "A894 VA; A904 VD is 26 November 2005.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['epoch', 'formerName']
Object: ['2005-11-26', 'A894 VA; A904 VD;']

Triple: [['__subject__ 1089 Tama __predicate__ epoch __object__ 2005-11-26', '__subject__ 1089 Tama __predicate__ formerName __object__ A894 VA; A904 VD;']]
Text: 1089 Tama was formerly called "A894 VA; A904 VD", its epoch date is 2005-11-26.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['epoch', 'formerName']
Object: ['2005-11-26', 'A894 VA; A904 VD;']

Triple: [['__subject__ 1089 Tama __predicate__ epoch __object__ 2005-11-26', '__subject__ 1089 Tama __predicate__ orbitalPeriod __object__ 1202.846 (days)']]
Text: 1089 Tama has an orbital period of 1202.846 days; its epoch date is the 26th of November 2005.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2005-11-26', '1202.846 (days)']

Triple: [['__subject__ 1089 Tama __predicate__ epoch __object__ 2005-11-26', '__subject__ 1089 Tama __predicate__ orbitalPeriod __object__ 1202.846 (days)']]
Text: 1089 Tama has an orbital period of 1202.846 days and its epoch date is 26 November 2005.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2005-11-26', '1202.846 (days)']

Triple: [['__subject__ 1089 Tama __predicate__ epoch __object__ 2005-11-26', '__subject__ 1089 Tama __predicate__ orbitalPeriod __object__ 1202.846 (days)']]
Text: 1089 Tama has an orbital period of 1202.846 days and the epoch of 2005-11-26.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2005-11-26', '1202.846 (days)']

Triple: [['__subject__ 1089 Tama __predicate__ epoch __object__ 2005-11-26', '__subject__ 1089 Tama __predicate__ periapsis __object__ 288749000000.0']]
Text: 1089 Tama has a periapsis of 288749000000.0 and its epoch date is 26 November 2005.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['epoch', 'periapsis']
Object: ['2005-11-26', '288749000000.0']

Triple: [['__subject__ 1089 Tama __predicate__ epoch __object__ 2005-11-26', '__subject__ 1089 Tama __predicate__ periapsis __object__ 288749000000.0']]
Text: The epoch of 1089 Tama is 2005-11-26 and it has a periapsis of 288749000000.0.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['epoch', 'periapsis']
Object: ['2005-11-26', '288749000000.0']

Triple: [['__subject__ 1089 Tama __predicate__ escapeVelocity __object__ 0.0068 (kilometrePerSeconds)', '__subject__ 1089 Tama __predicate__ apoapsis __object__ 373513000.0 (kilometres)']]
Text: The escape velocity of 1089 Tama is 0.0068 km/sec and has an apoapsis of 373513000.0 kilometres.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0068 (kilometrePerSeconds)', '373513000.0 (kilometres)']

Triple: [['__subject__ 1089 Tama __predicate__ escapeVelocity __object__ 0.0068 (kilometrePerSeconds)', '__subject__ 1089 Tama __predicate__ apoapsis __object__ 373513000.0 (kilometres)']]
Text: The apoapsis for 1089 Tama is 373513000.0 (kilometres) and its escape velocity is 0.0068 kilometres per second.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0068 (kilometrePerSeconds)', '373513000.0 (kilometres)']

Triple: [['__subject__ 1089 Tama __predicate__ escapeVelocity __object__ 0.0068 (kilometrePerSeconds)', '__subject__ 1089 Tama __predicate__ apoapsis __object__ 373513000.0 (kilometres)']]
Text: 1089 Tama has an escape velocity of 0.0068 kilometres per second and its apoapsis is 373513000.0 kms.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0068 (kilometrePerSeconds)', '373513000.0 (kilometres)']

Triple: [['__subject__ 1089 Tama __predicate__ rotationPeriod __object__ 17.28', '__subject__ 1089 Tama __predicate__ apoapsis __object__ 373513000.0 (kilometres)']]
Text: The rotation period for 1089 Tama is 17.28 and the apoapsis is 373513000.0 km.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['17.28', '373513000.0 (kilometres)']

Triple: [['__subject__ 1089 Tama __predicate__ rotationPeriod __object__ 17.28', '__subject__ 1089 Tama __predicate__ apoapsis __object__ 373513000.0 (kilometres)']]
Text: 1089 Tama has a rotation period of 117.28 hours and an orbit of 373513000.0km.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['17.28', '373513000.0 (kilometres)']

Triple: [['__subject__ 1089 Tama __predicate__ rotationPeriod __object__ 17.28', '__subject__ 1089 Tama __predicate__ apoapsis __object__ 373513000.0 (kilometres)']]
Text: The apoapsis for 1089 Tama is 373513000.0 (kilometres) and it has a rotation period of 17.28.
Subject: ['1089 Tama', '1089 Tama']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['17.28', '373513000.0 (kilometres)']

Triple: [['__subject__ 1097 Vicia __predicate__ apoapsis __object__ 511592000.0 (kilometres)', '__subject__ 1097 Vicia __predicate__ averageSpeed __object__ 17.92 (kilometrePerSeconds)']]
Text: 1097 Vicia has an average speed of 17.92 k.p.s. and its apoapsis is 511592000.0 km.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['511592000.0 (kilometres)', '17.92 (kilometrePerSeconds)']

Triple: [['__subject__ 1097 Vicia __predicate__ apoapsis __object__ 511592000.0 (kilometres)', '__subject__ 1097 Vicia __predicate__ averageSpeed __object__ 17.92 (kilometrePerSeconds)']]
Text: The apoapsis of 1097 Vicia is 511592000.0 km it has an average speed of 17.92 kilometres per second.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['511592000.0 (kilometres)', '17.92 (kilometrePerSeconds)']

Triple: [['__subject__ 1097 Vicia __predicate__ apoapsis __object__ 511592000.0 (kilometres)', '__subject__ 1097 Vicia __predicate__ temperature __object__ 171.0 (kelvins)']]
Text: The celestial body known as 1097 Vicia has a temperature of 171 kelvins and an apoapsis of 511592000 kilometres.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['apoapsis', 'temperature']
Object: ['511592000.0 (kilometres)', '171.0 (kelvins)']

Triple: [['__subject__ 1097 Vicia __predicate__ apoapsis __object__ 511592000.0 (kilometres)', '__subject__ 1097 Vicia __predicate__ temperature __object__ 171.0 (kelvins)']]
Text: The temperature of 1097 Vicia is 171.0 (kelvins) and its apoapsis is 511592000.0 km.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['apoapsis', 'temperature']
Object: ['511592000.0 (kilometres)', '171.0 (kelvins)']

Triple: [['__subject__ 1097 Vicia __predicate__ apoapsis __object__ 511592000.0 (kilometres)', '__subject__ 1097 Vicia __predicate__ temperature __object__ 171.0 (kelvins)']]
Text: The temperature of 1097 Vicia is 171.0 (kelvins) and it has an apoapsis of 511592000.0 kilometres.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['apoapsis', 'temperature']
Object: ['511592000.0 (kilometres)', '171.0 (kelvins)']

Triple: [['__subject__ 1097 Vicia __predicate__ epoch __object__ 2006-12-31', '__subject__ 1097 Vicia __predicate__ formerName __object__ 1928 PC']]
Text: The epoch of 1097 Vicia (former name "1928 PC") is on 31 December 2016.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['epoch', 'formerName']
Object: ['2006-12-31', '1928 PC']

Triple: [['__subject__ 1097 Vicia __predicate__ epoch __object__ 2006-12-31', '__subject__ 1097 Vicia __predicate__ rotationPeriod __object__ 95040.0']]
Text: 1097 Vicia has an epoch date of 2006.12.31 and a rotation period of 95040.0.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['epoch', 'rotationPeriod']
Object: ['2006-12-31', '95040.0']

Triple: [['__subject__ 1097 Vicia __predicate__ epoch __object__ 2006-12-31', '__subject__ 1097 Vicia __predicate__ rotationPeriod __object__ 95040.0']]
Text: 1097 Vicia, has a rotation period of 95040.0, and its epoch date is 2006.12.31.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['epoch', 'rotationPeriod']
Object: ['2006-12-31', '95040.0']

Triple: [['__subject__ 1097 Vicia __predicate__ epoch __object__ 2006-12-31', '__subject__ 1097 Vicia __predicate__ rotationPeriod __object__ 95040.0']]
Text: 1097 Vicia has a rotation period of 95040 and its epoch is on 13 January 2016.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['epoch', 'rotationPeriod']
Object: ['2006-12-31', '95040.0']

Triple: [['__subject__ 1097 Vicia __predicate__ escapeVelocity __object__ 0.0112 (kilometrePerSeconds)', '__subject__ 1097 Vicia __predicate__ apoapsis __object__ 511592000.0 (kilometres)']]
Text: 1097 Vicia has an escape velocity of 0.0112 kilometres per second and its apoapsis is 511592000.0 kms.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0112 (kilometrePerSeconds)', '511592000.0 (kilometres)']

Triple: [['__subject__ 1097 Vicia __predicate__ escapeVelocity __object__ 0.0112 (kilometrePerSeconds)', '__subject__ 1097 Vicia __predicate__ apoapsis __object__ 511592000.0 (kilometres)']]
Text: The apoapsis of 1097 Vicia is 511592000.0 km and it has an escape velocity of 0.0112 kilometres per second.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0112 (kilometrePerSeconds)', '511592000.0 (kilometres)']

Triple: [['__subject__ 1097 Vicia __predicate__ escapeVelocity __object__ 0.0112 (kilometrePerSeconds)', '__subject__ 1097 Vicia __predicate__ apoapsis __object__ 511592000.0 (kilometres)']]
Text: The escape velocity of 1097 Vicia is 0.0112 km/s and its apoapsis is 511592000.0 km.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0112 (kilometrePerSeconds)', '511592000.0 (kilometres)']

Triple: [['__subject__ 1097 Vicia __predicate__ mass __object__ 9.8 (kilograms)', '__subject__ 1097 Vicia __predicate__ apoapsis __object__ 511592000.0 (kilometres)']]
Text: 1097 Vicia, with a mass of 9.8 kgs has an apoapsis of 511592000.0 km.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['mass', 'apoapsis']
Object: ['9.8 (kilograms)', '511592000.0 (kilometres)']

Triple: [['__subject__ 1097 Vicia __predicate__ mass __object__ 9.8 (kilograms)', '__subject__ 1097 Vicia __predicate__ apoapsis __object__ 511592000.0 (kilometres)']]
Text: 1097 Vicia has a mass of 9.8kg and an apoapsis of 511592000.0 km.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['mass', 'apoapsis']
Object: ['9.8 (kilograms)', '511592000.0 (kilometres)']

Triple: [['__subject__ 1097 Vicia __predicate__ mass __object__ 9.8 (kilograms)', '__subject__ 1097 Vicia __predicate__ apoapsis __object__ 511592000.0 (kilometres)']]
Text: 1097 Vicia is a celestial body with a mass of 9.8kg and an apoapsis of 511592000.0 kilometres.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['mass', 'apoapsis']
Object: ['9.8 (kilograms)', '511592000.0 (kilometres)']

Triple: [['__subject__ 1097 Vicia __predicate__ rotationPeriod __object__ 95040.0', '__subject__ 1097 Vicia __predicate__ apoapsis __object__ 511592000.0 (kilometres)']]
Text: 1097 Vicia has a rotation period of 95040.0 and an apoapsis of 511592000.0 km.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['95040.0', '511592000.0 (kilometres)']

Triple: [['__subject__ 1097 Vicia __predicate__ rotationPeriod __object__ 95040.0', '__subject__ 1097 Vicia __predicate__ apoapsis __object__ 511592000.0 (kilometres)']]
Text: The rotation period of 1097 Vicia is 95040.0 and its apoapsis is 511592000.0 kilometres.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['95040.0', '511592000.0 (kilometres)']

Triple: [['__subject__ 1097 Vicia __predicate__ rotationPeriod __object__ 95040.0', '__subject__ 1097 Vicia __predicate__ apoapsis __object__ 511592000.0 (kilometres)']]
Text: 1097 Vicia has a rotation period of 95040 and an apoapsis of 511592000.0 km.
Subject: ['1097 Vicia', '1097 Vicia']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['95040.0', '511592000.0 (kilometres)']

Triple: [['__subject__ 1099 Figneria __predicate__ apoapsis __object__ 605718000.0 (kilometres)', '__subject__ 1099 Figneria __predicate__ temperature __object__ 156.0 (kelvins)']]
Text: 1099 Figneria has a temperature of 156.0 kelvins and its apoapsis is 605718000.0 kilometres.
Subject: ['1099 Figneria', '1099 Figneria']
Predicate: ['apoapsis', 'temperature']
Object: ['605718000.0 (kilometres)', '156.0 (kelvins)']

Triple: [['__subject__ 1099 Figneria __predicate__ apoapsis __object__ 605718000.0 (kilometres)', '__subject__ 1099 Figneria __predicate__ temperature __object__ 156.0 (kelvins)']]
Text: 1099 Figneria has an apoapsis of 605718000 kilometres and a temperature of 156.0 kelvins.
Subject: ['1099 Figneria', '1099 Figneria']
Predicate: ['apoapsis', 'temperature']
Object: ['605718000.0 (kilometres)', '156.0 (kelvins)']

Triple: [['__subject__ 1099 Figneria __predicate__ epoch __object__ 2006-12-31', '__subject__ 1099 Figneria __predicate__ formerName __object__ 1928 RQ']]
Text: 1099 Figneria, formerly named 1928 RQ, has an epoch date of December 31st 2006.
Subject: ['1099 Figneria', '1099 Figneria']
Predicate: ['epoch', 'formerName']
Object: ['2006-12-31', '1928 RQ']

Triple: [['__subject__ 1099 Figneria __predicate__ epoch __object__ 2006-12-31', '__subject__ 1099 Figneria __predicate__ formerName __object__ 1928 RQ']]
Text: 1099 Figneria was formerly known as 1928 RQ and has an epoch date of December 31st 2006.
Subject: ['1099 Figneria', '1099 Figneria']
Predicate: ['epoch', 'formerName']
Object: ['2006-12-31', '1928 RQ']

Triple: [['__subject__ 1099 Figneria __predicate__ epoch __object__ 2006-12-31', '__subject__ 1099 Figneria __predicate__ formerName __object__ 1928 RQ']]
Text: The epoch date for 1099 Figneria-formerly known as "1928 RQ" was 31 December 2006.
Subject: ['1099 Figneria', '1099 Figneria']
Predicate: ['epoch', 'formerName']
Object: ['2006-12-31', '1928 RQ']

Triple: [['__subject__ 1099 Figneria __predicate__ epoch __object__ 2006-12-31', '__subject__ 1099 Figneria __predicate__ mass __object__ 2.7 (kilograms)']]
Text: The epoch date for 1099 Figneria is 31 December 2006 and it has a mass of 2.7kg.
Subject: ['1099 Figneria', '1099 Figneria']
Predicate: ['epoch', 'mass']
Object: ['2006-12-31', '2.7 (kilograms)']

Triple: [['__subject__ 1099 Figneria __predicate__ epoch __object__ 2006-12-31', '__subject__ 1099 Figneria __predicate__ mass __object__ 2.7 (kilograms)']]
Text: 1099 Figneria, has an epoch date of December 31st 2006, and weighs 2.7 kg.
Subject: ['1099 Figneria', '1099 Figneria']
Predicate: ['epoch', 'mass']
Object: ['2006-12-31', '2.7 (kilograms)']

Triple: [['__subject__ 1099 Figneria __predicate__ epoch __object__ 2006-12-31', '__subject__ 1099 Figneria __predicate__ mass __object__ 2.7 (kilograms)']]
Text: The epoch date for 1099 Figneria is 31 December 2006 and it has a mass of 2.7 kg.
Subject: ['1099 Figneria', '1099 Figneria']
Predicate: ['epoch', 'mass']
Object: ['2006-12-31', '2.7 (kilograms)']

Triple: [['__subject__ 1099 Figneria __predicate__ epoch __object__ 2006-12-31', '__subject__ 1099 Figneria __predicate__ orbitalPeriod __object__ 179942000.0']]
Text: 1099 Figneria has an orbital period of 179942000.0, and the epoch date, 31 December 2006.
Subject: ['1099 Figneria', '1099 Figneria']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2006-12-31', '179942000.0']

Triple: [['__subject__ 1099 Figneria __predicate__ epoch __object__ 2006-12-31', '__subject__ 1099 Figneria __predicate__ orbitalPeriod __object__ 179942000.0']]
Text: 1099 Figneria has an epoch date of December 31st 2006 and an orbital period of 179942000.0.
Subject: ['1099 Figneria', '1099 Figneria']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2006-12-31', '179942000.0']

Triple: [['__subject__ 1099 Figneria __predicate__ epoch __object__ 2006-12-31', '__subject__ 1099 Figneria __predicate__ orbitalPeriod __object__ 179942000.0']]
Text: The epoch date for 1099 Figneria, which has an orbital period of 179942000.0, is 31 December 2006.
Subject: ['1099 Figneria', '1099 Figneria']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2006-12-31', '179942000.0']

Triple: [['__subject__ 1099 Figneria __predicate__ escapeVelocity __object__ 0.0155 (kilometrePerSeconds)', '__subject__ 1099 Figneria __predicate__ apoapsis __object__ 605718000.0 (kilometres)']]
Text: 1099 Figneria has an escape velocity of 0.0155 kilometres per second and its apoapsis is 605718000.0 kilometres.
Subject: ['1099 Figneria', '1099 Figneria']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0155 (kilometrePerSeconds)', '605718000.0 (kilometres)']

Triple: [['__subject__ 1099 Figneria __predicate__ escapeVelocity __object__ 0.0155 (kilometrePerSeconds)', '__subject__ 1099 Figneria __predicate__ apoapsis __object__ 605718000.0 (kilometres)']]
Text: 0.0155 kilometer per second is the escape velocity of 1099 Figneria, which has an apoapsis of 605718000.0 kms.
Subject: ['1099 Figneria', '1099 Figneria']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0155 (kilometrePerSeconds)', '605718000.0 (kilometres)']

Triple: [['__subject__ 1099 Figneria __predicate__ mass __object__ 2.7 (kilograms)', '__subject__ 1099 Figneria __predicate__ apoapsis __object__ 605718000.0 (kilometres)']]
Text: The mass of 1099 Figneria is 2.7 kg and its apoapsis is 605718000.0 kilometres.
Subject: ['1099 Figneria', '1099 Figneria']
Predicate: ['mass', 'apoapsis']
Object: ['2.7 (kilograms)', '605718000.0 (kilometres)']

Triple: [['__subject__ 1099 Figneria __predicate__ mass __object__ 2.7 (kilograms)', '__subject__ 1099 Figneria __predicate__ apoapsis __object__ 605718000.0 (kilometres)']]
Text: 1099 Figneria has a mass of 2.7kg and an apoapsis of 605718000.0 kilometres.
Subject: ['1099 Figneria', '1099 Figneria']
Predicate: ['mass', 'apoapsis']
Object: ['2.7 (kilograms)', '605718000.0 (kilometres)']

Triple: [['__subject__ 1099 Figneria __predicate__ mass __object__ 2.7 (kilograms)', '__subject__ 1099 Figneria __predicate__ apoapsis __object__ 605718000.0 (kilometres)']]
Text: 1099 Figneria has a mass of 2.7 kilograms and its apoapsis is 605718000.0 kms.
Subject: ['1099 Figneria', '1099 Figneria']
Predicate: ['mass', 'apoapsis']
Object: ['2.7 (kilograms)', '605718000.0 (kilometres)']

Triple: [['__subject__ 109 Felicitas __predicate__ apoapsis __object__ 523329000.0 (kilometres)', '__subject__ 109 Felicitas __predicate__ averageSpeed __object__ 17.73 (kilometrePerSeconds)']]
Text: 109 Felicitas travels at an average speed of 17.73 km/s, and has an apoapsis of 523329000 kilometres.
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['523329000.0 (kilometres)', '17.73 (kilometrePerSeconds)']

Triple: [['__subject__ 109 Felicitas __predicate__ apoapsis __object__ 523329000.0 (kilometres)', '__subject__ 109 Felicitas __predicate__ averageSpeed __object__ 17.73 (kilometrePerSeconds)']]
Text: 109 Felicitas has an apoapsis of 523329000.0 kilometres and an average speed of 17.73 kilometres per second.
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['523329000.0 (kilometres)', '17.73 (kilometrePerSeconds)']

Triple: [['__subject__ 109 Felicitas __predicate__ apoapsis __object__ 523329000.0 (kilometres)', '__subject__ 109 Felicitas __predicate__ averageSpeed __object__ 17.73 (kilometrePerSeconds)']]
Text: 109 Felicitas, has an average speed of 17.73 kilometres per second, and an apoapsis of, 523329000.0 kilometres.
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['523329000.0 (kilometres)', '17.73 (kilometrePerSeconds)']

Triple: [['__subject__ 109 Felicitas __predicate__ epoch __object__ 2006-12-31', '__subject__ 109 Felicitas __predicate__ orbitalPeriod __object__ 139705000.0']]
Text: 109 Felicitas has an epoch date of December 31st 2006 and an orbital period of 139705000.0.
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2006-12-31', '139705000.0']

Triple: [['__subject__ 109 Felicitas __predicate__ epoch __object__ 2006-12-31', '__subject__ 109 Felicitas __predicate__ orbitalPeriod __object__ 139705000.0']]
Text: 109 Felicitas, has an epoch date of December 31st 2006, and an orbital period of, 139705000.0.
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2006-12-31', '139705000.0']

Triple: [['__subject__ 109 Felicitas __predicate__ epoch __object__ 2006-12-31', '__subject__ 109 Felicitas __predicate__ orbitalPeriod __object__ 139705000.0']]
Text: The epoch date of 109 Felicitas, which has an orbital period of 139705000.0, is 31 December 2006.
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2006-12-31', '139705000.0']

Triple: [['__subject__ 109 Felicitas __predicate__ escapeVelocity __object__ 0.0473 (kilometrePerSeconds)', '__subject__ 109 Felicitas __predicate__ apoapsis __object__ 523329000.0 (kilometres)']]
Text: 109 Felicitas, which has an escape velocity of 0.0473 km per sec has an apoapsis of 523329000.0 kilometres.
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0473 (kilometrePerSeconds)', '523329000.0 (kilometres)']

Triple: [['__subject__ 109 Felicitas __predicate__ escapeVelocity __object__ 0.0473 (kilometrePerSeconds)', '__subject__ 109 Felicitas __predicate__ apoapsis __object__ 523329000.0 (kilometres)']]
Text: 109 Felicitas has an escape velocity of 0.0473 kilometres per second, and an apoapsis of 523329000.0 kilometres.
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0473 (kilometrePerSeconds)', '523329000.0 (kilometres)']

Triple: [['__subject__ 109 Felicitas __predicate__ mass __object__ 7.5 (kilograms)', '__subject__ 109 Felicitas __predicate__ apoapsis __object__ 523329000.0 (kilometres)']]
Text: 109 Felicitas has a mass of 7.5 kg and an apoapsis of 523329000.0 km.
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['mass', 'apoapsis']
Object: ['7.5 (kilograms)', '523329000.0 (kilometres)']

Triple: [['__subject__ 109 Felicitas __predicate__ mass __object__ 7.5 (kilograms)', '__subject__ 109 Felicitas __predicate__ apoapsis __object__ 523329000.0 (kilometres)']]
Text: 109 Felicitas has a mass of 7.5 kg and an apoapsis of 523329000 km.
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['mass', 'apoapsis']
Object: ['7.5 (kilograms)', '523329000.0 (kilometres)']

Triple: [['__subject__ 109 Felicitas __predicate__ mass __object__ 7.5 (kilograms)', '__subject__ 109 Felicitas __predicate__ apoapsis __object__ 523329000.0 (kilometres)']]
Text: 109 Felicitas, has an apoapsis of 523329000 kilometres, and weighs 7.5kgs.
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['mass', 'apoapsis']
Object: ['7.5 (kilograms)', '523329000.0 (kilometres)']

Triple: [['__subject__ 109 Felicitas __predicate__ mass __object__ 7.5 (kilograms)', '__subject__ 109 Felicitas __predicate__ epoch __object__ 2006-12-31']]
Text: 109 Felicitas has an epoch date of 31 December 2006 and a mass of 7.5 kgs.
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['mass', 'epoch']
Object: ['7.5 (kilograms)', '2006-12-31']

Triple: [['__subject__ 109 Felicitas __predicate__ mass __object__ 7.5 (kilograms)', '__subject__ 109 Felicitas __predicate__ epoch __object__ 2006-12-31']]
Text: 109 Felicitas has a mass of 7.5 kg and an epoch date of December 31st 2006.
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['mass', 'epoch']
Object: ['7.5 (kilograms)', '2006-12-31']

Triple: [['__subject__ 109 Felicitas __predicate__ mass __object__ 7.5 (kilograms)', '__subject__ 109 Felicitas __predicate__ epoch __object__ 2006-12-31']]
Text: 109 Felicitas, has an epoch date of December 31st 2006, and weighs 7.5 kilograms.
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['mass', 'epoch']
Object: ['7.5 (kilograms)', '2006-12-31']

Triple: [['__subject__ 109 Felicitas __predicate__ rotationPeriod __object__ 47487.6', '__subject__ 109 Felicitas __predicate__ apoapsis __object__ 523329000.0 (kilometres)']]
Text: 109 Felicitas, with a rotation period of 47487.6, has an apoapsis of 523329000.0 km.
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['47487.6', '523329000.0 (kilometres)']

Triple: [['__subject__ 109 Felicitas __predicate__ rotationPeriod __object__ 47487.6', '__subject__ 109 Felicitas __predicate__ apoapsis __object__ 523329000.0 (kilometres)']]
Text: 109 Felicitas, with the rotation period of 47487.6, has an apoapsis of 523329000.0 (kilometres).
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['47487.6', '523329000.0 (kilometres)']

Triple: [['__subject__ 109 Felicitas __predicate__ rotationPeriod __object__ 47487.6', '__subject__ 109 Felicitas __predicate__ apoapsis __object__ 523329000.0 (kilometres)']]
Text: 109 Felicitas, has an apoapsis of 523329000.0 kilometres, and a rotational period of 47487.6.
Subject: ['109 Felicitas', '109 Felicitas']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['47487.6', '523329000.0 (kilometres)']

Triple: [['__subject__ 10 Hygiea __predicate__ averageSpeed __object__ 16.76 (kilometrePerSeconds)', '__subject__ 10 Hygiea __predicate__ apoapsis __object__ 523951582.33968 (kilometres)']]
Text: 10 Hygiea has an apoapsis of 523951582.33968 kilometres, and an average speed of, 16.76 km per secs.
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['averageSpeed', 'apoapsis']
Object: ['16.76 (kilometrePerSeconds)', '523951582.33968 (kilometres)']

Triple: [['__subject__ 10 Hygiea __predicate__ averageSpeed __object__ 16.76 (kilometrePerSeconds)', '__subject__ 10 Hygiea __predicate__ apoapsis __object__ 523951582.33968 (kilometres)']]
Text: The asteroid called 10 Hygiea, has an apoapsis of 523951582.33968 kilometres and an average speed of 16.76 km per sec.
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['averageSpeed', 'apoapsis']
Object: ['16.76 (kilometrePerSeconds)', '523951582.33968 (kilometres)']

Triple: [['__subject__ 10 Hygiea __predicate__ epoch __object__ 2015-06-27', '__subject__ 10 Hygiea __predicate__ orbitalPeriod __object__ 5.57 (days)']]
Text: The asteroid 10 Hygiea has an orbital period of 5.57 days and has the epoch date 27th June 2015.
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2015-06-27', '5.57 (days)']

Triple: [['__subject__ 10 Hygiea __predicate__ epoch __object__ 2015-06-27', '__subject__ 10 Hygiea __predicate__ orbitalPeriod __object__ 5.57 (days)']]
Text: The asteroid called 10 Hygiea had an epoch date of 27th June 2015 and its orbital period is 5.57 days.
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2015-06-27', '5.57 (days)']

Triple: [['__subject__ 10 Hygiea __predicate__ epoch __object__ 2015-06-27', '__subject__ 10 Hygiea __predicate__ periapsis __object__ 416136000000.0']]
Text: The asteroid called 10 Hygiea has an epoch date of 27th June 2015 and a periapsis measurement of 416136000000.0.
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['epoch', 'periapsis']
Object: ['2015-06-27', '416136000000.0']

Triple: [['__subject__ 10 Hygiea __predicate__ epoch __object__ 2015-06-27', '__subject__ 10 Hygiea __predicate__ periapsis __object__ 416136000000.0']]
Text: 10 Hygiea has an epoch date of June 27th 2015 and a periapsis of 416136000000.0.
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['epoch', 'periapsis']
Object: ['2015-06-27', '416136000000.0']

Triple: [['__subject__ 10 Hygiea __predicate__ epoch __object__ 2015-06-27', '__subject__ 10 Hygiea __predicate__ rotationPeriod __object__ 198803.0']]
Text: The rotation period of 10 Hygiea is 198803.0 and it has an epoch date of June 27th 2015.
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['epoch', 'rotationPeriod']
Object: ['2015-06-27', '198803.0']

Triple: [['__subject__ 10 Hygiea __predicate__ epoch __object__ 2015-06-27', '__subject__ 10 Hygiea __predicate__ rotationPeriod __object__ 198803.0']]
Text: The asteroid 10 Hygiea, with an epoch date of 27th June 2015, has a rotation period of 198803.0.
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['epoch', 'rotationPeriod']
Object: ['2015-06-27', '198803.0']

Triple: [['__subject__ 10 Hygiea __predicate__ epoch __object__ 2015-06-27', '__subject__ 10 Hygiea __predicate__ rotationPeriod __object__ 198803.0']]
Text: 10 Hygiea has an epoch date of June 27th 2015 and a rotation period of 198803.0.
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['epoch', 'rotationPeriod']
Object: ['2015-06-27', '198803.0']

Triple: [['__subject__ 10 Hygiea __predicate__ escapeVelocity __object__ 0.21 (kilometrePerSeconds)', '__subject__ 10 Hygiea __predicate__ apoapsis __object__ 523951582.33968 (kilometres)']]
Text: 10 Hygiea has an escape velocity of 0.21 kilometres per second, and an apoapsis of 523951582.33968 (kilometres).
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.21 (kilometrePerSeconds)', '523951582.33968 (kilometres)']

Triple: [['__subject__ 10 Hygiea __predicate__ escapeVelocity __object__ 0.21 (kilometrePerSeconds)', '__subject__ 10 Hygiea __predicate__ apoapsis __object__ 523951582.33968 (kilometres)']]
Text: The apoapsis of 10 Hygiea is 523951582.33968 (kilometres) and it has an escape velocity of 0.21km per sec.
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.21 (kilometrePerSeconds)', '523951582.33968 (kilometres)']

Triple: [['__subject__ 10 Hygiea __predicate__ escapeVelocity __object__ 0.21 (kilometrePerSeconds)', '__subject__ 10 Hygiea __predicate__ apoapsis __object__ 523951582.33968 (kilometres)']]
Text: 10 Hygiea has an escape velocity of 0.21 kilometres per second and an apoapsis of 523951582.33968 kilometres.
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.21 (kilometrePerSeconds)', '523951582.33968 (kilometres)']

Triple: [['__subject__ 10 Hygiea __predicate__ orbitalPeriod __object__ 5.57 (days)', '__subject__ 10 Hygiea __predicate__ apoapsis __object__ 523951582.33968 (kilometres)']]
Text: 10 Hygiea has an orbital period of 5.57 days and an apoapsis of 523951582.33968 kilometres.
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['orbitalPeriod', 'apoapsis']
Object: ['5.57 (days)', '523951582.33968 (kilometres)']

Triple: [['__subject__ 10 Hygiea __predicate__ orbitalPeriod __object__ 5.57 (days)', '__subject__ 10 Hygiea __predicate__ apoapsis __object__ 523951582.33968 (kilometres)']]
Text: 10 Hygiea has an apoapsis of 523951582.33968 kilometres and an orbital period of 5.57 days.
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['orbitalPeriod', 'apoapsis']
Object: ['5.57 (days)', '523951582.33968 (kilometres)']

Triple: [['__subject__ 10 Hygiea __predicate__ surfaceArea __object__ 837080.744 (squareKilometres)', '__subject__ 10 Hygiea __predicate__ apoapsis __object__ 523951582.33968 (kilometres)']]
Text: 10 Hygiea has a surface area of 837080.744 square kilometres, and an apoapsis of 523951582.33968 kilometres.
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['surfaceArea', 'apoapsis']
Object: ['837080.744 (squareKilometres)', '523951582.33968 (kilometres)']

Triple: [['__subject__ 10 Hygiea __predicate__ surfaceArea __object__ 837080.744 (squareKilometres)', '__subject__ 10 Hygiea __predicate__ apoapsis __object__ 523951582.33968 (kilometres)']]
Text: The celestial body known as 10 Hygiea has a surface area of 837080.744 sq km and an apoapsis of 523951582.33968 km.
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['surfaceArea', 'apoapsis']
Object: ['837080.744 (squareKilometres)', '523951582.33968 (kilometres)']

Triple: [['__subject__ 10 Hygiea __predicate__ surfaceArea __object__ 837080.744 (squareKilometres)', '__subject__ 10 Hygiea __predicate__ apoapsis __object__ 523951582.33968 (kilometres)']]
Text: The celestial body known as 10 Hygiea has a surface area of 837080.744 square km and an apoapsis of 523951582.33968 kilometres.
Subject: ['10 Hygiea', '10 Hygiea']
Predicate: ['surfaceArea', 'apoapsis']
Object: ['837080.744 (squareKilometres)', '523951582.33968 (kilometres)']

Triple: [['__subject__ 1101 Clematis __predicate__ apoapsis __object__ 520906000.0 (kilometres)', '__subject__ 1101 Clematis __predicate__ averageSpeed __object__ 16.54 (kilometrePerSeconds)']]
Text: 1101 Clematis, which is a celestial body, has an apoapsis of 520906000.0 Kilometers and an average speed of 16.54 k.p.s.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['520906000.0 (kilometres)', '16.54 (kilometrePerSeconds)']

Triple: [['__subject__ 1101 Clematis __predicate__ apoapsis __object__ 520906000.0 (kilometres)', '__subject__ 1101 Clematis __predicate__ averageSpeed __object__ 16.54 (kilometrePerSeconds)']]
Text: 1101 Clematis has an apoapsis of 520906000.0 Kilometers and an average speed of 16.54 km/s.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['520906000.0 (kilometres)', '16.54 (kilometrePerSeconds)']

Triple: [['__subject__ 1101 Clematis __predicate__ apoapsis __object__ 520906000.0 (kilometres)', '__subject__ 1101 Clematis __predicate__ averageSpeed __object__ 16.54 (kilometrePerSeconds)']]
Text: The minor planet, 1101 Clematis, has an apoapsis of 520906000.0 km and an average speed of 16.54 km/s.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['520906000.0 (kilometres)', '16.54 (kilometrePerSeconds)']

Triple: [['__subject__ 1101 Clematis __predicate__ apoapsis __object__ 520906000.0 (kilometres)', '__subject__ 1101 Clematis __predicate__ temperature __object__ 155.0 (kelvins)']]
Text: The apoapsis for 1101 Clematis is 520906000.0 (kilometres) and a temperature of 155 kelvins.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['apoapsis', 'temperature']
Object: ['520906000.0 (kilometres)', '155.0 (kelvins)']

Triple: [['__subject__ 1101 Clematis __predicate__ apoapsis __object__ 520906000.0 (kilometres)', '__subject__ 1101 Clematis __predicate__ temperature __object__ 155.0 (kelvins)']]
Text: The celestial body known as 1101 Clematis has a temperature of 155 kelvins and an apoapsis of 520906000.0 Kilometers.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['apoapsis', 'temperature']
Object: ['520906000.0 (kilometres)', '155.0 (kelvins)']

Triple: [['__subject__ 1101 Clematis __predicate__ apoapsis __object__ 520906000.0 (kilometres)', '__subject__ 1101 Clematis __predicate__ temperature __object__ 155.0 (kelvins)']]
Text: 1101 Clematis has a temperature of 155 kelvins and an apopsis of 520906000.0.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['apoapsis', 'temperature']
Object: ['520906000.0 (kilometres)', '155.0 (kelvins)']

Triple: [['__subject__ 1101 Clematis __predicate__ epoch __object__ 2006-12-31', '__subject__ 1101 Clematis __predicate__ mass __object__ 5.7 (kilograms)']]
Text: 1101 Clematis has an epoch date of December 31st 2006 and a mass of 5.7 kilograms.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['epoch', 'mass']
Object: ['2006-12-31', '5.7 (kilograms)']

Triple: [['__subject__ 1101 Clematis __predicate__ epoch __object__ 2006-12-31', '__subject__ 1101 Clematis __predicate__ mass __object__ 5.7 (kilograms)']]
Text: The epoch of 1101 Clematis is on the 31st of July 2016 and it has a mass of 5.7 kilograms.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['epoch', 'mass']
Object: ['2006-12-31', '5.7 (kilograms)']

Triple: [['__subject__ 1101 Clematis __predicate__ epoch __object__ 2006-12-31', '__subject__ 1101 Clematis __predicate__ mass __object__ 5.7 (kilograms)']]
Text: The epoch of 1101 Clematis, which has a mass of 5.7kg, is 31 December 2006.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['epoch', 'mass']
Object: ['2006-12-31', '5.7 (kilograms)']

Triple: [['__subject__ 1101 Clematis __predicate__ escapeVelocity __object__ 0.02 (kilometrePerSeconds)', '__subject__ 1101 Clematis __predicate__ apoapsis __object__ 520906000.0 (kilometres)']]
Text: 1101 Clematis has an apoapsis of 520906000.0 kilometres and an escape velocity of 0.02 kilometres per second.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.02 (kilometrePerSeconds)', '520906000.0 (kilometres)']

Triple: [['__subject__ 1101 Clematis __predicate__ escapeVelocity __object__ 0.02 (kilometrePerSeconds)', '__subject__ 1101 Clematis __predicate__ apoapsis __object__ 520906000.0 (kilometres)']]
Text: The escape velocity of 1101 Clematis is 0.02 km per sec and its apoapsis is 520906000.0 km.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.02 (kilometrePerSeconds)', '520906000.0 (kilometres)']

Triple: [['__subject__ 1101 Clematis __predicate__ escapeVelocity __object__ 0.02 (kilometrePerSeconds)', '__subject__ 1101 Clematis __predicate__ apoapsis __object__ 520906000.0 (kilometres)']]
Text: 1101 Clematis, with an escape velocity of 0.02 kmps, has an apoapsis of 520906000.0 (kilometres).
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.02 (kilometrePerSeconds)', '520906000.0 (kilometres)']

Triple: [['__subject__ 1101 Clematis __predicate__ formerName __object__ 1928 SJ', '__subject__ 1101 Clematis __predicate__ epoch __object__ 2006-12-31']]
Text: The epoch of 1101 Clematis is on the 31st of July 2016 and its former name was "1928 SJ".
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['formerName', 'epoch']
Object: ['1928 SJ', '2006-12-31']

Triple: [['__subject__ 1101 Clematis __predicate__ formerName __object__ 1928 SJ', '__subject__ 1101 Clematis __predicate__ epoch __object__ 2006-12-31']]
Text: The epoch of 1101 Clematis-formerly known as "1928 SJ" is 31 December 2006.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['formerName', 'epoch']
Object: ['1928 SJ', '2006-12-31']

Triple: [['__subject__ 1101 Clematis __predicate__ formerName __object__ 1928 SJ', '__subject__ 1101 Clematis __predicate__ epoch __object__ 2006-12-31']]
Text: 1928 SJ was the former name of 1101 Clematis, which has an epoch date of December 31st 2006.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['formerName', 'epoch']
Object: ['1928 SJ', '2006-12-31']

Triple: [['__subject__ 1101 Clematis __predicate__ mass __object__ 5.7 (kilograms)', '__subject__ 1101 Clematis __predicate__ apoapsis __object__ 520906000.0 (kilometres)']]
Text: 1101 Clematis has a mass of 5.7 kilograms and an apoapsis of 520906000.0 km.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['mass', 'apoapsis']
Object: ['5.7 (kilograms)', '520906000.0 (kilometres)']

Triple: [['__subject__ 1101 Clematis __predicate__ mass __object__ 5.7 (kilograms)', '__subject__ 1101 Clematis __predicate__ apoapsis __object__ 520906000.0 (kilometres)']]
Text: At a mass of 5.7 kgs, 1101 Clematis, has an apoapsis of 520906000.0 kilometres.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['mass', 'apoapsis']
Object: ['5.7 (kilograms)', '520906000.0 (kilometres)']

Triple: [['__subject__ 1101 Clematis __predicate__ orbitalPeriod __object__ 183309000.0', '__subject__ 1101 Clematis __predicate__ epoch __object__ 2006-12-31']]
Text: 1101 Clematis, has an orbital period of 183309000.0, and an epoch date of December 31st 2006.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['orbitalPeriod', 'epoch']
Object: ['183309000.0', '2006-12-31']

Triple: [['__subject__ 1101 Clematis __predicate__ orbitalPeriod __object__ 183309000.0', '__subject__ 1101 Clematis __predicate__ epoch __object__ 2006-12-31']]
Text: The epoch of 1101 Clematis is 31 December 2006 and it has an orbital period of 183309000.0.
Subject: ['1101 Clematis', '1101 Clematis']
Predicate: ['orbitalPeriod', 'epoch']
Object: ['183309000.0', '2006-12-31']

Triple: [['__subject__ 110 Lydia __predicate__ apoapsis __object__ 440756000.0 (kilometres)', '__subject__ 110 Lydia __predicate__ averageSpeed __object__ 17.99 (kilometrePerSeconds)']]
Text: 110 Lydia has an apoapsis of 440756000.0 kilometres and travels at an average speed of 17.99 kmps.
Subject: ['110 Lydia', '110 Lydia']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['440756000.0 (kilometres)', '17.99 (kilometrePerSeconds)']

Triple: [['__subject__ 110 Lydia __predicate__ apoapsis __object__ 440756000.0 (kilometres)', '__subject__ 110 Lydia __predicate__ averageSpeed __object__ 17.99 (kilometrePerSeconds)']]
Text: 110 Lydia travels at an average speed of 17.99 kmps and has an apoapsis of 440756000.0 (kilometres).
Subject: ['110 Lydia', '110 Lydia']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['440756000.0 (kilometres)', '17.99 (kilometrePerSeconds)']

Triple: [['__subject__ 110 Lydia __predicate__ apoapsis __object__ 440756000.0 (kilometres)', '__subject__ 110 Lydia __predicate__ temperature __object__ 168.0 (kelvins)']]
Text: 110 Lydia, with a temperature of 168.0 kelvins, has an apoapsis of 440756000.0 (kilometres).
Subject: ['110 Lydia', '110 Lydia']
Predicate: ['apoapsis', 'temperature']
Object: ['440756000.0 (kilometres)', '168.0 (kelvins)']

Triple: [['__subject__ 110 Lydia __predicate__ apoapsis __object__ 440756000.0 (kilometres)', '__subject__ 110 Lydia __predicate__ temperature __object__ 168.0 (kelvins)']]
Text: The asteroid 110 Lydia, has a temperature of 168.0 kelvins, and an apoapsis of 440756000.0 kilometres.
Subject: ['110 Lydia', '110 Lydia']
Predicate: ['apoapsis', 'temperature']
Object: ['440756000.0 (kilometres)', '168.0 (kelvins)']

Triple: [['__subject__ 110 Lydia __predicate__ apoapsis __object__ 440756000.0 (kilometres)', '__subject__ 110 Lydia __predicate__ temperature __object__ 168.0 (kelvins)']]
Text: 110 Lydia has a temperature of 168 kelvins and its apoapsis is 440756000.0 kilometres.
Subject: ['110 Lydia', '110 Lydia']
Predicate: ['apoapsis', 'temperature']
Object: ['440756000.0 (kilometres)', '168.0 (kelvins)']

Triple: [['__subject__ 110 Lydia __predicate__ escapeVelocity __object__ 0.0455 (kilometrePerSeconds)', '__subject__ 110 Lydia __predicate__ apoapsis __object__ 440756000.0 (kilometres)']]
Text: 110 Lydia has an escape velocity of 0.0455 km per second and an apoapsis of 440756000.0 km.
Subject: ['110 Lydia', '110 Lydia']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0455 (kilometrePerSeconds)', '440756000.0 (kilometres)']

Triple: [['__subject__ 110 Lydia __predicate__ escapeVelocity __object__ 0.0455 (kilometrePerSeconds)', '__subject__ 110 Lydia __predicate__ apoapsis __object__ 440756000.0 (kilometres)']]
Text: The apoapsis for 110 Lydia is 440756000.0 (kilometres) and has an escape velocity of 0.0455 kilometres per second.
Subject: ['110 Lydia', '110 Lydia']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0455 (kilometrePerSeconds)', '440756000.0 (kilometres)']

Triple: [['__subject__ 110 Lydia __predicate__ escapeVelocity __object__ 0.0455 (kilometrePerSeconds)', '__subject__ 110 Lydia __predicate__ apoapsis __object__ 440756000.0 (kilometres)']]
Text: 110 Lydia, with an escape velocity of 0.0455 km/s, has an apoapsis of 440756000.0 (kilometres).
Subject: ['110 Lydia', '110 Lydia']
Predicate: ['escapeVelocity', 'apoapsis']
Object: ['0.0455 (kilometrePerSeconds)', '440756000.0 (kilometres)']

Triple: [['__subject__ 110 Lydia __predicate__ mass __object__ 6.7 (kilograms)', '__subject__ 110 Lydia __predicate__ apoapsis __object__ 440756000.0 (kilometres)']]
Text: 110 Lydia has a mass of 6.7kg and an apoapsis of 440756000.0 km.
Subject: ['110 Lydia', '110 Lydia']
Predicate: ['mass', 'apoapsis']
Object: ['6.7 (kilograms)', '440756000.0 (kilometres)']

Triple: [['__subject__ 110 Lydia __predicate__ mass __object__ 6.7 (kilograms)', '__subject__ 110 Lydia __predicate__ apoapsis __object__ 440756000.0 (kilometres)']]
Text: 110 Lydia has a mass of 6.7 kilograms and an apoapsis of 440756000.0 (kilometres).
Subject: ['110 Lydia', '110 Lydia']
Predicate: ['mass', 'apoapsis']
Object: ['6.7 (kilograms)', '440756000.0 (kilometres)']

Triple: [['__subject__ 110 Lydia __predicate__ mass __object__ 6.7 (kilograms)', '__subject__ 110 Lydia __predicate__ apoapsis __object__ 440756000.0 (kilometres)']]
Text: 110 Lydia has a mass of 6.7 kg and an apoapsis of 440756000.0 km.
Subject: ['110 Lydia', '110 Lydia']
Predicate: ['mass', 'apoapsis']
Object: ['6.7 (kilograms)', '440756000.0 (kilometres)']

Triple: [['__subject__ 110 Lydia __predicate__ periapsis __object__ 377016000000.0', '__subject__ 110 Lydia __predicate__ epoch __object__ 2006-12-31']]
Text: 110 Lydia has a periapsis of 377016000000.0 and its epoch was on 31st December 2006.
Subject: ['110 Lydia', '110 Lydia']
Predicate: ['periapsis', 'epoch']
Object: ['377016000000.0', '2006-12-31']

Triple: [['__subject__ 110 Lydia __predicate__ periapsis __object__ 377016000000.0', '__subject__ 110 Lydia __predicate__ epoch __object__ 2006-12-31']]
Text: 110 Lydia has an epoch date of December 31st 2006 and its periapsis is 377016000000.0.
Subject: ['110 Lydia', '110 Lydia']
Predicate: ['periapsis', 'epoch']
Object: ['377016000000.0', '2006-12-31']

Triple: [['__subject__ 110 Lydia __predicate__ periapsis __object__ 377016000000.0', '__subject__ 110 Lydia __predicate__ epoch __object__ 2006-12-31']]
Text: The periapsis of 110 Lydia is 377016000000.0 and the epoch date is 31.12.2006.
Subject: ['110 Lydia', '110 Lydia']
Predicate: ['periapsis', 'epoch']
Object: ['377016000000.0', '2006-12-31']

Triple: [['__subject__ 110 Lydia __predicate__ rotationPeriod __object__ 39332.9', '__subject__ 110 Lydia __predicate__ apoapsis __object__ 440756000.0 (kilometres)']]
Text: The apoapsis for 110 Lydia is 440756000.0 (kilometres), it has a rotation period of 39332.9.
Subject: ['110 Lydia', '110 Lydia']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['39332.9', '440756000.0 (kilometres)']

Triple: [['__subject__ 110 Lydia __predicate__ rotationPeriod __object__ 39332.9', '__subject__ 110 Lydia __predicate__ apoapsis __object__ 440756000.0 (kilometres)']]
Text: 110 Lydia has a rotational period of 39332.9 and its apoapsis is 440756000.0 kilometres.
Subject: ['110 Lydia', '110 Lydia']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['39332.9', '440756000.0 (kilometres)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)', '__subject__ 11264 Claudiomaccone __predicate__ averageSpeed __object__ 18.29 (kilometrePerSeconds)']]
Text: 11264 Claudiomaccone has an apoapsis of 475426000 km and an average speed of 18.29 km/s.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['475426000.0 (kilometres)', '18.29 (kilometrePerSeconds)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)', '__subject__ 11264 Claudiomaccone __predicate__ averageSpeed __object__ 18.29 (kilometrePerSeconds)']]
Text: The asteroid, called 11264 Claudiomaccone, has an average speed of 18.29 kilometres per second, and an apoapsis of 475426000.0 kilometres.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['475426000.0 (kilometres)', '18.29 (kilometrePerSeconds)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)', '__subject__ 11264 Claudiomaccone __predicate__ averageSpeed __object__ 18.29 (kilometrePerSeconds)']]
Text: 11264 Claudiomaccone has an apoapsis of 475426000.0 kilometres and an average speed of 18.29 kilometres per second.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['apoapsis', 'averageSpeed']
Object: ['475426000.0 (kilometres)', '18.29 (kilometrePerSeconds)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)', '__subject__ 11264 Claudiomaccone __predicate__ temperature __object__ 173.0 (kelvins)']]
Text: 11264 Claudiomaccone has a temperature of 173.0 kelvins and its apoapsis is 475426000.0 kilometres.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['apoapsis', 'temperature']
Object: ['475426000.0 (kilometres)', '173.0 (kelvins)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)', '__subject__ 11264 Claudiomaccone __predicate__ temperature __object__ 173.0 (kelvins)']]
Text: 11264 Claudiomaccone has an apoapsis of 475426000 kilometres and a temperature of 173.0 (kelvins).
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['apoapsis', 'temperature']
Object: ['475426000.0 (kilometres)', '173.0 (kelvins)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)', '__subject__ 11264 Claudiomaccone __predicate__ temperature __object__ 173.0 (kelvins)']]
Text: 11264 Claudiomaccone has a temperature of 173.0 kelvin and an apoapsis of 475426000.0 km.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['apoapsis', 'temperature']
Object: ['475426000.0 (kilometres)', '173.0 (kelvins)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ epoch __object__ 2005-11-26', '__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)']]
Text: 11264 Claudiomaccone has an epoch date of 26th November 2005 and an apoapsis of 475426000.0 km.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['epoch', 'apoapsis']
Object: ['2005-11-26', '475426000.0 (kilometres)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ epoch __object__ 2005-11-26', '__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)']]
Text: 11264 Claudiomaccone has an epoch date of November 26th 2005 and the apoapsis is 475426000.0 (kilometres).
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['epoch', 'apoapsis']
Object: ['2005-11-26', '475426000.0 (kilometres)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ epoch __object__ 2005-11-26', '__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)']]
Text: The apoapsis for 11264 Claudiomaccone is 475426000.0 (kilometres), it has the epoch date of 26 November 2005.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['epoch', 'apoapsis']
Object: ['2005-11-26', '475426000.0 (kilometres)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ epoch __object__ 2005-11-26', '__subject__ 11264 Claudiomaccone __predicate__ orbitalPeriod __object__ 1513.722 (days)']]
Text: 11264 Claudiomaccone has the epoch date of 26 November 2005 and the orbital period is 1513.722 days.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2005-11-26', '1513.722 (days)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ epoch __object__ 2005-11-26', '__subject__ 11264 Claudiomaccone __predicate__ orbitalPeriod __object__ 1513.722 (days)']]
Text: 11264 Claudiomaccone has an epoch date of 26th November 2005 and an orbital period of 1513.722 days.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2005-11-26', '1513.722 (days)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ epoch __object__ 2005-11-26', '__subject__ 11264 Claudiomaccone __predicate__ orbitalPeriod __object__ 1513.722 (days)']]
Text: 11264 Claudiomaccone has an epoch date of November 26th 2005 and an orbital period of 1513.722 days.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['epoch', 'orbitalPeriod']
Object: ['2005-11-26', '1513.722 (days)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ epoch __object__ 2005-11-26', '__subject__ 11264 Claudiomaccone __predicate__ rotationPeriod __object__ 11473.9']]
Text: 11264 Claudiomaccone has the epoch date of 26 November 2005 and a rotation period of 11473.9.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['epoch', 'rotationPeriod']
Object: ['2005-11-26', '11473.9']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ epoch __object__ 2005-11-26', '__subject__ 11264 Claudiomaccone __predicate__ rotationPeriod __object__ 11473.9']]
Text: 11264 Claudiomaccone has an epoch date of November 26th 2005 and its rotation period is 11473.9.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['epoch', 'rotationPeriod']
Object: ['2005-11-26', '11473.9']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ epoch __object__ 2005-11-26', '__subject__ 11264 Claudiomaccone __predicate__ rotationPeriod __object__ 11473.9']]
Text: 11264 Claudiomaccone has an epoch date of November 26th 2005, and the rotaional period is 11473.9.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['epoch', 'rotationPeriod']
Object: ['2005-11-26', '11473.9']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ orbitalPeriod __object__ 1513.722 (days)', '__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)']]
Text: 11264 Claudiomaccone's orbital period is 1513.722 days, and an apoapsis of 475426000.0 (kilometres).
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['orbitalPeriod', 'apoapsis']
Object: ['1513.722 (days)', '475426000.0 (kilometres)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ orbitalPeriod __object__ 1513.722 (days)', '__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)']]
Text: 11264 Claudiomaccone has an apoapsis of 475426000.0 kilometres and the orbital period of 1513.722 days.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['orbitalPeriod', 'apoapsis']
Object: ['1513.722 (days)', '475426000.0 (kilometres)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ orbitalPeriod __object__ 1513.722 (days)', '__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)']]
Text: 11264 Claudiomaccone, has an apoapsis of 475426000 kilometres, and an orbital period of 1513.722 days.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['orbitalPeriod', 'apoapsis']
Object: ['1513.722 (days)', '475426000.0 (kilometres)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ rotationPeriod __object__ 11473.9', '__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)']]
Text: 11264 Claudiomaccone, with a rotation period of 11473.9, has an apoapsis of 475426000 kilometres.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['11473.9', '475426000.0 (kilometres)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ rotationPeriod __object__ 11473.9', '__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)']]
Text: The celestial body, 11264 Claudiomaccone, has a rotation period of 11473.9 and an apoapsis of 475426000.0 km.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['11473.9', '475426000.0 (kilometres)']

Triple: [['__subject__ 11264 Claudiomaccone __predicate__ rotationPeriod __object__ 11473.9', '__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)']]
Text: 11264 Claudiomaccone has an apoapsis of 475426000.0 kilometres and a rotation period of 11473.9.
Subject: ['11264 Claudiomaccone', '11264 Claudiomaccone']
Predicate: ['rotationPeriod', 'apoapsis']
Object: ['11473.9', '475426000.0 (kilometres)']

Triple: [['__subject__ Abilene, Texas __predicate__ country __object__ United States', '__subject__ Abilene, Texas __predicate__ isPartOf __object__ Taylor County, Texas']]
Text: Abilene is part of Taylor County in Texas, in the United States.
Subject: ['Abilene, Texas', 'Abilene, Texas']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Taylor County, Texas']

Triple: [['__subject__ Abilene, Texas __predicate__ country __object__ United States', '__subject__ Abilene, Texas __predicate__ isPartOf __object__ Taylor County, Texas']]
Text: Abilene is located in Taylor County, Texas, United States.
Subject: ['Abilene, Texas', 'Abilene, Texas']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Taylor County, Texas']

Triple: [['__subject__ Abilene, Texas __predicate__ country __object__ United States', '__subject__ Abilene, Texas __predicate__ isPartOf __object__ Taylor County, Texas']]
Text: Abilene is located in Taylor County, Texas in the United States.
Subject: ['Abilene, Texas', 'Abilene, Texas']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Taylor County, Texas']

Triple: [['__subject__ Abilene, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Abilene, Texas is part of the United States of America where African Americans are one of the ethnic groups.
Subject: ['Abilene, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Abilene, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Abilene, Texas is located in the United States where African Americans are one of the ethnic groups.
Subject: ['Abilene, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Abilene, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: The United States is home to an ethnic group called Asian Americans and is also where you will find Abilene, Texas.
Subject: ['Abilene, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Abilene, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Abilene, Texas is in the United States, where Asian Americans are an ethnic group.
Subject: ['Abilene, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Abilene, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Abilene, Texas is located in the United States, a country which has many ethnic groups, such as Asian Americans.
Subject: ['Abilene, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Abilene, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Abilene is located in Texas, United States and one of the country's ethnic groups are the Native Americans.
Subject: ['Abilene, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Abilene, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Abilene is part of Texas in the United States where one of the ethnic groups are Native Americans.
Subject: ['Abilene, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Abilene, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Abilene, Texas, is located in the United States, where one of the ethnic groups are the Native Americans.
Subject: ['Abilene, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Jones County, Texas', '__subject__ Abilene, Texas __predicate__ country __object__ United States']]
Text: Abilene is part of Jones County, Texas, which is located within the United States.
Subject: ['Abilene, Texas', 'Abilene, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Jones County, Texas', 'United States']

Triple: [['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Jones County, Texas', '__subject__ Abilene, Texas __predicate__ country __object__ United States']]
Text: Abilene is located in Jones County, Texas, United States.
Subject: ['Abilene, Texas', 'Abilene, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Jones County, Texas', 'United States']

Triple: [['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Jones County, Texas', '__subject__ Abilene, Texas __predicate__ country __object__ United States']]
Text: Abilene is part of Jones County, Texas, United States.
Subject: ['Abilene, Texas', 'Abilene, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Jones County, Texas', 'United States']

Triple: [['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Jones County, Texas', '__subject__ Jones County, Texas __predicate__ country __object__ United States']]
Text: Abilene is part of Jones County, Texas in the United States.
Subject: ['Abilene, Texas', 'Jones County, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Jones County, Texas', 'United States']

Triple: [['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Jones County, Texas', '__subject__ Jones County, Texas __predicate__ country __object__ United States']]
Text: Abilene is part of Jones County, Texas, U.S.
Subject: ['Abilene, Texas', 'Jones County, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Jones County, Texas', 'United States']

Triple: [['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Jones County, Texas', '__subject__ Jones County, Texas __predicate__ country __object__ United States']]
Text: Abilene is found in Jones County, Texas in the United States.
Subject: ['Abilene, Texas', 'Jones County, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Jones County, Texas', 'United States']

Triple: [['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Taylor County, Texas', '__subject__ Taylor County, Texas __predicate__ country __object__ United States']]
Text: Abilene is part of Taylor County, Texas, in the United States.
Subject: ['Abilene, Texas', 'Taylor County, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Taylor County, Texas', 'United States']

Triple: [['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Taylor County, Texas', '__subject__ Taylor County, Texas __predicate__ country __object__ United States']]
Text: Abilene, is located in Taylor County, Texas, in the United States.
Subject: ['Abilene, Texas', 'Taylor County, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Taylor County, Texas', 'United States']

Triple: [['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Taylor County, Texas', '__subject__ Taylor County, Texas __predicate__ country __object__ United States']]
Text: Abilene is part of Taylor County in Texas, in the United States.
Subject: ['Abilene, Texas', 'Taylor County, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Taylor County, Texas', 'United States']

Triple: [['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Texas', '__subject__ Abilene, Texas __predicate__ country __object__ United States']]
Text: Abilene can be located in Texas which is part of the United States of America.
Subject: ['Abilene, Texas', 'Abilene, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Texas', 'United States']

Triple: [['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Texas', '__subject__ Abilene, Texas __predicate__ country __object__ United States']]
Text: Abilene is part of Texas, United States.
Subject: ['Abilene, Texas', 'Abilene, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Texas', 'United States']

Triple: [['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Texas', '__subject__ Abilene, Texas __predicate__ country __object__ United States']]
Text: Abilene is located in Texas, United States.
Subject: ['Abilene, Texas', 'Abilene, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Texas', 'United States']

Triple: [['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Texas', '__subject__ Texas __predicate__ country __object__ United States']]
Text: Abilene is part of Texas in the United States.
Subject: ['Abilene, Texas', 'Texas']
Predicate: ['isPartOf', 'country']
Object: ['Texas', 'United States']

Triple: [['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Texas', '__subject__ Texas __predicate__ country __object__ United States']]
Text: Abilene is part of Texas which is located in the United States of America.
Subject: ['Abilene, Texas', 'Texas']
Predicate: ['isPartOf', 'country']
Object: ['Texas', 'United States']

Triple: [['__subject__ Abilene, Texas __predicate__ populationDensity __object__ 429.9 (inhabitants per square kilometre)', '__subject__ Abilene, Texas __predicate__ areaTotal __object__ 286.5 (square kilometres)']]
Text: Abilene, Texas has a population density of 429.9 inhabitants per sq km and a total area of 286.5 sq km.
Subject: ['Abilene, Texas', 'Abilene, Texas']
Predicate: ['populationDensity', 'areaTotal']
Object: ['429.9 (inhabitants per square kilometre)', '286.5 (square kilometres)']

Triple: [['__subject__ Abilene, Texas __predicate__ populationDensity __object__ 429.9 (inhabitants per square kilometre)', '__subject__ Abilene, Texas __predicate__ areaTotal __object__ 286.5 (square kilometres)']]
Text: Abilene, Texas, covers a total area of 286.5 square kilometres and has 429.9 inhabitants per sq kilometre.
Subject: ['Abilene, Texas', 'Abilene, Texas']
Predicate: ['populationDensity', 'areaTotal']
Object: ['429.9 (inhabitants per square kilometre)', '286.5 (square kilometres)']

Triple: [['__subject__ Akron, Ohio __predicate__ isPartOf __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Akron, Ohio is part of the United States, where African Americans are one of the ethnic groups.
Subject: ['Akron, Ohio', 'United States']
Predicate: ['isPartOf', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Akron, Ohio __predicate__ isPartOf __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Akron, Ohio is part of the United States and African Americans are an ethnic group within the U.S.
Subject: ['Akron, Ohio', 'United States']
Predicate: ['isPartOf', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Akron, Ohio __predicate__ isPartOf __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: African Americans are an ethnic group in the United States and Akron Ohio is part of the U.S.
Subject: ['Akron, Ohio', 'United States']
Predicate: ['isPartOf', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Akron, Ohio __predicate__ isPartOf __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Akron, Ohio is part of the U.S. where Native Americans are an ethnic group.
Subject: ['Akron, Ohio', 'United States']
Predicate: ['isPartOf', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Akron, Ohio __predicate__ isPartOf __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Akron Ohio is part of the United States of America, in which one of the ethnic groups is Native Americans.
Subject: ['Akron, Ohio', 'United States']
Predicate: ['isPartOf', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Akron, Ohio __predicate__ isPartOf __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Akron, Ohio is part of the United States where Native Americans are one of the ethnic groups.
Subject: ['Akron, Ohio', 'United States']
Predicate: ['isPartOf', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Akron, Ohio __predicate__ populationDensity __object__ 1239.3 (inhabitants per square kilometre)', '__subject__ Akron, Ohio __predicate__ areaTotal __object__ 161.54 (square kilometres)']]
Text: The total area of Akron, Ohio, is 161.54 square kilometres and the population density is 1239.3 inhabitants per square kilometre.
Subject: ['Akron, Ohio', 'Akron, Ohio']
Predicate: ['populationDensity', 'areaTotal']
Object: ['1239.3 (inhabitants per square kilometre)', '161.54 (square kilometres)']

Triple: [['__subject__ Akron, Ohio __predicate__ populationDensity __object__ 1239.3 (inhabitants per square kilometre)', '__subject__ Akron, Ohio __predicate__ areaTotal __object__ 161.54 (square kilometres)']]
Text: Akron, Ohio with a total area of 161.54 sq km, has a population density of 1239.3 inhabitants per square kilometre.
Subject: ['Akron, Ohio', 'Akron, Ohio']
Predicate: ['populationDensity', 'areaTotal']
Object: ['1239.3 (inhabitants per square kilometre)', '161.54 (square kilometres)']

Triple: [['__subject__ Alabama __predicate__ country __object__ United States', '__subject__ Auburn, Alabama __predicate__ isPartOf __object__ Alabama']]
Text: Auburn is located in Alabama, in the United States.
Subject: ['Alabama', 'Auburn, Alabama']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Alabama']

Triple: [['__subject__ Alabama __predicate__ country __object__ United States', '__subject__ Auburn, Alabama __predicate__ isPartOf __object__ Alabama']]
Text: Auburn is part of Alabama, in the United States.
Subject: ['Alabama', 'Auburn, Alabama']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Alabama']

Triple: [['__subject__ Alabama __predicate__ country __object__ United States', '__subject__ Auburn, Alabama __predicate__ isPartOf __object__ Alabama']]
Text: Auburn is part of Alabama in the United States.
Subject: ['Alabama', 'Auburn, Alabama']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Alabama']

Triple: [['__subject__ Albany, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Albany, Georgia is found within the United States where one of the ethnic groups are the African Americans.
Subject: ['Albany, Georgia', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Albany, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Albany, Georgia, is part of the United States, where African Americans are an ethnic group.
Subject: ['Albany, Georgia', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Albany, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Albany is in Georgia in the United States, the country where African Americans are an ethnic group.
Subject: ['Albany, Georgia', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Albany, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Native Americans are an ethnic group in the United States, where Albany, Georgia can be found.
Subject: ['Albany, Georgia', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Albany, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: The United States is the location for Albany, Georgia and includes the Native Americans among its ethnic groups.
Subject: ['Albany, Georgia', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Albany, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Native Americans are one of the ethnic groups in the United States of America where Albany, Georgia is located.
Subject: ['Albany, Georgia', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Albany, Georgia __predicate__ isPartOf __object__ Georgia (U.S. state)', '__subject__ Georgia (U.S. state) __predicate__ capital __object__ Atlanta']]
Text: Albany is located in the US state of Georgia, of which Atlanta is the capital.
Subject: ['Albany, Georgia', 'Georgia (U.S. state)']
Predicate: ['isPartOf', 'capital']
Object: ['Georgia (U.S. state)', 'Atlanta']

Triple: [['__subject__ Albany, Georgia __predicate__ populationDensity __object__ 535.0 (inhabitants per square kilometre)', '__subject__ Albany, Georgia __predicate__ areaTotal __object__ 144.7 (square kilometres)']]
Text: The population density of Albany, Georgia is 535.0 inhabitants per square kilometre and the total area is 144.7 SqKm.
Subject: ['Albany, Georgia', 'Albany, Georgia']
Predicate: ['populationDensity', 'areaTotal']
Object: ['535.0 (inhabitants per square kilometre)', '144.7 (square kilometres)']

Triple: [['__subject__ Albany, Georgia __predicate__ populationDensity __object__ 535.0 (inhabitants per square kilometre)', '__subject__ Albany, Georgia __predicate__ areaTotal __object__ 144.7 (square kilometres)']]
Text: Albany, Georgia has a total area of 144.7 sq km and a population density of 535.0 inhabitants per square kilometre.
Subject: ['Albany, Georgia', 'Albany, Georgia']
Predicate: ['populationDensity', 'areaTotal']
Object: ['535.0 (inhabitants per square kilometre)', '144.7 (square kilometres)']

Triple: [['__subject__ Albany, Georgia __predicate__ populationDensity __object__ 535.0 (inhabitants per square kilometre)', '__subject__ Albany, Georgia __predicate__ areaTotal __object__ 144.7 (square kilometres)']]
Text: Albany in Georgia has a population density of 535 people per sq km and has a total area of 144.7 sq kms.
Subject: ['Albany, Georgia', 'Albany, Georgia']
Predicate: ['populationDensity', 'areaTotal']
Object: ['535.0 (inhabitants per square kilometre)', '144.7 (square kilometres)']

Triple: [['__subject__ Albany, Oregon __predicate__ areaTotal __object__ 45.97 (square kilometres)', '__subject__ Albany, Oregon __predicate__ populationDensity __object__ 1104.1 (inhabitants per square kilometre)']]
Text: Albany, Oregon has a population density of 1104.1 inhabitants per square kilometre and covers an area of 45.97 sq km.
Subject: ['Albany, Oregon', 'Albany, Oregon']
Predicate: ['areaTotal', 'populationDensity']
Object: ['45.97 (square kilometres)', '1104.1 (inhabitants per square kilometre)']

Triple: [['__subject__ Albany, Oregon __predicate__ areaTotal __object__ 45.97 (square kilometres)', '__subject__ Albany, Oregon __predicate__ populationDensity __object__ 1104.1 (inhabitants per square kilometre)']]
Text: Albany, in Oregon has a population density of 1104.1 inhabitants per sq km and a total area of 45.97 sq km.
Subject: ['Albany, Oregon', 'Albany, Oregon']
Predicate: ['areaTotal', 'populationDensity']
Object: ['45.97 (square kilometres)', '1104.1 (inhabitants per square kilometre)']

Triple: [['__subject__ Albany, Oregon __predicate__ areaTotal __object__ 45.97 (square kilometres)', '__subject__ Albany, Oregon __predicate__ populationDensity __object__ 1104.1 (inhabitants per square kilometre)']]
Text: The total area of Albany, Oregon is 45.97 sq km and the population density is 1104.1 inhabitants per sq km.
Subject: ['Albany, Oregon', 'Albany, Oregon']
Predicate: ['areaTotal', 'populationDensity']
Object: ['45.97 (square kilometres)', '1104.1 (inhabitants per square kilometre)']

Triple: [['__subject__ Albany, Oregon __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: The United States includes the ethnic group of African Americans and is the location of Albany, Oregon.
Subject: ['Albany, Oregon', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Albany, Oregon __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Albany, Oregon is in the United States and African Americans are one ethnic group in that country.
Subject: ['Albany, Oregon', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Albany, Oregon __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: The United States is the location of Albany, Oregon and includes the African Americans among its ethnic groups.
Subject: ['Albany, Oregon', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Albany, Oregon __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: The United States has an ethnic group called Native Americans and is where you will find Albany, Oregon.
Subject: ['Albany, Oregon', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Albany, Oregon __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Albany, Oregon is part of the U.S. where one of the ethnic groups are Native Americans.
Subject: ['Albany, Oregon', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Albany, Oregon __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Albany, Oregon is in the United States, where Native Americans are one of the ethnic groups.
Subject: ['Albany, Oregon', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Albany, Oregon __predicate__ isPartOf __object__ Benton County, Oregon', '__subject__ Benton County, Oregon __predicate__ largestCity __object__ Corvallis, Oregon']]
Text: Albany is part of Benton County in Oregon, where the largest city is Corvallis.
Subject: ['Albany, Oregon', 'Benton County, Oregon']
Predicate: ['isPartOf', 'largestCity']
Object: ['Benton County, Oregon', 'Corvallis, Oregon']

Triple: [['__subject__ Albany, Oregon __predicate__ isPartOf __object__ Benton County, Oregon', '__subject__ Benton County, Oregon __predicate__ largestCity __object__ Corvallis, Oregon']]
Text: Albany is part of Benton County, Oregon, which is home to the largest city of Corvallis.
Subject: ['Albany, Oregon', 'Benton County, Oregon']
Predicate: ['isPartOf', 'largestCity']
Object: ['Benton County, Oregon', 'Corvallis, Oregon']

Triple: [['__subject__ Albany, Oregon __predicate__ isPartOf __object__ Benton County, Oregon', '__subject__ Benton County, Oregon __predicate__ largestCity __object__ Corvallis, Oregon']]
Text: Albany is part of Benton County in Oregon, where the largest city, in Benton, is Corvallis.
Subject: ['Albany, Oregon', 'Benton County, Oregon']
Predicate: ['isPartOf', 'largestCity']
Object: ['Benton County, Oregon', 'Corvallis, Oregon']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ areaOfLand __object__ 486.2 (square kilometres)', '__subject__ Albuquerque, New Mexico __predicate__ areaTotal __object__ 490.9 (square kilometres)']]
Text: The land area of Albuquerque, New Mexico is 486.2 square kilometres while its total area is 490.9 square kilometres.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['areaOfLand', 'areaTotal']
Object: ['486.2 (square kilometres)', '490.9 (square kilometres)']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ areaOfLand __object__ 486.2 (square kilometres)', '__subject__ Albuquerque, New Mexico __predicate__ areaTotal __object__ 490.9 (square kilometres)']]
Text: The total area of Albuquerque, New Mexico is 490.9 square kilometres, the area of land is 486.2 square kilometers.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['areaOfLand', 'areaTotal']
Object: ['486.2 (square kilometres)', '490.9 (square kilometres)']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States', '__subject__ Albuquerque, New Mexico __predicate__ isPartOf __object__ New Mexico']]
Text: Albuquerque, is in New Mexico, in the United States.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'New Mexico']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States', '__subject__ Albuquerque, New Mexico __predicate__ isPartOf __object__ New Mexico']]
Text: Albuquerque is part of New Mexico in the United States.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'New Mexico']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States', '__subject__ Albuquerque, New Mexico __predicate__ isPartOf __object__ New Mexico']]
Text: Albuquerque is located in New Mexico, United States.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'New Mexico']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ isPartOf __object__ Bernalillo County, New Mexico', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Albuquerque, New Mexico, is part of Bernalillo County, United States.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['isPartOf', 'country']
Object: ['Bernalillo County, New Mexico', 'United States']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ isPartOf __object__ Bernalillo County, New Mexico', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Albuquerque is located in Bernalillo County, New Mexico, United States.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['isPartOf', 'country']
Object: ['Bernalillo County, New Mexico', 'United States']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ isPartOf __object__ Bernalillo County, New Mexico', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Albuquerque, New Mexico is part of Bernalillo County, New Mexico, in the United States.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['isPartOf', 'country']
Object: ['Bernalillo County, New Mexico', 'United States']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ Albuquerque City Council', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: The Albuquerque City Council has a leadership role in Albuquerque, New Mexico, in the United States.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['leaderTitle', 'country']
Object: ['Albuquerque City Council', 'United States']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ Albuquerque City Council', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Albuquerque in New Mexico, United States, is led by the Albuquerque City Council.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['leaderTitle', 'country']
Object: ['Albuquerque City Council', 'United States']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ Albuquerque City Council', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: The Albuquerque City Council has a leadership role in Albuquerque, New Mexico, United States.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['leaderTitle', 'country']
Object: ['Albuquerque City Council', 'United States']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ Mayor', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Albuquerque, New Mexico, is within the United States and the leader is the Mayor.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['leaderTitle', 'country']
Object: ['Mayor', 'United States']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ Mayor', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Albuquerque in New Mexico, United States is led by a Mayor.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['leaderTitle', 'country']
Object: ['Mayor', 'United States']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ Mayor of Albuquerque', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Albuquerque, New Mexico, U.S. is led by the Mayor of Albuquerque.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['leaderTitle', 'country']
Object: ['Mayor of Albuquerque', 'United States']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ Mayor of Albuquerque', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: The leader of Albuquerque, New Mexico, US, is the Mayor of Albuquerque.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['leaderTitle', 'country']
Object: ['Mayor of Albuquerque', 'United States']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ New Mexico House of Representatives', '__subject__ Albuquerque, New Mexico __predicate__ areaTotal __object__ 490.9 (square kilometres)']]
Text: The total area of Albuquerque, New Mexico is 490.9 square kilometres and the city is led by the New Mexico House of Representatives.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['leaderTitle', 'areaTotal']
Object: ['New Mexico House of Representatives', '490.9 (square kilometres)']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ New Mexico House of Representatives', '__subject__ Albuquerque, New Mexico __predicate__ areaTotal __object__ 490.9 (square kilometres)']]
Text: Albuquerque, New Mexico, is led by the New Mexico House of representatives and covers an area of 490.9 square kilometres.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['leaderTitle', 'areaTotal']
Object: ['New Mexico House of Representatives', '490.9 (square kilometres)']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ New Mexico House of Representatives', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Albuquerque, New Mexico, United States, is led by the New Mexico house of representatives.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['leaderTitle', 'country']
Object: ['New Mexico House of Representatives', 'United States']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ New Mexico House of Representatives', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: In the United States, the New Mexico House of Representatives, is what the leader in Albuquerque (New Mexico), is called.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['leaderTitle', 'country']
Object: ['New Mexico House of Representatives', 'United States']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ New Mexico House of Representatives', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Albuquerque, New Mexico is in the United States and led by the New Mexico House of Representatives.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['leaderTitle', 'country']
Object: ['New Mexico House of Representatives', 'United States']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ New Mexico Senate', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Albuquerque, New Mexico, is within the United States and led by the New Mexico Senate.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['leaderTitle', 'country']
Object: ['New Mexico Senate', 'United States']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ New Mexico Senate', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Albuquerque, New Mexico, United States is led by the New Mexico Senate.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['leaderTitle', 'country']
Object: ['New Mexico Senate', 'United States']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ New Mexico Senate', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: The New Mexico Senate leads Albuquerque in the U.S.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['leaderTitle', 'country']
Object: ['New Mexico Senate', 'United States']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ populationDensity __object__ 1142.3 (inhabitants per square kilometre)', '__subject__ Albuquerque, New Mexico __predicate__ areaTotal __object__ 490.9 (square kilometres)']]
Text: Albuquerque, in New Mexico, has a population density of 1142,3 inhabitants per sq km and a total area of 490.9 sq km.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['populationDensity', 'areaTotal']
Object: ['1142.3 (inhabitants per square kilometre)', '490.9 (square kilometres)']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ populationDensity __object__ 1142.3 (inhabitants per square kilometre)', '__subject__ Albuquerque, New Mexico __predicate__ areaTotal __object__ 490.9 (square kilometres)']]
Text: Albuquerque, in New Mexico, has a total area of 490.9 square kilometres and its population density is 1142.3 people per sq. km.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['populationDensity', 'areaTotal']
Object: ['1142.3 (inhabitants per square kilometre)', '490.9 (square kilometres)']

Triple: [['__subject__ Albuquerque, New Mexico __predicate__ populationDensity __object__ 1142.3 (inhabitants per square kilometre)', '__subject__ Albuquerque, New Mexico __predicate__ areaTotal __object__ 490.9 (square kilometres)']]
Text: With a total are of 490.9 square kilometres, Albuquerque, in New Mexico, has a population density of 1142.3 inhabitants per square kilometre.
Subject: ['Albuquerque, New Mexico', 'Albuquerque, New Mexico']
Predicate: ['populationDensity', 'areaTotal']
Object: ['1142.3 (inhabitants per square kilometre)', '490.9 (square kilometres)']

Triple: [['__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Indiana', '__subject__ Indiana __predicate__ country __object__ United States']]
Text: Alexandria is part of the state of Indiana, which can be found in the United States.
Subject: ['Alexandria, Indiana', 'Indiana']
Predicate: ['isPartOf', 'country']
Object: ['Indiana', 'United States']

Triple: [['__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Indiana', '__subject__ Indiana __predicate__ country __object__ United States']]
Text: Alexandria can be found in the state of Indiana in the United States.
Subject: ['Alexandria, Indiana', 'Indiana']
Predicate: ['isPartOf', 'country']
Object: ['Indiana', 'United States']

Triple: [['__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Indiana', '__subject__ Indiana __predicate__ country __object__ United States']]
Text: Alexandria is located in Indiana, United States.
Subject: ['Alexandria, Indiana', 'Indiana']
Predicate: ['isPartOf', 'country']
Object: ['Indiana', 'United States']

Triple: [['__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Madison County, Indiana', '__subject__ Madison County, Indiana __predicate__ largestCity __object__ Anderson, Indiana']]
Text: Alexandria is located in Indiana, part of Madison County which has Anderson as its largest city.
Subject: ['Alexandria, Indiana', 'Madison County, Indiana']
Predicate: ['isPartOf', 'largestCity']
Object: ['Madison County, Indiana', 'Anderson, Indiana']

Triple: [['__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Madison County, Indiana', '__subject__ Madison County, Indiana __predicate__ largestCity __object__ Anderson, Indiana']]
Text: Alexandria is part of Madison County, Indiana, the largest city of that area is Anderson.
Subject: ['Alexandria, Indiana', 'Madison County, Indiana']
Predicate: ['isPartOf', 'largestCity']
Object: ['Madison County, Indiana', 'Anderson, Indiana']

Triple: [['__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Madison County, Indiana', '__subject__ Madison County, Indiana __predicate__ largestCity __object__ Anderson, Indiana']]
Text: Alexandria is part of Madison County, Indiana where Anderson is the largest city.
Subject: ['Alexandria, Indiana', 'Madison County, Indiana']
Predicate: ['isPartOf', 'largestCity']
Object: ['Madison County, Indiana', 'Anderson, Indiana']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ areaTotal __object__ 55.4 (square kilometres)', '__subject__ Alpharetta, Georgia __predicate__ populationDensity __object__ 992.6 (inhabitants per square kilometre)']]
Text: Alpharetta in Georgia has a total area of 55.4 sq km and a population density of 992.6 inhabitants per sq km.
Subject: ['Alpharetta, Georgia', 'Alpharetta, Georgia']
Predicate: ['areaTotal', 'populationDensity']
Object: ['55.4 (square kilometres)', '992.6 (inhabitants per square kilometre)']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ areaTotal __object__ 55.4 (square kilometres)', '__subject__ Alpharetta, Georgia __predicate__ populationDensity __object__ 992.6 (inhabitants per square kilometre)']]
Text: Alpharetta, Georgia, has an area of 55.4 square kilometres and a population density of 992.6 inhabitants per square kilometre.
Subject: ['Alpharetta, Georgia', 'Alpharetta, Georgia']
Predicate: ['areaTotal', 'populationDensity']
Object: ['55.4 (square kilometres)', '992.6 (inhabitants per square kilometre)']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ areaTotal __object__ 55.4 (square kilometres)', '__subject__ Alpharetta, Georgia __predicate__ populationDensity __object__ 992.6 (inhabitants per square kilometre)']]
Text: There are 992.6 people per square kilometres in Alpharetta, Georgia, which has a total area of 55.4 square kilometres.
Subject: ['Alpharetta, Georgia', 'Alpharetta, Georgia']
Predicate: ['areaTotal', 'populationDensity']
Object: ['55.4 (square kilometres)', '992.6 (inhabitants per square kilometre)']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Fulton County, Georgia']]
Text: Alpharetta is part of Fulton County in Georgia, in the United States.
Subject: ['Alpharetta, Georgia', 'Alpharetta, Georgia']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Fulton County, Georgia']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Fulton County, Georgia']]
Text: Alpharetta is part of Fulton County, Georgia, United States.
Subject: ['Alpharetta, Georgia', 'Alpharetta, Georgia']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Fulton County, Georgia']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Fulton County, Georgia']]
Text: Alpharetta, Fulton County, Georgia is located within the United States.
Subject: ['Alpharetta, Georgia', 'Alpharetta, Georgia']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Fulton County, Georgia']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Georgia (U.S. state)']]
Text: Alpharetta is located in the state of Georgia in the United States.
Subject: ['Alpharetta, Georgia', 'Alpharetta, Georgia']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Georgia (U.S. state)']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Georgia (U.S. state)']]
Text: Alpharetta, Georgia is in the U.S.
Subject: ['Alpharetta, Georgia', 'Alpharetta, Georgia']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Georgia (U.S. state)']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Georgia (U.S. state)']]
Text: Alpharetta, is in the state of Georgia, in the United States.
Subject: ['Alpharetta, Georgia', 'Alpharetta, Georgia']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Georgia (U.S. state)']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: Washington, D.C. is the capital of the United States where Alpharetta, Georgia is also located.
Subject: ['Alpharetta, Georgia', 'United States']
Predicate: ['country', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: The capital of the United States is Washington DC, and the country is the location of Alpharetta, in Georgia.
Subject: ['Alpharetta, Georgia', 'United States']
Predicate: ['country', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: Alpharetta, is in Georgia, in the United States, where Washington, D.C. is the capital.
Subject: ['Alpharetta, Georgia', 'United States']
Predicate: ['country', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Alpharetta is located in Georgia, part of the United States, where African Americans are an ethnic group.
Subject: ['Alpharetta, Georgia', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: The African Americans are an ethnic group within the United States where Alpharetta is located in Georgia.
Subject: ['Alpharetta, Georgia', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: The United States is the location of Alpharetta, Georgia and includes the African Americans among its ethnic groups.
Subject: ['Alpharetta, Georgia', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Alpharetta, Georgia is located within the United States, where Asian Americans are one of the ethnic groups.
Subject: ['Alpharetta, Georgia', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: The United States is the location of Alpharetta, Georgia, and includes the Asian Americans among its ethnic groups.
Subject: ['Alpharetta, Georgia', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Alpharetta, Georgia is part of the United States where one of the ethnic groups are Asian Americans.
Subject: ['Alpharetta, Georgia', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: The United States includes the Native Americans among its ethnic groups and is the location of Alpharetta, Georgia.
Subject: ['Alpharetta, Georgia', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: The United States of America include the ethnic group of Native Americans and is the location of Alpharetta, Georgia.
Subject: ['Alpharetta, Georgia', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ language __object__ English language']]
Text: Alpharetta, Georgia is located in the United States where English is the official language.
Subject: ['Alpharetta, Georgia', 'United States']
Predicate: ['country', 'language']
Object: ['United States', 'English language']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ language __object__ English language']]
Text: The English language is spoken in the United States and Alpharetta, Georgia is located in the country.
Subject: ['Alpharetta, Georgia', 'United States']
Predicate: ['country', 'language']
Object: ['United States', 'English language']

Triple: [['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States', '__subject__ United States __predicate__ language __object__ English language']]
Text: Alpharetta, Georgia is in the United States, where the English language is used.
Subject: ['Alpharetta, Georgia', 'United States']
Predicate: ['country', 'language']
Object: ['United States', 'English language']

Triple: [['__subject__ Amarillo, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Amarillo, Texas is located within the United States where African Americans are one of the ethnic groups.
Subject: ['Amarillo, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Amarillo, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: African Americans are an ethnic group in the United States, where Amarillo, Texas is located.
Subject: ['Amarillo, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Amarillo, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: The United States include the ethnic group of African Americans and is the location of Amarillo, Texas.
Subject: ['Amarillo, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Amarillo, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Amarillo is located in Texas in the United States where Asian Americans are an ethnic group.
Subject: ['Amarillo, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Amarillo, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: The United States is the location of Amarillo, Texas and includes the ethnic group of Asian Americans.
Subject: ['Amarillo, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Amarillo, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Native Americans are one of the ethnic groups in the United States, where Amarillo, Texas can be found.
Subject: ['Amarillo, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Amarillo, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Amarillo, Texas is in the U.S. and one ethnic group in that country is Native Americans.
Subject: ['Amarillo, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Amarillo, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Native Americans are an ethnic group in the United States, which is the location of Amarillo, Texas.
Subject: ['Amarillo, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Amarillo, Texas __predicate__ isPartOf __object__ Potter County, Texas', '__subject__ Amarillo, Texas __predicate__ country __object__ United States']]
Text: Amarillo, Potter County, Texas is in the U.S.
Subject: ['Amarillo, Texas', 'Amarillo, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Potter County, Texas', 'United States']

Triple: [['__subject__ Amarillo, Texas __predicate__ isPartOf __object__ Potter County, Texas', '__subject__ Amarillo, Texas __predicate__ country __object__ United States']]
Text: Amarillo is located in Potter County, Texas, United States.
Subject: ['Amarillo, Texas', 'Amarillo, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Potter County, Texas', 'United States']

Triple: [['__subject__ Amarillo, Texas __predicate__ isPartOf __object__ Potter County, Texas', '__subject__ Amarillo, Texas __predicate__ country __object__ United States']]
Text: Amarillo is part of Potter County, Texas, in the United States.
Subject: ['Amarillo, Texas', 'Amarillo, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Potter County, Texas', 'United States']

Triple: [['__subject__ Amarillo, Texas __predicate__ isPartOf __object__ Randall County, Texas', '__subject__ Amarillo, Texas __predicate__ country __object__ United States']]
Text: Amarillo, Texas is part of Randall County, Texas, in the United States.
Subject: ['Amarillo, Texas', 'Amarillo, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Randall County, Texas', 'United States']

Triple: [['__subject__ Amarillo, Texas __predicate__ isPartOf __object__ Randall County, Texas', '__subject__ Amarillo, Texas __predicate__ country __object__ United States']]
Text: Amarillo, Texas is part of Randall County in the U.S.
Subject: ['Amarillo, Texas', 'Amarillo, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Randall County, Texas', 'United States']

Triple: [['__subject__ Amarillo, Texas __predicate__ isPartOf __object__ Randall County, Texas', '__subject__ Amarillo, Texas __predicate__ country __object__ United States']]
Text: Amarillo is part of Randall County, Texas, United States.
Subject: ['Amarillo, Texas', 'Amarillo, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Randall County, Texas', 'United States']

Triple: [['__subject__ Amarillo, Texas __predicate__ isPartOf __object__ Randall County, Texas', '__subject__ Randall County, Texas __predicate__ country __object__ United States']]
Text: Amarillo is part of Randall County, Texas, United States.
Subject: ['Amarillo, Texas', 'Randall County, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Randall County, Texas', 'United States']

Triple: [['__subject__ Amarillo, Texas __predicate__ isPartOf __object__ Texas', '__subject__ Texas __predicate__ country __object__ United States']]
Text: Amarillo is part of Texas, in the United States.
Subject: ['Amarillo, Texas', 'Texas']
Predicate: ['isPartOf', 'country']
Object: ['Texas', 'United States']

Triple: [['__subject__ Amarillo, Texas __predicate__ isPartOf __object__ Texas', '__subject__ Texas __predicate__ country __object__ United States']]
Text: The city of Amarillo is located in Texas in the United States.
Subject: ['Amarillo, Texas', 'Texas']
Predicate: ['isPartOf', 'country']
Object: ['Texas', 'United States']

Triple: [['__subject__ Amarillo, Texas __predicate__ isPartOf __object__ Texas', '__subject__ Texas __predicate__ country __object__ United States']]
Text: Amarillo is a city in Texas, United States.
Subject: ['Amarillo, Texas', 'Texas']
Predicate: ['isPartOf', 'country']
Object: ['Texas', 'United States']

Triple: [['__subject__ Amarillo, Texas __predicate__ populationDensity __object__ 746.0 (inhabitants per square kilometre)', '__subject__ Amarillo, Texas __predicate__ areaTotal __object__ 233.9 (square kilometres)']]
Text: The total area of Amarillo Texas is 233.9 SqKm and there are 746 people per square km.
Subject: ['Amarillo, Texas', 'Amarillo, Texas']
Predicate: ['populationDensity', 'areaTotal']
Object: ['746.0 (inhabitants per square kilometre)', '233.9 (square kilometres)']

Triple: [['__subject__ Amarillo, Texas __predicate__ populationDensity __object__ 746.0 (inhabitants per square kilometre)', '__subject__ Amarillo, Texas __predicate__ areaTotal __object__ 233.9 (square kilometres)']]
Text: Amarillo, Texas covers an area of 233.9 sq km and has a population density of 746 people per square kilometre.
Subject: ['Amarillo, Texas', 'Amarillo, Texas']
Predicate: ['populationDensity', 'areaTotal']
Object: ['746.0 (inhabitants per square kilometre)', '233.9 (square kilometres)']

Triple: [['__subject__ Amarillo, Texas __predicate__ populationDensity __object__ 746.0 (inhabitants per square kilometre)', '__subject__ Amarillo, Texas __predicate__ areaTotal __object__ 233.9 (square kilometres)']]
Text: 746 people per square kilometre inhabit Amarillo, Texas, which has a area of 233.9 square kilometers.
Subject: ['Amarillo, Texas', 'Amarillo, Texas']
Predicate: ['populationDensity', 'areaTotal']
Object: ['746.0 (inhabitants per square kilometre)', '233.9 (square kilometres)']

Triple: [['__subject__ Anaheim, California __predicate__ utcOffset __object__ -7', '__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']]
Text: Anaheim, CA has a UTC offset of minus 7 and a total area of 131.6 sq km.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['utcOffset', 'areaTotal']
Object: ['-7', '131.6 (square kilometres)']

Triple: [['__subject__ Anaheim, California __predicate__ utcOffset __object__ -7', '__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']]
Text: Anaheim, California has a UTC offset of -7 and covers a total area of 131.6 square kilometres.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['utcOffset', 'areaTotal']
Object: ['-7', '131.6 (square kilometres)']

Triple: [['__subject__ Anaheim, California __predicate__ utcOffset __object__ -7', '__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']]
Text: Anaheim, California has a UTC offset of - 7 and a total area of 131.6 square kilometres.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['utcOffset', 'areaTotal']
Object: ['-7', '131.6 (square kilometres)']

Triple: [['__subject__ Anaheim, California __predicate__ utcOffset __object__ -8', '__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']]
Text: Anaheim, in California, has a UTC offset of -8, and a total area of 131.6 square kilometres.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['utcOffset', 'areaTotal']
Object: ['-8', '131.6 (square kilometres)']

Triple: [['__subject__ Anaheim, California __predicate__ utcOffset __object__ -8', '__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']]
Text: Anaheim, California, covers a total area of 131.6 square kilometres and has the UTC offset of -8.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['utcOffset', 'areaTotal']
Object: ['-8', '131.6 (square kilometres)']

Triple: [['__subject__ Anaheim, California __predicate__ areaCode __object__ 657, 714', '__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']]
Text: Anaheim, California has a total area of 131.6 sq km and the area codes are 657 and 714.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['areaCode', 'areaTotal']
Object: ['657, 714', '131.6 (square kilometres)']

Triple: [['__subject__ Anaheim, California __predicate__ areaCode __object__ 657, 714', '__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']]
Text: The total area of Anaheim California is 131.6 square kilometres. Its area codes are 657 and 714.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['areaCode', 'areaTotal']
Object: ['657, 714', '131.6 (square kilometres)']

Triple: [['__subject__ Anaheim, California __predicate__ areaCode __object__ 657, 714', '__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']]
Text: The total area of Anaheim, California is 131.6 sq km. and the area codes are 657 and 714.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['areaCode', 'areaTotal']
Object: ['657, 714', '131.6 (square kilometres)']

Triple: [['__subject__ Anaheim, California __predicate__ areaCode __object__ 657', '__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']]
Text: Anaheim, California covers an area of 131.6 square kilometers and its area code is 657.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['areaCode', 'areaTotal']
Object: ['657', '131.6 (square kilometres)']

Triple: [['__subject__ Anaheim, California __predicate__ areaCode __object__ 657', '__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']]
Text: Anaheim, California has a total area of 131.6 square kilometres, and the area code 657.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['areaCode', 'areaTotal']
Object: ['657', '131.6 (square kilometres)']

Triple: [['__subject__ Anaheim, California __predicate__ areaCode __object__ 657', '__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']]
Text: Anaheim, which is in California has a total area of 131.6 sq km and an area code 657.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['areaCode', 'areaTotal']
Object: ['657', '131.6 (square kilometres)']

Triple: [['__subject__ Anaheim, California __predicate__ areaOfWater __object__ 25.2 (square kilometres)', '__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']]
Text: The total area of Anaheim California is 131.6 sq km including 25.2 sq km of water.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['areaOfWater', 'areaTotal']
Object: ['25.2 (square kilometres)', '131.6 (square kilometres)']

Triple: [['__subject__ Anaheim, California __predicate__ areaOfWater __object__ 25.2 (square kilometres)', '__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']]
Text: With a total area of 131.6 square kilometres, Anaheim California, has a total area of water of 25.2 square kilometres.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['areaOfWater', 'areaTotal']
Object: ['25.2 (square kilometres)', '131.6 (square kilometres)']

Triple: [['__subject__ Anaheim, California __predicate__ areaOfWater __object__ 25.2 (square kilometres)', '__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']]
Text: Anaheim, California has a total area of 131.6 sq kms including a total water area of 25.2 sq kms.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['areaOfWater', 'areaTotal']
Object: ['25.2 (square kilometres)', '131.6 (square kilometres)']

Triple: [['__subject__ Anaheim, California __predicate__ country __object__ United States', '__subject__ Anaheim, California __predicate__ isPartOf __object__ Orange County, California']]
Text: Anaheim is part of Orange County, California, united States.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Orange County, California']

Triple: [['__subject__ Anaheim, California __predicate__ country __object__ United States', '__subject__ Anaheim, California __predicate__ isPartOf __object__ Orange County, California']]
Text: Anaheim is in Orange County, California, United States.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Orange County, California']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ California', '__subject__ Anaheim, California __predicate__ country __object__ United States']]
Text: Anaheim is part of California, in the United States.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['isPartOf', 'country']
Object: ['California', 'United States']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ California', '__subject__ Anaheim, California __predicate__ country __object__ United States']]
Text: Anaheim is part of California in the United States of America.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['isPartOf', 'country']
Object: ['California', 'United States']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ California', '__subject__ Anaheim, California __predicate__ country __object__ United States']]
Text: Anaheim is part of California which is located in the United States of America.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['isPartOf', 'country']
Object: ['California', 'United States']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ country __object__ United States']]
Text: Anaheim is part of California, in the United States.
Subject: ['Anaheim, California', 'California']
Predicate: ['isPartOf', 'country']
Object: ['California', 'United States']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ country __object__ United States']]
Text: Anaheim is part of California in the United States.
Subject: ['Anaheim, California', 'California']
Predicate: ['isPartOf', 'country']
Object: ['California', 'United States']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ language __object__ Spanish language']]
Text: Anaheim is part of California, where Spanish is spoken.
Subject: ['Anaheim, California', 'California']
Predicate: ['isPartOf', 'language']
Object: ['California', 'Spanish language']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ language __object__ Spanish language']]
Text: Anaheim is part of California where Spanish is one of the spoken languages.
Subject: ['Anaheim, California', 'California']
Predicate: ['isPartOf', 'language']
Object: ['California', 'Spanish language']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ language __object__ Spanish language']]
Text: Anaheim is part of California where Spanish is spoken.
Subject: ['Anaheim, California', 'California']
Predicate: ['isPartOf', 'language']
Object: ['California', 'Spanish language']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ Orange County, California', '__subject__ Anaheim, California __predicate__ leaderTitle __object__ California State Assembly']]
Text: Led by the California State Assembly, Anaheim is a city in Orange County, which is part of California.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['isPartOf', 'leaderTitle']
Object: ['Orange County, California', 'California State Assembly']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ Orange County, California', '__subject__ Anaheim, California __predicate__ leaderTitle __object__ California State Assembly']]
Text: Anaheim, Orange County, California is led by the California State Assembly.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['isPartOf', 'leaderTitle']
Object: ['Orange County, California', 'California State Assembly']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ Orange County, California', '__subject__ Anaheim, California __predicate__ leaderTitle __object__ California State Assembly']]
Text: Anaheim, Orange County, California, is led by the California State Assembly.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['isPartOf', 'leaderTitle']
Object: ['Orange County, California', 'California State Assembly']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ Orange County, California', '__subject__ Anaheim, California __predicate__ leaderTitle __object__ California State Senate']]
Text: The California State Senate leads Anaheim, which is in Orange County, California.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['isPartOf', 'leaderTitle']
Object: ['Orange County, California', 'California State Senate']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ Orange County, California', '__subject__ Anaheim, California __predicate__ leaderTitle __object__ California State Senate']]
Text: The California State Senate leads Anaheim, which is part of Orange County in California.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['isPartOf', 'leaderTitle']
Object: ['Orange County, California', 'California State Senate']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ Orange County, California', '__subject__ Anaheim, California __predicate__ leaderTitle __object__ United States House of Representatives']]
Text: Anaheim is part of Orange County, California. The U.S. House of Representatives leads Anaheim.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['isPartOf', 'leaderTitle']
Object: ['Orange County, California', 'United States House of Representatives']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ Orange County, California', '__subject__ Anaheim, California __predicate__ leaderTitle __object__ United States House of Representatives']]
Text: The United States House of Representatives leads Anaheim, California, which is in Orange County.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['isPartOf', 'leaderTitle']
Object: ['Orange County, California', 'United States House of Representatives']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ Orange County, California', '__subject__ Anaheim, California __predicate__ leaderTitle __object__ United States House of Representatives']]
Text: The United States House of Representatives leads Anaheim, a city in Orange County which is part of California.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['isPartOf', 'leaderTitle']
Object: ['Orange County, California', 'United States House of Representatives']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ Orange County, California', '__subject__ Orange County, California __predicate__ isPartOf __object__ Greater Los Angeles Area']]
Text: Anaheim is part of Orange County, California which is located in the greater Los Angeles area.
Subject: ['Anaheim, California', 'Orange County, California']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Orange County, California', 'Greater Los Angeles Area']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ Orange County, California', '__subject__ Orange County, California __predicate__ isPartOf __object__ Greater Los Angeles Area']]
Text: Anaheim is a city in Orange County, part of the Greater Los Angeles, area in California.
Subject: ['Anaheim, California', 'Orange County, California']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Orange County, California', 'Greater Los Angeles Area']

Triple: [['__subject__ Anaheim, California __predicate__ isPartOf __object__ Orange County, California', '__subject__ Orange County, California __predicate__ isPartOf __object__ Greater Los Angeles Area']]
Text: Anaheim is in Orange County, California which is part of the Greater Los Angeles area.
Subject: ['Anaheim, California', 'Orange County, California']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Orange County, California', 'Greater Los Angeles Area']

Triple: [['__subject__ Anaheim, California __predicate__ leaderTitle __object__ California State Assembly', '__subject__ Anaheim, California __predicate__ isPartOf __object__ California']]
Text: Anaheim is part of California and led by the California State Assembly.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['leaderTitle', 'isPartOf']
Object: ['California State Assembly', 'California']

Triple: [['__subject__ Anaheim, California __predicate__ leaderTitle __object__ California State Assembly', '__subject__ Anaheim, California __predicate__ isPartOf __object__ California']]
Text: Anaheim, which is part of California, is led by the California State Assembly.
Subject: ['Anaheim, California', 'Anaheim, California']
Predicate: ['leaderTitle', 'isPartOf']
Object: ['California State Assembly', 'California']

Triple: [['__subject__ Anaheim, California __predicate__ leaderTitle __object__ California State Senate', '__subject__ California State Senate __predicate__ isPartOf __object__ California State Legislature']]
Text: The California State Senate is part of the California State Legislature, and leads Anaheim, California.
Subject: ['Anaheim, California', 'California State Senate']
Predicate: ['leaderTitle', 'isPartOf']
Object: ['California State Senate', 'California State Legislature']

Triple: [['__subject__ Anaheim, California __predicate__ leaderTitle __object__ California State Senate', '__subject__ California State Senate __predicate__ isPartOf __object__ California State Legislature']]
Text: Anaheim is led by the California State Senate, which is part of the California State Legislature.
Subject: ['Anaheim, California', 'California State Senate']
Predicate: ['leaderTitle', 'isPartOf']
Object: ['California State Senate', 'California State Legislature']

Triple: [['__subject__ Anaheim, California __predicate__ leaderTitle __object__ California State Senate', '__subject__ California State Senate __predicate__ isPartOf __object__ California State Legislature']]
Text: The California State Senate is part of the California State Legislature and leads Anaheim, California.
Subject: ['Anaheim, California', 'California State Senate']
Predicate: ['leaderTitle', 'isPartOf']
Object: ['California State Senate', 'California State Legislature']

Triple: [['__subject__ Anderson, Indiana __predicate__ areaTotal __object__ 107.43 (square kilometres)', '__subject__ Anderson, Indiana __predicate__ populationDensity __object__ 523.9 (inhabitants per square kilometre)']]
Text: Anderson, Indiana has 523.9 people per square kilometer, and a total square area of 107.43 square kilometres.
Subject: ['Anderson, Indiana', 'Anderson, Indiana']
Predicate: ['areaTotal', 'populationDensity']
Object: ['107.43 (square kilometres)', '523.9 (inhabitants per square kilometre)']

Triple: [['__subject__ Anderson, Indiana __predicate__ areaTotal __object__ 107.43 (square kilometres)', '__subject__ Anderson, Indiana __predicate__ populationDensity __object__ 523.9 (inhabitants per square kilometre)']]
Text: Anderson, Indiana; has a population density of 523.9 inhabitants per square kilometre, and a total area of 107.43 square kilometres.
Subject: ['Anderson, Indiana', 'Anderson, Indiana']
Predicate: ['areaTotal', 'populationDensity']
Object: ['107.43 (square kilometres)', '523.9 (inhabitants per square kilometre)']

Triple: [['__subject__ Anderson, Indiana __predicate__ areaTotal __object__ 107.43 (square kilometres)', '__subject__ Anderson, Indiana __predicate__ populationDensity __object__ 523.9 (inhabitants per square kilometre)']]
Text: Anderson, Indiana's population density is 523.9 per sq. kilometre and its total area is 107.43 per sq. kilometre.
Subject: ['Anderson, Indiana', 'Anderson, Indiana']
Predicate: ['areaTotal', 'populationDensity']
Object: ['107.43 (square kilometres)', '523.9 (inhabitants per square kilometre)']

Triple: [['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Adams Township, Madison County, Indiana', '__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Anderson Township, Madison County, Indiana']]
Text: Anderson (part of Anderson Township), is located within Adams Township, Madison County, Indiana.
Subject: ['Anderson, Indiana', 'Anderson, Indiana']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Adams Township, Madison County, Indiana', 'Anderson Township, Madison County, Indiana']

Triple: [['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Adams Township, Madison County, Indiana', '__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Anderson Township, Madison County, Indiana']]
Text: Anderson is part of Adams Township and Anderson Township, Madison County, Indiana.
Subject: ['Anderson, Indiana', 'Anderson, Indiana']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Adams Township, Madison County, Indiana', 'Anderson Township, Madison County, Indiana']

Triple: [['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Adams Township, Madison County, Indiana', '__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Anderson Township, Madison County, Indiana']]
Text: Anderson, is part of the Anderson/Adams Township, Madison County in Indiana.
Subject: ['Anderson, Indiana', 'Anderson, Indiana']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Adams Township, Madison County, Indiana', 'Anderson Township, Madison County, Indiana']

Triple: [['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Indiana', '__subject__ Indiana __predicate__ country __object__ United States']]
Text: Anderson is a city in Indiana, United States.
Subject: ['Anderson, Indiana', 'Indiana']
Predicate: ['isPartOf', 'country']
Object: ['Indiana', 'United States']

Triple: [['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Indiana', '__subject__ Indiana __predicate__ country __object__ United States']]
Text: Anderson is a city in Indiana, in the U.S.
Subject: ['Anderson, Indiana', 'Indiana']
Predicate: ['isPartOf', 'country']
Object: ['Indiana', 'United States']

Triple: [['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Lafayette Township, Madison County, Indiana', '__subject__ Lafayette Township, Madison County, Indiana __predicate__ country __object__ United States']]
Text: Anderson, Indiana is part of Lafayette Township, Madison County, Indiana in the U.S.
Subject: ['Anderson, Indiana', 'Lafayette Township, Madison County, Indiana']
Predicate: ['isPartOf', 'country']
Object: ['Lafayette Township, Madison County, Indiana', 'United States']

Triple: [['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Lafayette Township, Madison County, Indiana', '__subject__ Lafayette Township, Madison County, Indiana __predicate__ country __object__ United States']]
Text: Anderson, Indiana is part of Lafayette Township, Madison County, Indiana, United States.
Subject: ['Anderson, Indiana', 'Lafayette Township, Madison County, Indiana']
Predicate: ['isPartOf', 'country']
Object: ['Lafayette Township, Madison County, Indiana', 'United States']

Triple: [['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Lafayette Township, Madison County, Indiana', '__subject__ Lafayette Township, Madison County, Indiana __predicate__ country __object__ United States']]
Text: Anderson is part of Lafayette Township, Madison County, Indiana, United States.
Subject: ['Anderson, Indiana', 'Lafayette Township, Madison County, Indiana']
Predicate: ['isPartOf', 'country']
Object: ['Lafayette Township, Madison County, Indiana', 'United States']

Triple: [['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Richland Township, Madison County, Indiana', '__subject__ Richland Township, Madison County, Indiana __predicate__ country __object__ United States']]
Text: Anderson is part of Richland Township, Madison County, Indiana, United States.
Subject: ['Anderson, Indiana', 'Richland Township, Madison County, Indiana']
Predicate: ['isPartOf', 'country']
Object: ['Richland Township, Madison County, Indiana', 'United States']

Triple: [['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Richland Township, Madison County, Indiana', '__subject__ Richland Township, Madison County, Indiana __predicate__ country __object__ United States']]
Text: Anderson is within Richland Township, Madison County, Indiana, in the United States.
Subject: ['Anderson, Indiana', 'Richland Township, Madison County, Indiana']
Predicate: ['isPartOf', 'country']
Object: ['Richland Township, Madison County, Indiana', 'United States']

Triple: [['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Richland Township, Madison County, Indiana', '__subject__ Richland Township, Madison County, Indiana __predicate__ country __object__ United States']]
Text: Anderson is part of Richland Township which is located in Madison County, Indiana. United States.
Subject: ['Anderson, Indiana', 'Richland Township, Madison County, Indiana']
Predicate: ['isPartOf', 'country']
Object: ['Richland Township, Madison County, Indiana', 'United States']

Triple: [['__subject__ Angola, Indiana __predicate__ areaTotal __object__ 16.55 (square kilometres)', '__subject__ Angola, Indiana __predicate__ populationDensity __object__ 524.5 (inhabitants per square kilometre)']]
Text: Angola, Indiana, covers an area of 16.55 sq km and has a population density of 524.5.
Subject: ['Angola, Indiana', 'Angola, Indiana']
Predicate: ['areaTotal', 'populationDensity']
Object: ['16.55 (square kilometres)', '524.5 (inhabitants per square kilometre)']

Triple: [['__subject__ Angola, Indiana __predicate__ areaTotal __object__ 16.55 (square kilometres)', '__subject__ Angola, Indiana __predicate__ populationDensity __object__ 524.5 (inhabitants per square kilometre)']]
Text: Angola, Indiana has a total area of 16.55 sq km and a population density of 524.5 inhabitants per sq km.
Subject: ['Angola, Indiana', 'Angola, Indiana']
Predicate: ['areaTotal', 'populationDensity']
Object: ['16.55 (square kilometres)', '524.5 (inhabitants per square kilometre)']

Triple: [['__subject__ Angola, Indiana __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Angola, Indiana is in the United States, where one of the ethnic groups are Asian Americans.
Subject: ['Angola, Indiana', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Angola, Indiana __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Angola, Indiana is located in the United States and one ethnic group there is Asian Americans.
Subject: ['Angola, Indiana', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Angola, Indiana __predicate__ isPartOf __object__ Indiana', '__subject__ Indiana __predicate__ capital __object__ Indianapolis']]
Text: Indiana's capital is Indianapolis and the city of Angola is part of Indiana.
Subject: ['Angola, Indiana', 'Indiana']
Predicate: ['isPartOf', 'capital']
Object: ['Indiana', 'Indianapolis']

Triple: [['__subject__ Angola, Indiana __predicate__ isPartOf __object__ Indiana', '__subject__ Indiana __predicate__ capital __object__ Indianapolis']]
Text: Angola is a city in Indiana, the capital of which is Indianapolis.
Subject: ['Angola, Indiana', 'Indiana']
Predicate: ['isPartOf', 'capital']
Object: ['Indiana', 'Indianapolis']

Triple: [['__subject__ Angola, Indiana __predicate__ isPartOf __object__ Indiana', '__subject__ Indiana __predicate__ capital __object__ Indianapolis']]
Text: Angola is a city in Indiana which has the capital of Indianapolis.
Subject: ['Angola, Indiana', 'Indiana']
Predicate: ['isPartOf', 'capital']
Object: ['Indiana', 'Indianapolis']

Triple: [['__subject__ Angola, Indiana __predicate__ isPartOf __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Asian Americans are one of the ethnic groups in the U.S., the country where Angola, Indiana located.
Subject: ['Angola, Indiana', 'United States']
Predicate: ['isPartOf', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Angola, Indiana __predicate__ isPartOf __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Angola, Indiana is part of the U.S. where Asian Americans are one of the country's ethnic groups.
Subject: ['Angola, Indiana', 'United States']
Predicate: ['isPartOf', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Angola, Indiana __predicate__ isPartOf __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Angola in Indiana is in the U.S. and one ethnic group in that country is Asian Americans.
Subject: ['Angola, Indiana', 'United States']
Predicate: ['isPartOf', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Angola, Indiana __predicate__ isPartOf __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Angola, Indiana is part of the United States, where Native Americans are an ethnic group.
Subject: ['Angola, Indiana', 'United States']
Predicate: ['isPartOf', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Angola, Indiana __predicate__ isPartOf __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Native Americans are one of the ethnic groups in the United States of America, the country where Angola (part of Indiana), is located.
Subject: ['Angola, Indiana', 'United States']
Predicate: ['isPartOf', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Angola, Indiana __predicate__ isPartOf __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: The United States is the location of Angola, Indiana, and includes the Native Americans among its ethnic groups.
Subject: ['Angola, Indiana', 'United States']
Predicate: ['isPartOf', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ language __object__ Chinese language']]
Text: The city of Antioch is found in California, which has some Chinese speaking areas.
Subject: ['Antioch, California', 'California']
Predicate: ['isPartOf', 'language']
Object: ['California', 'Chinese language']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ language __object__ Chinese language']]
Text: Antioch is in California and the Chinese language is spoken there.
Subject: ['Antioch, California', 'California']
Predicate: ['isPartOf', 'language']
Object: ['California', 'Chinese language']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ language __object__ Chinese language']]
Text: The city of Antioch is located in California, where Chinese is one of the spoken languages.
Subject: ['Antioch, California', 'California']
Predicate: ['isPartOf', 'language']
Object: ['California', 'Chinese language']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ language __object__ English language']]
Text: Antioch is part of California, where English is the language spoken.
Subject: ['Antioch, California', 'California']
Predicate: ['isPartOf', 'language']
Object: ['California', 'English language']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ language __object__ English language']]
Text: California uses the English language and is the location of the city of Antioch.
Subject: ['Antioch, California', 'California']
Predicate: ['isPartOf', 'language']
Object: ['California', 'English language']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ language __object__ English language']]
Text: Antioch is part of California, where English is spoken.
Subject: ['Antioch, California', 'California']
Predicate: ['isPartOf', 'language']
Object: ['California', 'English language']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ language __object__ Spanish language']]
Text: The city of Antioch is located within California, where one of the languages spoken is Spanish.
Subject: ['Antioch, California', 'California']
Predicate: ['isPartOf', 'language']
Object: ['California', 'Spanish language']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ language __object__ Spanish language']]
Text: The city of Antioch is located within California where the Spanish language is spoken.
Subject: ['Antioch, California', 'California']
Predicate: ['isPartOf', 'language']
Object: ['California', 'Spanish language']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ language __object__ Spanish language']]
Text: Antioch is part of California where Spanish is one of the spoken languages.
Subject: ['Antioch, California', 'California']
Predicate: ['isPartOf', 'language']
Object: ['California', 'Spanish language']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ language __object__ Vietnamese language']]
Text: The city of Antioch is located in California, a state where one of the languages spoken is Vietnamese.
Subject: ['Antioch, California', 'California']
Predicate: ['isPartOf', 'language']
Object: ['California', 'Vietnamese language']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ language __object__ Vietnamese language']]
Text: Antioch is part of California where Vietnamese language is spoken.
Subject: ['Antioch, California', 'California']
Predicate: ['isPartOf', 'language']
Object: ['California', 'Vietnamese language']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ California', '__subject__ California __predicate__ language __object__ Vietnamese language']]
Text: Antioch is part of California, where Vietnamese is one of the languages spoken.
Subject: ['Antioch, California', 'California']
Predicate: ['isPartOf', 'language']
Object: ['California', 'Vietnamese language']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ Contra Costa County, California', '__subject__ Antioch, California __predicate__ isPartOf __object__ California']]
Text: Antioch is part of Contra Costa County in California state.
Subject: ['Antioch, California', 'Antioch, California']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Contra Costa County, California', 'California']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ Contra Costa County, California', '__subject__ Antioch, California __predicate__ isPartOf __object__ California']]
Text: The city of Antioch is part of Contra Costa County in California.
Subject: ['Antioch, California', 'Antioch, California']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Contra Costa County, California', 'California']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ Contra Costa County, California', '__subject__ Contra Costa County, California __predicate__ isPartOf __object__ San Francisco Bay Area']]
Text: Antioch, is part of Contra Costa County, which is part of the San Francisco Bay area, in California.
Subject: ['Antioch, California', 'Contra Costa County, California']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Contra Costa County, California', 'San Francisco Bay Area']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ Contra Costa County, California', '__subject__ Contra Costa County, California __predicate__ isPartOf __object__ San Francisco Bay Area']]
Text: Antioch is located in Contra Costa County which is part of the San Francisco Bay Area in California.
Subject: ['Antioch, California', 'Contra Costa County, California']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Contra Costa County, California', 'San Francisco Bay Area']

Triple: [['__subject__ Antioch, California __predicate__ isPartOf __object__ Contra Costa County, California', '__subject__ Contra Costa County, California __predicate__ isPartOf __object__ San Francisco Bay Area']]
Text: Antioch is part of Contra Costa County, which in turn is part of the San Francisco Bay area, in California.
Subject: ['Antioch, California', 'Contra Costa County, California']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Contra Costa County, California', 'San Francisco Bay Area']

Triple: [['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Tarrant County, Texas', '__subject__ Arlington, Texas __predicate__ isPartOf __object__ Texas']]
Text: Arlington is part of Tarrant County, in the state of Texas.
Subject: ['Arlington, Texas', 'Arlington, Texas']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Tarrant County, Texas', 'Texas']

Triple: [['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Tarrant County, Texas', '__subject__ Arlington, Texas __predicate__ isPartOf __object__ Texas']]
Text: Arlington is part of Tarrant County, Texas.
Subject: ['Arlington, Texas', 'Arlington, Texas']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Tarrant County, Texas', 'Texas']

Triple: [['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Tarrant County, Texas', '__subject__ Arlington, Texas __predicate__ isPartOf __object__ Texas']]
Text: Arlington is part of Tarrant County in Texas, U.S.
Subject: ['Arlington, Texas', 'Arlington, Texas']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Tarrant County, Texas', 'Texas']

Triple: [['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Tarrant County, Texas', '__subject__ Tarrant County, Texas __predicate__ country __object__ United States']]
Text: Arlington is part of Tarrant County, Texas, United States.
Subject: ['Arlington, Texas', 'Tarrant County, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Tarrant County, Texas', 'United States']

Triple: [['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Tarrant County, Texas', '__subject__ Tarrant County, Texas __predicate__ country __object__ United States']]
Text: Arlington is part of Tarrant County in Texas U.S.
Subject: ['Arlington, Texas', 'Tarrant County, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Tarrant County, Texas', 'United States']

Triple: [['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Tarrant County, Texas', '__subject__ Tarrant County, Texas __predicate__ country __object__ United States']]
Text: Arlington is part of Tarrant County in Texas, in the United States.
Subject: ['Arlington, Texas', 'Tarrant County, Texas']
Predicate: ['isPartOf', 'country']
Object: ['Tarrant County, Texas', 'United States']

Triple: [['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Tarrant County, Texas', '__subject__ Tarrant County, Texas __predicate__ countySeat __object__ Fort Worth, Texas']]
Text: Forth Worth is the county seat of Tarrant County in Texas, where Arlington is located.
Subject: ['Arlington, Texas', 'Tarrant County, Texas']
Predicate: ['isPartOf', 'countySeat']
Object: ['Tarrant County, Texas', 'Fort Worth, Texas']

Triple: [['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Tarrant County, Texas', '__subject__ Tarrant County, Texas __predicate__ countySeat __object__ Fort Worth, Texas']]
Text: Arlington is part of Tarrant County, the county seat of which, is Fort Worth in Texas.
Subject: ['Arlington, Texas', 'Tarrant County, Texas']
Predicate: ['isPartOf', 'countySeat']
Object: ['Tarrant County, Texas', 'Fort Worth, Texas']

Triple: [['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Tarrant County, Texas', '__subject__ Tarrant County, Texas __predicate__ countySeat __object__ Fort Worth, Texas']]
Text: Arlington is in Tarrant County, Texas whose county seat is is Fort Worth.
Subject: ['Arlington, Texas', 'Tarrant County, Texas']
Predicate: ['isPartOf', 'countySeat']
Object: ['Tarrant County, Texas', 'Fort Worth, Texas']

Triple: [['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Tarrant County, Texas', '__subject__ Tarrant County, Texas __predicate__ largestCity __object__ Fort Worth, Texas']]
Text: Fort Worth, Tarrant County (of which Arlington is part of), is the largest city in Texas.
Subject: ['Arlington, Texas', 'Tarrant County, Texas']
Predicate: ['isPartOf', 'largestCity']
Object: ['Tarrant County, Texas', 'Fort Worth, Texas']

Triple: [['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Tarrant County, Texas', '__subject__ Tarrant County, Texas __predicate__ largestCity __object__ Fort Worth, Texas']]
Text: Arlington is located in Tarrant County, Texas where the largest city is Fort Worth.
Subject: ['Arlington, Texas', 'Tarrant County, Texas']
Predicate: ['isPartOf', 'largestCity']
Object: ['Tarrant County, Texas', 'Fort Worth, Texas']

Triple: [['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Texas', '__subject__ Texas __predicate__ largestCity __object__ Houston']]
Text: Arlington is part of the state of Texas where Houston is the largest city.
Subject: ['Arlington, Texas', 'Texas']
Predicate: ['isPartOf', 'largestCity']
Object: ['Texas', 'Houston']

Triple: [['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Texas', '__subject__ Texas __predicate__ largestCity __object__ Houston']]
Text: Arlington is part of Texas where Houston is the largest city.
Subject: ['Arlington, Texas', 'Texas']
Predicate: ['isPartOf', 'largestCity']
Object: ['Texas', 'Houston']

Triple: [['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Texas', '__subject__ Texas __predicate__ largestCity __object__ Houston']]
Text: Arlington is part of the state of Texas, where the largest city is Houston.
Subject: ['Arlington, Texas', 'Texas']
Predicate: ['isPartOf', 'largestCity']
Object: ['Texas', 'Houston']

Triple: [['__subject__ Arlington, Texas __predicate__ populationDensity __object__ 1472.0 (inhabitants per square kilometre)', '__subject__ Arlington, Texas __predicate__ areaTotal __object__ 258.2 (square kilometres)']]
Text: Arlington, Texas, has a population density, of 1472.0 inhabitants per square kilometre where the total area is 258.2 Sq.kl.
Subject: ['Arlington, Texas', 'Arlington, Texas']
Predicate: ['populationDensity', 'areaTotal']
Object: ['1472.0 (inhabitants per square kilometre)', '258.2 (square kilometres)']

Triple: [['__subject__ Arlington, Texas __predicate__ populationDensity __object__ 1472.0 (inhabitants per square kilometre)', '__subject__ Arlington, Texas __predicate__ areaTotal __object__ 258.2 (square kilometres)']]
Text: Arlington Texas has a population density of 1472 people per square kilometer and a total area of 258.2 SqK.
Subject: ['Arlington, Texas', 'Arlington, Texas']
Predicate: ['populationDensity', 'areaTotal']
Object: ['1472.0 (inhabitants per square kilometre)', '258.2 (square kilometres)']

Triple: [['__subject__ Atlanta __predicate__ areaOfLand __object__ 344.9 (square kilometres)', '__subject__ Atlanta __predicate__ areaTotal __object__ 347.1 (square kilometres)']]
Text: Atlanta covers 344.9 sq km but has a total area of 347.1 sq km.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['areaOfLand', 'areaTotal']
Object: ['344.9 (square kilometres)', '347.1 (square kilometres)']

Triple: [['__subject__ Atlanta __predicate__ areaOfLand __object__ 344.9 (square kilometres)', '__subject__ Atlanta __predicate__ areaTotal __object__ 347.1 (square kilometres)']]
Text: Atlanta covers 344.9 square kilometres with a total area of 347.1 sq kilometres.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['areaOfLand', 'areaTotal']
Object: ['344.9 (square kilometres)', '347.1 (square kilometres)']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ Atlanta __predicate__ isPartOf __object__ Fulton County, Georgia']]
Text: Atlanta is part of Fulton County in Georgia, United States.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Fulton County, Georgia']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ Atlanta __predicate__ isPartOf __object__ Fulton County, Georgia']]
Text: Atlanta is part of Fulton County, Georgia, United States.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Fulton County, Georgia']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ Atlanta __predicate__ isPartOf __object__ Fulton County, Georgia']]
Text: Atlanta is part of Fulton County in Georgia, U.S.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Fulton County, Georgia']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ Atlanta __predicate__ isPartOf __object__ Georgia (U.S. state)']]
Text: Atlanta is located within the state of Georgia, in the United States.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Georgia (U.S. state)']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ Atlanta __predicate__ isPartOf __object__ Georgia (U.S. state)']]
Text: Atlanta is part of Georgia, United States.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Georgia (U.S. state)']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ Atlanta __predicate__ isPartOf __object__ Georgia (U.S. state)']]
Text: Atlanta, is a part of the U.S. in the state of Georgia.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Georgia (U.S. state)']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: Atlanta in is the US, the capital of which is Washington DC.
Subject: ['Atlanta', 'United States']
Predicate: ['country', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: Atlanta is in the United States, the capital of which is Washington, D.C.
Subject: ['Atlanta', 'United States']
Predicate: ['country', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: Atlanta is located in the United States which has the capital city of Washington DC.
Subject: ['Atlanta', 'United States']
Predicate: ['country', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: One of the ethnic groups in the United States (where Atlanta is located) is Asian Americans.
Subject: ['Atlanta', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Atlanta is in the United States, where one of the ethnic groups, is Asian Americans.
Subject: ['Atlanta', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Atlanta is in the United States, the country where Asian Americans are an ethnic group.
Subject: ['Atlanta', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Atlanta is located in the United States and the Native Americans are an ethnic group in the country.
Subject: ['Atlanta', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: The United States is the location of Atlanta and includes the Native Americans among its ethnic groups.
Subject: ['Atlanta', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: The United States is the location of Atlanta, and includes the ethnic group of Native Americans.
Subject: ['Atlanta', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ United States __predicate__ language __object__ English language']]
Text: Atlanta is in the United States, where the language is English.
Subject: ['Atlanta', 'United States']
Predicate: ['country', 'language']
Object: ['United States', 'English language']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ United States __predicate__ language __object__ English language']]
Text: English is the language spoken in the United States where you can find Atlanta.
Subject: ['Atlanta', 'United States']
Predicate: ['country', 'language']
Object: ['United States', 'English language']

Triple: [['__subject__ Atlanta __predicate__ country __object__ United States', '__subject__ United States __predicate__ language __object__ English language']]
Text: English is the language spoken in the United States, the country where Atlanta is located.
Subject: ['Atlanta', 'United States']
Predicate: ['country', 'language']
Object: ['United States', 'English language']

Triple: [['__subject__ Atlanta __predicate__ isPartOf __object__ Georgia', '__subject__ Atlanta __predicate__ isPartOf __object__ DeKalb County, Georgia']]
Text: Atlanta is mostly part of DeKalb County in Georgia.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Georgia', 'DeKalb County, Georgia']

Triple: [['__subject__ Atlanta __predicate__ isPartOf __object__ Georgia', '__subject__ Atlanta __predicate__ isPartOf __object__ DeKalb County, Georgia']]
Text: Atlanta is part of DeKalb County which is located in Georgia.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Georgia', 'DeKalb County, Georgia']

Triple: [['__subject__ Atlanta __predicate__ isPartOf __object__ DeKalb County, Georgia', '__subject__ Atlanta __predicate__ country __object__ United States']]
Text: Atlanta is part of DeKalb County, Georgia, United States.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['isPartOf', 'country']
Object: ['DeKalb County, Georgia', 'United States']

Triple: [['__subject__ Atlanta __predicate__ isPartOf __object__ DeKalb County, Georgia', '__subject__ Atlanta __predicate__ country __object__ United States']]
Text: Most of Atlanta is part of DeKalb County in Georgia, United States.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['isPartOf', 'country']
Object: ['DeKalb County, Georgia', 'United States']

Triple: [['__subject__ Atlanta __predicate__ isPartOf __object__ DeKalb County, Georgia', '__subject__ DeKalb County, Georgia __predicate__ country __object__ United States']]
Text: Atlanta is part of DeKalb County in Georgia U.S.
Subject: ['Atlanta', 'DeKalb County, Georgia']
Predicate: ['isPartOf', 'country']
Object: ['DeKalb County, Georgia', 'United States']

Triple: [['__subject__ Atlanta __predicate__ isPartOf __object__ DeKalb County, Georgia', '__subject__ DeKalb County, Georgia __predicate__ country __object__ United States']]
Text: Atlanta is part of DeKalb County in Georgia, in the United States.
Subject: ['Atlanta', 'DeKalb County, Georgia']
Predicate: ['isPartOf', 'country']
Object: ['DeKalb County, Georgia', 'United States']

Triple: [['__subject__ Atlanta __predicate__ isPartOf __object__ DeKalb County, Georgia', '__subject__ DeKalb County, Georgia __predicate__ country __object__ United States']]
Text: Most of Atlanta is part of DeKalb County in Georgia which is located in the United States of America.
Subject: ['Atlanta', 'DeKalb County, Georgia']
Predicate: ['isPartOf', 'country']
Object: ['DeKalb County, Georgia', 'United States']

Triple: [['__subject__ Atlanta __predicate__ isPartOf __object__ Fulton County, Georgia', '__subject__ Atlanta __predicate__ isPartOf __object__ DeKalb County, Georgia']]
Text: Atlanta is part of Fulton County but most of it is located in DeKalb County in Georgia.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Fulton County, Georgia', 'DeKalb County, Georgia']

Triple: [['__subject__ Atlanta __predicate__ isPartOf __object__ Fulton County, Georgia', '__subject__ Atlanta __predicate__ isPartOf __object__ DeKalb County, Georgia']]
Text: Atlanta is part of DeKalb County and Fulton County in Georgia.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Fulton County, Georgia', 'DeKalb County, Georgia']

Triple: [['__subject__ Atlanta __predicate__ isPartOf __object__ Fulton County, Georgia', '__subject__ Atlanta __predicate__ isPartOf __object__ DeKalb County, Georgia']]
Text: Atlanta is part of Fulton County and DeKalb County in Georgia.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Fulton County, Georgia', 'DeKalb County, Georgia']

Triple: [['__subject__ Atlanta __predicate__ isPartOf __object__ Georgia (U.S. state)', '__subject__ Atlanta __predicate__ isPartOf __object__ Georgia']]
Text: Atlanta can be found in the US state of Georgia.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Georgia (U.S. state)', 'Georgia']

Triple: [['__subject__ Atlanta __predicate__ isPartOf __object__ Georgia (U.S. state)', '__subject__ Atlanta __predicate__ isPartOf __object__ Georgia']]
Text: Atlanta is part of Georgia in the United States.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['isPartOf', 'isPartOf']
Object: ['Georgia (U.S. state)', 'Georgia']

Triple: [['__subject__ Atlanta __predicate__ populationDensity __object__ 1299.0 (inhabitants per square kilometre)', '__subject__ Atlanta __predicate__ areaTotal __object__ 347.1 (square kilometres)']]
Text: The total area of Atlanta is 347.1 (square kilometres) and the population density is 1299.0 inhabitants per square kilometre.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['populationDensity', 'areaTotal']
Object: ['1299.0 (inhabitants per square kilometre)', '347.1 (square kilometres)']

Triple: [['__subject__ Atlanta __predicate__ populationDensity __object__ 1299.0 (inhabitants per square kilometre)', '__subject__ Atlanta __predicate__ areaTotal __object__ 347.1 (square kilometres)']]
Text: Atlanta has a population density of 1299 inhabitants per sq km and a total area of 347.1 sq km.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['populationDensity', 'areaTotal']
Object: ['1299.0 (inhabitants per square kilometre)', '347.1 (square kilometres)']

Triple: [['__subject__ Atlanta __predicate__ populationDensity __object__ 1299.0 (inhabitants per square kilometre)', '__subject__ Atlanta __predicate__ areaTotal __object__ 347.1 (square kilometres)']]
Text: Atlanta covers an area of 347.1 sq km and has a population density of 1299 inhabitants per sq kilometre.
Subject: ['Atlanta', 'Atlanta']
Predicate: ['populationDensity', 'areaTotal']
Object: ['1299.0 (inhabitants per square kilometre)', '347.1 (square kilometres)']

Triple: [['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States', '__subject__ Atlantic City, New Jersey __predicate__ isPartOf __object__ New Jersey']]
Text: Atlantic City is part of New Jersey, which is in the United States.
Subject: ['Atlantic City, New Jersey', 'Atlantic City, New Jersey']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'New Jersey']

Triple: [['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States', '__subject__ Atlantic City, New Jersey __predicate__ isPartOf __object__ New Jersey']]
Text: Atlantic City is part of New Jersey, in the United States.
Subject: ['Atlantic City, New Jersey', 'Atlantic City, New Jersey']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'New Jersey']

Triple: [['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Atlantic City is part of New Jersey, United States where African Americans are one of the country's ethnic groups.
Subject: ['Atlantic City, New Jersey', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Atlantic City, New Jersey is part of the United States of America where one of the ethnic groups are African Americans.
Subject: ['Atlantic City, New Jersey', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: African Americans are an ethnic group in the United States, where Atlantic City, New Jersey is located.
Subject: ['Atlantic City, New Jersey', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: The United States includes the ethnic group of Asian Americans and is the location of Atlantic City, New Jersey.
Subject: ['Atlantic City, New Jersey', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Atlantic City, New Jersey is part of the United States of America where Asian Americans are one of the ethnic groups.
Subject: ['Atlantic City, New Jersey', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Asian Americans are an ethnic group in the United States, where Atlantic City, New Jersey can be found.
Subject: ['Atlantic City, New Jersey', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Atlantic City is located in New Jersey in the United States, a country which includes the ethnic group of Native Americans.
Subject: ['Atlantic City, New Jersey', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: The United States includes the ethnic group of native Americans and is the location of Atlantic City, New Jersey.
Subject: ['Atlantic City, New Jersey', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Atlantic City, New Jersey, is in the United States, where one of the ethnic groups are Native Americans.
Subject: ['Atlantic City, New Jersey', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ White Americans']]
Text: Atlantic City, New Jersey, is located in the United States, where there is an ethnic group called White Americans.
Subject: ['Atlantic City, New Jersey', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'White Americans']

Triple: [['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ White Americans']]
Text: White Americans are an ethnic group in the United States, where Atlantic City, New Jersey is located.
Subject: ['Atlantic City, New Jersey', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'White Americans']

Triple: [['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ White Americans']]
Text: Atlantic City, New Jersey, is within the United States, a country of multiple ethnic groups, one of which is white Americans.
Subject: ['Atlantic City, New Jersey', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'White Americans']

Triple: [['__subject__ Attica, Indiana __predicate__ areaTotal __object__ 4.14 (square kilometres)', '__subject__ Attica, Indiana __predicate__ populationDensity __object__ 783.1 (inhabitants per square kilometre)']]
Text: Attica, Indiana covers an area of 4.14 sq km and has 783.1 inhabitants for each of those square kilometres.
Subject: ['Attica, Indiana', 'Attica, Indiana']
Predicate: ['areaTotal', 'populationDensity']
Object: ['4.14 (square kilometres)', '783.1 (inhabitants per square kilometre)']

Triple: [['__subject__ Attica, Indiana __predicate__ areaTotal __object__ 4.14 (square kilometres)', '__subject__ Attica, Indiana __predicate__ populationDensity __object__ 783.1 (inhabitants per square kilometre)']]
Text: Attica in Indiana, has a total area of 4.14 sq km and a population density of 783.1 inhabitants per sq km.
Subject: ['Attica, Indiana', 'Attica, Indiana']
Predicate: ['areaTotal', 'populationDensity']
Object: ['4.14 (square kilometres)', '783.1 (inhabitants per square kilometre)']

Triple: [['__subject__ Attica, Indiana __predicate__ country __object__ United States', '__subject__ Attica, Indiana __predicate__ isPartOf __object__ Fountain County, Indiana']]
Text: Attica is part of Fountain County, Indiana, US.
Subject: ['Attica, Indiana', 'Attica, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Fountain County, Indiana']

Triple: [['__subject__ Attica, Indiana __predicate__ country __object__ United States', '__subject__ Attica, Indiana __predicate__ isPartOf __object__ Fountain County, Indiana']]
Text: Attica, Indiana is in Fountain County, Indiana, which is part of the United States.
Subject: ['Attica, Indiana', 'Attica, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Fountain County, Indiana']

Triple: [['__subject__ Attica, Indiana __predicate__ country __object__ United States', '__subject__ Attica, Indiana __predicate__ isPartOf __object__ Fountain County, Indiana']]
Text: Attica is in Fountain County, Indiana, United States.
Subject: ['Attica, Indiana', 'Attica, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Fountain County, Indiana']

Triple: [['__subject__ Attica, Indiana __predicate__ country __object__ United States', '__subject__ Attica, Indiana __predicate__ isPartOf __object__ Logan Township, Fountain County, Indiana']]
Text: Attica is a city in Logan Township which is a part of Fountain County in Indiana, in the United States.
Subject: ['Attica, Indiana', 'Attica, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Logan Township, Fountain County, Indiana']

Triple: [['__subject__ Attica, Indiana __predicate__ country __object__ United States', '__subject__ Attica, Indiana __predicate__ isPartOf __object__ Logan Township, Fountain County, Indiana']]
Text: Attica is a city in Logan Township which is a part of Fountain County in Indiana, in the U.S.
Subject: ['Attica, Indiana', 'Attica, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Logan Township, Fountain County, Indiana']

Triple: [['__subject__ Attica, Indiana __predicate__ country __object__ United States', '__subject__ Attica, Indiana __predicate__ isPartOf __object__ Logan Township, Fountain County, Indiana']]
Text: Attica, Indiana is part of Logan Township, Fountain County, Indiana in the United States.
Subject: ['Attica, Indiana', 'Attica, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Logan Township, Fountain County, Indiana']

Triple: [['__subject__ Attica, Indiana __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Attica, Indiana is located in the United States where African Americans are one of the country's ethnic groups.
Subject: ['Attica, Indiana', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Attica, Indiana __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: The United States includes the ethnic group of African Americans and is the location of Attica, Indiana.
Subject: ['Attica, Indiana', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Attica, Indiana __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: African Americans are an ethnic group in the United States, the country which Attica, Indiana, is part of.
Subject: ['Attica, Indiana', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Attica, Indiana __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Attica, Indiana is part of the United States of America where one of the ethnic groups are Asian Americans.
Subject: ['Attica, Indiana', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Attica, Indiana __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Attica, Indiana is located in the United States where Asian Americans are an ethnic group.
Subject: ['Attica, Indiana', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Attica, Indiana __predicate__ isPartOf __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: Attica, Indiana is part of the United States, where the capital is Washington, D.C.
Subject: ['Attica, Indiana', 'United States']
Predicate: ['isPartOf', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ Attica, Indiana __predicate__ isPartOf __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: Attica, Indiana is part of the United States, where the capital city is Washington DC.
Subject: ['Attica, Indiana', 'United States']
Predicate: ['isPartOf', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ Attica, Indiana __predicate__ isPartOf __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: The United States has the capital city of Washington DC, and is the location of Attica, Indiana.
Subject: ['Attica, Indiana', 'United States']
Predicate: ['isPartOf', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ Auburn, Alabama __predicate__ areaTotal __object__ 140.8 (square kilometres)', '__subject__ Auburn, Alabama __predicate__ populationDensity __object__ 368.65 (inhabitants per square kilometre)']]
Text: Auburn, Alabama has a population density of 368.65 inhabitants per sq km, and a total area of 140.8 Sq Km.
Subject: ['Auburn, Alabama', 'Auburn, Alabama']
Predicate: ['areaTotal', 'populationDensity']
Object: ['140.8 (square kilometres)', '368.65 (inhabitants per square kilometre)']

Triple: [['__subject__ Auburn, Alabama __predicate__ areaTotal __object__ 140.8 (square kilometres)', '__subject__ Auburn, Alabama __predicate__ populationDensity __object__ 368.65 (inhabitants per square kilometre)']]
Text: Auburn Alabama has a total area of 140.8 Sq Km and a population density of 368.65 inhabitants per square kilometre.
Subject: ['Auburn, Alabama', 'Auburn, Alabama']
Predicate: ['areaTotal', 'populationDensity']
Object: ['140.8 (square kilometres)', '368.65 (inhabitants per square kilometre)']

Triple: [['__subject__ Auburn, Alabama __predicate__ areaTotal __object__ 140.8 (square kilometres)', '__subject__ Auburn, Alabama __predicate__ populationDensity __object__ 368.65 (inhabitants per square kilometre)']]
Text: The city of Auburn, Alabama has a total area of 140.8 sq kms and a population density of 368.65 inhabitants per sq km.
Subject: ['Auburn, Alabama', 'Auburn, Alabama']
Predicate: ['areaTotal', 'populationDensity']
Object: ['140.8 (square kilometres)', '368.65 (inhabitants per square kilometre)']

Triple: [['__subject__ Auburn, Alabama __predicate__ country __object__ United States', '__subject__ Auburn, Alabama __predicate__ isPartOf __object__ Alabama']]
Text: Auburn is part of Alabama in the United States.
Subject: ['Auburn, Alabama', 'Auburn, Alabama']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Alabama']

Triple: [['__subject__ Auburn, Alabama __predicate__ country __object__ United States', '__subject__ Auburn, Alabama __predicate__ isPartOf __object__ Alabama']]
Text: Auburn, Alabama is located in the U.S.
Subject: ['Auburn, Alabama', 'Auburn, Alabama']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Alabama']

Triple: [['__subject__ Auburn, Alabama __predicate__ country __object__ United States', '__subject__ Auburn, Alabama __predicate__ isPartOf __object__ Alabama']]
Text: Auburn, Alabama can be found in the United States.
Subject: ['Auburn, Alabama', 'Auburn, Alabama']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Alabama']

Triple: [['__subject__ Auburn, Alabama __predicate__ country __object__ United States', '__subject__ Auburn, Alabama __predicate__ isPartOf __object__ Lee County, Alabama']]
Text: Auburn, Lee County, Alabama is located in the United States.
Subject: ['Auburn, Alabama', 'Auburn, Alabama']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Lee County, Alabama']

Triple: [['__subject__ Auburn, Alabama __predicate__ country __object__ United States', '__subject__ Auburn, Alabama __predicate__ isPartOf __object__ Lee County, Alabama']]
Text: Auburn is part of Lee County, Alabama, in the United States.
Subject: ['Auburn, Alabama', 'Auburn, Alabama']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Lee County, Alabama']

Triple: [['__subject__ Auburn, Alabama __predicate__ country __object__ United States', '__subject__ Auburn, Alabama __predicate__ isPartOf __object__ Lee County, Alabama']]
Text: Auburn is part of Lee County, Alabama, United States.
Subject: ['Auburn, Alabama', 'Auburn, Alabama']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Lee County, Alabama']

Triple: [['__subject__ Auburn, Alabama __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: African Americans are an ethnic group in the United States where Auburn, Alabama is located.
Subject: ['Auburn, Alabama', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Auburn, Alabama __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Auburn, Alabama can be found in the United States, where African Americans are an ethnic group.
Subject: ['Auburn, Alabama', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Auburn, Alabama __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: One of the ethnic groups in the United States are the African Americans and the country is the location of Auburn, Alabama.
Subject: ['Auburn, Alabama', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Auburn, Alabama __predicate__ country __object__ United States', '__subject__ United States __predicate__ language __object__ English language']]
Text: Auburn, Alabama is in the United States where the official language is English.
Subject: ['Auburn, Alabama', 'United States']
Predicate: ['country', 'language']
Object: ['United States', 'English language']

Triple: [['__subject__ Auburn, Alabama __predicate__ country __object__ United States', '__subject__ United States __predicate__ language __object__ English language']]
Text: Auburn, Alabama is located in the United States where English is spoken.
Subject: ['Auburn, Alabama', 'United States']
Predicate: ['country', 'language']
Object: ['United States', 'English language']

Triple: [['__subject__ Auburn, Alabama __predicate__ country __object__ United States', '__subject__ United States __predicate__ language __object__ English language']]
Text: Auburn Alabama is in the United States, where English is spoken.
Subject: ['Auburn, Alabama', 'United States']
Predicate: ['country', 'language']
Object: ['United States', 'English language']

Triple: [['__subject__ Auburn, Alabama __predicate__ isPartOf __object__ Lee County, Alabama', '__subject__ Lee County, Alabama __predicate__ country __object__ United States']]
Text: Auburn is part of Lee County in Alabama, United States.
Subject: ['Auburn, Alabama', 'Lee County, Alabama']
Predicate: ['isPartOf', 'country']
Object: ['Lee County, Alabama', 'United States']

Triple: [['__subject__ Auburn, Washington __predicate__ country __object__ United States', '__subject__ Auburn, Washington __predicate__ isPartOf __object__ King County, Washington']]
Text: Auburn is part of King County in Washington, which is located within the United States.
Subject: ['Auburn, Washington', 'Auburn, Washington']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'King County, Washington']

Triple: [['__subject__ Auburn, Washington __predicate__ country __object__ United States', '__subject__ Auburn, Washington __predicate__ isPartOf __object__ King County, Washington']]
Text: Auburn is part of King County in Washington, in the U.S.
Subject: ['Auburn, Washington', 'Auburn, Washington']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'King County, Washington']

Triple: [['__subject__ Auburn, Washington __predicate__ country __object__ United States', '__subject__ Auburn, Washington __predicate__ isPartOf __object__ King County, Washington']]
Text: Auburn is part of King County, Washington, in the U.S.
Subject: ['Auburn, Washington', 'Auburn, Washington']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'King County, Washington']

Triple: [['__subject__ Auburn, Washington __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: African Americans are an ethnic group within the United States where you can find Auburn, Washington.
Subject: ['Auburn, Washington', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Auburn, Washington __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Auburn, Washington is located in the United States, where African Americans are an ethnic group.
Subject: ['Auburn, Washington', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Auburn, Washington __predicate__ isPartOf __object__ Pierce County, Washington', '__subject__ Auburn, Washington __predicate__ country __object__ United States']]
Text: Auburn is in Pierce County, Washington, in the United States.
Subject: ['Auburn, Washington', 'Auburn, Washington']
Predicate: ['isPartOf', 'country']
Object: ['Pierce County, Washington', 'United States']

Triple: [['__subject__ Auburn, Washington __predicate__ isPartOf __object__ Pierce County, Washington', '__subject__ Auburn, Washington __predicate__ country __object__ United States']]
Text: Auburn is part of Pierce County, Washington, in the United States.
Subject: ['Auburn, Washington', 'Auburn, Washington']
Predicate: ['isPartOf', 'country']
Object: ['Pierce County, Washington', 'United States']

Triple: [['__subject__ Auburn, Washington __predicate__ isPartOf __object__ Washington (state)', '__subject__ Auburn, Washington __predicate__ country __object__ United States']]
Text: Auburn is located within the state of Washington, United States.
Subject: ['Auburn, Washington', 'Auburn, Washington']
Predicate: ['isPartOf', 'country']
Object: ['Washington (state)', 'United States']

Triple: [['__subject__ Auburn, Washington __predicate__ isPartOf __object__ Washington (state)', '__subject__ Auburn, Washington __predicate__ country __object__ United States']]
Text: Auburn is part of Washington (state), located in the United States.
Subject: ['Auburn, Washington', 'Auburn, Washington']
Predicate: ['isPartOf', 'country']
Object: ['Washington (state)', 'United States']

Triple: [['__subject__ Auburn, Washington __predicate__ isPartOf __object__ Washington (state)', '__subject__ Auburn, Washington __predicate__ country __object__ United States']]
Text: Auburn is located within the state of Washington in the U.S.
Subject: ['Auburn, Washington', 'Auburn, Washington']
Predicate: ['isPartOf', 'country']
Object: ['Washington (state)', 'United States']

Triple: [['__subject__ Auburn, Washington __predicate__ isPartOf __object__ Washington (state)', '__subject__ Washington (state) __predicate__ capital __object__ Olympia, Washington']]
Text: Auburn is located within the state of Washington where Olympia is the capital.
Subject: ['Auburn, Washington', 'Washington (state)']
Predicate: ['isPartOf', 'capital']
Object: ['Washington (state)', 'Olympia, Washington']

Triple: [['__subject__ Auburn, Washington __predicate__ isPartOf __object__ Washington (state)', '__subject__ Washington (state) __predicate__ capital __object__ Olympia, Washington']]
Text: Auburn is located in Washington state where the capital is Olympia.
Subject: ['Auburn, Washington', 'Washington (state)']
Predicate: ['isPartOf', 'capital']
Object: ['Washington (state)', 'Olympia, Washington']

Triple: [['__subject__ Auburn, Washington __predicate__ isPartOf __object__ Washington (state)', '__subject__ Washington (state) __predicate__ capital __object__ Olympia, Washington']]
Text: Auburn can be found in the state of Washington, where the capital is Olympia.
Subject: ['Auburn, Washington', 'Washington (state)']
Predicate: ['isPartOf', 'capital']
Object: ['Washington (state)', 'Olympia, Washington']

Triple: [['__subject__ Auburn, Washington __predicate__ isPartOf __object__ Washington (state)', '__subject__ Washington (state) __predicate__ country __object__ United States']]
Text: Auburn is part of the state of Washington in the United States.
Subject: ['Auburn, Washington', 'Washington (state)']
Predicate: ['isPartOf', 'country']
Object: ['Washington (state)', 'United States']

Triple: [['__subject__ Auburn, Washington __predicate__ isPartOf __object__ Washington (state)', '__subject__ Washington (state) __predicate__ country __object__ United States']]
Text: Auburn is part of Washington state, located in the United States.
Subject: ['Auburn, Washington', 'Washington (state)']
Predicate: ['isPartOf', 'country']
Object: ['Washington (state)', 'United States']

Triple: [['__subject__ Auburn, Washington __predicate__ populationDensity __object__ 914.8 (inhabitants per square kilometre)', '__subject__ Auburn, Washington __predicate__ areaTotal __object__ 77.41 (square kilometres)']]
Text: The population density, of Auburn (Washington), is 914.8 inhabitants per square kilometre and its total area is 77.41 sq kms.
Subject: ['Auburn, Washington', 'Auburn, Washington']
Predicate: ['populationDensity', 'areaTotal']
Object: ['914.8 (inhabitants per square kilometre)', '77.41 (square kilometres)']

Triple: [['__subject__ Auburn, Washington __predicate__ populationDensity __object__ 914.8 (inhabitants per square kilometre)', '__subject__ Auburn, Washington __predicate__ areaTotal __object__ 77.41 (square kilometres)']]
Text: Auburn, Washington has a population density of 914.8 inhabitants per sq km and a total area of 77.41 sq kms.
Subject: ['Auburn, Washington', 'Auburn, Washington']
Predicate: ['populationDensity', 'areaTotal']
Object: ['914.8 (inhabitants per square kilometre)', '77.41 (square kilometres)']

Triple: [['__subject__ Austin, Texas __predicate__ country __object__ United States', '__subject__ Austin, Texas __predicate__ isPartOf __object__ Hays County, Texas']]
Text: Austin is in Hays County, Texas in the United States.
Subject: ['Austin, Texas', 'Austin, Texas']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Hays County, Texas']

Triple: [['__subject__ Austin, Texas __predicate__ country __object__ United States', '__subject__ Austin, Texas __predicate__ isPartOf __object__ Hays County, Texas']]
Text: Austin is a part of Hays County in Texas which is a state of the United States.
Subject: ['Austin, Texas', 'Austin, Texas']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Hays County, Texas']

Triple: [['__subject__ Austin, Texas __predicate__ country __object__ United States', '__subject__ Austin, Texas __predicate__ isPartOf __object__ Hays County, Texas']]
Text: Austin is part of Hays County, Texas, United States.
Subject: ['Austin, Texas', 'Austin, Texas']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Hays County, Texas']

Triple: [['__subject__ Austin, Texas __predicate__ country __object__ United States', '__subject__ Austin, Texas __predicate__ isPartOf __object__ Williamson County, Texas']]
Text: Austin is part of Williamson County in Texas which is part of the United States of America.
Subject: ['Austin, Texas', 'Austin, Texas']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Williamson County, Texas']

Triple: [['__subject__ Austin, Texas __predicate__ country __object__ United States', '__subject__ Austin, Texas __predicate__ isPartOf __object__ Williamson County, Texas']]
Text: Austin is part of Williamson County, Texas, United States.
Subject: ['Austin, Texas', 'Austin, Texas']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Williamson County, Texas']

Triple: [['__subject__ Austin, Texas __predicate__ country __object__ United States', '__subject__ Austin, Texas __predicate__ isPartOf __object__ Williamson County, Texas']]
Text: Austin, Texas, is part of Williamson County, in the United States.
Subject: ['Austin, Texas', 'Austin, Texas']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Williamson County, Texas']

Triple: [['__subject__ Austin, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ demonym __object__ Americans']]
Text: Austin, Texas is located within the country of the United States where there are Americans.
Subject: ['Austin, Texas', 'United States']
Predicate: ['country', 'demonym']
Object: ['United States', 'Americans']

Triple: [['__subject__ Austin, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ demonym __object__ Americans']]
Text: Austin, Texas, is in the United States, the country where the inhabitants, are known as Americans.
Subject: ['Austin, Texas', 'United States']
Predicate: ['country', 'demonym']
Object: ['United States', 'Americans']

Triple: [['__subject__ Austin, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ demonym __object__ Americans']]
Text: Austin, Texas is located within the United States whose inhabitants are known as Americans.
Subject: ['Austin, Texas', 'United States']
Predicate: ['country', 'demonym']
Object: ['United States', 'Americans']

Triple: [['__subject__ Austin, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: African Americans are an ethnic group in the United States, where Austin, Texas is located.
Subject: ['Austin, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Austin, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: One of the ethnic groups in the United States (where Austin, Texas is located) are the African Americans.
Subject: ['Austin, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Austin, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Austin, Texas is part of the United States of America where one of the ethnic groups are African Americans.
Subject: ['Austin, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Austin, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Austin, Texas is located in the United States where Native Americans are among the country's ethnic groups.
Subject: ['Austin, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Austin, Texas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: The United States of America is the location of Austin, Texas and includes the Native Americans among its ethnic groups.
Subject: ['Austin, Texas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Austin, Texas __predicate__ isPartOf __object__ Hays County, Texas', '__subject__ Hays County, Texas __predicate__ largestCity __object__ San Marcos, Texas']]
Text: Hays County, Texas is part of Austin and the largest city is San Marcos.
Subject: ['Austin, Texas', 'Hays County, Texas']
Predicate: ['isPartOf', 'largestCity']
Object: ['Hays County, Texas', 'San Marcos, Texas']

Triple: [['__subject__ Austin, Texas __predicate__ isPartOf __object__ Hays County, Texas', '__subject__ Hays County, Texas __predicate__ largestCity __object__ San Marcos, Texas']]
Text: Austin is in Hays County, Texas, and the largest city of Hays County is San Marcos.
Subject: ['Austin, Texas', 'Hays County, Texas']
Predicate: ['isPartOf', 'largestCity']
Object: ['Hays County, Texas', 'San Marcos, Texas']

Triple: [['__subject__ Austin, Texas __predicate__ isPartOf __object__ Hays County, Texas', '__subject__ Hays County, Texas __predicate__ largestCity __object__ San Marcos, Texas']]
Text: Austin is in Hays County, Texas where the largest city is San Marcos.
Subject: ['Austin, Texas', 'Hays County, Texas']
Predicate: ['isPartOf', 'largestCity']
Object: ['Hays County, Texas', 'San Marcos, Texas']

Triple: [['__subject__ Austin, Texas __predicate__ isPartOf __object__ Texas', '__subject__ Texas __predicate__ largestCity __object__ Houston']]
Text: Austin is located in Texas which has Houston as its largest city.
Subject: ['Austin, Texas', 'Texas']
Predicate: ['isPartOf', 'largestCity']
Object: ['Texas', 'Houston']

Triple: [['__subject__ Austin, Texas __predicate__ isPartOf __object__ Texas', '__subject__ Texas __predicate__ largestCity __object__ Houston']]
Text: Austin is part of the state of Texas where Houston is the largest city.
Subject: ['Austin, Texas', 'Texas']
Predicate: ['isPartOf', 'largestCity']
Object: ['Texas', 'Houston']

Triple: [['__subject__ Austin, Texas __predicate__ isPartOf __object__ Texas', '__subject__ Texas __predicate__ largestCity __object__ Houston']]
Text: Houston is the largest city in Texas where there is also Austin.
Subject: ['Austin, Texas', 'Texas']
Predicate: ['isPartOf', 'largestCity']
Object: ['Texas', 'Houston']

Triple: [['__subject__ Austin, Texas __predicate__ populationDensity __object__ 1296.65 (inhabitants per square kilometre)', '__subject__ Austin, Texas __predicate__ areaTotal __object__ 703.95 (square kilometres)']]
Text: The population density of Austin, Texas, is 1296.65 inhabitants per sq km and its area is 703.95 sq. km.
Subject: ['Austin, Texas', 'Austin, Texas']
Predicate: ['populationDensity', 'areaTotal']
Object: ['1296.65 (inhabitants per square kilometre)', '703.95 (square kilometres)']

Triple: [['__subject__ Austin, Texas __predicate__ populationDensity __object__ 1296.65 (inhabitants per square kilometre)', '__subject__ Austin, Texas __predicate__ areaTotal __object__ 703.95 (square kilometres)']]
Text: Austin, Texas covers an area of 703.95 square kilometres and has 1296.65 inhabitants for each of those sq kilometres.
Subject: ['Austin, Texas', 'Austin, Texas']
Predicate: ['populationDensity', 'areaTotal']
Object: ['1296.65 (inhabitants per square kilometre)', '703.95 (square kilometres)']

Triple: [['__subject__ Austin, Texas __predicate__ populationDensity __object__ 1296.65 (inhabitants per square kilometre)', '__subject__ Austin, Texas __predicate__ areaTotal __object__ 703.95 (square kilometres)']]
Text: Austin, Texas has a population density of 1296.65 inhabitants per sq km and a total area of 703.95 square kilometres.
Subject: ['Austin, Texas', 'Austin, Texas']
Predicate: ['populationDensity', 'areaTotal']
Object: ['1296.65 (inhabitants per square kilometre)', '703.95 (square kilometres)']

Triple: [['__subject__ California __predicate__ language __object__ Chinese language', '__subject__ Anaheim, California __predicate__ isPartOf __object__ California']]
Text: Anaheim is part of California where chinese is spoken.
Subject: ['California', 'Anaheim, California']
Predicate: ['language', 'isPartOf']
Object: ['Chinese language', 'California']

Triple: [['__subject__ California __predicate__ language __object__ Chinese language', '__subject__ Anaheim, California __predicate__ isPartOf __object__ California']]
Text: Anaheim is part of California where Chinese language is spoken.
Subject: ['California', 'Anaheim, California']
Predicate: ['language', 'isPartOf']
Object: ['Chinese language', 'California']

Triple: [['__subject__ California __predicate__ language __object__ Chinese language', '__subject__ Anaheim, California __predicate__ isPartOf __object__ California']]
Text: California, where one of the languages spoken is Chinese, includes Anaheim.
Subject: ['California', 'Anaheim, California']
Predicate: ['language', 'isPartOf']
Object: ['Chinese language', 'California']

Triple: [['__subject__ California __predicate__ language __object__ English language', '__subject__ Anaheim, California __predicate__ isPartOf __object__ California']]
Text: Anaheim is part of California which uses the English language.
Subject: ['California', 'Anaheim, California']
Predicate: ['language', 'isPartOf']
Object: ['English language', 'California']

Triple: [['__subject__ California __predicate__ language __object__ English language', '__subject__ Anaheim, California __predicate__ isPartOf __object__ California']]
Text: Anaheim is part of California where the English language is spoken.
Subject: ['California', 'Anaheim, California']
Predicate: ['language', 'isPartOf']
Object: ['English language', 'California']

Triple: [['__subject__ California __predicate__ language __object__ English language', '__subject__ Anaheim, California __predicate__ isPartOf __object__ California']]
Text: The English language is spoken in California which includes Anaheim.
Subject: ['California', 'Anaheim, California']
Predicate: ['language', 'isPartOf']
Object: ['English language', 'California']

Triple: [['__subject__ DeKalb County, Georgia __predicate__ largestCity __object__ Dunwoody, Georgia', '__subject__ Atlanta __predicate__ isPartOf __object__ DeKalb County, Georgia']]
Text: Atlanta is part of DeKalb County in Georgia where Dunwoody is the largest city.
Subject: ['DeKalb County, Georgia', 'Atlanta']
Predicate: ['largestCity', 'isPartOf']
Object: ['Dunwoody, Georgia', 'DeKalb County, Georgia']

Triple: [['__subject__ Fountain County, Indiana __predicate__ country __object__ United States', '__subject__ Attica, Indiana __predicate__ isPartOf __object__ Fountain County, Indiana']]
Text: Attica, Indiana is in Fountain County, Indiana U.S.
Subject: ['Fountain County, Indiana', 'Attica, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Fountain County, Indiana']

Triple: [['__subject__ Fountain County, Indiana __predicate__ country __object__ United States', '__subject__ Attica, Indiana __predicate__ isPartOf __object__ Fountain County, Indiana']]
Text: Attica is located in Fountain County, Indiana, United States.
Subject: ['Fountain County, Indiana', 'Attica, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Fountain County, Indiana']

Triple: [['__subject__ Fountain County, Indiana __predicate__ country __object__ United States', '__subject__ Attica, Indiana __predicate__ isPartOf __object__ Fountain County, Indiana']]
Text: Attica is located in Fountain County, Indiana in the United States.
Subject: ['Fountain County, Indiana', 'Attica, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Fountain County, Indiana']

Triple: [['__subject__ Fulton County, Georgia __predicate__ country __object__ United States', '__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Fulton County, Georgia']]
Text: Fulton County is the location of Alpharetta, Georgia, in the United States.
Subject: ['Fulton County, Georgia', 'Alpharetta, Georgia']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Fulton County, Georgia']

Triple: [['__subject__ Fulton County, Georgia __predicate__ country __object__ United States', '__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Fulton County, Georgia']]
Text: Alpharetta is part of Fulton County in Georgia, United States.
Subject: ['Fulton County, Georgia', 'Alpharetta, Georgia']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Fulton County, Georgia']

Triple: [['__subject__ Fulton County, Georgia __predicate__ country __object__ United States', '__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Fulton County, Georgia']]
Text: Alpharetta, is part of Fulton County, in Georgia, in the United States.
Subject: ['Fulton County, Georgia', 'Alpharetta, Georgia']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Fulton County, Georgia']

Triple: [['__subject__ Fulton County, Georgia __predicate__ largestCity __object__ Atlanta', '__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Fulton County, Georgia']]
Text: Alpharetta is part of Fulton County in Georgia where the largest city is Atlanta.
Subject: ['Fulton County, Georgia', 'Alpharetta, Georgia']
Predicate: ['largestCity', 'isPartOf']
Object: ['Atlanta', 'Fulton County, Georgia']

Triple: [['__subject__ Fulton County, Georgia __predicate__ largestCity __object__ Atlanta', '__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Fulton County, Georgia']]
Text: Atlanta is the largest city of Fulton County, Georgia, the county where Alpharetta is located.
Subject: ['Fulton County, Georgia', 'Alpharetta, Georgia']
Predicate: ['largestCity', 'isPartOf']
Object: ['Atlanta', 'Fulton County, Georgia']

Triple: [['__subject__ Georgia (U.S. state) __predicate__ country __object__ United States', '__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Georgia (U.S. state)']]
Text: Alpharetta is part of the state of Georgia located in the United States.
Subject: ['Georgia (U.S. state)', 'Alpharetta, Georgia']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Georgia (U.S. state)']

Triple: [['__subject__ Georgia (U.S. state) __predicate__ country __object__ United States', '__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Georgia (U.S. state)']]
Text: Alpharetta is part of the state of Georgia, in the U.S.
Subject: ['Georgia (U.S. state)', 'Alpharetta, Georgia']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Georgia (U.S. state)']

Triple: [['__subject__ Georgia (U.S. state) __predicate__ country __object__ United States', '__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Georgia (U.S. state)']]
Text: Alpharetta is part of the state of Georgia in the US.
Subject: ['Georgia (U.S. state)', 'Alpharetta, Georgia']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Georgia (U.S. state)']

Triple: [['__subject__ Indiana __predicate__ capital __object__ Indianapolis', '__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Indiana']]
Text: Alexandria is part of Indiana, where the capital is Indianapolis.
Subject: ['Indiana', 'Alexandria, Indiana']
Predicate: ['capital', 'isPartOf']
Object: ['Indianapolis', 'Indiana']

Triple: [['__subject__ Indiana __predicate__ capital __object__ Indianapolis', '__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Indiana']]
Text: Alexandria is located in Indiana where Indianapolis is the capital.
Subject: ['Indiana', 'Alexandria, Indiana']
Predicate: ['capital', 'isPartOf']
Object: ['Indianapolis', 'Indiana']

Triple: [['__subject__ Indiana __predicate__ capital __object__ Indianapolis', '__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Indiana']]
Text: Alexandria is part of Indiana where the state capital is Indianapolis.
Subject: ['Indiana', 'Alexandria, Indiana']
Predicate: ['capital', 'isPartOf']
Object: ['Indianapolis', 'Indiana']

Triple: [['__subject__ Indiana __predicate__ capital __object__ Indianapolis', '__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Indiana']]
Text: The city of Anderson is part of Indiana, the capital of which is Indianapolis.
Subject: ['Indiana', 'Anderson, Indiana']
Predicate: ['capital', 'isPartOf']
Object: ['Indianapolis', 'Indiana']

Triple: [['__subject__ Indiana __predicate__ capital __object__ Indianapolis', '__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Indiana']]
Text: Anderson is part of Indiana, where Indianapolis is the capital.
Subject: ['Indiana', 'Anderson, Indiana']
Predicate: ['capital', 'isPartOf']
Object: ['Indianapolis', 'Indiana']

Triple: [['__subject__ Indiana __predicate__ capital __object__ Indianapolis', '__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Indiana']]
Text: Indiana is home to Anderson city and has Indianapolis as a capital.
Subject: ['Indiana', 'Anderson, Indiana']
Predicate: ['capital', 'isPartOf']
Object: ['Indianapolis', 'Indiana']

Triple: [['__subject__ King County, Washington __predicate__ country __object__ United States', '__subject__ Auburn, Washington __predicate__ isPartOf __object__ King County, Washington']]
Text: Auburn is located in King County, Washington, United States.
Subject: ['King County, Washington', 'Auburn, Washington']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'King County, Washington']

Triple: [['__subject__ Madison County, Indiana __predicate__ country __object__ United States', '__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Madison County, Indiana']]
Text: Alexandria is part of Madison County, Indiana, United States.
Subject: ['Madison County, Indiana', 'Alexandria, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Madison County, Indiana']

Triple: [['__subject__ Madison County, Indiana __predicate__ country __object__ United States', '__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Madison County, Indiana']]
Text: Alexandria is part of Madison County, Indiana, which is in the country of the United States.
Subject: ['Madison County, Indiana', 'Alexandria, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Madison County, Indiana']

Triple: [['__subject__ Madison County, Indiana __predicate__ country __object__ United States', '__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Madison County, Indiana']]
Text: Anderson is located in Madison County, Indiana, United States.
Subject: ['Madison County, Indiana', 'Anderson, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Madison County, Indiana']

Triple: [['__subject__ Madison County, Indiana __predicate__ country __object__ United States', '__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Madison County, Indiana']]
Text: Madison County, Indiana, United States, is home to Anderson.
Subject: ['Madison County, Indiana', 'Anderson, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Madison County, Indiana']

Triple: [['__subject__ Madison County, Indiana __predicate__ country __object__ United States', '__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Madison County, Indiana']]
Text: Anderson is loctated in Madison County, Indiana, United States.
Subject: ['Madison County, Indiana', 'Anderson, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Madison County, Indiana']

Triple: [['__subject__ Michigan __predicate__ capital __object__ Lansing, Michigan', '__subject__ Ann Arbor, Michigan __predicate__ isPartOf __object__ Michigan']]
Text: Ann Arbor is located in Michigan where the capital is Lansing.
Subject: ['Michigan', 'Ann Arbor, Michigan']
Predicate: ['capital', 'isPartOf']
Object: ['Lansing, Michigan', 'Michigan']

Triple: [['__subject__ Michigan __predicate__ capital __object__ Lansing, Michigan', '__subject__ Ann Arbor, Michigan __predicate__ isPartOf __object__ Michigan']]
Text: Ann Arbor is in the state of Michigan whose capital is Lansing.
Subject: ['Michigan', 'Ann Arbor, Michigan']
Predicate: ['capital', 'isPartOf']
Object: ['Lansing, Michigan', 'Michigan']

Triple: [['__subject__ Michigan __predicate__ largestCity __object__ Detroit', '__subject__ Ann Arbor, Michigan __predicate__ isPartOf __object__ Michigan']]
Text: Ann Arbor is found in Michigan where Detroit (its largest city) is also located.
Subject: ['Michigan', 'Ann Arbor, Michigan']
Predicate: ['largestCity', 'isPartOf']
Object: ['Detroit', 'Michigan']

Triple: [['__subject__ Michigan __predicate__ largestCity __object__ Detroit', '__subject__ Ann Arbor, Michigan __predicate__ isPartOf __object__ Michigan']]
Text: Ann Arbor is part of Michigan which has Detroit as its largest city.
Subject: ['Michigan', 'Ann Arbor, Michigan']
Predicate: ['largestCity', 'isPartOf']
Object: ['Detroit', 'Michigan']

Triple: [['__subject__ Michigan __predicate__ largestCity __object__ Detroit', '__subject__ Ann Arbor, Michigan __predicate__ isPartOf __object__ Michigan']]
Text: Ann Arbor is located in Michigan where Detroit is the largest city.
Subject: ['Michigan', 'Ann Arbor, Michigan']
Predicate: ['largestCity', 'isPartOf']
Object: ['Detroit', 'Michigan']

Triple: [['__subject__ Monroe Township, Madison County, Indiana __predicate__ country __object__ United States', '__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Monroe Township, Madison County, Indiana']]
Text: Alexandria is part of the Monroe Township which is in Madison County, in Indiana, in the U.S.
Subject: ['Monroe Township, Madison County, Indiana', 'Alexandria, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Monroe Township, Madison County, Indiana']

Triple: [['__subject__ Monroe Township, Madison County, Indiana __predicate__ country __object__ United States', '__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Monroe Township, Madison County, Indiana']]
Text: Alexandria is part of the Monroe Township which is in Madison County, Indiana, in the United States.
Subject: ['Monroe Township, Madison County, Indiana', 'Alexandria, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Monroe Township, Madison County, Indiana']

Triple: [['__subject__ Monroe Township, Madison County, Indiana __predicate__ country __object__ United States', '__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Monroe Township, Madison County, Indiana']]
Text: Alexandria is part of Monroe Township, in Madison County, Indiana, United States.
Subject: ['Monroe Township, Madison County, Indiana', 'Alexandria, Indiana']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Monroe Township, Madison County, Indiana']

Triple: [['__subject__ New Jersey __predicate__ country __object__ United States', '__subject__ Atlantic City, New Jersey __predicate__ isPartOf __object__ New Jersey']]
Text: Atlantic City is part of New Jersey in the United States.
Subject: ['New Jersey', 'Atlantic City, New Jersey']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'New Jersey']

Triple: [['__subject__ New Jersey __predicate__ largestCity __object__ Newark, New Jersey', '__subject__ Atlantic City, New Jersey __predicate__ isPartOf __object__ New Jersey']]
Text: Atlantic City can be found in New Jersey, where the largest city is Newark.
Subject: ['New Jersey', 'Atlantic City, New Jersey']
Predicate: ['largestCity', 'isPartOf']
Object: ['Newark, New Jersey', 'New Jersey']

Triple: [['__subject__ New Jersey __predicate__ largestCity __object__ Newark, New Jersey', '__subject__ Atlantic City, New Jersey __predicate__ isPartOf __object__ New Jersey']]
Text: Newark is the largest city in New Jersey, Atlantic City is also located in the state.
Subject: ['New Jersey', 'Atlantic City, New Jersey']
Predicate: ['largestCity', 'isPartOf']
Object: ['Newark, New Jersey', 'New Jersey']

Triple: [['__subject__ New Jersey __predicate__ largestCity __object__ Newark, New Jersey', '__subject__ Atlantic City, New Jersey __predicate__ isPartOf __object__ New Jersey']]
Text: Atlantic City is part of New Jersey where the largest city is Newark.
Subject: ['New Jersey', 'Atlantic City, New Jersey']
Predicate: ['largestCity', 'isPartOf']
Object: ['Newark, New Jersey', 'New Jersey']

Triple: [['__subject__ Texas __predicate__ capital __object__ Austin, Texas', '__subject__ Arlington, Texas __predicate__ isPartOf __object__ Texas']]
Text: Arlington is part of Texas, the capital of which is Austin.
Subject: ['Texas', 'Arlington, Texas']
Predicate: ['capital', 'isPartOf']
Object: ['Austin, Texas', 'Texas']

Triple: [['__subject__ Texas __predicate__ capital __object__ Austin, Texas', '__subject__ Arlington, Texas __predicate__ isPartOf __object__ Texas']]
Text: Arlington is part of the state of Texas, the capital city of which, is Austin.
Subject: ['Texas', 'Arlington, Texas']
Predicate: ['capital', 'isPartOf']
Object: ['Austin, Texas', 'Texas']

Triple: [['__subject__ Texas __predicate__ capital __object__ Austin, Texas', '__subject__ Arlington, Texas __predicate__ isPartOf __object__ Texas']]
Text: Austin is the capital city of Texas and Arlington is part of the state too.
Subject: ['Texas', 'Arlington, Texas']
Predicate: ['capital', 'isPartOf']
Object: ['Austin, Texas', 'Texas']

Triple: [['__subject__ Texas __predicate__ language __object__ Spanish language', '__subject__ Arlington, Texas __predicate__ isPartOf __object__ Texas']]
Text: Spanish is spoken in Texas where Arlington is located.
Subject: ['Texas', 'Arlington, Texas']
Predicate: ['language', 'isPartOf']
Object: ['Spanish language', 'Texas']

Triple: [['__subject__ Texas __predicate__ language __object__ Spanish language', '__subject__ Arlington, Texas __predicate__ isPartOf __object__ Texas']]
Text: Arlington is part of the state of Texas, where one of the languages used is Spanish.
Subject: ['Texas', 'Arlington, Texas']
Predicate: ['language', 'isPartOf']
Object: ['Spanish language', 'Texas']

Triple: [['__subject__ Texas __predicate__ language __object__ Spanish language', '__subject__ Arlington, Texas __predicate__ isPartOf __object__ Texas']]
Text: Arlington is part of the state of Texas, where the Spanish language is spoken.
Subject: ['Texas', 'Arlington, Texas']
Predicate: ['language', 'isPartOf']
Object: ['Spanish language', 'Texas']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Abilene, Texas __predicate__ country __object__ United States']]
Text: Abilene, Texas is located within the United States, where Washington, D.C. is the country's capital.
Subject: ['United States', 'Abilene, Texas']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Abilene, Texas __predicate__ country __object__ United States']]
Text: Abilene, Texas is part of the United States of America which has Washington D.C. as the capital.
Subject: ['United States', 'Abilene, Texas']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Abilene, Texas __predicate__ country __object__ United States']]
Text: The United States capital is Washington DC while Abilene is located in Texas.
Subject: ['United States', 'Abilene, Texas']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Akron, Ohio __predicate__ country __object__ United States']]
Text: The country of Akron, Ohio, is United States, the capital of which, is Washington, D.C.
Subject: ['United States', 'Akron, Ohio']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Akron, Ohio __predicate__ country __object__ United States']]
Text: Akron, Ohio is located in the United States, the capital city of which, is Washington DC.
Subject: ['United States', 'Akron, Ohio']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Akron, Ohio __predicate__ country __object__ United States']]
Text: Akron, Ohio is in the U.S. whose capital is Washington, D.C.
Subject: ['United States', 'Akron, Ohio']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Akron, Ohio __predicate__ isPartOf __object__ United States']]
Text: Akron, Ohio is part of the United States, where Washington, D.C. is the capital.
Subject: ['United States', 'Akron, Ohio']
Predicate: ['capital', 'isPartOf']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Akron, Ohio __predicate__ isPartOf __object__ United States']]
Text: Akron, Ohio is part of the United States, the capital of which is Washington, D.C.
Subject: ['United States', 'Akron, Ohio']
Predicate: ['capital', 'isPartOf']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Akron, Ohio __predicate__ isPartOf __object__ United States']]
Text: Akron Ohio is part of the United States, the capital of which is, Washington, D.C.
Subject: ['United States', 'Akron, Ohio']
Predicate: ['capital', 'isPartOf']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Albany, Georgia __predicate__ isPartOf __object__ United States']]
Text: Albany, Georgia is in the United States whose capital city is Washington D.C.
Subject: ['United States', 'Albany, Georgia']
Predicate: ['capital', 'isPartOf']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Albany, Georgia __predicate__ isPartOf __object__ United States']]
Text: Albany is in Georgia which is a part of the United States, where Washington, D.C. is the capital.
Subject: ['United States', 'Albany, Georgia']
Predicate: ['capital', 'isPartOf']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Albany, Oregon __predicate__ country __object__ United States']]
Text: Albany, Oregon is located within the United States which has the capital of Washington DC.
Subject: ['United States', 'Albany, Oregon']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Albany, Oregon __predicate__ country __object__ United States']]
Text: Albany, Oregon is in the United States, the capital of which, is Washington, D.C.
Subject: ['United States', 'Albany, Oregon']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Albany, Oregon __predicate__ country __object__ United States']]
Text: Albany (Oregon) is in the U.S., the capital of which is Washington, D.C.
Subject: ['United States', 'Albany, Oregon']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Angola, Indiana __predicate__ isPartOf __object__ United States']]
Text: Angola is part of Indiana, United States, the capital of which is Washington, D.C.
Subject: ['United States', 'Angola, Indiana']
Predicate: ['capital', 'isPartOf']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Angola, Indiana __predicate__ isPartOf __object__ United States']]
Text: Washington DC is the capital of the United States, where Angola, Indiana can be found.
Subject: ['United States', 'Angola, Indiana']
Predicate: ['capital', 'isPartOf']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Angola, Indiana __predicate__ isPartOf __object__ United States']]
Text: Angola is located in Indiana in the United States and the country's capital is Washington DC.
Subject: ['United States', 'Angola, Indiana']
Predicate: ['capital', 'isPartOf']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Attica, Indiana __predicate__ country __object__ United States']]
Text: Attica, Indiana is in the US, where the capital is Washington DC.
Subject: ['United States', 'Attica, Indiana']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Attica, Indiana __predicate__ country __object__ United States']]
Text: Attica, Indiana is part of the United States of America which has Washington D.C. as the capital.
Subject: ['United States', 'Attica, Indiana']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Attica, Indiana __predicate__ country __object__ United States']]
Text: Attica, Indiana is in the United States, where the capital city is Washington DC.
Subject: ['United States', 'Attica, Indiana']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Auburn, Washington __predicate__ country __object__ United States']]
Text: The capital of the US is Washington DC, and the country is the location of Auburn, Washington.
Subject: ['United States', 'Auburn, Washington']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Auburn, Washington __predicate__ country __object__ United States']]
Text: Auburn, Washington is located within the United States, the capital of which is Washington, D.C.
Subject: ['United States', 'Auburn, Washington']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Auburn, Washington __predicate__ isPartOf __object__ United States']]
Text: Auburn, Washington is part of the United States which has the capital city of Washington DC.
Subject: ['United States', 'Auburn, Washington']
Predicate: ['capital', 'isPartOf']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Auburn, Washington __predicate__ isPartOf __object__ United States']]
Text: Auburn, Washington is part of the United States, where Washington D.C. is the capital.
Subject: ['United States', 'Auburn, Washington']
Predicate: ['capital', 'isPartOf']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Auburn, Washington __predicate__ isPartOf __object__ United States']]
Text: Auburn, Washington is part of the United States whose capital is Washington DC.
Subject: ['United States', 'Auburn, Washington']
Predicate: ['capital', 'isPartOf']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ African Americans', '__subject__ Angola, Indiana __predicate__ country __object__ United States']]
Text: African Americans are an ethnic group in the United States, where Angola, Indiana is located.
Subject: ['United States', 'Angola, Indiana']
Predicate: ['ethnicGroup', 'country']
Object: ['African Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ African Americans', '__subject__ Angola, Indiana __predicate__ country __object__ United States']]
Text: Angola, Indiana is in the U.S where African Americans are an ethnic group.
Subject: ['United States', 'Angola, Indiana']
Predicate: ['ethnicGroup', 'country']
Object: ['African Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ African Americans', '__subject__ Angola, Indiana __predicate__ country __object__ United States']]
Text: Angola, Indiana is located in the United States, where one of the ethnic groups are African Americans.
Subject: ['United States', 'Angola, Indiana']
Predicate: ['ethnicGroup', 'country']
Object: ['African Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ African Americans', '__subject__ Angola, Indiana __predicate__ isPartOf __object__ United States']]
Text: Angola, Indiana is part of the United States, where African Americans are an ethnic group.
Subject: ['United States', 'Angola, Indiana']
Predicate: ['ethnicGroup', 'isPartOf']
Object: ['African Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ African Americans', '__subject__ Angola, Indiana __predicate__ isPartOf __object__ United States']]
Text: Angola, Indiana is in the United States, where African Americans are an ethnic group.
Subject: ['United States', 'Angola, Indiana']
Predicate: ['ethnicGroup', 'isPartOf']
Object: ['African Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ African Americans', '__subject__ Angola, Indiana __predicate__ isPartOf __object__ United States']]
Text: African Americans are an ethnic group within the United States where Angola, Indiana is located.
Subject: ['United States', 'Angola, Indiana']
Predicate: ['ethnicGroup', 'isPartOf']
Object: ['African Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Akron, Ohio __predicate__ country __object__ United States']]
Text: The country of Akron, Ohio, is United States, where Asian Americans are one of the ethnic groups.
Subject: ['United States', 'Akron, Ohio']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Akron, Ohio __predicate__ country __object__ United States']]
Text: The United States is home to the ethnic group of Asian Americans and also the location of Akron, Ohio.
Subject: ['United States', 'Akron, Ohio']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Albany, Georgia __predicate__ country __object__ United States']]
Text: Albany is in Georgia in the United States where Asian Americans are an ethnic group.
Subject: ['United States', 'Albany, Georgia']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Albany, Georgia __predicate__ country __object__ United States']]
Text: The United States includes the Asian Americans among its ethnic groups and is the location of Albany, Georgia.
Subject: ['United States', 'Albany, Georgia']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Albany, Georgia __predicate__ isPartOf __object__ United States']]
Text: Albany, Georgia is part of the United States of American where Asian Americans are one of the ethnic groups.
Subject: ['United States', 'Albany, Georgia']
Predicate: ['ethnicGroup', 'isPartOf']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Albany, Georgia __predicate__ isPartOf __object__ United States']]
Text: Albany, Georgia is in the United States, a country where one of the ethnic groups are Asian Americans.
Subject: ['United States', 'Albany, Georgia']
Predicate: ['ethnicGroup', 'isPartOf']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Albany, Georgia __predicate__ isPartOf __object__ United States']]
Text: The Asian Americans are an ethnic group in the United States, where Albany, Georgia can be found.
Subject: ['United States', 'Albany, Georgia']
Predicate: ['ethnicGroup', 'isPartOf']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Albany, Oregon __predicate__ country __object__ United States']]
Text: Albany, Oregon is located within the United States, where one of the ethnic groups is Asian Americans.
Subject: ['United States', 'Albany, Oregon']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Albany, Oregon __predicate__ country __object__ United States']]
Text: Asian Americans are an ethnic group in the US, where Albany, Oregon is located.
Subject: ['United States', 'Albany, Oregon']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Albany, Oregon __predicate__ country __object__ United States']]
Text: Albany, Oregon is part of the U.S. and one ethnic group in that country is Asian Americans.
Subject: ['United States', 'Albany, Oregon']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Albuquerque, New Mexico is in the United States, where one of the ethnic groups is Asian Americans.
Subject: ['United States', 'Albuquerque, New Mexico']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: The United States is the location of Albuquerque, New Mexico and includes the Asian Americans among its ethnic groups.
Subject: ['United States', 'Albuquerque, New Mexico']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: The United States is the location of Albuquerque, New Mexico, and includes the Asian Americans among its ethnic groups.
Subject: ['United States', 'Albuquerque, New Mexico']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Auburn, Washington __predicate__ country __object__ United States']]
Text: Auburn, Washington is located in the U.S. where one ethnic group is the Asian Americans.
Subject: ['United States', 'Auburn, Washington']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Auburn, Washington __predicate__ country __object__ United States']]
Text: Auburn, Washington is located within the U.S. and Asian Americans are an ethnic group in that country.
Subject: ['United States', 'Auburn, Washington']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Auburn, Washington __predicate__ country __object__ United States']]
Text: Auburn, Washington is located in the United States, where Asian Americans are one of the ethnic groups.
Subject: ['United States', 'Auburn, Washington']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Austin, Texas __predicate__ country __object__ United States']]
Text: The United States include the ethnic group of Asian Americans and is the location of Austin, Texas.
Subject: ['United States', 'Austin, Texas']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Austin, Texas __predicate__ country __object__ United States']]
Text: Asian Americans are an ethnic group in the United States and Austin Texas is also in the same country.
Subject: ['United States', 'Austin, Texas']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Austin, Texas __predicate__ country __object__ United States']]
Text: Austin, Texas is in the United States, where one of the ethnic groups are Asian Americans.
Subject: ['United States', 'Austin, Texas']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Akron, Ohio __predicate__ country __object__ United States']]
Text: Akron, Ohio is located within the United States, home to a number of ethnic groups, including, Native Americans.
Subject: ['United States', 'Akron, Ohio']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Akron, Ohio __predicate__ country __object__ United States']]
Text: The Native Americans are an ethnic group within the United States, the country where Akron, Ohio is located.
Subject: ['United States', 'Akron, Ohio']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Akron, Ohio __predicate__ country __object__ United States']]
Text: Akron, Ohio is located in the United States, where Native Americans are one of the ethnic groups.
Subject: ['United States', 'Akron, Ohio']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: The United States includes the ethnic group of Native Americans and is the location of Albuquerque, New Mexico.
Subject: ['United States', 'Albuquerque, New Mexico']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Albuquerque is in New Mexico, United States, the country where you will find an ethnic group called Native Americans.
Subject: ['United States', 'Albuquerque, New Mexico']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Albuquerque, New Mexico is in the United States, where Native Americans are one of the ethnic groups.
Subject: ['United States', 'Albuquerque, New Mexico']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Angola, Indiana __predicate__ country __object__ United States']]
Text: Angola, Indiana is part of the United States where one of the ethnic groups are Native Americans.
Subject: ['United States', 'Angola, Indiana']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Angola, Indiana __predicate__ country __object__ United States']]
Text: Angola, Indiana is in theUnited States of America, where one of the ethnic groups are Native Americans.
Subject: ['United States', 'Angola, Indiana']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Angola, Indiana __predicate__ country __object__ United States']]
Text: The United States is the location of Angola, Indiana and includes the Native Americans among its ethnic groups.
Subject: ['United States', 'Angola, Indiana']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Attica, Indiana __predicate__ country __object__ United States']]
Text: Native Americans are an ethnic group in the United States, where Attica, Indiana is located.
Subject: ['United States', 'Attica, Indiana']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Attica, Indiana __predicate__ country __object__ United States']]
Text: Native Americans are one of the ethnic groups in the United States of America which is the location of Attica, Indiana.
Subject: ['United States', 'Attica, Indiana']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Attica, Indiana __predicate__ country __object__ United States']]
Text: Attica, Indiana, is located in the United States, where Native Americans are an ethnic group.
Subject: ['United States', 'Attica, Indiana']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Auburn, Washington __predicate__ country __object__ United States']]
Text: Auburn, Washington is located within the United States, in which Native Americans are one of the ethnic groups.
Subject: ['United States', 'Auburn, Washington']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Auburn, Washington __predicate__ country __object__ United States']]
Text: One of the ethnic groups in the United States are the Native Americans and the country is the location of Auburn, Washington.
Subject: ['United States', 'Auburn, Washington']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ White Americans', '__subject__ Abilene, Texas __predicate__ country __object__ United States']]
Text: White Americans are an ethnic group in the United States, which is the location of Abilene, Texas.
Subject: ['United States', 'Abilene, Texas']
Predicate: ['ethnicGroup', 'country']
Object: ['White Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ White Americans', '__subject__ Abilene, Texas __predicate__ country __object__ United States']]
Text: Abilene is in Texas in the United States, the country where White Americans are an ethnic group.
Subject: ['United States', 'Abilene, Texas']
Predicate: ['ethnicGroup', 'country']
Object: ['White Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ White Americans', '__subject__ Abilene, Texas __predicate__ country __object__ United States']]
Text: The United States is the location of Abilene in Texas and the country contains the ethnic group of white americans.
Subject: ['United States', 'Abilene, Texas']
Predicate: ['ethnicGroup', 'country']
Object: ['White Americans', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ Albany, Georgia __predicate__ country __object__ United States']]
Text: Albany, Georgia is in the United States which uses the English language.
Subject: ['United States', 'Albany, Georgia']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ Albany, Georgia __predicate__ country __object__ United States']]
Text: The United States uses the English language and is where you will find Albany, Georgia.
Subject: ['United States', 'Albany, Georgia']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ Albany, Georgia __predicate__ country __object__ United States']]
Text: Albany, Georgia is located in the United States where English is one of the spoken languages.
Subject: ['United States', 'Albany, Georgia']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ Albany, Oregon __predicate__ country __object__ United States']]
Text: English is spoken in the United States, where Albany, Oregon can be found.
Subject: ['United States', 'Albany, Oregon']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ Albany, Oregon __predicate__ country __object__ United States']]
Text: Albany, Oregon is located within the United States where the main language spoken is English.
Subject: ['United States', 'Albany, Oregon']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ Albany, Oregon __predicate__ country __object__ United States']]
Text: The United States is the location of Albany, Oregon, and uses the English language.
Subject: ['United States', 'Albany, Oregon']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: The United States, where English is spoken, is home to Albuquerque in New Mexico.
Subject: ['United States', 'Albuquerque, New Mexico']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Albuquerque, New Mexico is located in the United States where English is one of the spoken languages.
Subject: ['United States', 'Albuquerque, New Mexico']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: English is spoken in the United States, which is where Albuquerque, New Mexico is located.
Subject: ['United States', 'Albuquerque, New Mexico']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ Angola, Indiana __predicate__ country __object__ United States']]
Text: Angola, Indiana is located in the United States, where English is the official language.
Subject: ['United States', 'Angola, Indiana']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ Angola, Indiana __predicate__ country __object__ United States']]
Text: English is the language of the United States, where you will find Angola, Indiana.
Subject: ['United States', 'Angola, Indiana']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ Angola, Indiana __predicate__ country __object__ United States']]
Text: Angola, Indiana is in the United States where English is spoken.
Subject: ['United States', 'Angola, Indiana']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ Akron, Ohio __predicate__ country __object__ United States']]
Text: Akron, Ohio is located in the United States where Barack Obama is a leader.
Subject: ['United States', 'Akron, Ohio']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ Akron, Ohio __predicate__ country __object__ United States']]
Text: Akron, Ohio is located within the United States whose leader is Barack Obama.
Subject: ['United States', 'Akron, Ohio']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Albuquerque, New Mexico, is located in the United States, where Barack Obama is leader.
Subject: ['United States', 'Albuquerque, New Mexico']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: The leader of the United States, where Albuquerque, New Mexico is located is Barack Obama.
Subject: ['United States', 'Albuquerque, New Mexico']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']]
Text: Barack Obama is a leader of the United States where Albuquerque, New Mexico is located.
Subject: ['United States', 'Albuquerque, New Mexico']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ Auburn, Alabama __predicate__ country __object__ United States']]
Text: Auburn, Alabama is located in the United States, where the leader is Barack Obama.
Subject: ['United States', 'Auburn, Alabama']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ Auburn, Alabama __predicate__ country __object__ United States']]
Text: Auburn, Alabama is located in the United States where Barack Obama is a leader.
Subject: ['United States', 'Auburn, Alabama']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States House of Representatives __predicate__ isPartOf __object__ United States Congress', '__subject__ Anaheim, California __predicate__ leaderTitle __object__ United States House of Representatives']]
Text: The United States House of Representatives leads Anaheim, California, and is part of the United States Congress.
Subject: ['United States House of Representatives', 'Anaheim, California']
Predicate: ['isPartOf', 'leaderTitle']
Object: ['United States Congress', 'United States House of Representatives']

Triple: [['__subject__ United States House of Representatives __predicate__ isPartOf __object__ United States Congress', '__subject__ Anaheim, California __predicate__ leaderTitle __object__ United States House of Representatives']]
Text: The House of Representatives, forms part of the United States Congress, and leads Anaheim, California.
Subject: ['United States House of Representatives', 'Anaheim, California']
Predicate: ['isPartOf', 'leaderTitle']
Object: ['United States Congress', 'United States House of Representatives']

Triple: [['__subject__ United States House of Representatives __predicate__ isPartOf __object__ United States Congress', '__subject__ Anaheim, California __predicate__ leaderTitle __object__ United States House of Representatives']]
Text: United States House of Representatives is part of United States Congress and leads Anaheim, California.
Subject: ['United States House of Representatives', 'Anaheim, California']
Predicate: ['isPartOf', 'leaderTitle']
Object: ['United States Congress', 'United States House of Representatives']

Triple: [['__subject__ Washtenaw County, Michigan __predicate__ country __object__ United States', '__subject__ Ann Arbor, Michigan __predicate__ isPartOf __object__ Washtenaw County, Michigan']]
Text: Ann Arbor, Michigan is part of Washtenaw County, United States.
Subject: ['Washtenaw County, Michigan', 'Ann Arbor, Michigan']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Washtenaw County, Michigan']

Triple: [['__subject__ Washtenaw County, Michigan __predicate__ country __object__ United States', '__subject__ Ann Arbor, Michigan __predicate__ isPartOf __object__ Washtenaw County, Michigan']]
Text: Ann Arbor is located in Washtenaw County, Michigan in the United States of America.
Subject: ['Washtenaw County, Michigan', 'Ann Arbor, Michigan']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Washtenaw County, Michigan']

Triple: [['__subject__ Washtenaw County, Michigan __predicate__ country __object__ United States', '__subject__ Ann Arbor, Michigan __predicate__ isPartOf __object__ Washtenaw County, Michigan']]
Text: Ann Arbor is part of Washtenaw County, Michigan in the U.S.
Subject: ['Washtenaw County, Michigan', 'Ann Arbor, Michigan']
Predicate: ['country', 'isPartOf']
Object: ['United States', 'Washtenaw County, Michigan']

Triple: [['__subject__ Williamson County, Texas __predicate__ largestCity __object__ Round Rock, Texas', '__subject__ Austin, Texas __predicate__ isPartOf __object__ Williamson County, Texas']]
Text: The largest city of Williamson County, Texas is Round Rock and Austin is part of the county as well.
Subject: ['Williamson County, Texas', 'Austin, Texas']
Predicate: ['largestCity', 'isPartOf']
Object: ['Round Rock, Texas', 'Williamson County, Texas']

Triple: [['__subject__ Williamson County, Texas __predicate__ largestCity __object__ Round Rock, Texas', '__subject__ Austin, Texas __predicate__ isPartOf __object__ Williamson County, Texas']]
Text: Austin is part of Williamson County, in Texas, where Round Rock is the largest city.
Subject: ['Williamson County, Texas', 'Austin, Texas']
Predicate: ['largestCity', 'isPartOf']
Object: ['Round Rock, Texas', 'Williamson County, Texas']

Triple: [['__subject__ Williamson County, Texas __predicate__ largestCity __object__ Round Rock, Texas', '__subject__ Austin, Texas __predicate__ isPartOf __object__ Williamson County, Texas']]
Text: Round Rock is the largest city in Williamson County (of which Austin is a part of), Texas.
Subject: ['Williamson County, Texas', 'Austin, Texas']
Predicate: ['largestCity', 'isPartOf']
Object: ['Round Rock, Texas', 'Williamson County, Texas']

Triple: [['__subject__ Airman (comicsCharacter) __predicate__ alternativeName __object__ Drake Stevens', '__subject__ Airman (comicsCharacter) __predicate__ creator __object__ George Kapitan']]
Text: George Kapitan created the comic character Airman whose alter ego is Drake Stevens.
Subject: ['Airman (comicsCharacter)', 'Airman (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Drake Stevens', 'George Kapitan']

Triple: [['__subject__ Airman (comicsCharacter) __predicate__ alternativeName __object__ Drake Stevens', '__subject__ Airman (comicsCharacter) __predicate__ creator __object__ George Kapitan']]
Text: "Drake Stevens, known as Airman, was created by George Kapitan.
Subject: ['Airman (comicsCharacter)', 'Airman (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Drake Stevens', 'George Kapitan']

Triple: [['__subject__ Airman (comicsCharacter) __predicate__ alternativeName __object__ Drake Stevens', '__subject__ Airman (comicsCharacter) __predicate__ creator __object__ George Kapitan']]
Text: George Kapitan is the creator of the comic character "Airman" or otherwise known as "Drake Stevens".
Subject: ['Airman (comicsCharacter)', 'Airman (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Drake Stevens', 'George Kapitan']

Triple: [['__subject__ Airman (comicsCharacter) __predicate__ alternativeName __object__ Drake Stevens', '__subject__ Airman (comicsCharacter) __predicate__ creator __object__ Harry Sahle']]
Text: The comic book character Airman, AKA Drake Stevens, was created by Harry Sahle.
Subject: ['Airman (comicsCharacter)', 'Airman (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Drake Stevens', 'Harry Sahle']

Triple: [['__subject__ Airman (comicsCharacter) __predicate__ alternativeName __object__ Drake Stevens', '__subject__ Airman (comicsCharacter) __predicate__ creator __object__ Harry Sahle']]
Text: Drake Stevens is known as the comic character Airman, which was created by Harry Sahle.
Subject: ['Airman (comicsCharacter)', 'Airman (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Drake Stevens', 'Harry Sahle']

Triple: [['__subject__ Airman (comicsCharacter) __predicate__ alternativeName __object__ Drake Stevens', '__subject__ Airman (comicsCharacter) __predicate__ creator __object__ Harry Sahle']]
Text: The comic character Airman, who has the alternative name Drake Stevens, was created by Harry Sahle.
Subject: ['Airman (comicsCharacter)', 'Airman (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Drake Stevens', 'Harry Sahle']

Triple: [['__subject__ Airman (comicsCharacter) __predicate__ creator __object__ Harry Sahle', '__subject__ Airman (comicsCharacter) __predicate__ creator __object__ George Kapitan']]
Text: The creators of the comic character Airman were Harry Sahle and George Kapitan.
Subject: ['Airman (comicsCharacter)', 'Airman (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Harry Sahle', 'George Kapitan']

Triple: [['__subject__ Airman (comicsCharacter) __predicate__ creator __object__ Harry Sahle', '__subject__ Airman (comicsCharacter) __predicate__ creator __object__ George Kapitan']]
Text: The comic book character Airman was created by both Harry Sahle and George Kapitan.
Subject: ['Airman (comicsCharacter)', 'Airman (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Harry Sahle', 'George Kapitan']

Triple: [['__subject__ Airman (comicsCharacter) __predicate__ creator __object__ Harry Sahle', '__subject__ Airman (comicsCharacter) __predicate__ creator __object__ George Kapitan']]
Text: The creators of the comic book character Airman were Harry Sahle and George Kapitan.
Subject: ['Airman (comicsCharacter)', 'Airman (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Harry Sahle', 'George Kapitan']

Triple: [['__subject__ Amazing-Man (comicsCharacter) __predicate__ creator __object__ Bill Everett', '__subject__ Amazing-Man (comicsCharacter) __predicate__ alternativeName __object__ John Aman']]
Text: John Aman (created by Bill Everett) is also known as Amazing-Man in the comics genre.
Subject: ['Amazing-Man (comicsCharacter)', 'Amazing-Man (comicsCharacter)']
Predicate: ['creator', 'alternativeName']
Object: ['Bill Everett', 'John Aman']

Triple: [['__subject__ Amazing-Man (comicsCharacter) __predicate__ creator __object__ Bill Everett', '__subject__ Amazing-Man (comicsCharacter) __predicate__ alternativeName __object__ John Aman']]
Text: Bill Everett is the creator of the comic character, Amazing-Man who has the alternative name, John Aman.
Subject: ['Amazing-Man (comicsCharacter)', 'Amazing-Man (comicsCharacter)']
Predicate: ['creator', 'alternativeName']
Object: ['Bill Everett', 'John Aman']

Triple: [['__subject__ Amazing-Man (comicsCharacter) __predicate__ creator __object__ Bill Everett', '__subject__ Amazing-Man (comicsCharacter) __predicate__ alternativeName __object__ John Aman']]
Text: The comic book character Amazing-Man's alter ego is John Aman and it was created by Bill Everett.
Subject: ['Amazing-Man (comicsCharacter)', 'Amazing-Man (comicsCharacter)']
Predicate: ['creator', 'alternativeName']
Object: ['Bill Everett', 'John Aman']

Triple: [["__subject__ April O'Neil __predicate__ creator __object__ Peter Laird", "__subject__ April O'Neil __predicate__ creator __object__ Kevin Eastman"]]
Text: The character April O'Neil was created by Peter Laird and Kevin Eastman.
Subject: ["April O'Neil", "April O'Neil"]
Predicate: ['creator', 'creator']
Object: ['Peter Laird', 'Kevin Eastman']

Triple: [["__subject__ April O'Neil __predicate__ creator __object__ Peter Laird", "__subject__ April O'Neil __predicate__ creator __object__ Kevin Eastman"]]
Text: April O'Neil was created by Kevin Eastman and Peter Laird.
Subject: ["April O'Neil", "April O'Neil"]
Predicate: ['creator', 'creator']
Object: ['Peter Laird', 'Kevin Eastman']

Triple: [["__subject__ April O'Neil __predicate__ creator __object__ Peter Laird", "__subject__ April O'Neil __predicate__ creator __object__ Kevin Eastman"]]
Text: Peter Laird and Kevin Eastman, created the character, April O'Neil.
Subject: ["April O'Neil", "April O'Neil"]
Predicate: ['creator', 'creator']
Object: ['Peter Laird', 'Kevin Eastman']

Triple: [["__subject__ Arion (comicsCharacter) __predicate__ alternativeName __object__ Ahri'ahn", '__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Paul Kupperberg']]
Text: Paul Kupperberg is the creator of the comic character Arion, sometimes known as Ahri'ahn.
Subject: ['Arion (comicsCharacter)', 'Arion (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ["Ahri'ahn", 'Paul Kupperberg']

Triple: [["__subject__ Arion (comicsCharacter) __predicate__ alternativeName __object__ Ahri'ahn", '__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Paul Kupperberg']]
Text: Created by Paul Kupperberg, the book character Arion is also known as Ahri'ahn.
Subject: ['Arion (comicsCharacter)', 'Arion (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ["Ahri'ahn", 'Paul Kupperberg']

Triple: [["__subject__ Arion (comicsCharacter) __predicate__ alternativeName __object__ Ahri'ahn", '__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Paul Kupperberg']]
Text: Paul Kupperberg is the creator of the comic character Arion, otherwise known as Ahri'ahn.
Subject: ['Arion (comicsCharacter)', 'Arion (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ["Ahri'ahn", 'Paul Kupperberg']

Triple: [['__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Jan Duursema', "__subject__ Arion (comicsCharacter) __predicate__ alternativeName __object__ Ahri'ahn"]]
Text: The comic character Arion, also known as Ahri'ahn, was created by Jan Duursema.
Subject: ['Arion (comicsCharacter)', 'Arion (comicsCharacter)']
Predicate: ['creator', 'alternativeName']
Object: ['Jan Duursema', "Ahri'ahn"]

Triple: [['__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Jan Duursema', "__subject__ Arion (comicsCharacter) __predicate__ alternativeName __object__ Ahri'ahn"]]
Text: Created by Jan Duursema, the comic character Arion is also known as Ahri'ahn.
Subject: ['Arion (comicsCharacter)', 'Arion (comicsCharacter)']
Predicate: ['creator', 'alternativeName']
Object: ['Jan Duursema', "Ahri'ahn"]

Triple: [['__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Jan Duursema', '__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Paul Kupperberg']]
Text: The character Arion was created by Jan Duursema and Paul Kupperberg.
Subject: ['Arion (comicsCharacter)', 'Arion (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Jan Duursema', 'Paul Kupperberg']

Triple: [['__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Jan Duursema', '__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Paul Kupperberg']]
Text: The comic character, Arion, was created by Jan Duursema and Paul Kupperberg.
Subject: ['Arion (comicsCharacter)', 'Arion (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Jan Duursema', 'Paul Kupperberg']

Triple: [['__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Jan Duursema', '__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Paul Kupperberg']]
Text: The comic book character Arion was created by Jan Duursema and Paul Kupperberg.
Subject: ['Arion (comicsCharacter)', 'Arion (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Jan Duursema', 'Paul Kupperberg']

Triple: [['__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Jan Duursema', '__subject__ Jan Duursema __predicate__ award __object__ Eisner Award']]
Text: The comic character, Arion, was created by Jan Duursema, who has won the Eisner Award.
Subject: ['Arion (comicsCharacter)', 'Jan Duursema']
Predicate: ['creator', 'award']
Object: ['Jan Duursema', 'Eisner Award']

Triple: [['__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Jan Duursema', '__subject__ Jan Duursema __predicate__ award __object__ Eisner Award']]
Text: The Eisner award winning Jan Duursema created the comic book character Arion.
Subject: ['Arion (comicsCharacter)', 'Jan Duursema']
Predicate: ['creator', 'award']
Object: ['Jan Duursema', 'Eisner Award']

Triple: [['__subject__ Asterix (comicsCharacter) __predicate__ alternativeName __object__ Astérix', '__subject__ Asterix (comicsCharacter) __predicate__ creator __object__ Albert Uderzo']]
Text: The comic character Asterix, sometimes called Astérix, was created by Albert Uderzo.
Subject: ['Asterix (comicsCharacter)', 'Asterix (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Astérix', 'Albert Uderzo']

Triple: [['__subject__ Asterix (comicsCharacter) __predicate__ alternativeName __object__ Astérix', '__subject__ Asterix (comicsCharacter) __predicate__ creator __object__ Albert Uderzo']]
Text: The alternative name of Asterix (comics character) is "Astérix" and he was created by Albert Uderzo.
Subject: ['Asterix (comicsCharacter)', 'Asterix (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Astérix', 'Albert Uderzo']

Triple: [['__subject__ Asterix (comicsCharacter) __predicate__ alternativeName __object__ Astérix', '__subject__ Asterix (comicsCharacter) __predicate__ creator __object__ Albert Uderzo']]
Text: Albert Uderzo is the creator of the comic character, Asterix, which is also known as Astérix.
Subject: ['Asterix (comicsCharacter)', 'Asterix (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Astérix', 'Albert Uderzo']

Triple: [['__subject__ Asterix (comicsCharacter) __predicate__ creator __object__ René Goscinny', '__subject__ Asterix (comicsCharacter) __predicate__ alternativeName __object__ Astérix']]
Text: The creator of Asterix, the comics character also known as Astérix, is René Goscinny.
Subject: ['Asterix (comicsCharacter)', 'Asterix (comicsCharacter)']
Predicate: ['creator', 'alternativeName']
Object: ['René Goscinny', 'Astérix']

Triple: [['__subject__ Asterix (comicsCharacter) __predicate__ creator __object__ René Goscinny', '__subject__ Asterix (comicsCharacter) __predicate__ alternativeName __object__ Astérix']]
Text: The comic character Asterix, sometimes called Astérix, was created by Rene Goscinny.
Subject: ['Asterix (comicsCharacter)', 'Asterix (comicsCharacter)']
Predicate: ['creator', 'alternativeName']
Object: ['René Goscinny', 'Astérix']

Triple: [['__subject__ Asterix (comicsCharacter) __predicate__ creator __object__ René Goscinny', '__subject__ Asterix (comicsCharacter) __predicate__ alternativeName __object__ Astérix']]
Text: The comic character Asterix (also known as Astérix), was created by Rene Goscinny.
Subject: ['Asterix (comicsCharacter)', 'Asterix (comicsCharacter)']
Predicate: ['creator', 'alternativeName']
Object: ['René Goscinny', 'Astérix']

Triple: [['__subject__ Asterix (comicsCharacter) __predicate__ creator __object__ René Goscinny', '__subject__ René Goscinny __predicate__ nationality __object__ French people']]
Text: The creator of Asterix, a comics character, is René Goscinny, who is French.
Subject: ['Asterix (comicsCharacter)', 'René Goscinny']
Predicate: ['creator', 'nationality']
Object: ['René Goscinny', 'French people']

Triple: [['__subject__ Asterix (comicsCharacter) __predicate__ creator __object__ René Goscinny', '__subject__ René Goscinny __predicate__ nationality __object__ French people']]
Text: Asterix was created by Rene Goscinny, who is a frenchman.
Subject: ['Asterix (comicsCharacter)', 'René Goscinny']
Predicate: ['creator', 'nationality']
Object: ['René Goscinny', 'French people']

Triple: [['__subject__ Asterix (comicsCharacter) __predicate__ creator __object__ René Goscinny', '__subject__ René Goscinny __predicate__ nationality __object__ French people']]
Text: Rene Goscinny is a French national and also the creator of the comic character Asterix.
Subject: ['Asterix (comicsCharacter)', 'René Goscinny']
Predicate: ['creator', 'nationality']
Object: ['René Goscinny', 'French people']

Triple: [['__subject__ Aurakles __predicate__ creator __object__ Dick Dillin', '__subject__ Aurakles __predicate__ alternativeName __object__ Aurakles']]
Text: Dick Dillin is the creator of the comic book character Aurakles.
Subject: ['Aurakles', 'Aurakles']
Predicate: ['creator', 'alternativeName']
Object: ['Dick Dillin', 'Aurakles']

Triple: [['__subject__ Aurakles __predicate__ creator __object__ Dick Dillin', '__subject__ Aurakles __predicate__ alternativeName __object__ Aurakles']]
Text: Dick Dillin was the creator of the comic book character Aurakles.
Subject: ['Aurakles', 'Aurakles']
Predicate: ['creator', 'alternativeName']
Object: ['Dick Dillin', 'Aurakles']

Triple: [['__subject__ Aurakles __predicate__ creator __object__ Dick Dillin', '__subject__ Aurakles __predicate__ alternativeName __object__ Aurakles']]
Text: Dick Dillin created the comic book character called Aurakles, whose alternative name is also Aurakles.
Subject: ['Aurakles', 'Aurakles']
Predicate: ['creator', 'alternativeName']
Object: ['Dick Dillin', 'Aurakles']

Triple: [['__subject__ Aurakles __predicate__ creator __object__ Dick Dillin', '__subject__ Aurakles __predicate__ creator __object__ Len Wein']]
Text: Aurakles was created by Dick Dillin and Len Wein.
Subject: ['Aurakles', 'Aurakles']
Predicate: ['creator', 'creator']
Object: ['Dick Dillin', 'Len Wein']

Triple: [['__subject__ Aurakles __predicate__ creator __object__ Dick Dillin', '__subject__ Aurakles __predicate__ creator __object__ Len Wein']]
Text: The comic book character, Aurakles, was created by Dick Dillin and Len Wein.
Subject: ['Aurakles', 'Aurakles']
Predicate: ['creator', 'creator']
Object: ['Dick Dillin', 'Len Wein']

Triple: [['__subject__ Aurakles __predicate__ creator __object__ Dick Dillin', '__subject__ Aurakles __predicate__ creator __object__ Len Wein']]
Text: The comic book character Aurakles was created by both Dick Dillin and Len Wein.
Subject: ['Aurakles', 'Aurakles']
Predicate: ['creator', 'creator']
Object: ['Dick Dillin', 'Len Wein']

Triple: [['__subject__ Aurakles __predicate__ creator __object__ Dick Dillin', '__subject__ Dick Dillin __predicate__ nationality __object__ United States']]
Text: Dick Dillin is an American who created the fictional character, Aurakles.
Subject: ['Aurakles', 'Dick Dillin']
Predicate: ['creator', 'nationality']
Object: ['Dick Dillin', 'United States']

Triple: [['__subject__ Aurakles __predicate__ creator __object__ Dick Dillin', '__subject__ Dick Dillin __predicate__ nationality __object__ United States']]
Text: Aurakles is a fictional character created by American national Dick Dillin.
Subject: ['Aurakles', 'Dick Dillin']
Predicate: ['creator', 'nationality']
Object: ['Dick Dillin', 'United States']

Triple: [['__subject__ Aurakles __predicate__ creator __object__ Dick Dillin', '__subject__ Dick Dillin __predicate__ nationality __object__ United States']]
Text: Dick Dillin, the creator of Aurakles, is from the US.
Subject: ['Aurakles', 'Dick Dillin']
Predicate: ['creator', 'nationality']
Object: ['Dick Dillin', 'United States']

Triple: [['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Karl Kesel', '__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Marv Wolfman']]
Text: The comic book character Auron was created by Karl Kesel and Marv Wolfman.
Subject: ['Auron (comicsCharacter)', 'Auron (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Karl Kesel', 'Marv Wolfman']

Triple: [['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Karl Kesel', '__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Marv Wolfman']]
Text: The character Auron, was created by Karl Kesel and Marv Wolfman.
Subject: ['Auron (comicsCharacter)', 'Auron (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Karl Kesel', 'Marv Wolfman']

Triple: [['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Karl Kesel', '__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Marv Wolfman']]
Text: The creators of Auron (comics character) are Karl Kesel and Marv Wolfman.
Subject: ['Auron (comicsCharacter)', 'Auron (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Karl Kesel', 'Marv Wolfman']

Triple: [['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Karl Kesel', '__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Walt Simonson']]
Text: The comic character Auron was created by both Karl Kesel and Walt Simonson.
Subject: ['Auron (comicsCharacter)', 'Auron (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Karl Kesel', 'Walt Simonson']

Triple: [['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Karl Kesel', '__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Walt Simonson']]
Text: Walt Simonson and Karl Kesel created the comic character Auron.
Subject: ['Auron (comicsCharacter)', 'Auron (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Karl Kesel', 'Walt Simonson']

Triple: [['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Karl Kesel', '__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Walt Simonson']]
Text: The character Auron was created by Karl Kesel and Walt Simonson.
Subject: ['Auron (comicsCharacter)', 'Auron (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Karl Kesel', 'Walt Simonson']

Triple: [['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Marv Wolfman', '__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Walt Simonson']]
Text: Auron was created by both Marv Wolfman and Walt Simonson.
Subject: ['Auron (comicsCharacter)', 'Auron (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Marv Wolfman', 'Walt Simonson']

Triple: [['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Marv Wolfman', '__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Walt Simonson']]
Text: The comic character auron was created by Marv Wolfman and Walt Simonson.
Subject: ['Auron (comicsCharacter)', 'Auron (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Marv Wolfman', 'Walt Simonson']

Triple: [['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Marv Wolfman', '__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Walt Simonson']]
Text: The comic book character Auron was created by both Marv Wolfman and Walt Simonson.
Subject: ['Auron (comicsCharacter)', 'Auron (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Marv Wolfman', 'Walt Simonson']

Triple: [['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Marv Wolfman', '__subject__ Auron (comicsCharacter) __predicate__ fullName __object__ Lambien']]
Text: Marv Wolfman created the comic book character Auron aka Lambien.
Subject: ['Auron (comicsCharacter)', 'Auron (comicsCharacter)']
Predicate: ['creator', 'fullName']
Object: ['Marv Wolfman', 'Lambien']

Triple: [['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Marv Wolfman', '__subject__ Auron (comicsCharacter) __predicate__ fullName __object__ Lambien']]
Text: The comic character Auron, whose full name is Lambien, was created by Marv Wolfman.
Subject: ['Auron (comicsCharacter)', 'Auron (comicsCharacter)']
Predicate: ['creator', 'fullName']
Object: ['Marv Wolfman', 'Lambien']

Triple: [['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Marv Wolfman', '__subject__ Auron (comicsCharacter) __predicate__ fullName __object__ Lambien']]
Text: The comic character Auron, otherwise known as "Lambien" was created by Marv Wolfman.
Subject: ['Auron (comicsCharacter)', 'Auron (comicsCharacter)']
Predicate: ['creator', 'fullName']
Object: ['Marv Wolfman', 'Lambien']

Triple: [['__subject__ Balder (comicsCharacter) __predicate__ alternativeName __object__ Balder Odinson', '__subject__ Balder (comicsCharacter) __predicate__ creator __object__ Stan Lee']]
Text: The comic character Balder, full name, Balder Odinson was created by Stan Lee.
Subject: ['Balder (comicsCharacter)', 'Balder (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Balder Odinson', 'Stan Lee']

Triple: [['__subject__ Balder (comicsCharacter) __predicate__ alternativeName __object__ Balder Odinson', '__subject__ Balder (comicsCharacter) __predicate__ creator __object__ Stan Lee']]
Text: An alternative name for the comic character Balder (created by Stan Lee), is Balder Odinson.
Subject: ['Balder (comicsCharacter)', 'Balder (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Balder Odinson', 'Stan Lee']

Triple: [['__subject__ Balder (comicsCharacter) __predicate__ creator __object__ Jack Kirby', '__subject__ Balder (comicsCharacter) __predicate__ alternativeName __object__ Balder Odinson']]
Text: The comic character Balder, also known as Balder Odinson was created by Jack Kirby.
Subject: ['Balder (comicsCharacter)', 'Balder (comicsCharacter)']
Predicate: ['creator', 'alternativeName']
Object: ['Jack Kirby', 'Balder Odinson']

Triple: [['__subject__ Balder (comicsCharacter) __predicate__ creator __object__ Jack Kirby', '__subject__ Balder (comicsCharacter) __predicate__ alternativeName __object__ Balder Odinson']]
Text: Balder, otherwise known as Balder Odinson, was created by Jack Kirby.
Subject: ['Balder (comicsCharacter)', 'Balder (comicsCharacter)']
Predicate: ['creator', 'alternativeName']
Object: ['Jack Kirby', 'Balder Odinson']

Triple: [['__subject__ Balder (comicsCharacter) __predicate__ creator __object__ Jack Kirby', '__subject__ Balder (comicsCharacter) __predicate__ creator __object__ Stan Lee']]
Text: Jack Kirby and Stan Lee are the creators of the comic character Balder.
Subject: ['Balder (comicsCharacter)', 'Balder (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Jack Kirby', 'Stan Lee']

Triple: [['__subject__ Balder (comicsCharacter) __predicate__ creator __object__ Jack Kirby', '__subject__ Balder (comicsCharacter) __predicate__ creator __object__ Stan Lee']]
Text: The character Balder created by Jack Kirby and Stan Lee.
Subject: ['Balder (comicsCharacter)', 'Balder (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Jack Kirby', 'Stan Lee']

Triple: [['__subject__ Balder (comicsCharacter) __predicate__ creator __object__ Jack Kirby', '__subject__ Balder (comicsCharacter) __predicate__ creator __object__ Stan Lee']]
Text: Jack Kirby and Stan Lee, created the comic character Balder.
Subject: ['Balder (comicsCharacter)', 'Balder (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Jack Kirby', 'Stan Lee']

Triple: [['__subject__ Balder (comicsCharacter) __predicate__ creator __object__ Jack Kirby', '__subject__ Jack Kirby __predicate__ nationality __object__ Americans']]
Text: The comic character, Balder, was created by Jack Kirby, an American.
Subject: ['Balder (comicsCharacter)', 'Jack Kirby']
Predicate: ['creator', 'nationality']
Object: ['Jack Kirby', 'Americans']

Triple: [['__subject__ Balder (comicsCharacter) __predicate__ creator __object__ Jack Kirby', '__subject__ Jack Kirby __predicate__ nationality __object__ Americans']]
Text: The American Jack Kirby created the comic character Balder.
Subject: ['Balder (comicsCharacter)', 'Jack Kirby']
Predicate: ['creator', 'nationality']
Object: ['Jack Kirby', 'Americans']

Triple: [['__subject__ Ballistic (comicsCharacter) __predicate__ alternativeName __object__ Kelvin Mao', '__subject__ Ballistic (comicsCharacter) __predicate__ creator __object__ Michael Manley']]
Text: Michael Manley created the comic character, Ballistic, who has the alternative name, Kelvin Mao.
Subject: ['Ballistic (comicsCharacter)', 'Ballistic (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Kelvin Mao', 'Michael Manley']

Triple: [['__subject__ Ballistic (comicsCharacter) __predicate__ alternativeName __object__ Kelvin Mao', '__subject__ Ballistic (comicsCharacter) __predicate__ creator __object__ Michael Manley']]
Text: The comic character, Ballistic, has the alternative name, Kelvin Mao, and was created by Michael Manley.
Subject: ['Ballistic (comicsCharacter)', 'Ballistic (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Kelvin Mao', 'Michael Manley']

Triple: [['__subject__ Ballistic (comicsCharacter) __predicate__ creator __object__ Doug Moench', '__subject__ Ballistic (comicsCharacter) __predicate__ creator __object__ Michael Manley']]
Text: The creators of the comic character Ballistic were Michael Manley and Doug Moench.
Subject: ['Ballistic (comicsCharacter)', 'Ballistic (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Doug Moench', 'Michael Manley']

Triple: [['__subject__ Ballistic (comicsCharacter) __predicate__ creator __object__ Doug Moench', '__subject__ Ballistic (comicsCharacter) __predicate__ creator __object__ Michael Manley']]
Text: Doug Moench and Michael Manley, created the comic character Ballistic.
Subject: ['Ballistic (comicsCharacter)', 'Ballistic (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Doug Moench', 'Michael Manley']

Triple: [['__subject__ Ballistic (comicsCharacter) __predicate__ creator __object__ Doug Moench', '__subject__ Ballistic (comicsCharacter) __predicate__ creator __object__ Michael Manley']]
Text: The comic book character Ballistic was created by Michael Manley and Doug Moench.
Subject: ['Ballistic (comicsCharacter)', 'Ballistic (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Doug Moench', 'Michael Manley']

Triple: [['__subject__ Bananaman __predicate__ broadcastedBy __object__ BBC', '__subject__ BBC __predicate__ city __object__ Broadcasting House']]
Text: Bananaman is broadcast by the BBC which is headquartered in Broadcasting house.
Subject: ['Bananaman', 'BBC']
Predicate: ['broadcastedBy', 'city']
Object: ['BBC', 'Broadcasting House']

Triple: [['__subject__ Bananaman __predicate__ broadcastedBy __object__ BBC', '__subject__ BBC __predicate__ city __object__ Broadcasting House']]
Text: Bananaman the TV series was shown on the BBC, the BBC is headquartered in Broadcasting house.
Subject: ['Bananaman', 'BBC']
Predicate: ['broadcastedBy', 'city']
Object: ['BBC', 'Broadcasting House']

Triple: [['__subject__ Bananaman __predicate__ broadcastedBy __object__ BBC', '__subject__ BBC __predicate__ city __object__ Broadcasting House']]
Text: Bananaman is broadcasted by the BBC which is based in the Broadcasting House in London.
Subject: ['Bananaman', 'BBC']
Predicate: ['broadcastedBy', 'city']
Object: ['BBC', 'Broadcasting House']

Triple: [['__subject__ Bananaman __predicate__ broadcastedBy __object__ BBC', '__subject__ BBC __predicate__ city __object__ London']]
Text: Located in London, the BBC, broadcast Bananaman.
Subject: ['Bananaman', 'BBC']
Predicate: ['broadcastedBy', 'city']
Object: ['BBC', 'London']

Triple: [['__subject__ Bananaman __predicate__ broadcastedBy __object__ BBC', '__subject__ BBC __predicate__ city __object__ London']]
Text: Bananaman is broadcast by the BBC, which is based in London.
Subject: ['Bananaman', 'BBC']
Predicate: ['broadcastedBy', 'city']
Object: ['BBC', 'London']

Triple: [['__subject__ Bananaman __predicate__ broadcastedBy __object__ BBC', '__subject__ BBC __predicate__ city __object__ London']]
Text: Bananaman the TV series was shown on the BBC which is located in London.
Subject: ['Bananaman', 'BBC']
Predicate: ['broadcastedBy', 'city']
Object: ['BBC', 'London']

Triple: [['__subject__ Bananaman __predicate__ broadcastedBy __object__ BBC', '__subject__ Bananaman __predicate__ starring __object__ Bill Oddie']]
Text: The BBC broadcasted Bananaman which starred Bill Oddie.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['broadcastedBy', 'starring']
Object: ['BBC', 'Bill Oddie']

Triple: [['__subject__ Bananaman __predicate__ broadcastedBy __object__ BBC', '__subject__ Bananaman __predicate__ starring __object__ Bill Oddie']]
Text: Bill Oddies stars in Bananaman, broadcasted by the BBC.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['broadcastedBy', 'starring']
Object: ['BBC', 'Bill Oddie']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Bill Oddie', '__subject__ Bananaman __predicate__ broadcastedBy __object__ STV']]
Text: Bill Oddie starred in Bananaman broadcast by STV.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['starring', 'broadcastedBy']
Object: ['Bill Oddie', 'STV']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Bill Oddie', '__subject__ Bananaman __predicate__ broadcastedBy __object__ STV']]
Text: STV broadcast Bananaman starring Bill Oddie.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['starring', 'broadcastedBy']
Object: ['Bill Oddie', 'STV']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Bill Oddie', '__subject__ Bananaman __predicate__ firstAired __object__ 1983-10-03']]
Text: Bananaman first aired on the 3rd of October 1983, and starred Bill Oddie.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['starring', 'firstAired']
Object: ['Bill Oddie', '1983-10-03']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Bill Oddie', '__subject__ Bananaman __predicate__ firstAired __object__ 1983-10-03']]
Text: Bill Oddie stars in Bananaman that was first aired on the 3rd of October, 1983.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['starring', 'firstAired']
Object: ['Bill Oddie', '1983-10-03']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Bill Oddie', '__subject__ Bill Oddie __predicate__ birthPlace __object__ Rochdale']]
Text: Bill Oddie (born in Rochdale) stars in Bananaman.
Subject: ['Bananaman', 'Bill Oddie']
Predicate: ['starring', 'birthPlace']
Object: ['Bill Oddie', 'Rochdale']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Bill Oddie', '__subject__ Bill Oddie __predicate__ birthPlace __object__ Rochdale']]
Text: Bill Oddie, who was born in Rochdale, starred in Bananaman.
Subject: ['Bananaman', 'Bill Oddie']
Predicate: ['starring', 'birthPlace']
Object: ['Bill Oddie', 'Rochdale']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Bill Oddie', '__subject__ Bill Oddie __predicate__ birthPlace __object__ Rochdale']]
Text: Bananaman starred Bill Oddie, who was born in Rochdale.
Subject: ['Bananaman', 'Bill Oddie']
Predicate: ['starring', 'birthPlace']
Object: ['Bill Oddie', 'Rochdale']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Graeme Garden', '__subject__ Bananaman __predicate__ firstAired __object__ 1983-10-03']]
Text: Bananaman first aired on tv screens on the 3rd of October 1983, and starred Graeme Garden.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['starring', 'firstAired']
Object: ['Graeme Garden', '1983-10-03']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Graeme Garden', '__subject__ Bananaman __predicate__ firstAired __object__ 1983-10-03']]
Text: Bananaman, first aired 3/10/1983, stars Graeme Garden.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['starring', 'firstAired']
Object: ['Graeme Garden', '1983-10-03']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Graeme Garden', '__subject__ Bananaman __predicate__ firstAired __object__ 1983-10-03']]
Text: Bananaman was first aired on 10/03/1983 and starred Graeme Garden.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['starring', 'firstAired']
Object: ['Graeme Garden', '1983-10-03']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Graeme Garden', '__subject__ Graeme Garden __predicate__ birthPlace __object__ Aberdeen']]
Text: Graeme Garden, one of the stars of Bananaman, was born in Aberdeen.
Subject: ['Bananaman', 'Graeme Garden']
Predicate: ['starring', 'birthPlace']
Object: ['Graeme Garden', 'Aberdeen']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Graeme Garden', '__subject__ Graeme Garden __predicate__ birthPlace __object__ Aberdeen']]
Text: Bananaman stars Graeme Garden who was born in Aberdeen.
Subject: ['Bananaman', 'Graeme Garden']
Predicate: ['starring', 'birthPlace']
Object: ['Graeme Garden', 'Aberdeen']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Graeme Garden', '__subject__ Graeme Garden __predicate__ birthPlace __object__ Aberdeen']]
Text: Graeme Garden, born in Aberdeen, stars in Bananaman.
Subject: ['Bananaman', 'Graeme Garden']
Predicate: ['starring', 'birthPlace']
Object: ['Graeme Garden', 'Aberdeen']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Jill Shilling', '__subject__ Bananaman __predicate__ broadcastedBy __object__ STV']]
Text: Jill Shilling stared in Bananaman, broadcasted by STV.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['starring', 'broadcastedBy']
Object: ['Jill Shilling', 'STV']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Jill Shilling', '__subject__ Bananaman __predicate__ broadcastedBy __object__ STV']]
Text: Jill Shilling starred in Bananaman, broadcasted by STV.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['starring', 'broadcastedBy']
Object: ['Jill Shilling', 'STV']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Jill Shilling', '__subject__ Bananaman __predicate__ broadcastedBy __object__ STV']]
Text: Bananaman which stars Jill Shilling is broadcasted by STV.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['starring', 'broadcastedBy']
Object: ['Jill Shilling', 'STV']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Tim Brooke-Taylor', '__subject__ Bananaman __predicate__ broadcastedBy __object__ STV']]
Text: Tim Brooke-Taylor starred in Bananaman, which was broadcasted by STV.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['starring', 'broadcastedBy']
Object: ['Tim Brooke-Taylor', 'STV']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Tim Brooke-Taylor', '__subject__ Bananaman __predicate__ broadcastedBy __object__ STV']]
Text: Tim Brooke-Taylor starred in Bananaman, which is broadcast by STV.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['starring', 'broadcastedBy']
Object: ['Tim Brooke-Taylor', 'STV']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Tim Brooke-Taylor', '__subject__ Bananaman __predicate__ broadcastedBy __object__ STV']]
Text: Tim Brooke-Taylor starred as Bananaman, which was broadcast by STV.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['starring', 'broadcastedBy']
Object: ['Tim Brooke-Taylor', 'STV']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Tim Brooke-Taylor', '__subject__ Bananaman __predicate__ broadcastedBy __object__ BBC']]
Text: Tim Brooke-Taylor starred in Bananaman, broadcasted by the BBC.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['starring', 'broadcastedBy']
Object: ['Tim Brooke-Taylor', 'BBC']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Tim Brooke-Taylor', '__subject__ Bananaman __predicate__ broadcastedBy __object__ BBC']]
Text: Tim Brooke-Taylor starred in Bananaman, which was broadcasted by the BBC.
Subject: ['Bananaman', 'Bananaman']
Predicate: ['starring', 'broadcastedBy']
Object: ['Tim Brooke-Taylor', 'BBC']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Tim Brooke-Taylor', '__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ Buxton']]
Text: Buxton is the birthplace of Tim Brooke-Taylor, who starred in Bananaman.
Subject: ['Bananaman', 'Tim Brooke-Taylor']
Predicate: ['starring', 'birthPlace']
Object: ['Tim Brooke-Taylor', 'Buxton']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Tim Brooke-Taylor', '__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ Buxton']]
Text: Tim Brooke-Taylor, born in Buxton, starred in Bananaman.
Subject: ['Bananaman', 'Tim Brooke-Taylor']
Predicate: ['starring', 'birthPlace']
Object: ['Tim Brooke-Taylor', 'Buxton']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Tim Brooke-Taylor', '__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ Buxton']]
Text: Born in Buxton, Tim Brooke-Taylor, starred in Bananaman.
Subject: ['Bananaman', 'Tim Brooke-Taylor']
Predicate: ['starring', 'birthPlace']
Object: ['Tim Brooke-Taylor', 'Buxton']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Tim Brooke-Taylor', '__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ England']]
Text: Tim Brooke-Taylor, born in England, starred in Bananaman.
Subject: ['Bananaman', 'Tim Brooke-Taylor']
Predicate: ['starring', 'birthPlace']
Object: ['Tim Brooke-Taylor', 'England']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Tim Brooke-Taylor', '__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ England']]
Text: Tim Brooke-Taylor, who starred in Bananaman, was born in England.
Subject: ['Bananaman', 'Tim Brooke-Taylor']
Predicate: ['starring', 'birthPlace']
Object: ['Tim Brooke-Taylor', 'England']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Tim Brooke-Taylor', '__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ England']]
Text: Tim Brooke-Taylor was born in England and starred in Bananaman.
Subject: ['Bananaman', 'Tim Brooke-Taylor']
Predicate: ['starring', 'birthPlace']
Object: ['Tim Brooke-Taylor', 'England']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Tim Brooke-Taylor', '__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ United Kingdom']]
Text: Tim Brooke-Taylor was born in the UK and starred in Bananaman.
Subject: ['Bananaman', 'Tim Brooke-Taylor']
Predicate: ['starring', 'birthPlace']
Object: ['Tim Brooke-Taylor', 'United Kingdom']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Tim Brooke-Taylor', '__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ United Kingdom']]
Text: Born in the United Kingdom, Tim Brooke-Taylor, starred in Bananaman.
Subject: ['Bananaman', 'Tim Brooke-Taylor']
Predicate: ['starring', 'birthPlace']
Object: ['Tim Brooke-Taylor', 'United Kingdom']

Triple: [['__subject__ Bananaman __predicate__ starring __object__ Tim Brooke-Taylor', '__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ United Kingdom']]
Text: Tim Brooke-Taylor, originally from the U.K., starred in Bananaman.
Subject: ['Bananaman', 'Tim Brooke-Taylor']
Predicate: ['starring', 'birthPlace']
Object: ['Tim Brooke-Taylor', 'United Kingdom']

Triple: [['__subject__ Baymax __predicate__ creator __object__ Duncan Rouleau', '__subject__ Baymax __predicate__ creator __object__ Steven T. Seagle']]
Text: Duncan Rouleau and Steven T. Seagle created Baymax.
Subject: ['Baymax', 'Baymax']
Predicate: ['creator', 'creator']
Object: ['Duncan Rouleau', 'Steven T. Seagle']

Triple: [['__subject__ Baymax __predicate__ creator __object__ Duncan Rouleau', '__subject__ Baymax __predicate__ creator __object__ Steven T. Seagle']]
Text: Baymax was created by Duncan Rouleau and Steven T. Seagle.
Subject: ['Baymax', 'Baymax']
Predicate: ['creator', 'creator']
Object: ['Duncan Rouleau', 'Steven T. Seagle']

Triple: [['__subject__ Baymax __predicate__ creator __object__ Duncan Rouleau', '__subject__ Baymax __predicate__ creator __object__ Steven T. Seagle']]
Text: Baymax was created by both Duncan Rouleau and Steven T. Seagle.
Subject: ['Baymax', 'Baymax']
Predicate: ['creator', 'creator']
Object: ['Duncan Rouleau', 'Steven T. Seagle']

Triple: [['__subject__ Baymax __predicate__ firstAppearanceInFilm __object__ Big Hero 6 (film)', '__subject__ Big Hero 6 (film) __predicate__ starring __object__ Ryan Potter']]
Text: Baymax first appeared in Big Hero 6, starring Ryan Potter.
Subject: ['Baymax', 'Big Hero 6 (film)']
Predicate: ['firstAppearanceInFilm', 'starring']
Object: ['Big Hero 6 (film)', 'Ryan Potter']

Triple: [['__subject__ Baymax __predicate__ firstAppearanceInFilm __object__ Big Hero 6 (film)', '__subject__ Big Hero 6 (film) __predicate__ starring __object__ Ryan Potter']]
Text: Baymax first appeared in the film Big Hero 6 which stars Ryan Potter.
Subject: ['Baymax', 'Big Hero 6 (film)']
Predicate: ['firstAppearanceInFilm', 'starring']
Object: ['Big Hero 6 (film)', 'Ryan Potter']

Triple: [['__subject__ Baymax __predicate__ firstAppearanceInFilm __object__ Big Hero 6 (film)', '__subject__ Big Hero 6 (film) __predicate__ starring __object__ Ryan Potter']]
Text: The first appearance in a film for the character Baymax was Big Hero 6 which starred Ryan Potter.
Subject: ['Baymax', 'Big Hero 6 (film)']
Predicate: ['firstAppearanceInFilm', 'starring']
Object: ['Big Hero 6 (film)', 'Ryan Potter']

Triple: [['__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)', '__subject__ Baymax __predicate__ creator __object__ Duncan Rouleau']]
Text: Duncan Rouleau created Baymax, a character in Big Hero 6.
Subject: ['Baymax', 'Baymax']
Predicate: ['series', 'creator']
Object: ['Big Hero 6 (film)', 'Duncan Rouleau']

Triple: [['__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)', '__subject__ Baymax __predicate__ creator __object__ Duncan Rouleau']]
Text: Created by Duncan Rouleau, Baymax, is a character in Big Hero 6.
Subject: ['Baymax', 'Baymax']
Predicate: ['series', 'creator']
Object: ['Big Hero 6 (film)', 'Duncan Rouleau']

Triple: [['__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)', '__subject__ Big Hero 6 (film) __predicate__ starring __object__ Damon Wayans, Jr.']]
Text: Big Hero 6, starring Damon Wayans Jr., features the character Baymax.
Subject: ['Baymax', 'Big Hero 6 (film)']
Predicate: ['series', 'starring']
Object: ['Big Hero 6 (film)', 'Damon Wayans, Jr.']

Triple: [['__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)', '__subject__ Big Hero 6 (film) __predicate__ starring __object__ Damon Wayans, Jr.']]
Text: Baymax is a character in Big Hero 6 that stars the actor Damon Wayans Jr.
Subject: ['Baymax', 'Big Hero 6 (film)']
Predicate: ['series', 'starring']
Object: ['Big Hero 6 (film)', 'Damon Wayans, Jr.']

Triple: [['__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)', '__subject__ Big Hero 6 (film) __predicate__ starring __object__ Damon Wayans, Jr.']]
Text: The film Big Hero 6, which stars Damon Wayans Jr, has a character called Baymax.
Subject: ['Baymax', 'Big Hero 6 (film)']
Predicate: ['series', 'starring']
Object: ['Big Hero 6 (film)', 'Damon Wayans, Jr.']

Triple: [['__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)', '__subject__ Big Hero 6 (film) __predicate__ starring __object__ Jamie Chung']]
Text: Baymax is a character in the film Big Hero 6 that starred Jamie Chung.
Subject: ['Baymax', 'Big Hero 6 (film)']
Predicate: ['series', 'starring']
Object: ['Big Hero 6 (film)', 'Jamie Chung']

Triple: [['__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)', '__subject__ Big Hero 6 (film) __predicate__ starring __object__ Jamie Chung']]
Text: Baymax is a character in Big Hero 6, where Jamie Chung is the star.
Subject: ['Baymax', 'Big Hero 6 (film)']
Predicate: ['series', 'starring']
Object: ['Big Hero 6 (film)', 'Jamie Chung']

Triple: [['__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)', '__subject__ Big Hero 6 (film) __predicate__ starring __object__ Jamie Chung']]
Text: Big Hero 6, starring Jamie Chung, features the character Baymax.
Subject: ['Baymax', 'Big Hero 6 (film)']
Predicate: ['series', 'starring']
Object: ['Big Hero 6 (film)', 'Jamie Chung']

Triple: [['__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)', '__subject__ Big Hero 6 (film) __predicate__ starring __object__ Maya Rudolph']]
Text: Baymax is a character in Big Hero 6 which also starred Maya Rudolph.
Subject: ['Baymax', 'Big Hero 6 (film)']
Predicate: ['series', 'starring']
Object: ['Big Hero 6 (film)', 'Maya Rudolph']

Triple: [['__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)', '__subject__ Big Hero 6 (film) __predicate__ starring __object__ Maya Rudolph']]
Text: Baymax is a character in Big Hero 6 that stars Maya Rudolph.
Subject: ['Baymax', 'Big Hero 6 (film)']
Predicate: ['series', 'starring']
Object: ['Big Hero 6 (film)', 'Maya Rudolph']

Triple: [['__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)', '__subject__ Big Hero 6 (film) __predicate__ starring __object__ Maya Rudolph']]
Text: Maya Rudolph starred in the film Big Hero 6, in which Baymax is a character.
Subject: ['Baymax', 'Big Hero 6 (film)']
Predicate: ['series', 'starring']
Object: ['Big Hero 6 (film)', 'Maya Rudolph']

Triple: [['__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)', '__subject__ Big Hero 6 (film) __predicate__ starring __object__ Scott Adsit']]
Text: Baymax is a character in Big Hero 6, Scott Adsit starred in the movie version of Big Hero 6.
Subject: ['Baymax', 'Big Hero 6 (film)']
Predicate: ['series', 'starring']
Object: ['Big Hero 6 (film)', 'Scott Adsit']

Triple: [['__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)', '__subject__ Big Hero 6 (film) __predicate__ starring __object__ Scott Adsit']]
Text: Baymax is a character in the film Big Hero 6 which stars Scott Adsit.
Subject: ['Baymax', 'Big Hero 6 (film)']
Predicate: ['series', 'starring']
Object: ['Big Hero 6 (film)', 'Scott Adsit']

Triple: [['__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)', '__subject__ Big Hero 6 (film) __predicate__ starring __object__ Scott Adsit']]
Text: Baymax is a character in Big Hero 6, starring Scott Adsit.
Subject: ['Baymax', 'Big Hero 6 (film)']
Predicate: ['series', 'starring']
Object: ['Big Hero 6 (film)', 'Scott Adsit']

Triple: [['__subject__ Baymax __predicate__ voice __object__ Scott Adsit', '__subject__ Scott Adsit __predicate__ birthPlace __object__ Northbrook, Illinois']]
Text: Scott Adsit was born in Northbrook, Illinois and does the voice for Baymax.
Subject: ['Baymax', 'Scott Adsit']
Predicate: ['voice', 'birthPlace']
Object: ['Scott Adsit', 'Northbrook, Illinois']

Triple: [['__subject__ Baymax __predicate__ voice __object__ Scott Adsit', '__subject__ Scott Adsit __predicate__ birthPlace __object__ Northbrook, Illinois']]
Text: The character Baymax is voiced by Scott Adsit, who was born in Northbrook, Illinois.
Subject: ['Baymax', 'Scott Adsit']
Predicate: ['voice', 'birthPlace']
Object: ['Scott Adsit', 'Northbrook, Illinois']

Triple: [['__subject__ Baymax __predicate__ voice __object__ Scott Adsit', '__subject__ Scott Adsit __predicate__ birthPlace __object__ Northbrook, Illinois']]
Text: Born in Northbrook Illinois, Scott Adsit, provides the voice for the character Baymax.
Subject: ['Baymax', 'Scott Adsit']
Predicate: ['voice', 'birthPlace']
Object: ['Scott Adsit', 'Northbrook, Illinois']

Triple: [['__subject__ Ben Urich __predicate__ creator __object__ Gene Colan', '__subject__ Ben Urich __predicate__ fullName __object__ Benjamin Urich']]
Text: The character Ben Urich (Benjamin Urich) was created by Gene Colan.
Subject: ['Ben Urich', 'Ben Urich']
Predicate: ['creator', 'fullName']
Object: ['Gene Colan', 'Benjamin Urich']

Triple: [['__subject__ Ben Urich __predicate__ creator __object__ Gene Colan', '__subject__ Ben Urich __predicate__ fullName __object__ Benjamin Urich']]
Text: Ben Urich's full name is actually Benjamin Urich, the character was created by Gene Colan.
Subject: ['Ben Urich', 'Ben Urich']
Predicate: ['creator', 'fullName']
Object: ['Gene Colan', 'Benjamin Urich']

Triple: [['__subject__ Ben Urich __predicate__ creator __object__ Gene Colan', '__subject__ Ben Urich __predicate__ fullName __object__ Benjamin Urich']]
Text: Ben Urich, full name Benjamin Urich, was created by Gene Colan.
Subject: ['Ben Urich', 'Ben Urich']
Predicate: ['creator', 'fullName']
Object: ['Gene Colan', 'Benjamin Urich']

Triple: [['__subject__ Ben Urich __predicate__ creator __object__ Roger McKenzie (comic book writer)', '__subject__ Ben Urich __predicate__ creator __object__ Gene Colan']]
Text: The Comic book character Ben Urich was created by Roger McKenzie and Gene Colan.
Subject: ['Ben Urich', 'Ben Urich']
Predicate: ['creator', 'creator']
Object: ['Roger McKenzie (comic book writer)', 'Gene Colan']

Triple: [['__subject__ Ben Urich __predicate__ creator __object__ Roger McKenzie (comic book writer)', '__subject__ Ben Urich __predicate__ creator __object__ Gene Colan']]
Text: Comic book writer, Roger McKenzie, along with Gene Colan, created Ben Urich.
Subject: ['Ben Urich', 'Ben Urich']
Predicate: ['creator', 'creator']
Object: ['Roger McKenzie (comic book writer)', 'Gene Colan']

Triple: [['__subject__ Bibbo Bibbowski __predicate__ creator __object__ Jerry Ordway', '__subject__ Bibbo Bibbowski __predicate__ fullName __object__ Bo Bibbowski']]
Text: Bo Bibbowski (full name Bibbo Bibbowski) was created by Jerry Ordway.
Subject: ['Bibbo Bibbowski', 'Bibbo Bibbowski']
Predicate: ['creator', 'fullName']
Object: ['Jerry Ordway', 'Bo Bibbowski']

Triple: [['__subject__ Bibbo Bibbowski __predicate__ creator __object__ Jerry Ordway', '__subject__ Bibbo Bibbowski __predicate__ fullName __object__ Bo Bibbowski']]
Text: Bo Bibbowski, otherwise known as Bibbo, was created by Jerry Ordway.
Subject: ['Bibbo Bibbowski', 'Bibbo Bibbowski']
Predicate: ['creator', 'fullName']
Object: ['Jerry Ordway', 'Bo Bibbowski']

Triple: [['__subject__ Bibbo Bibbowski __predicate__ creator __object__ Jerry Ordway', '__subject__ Bibbo Bibbowski __predicate__ fullName __object__ Bo Bibbowski']]
Text: Bo Bibbowski is often called Bibbo and was created by Jerry Ordway.
Subject: ['Bibbo Bibbowski', 'Bibbo Bibbowski']
Predicate: ['creator', 'fullName']
Object: ['Jerry Ordway', 'Bo Bibbowski']

Triple: [['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Alan Tudyk', '__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)']]
Text: Baymax is a character in the film Big Hero 6, which stars Alan Tudyk.
Subject: ['Big Hero 6 (film)', 'Baymax']
Predicate: ['starring', 'series']
Object: ['Alan Tudyk', 'Big Hero 6 (film)']

Triple: [['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Alan Tudyk', '__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)']]
Text: The film Big Hero 6, starring Alan Tudyk, has a character called Baymax.
Subject: ['Big Hero 6 (film)', 'Baymax']
Predicate: ['starring', 'series']
Object: ['Alan Tudyk', 'Big Hero 6 (film)']

Triple: [['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Alan Tudyk', '__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)']]
Text: Baymax is a character in the film Big Hero 6, which starred Alan Tudyk.
Subject: ['Big Hero 6 (film)', 'Baymax']
Predicate: ['starring', 'series']
Object: ['Alan Tudyk', 'Big Hero 6 (film)']

Triple: [['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Ryan Potter', '__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)']]
Text: Baymax is a character in the film Big Hero 6, which starred Ryan Potter.
Subject: ['Big Hero 6 (film)', 'Baymax']
Predicate: ['starring', 'series']
Object: ['Ryan Potter', 'Big Hero 6 (film)']

Triple: [['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Ryan Potter', '__subject__ Baymax __predicate__ series __object__ Big Hero 6 (film)']]
Text: Baymax is a character in Big Hero 6 in which Ryan Potter stars.
Subject: ['Big Hero 6 (film)', 'Baymax']
Predicate: ['starring', 'series']
Object: ['Ryan Potter', 'Big Hero 6 (film)']

Triple: [['__subject__ Black Pirate __predicate__ creator __object__ Sheldon Moldoff', '__subject__ Sheldon Moldoff __predicate__ award __object__ Inkpot Award']]
Text: Sheldon Moldoff created the Black Pirate and won the Inkpot Award.
Subject: ['Black Pirate', 'Sheldon Moldoff']
Predicate: ['creator', 'award']
Object: ['Sheldon Moldoff', 'Inkpot Award']

Triple: [['__subject__ Black Pirate __predicate__ creator __object__ Sheldon Moldoff', '__subject__ Sheldon Moldoff __predicate__ award __object__ Inkpot Award']]
Text: Sheldon Moldoff, creator of the Black Pirate, has won the Inkpot Award.
Subject: ['Black Pirate', 'Sheldon Moldoff']
Predicate: ['creator', 'award']
Object: ['Sheldon Moldoff', 'Inkpot Award']

Triple: [['__subject__ Black Pirate __predicate__ creator __object__ Sheldon Moldoff', '__subject__ Sheldon Moldoff __predicate__ award __object__ Inkpot Award']]
Text: The Black Pirate was created by Sheldon Moldoff, who won the Inkpot Award.
Subject: ['Black Pirate', 'Sheldon Moldoff']
Predicate: ['creator', 'award']
Object: ['Sheldon Moldoff', 'Inkpot Award']

Triple: [['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Gardner Fox', '__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Carmine Infantino']]
Text: Blockbuster is a comic character that was created by Carmine Infantino and Gardner Fox.
Subject: ['Blockbuster (comicsCharacter)', 'Blockbuster (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Gardner Fox', 'Carmine Infantino']

Triple: [['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Gardner Fox', '__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Carmine Infantino']]
Text: The comic book character Blockbuster was created by both Gardner Fox and Carmine Infantino.
Subject: ['Blockbuster (comicsCharacter)', 'Blockbuster (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Gardner Fox', 'Carmine Infantino']

Triple: [['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Gardner Fox', '__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Carmine Infantino']]
Text: The character Blockbuster was created by Gardner Fox and Carmine INfantino.
Subject: ['Blockbuster (comicsCharacter)', 'Blockbuster (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Gardner Fox', 'Carmine Infantino']

Triple: [['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Gardner Fox', '__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Roger Stern']]
Text: The character Blockbuster was created by Gardner Fox and Roger Stern.
Subject: ['Blockbuster (comicsCharacter)', 'Blockbuster (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Gardner Fox', 'Roger Stern']

Triple: [['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Gardner Fox', '__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Roger Stern']]
Text: The comic character Blockbuster was created by Gardner Fox and Roger Stern.
Subject: ['Blockbuster (comicsCharacter)', 'Blockbuster (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Gardner Fox', 'Roger Stern']

Triple: [['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Gardner Fox', '__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Tom Lyle']]
Text: The creators of Blockbuster (comics character) are Gardner Fox and Tom Lyle.
Subject: ['Blockbuster (comicsCharacter)', 'Blockbuster (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Gardner Fox', 'Tom Lyle']

Triple: [['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Gardner Fox', '__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Tom Lyle']]
Text: Both Gardner Fox and Tom Lyle were the creators of the comic character, Blockbuster.
Subject: ['Blockbuster (comicsCharacter)', 'Blockbuster (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Gardner Fox', 'Tom Lyle']

Triple: [['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Gardner Fox', '__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Tom Lyle']]
Text: The comic book character Blockbuster was created by Gardner Fox and Tom Lyle.
Subject: ['Blockbuster (comicsCharacter)', 'Blockbuster (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Gardner Fox', 'Tom Lyle']

Triple: [['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Roger Stern', '__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Carmine Infantino']]
Text: The comic book character Blockbuster was created by Roger Stern and Carmine Infantino.
Subject: ['Blockbuster (comicsCharacter)', 'Blockbuster (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Roger Stern', 'Carmine Infantino']

Triple: [['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Roger Stern', '__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Carmine Infantino']]
Text: The comics character Blockbuster was created by Carmine Infantino and Roger Stern.
Subject: ['Blockbuster (comicsCharacter)', 'Blockbuster (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Roger Stern', 'Carmine Infantino']

Triple: [['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Tom Lyle', '__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Carmine Infantino']]
Text: The character Blockbuster was created by Tom Lyle and Carmine Infantino.
Subject: ['Blockbuster (comicsCharacter)', 'Blockbuster (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Tom Lyle', 'Carmine Infantino']

Triple: [['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Tom Lyle', '__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Carmine Infantino']]
Text: The creators of the comics character Blockbuster are Carmine Infantino and Tom Lyle.
Subject: ['Blockbuster (comicsCharacter)', 'Blockbuster (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Tom Lyle', 'Carmine Infantino']

Triple: [['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Tom Lyle', '__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Carmine Infantino']]
Text: The comic character Blockbuster was created by both Tom Lyle and Carmine Infantino.
Subject: ['Blockbuster (comicsCharacter)', 'Blockbuster (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Tom Lyle', 'Carmine Infantino']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Dan Mishkin', '__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Gary Cohn (comics)']]
Text: The character Bolt was created by Dan Mishkin and Gary Cohn.
Subject: ['Bolt (comicsCharacter)', 'Bolt (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Dan Mishkin', 'Gary Cohn (comics)']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Dan Mishkin', '__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Gary Cohn (comics)']]
Text: The comic character Bolt was created by Gary Cohn and Dan Mishkin.
Subject: ['Bolt (comicsCharacter)', 'Bolt (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Dan Mishkin', 'Gary Cohn (comics)']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Dan Mishkin', '__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Gary Cohn (comics)']]
Text: Dan Mishkin created the comic book character Bolt while Gary Cohn is the creator of Bolf.
Subject: ['Bolt (comicsCharacter)', 'Bolt (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Dan Mishkin', 'Gary Cohn (comics)']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Ernie Colón', '__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Dan Mishkin']]
Text: The character Bolt was created by Ernie Colon and Dan Mishkin.
Subject: ['Bolt (comicsCharacter)', 'Bolt (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Ernie Colón', 'Dan Mishkin']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Ernie Colón', '__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Dan Mishkin']]
Text: Ernie Colón and Dan Mishkin are among the creators of the comic character Bolt.
Subject: ['Bolt (comicsCharacter)', 'Bolt (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Ernie Colón', 'Dan Mishkin']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Ernie Colón', '__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Dan Mishkin']]
Text: The comic book character Bolt was created by both Dan Mishkin and Ernie Colon.
Subject: ['Bolt (comicsCharacter)', 'Bolt (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Ernie Colón', 'Dan Mishkin']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Ernie Colón', '__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Gary Cohn (comics)']]
Text: Ernie Colon and Gary Cohn created the comic character Bolt.
Subject: ['Bolt (comicsCharacter)', 'Bolt (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Ernie Colón', 'Gary Cohn (comics)']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Ernie Colón', '__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Gary Cohn (comics)']]
Text: Ernie Colón and comic book writer Gary Cohn were the creators of the comic character Bolt.
Subject: ['Bolt (comicsCharacter)', 'Bolt (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Ernie Colón', 'Gary Cohn (comics)']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Ernie Colón', '__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Gary Cohn (comics)']]
Text: Ernie Colón and Gary Cohn are some of the creators of the comic character Bolt.
Subject: ['Bolt (comicsCharacter)', 'Bolt (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Ernie Colón', 'Gary Cohn (comics)']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Ernie Colón', '__subject__ Ernie Colón __predicate__ nationality __object__ Puerto Ricans']]
Text: Ernie Colon, one of the creators of the character Bolt is a Puerto Rican national.
Subject: ['Bolt (comicsCharacter)', 'Ernie Colón']
Predicate: ['creator', 'nationality']
Object: ['Ernie Colón', 'Puerto Ricans']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Ernie Colón', '__subject__ Ernie Colón __predicate__ nationality __object__ Puerto Ricans']]
Text: Ernie Colon, a Puerto Rican national, created Bolt.
Subject: ['Bolt (comicsCharacter)', 'Ernie Colón']
Predicate: ['creator', 'nationality']
Object: ['Ernie Colón', 'Puerto Ricans']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Paris Cullins', '__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Dan Mishkin']]
Text: The creators of the comic character, Bolt, were Paris Cullins and Dan Mishkin.
Subject: ['Bolt (comicsCharacter)', 'Bolt (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Paris Cullins', 'Dan Mishkin']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Paris Cullins', '__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Dan Mishkin']]
Text: The character Bolt was created by Paris Cullins and Dan Mishkin.
Subject: ['Bolt (comicsCharacter)', 'Bolt (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Paris Cullins', 'Dan Mishkin']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Paris Cullins', '__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Dan Mishkin']]
Text: Dan Mishkin and Paris Cullins are creators of the comic character known as Bolt.
Subject: ['Bolt (comicsCharacter)', 'Bolt (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Paris Cullins', 'Dan Mishkin']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Paris Cullins', '__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Ernie Colón']]
Text: The comic character Bolt, was created by Paris Cullins and Ernie Colon.
Subject: ['Bolt (comicsCharacter)', 'Bolt (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Paris Cullins', 'Ernie Colón']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Paris Cullins', '__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Ernie Colón']]
Text: The creators of the comic character, Bolt, are Paris Cullins and Ernie Colon.
Subject: ['Bolt (comicsCharacter)', 'Bolt (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['Paris Cullins', 'Ernie Colón']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Paris Cullins', '__subject__ Paris Cullins __predicate__ nationality __object__ United States']]
Text: The creator of the comic character, Bolt, is Paris Cullins, A United States national.
Subject: ['Bolt (comicsCharacter)', 'Paris Cullins']
Predicate: ['creator', 'nationality']
Object: ['Paris Cullins', 'United States']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Paris Cullins', '__subject__ Paris Cullins __predicate__ nationality __object__ United States']]
Text: Paris Cullins is an United States national that created the comic character "Bolt".
Subject: ['Bolt (comicsCharacter)', 'Paris Cullins']
Predicate: ['creator', 'nationality']
Object: ['Paris Cullins', 'United States']

Triple: [['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Paris Cullins', '__subject__ Paris Cullins __predicate__ nationality __object__ United States']]
Text: The character Bolt was created Paris Cullins, from the United States.
Subject: ['Bolt (comicsCharacter)', 'Paris Cullins']
Predicate: ['creator', 'nationality']
Object: ['Paris Cullins', 'United States']

Triple: [['__subject__ Bozo the Iron Man __predicate__ creator __object__ George Brenner', '__subject__ Bozo the Iron Man __predicate__ fullName __object__ Hugh Hazzard']]
Text: Bozo the Iron Man's full name is Hugh Hazzard and he was created by George Brenner.
Subject: ['Bozo the Iron Man', 'Bozo the Iron Man']
Predicate: ['creator', 'fullName']
Object: ['George Brenner', 'Hugh Hazzard']

Triple: [['__subject__ Bozo the Iron Man __predicate__ creator __object__ George Brenner', '__subject__ Bozo the Iron Man __predicate__ fullName __object__ Hugh Hazzard']]
Text: Created by George Brenner, the full name of Bozo the Iron Man is "Hugh Hazzard".
Subject: ['Bozo the Iron Man', 'Bozo the Iron Man']
Predicate: ['creator', 'fullName']
Object: ['George Brenner', 'Hugh Hazzard']

Triple: [['__subject__ Bozo the Iron Man __predicate__ creator __object__ George Brenner', '__subject__ Bozo the Iron Man __predicate__ fullName __object__ Hugh Hazzard']]
Text: George Brenner is the creator of Bozo the Iron Man whose alter ego is Hugh Hazzard.
Subject: ['Bozo the Iron Man', 'Bozo the Iron Man']
Predicate: ['creator', 'fullName']
Object: ['George Brenner', 'Hugh Hazzard']

Triple: [['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ John Buscema', '__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ alternativeName __object__ Dane Whitman']]
Text: Dane Whitman, aka the Black Knight was created by John Buscema.
Subject: ['Dane Whitman Black Knight (comicsCharacter)', 'Dane Whitman Black Knight (comicsCharacter)']
Predicate: ['creator', 'alternativeName']
Object: ['John Buscema', 'Dane Whitman']

Triple: [['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ John Buscema', '__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ alternativeName __object__ Dane Whitman']]
Text: The Black Knight (also known as Dane Whitman) was created in the comics genre by John Buscema.
Subject: ['Dane Whitman Black Knight (comicsCharacter)', 'Dane Whitman Black Knight (comicsCharacter)']
Predicate: ['creator', 'alternativeName']
Object: ['John Buscema', 'Dane Whitman']

Triple: [['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ John Buscema', '__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ alternativeName __object__ Dane Whitman']]
Text: Dane Whitman is the alternative name for the comic character, Dane Whitman Black Knight, which was created by John Buscema.
Subject: ['Dane Whitman Black Knight (comicsCharacter)', 'Dane Whitman Black Knight (comicsCharacter)']
Predicate: ['creator', 'alternativeName']
Object: ['John Buscema', 'Dane Whitman']

Triple: [['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ John Buscema', '__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ Roy Thomas']]
Text: The comic book character Dane Whitman (otherwise known as the Black Knight) was created by both Roy Thomas and John Buscema.
Subject: ['Dane Whitman Black Knight (comicsCharacter)', 'Dane Whitman Black Knight (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['John Buscema', 'Roy Thomas']

Triple: [['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ John Buscema', '__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ Roy Thomas']]
Text: Dane Whitman, from the Black Knight was created by John Buscema and Roy Thomas.
Subject: ['Dane Whitman Black Knight (comicsCharacter)', 'Dane Whitman Black Knight (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['John Buscema', 'Roy Thomas']

Triple: [['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ John Buscema', '__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ Roy Thomas']]
Text: Dane Whitman, aka Black Night was created by John Buscema and Roy Thomas.
Subject: ['Dane Whitman Black Knight (comicsCharacter)', 'Dane Whitman Black Knight (comicsCharacter)']
Predicate: ['creator', 'creator']
Object: ['John Buscema', 'Roy Thomas']

Triple: [['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ John Buscema', '__subject__ John Buscema __predicate__ nationality __object__ Americans']]
Text: Dane Whitman, alter ego Black Knight, was created by the American, John Buscema.
Subject: ['Dane Whitman Black Knight (comicsCharacter)', 'John Buscema']
Predicate: ['creator', 'nationality']
Object: ['John Buscema', 'Americans']

Triple: [['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ John Buscema', '__subject__ John Buscema __predicate__ nationality __object__ Americans']]
Text: Dane Whitman, a.k.a. Black Knight, was created by John Buscema (American) in the comics genre.
Subject: ['Dane Whitman Black Knight (comicsCharacter)', 'John Buscema']
Predicate: ['creator', 'nationality']
Object: ['John Buscema', 'Americans']

Triple: [['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ John Buscema', '__subject__ John Buscema __predicate__ nationality __object__ Americans']]
Text: Dane Whitman, a.k.a. Black Knight, was created by John Buscema (American) and considered to be in the comics genre.
Subject: ['Dane Whitman Black Knight (comicsCharacter)', 'John Buscema']
Predicate: ['creator', 'nationality']
Object: ['John Buscema', 'Americans']

Triple: [['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ Roy Thomas', '__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ alternativeName __object__ Dane Whitman']]
Text: Dane Whitman is the alternative name for the comic character, Dane Whitman Black Knight which was created by Roy Thomas.
Subject: ['Dane Whitman Black Knight (comicsCharacter)', 'Dane Whitman Black Knight (comicsCharacter)']
Predicate: ['creator', 'alternativeName']
Object: ['Roy Thomas', 'Dane Whitman']

Triple: [['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ Roy Thomas', '__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ alternativeName __object__ Dane Whitman']]
Text: The comic book character Dane Whitman Black Knight is also known as simply Dane Whitman or the alter ego Black Knight, and was created by Roy Thomas.
Subject: ['Dane Whitman Black Knight (comicsCharacter)', 'Dane Whitman Black Knight (comicsCharacter)']
Predicate: ['creator', 'alternativeName']
Object: ['Roy Thomas', 'Dane Whitman']

Triple: [['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ Roy Thomas', '__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ alternativeName __object__ Dane Whitman']]
Text: Dane Whitman Black, also known as Dane Whitman was created by Roy Thomas.
Subject: ['Dane Whitman Black Knight (comicsCharacter)', 'Dane Whitman Black Knight (comicsCharacter)']
Predicate: ['creator', 'alternativeName']
Object: ['Roy Thomas', 'Dane Whitman']

Triple: [['__subject__ Duncan Rouleau __predicate__ nationality __object__ Americans', '__subject__ Baymax __predicate__ creator __object__ Duncan Rouleau']]
Text: Duncan Rouleau is an American national who created Baymax.
Subject: ['Duncan Rouleau', 'Baymax']
Predicate: ['nationality', 'creator']
Object: ['Americans', 'Duncan Rouleau']

Triple: [['__subject__ Duncan Rouleau __predicate__ nationality __object__ Americans', '__subject__ Baymax __predicate__ creator __object__ Duncan Rouleau']]
Text: Baymax was created by American, Duncan Rouleau.
Subject: ['Duncan Rouleau', 'Baymax']
Predicate: ['nationality', 'creator']
Object: ['Americans', 'Duncan Rouleau']

Triple: [['__subject__ Gene Colan __predicate__ nationality __object__ Americans', '__subject__ Ben Urich __predicate__ creator __object__ Gene Colan']]
Text: Gene Colan is the American national who created the character Ben Urich.
Subject: ['Gene Colan', 'Ben Urich']
Predicate: ['nationality', 'creator']
Object: ['Americans', 'Gene Colan']

Triple: [['__subject__ Gene Colan __predicate__ nationality __object__ Americans', '__subject__ Ben Urich __predicate__ creator __object__ Gene Colan']]
Text: Ben Urich was created by Gene Colan, an American.
Subject: ['Gene Colan', 'Ben Urich']
Predicate: ['nationality', 'creator']
Object: ['Americans', 'Gene Colan']

Triple: [['__subject__ Gene Colan __predicate__ nationality __object__ Americans', '__subject__ Ben Urich __predicate__ creator __object__ Gene Colan']]
Text: The American Gene Colan created the character Ben Urich.
Subject: ['Gene Colan', 'Ben Urich']
Predicate: ['nationality', 'creator']
Object: ['Americans', 'Gene Colan']

Triple: [['__subject__ Karl Kesel __predicate__ nationality __object__ Americans', '__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Karl Kesel']]
Text: The comic book character Auron was created by Karl Kesel, an American.
Subject: ['Karl Kesel', 'Auron (comicsCharacter)']
Predicate: ['nationality', 'creator']
Object: ['Americans', 'Karl Kesel']

Triple: [['__subject__ Karl Kesel __predicate__ nationality __object__ Americans', '__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Karl Kesel']]
Text: American, Karl Kesel, is the creator of the comic character, Auron.
Subject: ['Karl Kesel', 'Auron (comicsCharacter)']
Predicate: ['nationality', 'creator']
Object: ['Americans', 'Karl Kesel']

Triple: [['__subject__ Karl Kesel __predicate__ nationality __object__ Americans', '__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Karl Kesel']]
Text: The American Karl Kesel created the comic character Auron.
Subject: ['Karl Kesel', 'Auron (comicsCharacter)']
Predicate: ['nationality', 'creator']
Object: ['Americans', 'Karl Kesel']

Triple: [['__subject__ Roger McKenzie (comic book writer) __predicate__ nationality __object__ United States', '__subject__ Ben Urich __predicate__ creator __object__ Roger McKenzie (comic book writer)']]
Text: The American Roger McKenzie is a comic book writer who created the character Ben Urich.
Subject: ['Roger McKenzie (comic book writer)', 'Ben Urich']
Predicate: ['nationality', 'creator']
Object: ['United States', 'Roger McKenzie (comic book writer)']

Triple: [['__subject__ Roger McKenzie (comic book writer) __predicate__ nationality __object__ United States', '__subject__ Ben Urich __predicate__ creator __object__ Roger McKenzie (comic book writer)']]
Text: A United States national, comic book writer, Roger McKenzie, is the creator of Ben Urich.
Subject: ['Roger McKenzie (comic book writer)', 'Ben Urich']
Predicate: ['nationality', 'creator']
Object: ['United States', 'Roger McKenzie (comic book writer)']

Triple: [['__subject__ Roger McKenzie (comic book writer) __predicate__ nationality __object__ United States', '__subject__ Ben Urich __predicate__ creator __object__ Roger McKenzie (comic book writer)']]
Text: Roger McKenzie, the American comic book writer is the creator of Ben Urich.
Subject: ['Roger McKenzie (comic book writer)', 'Ben Urich']
Predicate: ['nationality', 'creator']
Object: ['United States', 'Roger McKenzie (comic book writer)']

Triple: [['__subject__ Sheldon Moldoff __predicate__ nationality __object__ Americans', '__subject__ Black Pirate __predicate__ creator __object__ Sheldon Moldoff']]
Text: Sheldon Moldoff is the American creator of Black Pirate.
Subject: ['Sheldon Moldoff', 'Black Pirate']
Predicate: ['nationality', 'creator']
Object: ['Americans', 'Sheldon Moldoff']

Triple: [['__subject__ Sheldon Moldoff __predicate__ nationality __object__ Americans', '__subject__ Black Pirate __predicate__ creator __object__ Sheldon Moldoff']]
Text: The Black Pirate was created by Sheldon Moldoff, who was an American national.
Subject: ['Sheldon Moldoff', 'Black Pirate']
Predicate: ['nationality', 'creator']
Object: ['Americans', 'Sheldon Moldoff']

Triple: [['__subject__ Sheldon Moldoff __predicate__ nationality __object__ Americans', '__subject__ Black Pirate __predicate__ creator __object__ Sheldon Moldoff']]
Text: Sheldon Moldoff is an American who created the Black Pirate.
Subject: ['Sheldon Moldoff', 'Black Pirate']
Predicate: ['nationality', 'creator']
Object: ['Americans', 'Sheldon Moldoff']

Triple: [['__subject__ The Arrow (comicsCharacter) __predicate__ alternativeName __object__ Ralph Payne', '__subject__ The Arrow (comicsCharacter) __predicate__ creator __object__ Paul Gustavson']]
Text: Paul Gustavson is the creator of " The Arrow", otherwise known as Ralph Payne.
Subject: ['The Arrow (comicsCharacter)', 'The Arrow (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Ralph Payne', 'Paul Gustavson']

Triple: [['__subject__ The Arrow (comicsCharacter) __predicate__ alternativeName __object__ Ralph Payne', '__subject__ The Arrow (comicsCharacter) __predicate__ creator __object__ Paul Gustavson']]
Text: Arrow, also known as Ralph Payne, was created by Paul Gustavson.
Subject: ['The Arrow (comicsCharacter)', 'The Arrow (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Ralph Payne', 'Paul Gustavson']

Triple: [['__subject__ The Arrow (comicsCharacter) __predicate__ alternativeName __object__ Ralph Payne', '__subject__ The Arrow (comicsCharacter) __predicate__ creator __object__ Paul Gustavson']]
Text: Arrow, otherwise known as Ralph Payne, was created by Paul Gustavson.
Subject: ['The Arrow (comicsCharacter)', 'The Arrow (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Ralph Payne', 'Paul Gustavson']

Triple: [['__subject__ The Arrow (comicsCharacter) __predicate__ alternativeName __object__ Rick Parker', '__subject__ The Arrow (comicsCharacter) __predicate__ creator __object__ Paul Gustavson']]
Text: Rick parker, aka the Arrow was created by Paul Gustavson.
Subject: ['The Arrow (comicsCharacter)', 'The Arrow (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Rick Parker', 'Paul Gustavson']

Triple: [['__subject__ The Arrow (comicsCharacter) __predicate__ alternativeName __object__ Rick Parker', '__subject__ The Arrow (comicsCharacter) __predicate__ creator __object__ Paul Gustavson']]
Text: The character Arrow's alter ego is Rick Parker, created by Paul Gustavson.
Subject: ['The Arrow (comicsCharacter)', 'The Arrow (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Rick Parker', 'Paul Gustavson']

Triple: [['__subject__ The Arrow (comicsCharacter) __predicate__ alternativeName __object__ Rick Parker', '__subject__ The Arrow (comicsCharacter) __predicate__ creator __object__ Paul Gustavson']]
Text: Rick Parker, aka the Arrow, was created by Paul Gustavson.
Subject: ['The Arrow (comicsCharacter)', 'The Arrow (comicsCharacter)']
Predicate: ['alternativeName', 'creator']
Object: ['Rick Parker', 'Paul Gustavson']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ AmeriGas __predicate__ foundingDate __object__ 1959-01-01']]
Text: AmeriGas was founded in the United States on 1959-01-01.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['country', 'foundingDate']
Object: ['United States', '1959-01-01']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ AmeriGas __predicate__ foundingDate __object__ 1959-01-01']]
Text: AmeriGas, founded on 01-01-1959, works in the country of the United States.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['country', 'foundingDate']
Object: ['United States', '1959-01-01']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ AmeriGas __predicate__ foundingDate __object__ 1959-01-01']]
Text: AmeriGas, whose home country is the United States, was founded on January 1, 1959.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['country', 'foundingDate']
Object: ['United States', '1959-01-01']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ AmeriGas __predicate__ numberOfEmployees __object__ 8500']]
Text: AmeriGas is based in the United States and employs 8.5 thousand people.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['country', 'numberOfEmployees']
Object: ['United States', '8500']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ AmeriGas __predicate__ numberOfEmployees __object__ 8500']]
Text: AmeriGas, whose current employment is 8,500, has its home in the United States.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['country', 'numberOfEmployees']
Object: ['United States', '8500']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ AmeriGas __predicate__ numberOfEmployees __object__ 8500']]
Text: AmeriGas works in the United States with 8500 employees.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['country', 'numberOfEmployees']
Object: ['United States', '8500']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ White American']]
Text: AmeriGas is working in the United States. White American is one of the ethnic groups in that same country.
Subject: ['AmeriGas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'White American']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ White American']]
Text: AmeriGas’s home country is the United States which one of ethnics groups is White Americans.
Subject: ['AmeriGas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'White American']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ White American']]
Text: AmeriGas works in the United States, where White-American is a category for an ethnic group.
Subject: ['AmeriGas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'White American']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ White American']]
Text: AmeriGas's home country is the US, where one of the ethnic groups is White Americans.
Subject: ['AmeriGas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'White American']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ White American']]
Text: AmeriGas works in the country of the United States which has an ethnic grouping of White-American.
Subject: ['AmeriGas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'White American']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ White American']]
Text: AmeriGas is working in the United States where White American is one of the ethnic groups.
Subject: ['AmeriGas', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'White American']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Paul Ryan']]
Text: AmeriGas works in the United States where Paul Ryan is the leader.
Subject: ['AmeriGas', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Paul Ryan']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Paul Ryan']]
Text: AmeriGas works in the United States, one of whose leaders is Paul Ryan.
Subject: ['AmeriGas', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Paul Ryan']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Paul Ryan']]
Text: AmeriGas's home country is the United States, which has Paul Ryan as one of its leaders.
Subject: ['AmeriGas', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Paul Ryan']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Paul Ryan']]
Text: AmeriGas is working in the United States where Paul Ryan is the name of one of the government leaders.
Subject: ['AmeriGas', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Paul Ryan']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Paul Ryan']]
Text: AmeriGas works in the US, where Paul Ryan is the leader.
Subject: ['AmeriGas', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Paul Ryan']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Paul Ryan']]
Text: AmeriGas is located in the United States, one of whose leaders is named Paul Ryan.
Subject: ['AmeriGas', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Paul Ryan']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ United States __predicate__ leaderTitle __object__ Vice President']]
Text: AmeriGas works in the US, where the Vice President is a leader.
Subject: ['AmeriGas', 'United States']
Predicate: ['country', 'leaderTitle']
Object: ['United States', 'Vice President']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ United States __predicate__ leaderTitle __object__ Vice President']]
Text: AmeriGas's home country is the United States, which has Vice President as one of its leadership titles.
Subject: ['AmeriGas', 'United States']
Predicate: ['country', 'leaderTitle']
Object: ['United States', 'Vice President']

Triple: [['__subject__ AmeriGas __predicate__ country __object__ United States', '__subject__ United States __predicate__ leaderTitle __object__ Vice President']]
Text: AmeriGas is working in the United States, where Vice President is one of the titles of its government leaders.
Subject: ['AmeriGas', 'United States']
Predicate: ['country', 'leaderTitle']
Object: ['United States', 'Vice President']

Triple: [['__subject__ AmeriGas __predicate__ industry __object__ Energy industry', '__subject__ AmeriGas __predicate__ country __object__ United States']]
Text: AmeriGas works in the United States in the energy industry.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['industry', 'country']
Object: ['Energy industry', 'United States']

Triple: [['__subject__ AmeriGas __predicate__ industry __object__ Energy industry', '__subject__ AmeriGas __predicate__ country __object__ United States']]
Text: Amerigas, which works in the US, is in the energy industry.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['industry', 'country']
Object: ['Energy industry', 'United States']

Triple: [['__subject__ AmeriGas __predicate__ industry __object__ Energy industry', '__subject__ AmeriGas __predicate__ country __object__ United States']]
Text: The United States is the home country of AmeriGas, a company in the energy industry.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['industry', 'country']
Object: ['Energy industry', 'United States']

Triple: [['__subject__ AmeriGas __predicate__ industry __object__ Energy industry', '__subject__ AmeriGas __predicate__ foundingDate __object__ 1959-01-01']]
Text: Classified as energy industry, AmeriGas was founded on January 1st, 1959.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['industry', 'foundingDate']
Object: ['Energy industry', '1959-01-01']

Triple: [['__subject__ AmeriGas __predicate__ industry __object__ Energy industry', '__subject__ AmeriGas __predicate__ foundingDate __object__ 1959-01-01']]
Text: AmeriGas is a company in the energy industry that was founded on January 1, 1959.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['industry', 'foundingDate']
Object: ['Energy industry', '1959-01-01']

Triple: [['__subject__ AmeriGas __predicate__ industry __object__ Energy industry', '__subject__ AmeriGas __predicate__ foundingDate __object__ 1959-01-01']]
Text: AmeriGas is a company in the energy industry that was founded on 01-01-1959.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['industry', 'foundingDate']
Object: ['Energy industry', '1959-01-01']

Triple: [['__subject__ AmeriGas __predicate__ city __object__ King of Prussia, Pennsylvania', '__subject__ AmeriGas __predicate__ country __object__ United States']]
Text: AmeriGas is located in King of Prussia, Pennsylvania, and does lots of work in the US.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['city', 'country']
Object: ['King of Prussia, Pennsylvania', 'United States']

Triple: [['__subject__ AmeriGas __predicate__ city __object__ King of Prussia, Pennsylvania', '__subject__ AmeriGas __predicate__ country __object__ United States']]
Text: AmeriGas, which works in the United States, is located in King of Prussia, Pennsylvania.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['city', 'country']
Object: ['King of Prussia, Pennsylvania', 'United States']

Triple: [['__subject__ AmeriGas __predicate__ city __object__ King of Prussia, Pennsylvania', '__subject__ AmeriGas __predicate__ country __object__ United States']]
Text: AmeriGas's location is in the city of King of Prussia, Pennsylvania in the United States.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['city', 'country']
Object: ['King of Prussia, Pennsylvania', 'United States']

Triple: [['__subject__ AmeriGas __predicate__ city __object__ King of Prussia, Pennsylvania', '__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000']]
Text: AmeriGas, which is located in King of Prussia, Pennsylvania, earns an operating income of 380700000.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['city', 'operatingIncome']
Object: ['King of Prussia, Pennsylvania', '380700000']

Triple: [['__subject__ AmeriGas __predicate__ city __object__ King of Prussia, Pennsylvania', '__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000']]
Text: The Pennsylvania company, AmeriGas has an operating income of 380700000 and is located in King of Prussia.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['city', 'operatingIncome']
Object: ['King of Prussia, Pennsylvania', '380700000']

Triple: [['__subject__ AmeriGas __predicate__ city __object__ King of Prussia, Pennsylvania', '__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000']]
Text: Located in King of Prussia, Pennsylvania, AmeriGas has an operating income of $380,700,000.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['city', 'operatingIncome']
Object: ['King of Prussia, Pennsylvania', '380700000']

Triple: [['__subject__ AmeriGas __predicate__ city __object__ King of Prussia, Pennsylvania', '__subject__ King of Prussia, Pennsylvania __predicate__ type __object__ Census-designated place']]
Text: AmeriGas is located in King of Prussia, Pennsylvania, which is a census-designated place.
Subject: ['AmeriGas', 'King of Prussia, Pennsylvania']
Predicate: ['city', 'type']
Object: ['King of Prussia, Pennsylvania', 'Census-designated place']

Triple: [['__subject__ AmeriGas __predicate__ city __object__ King of Prussia, Pennsylvania', '__subject__ King of Prussia, Pennsylvania __predicate__ type __object__ Census-designated place']]
Text: King of Prussia, Pennsylvania, a census-designated place is the location of AmeriGas.
Subject: ['AmeriGas', 'King of Prussia, Pennsylvania']
Predicate: ['city', 'type']
Object: ['King of Prussia, Pennsylvania', 'Census-designated place']

Triple: [['__subject__ AmeriGas __predicate__ numberOfEmployees __object__ 8500', '__subject__ AmeriGas __predicate__ netIncome __object__ 211200000']]
Text: AmeriGas earns a net income of 211200000 thanks to the efforts of its 8500 employees.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['numberOfEmployees', 'netIncome']
Object: ['8500', '211200000']

Triple: [['__subject__ AmeriGas __predicate__ numberOfEmployees __object__ 8500', '__subject__ AmeriGas __predicate__ netIncome __object__ 211200000']]
Text: AmeriGas employs 8,500 people with their net income being 211200000.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['numberOfEmployees', 'netIncome']
Object: ['8500', '211200000']

Triple: [['__subject__ AmeriGas __predicate__ numberOfEmployees __object__ 8500', '__subject__ AmeriGas __predicate__ netIncome __object__ 211200000']]
Text: AmeriGas has 8,500 employees and a net income of $211,200,000.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['numberOfEmployees', 'netIncome']
Object: ['8500', '211200000']

Triple: [['__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000', '__subject__ AmeriGas __predicate__ country __object__ United States']]
Text: AmeriGas is a U.S. based company with an operating income of $380,700,000.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['operatingIncome', 'country']
Object: ['380700000', 'United States']

Triple: [['__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000', '__subject__ AmeriGas __predicate__ country __object__ United States']]
Text: AmeriGas's is based in the United States and has an operating income of 380700000.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['operatingIncome', 'country']
Object: ['380700000', 'United States']

Triple: [['__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000', '__subject__ AmeriGas __predicate__ country __object__ United States']]
Text: AmeriGas has an operating income of $380,700,000 and works in the country of the United States.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['operatingIncome', 'country']
Object: ['380700000', 'United States']

Triple: [['__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000', '__subject__ AmeriGas __predicate__ industry __object__ Energy industry']]
Text: AmeriGas is a company in the energy industry whose operating income is 380700000.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['operatingIncome', 'industry']
Object: ['380700000', 'Energy industry']

Triple: [['__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000', '__subject__ AmeriGas __predicate__ industry __object__ Energy industry']]
Text: AmeriGas is a company in the energy industry that has an operating income of $380,700,000.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['operatingIncome', 'industry']
Object: ['380700000', 'Energy industry']

Triple: [['__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000', '__subject__ AmeriGas __predicate__ industry __object__ Energy industry']]
Text: With an operating income of 380700000, AmeriGas's industry is classified as energy.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['operatingIncome', 'industry']
Object: ['380700000', 'Energy industry']

Triple: [['__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000', '__subject__ AmeriGas __predicate__ netIncome __object__ 211200000']]
Text: AmeriGas has an operating income of $380,700,000 and a net income of $211,200,000.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['operatingIncome', 'netIncome']
Object: ['380700000', '211200000']

Triple: [['__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000', '__subject__ AmeriGas __predicate__ netIncome __object__ 211200000']]
Text: The operating income of AmeriGas is 380700000, while their net income is 211200000.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['operatingIncome', 'netIncome']
Object: ['380700000', '211200000']

Triple: [['__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000', '__subject__ AmeriGas __predicate__ netIncome __object__ 211200000']]
Text: AmeriGas earned an operating income of 380700000, producing a net income of $211,200,000.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['operatingIncome', 'netIncome']
Object: ['380700000', '211200000']

Triple: [['__subject__ AmeriGas __predicate__ regionServed __object__ United States', '__subject__ AmeriGas __predicate__ city __object__ King of Prussia, Pennsylvania']]
Text: AmeriGas, which serves all regions of the United States, is located in the city of King of Prussia, Pennsylvania.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['regionServed', 'city']
Object: ['United States', 'King of Prussia, Pennsylvania']

Triple: [['__subject__ AmeriGas __predicate__ regionServed __object__ United States', '__subject__ AmeriGas __predicate__ city __object__ King of Prussia, Pennsylvania']]
Text: AmeriGas is located in King of Prussia, Pennsylvania, and serve the United States.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['regionServed', 'city']
Object: ['United States', 'King of Prussia, Pennsylvania']

Triple: [['__subject__ AmeriGas __predicate__ regionServed __object__ United States', '__subject__ AmeriGas __predicate__ city __object__ King of Prussia, Pennsylvania']]
Text: While a located in king of prussia, pennsylvania, AmeriGas provides its services within the United States.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['regionServed', 'city']
Object: ['United States', 'King of Prussia, Pennsylvania']

Triple: [['__subject__ AmeriGas __predicate__ regionServed __object__ United States', '__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000']]
Text: AmeriGas serves the United States, and their operating income is 380700000.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['regionServed', 'operatingIncome']
Object: ['United States', '380700000']

Triple: [['__subject__ AmeriGas __predicate__ regionServed __object__ United States', '__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000']]
Text: AmeriGas serves all regions of the United States, and their operating income is 380700000.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['regionServed', 'operatingIncome']
Object: ['United States', '380700000']

Triple: [['__subject__ AmeriGas __predicate__ regionServed __object__ United States', '__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000']]
Text: AmeriGas, which provides services in the United States, has an operating income of $380,700,000.
Subject: ['AmeriGas', 'AmeriGas']
Predicate: ['regionServed', 'operatingIncome']
Object: ['United States', '380700000']

Triple: [['__subject__ AmeriGas __predicate__ regionServed __object__ United States', '__subject__ United States __predicate__ leader __object__ Paul Ryan']]
Text: Paul Ryan is the leader of the United States where AmeriGas provides its services.
Subject: ['AmeriGas', 'United States']
Predicate: ['regionServed', 'leader']
Object: ['United States', 'Paul Ryan']

Triple: [['__subject__ AmeriGas __predicate__ regionServed __object__ United States', '__subject__ United States __predicate__ leader __object__ Paul Ryan']]
Text: Paul Ryan is the name of one of the government leaders in the United States, which Amerigas serves.
Subject: ['AmeriGas', 'United States']
Predicate: ['regionServed', 'leader']
Object: ['United States', 'Paul Ryan']

Triple: [['__subject__ AmeriGas __predicate__ regionServed __object__ United States', '__subject__ United States __predicate__ leader __object__ Paul Ryan']]
Text: AmeriGas services all regions of the United States, which boasts Paul Ryan as one of its leaders.
Subject: ['AmeriGas', 'United States']
Predicate: ['regionServed', 'leader']
Object: ['United States', 'Paul Ryan']

Triple: [['__subject__ AmeriGas __predicate__ regionServed __object__ United States', '__subject__ United States __predicate__ leaderTitle __object__ Vice President']]
Text: Vice President is a United States leadership title, and AmeriGas provides its services in the United States.
Subject: ['AmeriGas', 'United States']
Predicate: ['regionServed', 'leaderTitle']
Object: ['United States', 'Vice President']

Triple: [['__subject__ AmeriGas __predicate__ regionServed __object__ United States', '__subject__ United States __predicate__ leaderTitle __object__ Vice President']]
Text: AmeriGas serves all regions of the United States, with one leadership title for the United States being Vice President.
Subject: ['AmeriGas', 'United States']
Predicate: ['regionServed', 'leaderTitle']
Object: ['United States', 'Vice President']

Triple: [['__subject__ AmeriGas __predicate__ regionServed __object__ United States', '__subject__ United States __predicate__ leaderTitle __object__ Vice President']]
Text: AmeriGas serves the US, where Vice President is one of the titles of the government's leaders.
Subject: ['AmeriGas', 'United States']
Predicate: ['regionServed', 'leaderTitle']
Object: ['United States', 'Vice President']

Triple: [['__subject__ Chinabank __predicate__ foundationPlace __object__ Insular Government of the Philippine Islands', '__subject__ Chinabank __predicate__ location __object__ Philippines']]
Text: Chinabank was founded in the Insular Government of the Philippine Islands, currently still remaining in the Philippines.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundationPlace', 'location']
Object: ['Insular Government of the Philippine Islands', 'Philippines']

Triple: [['__subject__ Chinabank __predicate__ foundationPlace __object__ Insular Government of the Philippine Islands', '__subject__ Chinabank __predicate__ location __object__ Philippines']]
Text: Chinabank, which is located in the Philippines, was founded in the Insular Government of the Philippine Islands.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundationPlace', 'location']
Object: ['Insular Government of the Philippine Islands', 'Philippines']

Triple: [['__subject__ Chinabank __predicate__ foundationPlace __object__ Insular Government of the Philippine Islands', '__subject__ Chinabank __predicate__ location __object__ Philippines']]
Text: Chinabank was founded in the Philippines' Insular Government, and is still located there.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundationPlace', 'location']
Object: ['Insular Government of the Philippine Islands', 'Philippines']

Triple: [['__subject__ Chinabank __predicate__ foundationPlace __object__ Insular Government of the Philippine Islands', '__subject__ Insular Government of the Philippine Islands __predicate__ foundingDate __object__ 1901-07-01']]
Text: Chinabank was founded in the Insular Government of the Philippine Islands, which was founded on July 1st, 1901.
Subject: ['Chinabank', 'Insular Government of the Philippine Islands']
Predicate: ['foundationPlace', 'foundingDate']
Object: ['Insular Government of the Philippine Islands', '1901-07-01']

Triple: [['__subject__ Chinabank __predicate__ foundationPlace __object__ Insular Government of the Philippine Islands', '__subject__ Insular Government of the Philippine Islands __predicate__ foundingDate __object__ 1901-07-01']]
Text: Chinabank was founded in the Insular Government of the Philippine Islands, which was established on July 1, 1901.
Subject: ['Chinabank', 'Insular Government of the Philippine Islands']
Predicate: ['foundationPlace', 'foundingDate']
Object: ['Insular Government of the Philippine Islands', '1901-07-01']

Triple: [['__subject__ Chinabank __predicate__ foundationPlace __object__ Insular Government of the Philippine Islands', '__subject__ Insular Government of the Philippine Islands __predicate__ foundingDate __object__ 1901-07-01']]
Text: Chinabank was founded in the Insular Government of the Philippine Islands on 07-01-1901.
Subject: ['Chinabank', 'Insular Government of the Philippine Islands']
Predicate: ['foundationPlace', 'foundingDate']
Object: ['Insular Government of the Philippine Islands', '1901-07-01']

Triple: [['__subject__ Chinabank __predicate__ foundationPlace __object__ Manila', '__subject__ Chinabank __predicate__ foundationPlace __object__ Insular Government of the Philippine Islands']]
Text: Chinabank was founded in Manila in the Insular Government of the Philippine Islands.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundationPlace', 'foundationPlace']
Object: ['Manila', 'Insular Government of the Philippine Islands']

Triple: [['__subject__ Chinabank __predicate__ foundationPlace __object__ Manila', '__subject__ Chinabank __predicate__ foundationPlace __object__ Insular Government of the Philippine Islands']]
Text: Chinabank was founded in Manila, in the Insular Government of the Philippine Islands.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundationPlace', 'foundationPlace']
Object: ['Manila', 'Insular Government of the Philippine Islands']

Triple: [['__subject__ Chinabank __predicate__ foundationPlace __object__ Manila', '__subject__ Chinabank __predicate__ foundationPlace __object__ Insular Government of the Philippine Islands']]
Text: Manila, the Insular Government of the Philippine Islands, is the founding location of Chinabank.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundationPlace', 'foundationPlace']
Object: ['Manila', 'Insular Government of the Philippine Islands']

Triple: [['__subject__ Chinabank __predicate__ foundationPlace __object__ Manila', '__subject__ Chinabank __predicate__ type __object__ Public company']]
Text: Chinabank is a public company that was founded in Manila.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundationPlace', 'type']
Object: ['Manila', 'Public company']

Triple: [['__subject__ Chinabank __predicate__ foundationPlace __object__ Manila', '__subject__ Chinabank __predicate__ type __object__ Public company']]
Text: Chinabank is a publicly traded company which was founded in Manila.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundationPlace', 'type']
Object: ['Manila', 'Public company']

Triple: [['__subject__ Chinabank __predicate__ foundationPlace __object__ Manila', '__subject__ Chinabank __predicate__ type __object__ Public company']]
Text: Chinabank was founded in Manila, but is now a publicly traded company.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundationPlace', 'type']
Object: ['Manila', 'Public company']

Triple: [['__subject__ Chinabank __predicate__ foundingDate __object__ 1920-08-16', '__subject__ Chinabank __predicate__ foundationPlace __object__ Insular Government of the Philippine Islands']]
Text: Chinabank was founded on 1920-08-16 in the Insular Government of the Philippine Islands.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundingDate', 'foundationPlace']
Object: ['1920-08-16', 'Insular Government of the Philippine Islands']

Triple: [['__subject__ Chinabank __predicate__ foundingDate __object__ 1920-08-16', '__subject__ Chinabank __predicate__ foundationPlace __object__ Insular Government of the Philippine Islands']]
Text: Founded on August16, 1920, Chinabank began in the Insular Government of the Philippine Islands.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundingDate', 'foundationPlace']
Object: ['1920-08-16', 'Insular Government of the Philippine Islands']

Triple: [['__subject__ Chinabank __predicate__ foundingDate __object__ 1920-08-16', '__subject__ Chinabank __predicate__ foundationPlace __object__ Insular Government of the Philippine Islands']]
Text: Chinabank was founded on 08-16-1920 in the Insular Government of the Philippine Islands.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundingDate', 'foundationPlace']
Object: ['1920-08-16', 'Insular Government of the Philippine Islands']

Triple: [['__subject__ Chinabank __predicate__ foundingDate __object__ 1920-08-16', '__subject__ Chinabank __predicate__ netIncome __object__ 15100000000']]
Text: Chinabank, which was founded on 08-16-1920, has a net income of 15,100,000,000.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundingDate', 'netIncome']
Object: ['1920-08-16', '15100000000']

Triple: [['__subject__ Chinabank __predicate__ foundingDate __object__ 1920-08-16', '__subject__ Chinabank __predicate__ netIncome __object__ 15100000000']]
Text: Chinabank, a company founded on 1920-08-16, currently boasts a net income of 15100000000.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundingDate', 'netIncome']
Object: ['1920-08-16', '15100000000']

Triple: [['__subject__ Chinabank __predicate__ foundingDate __object__ 1920-08-16', '__subject__ Chinabank __predicate__ netIncome __object__ 15100000000']]
Text: The net income of Chinabank which was founded August 16, 1920 is 15,100,000,000.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundingDate', 'netIncome']
Object: ['1920-08-16', '15100000000']

Triple: [['__subject__ Chinabank __predicate__ foundingDate __object__ 1920-08-16', '__subject__ Chinabank __predicate__ numberOfEmployees __object__ 5594']]
Text: Founded on 08-16-1920, Chinabank has 5594 employees.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundingDate', 'numberOfEmployees']
Object: ['1920-08-16', '5594']

Triple: [['__subject__ Chinabank __predicate__ foundingDate __object__ 1920-08-16', '__subject__ Chinabank __predicate__ numberOfEmployees __object__ 5594']]
Text: Founded on August 16th, 1920; Chinabank employs 5594 people.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundingDate', 'numberOfEmployees']
Object: ['1920-08-16', '5594']

Triple: [['__subject__ Chinabank __predicate__ foundingDate __object__ 1920-08-16', '__subject__ Chinabank __predicate__ numberOfEmployees __object__ 5594']]
Text: There are currently 5594 workers employed at Chinabank, which was established on August 16, 1920.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundingDate', 'numberOfEmployees']
Object: ['1920-08-16', '5594']

Triple: [['__subject__ Chinabank __predicate__ foundingDate __object__ 1920-08-16', '__subject__ Chinabank __predicate__ numberOfLocations __object__ 295']]
Text: Founded August 16, 1920, Chinabank currently has 295 locations.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundingDate', 'numberOfLocations']
Object: ['1920-08-16', '295']

Triple: [['__subject__ Chinabank __predicate__ foundingDate __object__ 1920-08-16', '__subject__ Chinabank __predicate__ numberOfLocations __object__ 295']]
Text: Chinabank, which was founded on August 16, 1920, has 295 banking centers.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundingDate', 'numberOfLocations']
Object: ['1920-08-16', '295']

Triple: [['__subject__ Chinabank __predicate__ foundingDate __object__ 1920-08-16', '__subject__ Chinabank __predicate__ numberOfLocations __object__ 295']]
Text: Chinabank, which was founded on 1920-08-16, has 295 branches.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['foundingDate', 'numberOfLocations']
Object: ['1920-08-16', '295']

Triple: [['__subject__ Chinabank __predicate__ location __object__ Philippines', '__subject__ Philippines __predicate__ leader __object__ Pantaleon Alvarez']]
Text: Chinabank is located in the Philippines, which is led by Pantaleon Alvarez.
Subject: ['Chinabank', 'Philippines']
Predicate: ['location', 'leader']
Object: ['Philippines', 'Pantaleon Alvarez']

Triple: [['__subject__ Chinabank __predicate__ location __object__ Philippines', '__subject__ Philippines __predicate__ leader __object__ Pantaleon Alvarez']]
Text: Chinabank's location is the Philippines where Pantaleon Alvarez is the leader.
Subject: ['Chinabank', 'Philippines']
Predicate: ['location', 'leader']
Object: ['Philippines', 'Pantaleon Alvarez']

Triple: [['__subject__ Chinabank __predicate__ location __object__ Philippines', '__subject__ Philippines __predicate__ leader __object__ Pantaleon Alvarez']]
Text: Chinabank is located in the Philippines, where Pantaleon Alvarez is a political leader.
Subject: ['Chinabank', 'Philippines']
Predicate: ['location', 'leader']
Object: ['Philippines', 'Pantaleon Alvarez']

Triple: [['__subject__ Chinabank __predicate__ location __object__ Philippines', '__subject__ Philippines __predicate__ leaderTitle __object__ President']]
Text: Chinabank is located in the Philippines whose leader has the title of president.
Subject: ['Chinabank', 'Philippines']
Predicate: ['location', 'leaderTitle']
Object: ['Philippines', 'President']

Triple: [['__subject__ Chinabank __predicate__ location __object__ Philippines', '__subject__ Philippines __predicate__ leaderTitle __object__ President']]
Text: The title of the leader of the Philippines is president, and Chinabank is located there.
Subject: ['Chinabank', 'Philippines']
Predicate: ['location', 'leaderTitle']
Object: ['Philippines', 'President']

Triple: [['__subject__ Chinabank __predicate__ location __object__ Philippines', '__subject__ Philippines __predicate__ leaderTitle __object__ President']]
Text: Chinabank's location is in the Philippines where The President is the leader's title.
Subject: ['Chinabank', 'Philippines']
Predicate: ['location', 'leaderTitle']
Object: ['Philippines', 'President']

Triple: [['__subject__ Chinabank __predicate__ numberOfLocations __object__ 295', '__subject__ Chinabank __predicate__ foundationPlace __object__ Manila']]
Text: After being founded in Manila, Chinabank now has 295 locations.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['numberOfLocations', 'foundationPlace']
Object: ['295', 'Manila']

Triple: [['__subject__ Chinabank __predicate__ numberOfLocations __object__ 295', '__subject__ Chinabank __predicate__ foundationPlace __object__ Manila']]
Text: Chinabank has 295 locations, but Manila is the place of its founding.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['numberOfLocations', 'foundationPlace']
Object: ['295', 'Manila']

Triple: [['__subject__ Chinabank __predicate__ numberOfLocations __object__ 295', '__subject__ Chinabank __predicate__ foundationPlace __object__ Manila']]
Text: Chinabank, founded in Manila, has 295 branches.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['numberOfLocations', 'foundationPlace']
Object: ['295', 'Manila']

Triple: [['__subject__ Chinabank __predicate__ service __object__ Banking', '__subject__ Chinabank __predicate__ numberOfEmployees __object__ 5594']]
Text: With 5594 total employees, Chinabank operates in the banking service.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['service', 'numberOfEmployees']
Object: ['Banking', '5594']

Triple: [['__subject__ Chinabank __predicate__ service __object__ Banking', '__subject__ Chinabank __predicate__ numberOfEmployees __object__ 5594']]
Text: Chinabank is a banking service company with 5594 employees.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['service', 'numberOfEmployees']
Object: ['Banking', '5594']

Triple: [['__subject__ Chinabank __predicate__ service __object__ Banking', '__subject__ Chinabank __predicate__ numberOfEmployees __object__ 5594']]
Text: Employing 5594 people, Chinabank administers banking services to consumers.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['service', 'numberOfEmployees']
Object: ['Banking', '5594']

Triple: [['__subject__ Chinabank __predicate__ service __object__ Banking', '__subject__ Chinabank __predicate__ numberOfLocations __object__ 295']]
Text: Chinabank provides banking services to customers and has 295 banking centers.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['service', 'numberOfLocations']
Object: ['Banking', '295']

Triple: [['__subject__ Chinabank __predicate__ service __object__ Banking', '__subject__ Chinabank __predicate__ numberOfLocations __object__ 295']]
Text: Chinabank has 295 branches in the banking service industry.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['service', 'numberOfLocations']
Object: ['Banking', '295']

Triple: [['__subject__ Chinabank __predicate__ service __object__ Banking', '__subject__ Chinabank __predicate__ numberOfLocations __object__ 295']]
Text: Chinabank offers banking service across its 295 locations.
Subject: ['Chinabank', 'Chinabank']
Predicate: ['service', 'numberOfLocations']
Object: ['Banking', '295']

Triple: [['__subject__ GMA New Media __predicate__ foundingDate __object__ 2000-01-01', '__subject__ GMA New Media __predicate__ industry __object__ Mass Media']]
Text: GMA New Media, founded 01/01/2000, is in the mass media industry.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['foundingDate', 'industry']
Object: ['2000-01-01', 'Mass Media']

Triple: [['__subject__ GMA New Media __predicate__ foundingDate __object__ 2000-01-01', '__subject__ GMA New Media __predicate__ industry __object__ Mass Media']]
Text: Founded on january 1, 2000, GMA New Media's industry is mass media.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['foundingDate', 'industry']
Object: ['2000-01-01', 'Mass Media']

Triple: [['__subject__ GMA New Media __predicate__ foundingDate __object__ 2000-01-01', '__subject__ GMA New Media __predicate__ industry __object__ Mass Media']]
Text: Founded on 01-01-2000, GMA New Media is a mass media industry.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['foundingDate', 'industry']
Object: ['2000-01-01', 'Mass Media']

Triple: [['__subject__ GMA New Media __predicate__ foundingDate __object__ 2000-01-01', '__subject__ GMA New Media __predicate__ location __object__ GMA Network Center']]
Text: GMA New Media, which was founded on 01/01/2000, is located in the GMA Network Center.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['foundingDate', 'location']
Object: ['2000-01-01', 'GMA Network Center']

Triple: [['__subject__ GMA New Media __predicate__ foundingDate __object__ 2000-01-01', '__subject__ GMA New Media __predicate__ location __object__ GMA Network Center']]
Text: GMA New Media, which was founded on 01-01-2000, has its headquarters in the GMA Network Center.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['foundingDate', 'location']
Object: ['2000-01-01', 'GMA Network Center']

Triple: [['__subject__ GMA New Media __predicate__ foundingDate __object__ 2000-01-01', '__subject__ GMA New Media __predicate__ location __object__ GMA Network Center']]
Text: GMA New Media, which was founded on January 1, 2000, is located inside GMA Network Center.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['foundingDate', 'location']
Object: ['2000-01-01', 'GMA Network Center']

Triple: [['__subject__ GMA New Media __predicate__ foundingDate __object__ 2000-01-01', '__subject__ GMA New Media __predicate__ type __object__ Media company']]
Text: GMA New Media is a media company that was founded on 01-01-2000.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['foundingDate', 'type']
Object: ['2000-01-01', 'Media company']

Triple: [['__subject__ GMA New Media __predicate__ foundingDate __object__ 2000-01-01', '__subject__ GMA New Media __predicate__ type __object__ Media company']]
Text: GMA New Media, Inc., which was founded on January 1, 2000, is a media company.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['foundingDate', 'type']
Object: ['2000-01-01', 'Media company']

Triple: [['__subject__ GMA New Media __predicate__ foundingDate __object__ 2000-01-01', '__subject__ GMA New Media __predicate__ type __object__ Media company']]
Text: GMA New Media is a media company which was founded on 01/01/2000.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['foundingDate', 'type']
Object: ['2000-01-01', 'Media company']

Triple: [['__subject__ GMA New Media __predicate__ industry __object__ Entertainment', '__subject__ GMA New Media __predicate__ product __object__ World Wide Web']]
Text: GMA New Media not only offers applications in the entertainment industry, but also produces web services.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['industry', 'product']
Object: ['Entertainment', 'World Wide Web']

Triple: [['__subject__ GMA New Media __predicate__ industry __object__ Entertainment', '__subject__ GMA New Media __predicate__ product __object__ World Wide Web']]
Text: GMA New Media is an entertainment company that makes web sites.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['industry', 'product']
Object: ['Entertainment', 'World Wide Web']

Triple: [['__subject__ GMA New Media __predicate__ industry __object__ Entertainment', '__subject__ GMA New Media __predicate__ product __object__ World Wide Web']]
Text: GMA New Media is an entertainment industry that offers services concerning the World Wide Web.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['industry', 'product']
Object: ['Entertainment', 'World Wide Web']

Triple: [['__subject__ GMA New Media __predicate__ industry __object__ Entertainment', '__subject__ GMA New Media __predicate__ type __object__ Media company']]
Text: GMA New Media, Inc. is a media company that offers applications in the entertainment industry.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['industry', 'type']
Object: ['Entertainment', 'Media company']

Triple: [['__subject__ GMA New Media __predicate__ industry __object__ Entertainment', '__subject__ GMA New Media __predicate__ type __object__ Media company']]
Text: GMA New Media, a media company, is also an entertainment industry.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['industry', 'type']
Object: ['Entertainment', 'Media company']

Triple: [['__subject__ GMA New Media __predicate__ industry __object__ Entertainment', '__subject__ GMA New Media __predicate__ type __object__ Media company']]
Text: GMA New Media, Inc. is a media company in the entertainment industry.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['industry', 'type']
Object: ['Entertainment', 'Media company']

Triple: [['__subject__ GMA New Media __predicate__ keyPerson __object__ Felipe Gozon', '__subject__ GMA New Media __predicate__ industry __object__ Entertainment']]
Text: The key person on GMA New Media, an entertainment industry company, is Felipe Gozon.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['keyPerson', 'industry']
Object: ['Felipe Gozon', 'Entertainment']

Triple: [['__subject__ GMA New Media __predicate__ keyPerson __object__ Felipe Gozon', '__subject__ GMA New Media __predicate__ industry __object__ Entertainment']]
Text: GMA New Media is an entertainment industry with Felipe Gozon as a key person.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['keyPerson', 'industry']
Object: ['Felipe Gozon', 'Entertainment']

Triple: [['__subject__ GMA New Media __predicate__ keyPerson __object__ Felipe Gozon', '__subject__ GMA New Media __predicate__ industry __object__ Entertainment']]
Text: Felipe Gozon, is a key person of GMA New Media, which offers applications in the entertainment industry.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['keyPerson', 'industry']
Object: ['Felipe Gozon', 'Entertainment']

Triple: [['__subject__ GMA New Media __predicate__ keyPerson __object__ Felipe Gozon', '__subject__ GMA New Media __predicate__ type __object__ Media company']]
Text: Felipe Gozon is the key person for the media company, GMA New Media.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['keyPerson', 'type']
Object: ['Felipe Gozon', 'Media company']

Triple: [['__subject__ GMA New Media __predicate__ keyPerson __object__ Felipe Gozon', '__subject__ GMA New Media __predicate__ type __object__ Media company']]
Text: GMA New Media is a media company where Felipe Gozon is a key person.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['keyPerson', 'type']
Object: ['Felipe Gozon', 'Media company']

Triple: [['__subject__ GMA New Media __predicate__ keyPerson __object__ Felipe Gozon', '__subject__ GMA New Media __predicate__ type __object__ Media company']]
Text: GMA New Media, Inc. is a media company where Felipe Gozon is the key person.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['keyPerson', 'type']
Object: ['Felipe Gozon', 'Media company']

Triple: [['__subject__ GMA New Media __predicate__ location __object__ Philippines', '__subject__ GMA New Media __predicate__ location __object__ Quezon City']]
Text: GMA New Media is located in Quezon city of the Philippines.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['location', 'location']
Object: ['Philippines', 'Quezon City']

Triple: [['__subject__ GMA New Media __predicate__ location __object__ Philippines', '__subject__ GMA New Media __predicate__ location __object__ Quezon City']]
Text: GMA New Media is located in the Philippines, with its headquarters in Quezon City.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['location', 'location']
Object: ['Philippines', 'Quezon City']

Triple: [['__subject__ GMA New Media __predicate__ location __object__ Philippines', '__subject__ GMA New Media __predicate__ location __object__ Quezon City']]
Text: GMA New Media is located in Quezon City, Philippines.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['location', 'location']
Object: ['Philippines', 'Quezon City']

Triple: [['__subject__ GMA New Media __predicate__ location __object__ Philippines', '__subject__ GMA New Media __predicate__ product __object__ World Wide Web']]
Text: GMA New Media, which is located in the Philippines, produces web services.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['location', 'product']
Object: ['Philippines', 'World Wide Web']

Triple: [['__subject__ GMA New Media __predicate__ location __object__ Philippines', '__subject__ GMA New Media __predicate__ product __object__ World Wide Web']]
Text: The Philippines houses GMA New Media, a company which offers services involving the World Wide Web.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['location', 'product']
Object: ['Philippines', 'World Wide Web']

Triple: [['__subject__ GMA New Media __predicate__ location __object__ Philippines', '__subject__ GMA New Media __predicate__ product __object__ World Wide Web']]
Text: GMA New Media, located in the Philippines, makes web sites.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['location', 'product']
Object: ['Philippines', 'World Wide Web']

Triple: [['__subject__ GMA New Media __predicate__ location __object__ Philippines', '__subject__ GMA New Media __predicate__ type __object__ Media company']]
Text: GMA New Media is a media company located in the Philippines.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['location', 'type']
Object: ['Philippines', 'Media company']

Triple: [['__subject__ GMA New Media __predicate__ location __object__ Philippines', '__subject__ GMA New Media __predicate__ type __object__ Media company']]
Text: GMA New Media, Inc. which is located in the Philippines, is a media company.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['location', 'type']
Object: ['Philippines', 'Media company']

Triple: [['__subject__ GMA New Media __predicate__ location __object__ Philippines', '__subject__ GMA New Media __predicate__ type __object__ Media company']]
Text: GMA New Media, Inc. is a media company located in the Philippines.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['location', 'type']
Object: ['Philippines', 'Media company']

Triple: [['__subject__ GMA New Media __predicate__ location __object__ Philippines', '__subject__ Philippines __predicate__ leaderTitle __object__ President']]
Text: GMA New Media is located in the Philippines, where the President is the title of the leader.
Subject: ['GMA New Media', 'Philippines']
Predicate: ['location', 'leaderTitle']
Object: ['Philippines', 'President']

Triple: [['__subject__ GMA New Media __predicate__ location __object__ Philippines', '__subject__ Philippines __predicate__ leaderTitle __object__ President']]
Text: GMA New Media is located in the Philippines, which is led by the President.
Subject: ['GMA New Media', 'Philippines']
Predicate: ['location', 'leaderTitle']
Object: ['Philippines', 'President']

Triple: [['__subject__ GMA New Media __predicate__ location __object__ Philippines', '__subject__ Philippines __predicate__ leaderTitle __object__ President']]
Text: GMA New Media is located in the Philippines where the title of the leader is president.
Subject: ['GMA New Media', 'Philippines']
Predicate: ['location', 'leaderTitle']
Object: ['Philippines', 'President']

Triple: [['__subject__ GMA New Media __predicate__ location __object__ Quezon City', '__subject__ Quezon City __predicate__ areaTotal __object__ 165.33']]
Text: GMA New Media is located in Quezon City, which has a total area of 165.33.
Subject: ['GMA New Media', 'Quezon City']
Predicate: ['location', 'areaTotal']
Object: ['Quezon City', '165.33']

Triple: [['__subject__ GMA New Media __predicate__ location __object__ Quezon City', '__subject__ Quezon City __predicate__ areaTotal __object__ 165.33']]
Text: Quezon City has a total area of 165.33. GMA New Media headquarters are located in Quezon City.
Subject: ['GMA New Media', 'Quezon City']
Predicate: ['location', 'areaTotal']
Object: ['Quezon City', '165.33']

Triple: [['__subject__ GMA New Media __predicate__ location __object__ Quezon City', '__subject__ Quezon City __predicate__ areaTotal __object__ 165.33']]
Text: GMA New Media is located in the city of Quezon, which has a total area of 165.33.
Subject: ['GMA New Media', 'Quezon City']
Predicate: ['location', 'areaTotal']
Object: ['Quezon City', '165.33']

Triple: [['__subject__ GMA New Media __predicate__ parentCompany __object__ GMA Network (company)', '__subject__ GMA Network (company) __predicate__ keyPerson __object__ Felipe Gozon']]
Text: GMA Network, the parent company of GMA New Media, is headed by Felipe Gozon.
Subject: ['GMA New Media', 'GMA Network (company)']
Predicate: ['parentCompany', 'keyPerson']
Object: ['GMA Network (company)', 'Felipe Gozon']

Triple: [['__subject__ GMA New Media __predicate__ parentCompany __object__ GMA Network (company)', '__subject__ GMA Network (company) __predicate__ keyPerson __object__ Felipe Gozon']]
Text: Felipe Gozon is a key person within the GMA Network company, the parent company to GMA New Media.
Subject: ['GMA New Media', 'GMA Network (company)']
Predicate: ['parentCompany', 'keyPerson']
Object: ['GMA Network (company)', 'Felipe Gozon']

Triple: [['__subject__ GMA New Media __predicate__ parentCompany __object__ GMA Network (company)', '__subject__ GMA Network (company) __predicate__ keyPerson __object__ Felipe Gozon']]
Text: With GMA New Media, Inc as a subsidiary, GMA Network features Felipe Gozon as a key person.
Subject: ['GMA New Media', 'GMA Network (company)']
Predicate: ['parentCompany', 'keyPerson']
Object: ['GMA Network (company)', 'Felipe Gozon']

Triple: [['__subject__ GMA New Media __predicate__ product __object__ Mobile Applications', '__subject__ GMA New Media __predicate__ product __object__ World Wide Web']]
Text: GMA New Media is a company that offers products such as mobile applications, but they also make web sites.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['product', 'product']
Object: ['Mobile Applications', 'World Wide Web']

Triple: [['__subject__ GMA New Media __predicate__ product __object__ Mobile Applications', '__subject__ GMA New Media __predicate__ product __object__ World Wide Web']]
Text: GMA New Media produces both webservices and mobile apps.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['product', 'product']
Object: ['Mobile Applications', 'World Wide Web']

Triple: [['__subject__ GMA New Media __predicate__ product __object__ Mobile Applications', '__subject__ GMA New Media __predicate__ product __object__ World Wide Web']]
Text: GMA New Media makes mobile applications, more broadly offering services concerning the World Wide Web.
Subject: ['GMA New Media', 'GMA New Media']
Predicate: ['product', 'product']
Object: ['Mobile Applications', 'World Wide Web']

Triple: [['__subject__ Hypermarcas __predicate__ industry __object__ Pharmaceuticals', '__subject__ Hypermarcas __predicate__ foundingDate __object__ 2001-01-01']]
Text: Founded on 2001-01-01, Hypermarcas is in the pharmaceutical industry.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['industry', 'foundingDate']
Object: ['Pharmaceuticals', '2001-01-01']

Triple: [['__subject__ Hypermarcas __predicate__ industry __object__ Pharmaceuticals', '__subject__ Hypermarcas __predicate__ foundingDate __object__ 2001-01-01']]
Text: Hypermarcas is a pharmaceutical company that was founded on January 1, 2001.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['industry', 'foundingDate']
Object: ['Pharmaceuticals', '2001-01-01']

Triple: [['__subject__ Hypermarcas __predicate__ industry __object__ Pharmaceuticals', '__subject__ Hypermarcas __predicate__ foundingDate __object__ 2001-01-01']]
Text: Hypermarcas, which was founded on January 1, 2001, is in the pharmaceuticals industry.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['industry', 'foundingDate']
Object: ['Pharmaceuticals', '2001-01-01']

Triple: [['__subject__ Hypermarcas __predicate__ industry __object__ Pharmaceuticals', '__subject__ Hypermarcas __predicate__ keyPerson __object__ CEO']]
Text: Managed by their CEO, Hypermarcas is in the pharmaceuticals industry.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['industry', 'keyPerson']
Object: ['Pharmaceuticals', 'CEO']

Triple: [['__subject__ Hypermarcas __predicate__ industry __object__ Pharmaceuticals', '__subject__ Hypermarcas __predicate__ keyPerson __object__ CEO']]
Text: With their CEO as a key person, Hypermarcas is in the pharmaceutical industry.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['industry', 'keyPerson']
Object: ['Pharmaceuticals', 'CEO']

Triple: [['__subject__ Hypermarcas __predicate__ industry __object__ Pharmaceuticals', '__subject__ Hypermarcas __predicate__ keyPerson __object__ CEO']]
Text: The CEO is the key person in Hypermarcas, which is a pharmaceutical company.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['industry', 'keyPerson']
Object: ['Pharmaceuticals', 'CEO']

Triple: [['__subject__ Hypermarcas __predicate__ keyPerson __object__ CEO', '__subject__ Hypermarcas __predicate__ foundingDate __object__ 2001-01-01']]
Text: Hypermarcas was founded on January 1st, 2001. The key persona in Hypermarcas is their CEO.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['keyPerson', 'foundingDate']
Object: ['CEO', '2001-01-01']

Triple: [['__subject__ Hypermarcas __predicate__ keyPerson __object__ CEO', '__subject__ Hypermarcas __predicate__ foundingDate __object__ 2001-01-01']]
Text: The CEO is the key person in Hypermarcas, which was founded on January 1, 2001.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['keyPerson', 'foundingDate']
Object: ['CEO', '2001-01-01']

Triple: [['__subject__ Hypermarcas __predicate__ keyPerson __object__ CEO', '__subject__ Hypermarcas __predicate__ foundingDate __object__ 2001-01-01']]
Text: Hypermarcas was founded on January 1, 2001 under the management of the CEO.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['keyPerson', 'foundingDate']
Object: ['CEO', '2001-01-01']

Triple: [['__subject__ Hypermarcas __predicate__ keyPerson __object__ CEO', '__subject__ Hypermarcas __predicate__ numberOfEmployees __object__ 10252']]
Text: Hypermarcas has 10252 employees, but the key employee is the CEO.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['keyPerson', 'numberOfEmployees']
Object: ['CEO', '10252']

Triple: [['__subject__ Hypermarcas __predicate__ keyPerson __object__ CEO', '__subject__ Hypermarcas __predicate__ numberOfEmployees __object__ 10252']]
Text: While the key person at Hypermarcas is the CEO, they also employ 10252 people as well.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['keyPerson', 'numberOfEmployees']
Object: ['CEO', '10252']

Triple: [['__subject__ Hypermarcas __predicate__ keyPerson __object__ CEO', '__subject__ Hypermarcas __predicate__ numberOfEmployees __object__ 10252']]
Text: Hypermarcas is managed by their CEO and has 10252.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['keyPerson', 'numberOfEmployees']
Object: ['CEO', '10252']

Triple: [['__subject__ Hypermarcas __predicate__ location __object__ Brazil', '__subject__ Brazil __predicate__ leaderTitle __object__ Vice President']]
Text: Hypermarcas is located in Brazil, a country led by the Vice President.
Subject: ['Hypermarcas', 'Brazil']
Predicate: ['location', 'leaderTitle']
Object: ['Brazil', 'Vice President']

Triple: [['__subject__ Hypermarcas __predicate__ location __object__ Brazil', '__subject__ Brazil __predicate__ leaderTitle __object__ Vice President']]
Text: Hypermarcas is located in Brazil, where Vice President is the name of a leader title.
Subject: ['Hypermarcas', 'Brazil']
Predicate: ['location', 'leaderTitle']
Object: ['Brazil', 'Vice President']

Triple: [['__subject__ Hypermarcas __predicate__ location __object__ Brazil', '__subject__ Brazil __predicate__ leaderTitle __object__ Vice President']]
Text: Hypermarcas is located in Brazil, a country with Vice President as a leadership title.
Subject: ['Hypermarcas', 'Brazil']
Predicate: ['location', 'leaderTitle']
Object: ['Brazil', 'Vice President']

Triple: [['__subject__ Hypermarcas __predicate__ location __object__ Brazil', '__subject__ Hypermarcas __predicate__ foundingDate __object__ 2001-01-01']]
Text: Founded on 2001-01-01, Hypermarcas is located in Brazil.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['location', 'foundingDate']
Object: ['Brazil', '2001-01-01']

Triple: [['__subject__ Hypermarcas __predicate__ location __object__ Brazil', '__subject__ Hypermarcas __predicate__ foundingDate __object__ 2001-01-01']]
Text: Hypermarcas, which is located in Brazil, was founded on January 1, 2001.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['location', 'foundingDate']
Object: ['Brazil', '2001-01-01']

Triple: [['__subject__ Hypermarcas __predicate__ location __object__ Brazil', '__subject__ Hypermarcas __predicate__ foundingDate __object__ 2001-01-01']]
Text: Hypermarcas, which is a company founded on January 1, 2001, is located in Brazil.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['location', 'foundingDate']
Object: ['Brazil', '2001-01-01']

Triple: [['__subject__ Hypermarcas __predicate__ location __object__ Brazil', '__subject__ Hypermarcas __predicate__ keyPerson __object__ CEO']]
Text: Hypermarcas, which is located in Brazil, calls its CEO its key person.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['location', 'keyPerson']
Object: ['Brazil', 'CEO']

Triple: [['__subject__ Hypermarcas __predicate__ location __object__ Brazil', '__subject__ Hypermarcas __predicate__ keyPerson __object__ CEO']]
Text: The key person of brazilian company, Hypermarcas, is their CEO.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['location', 'keyPerson']
Object: ['Brazil', 'CEO']

Triple: [['__subject__ Hypermarcas __predicate__ location __object__ Brazil', '__subject__ Hypermarcas __predicate__ keyPerson __object__ CEO']]
Text: Hypermarcas is located in Brazil and managed by their CEO.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['location', 'keyPerson']
Object: ['Brazil', 'CEO']

Triple: [['__subject__ Hypermarcas __predicate__ location __object__ Brazil', '__subject__ Hypermarcas __predicate__ location __object__ São Paulo']]
Text: Hypermarcas is located in São Paulo, Brazil.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['location', 'location']
Object: ['Brazil', 'São Paulo']

Triple: [['__subject__ Hypermarcas __predicate__ location __object__ Brazil', '__subject__ Hypermarcas __predicate__ location __object__ São Paulo']]
Text: Hypermarcas is located in Sao Paulo, Brazil.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['location', 'location']
Object: ['Brazil', 'São Paulo']

Triple: [['__subject__ Hypermarcas __predicate__ numberOfEmployees __object__ 10252', '__subject__ Hypermarcas __predicate__ product __object__ Healthcare']]
Text: Hypermarcas, which has 10252 employees, produces healthcare products.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['numberOfEmployees', 'product']
Object: ['10252', 'Healthcare']

Triple: [['__subject__ Hypermarcas __predicate__ numberOfEmployees __object__ 10252', '__subject__ Hypermarcas __predicate__ product __object__ Healthcare']]
Text: Hypermarcas, a company selling healthcare products, has 10252 employees.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['numberOfEmployees', 'product']
Object: ['10252', 'Healthcare']

Triple: [['__subject__ Hypermarcas __predicate__ numberOfEmployees __object__ 10252', '__subject__ Hypermarcas __predicate__ product __object__ Healthcare']]
Text: Hypermarcas employs 10,252 people for making healthcare products.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['numberOfEmployees', 'product']
Object: ['10252', 'Healthcare']

Triple: [['__subject__ Hypermarcas __predicate__ product __object__ Cosmetics', '__subject__ Hypermarcas __predicate__ revenue __object__ 1800000000']]
Text: Hypermarcas is a company which sells cosmetics; their revenue is $1,800,000,000.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['product', 'revenue']
Object: ['Cosmetics', '1800000000']

Triple: [['__subject__ Hypermarcas __predicate__ product __object__ Cosmetics', '__subject__ Hypermarcas __predicate__ revenue __object__ 1800000000']]
Text: Hypermarcas makes $1,800,000,000 a year, in part from its production of cosmetics products.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['product', 'revenue']
Object: ['Cosmetics', '1800000000']

Triple: [['__subject__ Hypermarcas __predicate__ product __object__ Cosmetics', '__subject__ Hypermarcas __predicate__ revenue __object__ 1800000000']]
Text: Hypermarcas earns 1800000000 annually by selling cosmetics.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['product', 'revenue']
Object: ['Cosmetics', '1800000000']

Triple: [['__subject__ Hypermarcas __predicate__ product __object__ Drugs', '__subject__ Hypermarcas __predicate__ foundingDate __object__ 2001-01-01']]
Text: Hypermarcas is the company founded on January 1, 2001, their main product is drugs.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['product', 'foundingDate']
Object: ['Drugs', '2001-01-01']

Triple: [['__subject__ Hypermarcas __predicate__ product __object__ Drugs', '__subject__ Hypermarcas __predicate__ foundingDate __object__ 2001-01-01']]
Text: Hypermarcas, founded on January 1, 2001, produces pharmaceutical drugs.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['product', 'foundingDate']
Object: ['Drugs', '2001-01-01']

Triple: [['__subject__ Hypermarcas __predicate__ product __object__ Drugs', '__subject__ Hypermarcas __predicate__ foundingDate __object__ 2001-01-01']]
Text: Hypermarcas, which was founded on 2001-01-01, makes drugs.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['product', 'foundingDate']
Object: ['Drugs', '2001-01-01']

Triple: [['__subject__ Hypermarcas __predicate__ product __object__ Drugs', '__subject__ Hypermarcas __predicate__ industry __object__ Pharmaceuticals']]
Text: Hypermarcas is a drug maker in the pharmaceutical industry.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['product', 'industry']
Object: ['Drugs', 'Pharmaceuticals']

Triple: [['__subject__ Hypermarcas __predicate__ product __object__ Drugs', '__subject__ Hypermarcas __predicate__ industry __object__ Pharmaceuticals']]
Text: Hypermarcas is in the pharmaceuticals industry. Their main product is drugs.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['product', 'industry']
Object: ['Drugs', 'Pharmaceuticals']

Triple: [['__subject__ Hypermarcas __predicate__ product __object__ Drugs', '__subject__ Hypermarcas __predicate__ industry __object__ Pharmaceuticals']]
Text: Hypermarcas is a pharmeceutical company which produces drugs.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['product', 'industry']
Object: ['Drugs', 'Pharmaceuticals']

Triple: [['__subject__ Hypermarcas __predicate__ product __object__ Drugs', '__subject__ Hypermarcas __predicate__ keyPerson __object__ CEO']]
Text: Hypermarcas, whose key person is their CEO, produces pharmaceutical drugs.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['product', 'keyPerson']
Object: ['Drugs', 'CEO']

Triple: [['__subject__ Hypermarcas __predicate__ product __object__ Drugs', '__subject__ Hypermarcas __predicate__ keyPerson __object__ CEO']]
Text: The CEO is the head of the drugmaker, Hypermarcas.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['product', 'keyPerson']
Object: ['Drugs', 'CEO']

Triple: [['__subject__ Hypermarcas __predicate__ product __object__ Drugs', '__subject__ Hypermarcas __predicate__ keyPerson __object__ CEO']]
Text: Hypermarcas is managed by their CEO and their main product is drugs.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['product', 'keyPerson']
Object: ['Drugs', 'CEO']

Triple: [['__subject__ Hypermarcas __predicate__ product __object__ Drugs', '__subject__ Hypermarcas __predicate__ product __object__ Healthcare']]
Text: Hypermarcas produces pharmaceutical drugs, more specifically healthcare products.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['product', 'product']
Object: ['Drugs', 'Healthcare']

Triple: [['__subject__ Hypermarcas __predicate__ product __object__ Drugs', '__subject__ Hypermarcas __predicate__ product __object__ Healthcare']]
Text: Hypermarcas sells healthcare products of which the main product is drugs.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['product', 'product']
Object: ['Drugs', 'Healthcare']

Triple: [['__subject__ Hypermarcas __predicate__ product __object__ Drugs', '__subject__ Hypermarcas __predicate__ product __object__ Healthcare']]
Text: Hypermarcas makes drugs, more specifically producing healthcare products.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['product', 'product']
Object: ['Drugs', 'Healthcare']

Triple: [['__subject__ Hypermarcas __predicate__ type __object__ S.A. (corporation)', '__subject__ Hypermarcas __predicate__ numberOfEmployees __object__ 10252']]
Text: Hypermarcas is a type of S.A. corporation that has 10252 employees.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['type', 'numberOfEmployees']
Object: ['S.A. (corporation)', '10252']

Triple: [['__subject__ Hypermarcas __predicate__ type __object__ S.A. (corporation)', '__subject__ Hypermarcas __predicate__ numberOfEmployees __object__ 10252']]
Text: Hypermarcas is an S.A. corporation which employs 10,252 people.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['type', 'numberOfEmployees']
Object: ['S.A. (corporation)', '10252']

Triple: [['__subject__ Hypermarcas __predicate__ type __object__ S.A. (corporation)', '__subject__ Hypermarcas __predicate__ numberOfEmployees __object__ 10252']]
Text: The S.A. (corporation) of Hypermarcas employs a total of 10252 people.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['type', 'numberOfEmployees']
Object: ['S.A. (corporation)', '10252']

Triple: [['__subject__ Hypermarcas __predicate__ type __object__ S.A. (corporation)', '__subject__ Hypermarcas __predicate__ product __object__ Healthcare']]
Text: A type of S.A. corporation, Hypermarcas, is in the business of producing healthcare products.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['type', 'product']
Object: ['S.A. (corporation)', 'Healthcare']

Triple: [['__subject__ Hypermarcas __predicate__ type __object__ S.A. (corporation)', '__subject__ Hypermarcas __predicate__ product __object__ Healthcare']]
Text: Hypermarcas is an S.A. corporation that makes healthcare products.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['type', 'product']
Object: ['S.A. (corporation)', 'Healthcare']

Triple: [['__subject__ Hypermarcas __predicate__ type __object__ S.A. (corporation)', '__subject__ Hypermarcas __predicate__ product __object__ Healthcare']]
Text: Hypermarcas is a S.A corporation that sells healthcare products.
Subject: ['Hypermarcas', 'Hypermarcas']
Predicate: ['type', 'product']
Object: ['S.A. (corporation)', 'Healthcare']

Triple: [['__subject__ Trane __predicate__ foundationPlace __object__ La Crosse, Wisconsin', '__subject__ La Crosse, Wisconsin __predicate__ areaTotal __object__ 58.38']]
Text: La Crosse, Wisconsin, where Trane was founded, has the total area of 58.38 square kilometers.
Subject: ['Trane', 'La Crosse, Wisconsin']
Predicate: ['foundationPlace', 'areaTotal']
Object: ['La Crosse, Wisconsin', '58.38']

Triple: [['__subject__ Trane __predicate__ foundationPlace __object__ La Crosse, Wisconsin', '__subject__ La Crosse, Wisconsin __predicate__ areaTotal __object__ 58.38']]
Text: Trane was founded in La Crosse, Wisconsin, an American city with a total area of 58.38.
Subject: ['Trane', 'La Crosse, Wisconsin']
Predicate: ['foundationPlace', 'areaTotal']
Object: ['La Crosse, Wisconsin', '58.38']

Triple: [['__subject__ Trane __predicate__ foundationPlace __object__ La Crosse, Wisconsin', '__subject__ La Crosse, Wisconsin __predicate__ areaTotal __object__ 58.38']]
Text: Trane is founded in La Crosse, Wisconsin, a place with total area of 58.38.
Subject: ['Trane', 'La Crosse, Wisconsin']
Predicate: ['foundationPlace', 'areaTotal']
Object: ['La Crosse, Wisconsin', '58.38']

Triple: [['__subject__ Trane __predicate__ foundationPlace __object__ La Crosse, Wisconsin', '__subject__ La Crosse, Wisconsin __predicate__ leaderTitle __object__ Mayor']]
Text: Trane was founded in La Crosse WI, which is led by a mayor.
Subject: ['Trane', 'La Crosse, Wisconsin']
Predicate: ['foundationPlace', 'leaderTitle']
Object: ['La Crosse, Wisconsin', 'Mayor']

Triple: [['__subject__ Trane __predicate__ foundationPlace __object__ La Crosse, Wisconsin', '__subject__ La Crosse, Wisconsin __predicate__ leaderTitle __object__ Mayor']]
Text: La Crosse, Wisconsin, led by a Mayor, is where Trane was founded.
Subject: ['Trane', 'La Crosse, Wisconsin']
Predicate: ['foundationPlace', 'leaderTitle']
Object: ['La Crosse, Wisconsin', 'Mayor']

Triple: [['__subject__ Trane __predicate__ foundationPlace __object__ La Crosse, Wisconsin', '__subject__ La Crosse, Wisconsin __predicate__ leaderTitle __object__ Mayor']]
Text: Trane was founded in La Crosse, Wisconsin, which is governed by a mayor.
Subject: ['Trane', 'La Crosse, Wisconsin']
Predicate: ['foundationPlace', 'leaderTitle']
Object: ['La Crosse, Wisconsin', 'Mayor']

Triple: [['__subject__ Trane __predicate__ foundationPlace __object__ La Crosse, Wisconsin', '__subject__ Trane __predicate__ product __object__ HVAC']]
Text: Trane is an HVAC manufacturer founded in La Crosse, Wisconsin.
Subject: ['Trane', 'Trane']
Predicate: ['foundationPlace', 'product']
Object: ['La Crosse, Wisconsin', 'HVAC']

Triple: [['__subject__ Trane __predicate__ foundationPlace __object__ La Crosse, Wisconsin', '__subject__ Trane __predicate__ product __object__ HVAC']]
Text: Trane is a company that produces HVAC that was founded in La Crosse, Wisconsin.
Subject: ['Trane', 'Trane']
Predicate: ['foundationPlace', 'product']
Object: ['La Crosse, Wisconsin', 'HVAC']

Triple: [['__subject__ Trane __predicate__ foundationPlace __object__ La Crosse, Wisconsin', '__subject__ Trane __predicate__ product __object__ HVAC']]
Text: Trane was founded in La Crosse, Wisconsin and they produce HVAC.
Subject: ['Trane', 'Trane']
Predicate: ['foundationPlace', 'product']
Object: ['La Crosse, Wisconsin', 'HVAC']

Triple: [['__subject__ Trane __predicate__ foundingDate __object__ 1913-01-01', '__subject__ Trane __predicate__ industry __object__ Building materials']]
Text: The material building industry Trane was founded on New Years Day in 1913.
Subject: ['Trane', 'Trane']
Predicate: ['foundingDate', 'industry']
Object: ['1913-01-01', 'Building materials']

Triple: [['__subject__ Trane __predicate__ foundingDate __object__ 1913-01-01', '__subject__ Trane __predicate__ industry __object__ Building materials']]
Text: Trane is a company specializing in building materials that was founded on 1913-01-01.
Subject: ['Trane', 'Trane']
Predicate: ['foundingDate', 'industry']
Object: ['1913-01-01', 'Building materials']

Triple: [['__subject__ Trane __predicate__ foundingDate __object__ 1913-01-01', '__subject__ Trane __predicate__ industry __object__ Building materials']]
Text: Founded on 01-01-1913, trane's industry is building materials.
Subject: ['Trane', 'Trane']
Predicate: ['foundingDate', 'industry']
Object: ['1913-01-01', 'Building materials']

Triple: [['__subject__ Trane __predicate__ foundingDate __object__ 1913-01-01', '__subject__ Trane __predicate__ location __object__ Ireland']]
Text: The founding date of Trane, Ireland is 1913-01-01.
Subject: ['Trane', 'Trane']
Predicate: ['foundingDate', 'location']
Object: ['1913-01-01', 'Ireland']

Triple: [['__subject__ Trane __predicate__ foundingDate __object__ 1913-01-01', '__subject__ Trane __predicate__ location __object__ Ireland']]
Text: Trane, which is a company in Ireland, was founded on 1913-01-01.
Subject: ['Trane', 'Trane']
Predicate: ['foundingDate', 'location']
Object: ['1913-01-01', 'Ireland']

Triple: [['__subject__ Trane __predicate__ foundingDate __object__ 1913-01-01', '__subject__ Trane __predicate__ location __object__ Ireland']]
Text: Trane, located in Ireland, was founded on 01-01-1913.
Subject: ['Trane', 'Trane']
Predicate: ['foundingDate', 'location']
Object: ['1913-01-01', 'Ireland']

Triple: [['__subject__ Trane __predicate__ location __object__ Ireland', '__subject__ Trane __predicate__ foundationPlace __object__ La Crosse, Wisconsin']]
Text: The company Trane was founded in La Crosse, Wisconsin, but is now located in Ireland.
Subject: ['Trane', 'Trane']
Predicate: ['location', 'foundationPlace']
Object: ['Ireland', 'La Crosse, Wisconsin']

Triple: [['__subject__ Trane __predicate__ location __object__ Ireland', '__subject__ Trane __predicate__ foundationPlace __object__ La Crosse, Wisconsin']]
Text: Trane was founded in La Crosse, Wisconsin, but is currently located in Ireland.
Subject: ['Trane', 'Trane']
Predicate: ['location', 'foundationPlace']
Object: ['Ireland', 'La Crosse, Wisconsin']

Triple: [['__subject__ Trane __predicate__ location __object__ Ireland', '__subject__ Trane __predicate__ foundationPlace __object__ La Crosse, Wisconsin']]
Text: Trane is located in Ireland, but was founded in La Crosse, Wisconsin.
Subject: ['Trane', 'Trane']
Predicate: ['location', 'foundationPlace']
Object: ['Ireland', 'La Crosse, Wisconsin']

Triple: [['__subject__ Trane __predicate__ location __object__ Ireland', '__subject__ Trane __predicate__ product __object__ HVAC']]
Text: Trane, which manufactures HVAC, is located in Ireland.
Subject: ['Trane', 'Trane']
Predicate: ['location', 'product']
Object: ['Ireland', 'HVAC']

Triple: [['__subject__ Trane __predicate__ location __object__ Ireland', '__subject__ Trane __predicate__ product __object__ HVAC']]
Text: Trane is a company that produces HVAC in Ireland.
Subject: ['Trane', 'Trane']
Predicate: ['location', 'product']
Object: ['Ireland', 'HVAC']

Triple: [['__subject__ Trane __predicate__ location __object__ Ireland', '__subject__ Trane __predicate__ product __object__ HVAC']]
Text: Trane, which produces HVAC in its line of products, is a company located in Ireland.
Subject: ['Trane', 'Trane']
Predicate: ['location', 'product']
Object: ['Ireland', 'HVAC']

Triple: [['__subject__ Trane __predicate__ location __object__ Swords, Dublin', '__subject__ Trane __predicate__ type __object__ Subsidiary']]
Text: Trane is a subsidiary that is located in Swords, Dublin.
Subject: ['Trane', 'Trane']
Predicate: ['location', 'type']
Object: ['Swords, Dublin', 'Subsidiary']

Triple: [['__subject__ Trane __predicate__ location __object__ Swords, Dublin', '__subject__ Trane __predicate__ type __object__ Subsidiary']]
Text: Trane is a subsidiary located in Swords, Dublin.
Subject: ['Trane', 'Trane']
Predicate: ['location', 'type']
Object: ['Swords, Dublin', 'Subsidiary']

Triple: [['__subject__ Trane __predicate__ location __object__ Swords, Dublin', '__subject__ Trane __predicate__ type __object__ Subsidiary']]
Text: Trane is a subsidiary company that is located in Swords, Dublin.
Subject: ['Trane', 'Trane']
Predicate: ['location', 'type']
Object: ['Swords, Dublin', 'Subsidiary']

Triple: [['__subject__ Trane __predicate__ numberOfEmployees __object__ 29000', '__subject__ Trane __predicate__ product __object__ HVAC']]
Text: Trane produces HVAC, employing 29,000 people.
Subject: ['Trane', 'Trane']
Predicate: ['numberOfEmployees', 'product']
Object: ['29000', 'HVAC']

Triple: [['__subject__ Trane __predicate__ numberOfEmployees __object__ 29000', '__subject__ Trane __predicate__ product __object__ HVAC']]
Text: There are 29,000 employees at HVAC producer Trane.
Subject: ['Trane', 'Trane']
Predicate: ['numberOfEmployees', 'product']
Object: ['29000', 'HVAC']

Triple: [['__subject__ Trane __predicate__ numberOfEmployees __object__ 29000', '__subject__ Trane __predicate__ product __object__ HVAC']]
Text: Trane employ 29000 people that produce products such as HVAC.
Subject: ['Trane', 'Trane']
Predicate: ['numberOfEmployees', 'product']
Object: ['29000', 'HVAC']

Triple: [['__subject__ Trane __predicate__ product __object__ Building Management System', '__subject__ Trane __predicate__ location __object__ Swords, Dublin']]
Text: In Swords, Dublin, the company Trane produces systems for building management.
Subject: ['Trane', 'Trane']
Predicate: ['product', 'location']
Object: ['Building Management System', 'Swords, Dublin']

Triple: [['__subject__ Trane __predicate__ product __object__ Building Management System', '__subject__ Trane __predicate__ location __object__ Swords, Dublin']]
Text: Trane is located in Swords, Dublin and they manufacture building management systems.
Subject: ['Trane', 'Trane']
Predicate: ['product', 'location']
Object: ['Building Management System', 'Swords, Dublin']

Triple: [['__subject__ Trane __predicate__ product __object__ Building Management System', '__subject__ Trane __predicate__ location __object__ Swords, Dublin']]
Text: Trane is a company located in Swords, Dublin that makes building management systems.
Subject: ['Trane', 'Trane']
Predicate: ['product', 'location']
Object: ['Building Management System', 'Swords, Dublin']

Triple: [['__subject__ Trane __predicate__ product __object__ Building Management System', '__subject__ Trane __predicate__ product __object__ HVAC']]
Text: Trane produces HVAC and building management systems.
Subject: ['Trane', 'Trane']
Predicate: ['product', 'product']
Object: ['Building Management System', 'HVAC']

Triple: [['__subject__ Trane __predicate__ product __object__ Building Management System', '__subject__ Trane __predicate__ product __object__ HVAC']]
Text: Trane is a producer of building management systems including HVAC products.
Subject: ['Trane', 'Trane']
Predicate: ['product', 'product']
Object: ['Building Management System', 'HVAC']

Triple: [['__subject__ Trane __predicate__ product __object__ Building Management System', '__subject__ Trane __predicate__ product __object__ HVAC']]
Text: Trane produces building management systems and HVAC.
Subject: ['Trane', 'Trane']
Predicate: ['product', 'product']
Object: ['Building Management System', 'HVAC']

Triple: [['__subject__ Trane __predicate__ product __object__ Building Management System', '__subject__ Trane __predicate__ revenue __object__ 10264000000']]
Text: Trane, which produces building management systems, has a revenue of $10,264,000,000.
Subject: ['Trane', 'Trane']
Predicate: ['product', 'revenue']
Object: ['Building Management System', '10264000000']

Triple: [['__subject__ Trane __predicate__ product __object__ Building Management System', '__subject__ Trane __predicate__ revenue __object__ 10264000000']]
Text: Trane makes building management systems, their revenue is 10264000000.
Subject: ['Trane', 'Trane']
Predicate: ['product', 'revenue']
Object: ['Building Management System', '10264000000']

Triple: [['__subject__ Trane __predicate__ product __object__ Building Management System', '__subject__ Trane __predicate__ revenue __object__ 10264000000']]
Text: Trane manufactures building management systems, with a revenue of $10,264,000,000.
Subject: ['Trane', 'Trane']
Predicate: ['product', 'revenue']
Object: ['Building Management System', '10264000000']

Triple: [['__subject__ Trane __predicate__ product __object__ Building Management System', '__subject__ Trane __predicate__ type __object__ Subsidiary']]
Text: Trane is a subsidiary company that makes building management systems.
Subject: ['Trane', 'Trane']
Predicate: ['product', 'type']
Object: ['Building Management System', 'Subsidiary']

Triple: [['__subject__ Trane __predicate__ product __object__ Building Management System', '__subject__ Trane __predicate__ type __object__ Subsidiary']]
Text: The Trane company is a subsidiary that manufactures building management systems.
Subject: ['Trane', 'Trane']
Predicate: ['product', 'type']
Object: ['Building Management System', 'Subsidiary']

Triple: [['__subject__ Trane __predicate__ product __object__ Building Management System', '__subject__ Trane __predicate__ type __object__ Subsidiary']]
Text: Trane is a subsidiary that produces building management systems.
Subject: ['Trane', 'Trane']
Predicate: ['product', 'type']
Object: ['Building Management System', 'Subsidiary']

Triple: [['__subject__ Trane __predicate__ product __object__ HVAC', '__subject__ Trane __predicate__ industry __object__ Building materials']]
Text: Trane, a building materials supplier, produces HVAC.
Subject: ['Trane', 'Trane']
Predicate: ['product', 'industry']
Object: ['HVAC', 'Building materials']

Triple: [['__subject__ Trane __predicate__ product __object__ HVAC', '__subject__ Trane __predicate__ industry __object__ Building materials']]
Text: The Trane industry is building materials, and they manufacture HVAC.
Subject: ['Trane', 'Trane']
Predicate: ['product', 'industry']
Object: ['HVAC', 'Building materials']

Triple: [['__subject__ Trane __predicate__ product __object__ HVAC', '__subject__ Trane __predicate__ industry __object__ Building materials']]
Text: Trane is in the building materials industry and one of their products is HVAC.
Subject: ['Trane', 'Trane']
Predicate: ['product', 'industry']
Object: ['HVAC', 'Building materials']

Triple: [['__subject__ Trane __predicate__ revenue __object__ 10264000000', '__subject__ Trane __predicate__ location __object__ Swords, Dublin']]
Text: With a revenue of $10,264,000,000, Trane is located in Swords, Dublin.
Subject: ['Trane', 'Trane']
Predicate: ['revenue', 'location']
Object: ['10264000000', 'Swords, Dublin']

Triple: [['__subject__ Trane __predicate__ revenue __object__ 10264000000', '__subject__ Trane __predicate__ location __object__ Swords, Dublin']]
Text: The location of Trane is Swords, Dublin and has a revenue of 10264000000.
Subject: ['Trane', 'Trane']
Predicate: ['revenue', 'location']
Object: ['10264000000', 'Swords, Dublin']

Triple: [['__subject__ Trane __predicate__ revenue __object__ 10264000000', '__subject__ Trane __predicate__ location __object__ Swords, Dublin']]
Text: Trane, which is located in Swords, Dublin, has a revenue of $10,264,000,000.
Subject: ['Trane', 'Trane']
Predicate: ['revenue', 'location']
Object: ['10264000000', 'Swords, Dublin']

Triple: [['__subject__ Ajoblanco __predicate__ country __object__ Spain', '__subject__ Ajoblanco __predicate__ ingredient __object__ Garlic']]
Text: Garlic is an ingredient used in Ajoblanco which originates from the country of Spain.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'Garlic']

Triple: [['__subject__ Ajoblanco __predicate__ country __object__ Spain', '__subject__ Ajoblanco __predicate__ ingredient __object__ Garlic']]
Text: Ajoblanco, containing the ingredient garlic, is from Spain.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'Garlic']

Triple: [['__subject__ Ajoblanco __predicate__ country __object__ Spain', '__subject__ Ajoblanco __predicate__ ingredient __object__ Garlic']]
Text: Garlic is an ingredient in the regional dish of Spain's Ajoblanco.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'Garlic']

Triple: [['__subject__ Ajoblanco __predicate__ country __object__ Spain', '__subject__ Ajoblanco __predicate__ ingredient __object__ Olive oil']]
Text: Ajoblanco is a dish from Spain that contains olive oil.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'Olive oil']

Triple: [['__subject__ Ajoblanco __predicate__ country __object__ Spain', '__subject__ Ajoblanco __predicate__ ingredient __object__ Olive oil']]
Text: Olive oil is an ingredient in Ajoblanco, a dish from Spain.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'Olive oil']

Triple: [['__subject__ Ajoblanco __predicate__ country __object__ Spain', '__subject__ Ajoblanco __predicate__ ingredient __object__ Olive oil']]
Text: Ajoblanco, which contains olive oil, originates from Spain.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'Olive oil']

Triple: [['__subject__ Ajoblanco __predicate__ country __object__ Spain', '__subject__ Ajoblanco __predicate__ ingredient __object__ Water']]
Text: Ajoblanco contains water and is from Spain.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'Water']

Triple: [['__subject__ Ajoblanco __predicate__ country __object__ Spain', '__subject__ Ajoblanco __predicate__ ingredient __object__ Water']]
Text: Ajoblanco has water as an ingredient and comes from Spain.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'Water']

Triple: [['__subject__ Ajoblanco __predicate__ country __object__ Spain', '__subject__ Ajoblanco __predicate__ ingredient __object__ Water']]
Text: The dish of ajoblanco contains water it originates in Spain.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'Water']

Triple: [['__subject__ Ajoblanco __predicate__ country __object__ Spain', '__subject__ Spain __predicate__ demonym __object__ Spaniards']]
Text: Ajoblanco originates from the country of Spain where the name for the people there are Spaniards.
Subject: ['Ajoblanco', 'Spain']
Predicate: ['country', 'demonym']
Object: ['Spain', 'Spaniards']

Triple: [['__subject__ Ajoblanco __predicate__ country __object__ Spain', '__subject__ Spain __predicate__ demonym __object__ Spaniards']]
Text: Ajoblanco is from spain as are Spaniards.
Subject: ['Ajoblanco', 'Spain']
Predicate: ['country', 'demonym']
Object: ['Spain', 'Spaniards']

Triple: [['__subject__ Ajoblanco __predicate__ country __object__ Spain', '__subject__ Spain __predicate__ demonym __object__ Spaniards']]
Text: Ajoblanco originates from the country of Spain, where Spaniards are from.
Subject: ['Ajoblanco', 'Spain']
Predicate: ['country', 'demonym']
Object: ['Spain', 'Spaniards']

Triple: [['__subject__ Ajoblanco __predicate__ country __object__ Spain', '__subject__ Spain __predicate__ ethnicGroup __object__ Spaniards']]
Text: Spaniards of Spain boasts the origins of the dish, ajoblanco.
Subject: ['Ajoblanco', 'Spain']
Predicate: ['country', 'ethnicGroup']
Object: ['Spain', 'Spaniards']

Triple: [['__subject__ Ajoblanco __predicate__ country __object__ Spain', '__subject__ Spain __predicate__ ethnicGroup __object__ Spaniards']]
Text: Ajoblanco is from Spain where Spaniards are an ethnic group.
Subject: ['Ajoblanco', 'Spain']
Predicate: ['country', 'ethnicGroup']
Object: ['Spain', 'Spaniards']

Triple: [['__subject__ Ajoblanco __predicate__ country __object__ Spain', '__subject__ Spain __predicate__ ethnicGroup __object__ Spaniards']]
Text: Ajoblanco originates from the country of Spain where Spaniards are an ethnic group.
Subject: ['Ajoblanco', 'Spain']
Predicate: ['country', 'ethnicGroup']
Object: ['Spain', 'Spaniards']

Triple: [['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond', '__subject__ Ajoblanco __predicate__ country __object__ Spain']]
Text: Almond is an ingredient of ajoblanco which is a dish from Spain.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['ingredient', 'country']
Object: ['Almond', 'Spain']

Triple: [['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond', '__subject__ Ajoblanco __predicate__ country __object__ Spain']]
Text: Ajoblanco, originating from the country of Spain, has almonds as one of its ingredients.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['ingredient', 'country']
Object: ['Almond', 'Spain']

Triple: [['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond', '__subject__ Ajoblanco __predicate__ country __object__ Spain']]
Text: Almond is an ingredient in the Spanish dish ajoblanco.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['ingredient', 'country']
Object: ['Almond', 'Spain']

Triple: [['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond', '__subject__ Almond __predicate__ division __object__ Flowering plant']]
Text: Almond (class:flowering plant), is an ingredient in ajoblanco.
Subject: ['Ajoblanco', 'Almond']
Predicate: ['ingredient', 'division']
Object: ['Almond', 'Flowering plant']

Triple: [['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond', '__subject__ Almond __predicate__ division __object__ Flowering plant']]
Text: A flowering plant includes the division of Almonds which are an ingredient in ajoblanco.
Subject: ['Ajoblanco', 'Almond']
Predicate: ['ingredient', 'division']
Object: ['Almond', 'Flowering plant']

Triple: [['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond', '__subject__ Almond __predicate__ division __object__ Flowering plant']]
Text: Almond is classed as a flowering plant and is an ingredient of Ajoblanco.
Subject: ['Ajoblanco', 'Almond']
Predicate: ['ingredient', 'division']
Object: ['Almond', 'Flowering plant']

Triple: [['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond', '__subject__ Almond __predicate__ family __object__ Rosaceae']]
Text: Almonds are from the Rosaceae family and are an ingredient in ajoblanco.
Subject: ['Ajoblanco', 'Almond']
Predicate: ['ingredient', 'family']
Object: ['Almond', 'Rosaceae']

Triple: [['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond', '__subject__ Almond __predicate__ family __object__ Rosaceae']]
Text: Ajoblanco has almond (part of the Rosaceae family) as one of its ingredients.
Subject: ['Ajoblanco', 'Almond']
Predicate: ['ingredient', 'family']
Object: ['Almond', 'Rosaceae']

Triple: [['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond', '__subject__ Almond __predicate__ family __object__ Rosaceae']]
Text: Ajoblanco, a member of the Rosaceae family, includes the ingredient, almond.
Subject: ['Ajoblanco', 'Almond']
Predicate: ['ingredient', 'family']
Object: ['Almond', 'Rosaceae']

Triple: [['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond', '__subject__ Almond __predicate__ order __object__ Rosales']]
Text: Ajoblanco has almond (of the Rosales order) as one of its ingredients.
Subject: ['Ajoblanco', 'Almond']
Predicate: ['ingredient', 'order']
Object: ['Almond', 'Rosales']

Triple: [['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond', '__subject__ Almond __predicate__ order __object__ Rosales']]
Text: Almonds are an ingredient of Ajoblanco and is a member of the Rosales order.
Subject: ['Ajoblanco', 'Almond']
Predicate: ['ingredient', 'order']
Object: ['Almond', 'Rosales']

Triple: [['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond', '__subject__ Almond __predicate__ order __object__ Rosales']]
Text: Almond is an ingredient found in ajoblanco, Almond is also a member of the Rosales order.
Subject: ['Ajoblanco', 'Almond']
Predicate: ['ingredient', 'order']
Object: ['Almond', 'Rosales']

Triple: [['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond', '__subject__ Almond __predicate__ order __object__ Rosids']]
Text: The order Rosids features almonds which are an ingredient in ajoblanco.
Subject: ['Ajoblanco', 'Almond']
Predicate: ['ingredient', 'order']
Object: ['Almond', 'Rosids']

Triple: [['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond', '__subject__ Almond __predicate__ order __object__ Rosids']]
Text: Almond is part of the order of Rosids and is an ingredient in ajoblanco.
Subject: ['Ajoblanco', 'Almond']
Predicate: ['ingredient', 'order']
Object: ['Almond', 'Rosids']

Triple: [['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond', '__subject__ Almond __predicate__ order __object__ Rosids']]
Text: The Rosids has Almond as part of the order and its also an ingredient of ajoblanco.
Subject: ['Ajoblanco', 'Almond']
Predicate: ['ingredient', 'order']
Object: ['Almond', 'Rosids']

Triple: [['__subject__ Ajoblanco __predicate__ region __object__ Andalusia', '__subject__ Ajoblanco __predicate__ ingredient __object__ Bread']]
Text: One of the ingredients used to make Ajoblanco is bread and it comes from Andalusia.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['region', 'ingredient']
Object: ['Andalusia', 'Bread']

Triple: [['__subject__ Ajoblanco __predicate__ region __object__ Andalusia', '__subject__ Ajoblanco __predicate__ ingredient __object__ Garlic']]
Text: Ajoblanco is a food from Andalusia and garlic is one of its ingredients.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['region', 'ingredient']
Object: ['Andalusia', 'Garlic']

Triple: [['__subject__ Ajoblanco __predicate__ region __object__ Andalusia', '__subject__ Ajoblanco __predicate__ ingredient __object__ Garlic']]
Text: An ingredient of Ajoblanco, which is from Andalusia, is garlic.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['region', 'ingredient']
Object: ['Andalusia', 'Garlic']

Triple: [['__subject__ Ajoblanco __predicate__ region __object__ Andalusia', '__subject__ Ajoblanco __predicate__ ingredient __object__ Garlic']]
Text: Garlic is an ingredient of Ajoblanco, a food found in Andalusia.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['region', 'ingredient']
Object: ['Andalusia', 'Garlic']

Triple: [['__subject__ Ajoblanco __predicate__ region __object__ Andalusia', '__subject__ Ajoblanco __predicate__ ingredient __object__ Olive oil']]
Text: Ajoblanco, which contains olive oil, is a food found in Andalusia.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['region', 'ingredient']
Object: ['Andalusia', 'Olive oil']

Triple: [['__subject__ Ajoblanco __predicate__ region __object__ Andalusia', '__subject__ Ajoblanco __predicate__ ingredient __object__ Olive oil']]
Text: Ajoblanco is from Andalusia and includes olive oil.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['region', 'ingredient']
Object: ['Andalusia', 'Olive oil']

Triple: [['__subject__ Ajoblanco __predicate__ region __object__ Andalusia', '__subject__ Ajoblanco __predicate__ ingredient __object__ Olive oil']]
Text: Olive oil is an ingredient in Ajoblanco which comes from the Andalusia region.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['region', 'ingredient']
Object: ['Andalusia', 'Olive oil']

Triple: [['__subject__ Ajoblanco __predicate__ region __object__ Andalusia', '__subject__ Ajoblanco __predicate__ ingredient __object__ Water']]
Text: Ajoblanco is a food found in Andalusia and it contains water.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['region', 'ingredient']
Object: ['Andalusia', 'Water']

Triple: [['__subject__ Ajoblanco __predicate__ region __object__ Andalusia', '__subject__ Ajoblanco __predicate__ ingredient __object__ Water']]
Text: Ajoblanco contains water and is from Andalusia.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['region', 'ingredient']
Object: ['Andalusia', 'Water']

Triple: [['__subject__ Ajoblanco __predicate__ region __object__ Andalusia', '__subject__ Ajoblanco __predicate__ ingredient __object__ Water']]
Text: Ajoblanco contains water and is from the Andalusia region.
Subject: ['Ajoblanco', 'Ajoblanco']
Predicate: ['region', 'ingredient']
Object: ['Andalusia', 'Water']

Triple: [['__subject__ Ajoblanco __predicate__ region __object__ Andalusia', '__subject__ Andalusia __predicate__ leader __object__ Susana Díaz']]
Text: Susana Diaz is the leader of Andalusia, where the dish Ajoblanco can be found.
Subject: ['Ajoblanco', 'Andalusia']
Predicate: ['region', 'leader']
Object: ['Andalusia', 'Susana Díaz']

Triple: [['__subject__ Ajoblanco __predicate__ region __object__ Andalusia', '__subject__ Andalusia __predicate__ leader __object__ Susana Díaz']]
Text: Ajoblanco is from the Andalusia region where Susana Diaz is the leader.
Subject: ['Ajoblanco', 'Andalusia']
Predicate: ['region', 'leader']
Object: ['Andalusia', 'Susana Díaz']

Triple: [['__subject__ Ajoblanco __predicate__ region __object__ Andalusia', '__subject__ Andalusia __predicate__ leader __object__ Susana Díaz']]
Text: Ajoblanco is from Andalusia, where Susana Diaz is the leader.
Subject: ['Ajoblanco', 'Andalusia']
Predicate: ['region', 'leader']
Object: ['Andalusia', 'Susana Díaz']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Guanciale']]
Text: Guanciale is an ingredient in the traditional Italian Amatriciana sauce.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['country', 'ingredient']
Object: ['Italy', 'Guanciale']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Guanciale']]
Text: Guanciale is an ingredient of Amatriciana sauce, from Italy.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['country', 'ingredient']
Object: ['Italy', 'Guanciale']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Guanciale']]
Text: Guanciale is an ingredient used in the preparation of Amatriciana sauce which can be found in Italy.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['country', 'ingredient']
Object: ['Italy', 'Guanciale']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Olive oil']]
Text: Amatriciana sauce contains olive oil and comes from Italy.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['country', 'ingredient']
Object: ['Italy', 'Olive oil']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Olive oil']]
Text: Amatriciana sauce, which includes the ingredient olive oil, can be found in Italy.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['country', 'ingredient']
Object: ['Italy', 'Olive oil']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Olive oil']]
Text: Olive oil is an ingredient in Amatriciana sauce which can be found in Italy.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['country', 'ingredient']
Object: ['Italy', 'Olive oil']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Pecorino Romano']]
Text: Pecorino Romano is an ingredient used in Amatriciana sauce, which comes from Italy.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['country', 'ingredient']
Object: ['Italy', 'Pecorino Romano']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Pecorino Romano']]
Text: Amatriciana sauce is a traditional Italian sauce made with Pecorino Romano.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['country', 'ingredient']
Object: ['Italy', 'Pecorino Romano']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Pecorino Romano']]
Text: Pecorino romano is an ingredient of Amatriciana sauce, which comes from Italy.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['country', 'ingredient']
Object: ['Italy', 'Pecorino Romano']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Italy __predicate__ language __object__ Italian language']]
Text: Italy is the country Amatriciana sauce comes from and is where the Italian language is spoken.
Subject: ['Amatriciana sauce', 'Italy']
Predicate: ['country', 'language']
Object: ['Italy', 'Italian language']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Italy __predicate__ language __object__ Italian language']]
Text: Italy where Italian is spoken is also where amatriciana sauce originated.
Subject: ['Amatriciana sauce', 'Italy']
Predicate: ['country', 'language']
Object: ['Italy', 'Italian language']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Italy __predicate__ language __object__ Italian language']]
Text: Italian is the language spoken in Italy where Amatriciana sauce is a traditional sauce.
Subject: ['Amatriciana sauce', 'Italy']
Predicate: ['country', 'language']
Object: ['Italy', 'Italian language']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Italy __predicate__ leader __object__ Laura Boldrini']]
Text: Amatriciana sauce can be found in Italy where the leader is Laura Boldrini.
Subject: ['Amatriciana sauce', 'Italy']
Predicate: ['country', 'leader']
Object: ['Italy', 'Laura Boldrini']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Italy __predicate__ leader __object__ Pietro Grasso']]
Text: The leader of Italy is Pietro Grasso where amatriciana sauce can be found.
Subject: ['Amatriciana sauce', 'Italy']
Predicate: ['country', 'leader']
Object: ['Italy', 'Pietro Grasso']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Italy __predicate__ leader __object__ Pietro Grasso']]
Text: Amatriciana sauce can be found in Italy where Pietro Grasso is the leader.
Subject: ['Amatriciana sauce', 'Italy']
Predicate: ['country', 'leader']
Object: ['Italy', 'Pietro Grasso']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Italy __predicate__ leader __object__ Pietro Grasso']]
Text: Pietro Grasso is the leader of Italy, which is where Amatriciana sauce comes from.
Subject: ['Amatriciana sauce', 'Italy']
Predicate: ['country', 'leader']
Object: ['Italy', 'Pietro Grasso']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Italy __predicate__ leader __object__ Sergio Mattarella']]
Text: Sergio Mattarella is a leader in Italy where Amatriciana sauce comes from.
Subject: ['Amatriciana sauce', 'Italy']
Predicate: ['country', 'leader']
Object: ['Italy', 'Sergio Mattarella']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Italy __predicate__ leader __object__ Sergio Mattarella']]
Text: Sergio Mattarella is the leader of Italy, which is also where Amatriciana sauce comes from.
Subject: ['Amatriciana sauce', 'Italy']
Predicate: ['country', 'leader']
Object: ['Italy', 'Sergio Mattarella']

Triple: [['__subject__ Amatriciana sauce __predicate__ country __object__ Italy', '__subject__ Italy __predicate__ leader __object__ Sergio Mattarella']]
Text: Sergio Mattarella is the leader of Italy where Amatriciana sauce is a traditional sauce.
Subject: ['Amatriciana sauce', 'Italy']
Predicate: ['country', 'leader']
Object: ['Italy', 'Sergio Mattarella']

Triple: [['__subject__ Amatriciana sauce __predicate__ dishVariation __object__ Onion, garlic, black pepper, chili', '__subject__ Amatriciana sauce __predicate__ dishVariation __object__ Garlic']]
Text: A variant of amatriciana sauce contains onion, garlic, black pepper and chilli.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['dishVariation', 'dishVariation']
Object: ['Onion, garlic, black pepper, chili', 'Garlic']

Triple: [['__subject__ Amatriciana sauce __predicate__ dishVariation __object__ Onion, garlic, black pepper, chili', '__subject__ Amatriciana sauce __predicate__ dishVariation __object__ Garlic']]
Text: One Amatriciana sauce variation is onion, garlic, black pepper and chili- sometimes garlic is added.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['dishVariation', 'dishVariation']
Object: ['Onion, garlic, black pepper, chili', 'Garlic']

Triple: [['__subject__ Amatriciana sauce __predicate__ dishVariation __object__ Onion, garlic, black pepper, chili', '__subject__ Amatriciana sauce __predicate__ dishVariation __object__ Garlic']]
Text: Variations of Amatriciana sauce includes onion, garlic, black pepper, and chili.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['dishVariation', 'dishVariation']
Object: ['Onion, garlic, black pepper, chili', 'Garlic']

Triple: [['__subject__ Amatriciana sauce __predicate__ dishVariation __object__ Onion, garlic, black pepper, chili', '__subject__ Amatriciana sauce __predicate__ dishVariation __object__ Onion']]
Text: One variation of Amatriciana sauce contains onion, garlic, black pepper, chili, another just uses the onion as an alternative.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['dishVariation', 'dishVariation']
Object: ['Onion, garlic, black pepper, chili', 'Onion']

Triple: [['__subject__ Amatriciana sauce __predicate__ dishVariation __object__ Onion, garlic, black pepper, chili', '__subject__ Amatriciana sauce __predicate__ dishVariation __object__ Onion']]
Text: Onion is one variation of ingredients in Amatriciana sauce which has several variations including garlic, black pepper and chili.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['dishVariation', 'dishVariation']
Object: ['Onion, garlic, black pepper, chili', 'Onion']

Triple: [['__subject__ Amatriciana sauce __predicate__ ingredient __object__ Tomato', '__subject__ Tomato __predicate__ order __object__ Solanales']]
Text: An ingredient of amatriciana sauce is tomato (a member of the Solanales order).
Subject: ['Amatriciana sauce', 'Tomato']
Predicate: ['ingredient', 'order']
Object: ['Tomato', 'Solanales']

Triple: [['__subject__ Amatriciana sauce __predicate__ ingredient __object__ Tomato', '__subject__ Tomato __predicate__ order __object__ Solanales']]
Text: Tomato is an ingredient of Amatriciana sauce and is a member of the order Solanales.
Subject: ['Amatriciana sauce', 'Tomato']
Predicate: ['ingredient', 'order']
Object: ['Tomato', 'Solanales']

Triple: [['__subject__ Amatriciana sauce __predicate__ ingredient __object__ Tomato', '__subject__ Tomato __predicate__ order __object__ Solanales']]
Text: Tomatoes, which are one of the members of the order Solanales, is an ingredient in Amatriciana sauce.
Subject: ['Amatriciana sauce', 'Tomato']
Predicate: ['ingredient', 'order']
Object: ['Tomato', 'Solanales']

Triple: [['__subject__ Amatriciana sauce __predicate__ region __object__ Lazio', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Guanciale']]
Text: Guanciale is an ingredient in Amatriciana sauce which is from Lazio.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['region', 'ingredient']
Object: ['Lazio', 'Guanciale']

Triple: [['__subject__ Amatriciana sauce __predicate__ region __object__ Lazio', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Guanciale']]
Text: Guanciale is an ingredient of Amatriciana sauce which comes from Lazio.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['region', 'ingredient']
Object: ['Lazio', 'Guanciale']

Triple: [['__subject__ Amatriciana sauce __predicate__ region __object__ Lazio', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Guanciale']]
Text: An ingredient of amatriciana sauce is guanciale, the sauce comes from the Lazio region.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['region', 'ingredient']
Object: ['Lazio', 'Guanciale']

Triple: [['__subject__ Amatriciana sauce __predicate__ region __object__ Lazio', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Olive oil']]
Text: Olive oil is used in the Lazio regions Amatriciana sauce.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['region', 'ingredient']
Object: ['Lazio', 'Olive oil']

Triple: [['__subject__ Amatriciana sauce __predicate__ region __object__ Lazio', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Olive oil']]
Text: Olive oil is an ingredient of Amatriciana sauce which comes from Lazio.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['region', 'ingredient']
Object: ['Lazio', 'Olive oil']

Triple: [['__subject__ Amatriciana sauce __predicate__ region __object__ Lazio', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Olive oil']]
Text: Amatriciana sauce, containing olive oil, comes from the region of Lazio.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['region', 'ingredient']
Object: ['Lazio', 'Olive oil']

Triple: [['__subject__ Amatriciana sauce __predicate__ region __object__ Lazio', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Pecorino Romano']]
Text: Pecorino Romano is an ingredient of Amatriciana sauce which comes from the Lazio region.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['region', 'ingredient']
Object: ['Lazio', 'Pecorino Romano']

Triple: [['__subject__ Amatriciana sauce __predicate__ region __object__ Lazio', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Pecorino Romano']]
Text: Amatriciana sauce is from the Lazio region and one of its ingredients is pecorino romano.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['region', 'ingredient']
Object: ['Lazio', 'Pecorino Romano']

Triple: [['__subject__ Amatriciana sauce __predicate__ region __object__ Lazio', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Pecorino Romano']]
Text: Lazio's regional Amatriciana sauce includes Pecorino Romano.
Subject: ['Amatriciana sauce', 'Amatriciana sauce']
Predicate: ['region', 'ingredient']
Object: ['Lazio', 'Pecorino Romano']

Triple: [['__subject__ Arem-arem __predicate__ country __object__ Indonesia', '__subject__ Arem-arem __predicate__ ingredient __object__ Banana leaf']]
Text: Banana leaf is an ingredient of arem arem which originates from Indonesia.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Banana leaf']

Triple: [['__subject__ Arem-arem __predicate__ country __object__ Indonesia', '__subject__ Arem-arem __predicate__ ingredient __object__ Banana leaf']]
Text: Arem arem contains banana leaf and originates from Indonesia.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Banana leaf']

Triple: [['__subject__ Arem-arem __predicate__ country __object__ Indonesia', '__subject__ Arem-arem __predicate__ ingredient __object__ Banana leaf']]
Text: Arem-arem is a food found in Indonesia and it contains banana leaf.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Banana leaf']

Triple: [['__subject__ Arem-arem __predicate__ country __object__ Indonesia', '__subject__ Indonesia __predicate__ currency __object__ Indonesian rupiah']]
Text: Arem arem originates from the country of Indonesia which has the currency of the Indonesian rupiah.
Subject: ['Arem-arem', 'Indonesia']
Predicate: ['country', 'currency']
Object: ['Indonesia', 'Indonesian rupiah']

Triple: [['__subject__ Arem-arem __predicate__ country __object__ Indonesia', '__subject__ Indonesia __predicate__ currency __object__ Indonesian rupiah']]
Text: Indonesia commonly serves Arem-arem and its currency is the Indonesian Rupiah.
Subject: ['Arem-arem', 'Indonesia']
Predicate: ['country', 'currency']
Object: ['Indonesia', 'Indonesian rupiah']

Triple: [['__subject__ Arem-arem __predicate__ country __object__ Indonesia', '__subject__ Indonesia __predicate__ currency __object__ Indonesian rupiah']]
Text: Arem-arem is a food found in Indonesia, the currency there is the rupiah.
Subject: ['Arem-arem', 'Indonesia']
Predicate: ['country', 'currency']
Object: ['Indonesia', 'Indonesian rupiah']

Triple: [['__subject__ Arem-arem __predicate__ country __object__ Indonesia', '__subject__ Indonesia __predicate__ language __object__ Indonesian language']]
Text: Arem arem originates from the country of Indonesia where the Indonesian language is spoken.
Subject: ['Arem-arem', 'Indonesia']
Predicate: ['country', 'language']
Object: ['Indonesia', 'Indonesian language']

Triple: [['__subject__ Arem-arem __predicate__ country __object__ Indonesia', '__subject__ Indonesia __predicate__ language __object__ Indonesian language']]
Text: The country of Indonesia, where Indonesian is spoken, commonly serves Arem-arem.
Subject: ['Arem-arem', 'Indonesia']
Predicate: ['country', 'language']
Object: ['Indonesia', 'Indonesian language']

Triple: [['__subject__ Arem-arem __predicate__ country __object__ Indonesia', '__subject__ Indonesia __predicate__ language __object__ Indonesian language']]
Text: Arem-arem is a food found in Indonesia, where the language spoken bears the name of the country.
Subject: ['Arem-arem', 'Indonesia']
Predicate: ['country', 'language']
Object: ['Indonesia', 'Indonesian language']

Triple: [['__subject__ Arem-arem __predicate__ country __object__ Indonesia', '__subject__ Indonesia __predicate__ leader __object__ Joko Widodo']]
Text: The leader of Indonesia is Joko Widodo which commonly serves arem arem.
Subject: ['Arem-arem', 'Indonesia']
Predicate: ['country', 'leader']
Object: ['Indonesia', 'Joko Widodo']

Triple: [['__subject__ Arem-arem __predicate__ country __object__ Indonesia', '__subject__ Indonesia __predicate__ leader __object__ Joko Widodo']]
Text: Arem-arem is a dish from Indonesia and its leader is Joko Widodo.
Subject: ['Arem-arem', 'Indonesia']
Predicate: ['country', 'leader']
Object: ['Indonesia', 'Joko Widodo']

Triple: [['__subject__ Arem-arem __predicate__ ingredient __object__ Banana leaf', '__subject__ Arem-arem __predicate__ region __object__ Nationwide in Indonesia, but more specific to Java']]
Text: The banana leaf, an ingredient found in Arem arem, is an Indonesian dish, most popular in Java.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['ingredient', 'region']
Object: ['Banana leaf', 'Nationwide in Indonesia, but more specific to Java']

Triple: [['__subject__ Arem-arem __predicate__ ingredient __object__ Banana leaf', '__subject__ Arem-arem __predicate__ region __object__ Nationwide in Indonesia, but more specific to Java']]
Text: Arem-arem is found nationwide in Indonesia, but is more specific to Java and it uses banana leaf as an ingredient.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['ingredient', 'region']
Object: ['Banana leaf', 'Nationwide in Indonesia, but more specific to Java']

Triple: [['__subject__ Arem-arem __predicate__ ingredient __object__ Banana leaf', '__subject__ Arem-arem __predicate__ region __object__ Nationwide in Indonesia, but more specific to Java']]
Text: Arem-arem is nationwide in Indonesia, but more specific to Java and one of the ingredients is banana leaf.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['ingredient', 'region']
Object: ['Banana leaf', 'Nationwide in Indonesia, but more specific to Java']

Triple: [['__subject__ Arem-arem __predicate__ ingredient __object__ Banana leaf', '__subject__ Arem-arem __predicate__ region __object__ Javanese cuisine']]
Text: Banana leaf is an ingredient in Arem arem, a dish from Java.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['ingredient', 'region']
Object: ['Banana leaf', 'Javanese cuisine']

Triple: [['__subject__ Arem-arem __predicate__ ingredient __object__ Banana leaf', '__subject__ Arem-arem __predicate__ region __object__ Javanese cuisine']]
Text: Arem-arem is a Javanese dish and uses the ingredient banana leaf.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['ingredient', 'region']
Object: ['Banana leaf', 'Javanese cuisine']

Triple: [['__subject__ Arem-arem __predicate__ ingredient __object__ Banana leaf', '__subject__ Arem-arem __predicate__ region __object__ Javanese cuisine']]
Text: Arem-arem is a Javanese dish that contains banana leaf.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['ingredient', 'region']
Object: ['Banana leaf', 'Javanese cuisine']

Triple: [['__subject__ Arem-arem __predicate__ mainIngredient __object__ compressed rice cooked in banana leaf with vegetables or minced meat fillings', '__subject__ Arem-arem __predicate__ region __object__ Nationwide in Indonesia, but more specific to Java']]
Text: Arem-arem is found nationwide in Indonesia, but is more specific to Java and its main ingredients are compressed rice cooked in banana leaf with vegetables or minced meat fillings.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['mainIngredient', 'region']
Object: ['compressed rice cooked in banana leaf with vegetables or minced meat fillings', 'Nationwide in Indonesia, but more specific to Java']

Triple: [['__subject__ Arem-arem __predicate__ mainIngredient __object__ compressed rice cooked in banana leaf with vegetables or minced meat fillings', '__subject__ Arem-arem __predicate__ region __object__ Nationwide in Indonesia, but more specific to Java']]
Text: Compressed rice cooked in banana leaf with vegetables or minced meat fillings are the main ingredients of Arem-arem which is found nationwide in Indonesia but is more specific to Java.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['mainIngredient', 'region']
Object: ['compressed rice cooked in banana leaf with vegetables or minced meat fillings', 'Nationwide in Indonesia, but more specific to Java']

Triple: [['__subject__ Arem-arem __predicate__ mainIngredient __object__ compressed rice cooked in banana leaf with vegetables or minced meat fillings', '__subject__ Arem-arem __predicate__ region __object__ Nationwide in Indonesia, but more specific to Java']]
Text: Arem-arem is an Indonesian dish but more specific to Java and has the main ingredients of compressed rice cooked in banana leaf with vegetables or minced meat fillings.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['mainIngredient', 'region']
Object: ['compressed rice cooked in banana leaf with vegetables or minced meat fillings', 'Nationwide in Indonesia, but more specific to Java']

Triple: [['__subject__ Arem-arem __predicate__ region __object__ Indonesia', '__subject__ Arem-arem __predicate__ mainIngredient __object__ compressed rice cooked in banana leaf with vegetables or minced meat fillings']]
Text: Arem arem is a dish comprised of compressed rice, cooked in banana leaves and filled with vegetables or meat. It is an Indonesian recipe.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['region', 'mainIngredient']
Object: ['Indonesia', 'compressed rice cooked in banana leaf with vegetables or minced meat fillings']

Triple: [['__subject__ Arem-arem __predicate__ region __object__ Indonesia', '__subject__ Arem-arem __predicate__ mainIngredient __object__ compressed rice cooked in banana leaf with vegetables or minced meat fillings']]
Text: To make an Arem-Arem you need compressed rice cooked in banana leaf with vegetables or minced meat fillings and this meal originates from Indonesia.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['region', 'mainIngredient']
Object: ['Indonesia', 'compressed rice cooked in banana leaf with vegetables or minced meat fillings']

Triple: [['__subject__ Arem-arem __predicate__ region __object__ Indonesia', '__subject__ Arem-arem __predicate__ mainIngredient __object__ compressed rice cooked in banana leaf with vegetables or minced meat fillings']]
Text: Indonesian dish Arem Arem includes the filling compressed rice (cooked in a banana leaf) with vegetables or minced meat.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['region', 'mainIngredient']
Object: ['Indonesia', 'compressed rice cooked in banana leaf with vegetables or minced meat fillings']

Triple: [['__subject__ Arem-arem __predicate__ region __object__ Indonesia', '__subject__ Indonesia __predicate__ language __object__ Indonesian language']]
Text: Arem arem comes from Indonesia where the language is known as Indonesian.
Subject: ['Arem-arem', 'Indonesia']
Predicate: ['region', 'language']
Object: ['Indonesia', 'Indonesian language']

Triple: [['__subject__ Arem-arem __predicate__ region __object__ Indonesia', '__subject__ Indonesia __predicate__ language __object__ Indonesian language']]
Text: Arem arem has its origins in Indonesian speaking, Indonesia.
Subject: ['Arem-arem', 'Indonesia']
Predicate: ['region', 'language']
Object: ['Indonesia', 'Indonesian language']

Triple: [['__subject__ Arem-arem __predicate__ region __object__ Indonesia', '__subject__ Indonesia __predicate__ leader __object__ Joko Widodo']]
Text: Arem arem is a food which comes from Indonesia, whose leader is Joko Widodo.
Subject: ['Arem-arem', 'Indonesia']
Predicate: ['region', 'leader']
Object: ['Indonesia', 'Joko Widodo']

Triple: [['__subject__ Arem-arem __predicate__ region __object__ Indonesia', '__subject__ Indonesia __predicate__ leader __object__ Joko Widodo']]
Text: Joko Widodo is the leader in Indonesia where Arem arem comes from.
Subject: ['Arem-arem', 'Indonesia']
Predicate: ['region', 'leader']
Object: ['Indonesia', 'Joko Widodo']

Triple: [['__subject__ Arem-arem __predicate__ region __object__ Indonesia', '__subject__ Indonesia __predicate__ leader __object__ Joko Widodo']]
Text: The leader of Indonesia is Joko Widodo where arem arem comes from.
Subject: ['Arem-arem', 'Indonesia']
Predicate: ['region', 'leader']
Object: ['Indonesia', 'Joko Widodo']

Triple: [['__subject__ Arem-arem __predicate__ region __object__ Javanese cuisine', '__subject__ Arem-arem __predicate__ mainIngredient __object__ compressed rice cooked in banana leaf with vegetables or minced meat fillings']]
Text: Arem-arem is a Javanese dish made from compressed rice cooked in banana leaf with vegetables or minced meat fillings.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['region', 'mainIngredient']
Object: ['Javanese cuisine', 'compressed rice cooked in banana leaf with vegetables or minced meat fillings']

Triple: [['__subject__ Arem-arem __predicate__ region __object__ Javanese cuisine', '__subject__ Arem-arem __predicate__ mainIngredient __object__ compressed rice cooked in banana leaf with vegetables or minced meat fillings']]
Text: The main ingredients of Arem-arem, a Javanese dish, are compressed rice cooked in banana leaf with vegetables or minced meat fillings.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['region', 'mainIngredient']
Object: ['Javanese cuisine', 'compressed rice cooked in banana leaf with vegetables or minced meat fillings']

Triple: [['__subject__ Arem-arem __predicate__ region __object__ Javanese cuisine', '__subject__ Arem-arem __predicate__ mainIngredient __object__ compressed rice cooked in banana leaf with vegetables or minced meat fillings']]
Text: Arem-arem is a dish of Javanese cuisine and the main ingredients are compressed rice cooked in banana leaf with vegetables or minced meat fillings.
Subject: ['Arem-arem', 'Arem-arem']
Predicate: ['region', 'mainIngredient']
Object: ['Javanese cuisine', 'compressed rice cooked in banana leaf with vegetables or minced meat fillings']

Triple: [['__subject__ Arrabbiata sauce __predicate__ country __object__ Italy', '__subject__ Italy __predicate__ leader __object__ Pietro Grasso']]
Text: Arrabbiata sauce is from Italy and Pietro Grasso is its leader.
Subject: ['Arrabbiata sauce', 'Italy']
Predicate: ['country', 'leader']
Object: ['Italy', 'Pietro Grasso']

Triple: [['__subject__ Arrabbiata sauce __predicate__ country __object__ Italy', '__subject__ Italy __predicate__ leader __object__ Pietro Grasso']]
Text: Pietro Grasson is the leader of Italy, where arrabbiata sauce can be found.
Subject: ['Arrabbiata sauce', 'Italy']
Predicate: ['country', 'leader']
Object: ['Italy', 'Pietro Grasso']

Triple: [['__subject__ Arrabbiata sauce __predicate__ country __object__ Italy', '__subject__ Italy __predicate__ leader __object__ Pietro Grasso']]
Text: Arrabbiata sauce is from Italy where Pietro Grasso is the leader.
Subject: ['Arrabbiata sauce', 'Italy']
Predicate: ['country', 'leader']
Object: ['Italy', 'Pietro Grasso']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Chili pepper', '__subject__ Arrabbiata sauce __predicate__ region __object__ Rome']]
Text: An important ingredient in arrabbiata sauce which originates from the region of Rome, is chili pepper.
Subject: ['Arrabbiata sauce', 'Arrabbiata sauce']
Predicate: ['ingredient', 'region']
Object: ['Chili pepper', 'Rome']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Chili pepper', '__subject__ Arrabbiata sauce __predicate__ region __object__ Rome']]
Text: An important ingredient in arrabbiata sauce (from the Rome region) is chili pepper.
Subject: ['Arrabbiata sauce', 'Arrabbiata sauce']
Predicate: ['ingredient', 'region']
Object: ['Chili pepper', 'Rome']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Chili pepper', '__subject__ Arrabbiata sauce __predicate__ region __object__ Rome']]
Text: The chili pepper serves as an ingredient in Arrabbiata sauce, a traditional dish from Rome.
Subject: ['Arrabbiata sauce', 'Arrabbiata sauce']
Predicate: ['ingredient', 'region']
Object: ['Chili pepper', 'Rome']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Garlic', '__subject__ Arrabbiata sauce __predicate__ country __object__ Italy']]
Text: An ingredient of arrabbiata sauce, which can be found in Italy, is garlic.
Subject: ['Arrabbiata sauce', 'Arrabbiata sauce']
Predicate: ['ingredient', 'country']
Object: ['Garlic', 'Italy']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Garlic', '__subject__ Arrabbiata sauce __predicate__ country __object__ Italy']]
Text: The Italian sauce Arrabbiata contains garlic.
Subject: ['Arrabbiata sauce', 'Arrabbiata sauce']
Predicate: ['ingredient', 'country']
Object: ['Garlic', 'Italy']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Garlic', '__subject__ Arrabbiata sauce __predicate__ country __object__ Italy']]
Text: Garlic is an ingredient in arrabbiata sauce which can be found in Italy.
Subject: ['Arrabbiata sauce', 'Arrabbiata sauce']
Predicate: ['ingredient', 'country']
Object: ['Garlic', 'Italy']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Garlic', '__subject__ Arrabbiata sauce __predicate__ region __object__ Rome']]
Text: Arrabbiata sauce originates from the region of Rome and includes the ingredient garlic.
Subject: ['Arrabbiata sauce', 'Arrabbiata sauce']
Predicate: ['ingredient', 'region']
Object: ['Garlic', 'Rome']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Garlic', '__subject__ Arrabbiata sauce __predicate__ region __object__ Rome']]
Text: Arrabbiata sauce, a dish from Rome, includes garlic as a component.
Subject: ['Arrabbiata sauce', 'Arrabbiata sauce']
Predicate: ['ingredient', 'region']
Object: ['Garlic', 'Rome']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Tomato', '__subject__ Arrabbiata sauce __predicate__ region __object__ Rome']]
Text: Tomato is an ingredient in Arrabbiata sauce which is a traditional dish from Rome.
Subject: ['Arrabbiata sauce', 'Arrabbiata sauce']
Predicate: ['ingredient', 'region']
Object: ['Tomato', 'Rome']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Tomato', '__subject__ Arrabbiata sauce __predicate__ region __object__ Rome']]
Text: Arrabbiata sauce includes tomatoes, and originates from the region of Rome.
Subject: ['Arrabbiata sauce', 'Arrabbiata sauce']
Predicate: ['ingredient', 'region']
Object: ['Tomato', 'Rome']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Tomato', '__subject__ Arrabbiata sauce __predicate__ region __object__ Rome']]
Text: The Rome region created the Arrabbiata sauce and it has an ingredient called tomato.
Subject: ['Arrabbiata sauce', 'Arrabbiata sauce']
Predicate: ['ingredient', 'region']
Object: ['Tomato', 'Rome']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Tomato', '__subject__ Tomato __predicate__ family __object__ Solanaceae']]
Text: Tomato (from the family of solanaceae) is an ingredient in Arrabbiata sauce.
Subject: ['Arrabbiata sauce', 'Tomato']
Predicate: ['ingredient', 'family']
Object: ['Tomato', 'Solanaceae']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Tomato', '__subject__ Tomato __predicate__ family __object__ Solanaceae']]
Text: Tomato belongs to the family of solanaceae and are an ingredient of Arrabbiata sauce.
Subject: ['Arrabbiata sauce', 'Tomato']
Predicate: ['ingredient', 'family']
Object: ['Tomato', 'Solanaceae']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Tomato', '__subject__ Tomato __predicate__ family __object__ Solanaceae']]
Text: Tomatoes are members of the Solanaceae family. They are used in Arrabbiata sauce.
Subject: ['Arrabbiata sauce', 'Tomato']
Predicate: ['ingredient', 'family']
Object: ['Tomato', 'Solanaceae']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Tomato', '__subject__ Tomato __predicate__ order __object__ Solanales']]
Text: Arrabbiata sauce includes tomatoes which is from the order Solanales.
Subject: ['Arrabbiata sauce', 'Tomato']
Predicate: ['ingredient', 'order']
Object: ['Tomato', 'Solanales']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Tomato', '__subject__ Tomato __predicate__ order __object__ Solanales']]
Text: Tomato is one of the members of the order Solanales and it's used in Arrabbiata sauce.
Subject: ['Arrabbiata sauce', 'Tomato']
Predicate: ['ingredient', 'order']
Object: ['Tomato', 'Solanales']

Triple: [['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Tomato', '__subject__ Tomato __predicate__ order __object__ Solanales']]
Text: Tomatoes, of the order Solanales, are found in Arrabbiata sauce.
Subject: ['Arrabbiata sauce', 'Tomato']
Predicate: ['ingredient', 'order']
Object: ['Tomato', 'Solanales']

Triple: [['__subject__ Arrabbiata sauce __predicate__ region __object__ Rome', '__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Olive oil']]
Text: Olive oil is an ingredient used in the preparation of Arrabbiata sauce, a dish from Rome.
Subject: ['Arrabbiata sauce', 'Arrabbiata sauce']
Predicate: ['region', 'ingredient']
Object: ['Rome', 'Olive oil']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Arròs negre __predicate__ ingredient __object__ Cephalopod ink']]
Text: Cephalopod ink is an ingredient in the dish Arros negre which is from Spain.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'Cephalopod ink']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Arròs negre __predicate__ ingredient __object__ Cubanelle']]
Text: Arròs negre is a traditional dish from Spain, Cubanelle is an ingredient.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'Cubanelle']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Arròs negre __predicate__ ingredient __object__ Cubanelle']]
Text: Cubanelle is an ingredient in the Spanish dish of Arros negre.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'Cubanelle']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Arròs negre __predicate__ ingredient __object__ Cubanelle']]
Text: Arros negre is a traditional Spanish dish made with Cubanelle.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'Cubanelle']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Arròs negre __predicate__ ingredient __object__ Cuttlefish']]
Text: Arròs negre is from Spain and it uses cuttlefish as an ingredient.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'Cuttlefish']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Arròs negre __predicate__ ingredient __object__ Cuttlefish']]
Text: Cuttlefish is an ingredient of Arros negre which is a traditional dish from Spain.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'Cuttlefish']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Arròs negre __predicate__ ingredient __object__ White rice']]
Text: White rice is an ingredient of Arros negre which is a traditional dish from Spain.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'White rice']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Arròs negre __predicate__ ingredient __object__ White rice']]
Text: White rice is used in Arros negre which is from Spain.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'White rice']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Arròs negre __predicate__ ingredient __object__ White rice']]
Text: Arros negre contains white rice as an ingredient and it comes from Spain.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['country', 'ingredient']
Object: ['Spain', 'White rice']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Arròs negre __predicate__ region __object__ Catalonia']]
Text: From the Catalonia region in Spain comes the traditional dish called Arros Negre.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['country', 'region']
Object: ['Spain', 'Catalonia']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Arròs negre __predicate__ region __object__ Catalonia']]
Text: Arròs negre is a traditional dish from the region of Catalonia in Spain.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['country', 'region']
Object: ['Spain', 'Catalonia']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Arròs negre __predicate__ region __object__ Catalonia']]
Text: Arros negre is from Catalonia, Spain.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['country', 'region']
Object: ['Spain', 'Catalonia']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Spain __predicate__ demonym __object__ Spaniards']]
Text: Spaniards and Arros negre come from Spain.
Subject: ['Arròs negre', 'Spain']
Predicate: ['country', 'demonym']
Object: ['Spain', 'Spaniards']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Spain __predicate__ demonym __object__ Spaniards']]
Text: Arròs negre is from Spain, where Spaniards live.
Subject: ['Arròs negre', 'Spain']
Predicate: ['country', 'demonym']
Object: ['Spain', 'Spaniards']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Spain __predicate__ demonym __object__ Spaniards']]
Text: Spaniards is the name for the people of Spain and one of the traditional dishes there is Arròs negre.
Subject: ['Arròs negre', 'Spain']
Predicate: ['country', 'demonym']
Object: ['Spain', 'Spaniards']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Spain __predicate__ ethnicGroup __object__ Spaniards']]
Text: Arros negre is from Spain where Spaniards are an ethnic group.
Subject: ['Arròs negre', 'Spain']
Predicate: ['country', 'ethnicGroup']
Object: ['Spain', 'Spaniards']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Spain __predicate__ ethnicGroup __object__ Spaniards']]
Text: Arròs negre is from Spain, which is populated by Spaniards.
Subject: ['Arròs negre', 'Spain']
Predicate: ['country', 'ethnicGroup']
Object: ['Spain', 'Spaniards']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Spain __predicate__ ethnicGroup __object__ Spaniards']]
Text: The dish arros negre comes from Spain where Spaniards live.
Subject: ['Arròs negre', 'Spain']
Predicate: ['country', 'ethnicGroup']
Object: ['Spain', 'Spaniards']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Spain __predicate__ leader __object__ Felipe VI of Spain']]
Text: Arros negre is from Spain and its leader is Felipe VI.
Subject: ['Arròs negre', 'Spain']
Predicate: ['country', 'leader']
Object: ['Spain', 'Felipe VI of Spain']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Spain __predicate__ leader __object__ Felipe VI of Spain']]
Text: Felipe VI of Spain is the leader of Spain where Arròs negre is a traditional dish.
Subject: ['Arròs negre', 'Spain']
Predicate: ['country', 'leader']
Object: ['Spain', 'Felipe VI of Spain']

Triple: [['__subject__ Arròs negre __predicate__ country __object__ Spain', '__subject__ Spain __predicate__ leader __object__ Felipe VI of Spain']]
Text: Felipe VI of Spain is the leader of Spain, where one can find Arros negre.
Subject: ['Arròs negre', 'Spain']
Predicate: ['country', 'leader']
Object: ['Spain', 'Felipe VI of Spain']

Triple: [['__subject__ Arròs negre __predicate__ region __object__ Catalonia', '__subject__ Arròs negre __predicate__ ingredient __object__ Cuttlefish']]
Text: Cuttlefish is an ingredient in the Catalonia regional dish, Arros negre.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['region', 'ingredient']
Object: ['Catalonia', 'Cuttlefish']

Triple: [['__subject__ Arròs negre __predicate__ region __object__ Catalonia', '__subject__ Arròs negre __predicate__ ingredient __object__ Cuttlefish']]
Text: Cuttlefish is an ingredient in the Catalonian dish of Arros negre.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['region', 'ingredient']
Object: ['Catalonia', 'Cuttlefish']

Triple: [['__subject__ Arròs negre __predicate__ region __object__ Catalonia', '__subject__ Catalonia __predicate__ leader __object__ Parliament of Catalonia']]
Text: Catalonia is led by the Parliament of Catalonia and is the region that Arros negre is from.
Subject: ['Arròs negre', 'Catalonia']
Predicate: ['region', 'leader']
Object: ['Catalonia', 'Parliament of Catalonia']

Triple: [['__subject__ Arròs negre __predicate__ region __object__ Catalonia', '__subject__ Catalonia __predicate__ leader __object__ Parliament of Catalonia']]
Text: The leaders of Catalonia are the Parliament of Catalonia and in this region you can find Arros negre.
Subject: ['Arròs negre', 'Catalonia']
Predicate: ['region', 'leader']
Object: ['Catalonia', 'Parliament of Catalonia']

Triple: [['__subject__ Arròs negre __predicate__ region __object__ Catalonia', '__subject__ Catalonia __predicate__ leader __object__ Parliament of Catalonia']]
Text: Arros negre is from the Catalonia region and its leaders are the Parliament of Catalonia.
Subject: ['Arròs negre', 'Catalonia']
Predicate: ['region', 'leader']
Object: ['Catalonia', 'Parliament of Catalonia']

Triple: [['__subject__ Arròs negre __predicate__ region __object__ Valencian Community', '__subject__ Arròs negre __predicate__ ingredient __object__ Squid']]
Text: Arros negre, which contains squid, comes from the region of the Valencian Community.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['region', 'ingredient']
Object: ['Valencian Community', 'Squid']

Triple: [['__subject__ Arròs negre __predicate__ region __object__ Valencian Community', '__subject__ Arròs negre __predicate__ ingredient __object__ Squid']]
Text: Arros negre includes squid among its ingredients and comes from the region of the Valencian Community.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['region', 'ingredient']
Object: ['Valencian Community', 'Squid']

Triple: [['__subject__ Arròs negre __predicate__ region __object__ Valencian Community', '__subject__ Arròs negre __predicate__ ingredient __object__ Squid']]
Text: Arros negre comes from the region of the Valencian Community and has squid as one of its ingredients.
Subject: ['Arròs negre', 'Arròs negre']
Predicate: ['region', 'ingredient']
Object: ['Valencian Community', 'Squid']

Triple: [['__subject__ Arròs negre __predicate__ region __object__ Valencian Community', '__subject__ Valencian Community __predicate__ leader __object__ Ximo Puig']]
Text: Arros negre originates from the Valencian community which is led by Ximo Puig.
Subject: ['Arròs negre', 'Valencian Community']
Predicate: ['region', 'leader']
Object: ['Valencian Community', 'Ximo Puig']

Triple: [['__subject__ Arròs negre __predicate__ region __object__ Valencian Community', '__subject__ Valencian Community __predicate__ leader __object__ Ximo Puig']]
Text: Arros negre comes from the region of the Valencian Community where Ximo Puig is a leader.
Subject: ['Arròs negre', 'Valencian Community']
Predicate: ['region', 'leader']
Object: ['Valencian Community', 'Ximo Puig']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Indonesia', '__subject__ Asam pedas __predicate__ region __object__ Malay Peninsula']]
Text: Indonesia is home to the Asam Pedas which are from the Malay Peninsula region.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['country', 'region']
Object: ['Indonesia', 'Malay Peninsula']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Indonesia', '__subject__ Asam pedas __predicate__ region __object__ Malay Peninsula']]
Text: Asam pedas hails from Malay Peninsula and Indonesia.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['country', 'region']
Object: ['Indonesia', 'Malay Peninsula']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Indonesia', '__subject__ Asam pedas __predicate__ region __object__ Malay Peninsula']]
Text: Asam pedas is an Indonesian dish found in the Malay Peninsula.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['country', 'region']
Object: ['Indonesia', 'Malay Peninsula']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Indonesia', '__subject__ Indonesia __predicate__ leader __object__ Joko Widodo']]
Text: Asam pedas is an Indonesia dish popular with Joko Widodo.
Subject: ['Asam pedas', 'Indonesia']
Predicate: ['country', 'leader']
Object: ['Indonesia', 'Joko Widodo']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Indonesia', '__subject__ Indonesia __predicate__ leader __object__ Joko Widodo']]
Text: The Asam pedas is popular in Indonesia where Joko Widodo is the leader.
Subject: ['Asam pedas', 'Indonesia']
Predicate: ['country', 'leader']
Object: ['Indonesia', 'Joko Widodo']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Indonesia', '__subject__ Indonesia __predicate__ leader __object__ Joko Widodo']]
Text: Indonesia's leader's name is Joko Widodo which is where Asam pedas comes from.
Subject: ['Asam pedas', 'Indonesia']
Predicate: ['country', 'leader']
Object: ['Indonesia', 'Joko Widodo']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Asam pedas __predicate__ mainIngredient __object__ Fish cooked in sour and hot sauce']]
Text: Fish cooked in sour and hot sauce are the main ingredients of Asam pedas which is a food found in Malaysia.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['country', 'mainIngredient']
Object: ['Malaysia', 'Fish cooked in sour and hot sauce']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Asam pedas __predicate__ mainIngredient __object__ Fish cooked in sour and hot sauce']]
Text: Asam pedas is a food found in Malaysia, and it is a dish of fish cooked in a sour and hot sauce.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['country', 'mainIngredient']
Object: ['Malaysia', 'Fish cooked in sour and hot sauce']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Asam pedas __predicate__ mainIngredient __object__ Fish cooked in sour and hot sauce']]
Text: The main ingredients of the Malaysian dish of asam pedas consist of fish cooked in a sour and hot sauce.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['country', 'mainIngredient']
Object: ['Malaysia', 'Fish cooked in sour and hot sauce']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Asam pedas __predicate__ region __object__ Sumatra and Malay Peninsula']]
Text: Asam pedas is a food found in Malaysia and originates from the Sumatra and Malay Peninsula regions.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['country', 'region']
Object: ['Malaysia', 'Sumatra and Malay Peninsula']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Asam pedas __predicate__ region __object__ Sumatra and Malay Peninsula']]
Text: Asam pedas is a food found in Malaysia and comes from the Sumatra and Malay Peninsula regions.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['country', 'region']
Object: ['Malaysia', 'Sumatra and Malay Peninsula']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Asam pedas __predicate__ region __object__ Sumatra and Malay Peninsula']]
Text: Asam pedas is found in the region of Malaysia, Sumatra and Malay peninsula.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['country', 'region']
Object: ['Malaysia', 'Sumatra and Malay Peninsula']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Asam pedas __predicate__ region __object__ Malay Peninsula']]
Text: Asam pedas is a food found in the Malay Peninsula, Malaysia.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['country', 'region']
Object: ['Malaysia', 'Malay Peninsula']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Asam pedas __predicate__ region __object__ Malay Peninsula']]
Text: Asam pedas is a food found in Malaysia that's from the Malay Peninsula region.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['country', 'region']
Object: ['Malaysia', 'Malay Peninsula']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Asam pedas __predicate__ region __object__ Malay Peninsula']]
Text: Asam pedas is a food found in the Malay Peninsula in Malaysia.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['country', 'region']
Object: ['Malaysia', 'Malay Peninsula']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Asam pedas __predicate__ region __object__ Sumatra']]
Text: Asam pedas is a dish from Sumatra which is a food found in Malaysia.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['country', 'region']
Object: ['Malaysia', 'Sumatra']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Asam pedas __predicate__ region __object__ Sumatra']]
Text: Sumatran dish asam pedas is found in Malaysia.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['country', 'region']
Object: ['Malaysia', 'Sumatra']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Asam pedas __predicate__ region __object__ Sumatra']]
Text: Asam pedas is a dish from Sumatra and is also found in Malaysia.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['country', 'region']
Object: ['Malaysia', 'Sumatra']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ capital __object__ Kuala Lumpur']]
Text: Kuala Lumpur is the capital of Malaysia where Asam pedas is a local food.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'capital']
Object: ['Malaysia', 'Kuala Lumpur']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ capital __object__ Kuala Lumpur']]
Text: Asam pedas is a food found in Malaysia where the capital is Kuala Lumpur.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'capital']
Object: ['Malaysia', 'Kuala Lumpur']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ capital __object__ Putrajaya']]
Text: Asam pedas is a food found in Malaysia, of which the capital city is Putrajaya.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'capital']
Object: ['Malaysia', 'Putrajaya']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ capital __object__ Putrajaya']]
Text: Putrajaya is the capital of Malaysia where Asam pedas is one of the foods.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'capital']
Object: ['Malaysia', 'Putrajaya']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ capital __object__ Putrajaya']]
Text: Asam pedas is a food found in Malaysia whose capital is Putrajaya.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'capital']
Object: ['Malaysia', 'Putrajaya']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ ethnicGroup __object__ Malaysian Chinese']]
Text: Malaysia includes the Malaysian chinese and is a locale for the dish: Asam pedas.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'ethnicGroup']
Object: ['Malaysia', 'Malaysian Chinese']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ ethnicGroup __object__ Malaysian Chinese']]
Text: The Malaysian chinese are an ethnic group in Malaysia where Asam pedas is a local food.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'ethnicGroup']
Object: ['Malaysia', 'Malaysian Chinese']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ ethnicGroup __object__ Malaysian Chinese']]
Text: Asam pedas is a food found in Malaysia where Malaysian Chinese are an ethnic group.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'ethnicGroup']
Object: ['Malaysia', 'Malaysian Chinese']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ ethnicGroup __object__ Malaysian Indian']]
Text: Asam pedas is a food found in Malaysia and Malaysian Indian is one of the ethnic groups.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'ethnicGroup']
Object: ['Malaysia', 'Malaysian Indian']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ ethnicGroup __object__ Malaysian Malay']]
Text: Asam pedas is a food found in Malaysia, a country that has Malay people as an ethnic group.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'ethnicGroup']
Object: ['Malaysia', 'Malaysian Malay']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ ethnicGroup __object__ Malaysian Malay']]
Text: Asam pedas is a food found in Malaysia where the Malay are an ethnic group.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'ethnicGroup']
Object: ['Malaysia', 'Malaysian Malay']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ ethnicGroup __object__ Malaysian Malay']]
Text: Malaysian Malay is an ethnic group in Malaysia and Asam pedas is a food that can be found there.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'ethnicGroup']
Object: ['Malaysia', 'Malaysian Malay']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ leader __object__ Abdul Halim of Kedah']]
Text: Asam pedas is a food found in Malaysia and Abdul Halim of Kedah is its leader.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'leader']
Object: ['Malaysia', 'Abdul Halim of Kedah']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ leader __object__ Abdul Halim of Kedah']]
Text: Asam pedas is a food found in Malaysia where the leader is Abdul Halim of Kedah.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'leader']
Object: ['Malaysia', 'Abdul Halim of Kedah']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ leader __object__ Abdul Halim of Kedah']]
Text: Asam pedas is a food found in Malaysia and its leader is Abdul Halim of Kedah.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'leader']
Object: ['Malaysia', 'Abdul Halim of Kedah']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ leader __object__ Abu Zahar Ujang']]
Text: Abu Zahar Ujang is the leader of Malaysia where one of the local foods is asam pedas.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'leader']
Object: ['Malaysia', 'Abu Zahar Ujang']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ leader __object__ Abu Zahar Ujang']]
Text: Asam pedas is a food found in Malaysia and Abu Zahar Ujang is its leader.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'leader']
Object: ['Malaysia', 'Abu Zahar Ujang']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ leader __object__ Abu Zahar Ujang']]
Text: Asam pedas is a food found in Malaysia, where Abu Zahar Ujang is a leader.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'leader']
Object: ['Malaysia', 'Abu Zahar Ujang']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ leader __object__ Arifin Zakaria']]
Text: Arifin Zakaria is leader of Malaysia, where Asam pedas is found.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'leader']
Object: ['Malaysia', 'Arifin Zakaria']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ leader __object__ Arifin Zakaria']]
Text: Asam pedas is a food found in Malaysia, where Arifin Zakaria is the leader.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'leader']
Object: ['Malaysia', 'Arifin Zakaria']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ leader __object__ Arifin Zakaria']]
Text: Asam pedas is a dish found in Malaysia, where the leader is Arifin Zakaria.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'leader']
Object: ['Malaysia', 'Arifin Zakaria']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ leader __object__ Najib Razak']]
Text: Asam pedas is a food from Malaysia where the leader is Najib Razak.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'leader']
Object: ['Malaysia', 'Najib Razak']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ leader __object__ Najib Razak']]
Text: Asam pedas can be found in the country of Malaysia who has a leader called Najib Razak.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'leader']
Object: ['Malaysia', 'Najib Razak']

Triple: [['__subject__ Asam pedas __predicate__ country __object__ Malaysia', '__subject__ Malaysia __predicate__ leader __object__ Najib Razak']]
Text: Asam pedas is a common food found in Malaysia who has a leader called Najib Razak.
Subject: ['Asam pedas', 'Malaysia']
Predicate: ['country', 'leader']
Object: ['Malaysia', 'Najib Razak']

Triple: [['__subject__ Asam pedas __predicate__ mainIngredient __object__ Fish cooked in sour and hot sauce', '__subject__ Asam pedas __predicate__ country __object__ Indonesia and Malaysia']]
Text: Asam pedas is a dish of fish cooked in a sour and hot sauce and comes from Indonesia and Malaysia.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['mainIngredient', 'country']
Object: ['Fish cooked in sour and hot sauce', 'Indonesia and Malaysia']

Triple: [['__subject__ Asam pedas __predicate__ region __object__ Sumatra and Malay Peninsula', '__subject__ Asam pedas __predicate__ country __object__ Indonesia and Malaysia']]
Text: Asam pedas is from Indonesia and Malaysia and is found in the region of Sumatra and Malay peninsula.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['region', 'country']
Object: ['Sumatra and Malay Peninsula', 'Indonesia and Malaysia']

Triple: [['__subject__ Asam pedas __predicate__ region __object__ Malay Peninsula', '__subject__ Asam pedas __predicate__ country __object__ Indonesia and Malaysia']]
Text: Asam pedas is from the Malay Peninsula region and comes from Indonesia and Malaysia.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['region', 'country']
Object: ['Malay Peninsula', 'Indonesia and Malaysia']

Triple: [['__subject__ Asam pedas __predicate__ region __object__ Malay Peninsula', '__subject__ Asam pedas __predicate__ country __object__ Indonesia and Malaysia']]
Text: Asam pedas is a food found in the Malay Peninsula and is from Indonesia and Malaysia.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['region', 'country']
Object: ['Malay Peninsula', 'Indonesia and Malaysia']

Triple: [['__subject__ Asam pedas __predicate__ region __object__ Malay Peninsula', '__subject__ Asam pedas __predicate__ country __object__ Indonesia and Malaysia']]
Text: Asam pedas hails from Malay Peninsula, Indonesia and Malaysia.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['region', 'country']
Object: ['Malay Peninsula', 'Indonesia and Malaysia']

Triple: [['__subject__ Asam pedas __predicate__ region __object__ Sumatra', '__subject__ Asam pedas __predicate__ country __object__ Indonesia and Malaysia']]
Text: The dish of asam pedas is from Sumatra in Indonesia and Malaysia.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['region', 'country']
Object: ['Sumatra', 'Indonesia and Malaysia']

Triple: [['__subject__ Asam pedas __predicate__ region __object__ Sumatra', '__subject__ Asam pedas __predicate__ country __object__ Indonesia and Malaysia']]
Text: Asam pedas comes from the countries of Indonesia, Malaysia and Sumatra.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['region', 'country']
Object: ['Sumatra', 'Indonesia and Malaysia']

Triple: [['__subject__ Asam pedas __predicate__ region __object__ Sumatra', '__subject__ Asam pedas __predicate__ country __object__ Indonesia and Malaysia']]
Text: Asam pedas is a dish from Sumatra, Indonesia and Malaysia.
Subject: ['Asam pedas', 'Asam pedas']
Predicate: ['region', 'country']
Object: ['Sumatra', 'Indonesia and Malaysia']

Triple: [['__subject__ Avocado __predicate__ order __object__ Laurales', '__subject__ Bandeja paisa __predicate__ ingredient __object__ Avocado']]
Text: Avocado (Laurales order) is included in the Bandeja paisa dish.
Subject: ['Avocado', 'Bandeja paisa']
Predicate: ['order', 'ingredient']
Object: ['Laurales', 'Avocado']

Triple: [['__subject__ Avocado __predicate__ order __object__ Laurales', '__subject__ Bandeja paisa __predicate__ ingredient __object__ Avocado']]
Text: The order of laurales has avocado which an ingredient in the dish Bandeja paisa.
Subject: ['Avocado', 'Bandeja paisa']
Predicate: ['order', 'ingredient']
Object: ['Laurales', 'Avocado']

Triple: [['__subject__ Avocado __predicate__ order __object__ Laurales', '__subject__ Bandeja paisa __predicate__ ingredient __object__ Avocado']]
Text: Avocado is one of the ingredients in Bandeja paisa and is a member of the Laurales plant order.
Subject: ['Avocado', 'Bandeja paisa']
Predicate: ['order', 'ingredient']
Object: ['Laurales', 'Avocado']

Triple: [['__subject__ Ayam penyet __predicate__ country __object__ Java', '__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken']]
Text: Ayam penyet, which comes from Java, has fried chicken in it.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['country', 'ingredient']
Object: ['Java', 'Fried chicken']

Triple: [['__subject__ Ayam penyet __predicate__ country __object__ Java', '__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken']]
Text: A food found in Java is ayam penyet which has fried chicken in it.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['country', 'ingredient']
Object: ['Java', 'Fried chicken']

Triple: [['__subject__ Ayam penyet __predicate__ country __object__ Java', '__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken']]
Text: Ayam penyet made in Java has fried chicken as the main ingredient.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['country', 'ingredient']
Object: ['Java', 'Fried chicken']

Triple: [['__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken', '__subject__ Ayam penyet __predicate__ country __object__ Indonesia']]
Text: Ayam penyet is and Indonesian dish that contains fried chicken.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['ingredient', 'country']
Object: ['Fried chicken', 'Indonesia']

Triple: [['__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken', '__subject__ Ayam penyet __predicate__ country __object__ Indonesia']]
Text: Fried chicken is an ingredient in the dish Ayam Penyet which is from Indonesia.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['ingredient', 'country']
Object: ['Fried chicken', 'Indonesia']

Triple: [['__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken', '__subject__ Ayam penyet __predicate__ country __object__ Indonesia']]
Text: Fried chicken is an ingredient in the Indonesian dish Ayam penyet.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['ingredient', 'country']
Object: ['Fried chicken', 'Indonesia']

Triple: [['__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken', '__subject__ Ayam penyet __predicate__ mainIngredient __object__ Squeezed or smashed fried chicken served with sambal']]
Text: "Squeezed" or "smashed" Fried chicken is an ingredient in Ayam penyet, it is served with sambal.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['ingredient', 'mainIngredient']
Object: ['Fried chicken', 'Squeezed or smashed fried chicken served with sambal']

Triple: [['__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken', '__subject__ Ayam penyet __predicate__ mainIngredient __object__ Squeezed or smashed fried chicken served with sambal']]
Text: "Squeezed" or "smashed" fried chicken served with sambal is a main ingredient in the dish 'ayam penyet'.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['ingredient', 'mainIngredient']
Object: ['Fried chicken', 'Squeezed or smashed fried chicken served with sambal']

Triple: [['__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken', '__subject__ Fried chicken __predicate__ mainIngredient __object__ Chicken']]
Text: The chicken dish ayam penyet has fried chicken in it.
Subject: ['Ayam penyet', 'Fried chicken']
Predicate: ['ingredient', 'mainIngredient']
Object: ['Fried chicken', 'Chicken']

Triple: [['__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken', '__subject__ Fried chicken __predicate__ mainIngredient __object__ Chicken']]
Text: Fried chicken is included in ayam penyet.
Subject: ['Ayam penyet', 'Fried chicken']
Predicate: ['ingredient', 'mainIngredient']
Object: ['Fried chicken', 'Chicken']

Triple: [['__subject__ Ayam penyet __predicate__ mainIngredient __object__ Squeezed or smashed fried chicken served with sambal', '__subject__ Ayam penyet __predicate__ country __object__ Indonesia']]
Text: Ayam penyet's main ingredients are squeezed or smashed fried chicken served with sambal; it is from Indonesia.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['mainIngredient', 'country']
Object: ['Squeezed or smashed fried chicken served with sambal', 'Indonesia']

Triple: [['__subject__ Ayam penyet __predicate__ mainIngredient __object__ Squeezed or smashed fried chicken served with sambal', '__subject__ Ayam penyet __predicate__ country __object__ Indonesia']]
Text: "Squeezed" or "smashed" fried chicken served with sambal is a main ingredient in the Indonesian dish of ayam penyet.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['mainIngredient', 'country']
Object: ['Squeezed or smashed fried chicken served with sambal', 'Indonesia']

Triple: [['__subject__ Ayam penyet __predicate__ mainIngredient __object__ Squeezed or smashed fried chicken served with sambal', '__subject__ Ayam penyet __predicate__ country __object__ Indonesia']]
Text: The main ingredients of the Indonesian dish known as Ayam penyet are "squeezed" or "smashed" chicken served with sambal.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['mainIngredient', 'country']
Object: ['Squeezed or smashed fried chicken served with sambal', 'Indonesia']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Nationwide, also can be found in Malaysia and Singapore', '__subject__ Ayam penyet __predicate__ country __object__ Java']]
Text: Ayam penyet comes from Java but is made nationwide, and can also be found in Malaysia and Singapore.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['region', 'country']
Object: ['Nationwide, also can be found in Malaysia and Singapore', 'Java']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Nationwide, also can be found in Malaysia and Singapore', '__subject__ Ayam penyet __predicate__ country __object__ Java']]
Text: Ayam penyet is a food that can be found nationwide, in Java and also in Malaysia and Singapore.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['region', 'country']
Object: ['Nationwide, also can be found in Malaysia and Singapore', 'Java']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Nationwide, also can be found in Malaysia and Singapore', '__subject__ Ayam penyet __predicate__ country __object__ Java']]
Text: Ayam penyet is made nationwide, and can also be found in Malaysia, Singapore and Java.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['region', 'country']
Object: ['Nationwide, also can be found in Malaysia and Singapore', 'Java']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Nationwide, also can be found in Malaysia and Singapore', '__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken']]
Text: Ayam penyet, a dish which contains fried chicken, can be found in Malaysia and Singapore.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['region', 'ingredient']
Object: ['Nationwide, also can be found in Malaysia and Singapore', 'Fried chicken']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Nationwide, also can be found in Malaysia and Singapore', '__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken']]
Text: Ayam penyet, which uses fried chicken, is made nationwide and can be found in Malaysia and Singapore.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['region', 'ingredient']
Object: ['Nationwide, also can be found in Malaysia and Singapore', 'Fried chicken']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Nationwide, also can be found in Malaysia and Singapore', '__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken']]
Text: Fried chicken is an ingredient in Ayam penyet, which can be found nationwide and also in Malaysia and Singapore.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['region', 'ingredient']
Object: ['Nationwide, also can be found in Malaysia and Singapore', 'Fried chicken']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Malaysia', '__subject__ Ayam penyet __predicate__ country __object__ Java']]
Text: Ayam penyet is popular in Malaysia and also found in Java.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['region', 'country']
Object: ['Malaysia', 'Java']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Malaysia', '__subject__ Ayam penyet __predicate__ country __object__ Java']]
Text: Ayam penyet is a food found in Java, and it comes from the region of Malaysia.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['region', 'country']
Object: ['Malaysia', 'Java']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Malaysia', '__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken']]
Text: Fried chicken is one of the ingredients in the dish 'Ayam Penyet' which comes from Malaysia.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['region', 'ingredient']
Object: ['Malaysia', 'Fried chicken']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Malaysia', '__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken']]
Text: Fried chicken is an ingredient in the popular Malaysian dish of Ayam penyet.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['region', 'ingredient']
Object: ['Malaysia', 'Fried chicken']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Malaysia', '__subject__ Malaysia __predicate__ ethnicGroup __object__ Malaysian Chinese']]
Text: Ayam penyet comes from the region of Malaysia where the Malaysian Chinese are an ethnic group.
Subject: ['Ayam penyet', 'Malaysia']
Predicate: ['region', 'ethnicGroup']
Object: ['Malaysia', 'Malaysian Chinese']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Malaysia', '__subject__ Malaysia __predicate__ ethnicGroup __object__ Malaysian Chinese']]
Text: The Malaysian Chinese are an ethnic group from Malaysia where Ayam penyet is a popular dish.
Subject: ['Ayam penyet', 'Malaysia']
Predicate: ['region', 'ethnicGroup']
Object: ['Malaysia', 'Malaysian Chinese']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Malaysia', '__subject__ Malaysia __predicate__ ethnicGroup __object__ Malaysian Chinese']]
Text: Ayam Penyet derives from the country of Malaysia which has an ethnic group of Malaysian Chinese people.
Subject: ['Ayam penyet', 'Malaysia']
Predicate: ['region', 'ethnicGroup']
Object: ['Malaysia', 'Malaysian Chinese']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Singapore', '__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken']]
Text: Fried chicken is an ingredient of Ayam penyet which is from the region of Singapore.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['region', 'ingredient']
Object: ['Singapore', 'Fried chicken']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Singapore', '__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken']]
Text: Ayam penyet is a dish from Singapore and it has fried chicken in it.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['region', 'ingredient']
Object: ['Singapore', 'Fried chicken']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Singapore', '__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken']]
Text: Fried chicken is an ingredient in Ayam penyet which comes from Singapore.
Subject: ['Ayam penyet', 'Ayam penyet']
Predicate: ['region', 'ingredient']
Object: ['Singapore', 'Fried chicken']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Singapore', '__subject__ Singapore __predicate__ language __object__ Standard Chinese']]
Text: Ayam penyet is from Singapore region where standard Chinese is spoken.
Subject: ['Ayam penyet', 'Singapore']
Predicate: ['region', 'language']
Object: ['Singapore', 'Standard Chinese']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Singapore', '__subject__ Singapore __predicate__ language __object__ Standard Chinese']]
Text: Ayam penyet is a dish from Singapore where Standard Chinese is spoken.
Subject: ['Ayam penyet', 'Singapore']
Predicate: ['region', 'language']
Object: ['Singapore', 'Standard Chinese']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Singapore', '__subject__ Singapore __predicate__ language __object__ Standard Chinese']]
Text: Standard Chinese is a language of Singapore, where Ayam penyet is a traditional dish.
Subject: ['Ayam penyet', 'Singapore']
Predicate: ['region', 'language']
Object: ['Singapore', 'Standard Chinese']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Singapore', '__subject__ Singapore __predicate__ leader __object__ Tony Tan']]
Text: Ayam penyet is a dish from Singapore whose leader is Tony Tan.
Subject: ['Ayam penyet', 'Singapore']
Predicate: ['region', 'leader']
Object: ['Singapore', 'Tony Tan']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Singapore', '__subject__ Singapore __predicate__ leader __object__ Tony Tan']]
Text: Ayam penyet is a dish from Singapore where the leader is Tony Tan.
Subject: ['Ayam penyet', 'Singapore']
Predicate: ['region', 'leader']
Object: ['Singapore', 'Tony Tan']

Triple: [['__subject__ Ayam penyet __predicate__ region __object__ Singapore', '__subject__ Singapore __predicate__ leader __object__ Tony Tan']]
Text: Ayam penyet is from the Singapore region where the leader is Tony Tan.
Subject: ['Ayam penyet', 'Singapore']
Predicate: ['region', 'leader']
Object: ['Singapore', 'Tony Tan']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ Bacon Explosion __predicate__ ingredient __object__ Bacon']]
Text: Bacon is an ingredient of the Bacon Explosion which comes from the United States.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['country', 'ingredient']
Object: ['United States', 'Bacon']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ Bacon Explosion __predicate__ ingredient __object__ Bacon']]
Text: Bacon is an ingredient in Bacon Explosion which comes from the United States.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['country', 'ingredient']
Object: ['United States', 'Bacon']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ Bacon Explosion __predicate__ ingredient __object__ Bacon']]
Text: If you've heard of a Bacon Explosion you might not know that it was created in The United States and the main ingredient is actually bacon.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['country', 'ingredient']
Object: ['United States', 'Bacon']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: Bacon Explosion comes from the United States where the capital is Washington, D.C.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: The United States is the country of the Bacon Explosion and the capital is Washington, D.C.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: Bacon Explosion comes from the United States which has the capital city of Washington DC.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: African Americans are an ethnic group in the United States which is where the bacon explosion comes from.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: The United States is home to the Bacon Explosion and African Americans.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Bacon explosion is a dish from the United States, where African Americans are an ethnic group.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Asian Americans are an ethnic group in the United States, where Bacon Explosion comes from.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Bacon Explosion comes from the United States where Asian Americans are an ethnic group.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: Bacon Explosion comes from the United States where there is an ethnic group called Asian Americans.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Native Americans are an ethnic group in USA which is the country of Bacon Explosion.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Bacon Explosion comes from the United States, where Native Americans are one of the ethnic groups.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Native Americans and country Bacon Explosion both are from the United States.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ White Americans']]
Text: White Americans are an ethnic group in the United States where the Bacon Explosion originates.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'White Americans']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ White Americans']]
Text: The Bacon Explosion is from the United States, where white Americans are one of the ethnic groups.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'White Americans']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ language __object__ English language']]
Text: The English language is used in the United States where people can find the Bacon Explosion.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'language']
Object: ['United States', 'English language']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ language __object__ English language']]
Text: English and Bacon Explosion are both found in the US.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'language']
Object: ['United States', 'English language']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ language __object__ English language']]
Text: English speaking United States boasts the Bacon Explosion.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'language']
Object: ['United States', 'English language']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Barack Obama']]
Text: Bacon Explosion comes from the United States, where Barack Obama was once the leader.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Barack Obama']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Barack Obama']]
Text: Bacon Explosion comes from the United States, whose leader is Barack Obama.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Barack Obama']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Barack Obama']]
Text: Barack Obama is a leader of the United States which is home to the bacon explosion.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Barack Obama']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Joe Biden']]
Text: Joe Biden and bacon explosion are both from the United States.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Joe Biden']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Joe Biden']]
Text: Joe Biden is one of the leaders of the United States where the Bacon Explosion comes from.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Joe Biden']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Joe Biden']]
Text: Joe Biden is one of the leaders from the United States, where Bacon Explosion comes from.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Joe Biden']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Paul Ryan']]
Text: Bacon Explosion is from the United States and Paul Ryan is its leader.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Paul Ryan']

Triple: [['__subject__ Bacon Explosion __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Paul Ryan']]
Text: The Bacon Explosion comes from the United States where Paul Ryan is a leader.
Subject: ['Bacon Explosion', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Paul Ryan']

Triple: [['__subject__ Bacon Explosion __predicate__ ingredient __object__ Bacon', '__subject__ Bacon Explosion __predicate__ mainIngredient __object__ Sausage']]
Text: Sausage is a main ingredient in the dish 'Bacon Explosion', which also contains bacon.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['ingredient', 'mainIngredient']
Object: ['Bacon', 'Sausage']

Triple: [['__subject__ Bacon Explosion __predicate__ ingredient __object__ Bacon', '__subject__ Bacon Explosion __predicate__ mainIngredient __object__ Sausage']]
Text: Bacon and sausage are ingredients in a Bacon Explosion.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['ingredient', 'mainIngredient']
Object: ['Bacon', 'Sausage']

Triple: [['__subject__ Bacon Explosion __predicate__ ingredient __object__ Bacon', '__subject__ Bacon Explosion __predicate__ mainIngredient __object__ Sausage']]
Text: Sausage is a main ingredient of Bacon Explosion but it also uses bacon.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['ingredient', 'mainIngredient']
Object: ['Bacon', 'Sausage']

Triple: [['__subject__ Bacon Explosion __predicate__ ingredient __object__ Bacon', '__subject__ Bacon Explosion __predicate__ region __object__ Kansas City metropolitan area']]
Text: Bacon Explosion is from the Kansas City metropolitan area and contains bacon.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['ingredient', 'region']
Object: ['Bacon', 'Kansas City metropolitan area']

Triple: [['__subject__ Bacon Explosion __predicate__ ingredient __object__ Bacon', '__subject__ Bacon Explosion __predicate__ region __object__ Kansas City metropolitan area']]
Text: Bacon is an ingredient of Bacon Explosion which comes from the Kansas City metropolitan area.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['ingredient', 'region']
Object: ['Bacon', 'Kansas City metropolitan area']

Triple: [['__subject__ Bacon Explosion __predicate__ ingredient __object__ Bacon', '__subject__ Bacon Explosion __predicate__ region __object__ Kansas City metropolitan area']]
Text: Bacon is an ingredient in Bacon Explosion, which is a dish from the Kansas City metropolitan area.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['ingredient', 'region']
Object: ['Bacon', 'Kansas City metropolitan area']

Triple: [['__subject__ Bacon Explosion __predicate__ ingredient __object__ Sausage', '__subject__ Bacon Explosion __predicate__ course __object__ Main course']]
Text: Bacon Explosion is a main course and features the ingredient of sausage among many others.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['ingredient', 'course']
Object: ['Sausage', 'Main course']

Triple: [['__subject__ Bacon Explosion __predicate__ ingredient __object__ Sausage', '__subject__ Bacon Explosion __predicate__ course __object__ Main course']]
Text: Bacon Explosion is a main course that has sausage as an ingredient.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['ingredient', 'course']
Object: ['Sausage', 'Main course']

Triple: [['__subject__ Bacon Explosion __predicate__ ingredient __object__ Sausage', '__subject__ Bacon Explosion __predicate__ region __object__ Kansas City metropolitan area']]
Text: Sausage in an ingredient in bacon explosion, originating from the Kansas City metropolitan area.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['ingredient', 'region']
Object: ['Sausage', 'Kansas City metropolitan area']

Triple: [['__subject__ Bacon Explosion __predicate__ ingredient __object__ Sausage', '__subject__ Bacon Explosion __predicate__ region __object__ Kansas City metropolitan area']]
Text: Bacon Explosion, which includes sausage, is from the Kansas City metropolitan area.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['ingredient', 'region']
Object: ['Sausage', 'Kansas City metropolitan area']

Triple: [['__subject__ Bacon Explosion __predicate__ ingredient __object__ Sausage', '__subject__ Bacon Explosion __predicate__ region __object__ Kansas City metropolitan area']]
Text: Bacon Explosion, containing sausage, is from the Kansas City metropolitan area.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['ingredient', 'region']
Object: ['Sausage', 'Kansas City metropolitan area']

Triple: [['__subject__ Bacon Explosion __predicate__ mainIngredient __object__ Bacon,sausage', '__subject__ Bacon Explosion __predicate__ ingredient __object__ Bacon']]
Text: Bacon Explosion includes sausage and bacon.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['mainIngredient', 'ingredient']
Object: ['Bacon,sausage', 'Bacon']

Triple: [['__subject__ Bacon Explosion __predicate__ mainIngredient __object__ Bacon,sausage', '__subject__ Bacon Explosion __predicate__ ingredient __object__ Bacon']]
Text: Bacon Explosion is a dish made of sausage and bacon.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['mainIngredient', 'ingredient']
Object: ['Bacon,sausage', 'Bacon']

Triple: [['__subject__ Bacon Explosion __predicate__ mainIngredient __object__ Bacon,sausage', '__subject__ Bacon Explosion __predicate__ ingredient __object__ Bacon']]
Text: The main ingredients of Bacon Explosion are both bacon and sausage.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['mainIngredient', 'ingredient']
Object: ['Bacon,sausage', 'Bacon']

Triple: [['__subject__ Bacon Explosion __predicate__ mainIngredient __object__ Bacon,sausage', '__subject__ Bacon Explosion __predicate__ ingredient __object__ Sausage']]
Text: Bacon and sausage make up a bacon explosion.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['mainIngredient', 'ingredient']
Object: ['Bacon,sausage', 'Sausage']

Triple: [['__subject__ Bacon Explosion __predicate__ mainIngredient __object__ Bacon,sausage', '__subject__ Bacon Explosion __predicate__ ingredient __object__ Sausage']]
Text: Bacon Explosion's main ingredients are sausage and bacon.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['mainIngredient', 'ingredient']
Object: ['Bacon,sausage', 'Sausage']

Triple: [['__subject__ Bacon Explosion __predicate__ mainIngredient __object__ Bacon,sausage', '__subject__ Bacon Explosion __predicate__ ingredient __object__ Sausage']]
Text: Ingredients used in a bacon explosion are bacon and sausage.
Subject: ['Bacon Explosion', 'Bacon Explosion']
Predicate: ['mainIngredient', 'ingredient']
Object: ['Bacon,sausage', 'Sausage']

Triple: [["__subject__ Bacon sandwich __predicate__ alternativeName __object__ Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin", '__subject__ Bacon sandwich __predicate__ ingredient __object__ Brown sauce']]
Text: Brown sauce can be added to a bacon sandwich and its nicknames include bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm and bacon muffin.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['alternativeName', 'ingredient']
Object: ["Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin", 'Brown sauce']

Triple: [["__subject__ Bacon sandwich __predicate__ alternativeName __object__ Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin", '__subject__ Bacon sandwich __predicate__ ingredient __object__ Brown sauce']]
Text: An ingredient in a bacon sandwich is brown sauce and it can also be known as a bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, or bacon muffin.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['alternativeName', 'ingredient']
Object: ["Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin", 'Brown sauce']

Triple: [["__subject__ Bacon sandwich __predicate__ alternativeName __object__ Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin", '__subject__ Bacon sandwich __predicate__ ingredient __object__ Brown sauce']]
Text: Bacon Sandwich includes brown sauce. The bacon sandwich also goes by the following: bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm and bacon muffin.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['alternativeName', 'ingredient']
Object: ["Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin", 'Brown sauce']

Triple: [["__subject__ Bacon sandwich __predicate__ alternativeName __object__ Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin", '__subject__ Bacon sandwich __predicate__ ingredient __object__ Condiment']]
Text: Many condiments can be used to enhance the flavour of a bacon sandwich which is also referred to as a Bacon Butty, Bacon Sarnie, Rasher Sandwich, Bacon Sanger, Piece 'n bacon, bacon cob, bacon barm and bacon muffin.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['alternativeName', 'ingredient']
Object: ["Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin", 'Condiment']

Triple: [["__subject__ Bacon sandwich __predicate__ alternativeName __object__ Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin", '__subject__ Bacon sandwich __predicate__ ingredient __object__ Condiment']]
Text: A bacon sandwich, usually containing added condiments, can also be known as a bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, or bacon muffin.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['alternativeName', 'ingredient']
Object: ["Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin", 'Condiment']

Triple: [["__subject__ Bacon sandwich __predicate__ alternativeName __object__ Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin", '__subject__ Bacon sandwich __predicate__ ingredient __object__ Condiment']]
Text: The bacon sandwich goes by the names: Bacon butty, bacon sarnie, rasher, bacon sanger, piece 'n bacon, bacon cob, bacon barm, and bacon muffin. Condiments are included in a bacon sandwich.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['alternativeName', 'ingredient']
Object: ["Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin", 'Condiment']

Triple: [['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Bacon']]
Text: Bacon sandwich is a dish from the United Kingdom and not surprisingly includes bacon as an ingredient.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['country', 'ingredient']
Object: ['United Kingdom', 'Bacon']

Triple: [['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Bacon']]
Text: Bacon is the main ingredient of the bacon sandwich that comes from the United Kingdom.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['country', 'ingredient']
Object: ['United Kingdom', 'Bacon']

Triple: [['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Bacon']]
Text: The UK is famous for its liking of the Bacon Sandwich which features a surprising main ingredient called bacon.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['country', 'ingredient']
Object: ['United Kingdom', 'Bacon']

Triple: [['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Bread']]
Text: A bacon sandwich, which comes from the United Kingdom, consists of bacon inside two slices of bread.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['country', 'ingredient']
Object: ['United Kingdom', 'Bread']

Triple: [['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Bread']]
Text: Bread is an ingredient of the bacon sandwich which comes from the United Kingdom.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['country', 'ingredient']
Object: ['United Kingdom', 'Bread']

Triple: [['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Bread']]
Text: The United Kingdom are famous for their love of a Bacon Sandwich and the main ingredient is bread.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['country', 'ingredient']
Object: ['United Kingdom', 'Bread']

Triple: [['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Brown sauce']]
Text: Brown sauce is an ingredient in a bacon sandwich which are popular in the UK.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['country', 'ingredient']
Object: ['United Kingdom', 'Brown sauce']

Triple: [['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Brown sauce']]
Text: A bacon sandwich with brown sauce is popular in the UK.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['country', 'ingredient']
Object: ['United Kingdom', 'Brown sauce']

Triple: [['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Brown sauce']]
Text: An ingredient in a bacon sandwhich is brown sauce and bacon sandwiches are popular in the U.K.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['country', 'ingredient']
Object: ['United Kingdom', 'Brown sauce']

Triple: [['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Condiment']]
Text: Bacon sandwiches are popular in the UK and condiments are ingredients used in them.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['country', 'ingredient']
Object: ['United Kingdom', 'Condiment']

Triple: [['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Condiment']]
Text: A Bacon sandwich is prepared with condiments and is a dish from the United Kingdom.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['country', 'ingredient']
Object: ['United Kingdom', 'Condiment']

Triple: [['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Condiment']]
Text: Condiments are ingredients of bacon sandwiches which come from United Kingdom.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['country', 'ingredient']
Object: ['United Kingdom', 'Condiment']

Triple: [['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Ketchup']]
Text: The bacon sandwich, to which ketchup is often added, comes from the United Kingdom.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['country', 'ingredient']
Object: ['United Kingdom', 'Ketchup']

Triple: [['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Ketchup']]
Text: Ketchup can be an ingredient in a bacon sandwich which is popular in the UK.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['country', 'ingredient']
Object: ['United Kingdom', 'Ketchup']

Triple: [['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Ketchup']]
Text: A tasty addition to a bacon sandwich is ketchup which is popular in the UK.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['country', 'ingredient']
Object: ['United Kingdom', 'Ketchup']

Triple: [['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT', '__subject__ BLT __predicate__ ingredient __object__ Lettuce']]
Text: You can use bacon inside a BLT sandwich which also includes lettuce as one of the ingredients.
Subject: ['Bacon sandwich', 'BLT']
Predicate: ['dishVariation', 'ingredient']
Object: ['BLT', 'Lettuce']

Triple: [['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT', '__subject__ BLT __predicate__ ingredient __object__ Lettuce']]
Text: A variation of a bacon sandwich is the BLT, it includes lettuce.
Subject: ['Bacon sandwich', 'BLT']
Predicate: ['dishVariation', 'ingredient']
Object: ['BLT', 'Lettuce']

Triple: [['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT', '__subject__ BLT __predicate__ ingredient __object__ Lettuce']]
Text: When lettuce is added to a bacon sandwich it is known as a BLT.
Subject: ['Bacon sandwich', 'BLT']
Predicate: ['dishVariation', 'ingredient']
Object: ['BLT', 'Lettuce']

Triple: [['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT', '__subject__ BLT __predicate__ ingredient __object__ Tomato']]
Text: A variation of a bacon sandwich is the BLT and one of the ingredients is tomatoes.
Subject: ['Bacon sandwich', 'BLT']
Predicate: ['dishVariation', 'ingredient']
Object: ['BLT', 'Tomato']

Triple: [['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT', '__subject__ BLT __predicate__ ingredient __object__ Tomato']]
Text: One variation of the bacon sandwich is the BLT, in which the tomato is a key ingredient.
Subject: ['Bacon sandwich', 'BLT']
Predicate: ['dishVariation', 'ingredient']
Object: ['BLT', 'Tomato']

Triple: [['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT', '__subject__ BLT __predicate__ ingredient __object__ Tomato']]
Text: Tomato is an ingredient of the BLT and a bacon sandwich is a variation of it.
Subject: ['Bacon sandwich', 'BLT']
Predicate: ['dishVariation', 'ingredient']
Object: ['BLT', 'Tomato']

Triple: [['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Bacon']]
Text: A better variation of the bacon sandwich is BLT which also includes lettuce and tomato.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['dishVariation', 'ingredient']
Object: ['BLT', 'Bacon']

Triple: [['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Bacon']]
Text: Another variation for a bacon sandwich is a BLT which includes the ingredient bacon.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['dishVariation', 'ingredient']
Object: ['BLT', 'Bacon']

Triple: [['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Bacon']]
Text: Bacon is an ingredient of a BLT; or bacon sandwich.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['dishVariation', 'ingredient']
Object: ['BLT', 'Bacon']

Triple: [['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Brown sauce']]
Text: Brown sauce is an ingredient in a bacon sandwich which has a variation known as the BLT.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['dishVariation', 'ingredient']
Object: ['BLT', 'Brown sauce']

Triple: [['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Condiment']]
Text: Condiments are ingredients of bacon sandwiches and a variation of it is the BLT.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['dishVariation', 'ingredient']
Object: ['BLT', 'Condiment']

Triple: [['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Condiment']]
Text: Condiments are ingredients in bacon sandwiches and a variation is the BLT.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['dishVariation', 'ingredient']
Object: ['BLT', 'Condiment']

Triple: [['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Ketchup']]
Text: A variation of a bacon sandwich is the BLT which has ketchup as one of the ingredients.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['dishVariation', 'ingredient']
Object: ['BLT', 'Ketchup']

Triple: [['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Ketchup']]
Text: The bacon sandwich, containing ketchup, is a variation of BLT.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['dishVariation', 'ingredient']
Object: ['BLT', 'Ketchup']

Triple: [['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT', '__subject__ Bacon sandwich __predicate__ ingredient __object__ Ketchup']]
Text: Ketchup is included in the bacon sandwich, also referred to as a BLT.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['dishVariation', 'ingredient']
Object: ['BLT', 'Ketchup']

Triple: [['__subject__ Bacon sandwich __predicate__ ingredient __object__ Ketchup', "__subject__ Bacon sandwich __predicate__ alternativeName __object__ Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin"]]
Text: Ketchup can be added to a bacon sandwich which can also be known as a bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, or bacon muffin.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['ingredient', 'alternativeName']
Object: ['Ketchup', "Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin"]

Triple: [['__subject__ Bacon sandwich __predicate__ ingredient __object__ Ketchup', "__subject__ Bacon sandwich __predicate__ alternativeName __object__ Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin"]]
Text: One of the ingredients of a Bacon Sandwich is Ketchup, and it can also be known as a bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, or bacon muffin.
Subject: ['Bacon sandwich', 'Bacon sandwich']
Predicate: ['ingredient', 'alternativeName']
Object: ['Ketchup', "Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin"]

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ France, United States or China', '__subject__ Baked Alaska __predicate__ ingredient __object__ Ice cream']]
Text: Baked Alaska, which has ice cream as an ingredient, is thought to have originated in the United States, France or China.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['France, United States or China', 'Ice cream']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ France, United States or China', '__subject__ Baked Alaska __predicate__ ingredient __object__ Ice cream']]
Text: Ice cream is an ingredient of Baked Alaska which originated in United States, France or China.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['France, United States or China', 'Ice cream']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ France, United States or China', '__subject__ Baked Alaska __predicate__ ingredient __object__ Meringue']]
Text: Meringue is found in Baked Alaska which France, USA and China claim to have invented.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['France, United States or China', 'Meringue']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ France, United States or China', '__subject__ Baked Alaska __predicate__ ingredient __object__ Meringue']]
Text: Baked Alaska is thought to have originated in the United States, France or China and has meringue as an ingredient.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['France, United States or China', 'Meringue']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ France, United States or China', '__subject__ Baked Alaska __predicate__ ingredient __object__ Meringue']]
Text: Baked Alaska with meringue is from France, the US and China.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['France, United States or China', 'Meringue']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ France, United States or China', '__subject__ Baked Alaska __predicate__ ingredient __object__ Sponge cake']]
Text: Sponge cake is an ingredient in baked alaska which is said to come from either France, United States or China.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['France, United States or China', 'Sponge cake']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ France, United States or China', '__subject__ Baked Alaska __predicate__ ingredient __object__ Sponge cake']]
Text: France, United States and China all claim to have invented Baked Alaska, which is made from sponge cake.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['France, United States or China', 'Sponge cake']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ China', '__subject__ Baked Alaska __predicate__ ingredient __object__ Ice cream']]
Text: Ice cream is an ingredient of Baked Alaska and is a dish in China.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['China', 'Ice cream']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ China', '__subject__ Baked Alaska __predicate__ ingredient __object__ Ice cream']]
Text: Ice cream is an ingredient in Baked Alaska, which comes from China.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['China', 'Ice cream']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ China', '__subject__ Baked Alaska __predicate__ ingredient __object__ Ice cream']]
Text: Baked Alaska is from China and one of the ingredients in it is ice cream.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['China', 'Ice cream']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ France', '__subject__ France __predicate__ language __object__ French language']]
Text: Baked Alaska comes from the country of France, where French is the national language.
Subject: ['Baked Alaska', 'France']
Predicate: ['country', 'language']
Object: ['France', 'French language']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ France', '__subject__ France __predicate__ language __object__ French language']]
Text: Baked Alaska comes from France where French is the language spoken.
Subject: ['Baked Alaska', 'France']
Predicate: ['country', 'language']
Object: ['France', 'French language']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ France', '__subject__ France __predicate__ language __object__ French language']]
Text: Baked Alaska is from France, where french is spoken.
Subject: ['Baked Alaska', 'France']
Predicate: ['country', 'language']
Object: ['France', 'French language']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ France', '__subject__ France __predicate__ leader __object__ Gérard Larcher']]
Text: Baked Alaska originates from the country of France who has Gerard Larcher as the leader.
Subject: ['Baked Alaska', 'France']
Predicate: ['country', 'leader']
Object: ['France', 'Gérard Larcher']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ France', '__subject__ France __predicate__ leader __object__ Gérard Larcher']]
Text: Baked Alaska is from France where the leader is Gerard Larcher.
Subject: ['Baked Alaska', 'France']
Predicate: ['country', 'leader']
Object: ['France', 'Gérard Larcher']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ France', '__subject__ France __predicate__ leader __object__ Gérard Larcher']]
Text: Baked Alaska is from France where the leader is Gérard Larcher.
Subject: ['Baked Alaska', 'France']
Predicate: ['country', 'leader']
Object: ['France', 'Gérard Larcher']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ United States', '__subject__ Baked Alaska __predicate__ ingredient __object__ Christmas pudding']]
Text: Baked Alaska is from the United States and includes the ingredient Christmas pudding.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['United States', 'Christmas pudding']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ United States', '__subject__ Baked Alaska __predicate__ ingredient __object__ Christmas pudding']]
Text: Christmas pudding is an ingredient in (U.S. consumed) Baked Alaska.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['United States', 'Christmas pudding']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ United States', '__subject__ Baked Alaska __predicate__ ingredient __object__ Christmas pudding']]
Text: Christmas pudding can be an ingredient of Baked Alaska which comes from the United States.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['United States', 'Christmas pudding']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ United States', '__subject__ Baked Alaska __predicate__ ingredient __object__ Ice cream']]
Text: Ice Cream is an ingredient of Baked Alaska and is a dish found in the U.S.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['United States', 'Ice cream']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ United States', '__subject__ Baked Alaska __predicate__ ingredient __object__ Ice cream']]
Text: Baked Alaska is an American dish made with ice cream.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['United States', 'Ice cream']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ United States', '__subject__ Baked Alaska __predicate__ ingredient __object__ Ice cream']]
Text: Baked Alaska, made with ice cream is from the US.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['United States', 'Ice cream']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ United States', '__subject__ Baked Alaska __predicate__ ingredient __object__ Sponge cake']]
Text: Sponge cake is an ingredient of Baked Alaska which is a dish found in the US.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['United States', 'Sponge cake']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ United States', '__subject__ Baked Alaska __predicate__ ingredient __object__ Sponge cake']]
Text: Baked Alaska which contains sponge cake is found in the U.S.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['United States', 'Sponge cake']

Triple: [['__subject__ Baked Alaska __predicate__ country __object__ United States', '__subject__ Baked Alaska __predicate__ ingredient __object__ Sponge cake']]
Text: Sponge cake is an ingredient in baked alaska which comes from the United States.
Subject: ['Baked Alaska', 'Baked Alaska']
Predicate: ['country', 'ingredient']
Object: ['United States', 'Sponge cake']

Triple: [['__subject__ Baked Alaska __predicate__ course __object__ Dessert', '__subject__ Dessert __predicate__ dishVariation __object__ Sandesh (confectionery)']]
Text: Baked Alaska and Sandesh are both desserts.
Subject: ['Baked Alaska', 'Dessert']
Predicate: ['course', 'dishVariation']
Object: ['Dessert', 'Sandesh (confectionery)']

Triple: [['__subject__ Baked Alaska __predicate__ course __object__ Dessert', '__subject__ Dessert __predicate__ dishVariation __object__ Sandesh (confectionery)']]
Text: Baked Alaska and Sandesh are desserts.
Subject: ['Baked Alaska', 'Dessert']
Predicate: ['course', 'dishVariation']
Object: ['Dessert', 'Sandesh (confectionery)']

Triple: [['__subject__ Bakewell pudding __predicate__ course __object__ Dessert', '__subject__ Bakewell pudding __predicate__ mainIngredient __object__ Ground almond, jam, butter, eggs']]
Text: Bakewell pudding is classed as a dessert and it contains ground almond, jam, butter and eggs.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['course', 'mainIngredient']
Object: ['Dessert', 'Ground almond, jam, butter, eggs']

Triple: [['__subject__ Bakewell pudding __predicate__ course __object__ Dessert', '__subject__ Bakewell pudding __predicate__ mainIngredient __object__ Ground almond, jam, butter, eggs']]
Text: The dessert, Bakewell pudding, includes: ground almonds, jam, butter and eggs.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['course', 'mainIngredient']
Object: ['Dessert', 'Ground almond, jam, butter, eggs']

Triple: [['__subject__ Bakewell pudding __predicate__ course __object__ Dessert', '__subject__ Bakewell pudding __predicate__ mainIngredient __object__ Ground almond, jam, butter, eggs']]
Text: Bakewell pudding is classed as a dessert and its main ingredients are ground almonds, jam, butter and eggs.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['course', 'mainIngredient']
Object: ['Dessert', 'Ground almond, jam, butter, eggs']

Triple: [['__subject__ Bakewell pudding __predicate__ dishVariation __object__ Bakewell tart', '__subject__ Bakewell pudding __predicate__ mainIngredient __object__ Ground almond, jam, butter, eggs']]
Text: Bakewell tart is a variation of Bakewell pudding and some of the main ingredients are ground almonds, jam, butter and eggs.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['dishVariation', 'mainIngredient']
Object: ['Bakewell tart', 'Ground almond, jam, butter, eggs']

Triple: [['__subject__ Bakewell pudding __predicate__ dishVariation __object__ Bakewell tart', '__subject__ Bakewell pudding __predicate__ mainIngredient __object__ Ground almond, jam, butter, eggs']]
Text: Bakewell tart is a variation of Bakewell pudding which uses ground almond, jam, butter and eggs as main ingredients.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['dishVariation', 'mainIngredient']
Object: ['Bakewell tart', 'Ground almond, jam, butter, eggs']

Triple: [['__subject__ Bakewell pudding __predicate__ dishVariation __object__ Bakewell tart', '__subject__ Bakewell pudding __predicate__ mainIngredient __object__ Ground almond, jam, butter, eggs']]
Text: A variant of bakewell pudding is bakewell tart and has ground almond, jam, butter and eggs as main ingredients.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['dishVariation', 'mainIngredient']
Object: ['Bakewell tart', 'Ground almond, jam, butter, eggs']

Triple: [['__subject__ Bakewell pudding __predicate__ dishVariation __object__ Bakewell tart', '__subject__ Bakewell tart __predicate__ ingredient __object__ Frangipane']]
Text: A variant of bakewell pudding is bakewell tart and it uses frangipane.
Subject: ['Bakewell pudding', 'Bakewell tart']
Predicate: ['dishVariation', 'ingredient']
Object: ['Bakewell tart', 'Frangipane']

Triple: [['__subject__ Bakewell pudding __predicate__ dishVariation __object__ Bakewell tart', '__subject__ Bakewell tart __predicate__ ingredient __object__ Frangipane']]
Text: A variant of bakewell pudding is bakewell tart which has frangipane as an ingredient.
Subject: ['Bakewell pudding', 'Bakewell tart']
Predicate: ['dishVariation', 'ingredient']
Object: ['Bakewell tart', 'Frangipane']

Triple: [['__subject__ Bakewell pudding __predicate__ dishVariation __object__ Bakewell tart', '__subject__ Bakewell tart __predicate__ ingredient __object__ Frangipane']]
Text: Bakewell tart is a variation of Bakewell pudding and one of the ingredients is frangipane.
Subject: ['Bakewell pudding', 'Bakewell tart']
Predicate: ['dishVariation', 'ingredient']
Object: ['Bakewell tart', 'Frangipane']

Triple: [['__subject__ Bakewell pudding __predicate__ region __object__ Derbyshire Dales', '__subject__ Bakewell pudding __predicate__ mainIngredient __object__ Ground almond, jam, butter, eggs']]
Text: Bakewell pudding has ground almond, jam, butter and eggs as main ingredients and originates from the Derbyshire Dales.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['region', 'mainIngredient']
Object: ['Derbyshire Dales', 'Ground almond, jam, butter, eggs']

Triple: [['__subject__ Bakewell pudding __predicate__ region __object__ Derbyshire Dales', '__subject__ Bakewell pudding __predicate__ mainIngredient __object__ Ground almond, jam, butter, eggs']]
Text: Bakewell pudding originates from the Derbyshire Dales and the ingredients include ground almonds, jam, butter and eggs.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['region', 'mainIngredient']
Object: ['Derbyshire Dales', 'Ground almond, jam, butter, eggs']

Triple: [['__subject__ Bakewell pudding __predicate__ region __object__ Derbyshire Dales', '__subject__ Bakewell pudding __predicate__ mainIngredient __object__ Ground almond, jam, butter, eggs']]
Text: Bakewell pudding has ground almond, jam, butter and eggs as main ingredients and hails from the Derbyshire Dales.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['region', 'mainIngredient']
Object: ['Derbyshire Dales', 'Ground almond, jam, butter, eggs']

Triple: [['__subject__ Bakewell pudding __predicate__ region __object__ Derbyshire Dales', '__subject__ Derbyshire Dales __predicate__ isPartOf __object__ Derbyshire']]
Text: Bakewell pudding originates from the Derbyshire Dales in the County of Derbyshire.
Subject: ['Bakewell pudding', 'Derbyshire Dales']
Predicate: ['region', 'isPartOf']
Object: ['Derbyshire Dales', 'Derbyshire']

Triple: [['__subject__ Bakewell pudding __predicate__ region __object__ Derbyshire Dales', '__subject__ Derbyshire Dales __predicate__ isPartOf __object__ Derbyshire']]
Text: Derbyshire Dales is found in the County of Derbyshire and is where the Bakewell pudding is from.
Subject: ['Bakewell pudding', 'Derbyshire Dales']
Predicate: ['region', 'isPartOf']
Object: ['Derbyshire Dales', 'Derbyshire']

Triple: [['__subject__ Bakewell pudding __predicate__ region __object__ Derbyshire Dales', '__subject__ Derbyshire Dales __predicate__ isPartOf __object__ Derbyshire']]
Text: Bakewell pudding is from Derbyshire Dales region which is found if the County of Derbyshire.
Subject: ['Bakewell pudding', 'Derbyshire Dales']
Predicate: ['region', 'isPartOf']
Object: ['Derbyshire Dales', 'Derbyshire']

Triple: [['__subject__ Bakewell pudding __predicate__ region __object__ Derbyshire Dales', '__subject__ Derbyshire Dales __predicate__ isPartOf __object__ Derbyshire']]
Text: Bakewell pudding is from the Derbyshire Dales region which is part of Derbyshire.
Subject: ['Bakewell pudding', 'Derbyshire Dales']
Predicate: ['region', 'isPartOf']
Object: ['Derbyshire Dales', 'Derbyshire']

Triple: [['__subject__ Bakewell pudding __predicate__ region __object__ Derbyshire Dales', '__subject__ Derbyshire Dales __predicate__ isPartOf __object__ Derbyshire']]
Text: Derbyshire has an area within it called the Derbyshire dales where Bakewell pudding originates.
Subject: ['Bakewell pudding', 'Derbyshire Dales']
Predicate: ['region', 'isPartOf']
Object: ['Derbyshire Dales', 'Derbyshire']

Triple: [['__subject__ Bakewell pudding __predicate__ region __object__ Derbyshire Dales', '__subject__ Derbyshire Dales __predicate__ isPartOf __object__ Derbyshire']]
Text: Bakewell pudding originates from the Derbyshire Dales, Derbyshire.
Subject: ['Bakewell pudding', 'Derbyshire Dales']
Predicate: ['region', 'isPartOf']
Object: ['Derbyshire Dales', 'Derbyshire']

Triple: [['__subject__ Bakewell pudding __predicate__ region __object__ Derbyshire Dales', '__subject__ Derbyshire Dales __predicate__ leader __object__ Patrick McLoughlin']]
Text: Bakewell pudding is from the Derbyshire Dales region where Patrick McLoughlin is a leader.
Subject: ['Bakewell pudding', 'Derbyshire Dales']
Predicate: ['region', 'leader']
Object: ['Derbyshire Dales', 'Patrick McLoughlin']

Triple: [['__subject__ Bakewell pudding __predicate__ region __object__ Derbyshire Dales', '__subject__ Derbyshire Dales __predicate__ leader __object__ Patrick McLoughlin']]
Text: Bakewell pudding originates from the Derbyshire Dales. Patrick McLoughlin is one of the leaders of this region.
Subject: ['Bakewell pudding', 'Derbyshire Dales']
Predicate: ['region', 'leader']
Object: ['Derbyshire Dales', 'Patrick McLoughlin']

Triple: [['__subject__ Bakewell pudding __predicate__ region __object__ Derbyshire Dales', '__subject__ Derbyshire Dales __predicate__ leader __object__ Patrick McLoughlin']]
Text: Patrick McLoughlin is a leader in Derbyshire Dales where Bakewell pudding originates from.
Subject: ['Bakewell pudding', 'Derbyshire Dales']
Predicate: ['region', 'leader']
Object: ['Derbyshire Dales', 'Patrick McLoughlin']

Triple: [['__subject__ Bakewell pudding __predicate__ servingTemperature __object__ Warm (freshly baked) or cold', '__subject__ Bakewell pudding __predicate__ course __object__ Dessert']]
Text: Bakewell pudding is classed as a Dessert and can be served warm (freshly baked) or cold.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['servingTemperature', 'course']
Object: ['Warm (freshly baked) or cold', 'Dessert']

Triple: [['__subject__ Bakewell pudding __predicate__ servingTemperature __object__ Warm (freshly baked) or cold', '__subject__ Bakewell pudding __predicate__ course __object__ Dessert']]
Text: Bakewell pudding is a dessert that can be served warm (freshly baked) or cold.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['servingTemperature', 'course']
Object: ['Warm (freshly baked) or cold', 'Dessert']

Triple: [['__subject__ Bakewell pudding __predicate__ servingTemperature __object__ Warm (freshly baked) or cold', '__subject__ Bakewell pudding __predicate__ course __object__ Dessert']]
Text: Bakewell pudding, a classic dessert, can be served warm (freshly baked) or cold.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['servingTemperature', 'course']
Object: ['Warm (freshly baked) or cold', 'Dessert']

Triple: [['__subject__ Bakewell pudding __predicate__ servingTemperature __object__ Warm (freshly baked) or cold', '__subject__ Bakewell pudding __predicate__ mainIngredient __object__ Ground almond, jam, butter, eggs']]
Text: Bakewell pudding includes: Ground almond, jam, butter and eggs and can be served fresh (and warm) or cold.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['servingTemperature', 'mainIngredient']
Object: ['Warm (freshly baked) or cold', 'Ground almond, jam, butter, eggs']

Triple: [['__subject__ Bakewell pudding __predicate__ servingTemperature __object__ Warm (freshly baked) or cold', '__subject__ Bakewell pudding __predicate__ mainIngredient __object__ Ground almond, jam, butter, eggs']]
Text: Bakewell pudding has ground almond, jam, butter and eggs as main ingredients and can be served warm (freshly baked) or cold.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['servingTemperature', 'mainIngredient']
Object: ['Warm (freshly baked) or cold', 'Ground almond, jam, butter, eggs']

Triple: [['__subject__ Bakewell pudding __predicate__ servingTemperature __object__ Warm (freshly baked) or cold', '__subject__ Bakewell pudding __predicate__ mainIngredient __object__ Ground almond, jam, butter, eggs']]
Text: The main ingredients of Bakewell pudding (which can be served warm or cold) are ground almonds, jam, butter and eggs.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['servingTemperature', 'mainIngredient']
Object: ['Warm (freshly baked) or cold', 'Ground almond, jam, butter, eggs']

Triple: [['__subject__ Bakewell pudding __predicate__ servingTemperature __object__ Warm (freshly baked) or cold', '__subject__ Bakewell pudding __predicate__ served __object__ Warm  or cold']]
Text: Bakewell pudding can be served either fresh and warm, or cold.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['servingTemperature', 'served']
Object: ['Warm (freshly baked) or cold', 'Warm  or cold']

Triple: [['__subject__ Bakewell pudding __predicate__ servingTemperature __object__ Warm (freshly baked) or cold', '__subject__ Bakewell pudding __predicate__ served __object__ Warm  or cold']]
Text: Bakewell pudding can be served freshly baked (warm) or served cold.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['servingTemperature', 'served']
Object: ['Warm (freshly baked) or cold', 'Warm  or cold']

Triple: [['__subject__ Bakewell pudding __predicate__ servingTemperature __object__ Warm (freshly baked) or cold', '__subject__ Bakewell pudding __predicate__ served __object__ Warm  or cold']]
Text: You can serve a Bakewell pudding warm or cold.
Subject: ['Bakewell pudding', 'Bakewell pudding']
Predicate: ['servingTemperature', 'served']
Object: ['Warm (freshly baked) or cold', 'Warm  or cold']

Triple: [['__subject__ Bakso __predicate__ country __object__ Chinese cuisine', '__subject__ Bakso __predicate__ ingredient __object__ Celery']]
Text: Celery is an ingredient of Bakso which is made in China.
Subject: ['Bakso', 'Bakso']
Predicate: ['country', 'ingredient']
Object: ['Chinese cuisine', 'Celery']

Triple: [['__subject__ Bakso __predicate__ country __object__ Chinese cuisine', '__subject__ Bakso __predicate__ ingredient __object__ Celery']]
Text: Celery is an ingredient in Bakso which is made in China.
Subject: ['Bakso', 'Bakso']
Predicate: ['country', 'ingredient']
Object: ['Chinese cuisine', 'Celery']

Triple: [['__subject__ Bakso __predicate__ country __object__ Indonesia', '__subject__ Bakso __predicate__ ingredient __object__ Celery']]
Text: Celery is an ingredient of Bakso which comes from Indonesia.
Subject: ['Bakso', 'Bakso']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Celery']

Triple: [['__subject__ Bakso __predicate__ country __object__ Indonesia', '__subject__ Bakso __predicate__ ingredient __object__ Celery']]
Text: Celery is included in the Indonesian dish, Bakso.
Subject: ['Bakso', 'Bakso']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Celery']

Triple: [['__subject__ Bakso __predicate__ country __object__ Indonesia', '__subject__ Bakso __predicate__ ingredient __object__ Celery']]
Text: Celery is an ingredient in Bakso which comes from Indonesia.
Subject: ['Bakso', 'Bakso']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Celery']

Triple: [['__subject__ Bakso __predicate__ country __object__ Indonesia', '__subject__ Bakso __predicate__ ingredient __object__ Ground beef']]
Text: Bakso, which has ground beef in it, is a dish from the country of Indonesia.
Subject: ['Bakso', 'Bakso']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Ground beef']

Triple: [['__subject__ Bakso __predicate__ country __object__ Indonesia', '__subject__ Bakso __predicate__ ingredient __object__ Ground beef']]
Text: Ground beef is an ingredient of Bakso which is a dish from Indonesia.
Subject: ['Bakso', 'Bakso']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Ground beef']

Triple: [['__subject__ Bakso __predicate__ ingredient __object__ Beef', '__subject__ Bakso __predicate__ country __object__ Chinese cuisine']]
Text: Beef is an ingredient of Bakso, from Chinese cuisine.
Subject: ['Bakso', 'Bakso']
Predicate: ['ingredient', 'country']
Object: ['Beef', 'Chinese cuisine']

Triple: [['__subject__ Bakso __predicate__ ingredient __object__ Beef', '__subject__ Bakso __predicate__ country __object__ Chinese cuisine']]
Text: Beef is an ingredient in the Chinese dish Bakso.
Subject: ['Bakso', 'Bakso']
Predicate: ['ingredient', 'country']
Object: ['Beef', 'Chinese cuisine']

Triple: [['__subject__ Bakso __predicate__ ingredient __object__ Beef', '__subject__ Bakso __predicate__ country __object__ Chinese cuisine']]
Text: Bakso, a Chinese dish, is made with beef as a main ingredient.
Subject: ['Bakso', 'Bakso']
Predicate: ['ingredient', 'country']
Object: ['Beef', 'Chinese cuisine']

Triple: [['__subject__ Bakso __predicate__ ingredient __object__ Noodle', '__subject__ Bakso __predicate__ country __object__ Chinese cuisine']]
Text: Noodles are used in Bakso which is a type of food that is made in China.
Subject: ['Bakso', 'Bakso']
Predicate: ['ingredient', 'country']
Object: ['Noodle', 'Chinese cuisine']

Triple: [['__subject__ Bakso __predicate__ ingredient __object__ Noodle', '__subject__ Bakso __predicate__ country __object__ Chinese cuisine']]
Text: Bakso is made in China and it contains noodles.
Subject: ['Bakso', 'Bakso']
Predicate: ['ingredient', 'country']
Object: ['Noodle', 'Chinese cuisine']

Triple: [['__subject__ Bakso __predicate__ ingredient __object__ Noodle', '__subject__ Bakso __predicate__ country __object__ Chinese cuisine']]
Text: The Chinese dish Bakso contains noodles.
Subject: ['Bakso', 'Bakso']
Predicate: ['ingredient', 'country']
Object: ['Noodle', 'Chinese cuisine']

Triple: [['__subject__ Bakso __predicate__ ingredient __object__ Noodle', '__subject__ Bakso __predicate__ country __object__ Indonesia']]
Text: Bakso contains noodles and comes from Indonesia.
Subject: ['Bakso', 'Bakso']
Predicate: ['ingredient', 'country']
Object: ['Noodle', 'Indonesia']

Triple: [['__subject__ Bakso __predicate__ ingredient __object__ Noodle', '__subject__ Bakso __predicate__ country __object__ Indonesia']]
Text: Bakso is a dish containing noodles, from Indonesia.
Subject: ['Bakso', 'Bakso']
Predicate: ['ingredient', 'country']
Object: ['Noodle', 'Indonesia']

Triple: [['__subject__ Bakso __predicate__ ingredient __object__ Noodle', '__subject__ Bakso __predicate__ country __object__ Indonesia']]
Text: Bakso is a noodle dish that comes from Indonesia.
Subject: ['Bakso', 'Bakso']
Predicate: ['ingredient', 'country']
Object: ['Noodle', 'Indonesia']

Triple: [['__subject__ Bakso __predicate__ ingredient __object__ Tapioca', '__subject__ Bakso __predicate__ country __object__ Chinese cuisine']]
Text: Tapioca is an ingredient in bakso which is made in China.
Subject: ['Bakso', 'Bakso']
Predicate: ['ingredient', 'country']
Object: ['Tapioca', 'Chinese cuisine']

Triple: [['__subject__ Bakso __predicate__ ingredient __object__ Tapioca', '__subject__ Bakso __predicate__ country __object__ Chinese cuisine']]
Text: Bakso is from the chinese cuisine and contains tapioca.
Subject: ['Bakso', 'Bakso']
Predicate: ['ingredient', 'country']
Object: ['Tapioca', 'Chinese cuisine']

Triple: [['__subject__ Bakso __predicate__ ingredient __object__ Tapioca', '__subject__ Bakso __predicate__ country __object__ Indonesia']]
Text: Tapioca is an ingredient in Bakso which comes from Indonesia.
Subject: ['Bakso', 'Bakso']
Predicate: ['ingredient', 'country']
Object: ['Tapioca', 'Indonesia']

Triple: [['__subject__ Bakso __predicate__ ingredient __object__ Tapioca', '__subject__ Bakso __predicate__ country __object__ Indonesia']]
Text: Tapioca is an ingredient in bakso, a dish from the country of Indonesia.
Subject: ['Bakso', 'Bakso']
Predicate: ['ingredient', 'country']
Object: ['Tapioca', 'Indonesia']

Triple: [['__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine', '__subject__ Bandeja paisa __predicate__ ingredient __object__ Hogao']]
Text: Colombian Bandeja paisa includes the ingredient, Hogao.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['country', 'ingredient']
Object: ['Colombian cuisine', 'Hogao']

Triple: [['__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine', '__subject__ Bandeja paisa __predicate__ ingredient __object__ Hogao']]
Text: Bandeja paisa, which has hogao in it, is typical Colombian cuisine.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['country', 'ingredient']
Object: ['Colombian cuisine', 'Hogao']

Triple: [['__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine', '__subject__ Bandeja paisa __predicate__ ingredient __object__ Hogao']]
Text: Colombian dish Bandeja paisa has Hogao as an ingredient.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['country', 'ingredient']
Object: ['Colombian cuisine', 'Hogao']

Triple: [['__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine', '__subject__ Bandeja paisa __predicate__ ingredient __object__ Pork belly']]
Text: Bandeja paisa is part of Colombian cuisine and one of the ingredients is pork belly.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['country', 'ingredient']
Object: ['Colombian cuisine', 'Pork belly']

Triple: [['__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine', '__subject__ Bandeja paisa __predicate__ ingredient __object__ Pork belly']]
Text: Pork belly is an ingredient in Bandeja paisa, which is a dish from Colombia.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['country', 'ingredient']
Object: ['Colombian cuisine', 'Pork belly']

Triple: [['__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine', '__subject__ Bandeja paisa __predicate__ ingredient __object__ Pork belly']]
Text: Pork belly is an ingredient in the typical colombian dish of bandeja paisa.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['country', 'ingredient']
Object: ['Colombian cuisine', 'Pork belly']

Triple: [['__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine', '__subject__ Bandeja paisa __predicate__ region __object__ Antioquia Department']]
Text: Bandeja paisa is a popular Colombian cuisine, originating from the Antioquia Department region.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['country', 'region']
Object: ['Colombian cuisine', 'Antioquia Department']

Triple: [['__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine', '__subject__ Bandeja paisa __predicate__ region __object__ Antioquia Department']]
Text: A typical dish found in Colombia is Bandeja paisa, which comes from the Antioquia Department region.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['country', 'region']
Object: ['Colombian cuisine', 'Antioquia Department']

Triple: [['__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine', '__subject__ Bandeja paisa __predicate__ region __object__ Antioquia Department']]
Text: Bandeja paisa is a Colombian dish from the Antioquia Department region.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['country', 'region']
Object: ['Colombian cuisine', 'Antioquia Department']

Triple: [['__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine', '__subject__ Bandeja paisa __predicate__ region __object__ Paisa Region']]
Text: Bandeja paisa is a traditional dish from the Paisa region and is part of Colombian cuisine.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['country', 'region']
Object: ['Colombian cuisine', 'Paisa Region']

Triple: [['__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine', '__subject__ Bandeja paisa __predicate__ region __object__ Paisa Region']]
Text: Bandeja paisa is typical Colombian cuisine from the Paisa region.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['country', 'region']
Object: ['Colombian cuisine', 'Paisa Region']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Arepa', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Colombian Bandeja paisa boasts the ingredient Arepa.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Arepa', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Arepa', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Arepa is an ingredient of Bandeja paisa, which is a dish from Colombian cuisine.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Arepa', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Arepa', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Arepa is an ingredient in the Colombian cuisine Bandeja paisa.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Arepa', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Avocado', '__subject__ Avocado __predicate__ family __object__ Lauraceae']]
Text: The avocado plant belongs to the Lauraceae family and is one of the ingredients in the dish Bandeja paisa.
Subject: ['Bandeja paisa', 'Avocado']
Predicate: ['ingredient', 'family']
Object: ['Avocado', 'Lauraceae']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Avocado', '__subject__ Avocado __predicate__ family __object__ Lauraceae']]
Text: Avocado, a member of the Lauraceae family, is an ingredient in Bandeja paisa.
Subject: ['Bandeja paisa', 'Avocado']
Predicate: ['ingredient', 'family']
Object: ['Avocado', 'Lauraceae']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Avocado', '__subject__ Avocado __predicate__ family __object__ Lauraceae']]
Text: Avocado is an ingredient of Bandeja paisa and is part of the Lauraceae family.
Subject: ['Bandeja paisa', 'Avocado']
Predicate: ['ingredient', 'family']
Object: ['Avocado', 'Lauraceae']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Avocado', '__subject__ Avocado __predicate__ genus __object__ Persea']]
Text: An ingredient of the dish bandeja paisa is avocado which is the genus of persea.
Subject: ['Bandeja paisa', 'Avocado']
Predicate: ['ingredient', 'genus']
Object: ['Avocado', 'Persea']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Avocado', '__subject__ Avocado __predicate__ genus __object__ Persea']]
Text: Persea is the genus of the avocado which is an ingredient in the dish Bandeja paisa.
Subject: ['Bandeja paisa', 'Avocado']
Predicate: ['ingredient', 'genus']
Object: ['Avocado', 'Persea']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Avocado', '__subject__ Avocado __predicate__ genus __object__ Persea']]
Text: Avocado (genus Persea) is one of the ingredients of the dish Bandeja paisa.
Subject: ['Bandeja paisa', 'Avocado']
Predicate: ['ingredient', 'genus']
Object: ['Avocado', 'Persea']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Avocado', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Avocado is one of the ingredients in the Colombian dish Bandeja paisa.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Avocado', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Avocado', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Colombian Bandeja paisa includes the ingredient, avocado.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Avocado', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Avocado', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Bandeja paisa is a dish from Colombian cuisine and uses avocado in it.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Avocado', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Black pudding', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Colombian cuisine includes a dish which has black pudding as an ingredient and that is called bandeja paisa.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Black pudding', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Black pudding', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Colombian Bandeja paisa includes the component, black pudding.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Black pudding', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Black pudding', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Black pudding is an ingredient in the Colombian dish Bandeja paisa.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Black pudding', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Chorizo', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Chorizo is an ingredient of the typical Colombian cuisine known as Bandeja Paisa.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Chorizo', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Chorizo', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Bandeja paisa, which uses chorizo, is typical Colombian cuisine.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Chorizo', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Chorizo', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Bandeja paisa, containing Chorizo, is part of Colombian cuisine.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Chorizo', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Fried egg', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Bandeja paisa is typical Colombian cuisine, it includes a fried egg.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Fried egg', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Fried egg', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Colombian bandeja paisa includes a fried egg.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Fried egg', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Fried egg', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Fried egg is an ingredient of Bandeja paisa which is a dish from Colombian cuisine.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Fried egg', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Ground meat', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Ground meat is an ingredient in bandeja paisa, which is part of Colombian cuisine.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Ground meat', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Ground meat', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Ground meat is an ingredient in bandeja paisa, which is typical Colombian cuisine.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Ground meat', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Ground meat', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Bandeja paisa is a dish from Colombian cuisine and it uses ground meat.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Ground meat', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Kidney bean', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Bandeja paisa (Colombia) includes the ingredient, kidney beans.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Kidney bean', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Kidney bean', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Bandeja paisa is a dish from Colombian cuisine and contains kidney beans.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Kidney bean', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Kidney bean', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: The kidney bean is an ingredient in Bandeja paisa, which is a dish from Colombia.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Kidney bean', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Lemon', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Lemon is an ingredient of Bandeja paisa and is part of Colombian cuisine.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Lemon', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Lemon', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Bandeja paisa is a Colombian dish and has lemon as one of the ingredients.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Lemon', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Lemon', '__subject__ Bandeja paisa __predicate__ country __object__ Colombian cuisine']]
Text: Lemon is an ingredient of Bandeja paisa which is typical Colombian cuisine.
Subject: ['Bandeja paisa', 'Bandeja paisa']
Predicate: ['ingredient', 'country']
Object: ['Lemon', 'Colombian cuisine']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Lemon', '__subject__ Lemon __predicate__ family __object__ Rutaceae']]
Text: Bandeja paisa includes a member of the Rutaceae family; lemon.
Subject: ['Bandeja paisa', 'Lemon']
Predicate: ['ingredient', 'family']
Object: ['Lemon', 'Rutaceae']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Lemon', '__subject__ Lemon __predicate__ family __object__ Rutaceae']]
Text: Lemon is a member of the family Rutaceae and is an ingredient in bandeja paisa.
Subject: ['Bandeja paisa', 'Lemon']
Predicate: ['ingredient', 'family']
Object: ['Lemon', 'Rutaceae']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Lemon', '__subject__ Lemon __predicate__ family __object__ Rutaceae']]
Text: Lemon is an ingredient of Bandeja paisa which is a member of the Rutaceae family.
Subject: ['Bandeja paisa', 'Lemon']
Predicate: ['ingredient', 'family']
Object: ['Lemon', 'Rutaceae']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Lemon', '__subject__ Lemon __predicate__ order __object__ Sapindales']]
Text: Lemon comes from the plant order Sapindales and is an ingredient in the dish Bandeja paisa.
Subject: ['Bandeja paisa', 'Lemon']
Predicate: ['ingredient', 'order']
Object: ['Lemon', 'Sapindales']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Lemon', '__subject__ Lemon __predicate__ order __object__ Sapindales']]
Text: Lemons are classified in the order sapindales and are an ingredient in bandeja paisa.
Subject: ['Bandeja paisa', 'Lemon']
Predicate: ['ingredient', 'order']
Object: ['Lemon', 'Sapindales']

Triple: [['__subject__ Bandeja paisa __predicate__ ingredient __object__ Lemon', '__subject__ Lemon __predicate__ order __object__ Sapindales']]
Text: A Bandeja Paisa uses the ingredient of a lemon and its included in the order of the Sapindales.
Subject: ['Bandeja paisa', 'Lemon']
Predicate: ['ingredient', 'order']
Object: ['Lemon', 'Sapindales']

Triple: [['__subject__ Barny Cakes __predicate__ country __object__ France', '__subject__ France __predicate__ language __object__ French language']]
Text: Barny Cakes originated in France, where French is a spoken language.
Subject: ['Barny Cakes', 'France']
Predicate: ['country', 'language']
Object: ['France', 'French language']

Triple: [['__subject__ Barny Cakes __predicate__ country __object__ France', '__subject__ France __predicate__ language __object__ French language']]
Text: Barny cakes come from France where French is the national language.
Subject: ['Barny Cakes', 'France']
Predicate: ['country', 'language']
Object: ['France', 'French language']

Triple: [['__subject__ Barny Cakes __predicate__ country __object__ France', '__subject__ France __predicate__ language __object__ French language']]
Text: Barny cakes are found in France where the French language is spoken.
Subject: ['Barny Cakes', 'France']
Predicate: ['country', 'language']
Object: ['France', 'French language']

Triple: [['__subject__ Barny Cakes __predicate__ country __object__ France', '__subject__ France __predicate__ leader __object__ François Hollande']]
Text: Barny cakes can be found in France where the leader is François Hollande.
Subject: ['Barny Cakes', 'France']
Predicate: ['country', 'leader']
Object: ['France', 'François Hollande']

Triple: [['__subject__ Barny Cakes __predicate__ country __object__ France', '__subject__ France __predicate__ leader __object__ François Hollande']]
Text: The country Barny Cakes come from is France, where Francois Hollande is a leader.
Subject: ['Barny Cakes', 'France']
Predicate: ['country', 'leader']
Object: ['France', 'François Hollande']

Triple: [['__subject__ Barny Cakes __predicate__ country __object__ France', '__subject__ France __predicate__ leader __object__ Gérard Larcher']]
Text: The leader of France is Gerard Larcher and the country is home to the dish known as Barny cakes.
Subject: ['Barny Cakes', 'France']
Predicate: ['country', 'leader']
Object: ['France', 'Gérard Larcher']

Triple: [['__subject__ Barny Cakes __predicate__ country __object__ France', '__subject__ France __predicate__ leader __object__ Gérard Larcher']]
Text: Barny cakes are available in France, where Gerard Larcher is the leader.
Subject: ['Barny Cakes', 'France']
Predicate: ['country', 'leader']
Object: ['France', 'Gérard Larcher']

Triple: [['__subject__ Barny Cakes __predicate__ country __object__ France', '__subject__ France __predicate__ leader __object__ Gérard Larcher']]
Text: Barny cakes can be found in France where the leader is Gérard Larcher.
Subject: ['Barny Cakes', 'France']
Predicate: ['country', 'leader']
Object: ['France', 'Gérard Larcher']

Triple: [['__subject__ Barny Cakes __predicate__ country __object__ France', '__subject__ France __predicate__ leader __object__ Manuel Valls']]
Text: Barny Cakes originated in France (led by Manuel Valls).
Subject: ['Barny Cakes', 'France']
Predicate: ['country', 'leader']
Object: ['France', 'Manuel Valls']

Triple: [['__subject__ Barny Cakes __predicate__ country __object__ France', '__subject__ France __predicate__ leader __object__ Manuel Valls']]
Text: Barny cakes can be found in France where Manuel Valls is a leader.
Subject: ['Barny Cakes', 'France']
Predicate: ['country', 'leader']
Object: ['France', 'Manuel Valls']

Triple: [['__subject__ Barny Cakes __predicate__ country __object__ France', '__subject__ France __predicate__ leader __object__ Manuel Valls']]
Text: Barny cakes are found in France where Manuel Valls is a leader.
Subject: ['Barny Cakes', 'France']
Predicate: ['country', 'leader']
Object: ['France', 'Manuel Valls']

Triple: [['__subject__ Barny Cakes __predicate__ fat __object__ 4.8 g', '__subject__ Barny Cakes __predicate__ carbohydrate __object__ 18.0 g']]
Text: Barney cakes contain 4.8g of fat and 18g of carbs.
Subject: ['Barny Cakes', 'Barny Cakes']
Predicate: ['fat', 'carbohydrate']
Object: ['4.8 g', '18.0 g']

Triple: [['__subject__ Barny Cakes __predicate__ fat __object__ 4.8 g', '__subject__ Barny Cakes __predicate__ carbohydrate __object__ 18.0 g']]
Text: Barny Cakes contain 4.8g of fat and 18.0g of carbohydrates.
Subject: ['Barny Cakes', 'Barny Cakes']
Predicate: ['fat', 'carbohydrate']
Object: ['4.8 g', '18.0 g']

Triple: [['__subject__ Barny Cakes __predicate__ fat __object__ 4.8 g', '__subject__ Barny Cakes __predicate__ carbohydrate __object__ 18.0 g']]
Text: Barny cakes contain 4.8 g of fat and have 18 g of carbohydrates.
Subject: ['Barny Cakes', 'Barny Cakes']
Predicate: ['fat', 'carbohydrate']
Object: ['4.8 g', '18.0 g']

Triple: [['__subject__ Barny Cakes __predicate__ ingredient __object__ Sponge cake', '__subject__ Barny Cakes __predicate__ country __object__ France']]
Text: Barny cakes can be found in France and are made with sponge cake.
Subject: ['Barny Cakes', 'Barny Cakes']
Predicate: ['ingredient', 'country']
Object: ['Sponge cake', 'France']

Triple: [['__subject__ Barny Cakes __predicate__ ingredient __object__ Sponge cake', '__subject__ Barny Cakes __predicate__ country __object__ France']]
Text: Barny cakes, which are made from sponge cake, come from France.
Subject: ['Barny Cakes', 'Barny Cakes']
Predicate: ['ingredient', 'country']
Object: ['Sponge cake', 'France']

Triple: [['__subject__ Barny Cakes __predicate__ ingredient __object__ Sponge cake', '__subject__ Barny Cakes __predicate__ country __object__ France']]
Text: Barny cakes come from France and are made with sponge cake.
Subject: ['Barny Cakes', 'Barny Cakes']
Predicate: ['ingredient', 'country']
Object: ['Sponge cake', 'France']

Triple: [['__subject__ Barny Cakes __predicate__ protein __object__ 1.8 g', '__subject__ Barny Cakes __predicate__ carbohydrate __object__ 18.0 g']]
Text: Barny cakes contain 1.8 g of protein and 18 g of carbs.
Subject: ['Barny Cakes', 'Barny Cakes']
Predicate: ['protein', 'carbohydrate']
Object: ['1.8 g', '18.0 g']

Triple: [['__subject__ Barny Cakes __predicate__ protein __object__ 1.8 g', '__subject__ Barny Cakes __predicate__ carbohydrate __object__ 18.0 g']]
Text: Barny cakes contain 1.8 g of protein and 18.0g of carbohydrates.
Subject: ['Barny Cakes', 'Barny Cakes']
Predicate: ['protein', 'carbohydrate']
Object: ['1.8 g', '18.0 g']

Triple: [['__subject__ Barny Cakes __predicate__ year __object__ 1999', '__subject__ Barny Cakes __predicate__ carbohydrate __object__ 18.0 g']]
Text: Barny Cakes (1999 introduction) have 18 g. or carbohydrates.
Subject: ['Barny Cakes', 'Barny Cakes']
Predicate: ['year', 'carbohydrate']
Object: ['1999', '18.0 g']

Triple: [['__subject__ Barny Cakes __predicate__ year __object__ 1999', '__subject__ Barny Cakes __predicate__ carbohydrate __object__ 18.0 g']]
Text: Barny cakes have 18.0g of carbohydrates and were invented in 1999.
Subject: ['Barny Cakes', 'Barny Cakes']
Predicate: ['year', 'carbohydrate']
Object: ['1999', '18.0 g']

Triple: [['__subject__ Barny Cakes __predicate__ year __object__ 1999', '__subject__ Barny Cakes __predicate__ carbohydrate __object__ 18.0 g']]
Text: Barny cakes have 18 grams of carbs and were invented in 1999.
Subject: ['Barny Cakes', 'Barny Cakes']
Predicate: ['year', 'carbohydrate']
Object: ['1999', '18.0 g']

Triple: [['__subject__ Batagor __predicate__ country __object__ Indonesia', '__subject__ Batagor __predicate__ mainIngredient __object__ fried fish dumpling with tofu and vegetables in peanut sauce']]
Text: Batagor has these main ingredients: fried fish dumplings, tofu and vegetables in peanut sauce and comes from Indonesia.
Subject: ['Batagor', 'Batagor']
Predicate: ['country', 'mainIngredient']
Object: ['Indonesia', 'fried fish dumpling with tofu and vegetables in peanut sauce']

Triple: [['__subject__ Batagor __predicate__ country __object__ Indonesia', '__subject__ Batagor __predicate__ mainIngredient __object__ fried fish dumpling with tofu and vegetables in peanut sauce']]
Text: A batagor is a fried fish dumpling with tofu and vegetables in peanut sauce and can be found in Indonesia.
Subject: ['Batagor', 'Batagor']
Predicate: ['country', 'mainIngredient']
Object: ['Indonesia', 'fried fish dumpling with tofu and vegetables in peanut sauce']

Triple: [['__subject__ Batagor __predicate__ country __object__ Indonesia', '__subject__ Batagor __predicate__ mainIngredient __object__ fried fish dumpling with tofu and vegetables in peanut sauce']]
Text: Batagor ingredients are fried fish dumpling with tofu and vegetables in peanut sauce and it is found in Indonesia.
Subject: ['Batagor', 'Batagor']
Predicate: ['country', 'mainIngredient']
Object: ['Indonesia', 'fried fish dumpling with tofu and vegetables in peanut sauce']

Triple: [['__subject__ Batagor __predicate__ country __object__ Indonesia', '__subject__ Batagor __predicate__ servingTemperature __object__ hot']]
Text: Batagor is a hot dish served in Indonesia.
Subject: ['Batagor', 'Batagor']
Predicate: ['country', 'servingTemperature']
Object: ['Indonesia', 'hot']

Triple: [['__subject__ Batagor __predicate__ country __object__ Indonesia', '__subject__ Batagor __predicate__ servingTemperature __object__ hot']]
Text: Batagor is found in the country of Indonesia and should be served hot.
Subject: ['Batagor', 'Batagor']
Predicate: ['country', 'servingTemperature']
Object: ['Indonesia', 'hot']

Triple: [['__subject__ Batagor __predicate__ country __object__ Indonesia', '__subject__ Batagor __predicate__ servingTemperature __object__ hot']]
Text: The country of Indonesia like to serve hot dishes of the main meal Batagor.
Subject: ['Batagor', 'Batagor']
Predicate: ['country', 'servingTemperature']
Object: ['Indonesia', 'hot']

Triple: [['__subject__ Batagor __predicate__ dishVariation __object__ Shumai', '__subject__ Batagor __predicate__ dishVariation __object__ Siomay']]
Text: Batagor (which is a variation of Siomay) and shumai are variations on the same dish.
Subject: ['Batagor', 'Batagor']
Predicate: ['dishVariation', 'dishVariation']
Object: ['Shumai', 'Siomay']

Triple: [['__subject__ Batagor __predicate__ dishVariation __object__ Shumai', '__subject__ Batagor __predicate__ dishVariation __object__ Siomay']]
Text: Batagor, Siomay and shumai are variations on the same dish.
Subject: ['Batagor', 'Batagor']
Predicate: ['dishVariation', 'dishVariation']
Object: ['Shumai', 'Siomay']

Triple: [['__subject__ Batagor __predicate__ dishVariation __object__ Shumai', '__subject__ Batagor __predicate__ dishVariation __object__ Siomay']]
Text: The Siomay dish has variations including Batagor and Shumai.
Subject: ['Batagor', 'Batagor']
Predicate: ['dishVariation', 'dishVariation']
Object: ['Shumai', 'Siomay']

Triple: [['__subject__ Batagor __predicate__ dishVariation __object__ Siomay', '__subject__ Batagor __predicate__ country __object__ Indonesia']]
Text: Batagor is a variation of a Siomay dish found in Indonesia.
Subject: ['Batagor', 'Batagor']
Predicate: ['dishVariation', 'country']
Object: ['Siomay', 'Indonesia']

Triple: [['__subject__ Batagor __predicate__ dishVariation __object__ Siomay', '__subject__ Batagor __predicate__ country __object__ Indonesia']]
Text: Batagor is a variation of the Siomay dish and is found in Indonesia.
Subject: ['Batagor', 'Batagor']
Predicate: ['dishVariation', 'country']
Object: ['Siomay', 'Indonesia']

Triple: [['__subject__ Batagor __predicate__ dishVariation __object__ Siomay', '__subject__ Siomay __predicate__ dishVariation __object__ Shumai']]
Text: Batagor, Shumai and Siomay are variations of the same dish.
Subject: ['Batagor', 'Siomay']
Predicate: ['dishVariation', 'dishVariation']
Object: ['Siomay', 'Shumai']

Triple: [['__subject__ Batagor __predicate__ dishVariation __object__ Siomay', '__subject__ Siomay __predicate__ dishVariation __object__ Shumai']]
Text: Shumai and Batagor are variations of the Siomay dish.
Subject: ['Batagor', 'Siomay']
Predicate: ['dishVariation', 'dishVariation']
Object: ['Siomay', 'Shumai']

Triple: [['__subject__ Batagor __predicate__ ingredient __object__ Peanut sauce', '__subject__ Batagor __predicate__ dishVariation __object__ Shumai']]
Text: Shumai is a variation of Batagor which has Peanut sauce as an ingredient.
Subject: ['Batagor', 'Batagor']
Predicate: ['ingredient', 'dishVariation']
Object: ['Peanut sauce', 'Shumai']

Triple: [['__subject__ Batagor __predicate__ ingredient __object__ Peanut sauce', '__subject__ Batagor __predicate__ dishVariation __object__ Shumai']]
Text: You can use peanut sauce as an ingredient of Batagor and Shumai is a variation of the same dish.
Subject: ['Batagor', 'Batagor']
Predicate: ['ingredient', 'dishVariation']
Object: ['Peanut sauce', 'Shumai']

Triple: [['__subject__ Batagor __predicate__ ingredient __object__ Peanut sauce', '__subject__ Batagor __predicate__ dishVariation __object__ Shumai']]
Text: Batagor is a variation of Shumai and it uses peanut sauce.
Subject: ['Batagor', 'Batagor']
Predicate: ['ingredient', 'dishVariation']
Object: ['Peanut sauce', 'Shumai']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Batchoy __predicate__ ingredient __object__ Beef']]
Text: The Philippines like to enjoy the dish Batchoy which has a main ingredient of Beef.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Beef']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Batchoy __predicate__ ingredient __object__ Beef']]
Text: Batchoy is a dish from the Philippines that contains beef.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Beef']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Batchoy __predicate__ ingredient __object__ Beef']]
Text: Beef is an ingredient of Batchoy which comes from the Philippines.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Beef']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Batchoy __predicate__ ingredient __object__ Noodle']]
Text: Noodles are an ingredient in batchoy which is eaten in the Philippines.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Noodle']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Batchoy __predicate__ ingredient __object__ Noodle']]
Text: Noodles are an ingredient in the Philippines dish called Batchoy.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Noodle']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Batchoy __predicate__ ingredient __object__ Noodle']]
Text: An ingredient in batchoy are noodles and they originate from the Philippines.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Noodle']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Batchoy __predicate__ ingredient __object__ Pork']]
Text: Batchoy is eaten in the Philippines and one of the ingredients in it is pork.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Pork']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Batchoy __predicate__ ingredient __object__ Pork']]
Text: Batchoy is a Philippine dish that contains the ingredient pork.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Pork']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Batchoy __predicate__ ingredient __object__ Pork']]
Text: Philippines is the country Batchoy comes from, it includes the ingredient pork.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Pork']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Batchoy __predicate__ ingredient __object__ Vegetable']]
Text: Vegetables are ingredients of Batchoy which is eaten in the Philippines.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Vegetable']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Batchoy __predicate__ ingredient __object__ Vegetable']]
Text: Vegetables are used in Batchoy which is from the country of the Philippines.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Vegetable']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Batchoy __predicate__ ingredient __object__ Vegetable']]
Text: Vegetables are an ingredient of Batchoy which comes from the Philippines.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Vegetable']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Batchoy __predicate__ mainIngredient __object__ noodles, pork organs, vegetables, chicken, shrimp, beef']]
Text: The main ingredients of Batchoy, a dish from the Philippines, are noodles, pork organs, vegetables, chicken, shrimp and beef.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['country', 'mainIngredient']
Object: ['Philippines', 'noodles, pork organs, vegetables, chicken, shrimp, beef']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Batchoy __predicate__ mainIngredient __object__ noodles, pork organs, vegetables, chicken, shrimp, beef']]
Text: Batchoy, which is eaten in the Philippines, is mainly comprised of noodles, pork organs, vegetables, chicken, shrimp and beef.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['country', 'mainIngredient']
Object: ['Philippines', 'noodles, pork organs, vegetables, chicken, shrimp, beef']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Batchoy __predicate__ mainIngredient __object__ noodles, pork organs, vegetables, chicken, shrimp, beef']]
Text: Batchoy comes from the Philippines and contains noodles, pork organs, vegetables, chicken, shrimp and beef.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['country', 'mainIngredient']
Object: ['Philippines', 'noodles, pork organs, vegetables, chicken, shrimp, beef']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Philippines __predicate__ ethnicGroup __object__ Igorot people']]
Text: Philippines is the country Batchoy comes from, one of the ethnic groups there is the Igorot people.
Subject: ['Batchoy', 'Philippines']
Predicate: ['country', 'ethnicGroup']
Object: ['Philippines', 'Igorot people']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Philippines __predicate__ ethnicGroup __object__ Igorot people']]
Text: Batchoy is eaten in the Philippines where the Igorot people are an ethnic group.
Subject: ['Batchoy', 'Philippines']
Predicate: ['country', 'ethnicGroup']
Object: ['Philippines', 'Igorot people']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Philippines __predicate__ ethnicGroup __object__ Ilocano people']]
Text: Batchoy is eaten in the Philippines where the Ilocano people are an ethnic group.
Subject: ['Batchoy', 'Philippines']
Predicate: ['country', 'ethnicGroup']
Object: ['Philippines', 'Ilocano people']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Philippines __predicate__ ethnicGroup __object__ Ilocano people']]
Text: Batchoy is a dis found in the Philippines; the Ilocano people are an ethnic group living there.
Subject: ['Batchoy', 'Philippines']
Predicate: ['country', 'ethnicGroup']
Object: ['Philippines', 'Ilocano people']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Philippines __predicate__ ethnicGroup __object__ Ilocano people']]
Text: The Ilocano people are an ethnic group from the Philippines where Batchoy is eaten.
Subject: ['Batchoy', 'Philippines']
Predicate: ['country', 'ethnicGroup']
Object: ['Philippines', 'Ilocano people']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Philippines __predicate__ ethnicGroup __object__ Moro people']]
Text: Batchoy and the ethnic group The Moro People come from the Philippines.
Subject: ['Batchoy', 'Philippines']
Predicate: ['country', 'ethnicGroup']
Object: ['Philippines', 'Moro people']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Philippines __predicate__ ethnicGroup __object__ Moro people']]
Text: The Moro people come from the Philippines, where Batchoy is served.
Subject: ['Batchoy', 'Philippines']
Predicate: ['country', 'ethnicGroup']
Object: ['Philippines', 'Moro people']

Triple: [['__subject__ Batchoy __predicate__ country __object__ Philippines', '__subject__ Philippines __predicate__ ethnicGroup __object__ Moro people']]
Text: Batchoy is eaten by the Moro people, an ethnic group in the Philippines.
Subject: ['Batchoy', 'Philippines']
Predicate: ['country', 'ethnicGroup']
Object: ['Philippines', 'Moro people']

Triple: [['__subject__ Batchoy __predicate__ course __object__ Soup', '__subject__ Batchoy __predicate__ mainIngredient __object__ noodles, pork organs, vegetables, chicken, shrimp, beef']]
Text: The main ingredients of Batchoy are noodles, pork organs, vegetables, chicken, shrimp and beef and it's served as a soup course.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['course', 'mainIngredient']
Object: ['Soup', 'noodles, pork organs, vegetables, chicken, shrimp, beef']

Triple: [['__subject__ Batchoy __predicate__ course __object__ Soup', '__subject__ Batchoy __predicate__ mainIngredient __object__ noodles, pork organs, vegetables, chicken, shrimp, beef']]
Text: Batchoy is a soup dish made with noodles, pork organs, vegetables, chicken, shrimp and beef.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['course', 'mainIngredient']
Object: ['Soup', 'noodles, pork organs, vegetables, chicken, shrimp, beef']

Triple: [['__subject__ Batchoy __predicate__ course __object__ Soup', '__subject__ Batchoy __predicate__ mainIngredient __object__ noodles, pork organs, vegetables, chicken, shrimp, beef']]
Text: Batchoy soup includes: noodles, pork organs, vegetables, chicken, shrimp and beef.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['course', 'mainIngredient']
Object: ['Soup', 'noodles, pork organs, vegetables, chicken, shrimp, beef']

Triple: [['__subject__ Batchoy __predicate__ ingredient __object__ Chicken', '__subject__ Batchoy __predicate__ country __object__ Philippines']]
Text: Chicken is an ingredient in Batchoy which is eaten in the Philippines.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['ingredient', 'country']
Object: ['Chicken', 'Philippines']

Triple: [['__subject__ Batchoy __predicate__ ingredient __object__ Chicken', '__subject__ Batchoy __predicate__ country __object__ Philippines']]
Text: Chicken is an ingredient in Batchoy which comes from the Philippines.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['ingredient', 'country']
Object: ['Chicken', 'Philippines']

Triple: [['__subject__ Batchoy __predicate__ ingredient __object__ Chicken', '__subject__ Batchoy __predicate__ country __object__ Philippines']]
Text: Batchoy is eaten in the Philippines, is made with chicken.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['ingredient', 'country']
Object: ['Chicken', 'Philippines']

Triple: [['__subject__ Batchoy __predicate__ ingredient __object__ Chicken', '__subject__ Chicken __predicate__ class __object__ Bird']]
Text: Batchoy includes chicken which is a class of bird.
Subject: ['Batchoy', 'Chicken']
Predicate: ['ingredient', 'class']
Object: ['Chicken', 'Bird']

Triple: [['__subject__ Batchoy __predicate__ ingredient __object__ Chicken', '__subject__ Chicken __predicate__ class __object__ Bird']]
Text: Batchoy includes poultry (bird); chicken.
Subject: ['Batchoy', 'Chicken']
Predicate: ['ingredient', 'class']
Object: ['Chicken', 'Bird']

Triple: [['__subject__ Batchoy __predicate__ ingredient __object__ Chicken', '__subject__ Chicken __predicate__ class __object__ Bird']]
Text: Chicken (a bird), is an ingredient found in Batchoy.
Subject: ['Batchoy', 'Chicken']
Predicate: ['ingredient', 'class']
Object: ['Chicken', 'Bird']

Triple: [['__subject__ Batchoy __predicate__ mainIngredient __object__ noodles, pork organs, vegetables, chicken, shrimp, beef', '__subject__ Batchoy __predicate__ region __object__ La Paz, Iloilo City']]
Text: Noodles, pork organs, vegetables, chicken, shrimp and beef are main ingredients of Batchoy which is found in La Paz, Iloilo City.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['mainIngredient', 'region']
Object: ['noodles, pork organs, vegetables, chicken, shrimp, beef', 'La Paz, Iloilo City']

Triple: [['__subject__ Batchoy __predicate__ mainIngredient __object__ noodles, pork organs, vegetables, chicken, shrimp, beef', '__subject__ Batchoy __predicate__ region __object__ La Paz, Iloilo City']]
Text: Batchoy which originated in La Paz, Iloilo City uses noodles, pork organs, vegetables, chicken, shrimp and beef as its main ingredients.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['mainIngredient', 'region']
Object: ['noodles, pork organs, vegetables, chicken, shrimp, beef', 'La Paz, Iloilo City']

Triple: [['__subject__ Batchoy __predicate__ mainIngredient __object__ noodles, pork organs, vegetables, chicken, shrimp, beef', '__subject__ Batchoy __predicate__ region __object__ La Paz, Iloilo City']]
Text: Batchoy originated from the region of La Paz, Iloilo City and the main ingredients are noodles, pork organs, vegetables, chicken, shrimp, and beef.
Subject: ['Batchoy', 'Batchoy']
Predicate: ['mainIngredient', 'region']
Object: ['noodles, pork organs, vegetables, chicken, shrimp, beef', 'La Paz, Iloilo City']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Indonesia', '__subject__ Beef kway teow __predicate__ ingredient __object__ Oyster sauce']]
Text: Oyster sauce is an ingredient in the Indonesian dish of Beef kway teow.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Oyster sauce']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Indonesia', '__subject__ Beef kway teow __predicate__ ingredient __object__ Oyster sauce']]
Text: Beef kway teow comes from the country of Indonesia, it includes oyster sauce.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Oyster sauce']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Indonesia', '__subject__ Beef kway teow __predicate__ ingredient __object__ Oyster sauce']]
Text: Oyster sauce is used in Beef kway teow which is a popular food of Indonesia.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Oyster sauce']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Indonesia', '__subject__ Beef kway teow __predicate__ ingredient __object__ Palm sugar']]
Text: Palm sugar is an ingredient of Beef kway teow which is an Indonesian dish.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Palm sugar']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Indonesia', '__subject__ Beef kway teow __predicate__ ingredient __object__ Palm sugar']]
Text: Palm sugar is an ingredient in beef kway teow which is a popular food in Indonesia.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Palm sugar']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Indonesia', '__subject__ Beef kway teow __predicate__ ingredient __object__ Palm sugar']]
Text: Beef kway teow is a popular food of Indonesia and it contains palm sugar.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Palm sugar']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Indonesia', '__subject__ Beef kway teow __predicate__ ingredient __object__ Sesame oil']]
Text: Beef kway teow, containing sesame oil, is a dish in Indonesia.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Sesame oil']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Indonesia', '__subject__ Beef kway teow __predicate__ ingredient __object__ Sesame oil']]
Text: Indonesian dish Beef Kway teow is made with sesame oil.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Sesame oil']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Indonesia', '__subject__ Beef kway teow __predicate__ ingredient __object__ Sesame oil']]
Text: Sesame oil is an ingredient in beef kway teow, which comes from Indonesia.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['country', 'ingredient']
Object: ['Indonesia', 'Sesame oil']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Singapore', '__subject__ Beef kway teow __predicate__ ingredient __object__ Oyster sauce']]
Text: Oyster sauce is an ingredient in the popular Singapore dish of Beef kway teow.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['country', 'ingredient']
Object: ['Singapore', 'Oyster sauce']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Singapore', '__subject__ Beef kway teow __predicate__ ingredient __object__ Oyster sauce']]
Text: Beef kway teow is a Singapore dish which contains oyster sauce.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['country', 'ingredient']
Object: ['Singapore', 'Oyster sauce']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Singapore', '__subject__ Beef kway teow __predicate__ ingredient __object__ Oyster sauce']]
Text: Oyster sauce is an ingredient of Beef kway teow which is a dish from Singapore.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['country', 'ingredient']
Object: ['Singapore', 'Oyster sauce']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Singapore', '__subject__ Beef kway teow __predicate__ ingredient __object__ Sesame oil']]
Text: Sesame oil is an ingredient in beef kway teow, which is a dish popular in Singapore.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['country', 'ingredient']
Object: ['Singapore', 'Sesame oil']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Singapore', '__subject__ Beef kway teow __predicate__ ingredient __object__ Sesame oil']]
Text: Sesame oil is an ingredient in beef kway teow and is from Singapore.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['country', 'ingredient']
Object: ['Singapore', 'Sesame oil']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Singapore', '__subject__ Beef kway teow __predicate__ ingredient __object__ Sesame oil']]
Text: Sesame oil is an ingredient in beef kway teow which is a popular dish in Singapore.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['country', 'ingredient']
Object: ['Singapore', 'Sesame oil']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Singapore', '__subject__ Singapore __predicate__ language __object__ Standard Chinese']]
Text: Standard Chinese is a language spoken in Singapore where Beef kway teow is a popular dish.
Subject: ['Beef kway teow', 'Singapore']
Predicate: ['country', 'language']
Object: ['Singapore', 'Standard Chinese']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Singapore', '__subject__ Singapore __predicate__ language __object__ Standard Chinese']]
Text: Standard Chinese is spoken in the beef kway teow regional dishes' origin of Singapore.
Subject: ['Beef kway teow', 'Singapore']
Predicate: ['country', 'language']
Object: ['Singapore', 'Standard Chinese']

Triple: [['__subject__ Beef kway teow __predicate__ country __object__ Singapore', '__subject__ Singapore __predicate__ language __object__ Standard Chinese']]
Text: Beef kway teow is a popular dish in Singapore, where standard Chinese is spoken.
Subject: ['Beef kway teow', 'Singapore']
Predicate: ['country', 'language']
Object: ['Singapore', 'Standard Chinese']

Triple: [['__subject__ Beef kway teow __predicate__ ingredient __object__ Oyster sauce', '__subject__ Beef kway teow __predicate__ country __object__ Singapore and Indonesia']]
Text: Beef Kway Teow uses Oyster sauce as an ingredient and is made in Singapore and Indonesia.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['ingredient', 'country']
Object: ['Oyster sauce', 'Singapore and Indonesia']

Triple: [['__subject__ Beef kway teow __predicate__ ingredient __object__ Oyster sauce', '__subject__ Beef kway teow __predicate__ country __object__ Singapore and Indonesia']]
Text: Beef kway teow, found in Singapore and Indonesia, includes oyster sauce.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['ingredient', 'country']
Object: ['Oyster sauce', 'Singapore and Indonesia']

Triple: [['__subject__ Beef kway teow __predicate__ ingredient __object__ Palm sugar', '__subject__ Beef kway teow __predicate__ country __object__ Singapore and Indonesia']]
Text: Beef kway teow is found in the countries of Indonesia and Singapore, it includes palm sugar as an ingredient.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['ingredient', 'country']
Object: ['Palm sugar', 'Singapore and Indonesia']

Triple: [['__subject__ Beef kway teow __predicate__ ingredient __object__ Palm sugar', '__subject__ Beef kway teow __predicate__ country __object__ Singapore and Indonesia']]
Text: Beef kway teow is a dish commonly found in Singapore and Indonesia and has palm sugar as an ingredient.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['ingredient', 'country']
Object: ['Palm sugar', 'Singapore and Indonesia']

Triple: [['__subject__ Beef kway teow __predicate__ ingredient __object__ Palm sugar', '__subject__ Beef kway teow __predicate__ country __object__ Singapore and Indonesia']]
Text: Palm sugar is an ingredient in beef kway teow, a dish commonly found in Singapore and Indonesia.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['ingredient', 'country']
Object: ['Palm sugar', 'Singapore and Indonesia']

Triple: [['__subject__ Beef kway teow __predicate__ ingredient __object__ Sesame oil', '__subject__ Beef kway teow __predicate__ country __object__ Singapore and Indonesia']]
Text: Sesame oil is an ingredient in beef kway teow, a dish found in Indonesia and Singapore.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['ingredient', 'country']
Object: ['Sesame oil', 'Singapore and Indonesia']

Triple: [['__subject__ Beef kway teow __predicate__ ingredient __object__ Sesame oil', '__subject__ Beef kway teow __predicate__ country __object__ Singapore and Indonesia']]
Text: Sesame oil is an ingredient in beef kway teow, made in Singapore and Indonesia.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['ingredient', 'country']
Object: ['Sesame oil', 'Singapore and Indonesia']

Triple: [['__subject__ Beef kway teow __predicate__ ingredient __object__ Sesame oil', '__subject__ Beef kway teow __predicate__ country __object__ Singapore and Indonesia']]
Text: Sesame oil is an ingredient in the Singapore and Indonesian dish, beef kway teow.
Subject: ['Beef kway teow', 'Beef kway teow']
Predicate: ['ingredient', 'country']
Object: ['Sesame oil', 'Singapore and Indonesia']

Triple: [['__subject__ Beef kway teow __predicate__ region __object__ Singapore', '__subject__ Singapore __predicate__ language __object__ English language']]
Text: Beef kway teow comes from Singapore region where the English language is spoken.
Subject: ['Beef kway teow', 'Singapore']
Predicate: ['region', 'language']
Object: ['Singapore', 'English language']

Triple: [['__subject__ Beef kway teow __predicate__ region __object__ Singapore', '__subject__ Singapore __predicate__ language __object__ English language']]
Text: English is spoken in Singapore where beef kway teow is a dish.
Subject: ['Beef kway teow', 'Singapore']
Predicate: ['region', 'language']
Object: ['Singapore', 'English language']

Triple: [['__subject__ Beef kway teow __predicate__ region __object__ Singapore', '__subject__ Singapore __predicate__ leader __object__ Halimah Yacob']]
Text: Beef kway teow is a dish of Singapore and the country's leader is Halimah Yacob.
Subject: ['Beef kway teow', 'Singapore']
Predicate: ['region', 'leader']
Object: ['Singapore', 'Halimah Yacob']

Triple: [['__subject__ Beef kway teow __predicate__ region __object__ Singapore', '__subject__ Singapore __predicate__ leader __object__ Halimah Yacob']]
Text: Beef kway teow is a dish of Halimah Yacob led, Singapore.
Subject: ['Beef kway teow', 'Singapore']
Predicate: ['region', 'leader']
Object: ['Singapore', 'Halimah Yacob']

Triple: [['__subject__ Beef kway teow __predicate__ region __object__ Singapore', '__subject__ Singapore __predicate__ leader __object__ Halimah Yacob']]
Text: Beef kway teow comes from the Singapore region where the leader is Halimah Yacob.
Subject: ['Beef kway teow', 'Singapore']
Predicate: ['region', 'leader']
Object: ['Singapore', 'Halimah Yacob']

Triple: [['__subject__ Bhajji __predicate__ alternativeName __object__ Bhaji, bajji', '__subject__ Bhajji __predicate__ ingredient __object__ Gram flour']]
Text: Bhajji is also known as Bhaji or bajji and contains gram flour.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['alternativeName', 'ingredient']
Object: ['Bhaji, bajji', 'Gram flour']

Triple: [['__subject__ Bhajji __predicate__ alternativeName __object__ Bhaji, bajji', '__subject__ Bhajji __predicate__ ingredient __object__ Gram flour']]
Text: Bhaji or bajji is made with gram flour. Bhajji is another name of that dish.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['alternativeName', 'ingredient']
Object: ['Bhaji, bajji', 'Gram flour']

Triple: [['__subject__ Bhajji __predicate__ alternativeName __object__ Bhaji, bajji', '__subject__ Bhajji __predicate__ ingredient __object__ Gram flour']]
Text: Bhaji and bajji are alternative names for Bhajji which uses gram flour.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['alternativeName', 'ingredient']
Object: ['Bhaji, bajji', 'Gram flour']

Triple: [['__subject__ Bhajji __predicate__ alternativeName __object__ Bhaji, bajji', '__subject__ Bhajji __predicate__ ingredient __object__ Vegetable']]
Text: Bhajji, also known as Bhaji and bajji, is a dish which contains vegetables.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['alternativeName', 'ingredient']
Object: ['Bhaji, bajji', 'Vegetable']

Triple: [['__subject__ Bhajji __predicate__ alternativeName __object__ Bhaji, bajji', '__subject__ Bhajji __predicate__ ingredient __object__ Vegetable']]
Text: Bhajji, also known as Bhaji or bajji, includes the ingredient of vegetables.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['alternativeName', 'ingredient']
Object: ['Bhaji, bajji', 'Vegetable']

Triple: [['__subject__ Bhajji __predicate__ alternativeName __object__ Bhaji, bajji', '__subject__ Bhajji __predicate__ ingredient __object__ Vegetable']]
Text: Vegetables are included in the dishes Bhaji and Bajji. They are also known as Bhajji.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['alternativeName', 'ingredient']
Object: ['Bhaji, bajji', 'Vegetable']

Triple: [['__subject__ Bhajji __predicate__ country __object__ India', '__subject__ Bhajji __predicate__ ingredient __object__ Gram flour']]
Text: Bhajji, made from gram flour, originates from India.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['country', 'ingredient']
Object: ['India', 'Gram flour']

Triple: [['__subject__ Bhajji __predicate__ country __object__ India', '__subject__ Bhajji __predicate__ ingredient __object__ Vegetable']]
Text: Bhajji, which are made of vegetables, originated in the country of India.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['country', 'ingredient']
Object: ['India', 'Vegetable']

Triple: [['__subject__ Bhajji __predicate__ country __object__ India', '__subject__ Bhajji __predicate__ ingredient __object__ Vegetable']]
Text: The country of India makes a dish called Bhajji, the main ingredients being vegetables.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['country', 'ingredient']
Object: ['India', 'Vegetable']

Triple: [['__subject__ Bhajji __predicate__ country __object__ India', '__subject__ Bhajji __predicate__ ingredient __object__ Vegetable']]
Text: Vegetables are an ingredient in bhajji which comes from India.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['country', 'ingredient']
Object: ['India', 'Vegetable']

Triple: [['__subject__ Bhajji __predicate__ country __object__ India', '__subject__ Bhajji __predicate__ mainIngredient __object__ Gram flour, vegetables']]
Text: The main ingredients in Bhajji, an Indian dish, are gram flour and vegetables.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['country', 'mainIngredient']
Object: ['India', 'Gram flour, vegetables']

Triple: [['__subject__ Bhajji __predicate__ country __object__ India', '__subject__ Bhajji __predicate__ mainIngredient __object__ Gram flour, vegetables']]
Text: India is the origin of Bhajji, a dish that includes: gram flour and vegetables.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['country', 'mainIngredient']
Object: ['India', 'Gram flour, vegetables']

Triple: [['__subject__ Bhajji __predicate__ country __object__ India', '__subject__ Bhajji __predicate__ mainIngredient __object__ Gram flour, vegetables']]
Text: Gram flour and vegetables are main ingredients in bhajji which originates in India.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['country', 'mainIngredient']
Object: ['India', 'Gram flour, vegetables']

Triple: [['__subject__ Bhajji __predicate__ country __object__ India', '__subject__ India __predicate__ leader __object__ Narendra Modi']]
Text: Bhajji comes from the country India, where Narendra Modi is the leader.
Subject: ['Bhajji', 'India']
Predicate: ['country', 'leader']
Object: ['India', 'Narendra Modi']

Triple: [['__subject__ Bhajji __predicate__ country __object__ India', '__subject__ India __predicate__ leader __object__ Narendra Modi']]
Text: Bhajji comes from the country India where Narendra Modi is a leader.
Subject: ['Bhajji', 'India']
Predicate: ['country', 'leader']
Object: ['India', 'Narendra Modi']

Triple: [['__subject__ Bhajji __predicate__ region __object__ Karnataka', '__subject__ Bhajji __predicate__ ingredient __object__ Gram flour']]
Text: Gram flour is an ingredient of bhajji which are found in the Karnataka region.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['region', 'ingredient']
Object: ['Karnataka', 'Gram flour']

Triple: [['__subject__ Bhajji __predicate__ region __object__ Karnataka', '__subject__ Bhajji __predicate__ ingredient __object__ Gram flour']]
Text: Bhajji come from the Karnataka region, and contain gram flour.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['region', 'ingredient']
Object: ['Karnataka', 'Gram flour']

Triple: [['__subject__ Bhajji __predicate__ region __object__ Karnataka', '__subject__ Bhajji __predicate__ ingredient __object__ Gram flour']]
Text: The Karnataka region enjoys bhajji which have the ingredient of gram flour.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['region', 'ingredient']
Object: ['Karnataka', 'Gram flour']

Triple: [['__subject__ Bhajji __predicate__ region __object__ Karnataka', '__subject__ Bhajji __predicate__ ingredient __object__ Vegetable']]
Text: Bhajji includes vegetables that come from the Karnataka region.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['region', 'ingredient']
Object: ['Karnataka', 'Vegetable']

Triple: [['__subject__ Bhajji __predicate__ region __object__ Karnataka', '__subject__ Bhajji __predicate__ ingredient __object__ Vegetable']]
Text: Bhajji, containing vegetables, are found in the region of Karnataka.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['region', 'ingredient']
Object: ['Karnataka', 'Vegetable']

Triple: [['__subject__ Bhajji __predicate__ region __object__ Karnataka', '__subject__ Bhajji __predicate__ ingredient __object__ Vegetable']]
Text: Bhajji includes vegetables as ingredients and comes from the Karnataka region.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['region', 'ingredient']
Object: ['Karnataka', 'Vegetable']

Triple: [['__subject__ Bhajji __predicate__ region __object__ Karnataka', '__subject__ Karnataka __predicate__ leader __object__ Vajubhai Vala']]
Text: Bhajji comes from the Karnataka region and its leader is Vajubhai Vala.
Subject: ['Bhajji', 'Karnataka']
Predicate: ['region', 'leader']
Object: ['Karnataka', 'Vajubhai Vala']

Triple: [['__subject__ Bhajji __predicate__ region __object__ Karnataka', '__subject__ Karnataka __predicate__ leader __object__ Vajubhai Vala']]
Text: Bhajji is from the Karnataka region where the leader is Vajubhai Vala.
Subject: ['Bhajji', 'Karnataka']
Predicate: ['region', 'leader']
Object: ['Karnataka', 'Vajubhai Vala']

Triple: [['__subject__ Bhajji __predicate__ region __object__ Karnataka', '__subject__ Karnataka __predicate__ leader __object__ Vajubhai Vala']]
Text: Vajubhai Vala is the leader of Karnataka, where Bhajji originates from.
Subject: ['Bhajji', 'Karnataka']
Predicate: ['region', 'leader']
Object: ['Karnataka', 'Vajubhai Vala']

Triple: [['__subject__ Bhajji __predicate__ related __object__ Pakora', '__subject__ Pakora __predicate__ dishVariation __object__ Paneer']]
Text: A variation of pakora can be achieved by adding paneer, pakora is related to bhajji.
Subject: ['Bhajji', 'Pakora']
Predicate: ['related', 'dishVariation']
Object: ['Pakora', 'Paneer']

Triple: [['__subject__ Bhajji __predicate__ related __object__ Pakora', '__subject__ Pakora __predicate__ dishVariation __object__ Paneer']]
Text: Pakora can be varied by using paneer, and is similar to the snacks Bhajjis.
Subject: ['Bhajji', 'Pakora']
Predicate: ['related', 'dishVariation']
Object: ['Pakora', 'Paneer']

Triple: [['__subject__ Bhajji __predicate__ related __object__ Pakora', '__subject__ Pakora __predicate__ dishVariation __object__ Paneer']]
Text: The dish bhajji is related to pakora which can be varied by using paneer.
Subject: ['Bhajji', 'Pakora']
Predicate: ['related', 'dishVariation']
Object: ['Pakora', 'Paneer']

Triple: [['__subject__ Bhajji __predicate__ similarDish __object__ Pakora and other fritters made from wheat or corn flour', '__subject__ Bhajji __predicate__ ingredient __object__ Vegetable']]
Text: Bhajji resembles pakora and other fritters made from wheat or corn flour and includes vegetables.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['similarDish', 'ingredient']
Object: ['Pakora and other fritters made from wheat or corn flour', 'Vegetable']

Triple: [['__subject__ Bhajji __predicate__ similarDish __object__ Pakora and other fritters made from wheat or corn flour', '__subject__ Bhajji __predicate__ ingredient __object__ Vegetable']]
Text: Bhajji is like pakora and other fritters made from wheat or corn flour. The dish also includes vegetables.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['similarDish', 'ingredient']
Object: ['Pakora and other fritters made from wheat or corn flour', 'Vegetable']

Triple: [['__subject__ Bhajji __predicate__ similarDish __object__ Pakora and other fritters made from wheat or corn flour', '__subject__ Bhajji __predicate__ ingredient __object__ Vegetable']]
Text: Pakora and other fritters made from wheat or corn flour are similar to bhajji which uses vegetables as one of the ingredients.
Subject: ['Bhajji', 'Bhajji']
Predicate: ['similarDish', 'ingredient']
Object: ['Pakora and other fritters made from wheat or corn flour', 'Vegetable']

Triple: [['__subject__ Binignit __predicate__ country __object__ Philippines', '__subject__ Binignit __predicate__ ingredient __object__ Banana']]
Text: The Philippine dish of Binignit contains banana as an ingredient.
Subject: ['Binignit', 'Binignit']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Banana']

Triple: [['__subject__ Binignit __predicate__ country __object__ Philippines', '__subject__ Binignit __predicate__ ingredient __object__ Banana']]
Text: A dish found in the Philippines is binignit which contains bananas.
Subject: ['Binignit', 'Binignit']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Banana']

Triple: [['__subject__ Binignit __predicate__ country __object__ Philippines', '__subject__ Binignit __predicate__ ingredient __object__ Coconut milk']]
Text: Binignit is a dish from the Philippines that contains coconut milk.
Subject: ['Binignit', 'Binignit']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Coconut milk']

Triple: [['__subject__ Binignit __predicate__ country __object__ Philippines', '__subject__ Binignit __predicate__ ingredient __object__ Coconut milk']]
Text: The binignit dish, which has coconut milk as an ingredient, can be found in the Philippines.
Subject: ['Binignit', 'Binignit']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Coconut milk']

Triple: [['__subject__ Binignit __predicate__ country __object__ Philippines', '__subject__ Binignit __predicate__ ingredient __object__ Sago']]
Text: Sago is one of the ingredients used to make Binignit, which can be found in the Philippines.
Subject: ['Binignit', 'Binignit']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Sago']

Triple: [['__subject__ Binignit __predicate__ country __object__ Philippines', '__subject__ Binignit __predicate__ ingredient __object__ Sago']]
Text: Sago is an ingredient of Binignit which is a Philippine dish.
Subject: ['Binignit', 'Binignit']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Sago']

Triple: [['__subject__ Binignit __predicate__ country __object__ Philippines', '__subject__ Binignit __predicate__ ingredient __object__ Taro']]
Text: Binignit is a dish from the Philippines, whose ingredients include taro.
Subject: ['Binignit', 'Binignit']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Taro']

Triple: [['__subject__ Binignit __predicate__ country __object__ Philippines', '__subject__ Binignit __predicate__ ingredient __object__ Taro']]
Text: Taro is an ingredient of Binignit which comes from the Philippines.
Subject: ['Binignit', 'Binignit']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Taro']

Triple: [['__subject__ Binignit __predicate__ country __object__ Philippines', '__subject__ Binignit __predicate__ ingredient __object__ Taro']]
Text: Binignit is an ingredient found in taro and originates from the Philippines.
Subject: ['Binignit', 'Binignit']
Predicate: ['country', 'ingredient']
Object: ['Philippines', 'Taro']

Triple: [['__subject__ Binignit __predicate__ course __object__ Dessert', '__subject__ Dessert __predicate__ dishVariation __object__ Cookie']]
Text: Binignit and cookies are both a type of dessert.
Subject: ['Binignit', 'Dessert']
Predicate: ['course', 'dishVariation']
Object: ['Dessert', 'Cookie']

Triple: [['__subject__ Binignit __predicate__ course __object__ Dessert', '__subject__ Dessert __predicate__ dishVariation __object__ Cookie']]
Text: Binignit is a dessert and a cookie is also a dessert.
Subject: ['Binignit', 'Dessert']
Predicate: ['course', 'dishVariation']
Object: ['Dessert', 'Cookie']

Triple: [['__subject__ Binignit __predicate__ course __object__ Dessert', '__subject__ Dessert __predicate__ dishVariation __object__ Cookie']]
Text: Binignit should be served as the dessert course, as should cookies.
Subject: ['Binignit', 'Dessert']
Predicate: ['course', 'dishVariation']
Object: ['Dessert', 'Cookie']

Triple: [['__subject__ Binignit __predicate__ course __object__ Dessert', '__subject__ Dessert __predicate__ dishVariation __object__ Sandesh (confectionery)']]
Text: Binignit and sandesh are both dessert.
Subject: ['Binignit', 'Dessert']
Predicate: ['course', 'dishVariation']
Object: ['Dessert', 'Sandesh (confectionery)']

Triple: [['__subject__ Binignit __predicate__ course __object__ Dessert', '__subject__ Dessert __predicate__ dishVariation __object__ Sandesh (confectionery)']]
Text: Sandesh (confectionery) is a dish that can be served as a dessert, as is Binignit.
Subject: ['Binignit', 'Dessert']
Predicate: ['course', 'dishVariation']
Object: ['Dessert', 'Sandesh (confectionery)']

Triple: [['__subject__ Binignit __predicate__ course __object__ Dessert', '__subject__ Dessert __predicate__ dishVariation __object__ Sandesh (confectionery)']]
Text: Two types of desserts that can be served are Binignit and Sandesh.
Subject: ['Binignit', 'Dessert']
Predicate: ['course', 'dishVariation']
Object: ['Dessert', 'Sandesh (confectionery)']

Triple: [['__subject__ Binignit __predicate__ ingredient __object__ Sweet potato', '__subject__ Binignit __predicate__ country __object__ Philippines']]
Text: Sweet potato is an ingredient in Binignit which comes from the Philippines.
Subject: ['Binignit', 'Binignit']
Predicate: ['ingredient', 'country']
Object: ['Sweet potato', 'Philippines']

Triple: [['__subject__ Binignit __predicate__ ingredient __object__ Sweet potato', '__subject__ Binignit __predicate__ country __object__ Philippines']]
Text: Sweet potatoes are in binignit recipes, it is a dish of the Philippines.
Subject: ['Binignit', 'Binignit']
Predicate: ['ingredient', 'country']
Object: ['Sweet potato', 'Philippines']

Triple: [['__subject__ Binignit __predicate__ ingredient __object__ Sweet potato', '__subject__ Binignit __predicate__ country __object__ Philippines']]
Text: Binignit comes from the Philippines and one of the ingredients is sweet potato.
Subject: ['Binignit', 'Binignit']
Predicate: ['ingredient', 'country']
Object: ['Sweet potato', 'Philippines']

Triple: [['__subject__ Binignit __predicate__ ingredient __object__ Sweet potato', '__subject__ Binignit __predicate__ mainIngredient __object__ Coconut milk']]
Text: Binignit is made of sweet potato and coconut milk.
Subject: ['Binignit', 'Binignit']
Predicate: ['ingredient', 'mainIngredient']
Object: ['Sweet potato', 'Coconut milk']

Triple: [['__subject__ Binignit __predicate__ ingredient __object__ Sweet potato', '__subject__ Binignit __predicate__ mainIngredient __object__ Coconut milk']]
Text: Sweet potatoes are in binignit recipes but the main ingredient is coconut milk.
Subject: ['Binignit', 'Binignit']
Predicate: ['ingredient', 'mainIngredient']
Object: ['Sweet potato', 'Coconut milk']

Triple: [['__subject__ Binignit __predicate__ ingredient __object__ Sweet potato', '__subject__ Binignit __predicate__ mainIngredient __object__ Coconut milk']]
Text: The main ingredients of Binignit are sweet potato and coconut milk.
Subject: ['Binignit', 'Binignit']
Predicate: ['ingredient', 'mainIngredient']
Object: ['Sweet potato', 'Coconut milk']

Triple: [['__subject__ Binignit __predicate__ ingredient __object__ Sweet potato', '__subject__ Binignit __predicate__ mainIngredient __object__ Taro']]
Text: Two ingredients for Binignit is Taro and sweet potato.
Subject: ['Binignit', 'Binignit']
Predicate: ['ingredient', 'mainIngredient']
Object: ['Sweet potato', 'Taro']

Triple: [['__subject__ Binignit __predicate__ ingredient __object__ Sweet potato', '__subject__ Binignit __predicate__ mainIngredient __object__ Taro']]
Text: Binignit includes sweet potato and (the main ingredient) taro.
Subject: ['Binignit', 'Binignit']
Predicate: ['ingredient', 'mainIngredient']
Object: ['Sweet potato', 'Taro']

Triple: [['__subject__ Binignit __predicate__ ingredient __object__ Sweet potato', '__subject__ Binignit __predicate__ mainIngredient __object__ Taro']]
Text: Binignit includes sweet potato and (as a main ingredient), taro.
Subject: ['Binignit', 'Binignit']
Predicate: ['ingredient', 'mainIngredient']
Object: ['Sweet potato', 'Taro']

Triple: [['__subject__ Binignit __predicate__ ingredient __object__ Sweet potato', '__subject__ Sweet potato __predicate__ order __object__ Solanales']]
Text: Binignit is an ingredient of Sweet potato and sweet potato belongs to Solanales order of plants.
Subject: ['Binignit', 'Sweet potato']
Predicate: ['ingredient', 'order']
Object: ['Sweet potato', 'Solanales']

Triple: [['__subject__ Binignit __predicate__ ingredient __object__ Sweet potato', '__subject__ Sweet potato __predicate__ order __object__ Solanales']]
Text: An ingredient of Binignit is Sweet potato which is part of the order of Solanales.
Subject: ['Binignit', 'Sweet potato']
Predicate: ['ingredient', 'order']
Object: ['Sweet potato', 'Solanales']

Triple: [['__subject__ Binignit __predicate__ ingredient __object__ Sweet potato', '__subject__ Sweet potato __predicate__ order __object__ Solanales']]
Text: Sweet potatoes from the order of Solanales are in binignit recipes.
Subject: ['Binignit', 'Sweet potato']
Predicate: ['ingredient', 'order']
Object: ['Sweet potato', 'Solanales']

Triple: [['__subject__ Binignit __predicate__ mainIngredient __object__ Coconut milk', '__subject__ Binignit __predicate__ country __object__ Philippines']]
Text: One of the main ingredients of binignit is coconut milk and this dish can be found in the Philippines.
Subject: ['Binignit', 'Binignit']
Predicate: ['mainIngredient', 'country']
Object: ['Coconut milk', 'Philippines']

Triple: [['__subject__ Binignit __predicate__ mainIngredient __object__ Coconut milk', '__subject__ Binignit __predicate__ country __object__ Philippines']]
Text: The main ingredient of Binignit, found in the Philippines, is coconut milk.
Subject: ['Binignit', 'Binignit']
Predicate: ['mainIngredient', 'country']
Object: ['Coconut milk', 'Philippines']

Triple: [['__subject__ Binignit __predicate__ mainIngredient __object__ Sago', '__subject__ Binignit __predicate__ country __object__ Philippines']]
Text: Binignit, a dish found in the Philippines, contains sago as one of its main ingredients.
Subject: ['Binignit', 'Binignit']
Predicate: ['mainIngredient', 'country']
Object: ['Sago', 'Philippines']

Triple: [['__subject__ Binignit __predicate__ mainIngredient __object__ Sago', '__subject__ Binignit __predicate__ country __object__ Philippines']]
Text: Sago is the main ingredient of binignit, found in the Philippines.
Subject: ['Binignit', 'Binignit']
Predicate: ['mainIngredient', 'country']
Object: ['Sago', 'Philippines']

Triple: [['__subject__ Binignit __predicate__ mainIngredient __object__ Sweet potato', '__subject__ Binignit __predicate__ country __object__ Philippines']]
Text: The binignit dish can be found in the Philippines and one of the main ingredients is the sweet potato.
Subject: ['Binignit', 'Binignit']
Predicate: ['mainIngredient', 'country']
Object: ['Sweet potato', 'Philippines']

Triple: [['__subject__ Binignit __predicate__ mainIngredient __object__ Sweet potato', '__subject__ Binignit __predicate__ country __object__ Philippines']]
Text: The binignit dish can be found in the Philippines and the main ingredient is sweet potatoes.
Subject: ['Binignit', 'Binignit']
Predicate: ['mainIngredient', 'country']
Object: ['Sweet potato', 'Philippines']

Triple: [['__subject__ Binignit __predicate__ mainIngredient __object__ Sweet potato', '__subject__ Binignit __predicate__ country __object__ Philippines']]
Text: Binignit from the Philippines is made with sweet potatoes.
Subject: ['Binignit', 'Binignit']
Predicate: ['mainIngredient', 'country']
Object: ['Sweet potato', 'Philippines']

Triple: [['__subject__ Binignit __predicate__ mainIngredient __object__ Sweet potato', '__subject__ Binignit __predicate__ ingredient __object__ Coconut milk']]
Text: The main ingredients of Binignit are the sweet potato and coconut milk.
Subject: ['Binignit', 'Binignit']
Predicate: ['mainIngredient', 'ingredient']
Object: ['Sweet potato', 'Coconut milk']

Triple: [['__subject__ Binignit __predicate__ mainIngredient __object__ Sweet potato', '__subject__ Binignit __predicate__ ingredient __object__ Coconut milk']]
Text: One of the main ingredients of Binignit is the sweet potato but it also uses coconut milk.
Subject: ['Binignit', 'Binignit']
Predicate: ['mainIngredient', 'ingredient']
Object: ['Sweet potato', 'Coconut milk']

Triple: [['__subject__ Binignit __predicate__ mainIngredient __object__ Sweet potato', '__subject__ Binignit __predicate__ ingredient __object__ Coconut milk']]
Text: The main ingredients of binignit are sweet potatoes, and it also includes coconut milk.
Subject: ['Binignit', 'Binignit']
Predicate: ['mainIngredient', 'ingredient']
Object: ['Sweet potato', 'Coconut milk']

Triple: [['__subject__ Binignit __predicate__ mainIngredient __object__ Sweet potato', '__subject__ Binignit __predicate__ ingredient __object__ Sago']]
Text: Binignit includes the sweet potato as a main ingredient, and sago.
Subject: ['Binignit', 'Binignit']
Predicate: ['mainIngredient', 'ingredient']
Object: ['Sweet potato', 'Sago']

Triple: [['__subject__ Binignit __predicate__ mainIngredient __object__ Sweet potato', '__subject__ Binignit __predicate__ ingredient __object__ Sago']]
Text: Binignit contains the main ingredient of sweet potatoes and also contains sago.
Subject: ['Binignit', 'Binignit']
Predicate: ['mainIngredient', 'ingredient']
Object: ['Sweet potato', 'Sago']

Triple: [['__subject__ Binignit __predicate__ mainIngredient __object__ Sweet potato', '__subject__ Binignit __predicate__ ingredient __object__ Sago']]
Text: Binignit includes sweet potato as a main ingredient as well as sago.
Subject: ['Binignit', 'Binignit']
Predicate: ['mainIngredient', 'ingredient']
Object: ['Sweet potato', 'Sago']

Triple: [['__subject__ Binignit __predicate__ mainIngredient __object__ Sweet potato', '__subject__ Binignit __predicate__ ingredient __object__ Taro']]
Text: Binignits main ingredient is sweet potato and also taro.
Subject: ['Binignit', 'Binignit']
Predicate: ['mainIngredient', 'ingredient']
Object: ['Sweet potato', 'Taro']

Triple: [['__subject__ Binignit __predicate__ mainIngredient __object__ Sweet potato', '__subject__ Binignit __predicate__ ingredient __object__ Taro']]
Text: Sweet potatoes are a main ingredient of binignit and taro is also an ingredient.
Subject: ['Binignit', 'Binignit']
Predicate: ['mainIngredient', 'ingredient']
Object: ['Sweet potato', 'Taro']

Triple: [['__subject__ Binignit __predicate__ mainIngredient __object__ Taro', '__subject__ Binignit __predicate__ country __object__ Philippines']]
Text: The dish Binignit can be found in the Philippines, its main ingredient is Taro.
Subject: ['Binignit', 'Binignit']
Predicate: ['mainIngredient', 'country']
Object: ['Taro', 'Philippines']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Bionico __predicate__ ingredient __object__ Condensed milk']]
Text: Condensed milk is an ingredient found in the Mexican food of Bionico.
Subject: ['Bionico', 'Bionico']
Predicate: ['country', 'ingredient']
Object: ['Mexico', 'Condensed milk']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Bionico __predicate__ ingredient __object__ Condensed milk']]
Text: Condensed milk is used in Bionico which is found in Mexico.
Subject: ['Bionico', 'Bionico']
Predicate: ['country', 'ingredient']
Object: ['Mexico', 'Condensed milk']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Bionico __predicate__ ingredient __object__ Condensed milk']]
Text: Condensed milk is an ingredient of Bionico, which is a food found in Mexico.
Subject: ['Bionico', 'Bionico']
Predicate: ['country', 'ingredient']
Object: ['Mexico', 'Condensed milk']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Bionico __predicate__ ingredient __object__ Granola']]
Text: Granola is an ingredient of Bionico which is a food found in Mexico.
Subject: ['Bionico', 'Bionico']
Predicate: ['country', 'ingredient']
Object: ['Mexico', 'Granola']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Bionico __predicate__ ingredient __object__ Granola']]
Text: Bionico requires granola as one of its ingredients and is a Mexican food.
Subject: ['Bionico', 'Bionico']
Predicate: ['country', 'ingredient']
Object: ['Mexico', 'Granola']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Bionico __predicate__ ingredient __object__ Raisin']]
Text: Bionico is a food that contains raisins and is found in Mexico.
Subject: ['Bionico', 'Bionico']
Predicate: ['country', 'ingredient']
Object: ['Mexico', 'Raisin']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Bionico __predicate__ ingredient __object__ Raisin']]
Text: Bionico is a food found in Mexico that contains raisins.
Subject: ['Bionico', 'Bionico']
Predicate: ['country', 'ingredient']
Object: ['Mexico', 'Raisin']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Bionico __predicate__ ingredient __object__ Raisin']]
Text: Raisins can be found in Bionico which is a food found in Mexico.
Subject: ['Bionico', 'Bionico']
Predicate: ['country', 'ingredient']
Object: ['Mexico', 'Raisin']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Bionico __predicate__ ingredient __object__ Sour cream']]
Text: Sour cream is an ingredient used in the preparation of Bionico which is a Mexican food dish.
Subject: ['Bionico', 'Bionico']
Predicate: ['country', 'ingredient']
Object: ['Mexico', 'Sour cream']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Bionico __predicate__ ingredient __object__ Sour cream']]
Text: Sour cream is an ingredient of Bionico, a food found in Mexico.
Subject: ['Bionico', 'Bionico']
Predicate: ['country', 'ingredient']
Object: ['Mexico', 'Sour cream']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Bionico __predicate__ ingredient __object__ Sour cream']]
Text: Bionico is a food found in Mexico, it includes sour cream.
Subject: ['Bionico', 'Bionico']
Predicate: ['country', 'ingredient']
Object: ['Mexico', 'Sour cream']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Mexico __predicate__ language __object__ Mexican Spanish']]
Text: Bionico is a food found in Mexico where Mexican Spanish is spoken.
Subject: ['Bionico', 'Mexico']
Predicate: ['country', 'language']
Object: ['Mexico', 'Mexican Spanish']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Mexico __predicate__ language __object__ Mexican Spanish']]
Text: Bionico is a food from Mexico where one of the languages used is Mexican Spanish.
Subject: ['Bionico', 'Mexico']
Predicate: ['country', 'language']
Object: ['Mexico', 'Mexican Spanish']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Mexico __predicate__ language __object__ Spanish language']]
Text: Bionico is a food found in Mexico where the language is Spanish.
Subject: ['Bionico', 'Mexico']
Predicate: ['country', 'language']
Object: ['Mexico', 'Spanish language']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Mexico __predicate__ language __object__ Spanish language']]
Text: When in Mexico, you'll want to know Spanish is their spoken language and Bionico is a food found there.
Subject: ['Bionico', 'Mexico']
Predicate: ['country', 'language']
Object: ['Mexico', 'Spanish language']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Mexico __predicate__ language __object__ Spanish language']]
Text: In Mexico the spoken language is Spanish and they eat Bionico.
Subject: ['Bionico', 'Mexico']
Predicate: ['country', 'language']
Object: ['Mexico', 'Spanish language']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Mexico __predicate__ leader __object__ Silvano Aureoles Conejo']]
Text: Silvano Aureoles Conejo is the leader of Mexico where Bionico is one of the local foods.
Subject: ['Bionico', 'Mexico']
Predicate: ['country', 'leader']
Object: ['Mexico', 'Silvano Aureoles Conejo']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Mexico __predicate__ leader __object__ Silvano Aureoles Conejo']]
Text: Bionico is a food found in Mexico and its leader is Silvano Aureoles Conejo.
Subject: ['Bionico', 'Mexico']
Predicate: ['country', 'leader']
Object: ['Mexico', 'Silvano Aureoles Conejo']

Triple: [['__subject__ Bionico __predicate__ country __object__ Mexico', '__subject__ Mexico __predicate__ leader __object__ Silvano Aureoles Conejo']]
Text: Bionico is a food found in Mexico where the leader is Silvano Aureoles Conejo.
Subject: ['Bionico', 'Mexico']
Predicate: ['country', 'leader']
Object: ['Mexico', 'Silvano Aureoles Conejo']

Triple: [['__subject__ Bionico __predicate__ course __object__ Dessert', '__subject__ Bionico __predicate__ ingredient __object__ Condensed milk']]
Text: Bionico, containing condensed milk, is a dish served for dessert.
Subject: ['Bionico', 'Bionico']
Predicate: ['course', 'ingredient']
Object: ['Dessert', 'Condensed milk']

Triple: [['__subject__ Bionico __predicate__ course __object__ Dessert', '__subject__ Bionico __predicate__ ingredient __object__ Condensed milk']]
Text: Bionico, which has condensed milk in it, is a dish served for dessert.
Subject: ['Bionico', 'Bionico']
Predicate: ['course', 'ingredient']
Object: ['Dessert', 'Condensed milk']

Triple: [['__subject__ Bionico __predicate__ course __object__ Dessert', '__subject__ Bionico __predicate__ ingredient __object__ Condensed milk']]
Text: Condensed milk is included in the dessert, Bionico.
Subject: ['Bionico', 'Bionico']
Predicate: ['course', 'ingredient']
Object: ['Dessert', 'Condensed milk']

Triple: [['__subject__ Bionico __predicate__ course __object__ Dessert', '__subject__ Bionico __predicate__ ingredient __object__ Raisin']]
Text: Bionico contains raisins and is served as a dessert.
Subject: ['Bionico', 'Bionico']
Predicate: ['course', 'ingredient']
Object: ['Dessert', 'Raisin']

Triple: [['__subject__ Bionico __predicate__ course __object__ Dessert', '__subject__ Bionico __predicate__ ingredient __object__ Raisin']]
Text: Bionico is served at the dessert course and it contains raisins.
Subject: ['Bionico', 'Bionico']
Predicate: ['course', 'ingredient']
Object: ['Dessert', 'Raisin']

Triple: [['__subject__ Bionico __predicate__ course __object__ Dessert', '__subject__ Bionico __predicate__ ingredient __object__ Raisin']]
Text: Bionico is a dessert which contains raisins.
Subject: ['Bionico', 'Bionico']
Predicate: ['course', 'ingredient']
Object: ['Dessert', 'Raisin']

Triple: [['__subject__ Bionico __predicate__ course __object__ Dessert', '__subject__ Bionico __predicate__ ingredient __object__ Sour cream']]
Text: Sour cream is an ingredient used in the preparation of the dessert known as Bionico.
Subject: ['Bionico', 'Bionico']
Predicate: ['course', 'ingredient']
Object: ['Dessert', 'Sour cream']

Triple: [['__subject__ Bionico __predicate__ course __object__ Dessert', '__subject__ Bionico __predicate__ ingredient __object__ Sour cream']]
Text: Sour cream is included in the dessert, Bionico.
Subject: ['Bionico', 'Bionico']
Predicate: ['course', 'ingredient']
Object: ['Dessert', 'Sour cream']

Triple: [['__subject__ Bionico __predicate__ course __object__ Dessert', '__subject__ Bionico __predicate__ ingredient __object__ Sour cream']]
Text: Sour cream is an ingredient in the preparation of Bionico which is served as a dessert.
Subject: ['Bionico', 'Bionico']
Predicate: ['course', 'ingredient']
Object: ['Dessert', 'Sour cream']

Triple: [['__subject__ Bionico __predicate__ course __object__ Dessert', '__subject__ Dessert __predicate__ dishVariation __object__ Cookie']]
Text: Bionico and cookies are both dishes served for dessert.
Subject: ['Bionico', 'Dessert']
Predicate: ['course', 'dishVariation']
Object: ['Dessert', 'Cookie']

Triple: [['__subject__ Bionico __predicate__ course __object__ Dessert', '__subject__ Dessert __predicate__ dishVariation __object__ Cookie']]
Text: Bionico and cookie are types of dessert.
Subject: ['Bionico', 'Dessert']
Predicate: ['course', 'dishVariation']
Object: ['Dessert', 'Cookie']

Triple: [['__subject__ Bionico __predicate__ course __object__ Dessert', '__subject__ Dessert __predicate__ dishVariation __object__ Cookie']]
Text: Bionico and Cookie are both a type of dessert.
Subject: ['Bionico', 'Dessert']
Predicate: ['course', 'dishVariation']
Object: ['Dessert', 'Cookie']

Triple: [['__subject__ Bionico __predicate__ course __object__ Dessert', '__subject__ Dessert __predicate__ dishVariation __object__ Sandesh (confectionery)']]
Text: Sandesh (confectionery) and Bionico are both served as desserts.
Subject: ['Bionico', 'Dessert']
Predicate: ['course', 'dishVariation']
Object: ['Dessert', 'Sandesh (confectionery)']

Triple: [['__subject__ Bionico __predicate__ dishVariation __object__ Cottage cheese', '__subject__ Bionico __predicate__ course __object__ Dessert']]
Text: Bionico is served at the dessert course and can be varied by using cottage cheese.
Subject: ['Bionico', 'Bionico']
Predicate: ['dishVariation', 'course']
Object: ['Cottage cheese', 'Dessert']

Triple: [['__subject__ Bionico __predicate__ dishVariation __object__ Cottage cheese', '__subject__ Bionico __predicate__ course __object__ Dessert']]
Text: Bionico is a dish served for dessert that can be varied by using cottage cheese.
Subject: ['Bionico', 'Bionico']
Predicate: ['dishVariation', 'course']
Object: ['Cottage cheese', 'Dessert']

Triple: [['__subject__ Bionico __predicate__ dishVariation __object__ Cottage cheese', '__subject__ Bionico __predicate__ course __object__ Dessert']]
Text: The dessert Bionico can be varied using cottage cheese.
Subject: ['Bionico', 'Bionico']
Predicate: ['dishVariation', 'course']
Object: ['Cottage cheese', 'Dessert']

Triple: [['__subject__ Bionico __predicate__ region __object__ Jalisco', '__subject__ Bionico __predicate__ ingredient __object__ Condensed milk']]
Text: The ingredient condensed milk is used in Bionico and this derives from the region of Jalisco.
Subject: ['Bionico', 'Bionico']
Predicate: ['region', 'ingredient']
Object: ['Jalisco', 'Condensed milk']

Triple: [['__subject__ Bionico __predicate__ region __object__ Jalisco', '__subject__ Bionico __predicate__ ingredient __object__ Condensed milk']]
Text: Condensed milk is used in bionico which comes from the region of Jalisco.
Subject: ['Bionico', 'Bionico']
Predicate: ['region', 'ingredient']
Object: ['Jalisco', 'Condensed milk']

Triple: [['__subject__ Bionico __predicate__ region __object__ Jalisco', '__subject__ Bionico __predicate__ ingredient __object__ Condensed milk']]
Text: Bionico, made using condensed milk, is found in the region of Jalisco.
Subject: ['Bionico', 'Bionico']
Predicate: ['region', 'ingredient']
Object: ['Jalisco', 'Condensed milk']

Triple: [['__subject__ Catalonia __predicate__ leader __object__ Carles Puigdemont', '__subject__ Arròs negre __predicate__ region __object__ Catalonia']]
Text: Arros negre is found in the region of Catalonia and the leader of the country is Carles Puigdemont.
Subject: ['Catalonia', 'Arròs negre']
Predicate: ['leader', 'region']
Object: ['Carles Puigdemont', 'Catalonia']

Triple: [['__subject__ Catalonia __predicate__ leader __object__ Carles Puigdemont', '__subject__ Arròs negre __predicate__ region __object__ Catalonia']]
Text: Arros negre originates from Catalonia (led by Carles Puigdemont).
Subject: ['Catalonia', 'Arròs negre']
Predicate: ['leader', 'region']
Object: ['Carles Puigdemont', 'Catalonia']

Triple: [['__subject__ Catalonia __predicate__ leader __object__ Carles Puigdemont', '__subject__ Arròs negre __predicate__ region __object__ Catalonia']]
Text: Arros negre is a region of Catalonia and Carles Puigdemont is its leader.
Subject: ['Catalonia', 'Arròs negre']
Predicate: ['leader', 'region']
Object: ['Carles Puigdemont', 'Catalonia']

Triple: [['__subject__ Celery __predicate__ genus __object__ Apium', '__subject__ Bakso __predicate__ ingredient __object__ Celery']]
Text: Celery is a member of the genus Apium and is an ingredient of Bakso.
Subject: ['Celery', 'Bakso']
Predicate: ['genus', 'ingredient']
Object: ['Apium', 'Celery']

Triple: [['__subject__ Celery __predicate__ genus __object__ Apium', '__subject__ Bakso __predicate__ ingredient __object__ Celery']]
Text: Bakso contain celery, which is from the genus apium.
Subject: ['Celery', 'Bakso']
Predicate: ['genus', 'ingredient']
Object: ['Apium', 'Celery']

Triple: [['__subject__ Celery __predicate__ genus __object__ Apium', '__subject__ Bakso __predicate__ ingredient __object__ Celery']]
Text: Celery is of the Apium genus and is an ingredient in Bakso.
Subject: ['Celery', 'Bakso']
Predicate: ['genus', 'ingredient']
Object: ['Apium', 'Celery']

Triple: [['__subject__ Hong Kong __predicate__ leader __object__ Carrie Lam (politician)', '__subject__ Baked Alaska __predicate__ region __object__ Hong Kong']]
Text: Baked Alaska comes from Hong Kong where Carrie Lam is a political leader.
Subject: ['Hong Kong', 'Baked Alaska']
Predicate: ['leader', 'region']
Object: ['Carrie Lam (politician)', 'Hong Kong']

Triple: [['__subject__ Hong Kong __predicate__ leader __object__ Carrie Lam (politician)', '__subject__ Baked Alaska __predicate__ region __object__ Hong Kong']]
Text: Carrie Lam is the politician who leads Hong Kong, where Baked Alaska originates.
Subject: ['Hong Kong', 'Baked Alaska']
Predicate: ['leader', 'region']
Object: ['Carrie Lam (politician)', 'Hong Kong']

Triple: [['__subject__ Indonesia __predicate__ capital __object__ Jakarta', '__subject__ Bakso __predicate__ country __object__ Indonesia']]
Text: Bakso is a dish from the country of Indonesia, where Jakarta is the capital.
Subject: ['Indonesia', 'Bakso']
Predicate: ['capital', 'country']
Object: ['Jakarta', 'Indonesia']

Triple: [['__subject__ Indonesia __predicate__ capital __object__ Jakarta', '__subject__ Bakso __predicate__ country __object__ Indonesia']]
Text: The capital of Indonesia is Jakarta and Bakso comes from there.
Subject: ['Indonesia', 'Bakso']
Predicate: ['capital', 'country']
Object: ['Jakarta', 'Indonesia']

Triple: [['__subject__ Indonesia __predicate__ capital __object__ Jakarta', '__subject__ Bakso __predicate__ country __object__ Indonesia']]
Text: Jakarta, Indonesia is where Bakso originates.
Subject: ['Indonesia', 'Bakso']
Predicate: ['capital', 'country']
Object: ['Jakarta', 'Indonesia']

Triple: [['__subject__ Indonesia __predicate__ leader __object__ Jusuf Kalla', '__subject__ Arem-arem __predicate__ region __object__ Indonesia']]
Text: Jusuf Kalla is the leader of Indonesia where you will find Arem arem.
Subject: ['Indonesia', 'Arem-arem']
Predicate: ['leader', 'region']
Object: ['Jusuf Kalla', 'Indonesia']

Triple: [['__subject__ Indonesia __predicate__ leader __object__ Jusuf Kalla', '__subject__ Arem-arem __predicate__ region __object__ Indonesia']]
Text: Arem arem comes from Indonesia, a country led by Jusuf Kalla.
Subject: ['Indonesia', 'Arem-arem']
Predicate: ['leader', 'region']
Object: ['Jusuf Kalla', 'Indonesia']

Triple: [['__subject__ Indonesia __predicate__ leader __object__ Jusuf Kalla', '__subject__ Arem-arem __predicate__ region __object__ Indonesia']]
Text: Arem arem comes from Indonesia where Jusuf Kalla is a leader.
Subject: ['Indonesia', 'Arem-arem']
Predicate: ['leader', 'region']
Object: ['Jusuf Kalla', 'Indonesia']

Triple: [['__subject__ Indonesia __predicate__ leader __object__ Jusuf Kalla', '__subject__ Asam pedas __predicate__ country __object__ Indonesia']]
Text: Asam pedas comes from Indonesia where Jusuf Kalla is a leader.
Subject: ['Indonesia', 'Asam pedas']
Predicate: ['leader', 'country']
Object: ['Jusuf Kalla', 'Indonesia']

Triple: [['__subject__ Indonesia __predicate__ leader __object__ Jusuf Kalla', '__subject__ Asam pedas __predicate__ country __object__ Indonesia']]
Text: Jusuf Kalla led Indonesia boasts the popular Asam pedas dish.
Subject: ['Indonesia', 'Asam pedas']
Predicate: ['leader', 'country']
Object: ['Jusuf Kalla', 'Indonesia']

Triple: [['__subject__ Indonesia __predicate__ leader __object__ Jusuf Kalla', '__subject__ Asam pedas __predicate__ country __object__ Indonesia']]
Text: Jusuf Kalla is the leader of Indonesia where a popular dish is Asam pedas.
Subject: ['Indonesia', 'Asam pedas']
Predicate: ['leader', 'country']
Object: ['Jusuf Kalla', 'Indonesia']

Triple: [['__subject__ Indonesia __predicate__ leader __object__ Jusuf Kalla', '__subject__ Bakso __predicate__ country __object__ Indonesia']]
Text: Bakso is a dish from the country of Indonesia, where Jusuf Kalla is a leader.
Subject: ['Indonesia', 'Bakso']
Predicate: ['leader', 'country']
Object: ['Jusuf Kalla', 'Indonesia']

Triple: [['__subject__ Indonesia __predicate__ leader __object__ Jusuf Kalla', '__subject__ Bakso __predicate__ country __object__ Indonesia']]
Text: Bakso comes from Indonesia where Jusuf Kalla is a leader.
Subject: ['Indonesia', 'Bakso']
Predicate: ['leader', 'country']
Object: ['Jusuf Kalla', 'Indonesia']

Triple: [['__subject__ Indonesia __predicate__ leader __object__ Jusuf Kalla', '__subject__ Bakso __predicate__ country __object__ Indonesia']]
Text: Bakso is a dish from Indonesia where Jusuf Kalla is the Leader.
Subject: ['Indonesia', 'Bakso']
Predicate: ['leader', 'country']
Object: ['Jusuf Kalla', 'Indonesia']

Triple: [['__subject__ Italy __predicate__ capital __object__ Rome', '__subject__ Amatriciana sauce __predicate__ country __object__ Italy']]
Text: Amatriciana sauce can be found in Italy where Rome is the capital.
Subject: ['Italy', 'Amatriciana sauce']
Predicate: ['capital', 'country']
Object: ['Rome', 'Italy']

Triple: [['__subject__ Italy __predicate__ capital __object__ Rome', '__subject__ Amatriciana sauce __predicate__ country __object__ Italy']]
Text: Rome is the capital of Italy where amatriciana sauce is a traditional accompaniment.
Subject: ['Italy', 'Amatriciana sauce']
Predicate: ['capital', 'country']
Object: ['Rome', 'Italy']

Triple: [['__subject__ Italy __predicate__ capital __object__ Rome', '__subject__ Amatriciana sauce __predicate__ country __object__ Italy']]
Text: Italy (capital: Rome) is the origin of Amatriciana sauce.
Subject: ['Italy', 'Amatriciana sauce']
Predicate: ['capital', 'country']
Object: ['Rome', 'Italy']

Triple: [['__subject__ Italy __predicate__ leader __object__ Matteo Renzi', '__subject__ Amatriciana sauce __predicate__ country __object__ Italy']]
Text: Amatriciana sauce is a traditional Italian sauce where the leader is Matteo Renzi.
Subject: ['Italy', 'Amatriciana sauce']
Predicate: ['leader', 'country']
Object: ['Matteo Renzi', 'Italy']

Triple: [['__subject__ Italy __predicate__ leader __object__ Matteo Renzi', '__subject__ Amatriciana sauce __predicate__ country __object__ Italy']]
Text: Matteo Renzi is a leader from Italy where Amatriciana sauce is a traditional sauce.
Subject: ['Italy', 'Amatriciana sauce']
Predicate: ['leader', 'country']
Object: ['Matteo Renzi', 'Italy']

Triple: [['__subject__ Java __predicate__ ethnicGroup __object__ Baduy', '__subject__ Ayam penyet __predicate__ country __object__ Java']]
Text: Ayam penyet is a food dish found in Java where the Baduy are an ethnic group.
Subject: ['Java', 'Ayam penyet']
Predicate: ['ethnicGroup', 'country']
Object: ['Baduy', 'Java']

Triple: [['__subject__ Java __predicate__ ethnicGroup __object__ Baduy', '__subject__ Ayam penyet __predicate__ country __object__ Java']]
Text: Ayam penyet is a food found in Java; the Baduy are one of the ethnic groups found in the country.
Subject: ['Java', 'Ayam penyet']
Predicate: ['ethnicGroup', 'country']
Object: ['Baduy', 'Java']

Triple: [['__subject__ Java __predicate__ ethnicGroup __object__ Baduy', '__subject__ Ayam penyet __predicate__ country __object__ Java']]
Text: Ayam Penyet is a food found in Java where an ethnic group is Baduy.
Subject: ['Java', 'Ayam penyet']
Predicate: ['ethnicGroup', 'country']
Object: ['Baduy', 'Java']

Triple: [['__subject__ Java __predicate__ ethnicGroup __object__ Banyumasan people', '__subject__ Ayam penyet __predicate__ country __object__ Java']]
Text: Banyumasan people is one of the ethnic groups in Java, where the dish ayam penyet can be found.
Subject: ['Java', 'Ayam penyet']
Predicate: ['ethnicGroup', 'country']
Object: ['Banyumasan people', 'Java']

Triple: [['__subject__ Java __predicate__ ethnicGroup __object__ Banyumasan people', '__subject__ Ayam penyet __predicate__ country __object__ Java']]
Text: The country of Ayam penyet is Java, where the Banyumasan people are an ethnic group.
Subject: ['Java', 'Ayam penyet']
Predicate: ['ethnicGroup', 'country']
Object: ['Banyumasan people', 'Java']

Triple: [['__subject__ Java __predicate__ ethnicGroup __object__ Javanese people', '__subject__ Ayam penyet __predicate__ country __object__ Java']]
Text: Java where the Javanese people are an ethnic group is the origin of Ayam penyet.
Subject: ['Java', 'Ayam penyet']
Predicate: ['ethnicGroup', 'country']
Object: ['Javanese people', 'Java']

Triple: [['__subject__ Java __predicate__ ethnicGroup __object__ Javanese people', '__subject__ Ayam penyet __predicate__ country __object__ Java']]
Text: Ayam penyet is a food found in Java, where the Javanese people are an ethnic group.
Subject: ['Java', 'Ayam penyet']
Predicate: ['ethnicGroup', 'country']
Object: ['Javanese people', 'Java']

Triple: [['__subject__ Java __predicate__ ethnicGroup __object__ Javanese people', '__subject__ Ayam penyet __predicate__ country __object__ Java']]
Text: Ayam penyet originates from Java where the Javanese people are an ethnic group.
Subject: ['Java', 'Ayam penyet']
Predicate: ['ethnicGroup', 'country']
Object: ['Javanese people', 'Java']

Triple: [['__subject__ Mondelez International __predicate__ foundationPlace __object__ Chicago', '__subject__ Barny Cakes __predicate__ creator __object__ Mondelez International']]
Text: Barny cakes were created by Mondelez International which was founded in Chicago.
Subject: ['Mondelez International', 'Barny Cakes']
Predicate: ['foundationPlace', 'creator']
Object: ['Chicago', 'Mondelez International']

Triple: [['__subject__ Mondelez International __predicate__ foundationPlace __object__ Chicago', '__subject__ Barny Cakes __predicate__ creator __object__ Mondelez International']]
Text: Mondelez International, founded in Chicago, is the creator of Barny cakes.
Subject: ['Mondelez International', 'Barny Cakes']
Predicate: ['foundationPlace', 'creator']
Object: ['Chicago', 'Mondelez International']

Triple: [['__subject__ Pakora __predicate__ dishVariation __object__ Cauliflower', '__subject__ Bhajji __predicate__ related __object__ Pakora']]
Text: Bhajji and pakora are related and cauliflower can be used as a variation in pakora.
Subject: ['Pakora', 'Bhajji']
Predicate: ['dishVariation', 'related']
Object: ['Cauliflower', 'Pakora']

Triple: [['__subject__ Pakora __predicate__ dishVariation __object__ Cauliflower', '__subject__ Bhajji __predicate__ related __object__ Pakora']]
Text: Pakora, similar to Bhajji, can include cauliflower.
Subject: ['Pakora', 'Bhajji']
Predicate: ['dishVariation', 'related']
Object: ['Cauliflower', 'Pakora']

Triple: [['__subject__ Pakora __predicate__ dishVariation __object__ Cauliflower', '__subject__ Bhajji __predicate__ related __object__ Pakora']]
Text: The dish bhajji is related to pakora and cauliflower can be used in it.
Subject: ['Pakora', 'Bhajji']
Predicate: ['dishVariation', 'related']
Object: ['Cauliflower', 'Pakora']

Triple: [['__subject__ Philippines __predicate__ ethnicGroup __object__ Zamboangans', '__subject__ Batchoy __predicate__ country __object__ Philippines']]
Text: Batchoy is from The Philippines, which includes the Zamboangan people.
Subject: ['Philippines', 'Batchoy']
Predicate: ['ethnicGroup', 'country']
Object: ['Zamboangans', 'Philippines']

Triple: [['__subject__ Philippines __predicate__ ethnicGroup __object__ Zamboangans', '__subject__ Batchoy __predicate__ country __object__ Philippines']]
Text: Zamboangans are a group in the Philippines where Batchoy is eaten.
Subject: ['Philippines', 'Batchoy']
Predicate: ['ethnicGroup', 'country']
Object: ['Zamboangans', 'Philippines']

Triple: [['__subject__ Philippines __predicate__ language __object__ Arabic', '__subject__ Batchoy __predicate__ country __object__ Philippines']]
Text: In the country of the Philippines they speak Arabic and a common dish is Batchoy.
Subject: ['Philippines', 'Batchoy']
Predicate: ['language', 'country']
Object: ['Arabic', 'Philippines']

Triple: [['__subject__ Philippines __predicate__ language __object__ Arabic', '__subject__ Batchoy __predicate__ country __object__ Philippines']]
Text: Batchoy comes from the Philippines, one of the languages used in the Philippines is Arabic.
Subject: ['Philippines', 'Batchoy']
Predicate: ['language', 'country']
Object: ['Arabic', 'Philippines']

Triple: [['__subject__ Philippines __predicate__ language __object__ Arabic', '__subject__ Batchoy __predicate__ country __object__ Philippines']]
Text: Batchoy comes from the Philippines and Arabic is one of the languages spoken there.
Subject: ['Philippines', 'Batchoy']
Predicate: ['language', 'country']
Object: ['Arabic', 'Philippines']

Triple: [['__subject__ Philippines __predicate__ language __object__ Arabic', '__subject__ Binignit __predicate__ country __object__ Philippines']]
Text: Arabic is one of the languages in the Philippines where Binignit comes from.
Subject: ['Philippines', 'Binignit']
Predicate: ['language', 'country']
Object: ['Arabic', 'Philippines']

Triple: [['__subject__ Philippines __predicate__ language __object__ Arabic', '__subject__ Binignit __predicate__ country __object__ Philippines']]
Text: The binignit dish can be found in the Philippines where one of the languages used is Arabic.
Subject: ['Philippines', 'Binignit']
Predicate: ['language', 'country']
Object: ['Arabic', 'Philippines']

Triple: [['__subject__ Philippines __predicate__ language __object__ Philippine English', '__subject__ Batchoy __predicate__ country __object__ Philippines']]
Text: Philippine English is the language of the Philippines where Batchoy comes from.
Subject: ['Philippines', 'Batchoy']
Predicate: ['language', 'country']
Object: ['Philippine English', 'Philippines']

Triple: [['__subject__ Philippines __predicate__ language __object__ Philippine English', '__subject__ Batchoy __predicate__ country __object__ Philippines']]
Text: Philippine English is the language of the Philippines where Batchoy is eaten.
Subject: ['Philippines', 'Batchoy']
Predicate: ['language', 'country']
Object: ['Philippine English', 'Philippines']

Triple: [['__subject__ Philippines __predicate__ language __object__ Philippine English', '__subject__ Batchoy __predicate__ country __object__ Philippines']]
Text: The Philippines, where Philippine English is spoken, is the country Batchoy comes from.
Subject: ['Philippines', 'Batchoy']
Predicate: ['language', 'country']
Object: ['Philippine English', 'Philippines']

Triple: [['__subject__ Philippines __predicate__ language __object__ Philippine English', '__subject__ Binignit __predicate__ country __object__ Philippines']]
Text: Binignit is a dish from the Philippines, where English is spoken.
Subject: ['Philippines', 'Binignit']
Predicate: ['language', 'country']
Object: ['Philippine English', 'Philippines']

Triple: [['__subject__ Philippines __predicate__ language __object__ Philippine English', '__subject__ Binignit __predicate__ country __object__ Philippines']]
Text: The binignit dish can be found in the Philippines where the language is Philippine English.
Subject: ['Philippines', 'Binignit']
Predicate: ['language', 'country']
Object: ['Philippine English', 'Philippines']

Triple: [['__subject__ Philippines __predicate__ language __object__ Philippine Spanish', '__subject__ Batchoy __predicate__ country __object__ Philippines']]
Text: In the Philippines, where Batchoy comes from, the spoken language is Philippine Spanish.
Subject: ['Philippines', 'Batchoy']
Predicate: ['language', 'country']
Object: ['Philippine Spanish', 'Philippines']

Triple: [['__subject__ Philippines __predicate__ language __object__ Philippine Spanish', '__subject__ Batchoy __predicate__ country __object__ Philippines']]
Text: Batchoy comes from the Philippines which is where Phillippine Spanish is spoken.
Subject: ['Philippines', 'Batchoy']
Predicate: ['language', 'country']
Object: ['Philippine Spanish', 'Philippines']

Triple: [['__subject__ Philippines __predicate__ language __object__ Philippine Spanish', '__subject__ Batchoy __predicate__ country __object__ Philippines']]
Text: Batchoy is eaten in the Philippines, where one of the languages spoken is Philippine Spanish.
Subject: ['Philippines', 'Batchoy']
Predicate: ['language', 'country']
Object: ['Philippine Spanish', 'Philippines']

Triple: [['__subject__ Shumai __predicate__ dishVariation __object__ Siomay', '__subject__ Batagor __predicate__ dishVariation __object__ Shumai']]
Text: Batagor is a variation of Shumai which is a variation of Siomay.
Subject: ['Shumai', 'Batagor']
Predicate: ['dishVariation', 'dishVariation']
Object: ['Siomay', 'Shumai']

Triple: [['__subject__ Shumai __predicate__ dishVariation __object__ Siomay', '__subject__ Batagor __predicate__ dishVariation __object__ Shumai']]
Text: Batagor and shumai (and its variation of Siomay) are kinds of the same dish.
Subject: ['Shumai', 'Batagor']
Predicate: ['dishVariation', 'dishVariation']
Object: ['Siomay', 'Shumai']

Triple: [['__subject__ Shumai __predicate__ dishVariation __object__ Siomay', '__subject__ Batagor __predicate__ dishVariation __object__ Shumai']]
Text: Shumai is a variation of Siomay and Batagor.
Subject: ['Shumai', 'Batagor']
Predicate: ['dishVariation', 'dishVariation']
Object: ['Siomay', 'Shumai']

Triple: [['__subject__ Singapore __predicate__ language __object__ English language', '__subject__ Ayam penyet __predicate__ region __object__ Singapore']]
Text: English is one of the languages spoken in Singapore where ayam penyet comes from.
Subject: ['Singapore', 'Ayam penyet']
Predicate: ['language', 'region']
Object: ['English language', 'Singapore']

Triple: [['__subject__ Singapore __predicate__ language __object__ English language', '__subject__ Ayam penyet __predicate__ region __object__ Singapore']]
Text: Ayam penyet is a regional Singapore cuisine, where English is a spoken language.
Subject: ['Singapore', 'Ayam penyet']
Predicate: ['language', 'region']
Object: ['English language', 'Singapore']

Triple: [['__subject__ Singapore __predicate__ language __object__ English language', '__subject__ Beef kway teow __predicate__ country __object__ Singapore']]
Text: English is one of the languages spoken in Singapore where Beef kway teow is a dish.
Subject: ['Singapore', 'Beef kway teow']
Predicate: ['language', 'country']
Object: ['English language', 'Singapore']

Triple: [['__subject__ Singapore __predicate__ language __object__ English language', '__subject__ Beef kway teow __predicate__ country __object__ Singapore']]
Text: Beef kway teow is a dish from Singapore where English is spoken.
Subject: ['Singapore', 'Beef kway teow']
Predicate: ['language', 'country']
Object: ['English language', 'Singapore']

Triple: [['__subject__ Singapore __predicate__ language __object__ English language', '__subject__ Beef kway teow __predicate__ country __object__ Singapore']]
Text: Beef kway teow is a popular dish in Singapore where they speak English.
Subject: ['Singapore', 'Beef kway teow']
Predicate: ['language', 'country']
Object: ['English language', 'Singapore']

Triple: [['__subject__ Singapore __predicate__ leader __object__ Halimah Yacob', '__subject__ Ayam penyet __predicate__ region __object__ Singapore']]
Text: Ayam penyet is from Singapore whose leader is Halimah Yacob.
Subject: ['Singapore', 'Ayam penyet']
Predicate: ['leader', 'region']
Object: ['Halimah Yacob', 'Singapore']

Triple: [['__subject__ Singapore __predicate__ leader __object__ Halimah Yacob', '__subject__ Ayam penyet __predicate__ region __object__ Singapore']]
Text: Ayam penyet is from the Singapore region where Halimah Yacob is a leader.
Subject: ['Singapore', 'Ayam penyet']
Predicate: ['leader', 'region']
Object: ['Halimah Yacob', 'Singapore']

Triple: [['__subject__ Singapore __predicate__ leader __object__ Halimah Yacob', '__subject__ Ayam penyet __predicate__ region __object__ Singapore']]
Text: Ayam penyet is from Singapore where Halimah Yacob is the leader.
Subject: ['Singapore', 'Ayam penyet']
Predicate: ['leader', 'region']
Object: ['Halimah Yacob', 'Singapore']

Triple: [['__subject__ Singapore __predicate__ leader __object__ Tony Tan', '__subject__ Beef kway teow __predicate__ country __object__ Singapore']]
Text: Tony Tan is the leader of Singapore where Beef kway teow is a popular dish.
Subject: ['Singapore', 'Beef kway teow']
Predicate: ['leader', 'country']
Object: ['Tony Tan', 'Singapore']

Triple: [['__subject__ Singapore __predicate__ leader __object__ Tony Tan', '__subject__ Beef kway teow __predicate__ country __object__ Singapore']]
Text: Beef kway teow is a dish from Singapore and Tony Tan is its leader.
Subject: ['Singapore', 'Beef kway teow']
Predicate: ['leader', 'country']
Object: ['Tony Tan', 'Singapore']

Triple: [['__subject__ Spain __predicate__ currency __object__ Euro', '__subject__ Arròs negre __predicate__ country __object__ Spain']]
Text: The Euro is the currency of Spain where arros negre comes from.
Subject: ['Spain', 'Arròs negre']
Predicate: ['currency', 'country']
Object: ['Euro', 'Spain']

Triple: [['__subject__ Spain __predicate__ currency __object__ Euro', '__subject__ Arròs negre __predicate__ country __object__ Spain']]
Text: In Spain, people pay for the traditional arros negre dish with the Euro.
Subject: ['Spain', 'Arròs negre']
Predicate: ['currency', 'country']
Object: ['Euro', 'Spain']

Triple: [['__subject__ Spain __predicate__ currency __object__ Euro', '__subject__ Arròs negre __predicate__ country __object__ Spain']]
Text: Arros negre is a traditional dish from Spain, where the euro is used.
Subject: ['Spain', 'Arròs negre']
Predicate: ['currency', 'country']
Object: ['Euro', 'Spain']

Triple: [['__subject__ Spain __predicate__ language __object__ Spanish language', '__subject__ Ajoblanco __predicate__ country __object__ Spain']]
Text: The Spanish language is spoken in Spain which is where Ajoblanco is from.
Subject: ['Spain', 'Ajoblanco']
Predicate: ['language', 'country']
Object: ['Spanish language', 'Spain']

Triple: [['__subject__ Spain __predicate__ language __object__ Spanish language', '__subject__ Ajoblanco __predicate__ country __object__ Spain']]
Text: Ajoblanco is from Spain whose language is Spanish.
Subject: ['Spain', 'Ajoblanco']
Predicate: ['language', 'country']
Object: ['Spanish language', 'Spain']

Triple: [['__subject__ Spain __predicate__ language __object__ Spanish language', '__subject__ Ajoblanco __predicate__ country __object__ Spain']]
Text: Spain (language: Spanish) is the origin of the dish, Ajoblanco.
Subject: ['Spain', 'Ajoblanco']
Predicate: ['language', 'country']
Object: ['Spanish language', 'Spain']

Triple: [['__subject__ Spain __predicate__ language __object__ Spanish language', '__subject__ Arròs negre __predicate__ country __object__ Spain']]
Text: The Spanish language is spoken in Spain where Arròs negre is a traditional dish.
Subject: ['Spain', 'Arròs negre']
Predicate: ['language', 'country']
Object: ['Spanish language', 'Spain']

Triple: [['__subject__ Spain __predicate__ language __object__ Spanish language', '__subject__ Arròs negre __predicate__ country __object__ Spain']]
Text: Arròs negre is a traditional dish from Spain where Spanish is spoken.
Subject: ['Spain', 'Arròs negre']
Predicate: ['language', 'country']
Object: ['Spanish language', 'Spain']

Triple: [['__subject__ Spain __predicate__ language __object__ Spanish language', '__subject__ Arròs negre __predicate__ country __object__ Spain']]
Text: Arros negre originates from Spanish speaking Spain.
Subject: ['Spain', 'Arròs negre']
Predicate: ['language', 'country']
Object: ['Spanish language', 'Spain']

Triple: [['__subject__ Spain __predicate__ leader __object__ Felipe VI of Spain', '__subject__ Ajoblanco __predicate__ country __object__ Spain']]
Text: Ajoblanco originates from the country of Spain where the leader is Felipe VI of Spain.
Subject: ['Spain', 'Ajoblanco']
Predicate: ['leader', 'country']
Object: ['Felipe VI of Spain', 'Spain']

Triple: [['__subject__ Spain __predicate__ leader __object__ Felipe VI of Spain', '__subject__ Ajoblanco __predicate__ country __object__ Spain']]
Text: Ajoblanco originates from Spain and Felipe VI is its leader.
Subject: ['Spain', 'Ajoblanco']
Predicate: ['leader', 'country']
Object: ['Felipe VI of Spain', 'Spain']

Triple: [['__subject__ Spain __predicate__ leader __object__ Felipe VI of Spain', '__subject__ Ajoblanco __predicate__ country __object__ Spain']]
Text: Ajoblanco is from Spain and Felipe VI is its leader.
Subject: ['Spain', 'Ajoblanco']
Predicate: ['leader', 'country']
Object: ['Felipe VI of Spain', 'Spain']

Triple: [['__subject__ Tomato __predicate__ family __object__ Solanaceae', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Tomato']]
Text: The tomato belongs to the family of Solanaceae and is an ingredient in Amatriciana sauce.
Subject: ['Tomato', 'Amatriciana sauce']
Predicate: ['family', 'ingredient']
Object: ['Solanaceae', 'Tomato']

Triple: [['__subject__ Tomato __predicate__ family __object__ Solanaceae', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Tomato']]
Text: An ingredient of amatriciana sauce is tomato which belongs to the solanaceae family.
Subject: ['Tomato', 'Amatriciana sauce']
Predicate: ['family', 'ingredient']
Object: ['Solanaceae', 'Tomato']

Triple: [['__subject__ Tomato __predicate__ family __object__ Solanaceae', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Tomato']]
Text: The tomato comes from the Solanaceae family and is an ingredient in Amatriciana sauce.
Subject: ['Tomato', 'Amatriciana sauce']
Predicate: ['family', 'ingredient']
Object: ['Solanaceae', 'Tomato']

Triple: [['__subject__ Tomato __predicate__ genus __object__ Solanum', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Tomato']]
Text: Tomato belongs to the genus Solanum and is an ingredient of Amatriciana sauce.
Subject: ['Tomato', 'Amatriciana sauce']
Predicate: ['genus', 'ingredient']
Object: ['Solanum', 'Tomato']

Triple: [['__subject__ Tomato __predicate__ genus __object__ Solanum', '__subject__ Amatriciana sauce __predicate__ ingredient __object__ Tomato']]
Text: Tomato belongs to the genus Solanum and is an ingredient in Amatriciana sauce.
Subject: ['Tomato', 'Amatriciana sauce']
Predicate: ['genus', 'ingredient']
Object: ['Solanum', 'Tomato']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ African Americans', '__subject__ Baked Alaska __predicate__ country __object__ United States']]
Text: African Americans are one of the ethnic groups in the United States where the dish known as Baked Alaska can be found.
Subject: ['United States', 'Baked Alaska']
Predicate: ['ethnicGroup', 'country']
Object: ['African Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ African Americans', '__subject__ Baked Alaska __predicate__ country __object__ United States']]
Text: Baked Alaska is from the United States (along with ethnic African Americans).
Subject: ['United States', 'Baked Alaska']
Predicate: ['ethnicGroup', 'country']
Object: ['African Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Baked Alaska __predicate__ country __object__ United States']]
Text: A Baked Alaska is a dessert from the United States which has Native Americans as one of its ethnic groups of the country.
Subject: ['United States', 'Baked Alaska']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Baked Alaska __predicate__ country __object__ United States']]
Text: Baked Alaska and the ethnic Native Americans, originate from the United States.
Subject: ['United States', 'Baked Alaska']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States', '__subject__ Baked Alaska __predicate__ country __object__ United States']]
Text: In the United States Native Americans are an ethnic group and Baked Alaska is a dish found there.
Subject: ['United States', 'Baked Alaska']
Predicate: ['ethnicGroup', 'country']
Object: ['Native Americans in the United States', 'United States']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ 230 (cubic inches)', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Convertible']]
Text: The 1955 Dodge is a convertible with a 230 cubic inch engine.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['230 (cubic inches)', 'Convertible']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ 230 (cubic inches)', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Convertible']]
Text: The 1955 Dodge convertible's engine size is 230 cubic inches.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['230 (cubic inches)', 'Convertible']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ 230 (cubic inches)', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Convertible']]
Text: The 1955 Dodge is a convertible and has a 230 cubic inch engine.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['230 (cubic inches)', 'Convertible']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ 230 (cubic inches)', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Hardtop']]
Text: The 1955 Dodge has a hardtop and it engine is 230 cubic inches.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['230 (cubic inches)', 'Hardtop']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ 230 (cubic inches)', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Hardtop']]
Text: The 1955 Dodge, has an engine size of 230 cubic inches and a hardtop.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['230 (cubic inches)', 'Hardtop']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ 230 (cubic inches)', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Hardtop']]
Text: The engine size in the 1955 Dodge is 230 cubic inches and the vehicle has a hardtop.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['230 (cubic inches)', 'Hardtop']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ 230 (cubic inches)', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Station wagon']]
Text: The 1955 Dodge, has a station wagon style body and an engine that is, 230 cubic inches.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['230 (cubic inches)', 'Station wagon']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ 230 (cubic inches)', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Station wagon']]
Text: The 1955 Dodge station wagon has an engine that is 230 cubic inches.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['230 (cubic inches)', 'Station wagon']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ 230 (cubic inches)', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Station wagon']]
Text: The 1955 Dodge has an engine size of 230 cubic inches and a station wagon style body.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['230 (cubic inches)', 'Station wagon']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ AMC V8 engine', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Station wagon']]
Text: The 1955 Dodge is station wagon with an AMC V8 engine.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['AMC V8 engine', 'Station wagon']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ AMC V8 engine', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Station wagon']]
Text: The 1955 Dodge has an AMC V8 engine and a station wagon style body.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['AMC V8 engine', 'Station wagon']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ AMC V8 engine', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Station wagon']]
Text: The 1955 Dodge has an AMC V8 engine and is a station wagon.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['AMC V8 engine', 'Station wagon']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ Straight-six engine', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Station wagon']]
Text: The 1955 Dodge has a straight six engine and a station wagon style body.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['Straight-six engine', 'Station wagon']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ Straight-six engine', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Station wagon']]
Text: The Dodge 1955 has a straight-six engine and a station wagon style body.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['Straight-six engine', 'Station wagon']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ Straight-six engine', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Station wagon']]
Text: The 1955 Dodge has a station wagon style body and a straight-six engine.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['Straight-six engine', 'Station wagon']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ V8 engine', '__subject__ 1955 Dodge __predicate__ alternativeName __object__ Dodge Coronet']]
Text: Dodge Coronet is the alternative name for the 1955 Dodge which has a V8 engine.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'alternativeName']
Object: ['V8 engine', 'Dodge Coronet']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ V8 engine', '__subject__ 1955 Dodge __predicate__ alternativeName __object__ Dodge Coronet']]
Text: The 1955 Dodge, also named the Dodge Coronet, has a V8 engine.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'alternativeName']
Object: ['V8 engine', 'Dodge Coronet']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ V8 engine', '__subject__ 1955 Dodge __predicate__ alternativeName __object__ Dodge Coronet']]
Text: The 1955 Dodge has a V8 engine and is also named the Dodge Coronet.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'alternativeName']
Object: ['V8 engine', 'Dodge Coronet']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ V8 engine', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Hardtop']]
Text: The 1955 Dodge has a V8 engine and a hardtop.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['V8 engine', 'Hardtop']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ V8 engine', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Hardtop']]
Text: The 1955 Dodge has a hardtop and a V8 engine.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['V8 engine', 'Hardtop']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ V8 engine', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Sedan (automobile)']]
Text: The 1955 Dodge is a sedan with a V8 engine.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['V8 engine', 'Sedan (automobile)']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ V8 engine', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Sedan (automobile)']]
Text: The 1955 Dodge is a sedan type vehicle that has a V8 engine.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['V8 engine', 'Sedan (automobile)']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ V8 engine', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Station wagon']]
Text: The 1955 Dodge which has a station wagon style body also has a V8 engine.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['V8 engine', 'Station wagon']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ V8 engine', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Station wagon']]
Text: The 1955 Dodge has a V8 engine and a station wagon style body.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['V8 engine', 'Station wagon']

Triple: [['__subject__ 1955 Dodge __predicate__ engine __object__ V8 engine', '__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Station wagon']]
Text: The 1955 Dodge is a station wagon with a V8 engine.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['engine', 'bodyStyle']
Object: ['V8 engine', 'Station wagon']

Triple: [['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom', '__subject__ 1955 Dodge __predicate__ manufacturer __object__ Dodge']]
Text: The Dodge manufactured, 1955 Dodge and the DeSoto Custom are related means of transportation.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['relatedMeanOfTransportation', 'manufacturer']
Object: ['DeSoto Custom', 'Dodge']

Triple: [['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom', '__subject__ 1955 Dodge __predicate__ manufacturer __object__ Dodge']]
Text: The 1955 Dodge, manufactured by Dodge, is a related means of transport to the DeSoto Custom.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['relatedMeanOfTransportation', 'manufacturer']
Object: ['DeSoto Custom', 'Dodge']

Triple: [['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom', '__subject__ 1955 Dodge __predicate__ manufacturer __object__ Dodge']]
Text: The Dodge 1955 is made by Dodge and is related to the Desoto Custom.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['relatedMeanOfTransportation', 'manufacturer']
Object: ['DeSoto Custom', 'Dodge']

Triple: [['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom', '__subject__ DeSoto Custom __predicate__ manufacturer __object__ DeSoto (automobile)']]
Text: The 1955 Dodge and the DeSoto manufactured DeSoto Custom are related means of transportation.
Subject: ['1955 Dodge', 'DeSoto Custom']
Predicate: ['relatedMeanOfTransportation', 'manufacturer']
Object: ['DeSoto Custom', 'DeSoto (automobile)']

Triple: [['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom', '__subject__ DeSoto Custom __predicate__ manufacturer __object__ DeSoto (automobile)']]
Text: The 1955 Dodge and the DeSoto Custom are related means of transportation, DeSoto Custom was made by DeSoto.
Subject: ['1955 Dodge', 'DeSoto Custom']
Predicate: ['relatedMeanOfTransportation', 'manufacturer']
Object: ['DeSoto Custom', 'DeSoto (automobile)']

Triple: [['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom', '__subject__ DeSoto Custom __predicate__ manufacturer __object__ DeSoto (automobile)']]
Text: The 1955 Dodge and the DeSoto Custom, which was manufactured at DeSoto, are related means of transportation.
Subject: ['1955 Dodge', 'DeSoto Custom']
Predicate: ['relatedMeanOfTransportation', 'manufacturer']
Object: ['DeSoto Custom', 'DeSoto (automobile)']

Triple: [['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom', '__subject__ DeSoto Custom __predicate__ relatedMeanOfTransportation __object__ Chrysler Newport']]
Text: Chrysler Newport, DeSoto Custom and the 1955 Dodge are all cars.
Subject: ['1955 Dodge', 'DeSoto Custom']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['DeSoto Custom', 'Chrysler Newport']

Triple: [['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom', '__subject__ DeSoto Custom __predicate__ relatedMeanOfTransportation __object__ Chrysler Newport']]
Text: The 1955 Dodge is related to the DeSoto Custom which, together with the Chrysler Newport are related types of transport.
Subject: ['1955 Dodge', 'DeSoto Custom']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['DeSoto Custom', 'Chrysler Newport']

Triple: [['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom', '__subject__ DeSoto Custom __predicate__ relatedMeanOfTransportation __object__ Chrysler Newport']]
Text: The DeSoto Custom is related to the Chrysler Newport and to the 1955 Dodge.
Subject: ['1955 Dodge', 'DeSoto Custom']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['DeSoto Custom', 'Chrysler Newport']

Triple: [['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ Plymouth Plaza', '__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom']]
Text: The 1955 Dodge and the DeSoto Custom and Plymouth Plaza are related means of transportation.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Plymouth Plaza', 'DeSoto Custom']

Triple: [['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ Plymouth Plaza', '__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom']]
Text: The 1955 Dodge and the Plymouth Plaza are both cars. The 1955 Dodge and the DeSoto Custom are connected means of transportation.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Plymouth Plaza', 'DeSoto Custom']

Triple: [['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ Plymouth Plaza', '__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom']]
Text: The 1955 Dodge and the Plymouth Plaza are both cars and the former is related to the DeSoto Custom.
Subject: ['1955 Dodge', '1955 Dodge']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Plymouth Plaza', 'DeSoto Custom']

Triple: [['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ Plymouth Plaza', '__subject__ Plymouth Plaza __predicate__ manufacturer __object__ Plymouth (automobile)']]
Text: 1955 Dodge and Plymouth Plaza, made by Plymouth, are related kinds of transportation.
Subject: ['1955 Dodge', 'Plymouth Plaza']
Predicate: ['relatedMeanOfTransportation', 'manufacturer']
Object: ['Plymouth Plaza', 'Plymouth (automobile)']

Triple: [['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ Plymouth Plaza', '__subject__ Plymouth Plaza __predicate__ manufacturer __object__ Plymouth (automobile)']]
Text: The Plymouth Plaza was manufactured by Plymouth and is a related kind of transport to the 1955 Dodge.
Subject: ['1955 Dodge', 'Plymouth Plaza']
Predicate: ['relatedMeanOfTransportation', 'manufacturer']
Object: ['Plymouth Plaza', 'Plymouth (automobile)']

Triple: [['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ Plymouth Plaza', '__subject__ Plymouth Plaza __predicate__ manufacturer __object__ Plymouth (automobile)']]
Text: The 1955 Dodge and the Plymouth Plaza are both cars.
Subject: ['1955 Dodge', 'Plymouth Plaza']
Predicate: ['relatedMeanOfTransportation', 'manufacturer']
Object: ['Plymouth Plaza', 'Plymouth (automobile)']

Triple: [['__subject__ A-Rosa Luna __predicate__ builder __object__ Neptun Werft', '__subject__ Neptun Werft __predicate__ country __object__ Germany']]
Text: Neptun Werft is located in Germany and built the A-Rosa Luna.
Subject: ['A-Rosa Luna', 'Neptun Werft']
Predicate: ['builder', 'country']
Object: ['Neptun Werft', 'Germany']

Triple: [['__subject__ A-Rosa Luna __predicate__ builder __object__ Neptun Werft', '__subject__ Neptun Werft __predicate__ country __object__ Germany']]
Text: The A Rosa Luna was built at the Neptun Werft in Germany.
Subject: ['A-Rosa Luna', 'Neptun Werft']
Predicate: ['builder', 'country']
Object: ['Neptun Werft', 'Germany']

Triple: [['__subject__ A-Rosa Luna __predicate__ builder __object__ Neptun Werft', '__subject__ Neptun Werft __predicate__ country __object__ Germany']]
Text: The A Rosa Luna was built on the Neptun Werft in Germany.
Subject: ['A-Rosa Luna', 'Neptun Werft']
Predicate: ['builder', 'country']
Object: ['Neptun Werft', 'Germany']

Triple: [['__subject__ A-Rosa Luna __predicate__ completionDate __object__ 2005-04-06', '__subject__ A-Rosa Luna __predicate__ length __object__ 125800.0 (millimetres)']]
Text: The A-Rosa Luna is 125800.0 millimetres in length and was completed on 6 April 2005.
Subject: ['A-Rosa Luna', 'A-Rosa Luna']
Predicate: ['completionDate', 'length']
Object: ['2005-04-06', '125800.0 (millimetres)']

Triple: [['__subject__ A-Rosa Luna __predicate__ completionDate __object__ 2005-04-06', '__subject__ A-Rosa Luna __predicate__ length __object__ 125800.0 (millimetres)']]
Text: The A-Rosa Luna is 125.8m long and was completed on April 6th 2005.
Subject: ['A-Rosa Luna', 'A-Rosa Luna']
Predicate: ['completionDate', 'length']
Object: ['2005-04-06', '125800.0 (millimetres)']

Triple: [['__subject__ A-Rosa Luna __predicate__ completionDate __object__ 2005-04-06', '__subject__ A-Rosa Luna __predicate__ length __object__ 125800.0 (millimetres)']]
Text: The building of the 125.8 metre long, A-Rosa Luna, was completed on April 6th 2005.
Subject: ['A-Rosa Luna', 'A-Rosa Luna']
Predicate: ['completionDate', 'length']
Object: ['2005-04-06', '125800.0 (millimetres)']

Triple: [['__subject__ A-Rosa Luna __predicate__ length __object__ 125800.0 (millimetres)', '__subject__ A-Rosa Luna __predicate__ powerType __object__ MTU Friedrichshafen']]
Text: The A-Rosa Luna is 125800.0 millimetres in length and is powered by a MTU Friedrichshafen engine.
Subject: ['A-Rosa Luna', 'A-Rosa Luna']
Predicate: ['length', 'powerType']
Object: ['125800.0 (millimetres)', 'MTU Friedrichshafen']

Triple: [['__subject__ A-Rosa Luna __predicate__ length __object__ 125800.0 (millimetres)', '__subject__ A-Rosa Luna __predicate__ powerType __object__ MTU Friedrichshafen']]
Text: The A-Rosa Luna is 125.8m long and is powered by MTU Friedrichshafen engines.
Subject: ['A-Rosa Luna', 'A-Rosa Luna']
Predicate: ['length', 'powerType']
Object: ['125800.0 (millimetres)', 'MTU Friedrichshafen']

Triple: [['__subject__ A-Rosa Luna __predicate__ length __object__ 125800.0 (millimetres)', '__subject__ A-Rosa Luna __predicate__ powerType __object__ MTU Friedrichshafen']]
Text: The A-Rosa Luna is powered by a MTU Friedrichshafen engine and is 125.8 metres in length.
Subject: ['A-Rosa Luna', 'A-Rosa Luna']
Predicate: ['length', 'powerType']
Object: ['125800.0 (millimetres)', 'MTU Friedrichshafen']

Triple: [['__subject__ A-Rosa Luna __predicate__ shipDisplacement __object__ 1850.0 (tonnes)', '__subject__ A-Rosa Luna __predicate__ topSpeed __object__ 24.0']]
Text: A-Rosa Luna has a ship displacement of 1850 tonnes and a top speed of 24.0.
Subject: ['A-Rosa Luna', 'A-Rosa Luna']
Predicate: ['shipDisplacement', 'topSpeed']
Object: ['1850.0 (tonnes)', '24.0']

Triple: [['__subject__ A-Rosa Luna __predicate__ shipDisplacement __object__ 1850.0 (tonnes)', '__subject__ A-Rosa Luna __predicate__ topSpeed __object__ 24.0']]
Text: The A-Rosa Luna weighs 1850 tonnes and has a top speed of 24.0.
Subject: ['A-Rosa Luna', 'A-Rosa Luna']
Predicate: ['shipDisplacement', 'topSpeed']
Object: ['1850.0 (tonnes)', '24.0']

Triple: [['__subject__ A-Rosa Luna __predicate__ shipPower __object__ 2 × MTU 16V 2000 M60 engine', '__subject__ A-Rosa Luna __predicate__ length __object__ 125800.0 (millimetres)']]
Text: The A-Rosa Luna has a 2 × MTU 16V 2000 M60 engine and is 125800.0 millimetres in length.
Subject: ['A-Rosa Luna', 'A-Rosa Luna']
Predicate: ['shipPower', 'length']
Object: ['2 × MTU 16V 2000 M60 engine', '125800.0 (millimetres)']

Triple: [['__subject__ A-Rosa Luna __predicate__ shipPower __object__ 2 × MTU 16V 2000 M60 engine', '__subject__ A-Rosa Luna __predicate__ length __object__ 125800.0 (millimetres)']]
Text: The A-Rosa Luna which is 125.8 metres long has a 2 x MTU 16V 2000 M60 engine.
Subject: ['A-Rosa Luna', 'A-Rosa Luna']
Predicate: ['shipPower', 'length']
Object: ['2 × MTU 16V 2000 M60 engine', '125800.0 (millimetres)']

Triple: [['__subject__ A-Rosa Luna __predicate__ shipPower __object__ 2 × MTU 16V 2000 M60 engine', '__subject__ A-Rosa Luna __predicate__ length __object__ 125800.0 (millimetres)']]
Text: The powering of the A-Rosa Luna, which is 125800.0 (millimetres) long, is the "2xMTU 16V 2000 M60 engine".
Subject: ['A-Rosa Luna', 'A-Rosa Luna']
Predicate: ['shipPower', 'length']
Object: ['2 × MTU 16V 2000 M60 engine', '125800.0 (millimetres)']

Triple: [['__subject__ AIDA Cruises __predicate__ location __object__ Germany', '__subject__ AIDAluna __predicate__ operator __object__ AIDA Cruises']]
Text: German located, AIDA Cruises, is the operator of the AIDAluna.
Subject: ['AIDA Cruises', 'AIDAluna']
Predicate: ['location', 'operator']
Object: ['Germany', 'AIDA Cruises']

Triple: [['__subject__ AIDA Cruises __predicate__ location __object__ Germany', '__subject__ AIDAluna __predicate__ operator __object__ AIDA Cruises']]
Text: AIDA Cruises are based in Germany and operate the ship AIDAluna.
Subject: ['AIDA Cruises', 'AIDAluna']
Predicate: ['location', 'operator']
Object: ['Germany', 'AIDA Cruises']

Triple: [['__subject__ AIDA Cruises __predicate__ location __object__ Germany', '__subject__ AIDAluna __predicate__ operator __object__ AIDA Cruises']]
Text: AIDA Cruises is located in Germany and is the operator of the AIDAluna.
Subject: ['AIDA Cruises', 'AIDAluna']
Predicate: ['location', 'operator']
Object: ['Germany', 'AIDA Cruises']

Triple: [['__subject__ AIDA Cruises __predicate__ location __object__ Germany', '__subject__ AIDAluna __predicate__ owner __object__ AIDA Cruises']]
Text: AIDA Cruises, located in Germany, is the owner of the AIDAluna.
Subject: ['AIDA Cruises', 'AIDAluna']
Predicate: ['location', 'owner']
Object: ['Germany', 'AIDA Cruises']

Triple: [['__subject__ AIDA Cruises __predicate__ location __object__ Germany', '__subject__ AIDAluna __predicate__ owner __object__ AIDA Cruises']]
Text: AIDAluna are owned by AIDA Cruises who are located in Germany.
Subject: ['AIDA Cruises', 'AIDAluna']
Predicate: ['location', 'owner']
Object: ['Germany', 'AIDA Cruises']

Triple: [['__subject__ AIDA Cruises __predicate__ location __object__ Germany', '__subject__ AIDAluna __predicate__ owner __object__ AIDA Cruises']]
Text: AIDA Cruises is located in Germany who also own AIDAluna.
Subject: ['AIDA Cruises', 'AIDAluna']
Predicate: ['location', 'owner']
Object: ['Germany', 'AIDA Cruises']

Triple: [['__subject__ AIDA Cruises __predicate__ location __object__ Rostock', '__subject__ AIDAluna __predicate__ owner __object__ AIDA Cruises']]
Text: AIDA Cruises are located at Rostock and are the owners of the AIDAluna.
Subject: ['AIDA Cruises', 'AIDAluna']
Predicate: ['location', 'owner']
Object: ['Rostock', 'AIDA Cruises']

Triple: [['__subject__ AIDA Cruises __predicate__ location __object__ Rostock', '__subject__ AIDAluna __predicate__ owner __object__ AIDA Cruises']]
Text: AIDA Cruises, who own AIDAluna, are found at Rostock.
Subject: ['AIDA Cruises', 'AIDAluna']
Predicate: ['location', 'owner']
Object: ['Rostock', 'AIDA Cruises']

Triple: [['__subject__ AIDA Cruises __predicate__ location __object__ Rostock', '__subject__ AIDAluna __predicate__ owner __object__ AIDA Cruises']]
Text: The owner of AIDAluna is AIDA Cruise which is located in Rostock.
Subject: ['AIDA Cruises', 'AIDAluna']
Predicate: ['location', 'owner']
Object: ['Rostock', 'AIDA Cruises']

Triple: [['__subject__ AIDA Cruises __predicate__ location __object__ Rostock', '__subject__ AIDAstella __predicate__ operator __object__ AIDA Cruises']]
Text: The operator of AIDAstella is AIDA Cruises, they are located at Rostock.
Subject: ['AIDA Cruises', 'AIDAstella']
Predicate: ['location', 'operator']
Object: ['Rostock', 'AIDA Cruises']

Triple: [['__subject__ AIDA Cruises __predicate__ location __object__ Rostock', '__subject__ AIDAstella __predicate__ operator __object__ AIDA Cruises']]
Text: The ship AIDAstella is operated by AIDA Cruises, who are located at Rostock.
Subject: ['AIDA Cruises', 'AIDAstella']
Predicate: ['location', 'operator']
Object: ['Rostock', 'AIDA Cruises']

Triple: [['__subject__ AIDA Cruises __predicate__ location __object__ Rostock', '__subject__ AIDAstella __predicate__ operator __object__ AIDA Cruises']]
Text: AIDA Cruises is in Rostock and operates the ship AIDAstella.
Subject: ['AIDA Cruises', 'AIDAstella']
Predicate: ['location', 'operator']
Object: ['Rostock', 'AIDA Cruises']

Triple: [['__subject__ AIDAluna __predicate__ christeningDate __object__ 2009-04-04', '__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)']]
Text: The christening date of AIDAluna, which is 242000.0 mms in length, is the 4th April 2004.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['christeningDate', 'length']
Object: ['2009-04-04', '252000.0 (millimetres)']

Triple: [['__subject__ AIDAluna __predicate__ christeningDate __object__ 2009-04-04', '__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)']]
Text: The AIDAluna has a length of 252000.0 mms and its christening date was 4 April 2009.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['christeningDate', 'length']
Object: ['2009-04-04', '252000.0 (millimetres)']

Triple: [['__subject__ AIDAluna __predicate__ christeningDate __object__ 2009-04-04', '__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)']]
Text: The AIDAluna is 252 metres long and was launched on 4th April 2009.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['christeningDate', 'length']
Object: ['2009-04-04', '252000.0 (millimetres)']

Triple: [['__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)', '__subject__ AIDAluna __predicate__ activeYearsStartDate __object__ 2009-03-22']]
Text: The AIDAluna which has a length of 252000.0 millimetres started its service on the 22nd of March, 2009.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['length', 'activeYearsStartDate']
Object: ['252000.0 (millimetres)', '2009-03-22']

Triple: [['__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)', '__subject__ AIDAluna __predicate__ activeYearsStartDate __object__ 2009-03-22']]
Text: The AIDAluna is 252 metres long, and its service was started on the 22nd of March, 2009.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['length', 'activeYearsStartDate']
Object: ['252000.0 (millimetres)', '2009-03-22']

Triple: [['__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)', '__subject__ AIDAluna __predicate__ activeYearsStartDate __object__ 2009-03-22']]
Text: The AIDAluna began its service on 22 March, 2009 and it is 252000.0 mms in length.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['length', 'activeYearsStartDate']
Object: ['252000.0 (millimetres)', '2009-03-22']

Triple: [['__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)', '__subject__ AIDAluna __predicate__ powerType __object__ Caterpillar Inc.']]
Text: At 252 metres long, the AIDAluna, is powered by Caterpillar Inc.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['length', 'powerType']
Object: ['252000.0 (millimetres)', 'Caterpillar Inc.']

Triple: [['__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)', '__subject__ AIDAluna __predicate__ powerType __object__ Caterpillar Inc.']]
Text: The length of the AIDAluna, which is powered by Caterpillar Inc, is 252000.0 millimetres.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['length', 'powerType']
Object: ['252000.0 (millimetres)', 'Caterpillar Inc.']

Triple: [['__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)', '__subject__ AIDAluna __predicate__ powerType __object__ Caterpillar Inc.']]
Text: The AIDAluna is 252m long and has a Caterpillar Inc. engine.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['length', 'powerType']
Object: ['252000.0 (millimetres)', 'Caterpillar Inc.']

Triple: [['__subject__ AIDAluna __predicate__ maidenVoyage __object__ 2009-03-22', '__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)']]
Text: The AIDAluna is 252m long andhad its maiden voyage on March 22 2009.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['maidenVoyage', 'length']
Object: ['2009-03-22', '252000.0 (millimetres)']

Triple: [['__subject__ AIDAluna __predicate__ maidenVoyage __object__ 2009-03-22', '__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)']]
Text: The AIDAluna is 252 metres long and had its maiden voyage on 22 March 2009.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['maidenVoyage', 'length']
Object: ['2009-03-22', '252000.0 (millimetres)']

Triple: [['__subject__ AIDAluna __predicate__ maidenVoyage __object__ 2009-03-22', '__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)']]
Text: The AIDAluna, 252000.0 millimetres long, had her first voyage on March 22, 2009.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['maidenVoyage', 'length']
Object: ['2009-03-22', '252000.0 (millimetres)']

Triple: [['__subject__ AIDAluna __predicate__ owner __object__ AIDA Cruises', '__subject__ AIDAluna __predicate__ builder __object__ Meyer Werft']]
Text: Meyer Werft was the builder of the AIDAluna which is owned by AIDA Cruises.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['owner', 'builder']
Object: ['AIDA Cruises', 'Meyer Werft']

Triple: [['__subject__ AIDAluna __predicate__ owner __object__ AIDA Cruises', '__subject__ AIDAluna __predicate__ builder __object__ Meyer Werft']]
Text: Meyer Werft was the builder of the AIDAluna, which is owned by AIDA Cruises.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['owner', 'builder']
Object: ['AIDA Cruises', 'Meyer Werft']

Triple: [['__subject__ AIDAluna __predicate__ owner __object__ AIDA Cruises', '__subject__ AIDAluna __predicate__ builder __object__ Meyer Werft']]
Text: The ship AIDAluna, which is owned by AIDA Cruises, was built by Meyer Werft.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['owner', 'builder']
Object: ['AIDA Cruises', 'Meyer Werft']

Triple: [['__subject__ AIDAluna __predicate__ shipClass __object__ Sphinx class cruise ship', '__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)']]
Text: The AIDAluna is a 252m long Sphinx class cruise ship.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['shipClass', 'length']
Object: ['Sphinx class cruise ship', '252000.0 (millimetres)']

Triple: [['__subject__ AIDAluna __predicate__ shipClass __object__ Sphinx class cruise ship', '__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)']]
Text: The AIDAluna is 252 metres in length and is a Sphinx class cruise ship.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['shipClass', 'length']
Object: ['Sphinx class cruise ship', '252000.0 (millimetres)']

Triple: [['__subject__ AIDAluna __predicate__ shipClass __object__ Sphinx class cruise ship', '__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)']]
Text: The AIDAluna is 252m long and is a Sphinx class cruise ship.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['shipClass', 'length']
Object: ['Sphinx class cruise ship', '252000.0 (millimetres)']

Triple: [['__subject__ AIDAluna __predicate__ shipInService __object__ 2009-03-22', '__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)']]
Text: The ship, AIDAluna, has a length of 252000.0 millimetres and began its service on the 22nd of march 2009.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['shipInService', 'length']
Object: ['2009-03-22', '252000.0 (millimetres)']

Triple: [['__subject__ AIDAluna __predicate__ shipInService __object__ 2009-03-22', '__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)']]
Text: The ship AIDAluna began service on March 22nd 2009 and is 252 metres long.
Subject: ['AIDAluna', 'AIDAluna']
Predicate: ['shipInService', 'length']
Object: ['2009-03-22', '252000.0 (millimetres)']

Triple: [['__subject__ AIDAstella __predicate__ builder __object__ Meyer Werft', '__subject__ Meyer Werft __predicate__ location __object__ Papenburg']]
Text: AIDAstella was built by Meyer Werft in Papenburg.
Subject: ['AIDAstella', 'Meyer Werft']
Predicate: ['builder', 'location']
Object: ['Meyer Werft', 'Papenburg']

Triple: [['__subject__ AIDAstella __predicate__ builder __object__ Meyer Werft', '__subject__ Meyer Werft __predicate__ location __object__ Papenburg']]
Text: The AIDAstella was built by Meyer Werft located in Papenburg.
Subject: ['AIDAstella', 'Meyer Werft']
Predicate: ['builder', 'location']
Object: ['Meyer Werft', 'Papenburg']

Triple: [['__subject__ AIDAstella __predicate__ builder __object__ Meyer Werft', '__subject__ Meyer Werft __predicate__ location __object__ Papenburg']]
Text: The AIDAstella was built by Meyer Werft in Papenburg.
Subject: ['AIDAstella', 'Meyer Werft']
Predicate: ['builder', 'location']
Object: ['Meyer Werft', 'Papenburg']

Triple: [['__subject__ AIDAstella __predicate__ completionDate __object__ 2013-03-11', '__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']]
Text: AIDAstella is 253260.0 millimetres in length and was completed on March 11th, 2013.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['completionDate', 'length']
Object: ['2013-03-11', '253260.0 (millimetres)']

Triple: [['__subject__ AIDAstella __predicate__ completionDate __object__ 2013-03-11', '__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']]
Text: The AIDAstella, which is 253260.0 millimetres long, was completed on March 11th 2013.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['completionDate', 'length']
Object: ['2013-03-11', '253260.0 (millimetres)']

Triple: [['__subject__ AIDAstella __predicate__ completionDate __object__ 2013-03-11', '__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']]
Text: The AIDAstella was 253260.0 millimetres in length and was completed on March 11th 2013.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['completionDate', 'length']
Object: ['2013-03-11', '253260.0 (millimetres)']

Triple: [['__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)', '__subject__ AIDAstella __predicate__ activeYearsStartDate __object__ 2013-03-17']]
Text: The AIDAstella, which is 253260.0 millimetres in length, began service on March 17th 2013.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['length', 'activeYearsStartDate']
Object: ['253260.0 (millimetres)', '2013-03-17']

Triple: [['__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)', '__subject__ AIDAstella __predicate__ activeYearsStartDate __object__ 2013-03-17']]
Text: The AIDAstella service began on March 17th 2013 and is 253260.0 mms in length.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['length', 'activeYearsStartDate']
Object: ['253260.0 (millimetres)', '2013-03-17']

Triple: [['__subject__ AIDAstella __predicate__ maidenVoyage __object__ 2013-03-17', '__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']]
Text: The AIDAstella, which is 253260.0 millimetres in length, had its maiden voyage on the 17th of March 2013.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['maidenVoyage', 'length']
Object: ['2013-03-17', '253260.0 (millimetres)']

Triple: [['__subject__ AIDAstella __predicate__ maidenVoyage __object__ 2013-03-17', '__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']]
Text: The AIDAstella, is 253260.0 millimetres in length and its first journey took place on 17/03/2013.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['maidenVoyage', 'length']
Object: ['2013-03-17', '253260.0 (millimetres)']

Triple: [['__subject__ AIDAstella __predicate__ maidenVoyage __object__ 2013-03-17', '__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']]
Text: The AIDAstella is 253260.0 millimetres in length and had her maiden voyage on 17 March 2013.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['maidenVoyage', 'length']
Object: ['2013-03-17', '253260.0 (millimetres)']

Triple: [['__subject__ AIDAstella __predicate__ shipClass __object__ Sphinx-class cruise ship', '__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']]
Text: AIDAstella is a "Sphinx-class" cruise ship 253260.0 millimetres in length.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['shipClass', 'length']
Object: ['Sphinx-class cruise ship', '253260.0 (millimetres)']

Triple: [['__subject__ AIDAstella __predicate__ shipClass __object__ Sphinx-class cruise ship', '__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']]
Text: AIDAstella is a "Sphinx-class" cruise ship and is 253260.0 mms in length.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['shipClass', 'length']
Object: ['Sphinx-class cruise ship', '253260.0 (millimetres)']

Triple: [['__subject__ AIDAstella __predicate__ shipClass __object__ Sphinx-class cruise ship', '__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']]
Text: The AIDAstella, which is 253260.0 millimetres long, is a Sphinx-class cruise ship.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['shipClass', 'length']
Object: ['Sphinx-class cruise ship', '253260.0 (millimetres)']

Triple: [['__subject__ AIDAstella __predicate__ shipInService __object__ 2013-03-17', '__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']]
Text: The AIDAstella shop was put in service on March 17th, 2013 and it is 253260 mm long.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['shipInService', 'length']
Object: ['2013-03-17', '253260.0 (millimetres)']

Triple: [['__subject__ AIDAstella __predicate__ shipInService __object__ 2013-03-17', '__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']]
Text: The AIDAstella ship is 253260.0 millimetres long and was put in service on March 17, 2013.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['shipInService', 'length']
Object: ['2013-03-17', '253260.0 (millimetres)']

Triple: [['__subject__ AIDAstella __predicate__ shipInService __object__ 2013-03-17', '__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']]
Text: The AIDAstella ship is 253260.0 millimetres in length and was put in service on March 17, 2013.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['shipInService', 'length']
Object: ['2013-03-17', '253260.0 (millimetres)']

Triple: [['__subject__ AIDAstella __predicate__ shipLaidDown __object__ 2008-12-17', '__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']]
Text: The AIDAstella was laid down on 17th December 2008 and is 253260.0 millimetres in length.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['shipLaidDown', 'length']
Object: ['2008-12-17', '253260.0 (millimetres)']

Triple: [['__subject__ AIDAstella __predicate__ shipLaidDown __object__ 2008-12-17', '__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']]
Text: The AIDAstellas was laid down on 17th December 2008 and is 253.26m long.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['shipLaidDown', 'length']
Object: ['2008-12-17', '253260.0 (millimetres)']

Triple: [['__subject__ AIDAstella __predicate__ shipLaidDown __object__ 2008-12-17', '__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']]
Text: The AIDAstella is 253.26m long and was laid down in 17th December 2008.
Subject: ['AIDAstella', 'AIDAstella']
Predicate: ['shipLaidDown', 'length']
Object: ['2008-12-17', '253260.0 (millimetres)']

Triple: [['__subject__ ALCO RS-3 __predicate__ buildDate __object__ May 1950 - August 1956', '__subject__ ALCO RS-3 __predicate__ engine __object__ Four-stroke engine']]
Text: The ALCO RS-3 has a four-stroke engine and was produced between May 1950 and August 1956.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['buildDate', 'engine']
Object: ['May 1950 - August 1956', 'Four-stroke engine']

Triple: [['__subject__ ALCO RS-3 __predicate__ buildDate __object__ May 1950 - August 1956', '__subject__ ALCO RS-3 __predicate__ engine __object__ Four-stroke engine']]
Text: The ALCO RS-3, with a 4-stroke engine, was made between May 1950 and August 1956.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['buildDate', 'engine']
Object: ['May 1950 - August 1956', 'Four-stroke engine']

Triple: [['__subject__ ALCO RS-3 __predicate__ buildDate __object__ May 1950 - August 1956', '__subject__ ALCO RS-3 __predicate__ engine __object__ Four-stroke engine']]
Text: The ALCO RS-3 was produced between May 1950 and August 1956 and has a 4-stroke engine.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['buildDate', 'engine']
Object: ['May 1950 - August 1956', 'Four-stroke engine']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ ALCO RS-3 __predicate__ engine __object__ Four-stroke engine']]
Text: The ALCO RS-3 has a four-stroke engine and was built by the American Locomotive Company.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'engine']
Object: ['American Locomotive Company', 'Four-stroke engine']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ ALCO RS-3 __predicate__ engine __object__ Four-stroke engine']]
Text: The American Locomotive Company built the ALCO RS-3 which has a 4-stroke engine.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'engine']
Object: ['American Locomotive Company', 'Four-stroke engine']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ ALCO RS-3 __predicate__ engine __object__ V12 engine']]
Text: The ALCO RS-3 has a V12 engine and was built by the American Locomotive Company.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'engine']
Object: ['American Locomotive Company', 'V12 engine']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ ALCO RS-3 __predicate__ engine __object__ V12 engine']]
Text: The American Locomotive Company built the ALCO RS-3 with a V12 engine.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'engine']
Object: ['American Locomotive Company', 'V12 engine']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ ALCO RS-3 __predicate__ engine __object__ V12 engine']]
Text: The ALCO RS-3 has a V12 engine and is built by the American Locomotive Company.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'engine']
Object: ['American Locomotive Company', 'V12 engine']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ ALCO RS-3 __predicate__ length __object__ 17068.8 (millimetres)']]
Text: The ALCO RS-3 is 17068.8 mms in length and was built by the American Locomotive Company.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'length']
Object: ['American Locomotive Company', '17068.8 (millimetres)']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ ALCO RS-3 __predicate__ length __object__ 17068.8 (millimetres)']]
Text: The ALCO RS-3 was built by American Locomotive Company and it has the length of 17068.8 millimetres.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'length']
Object: ['American Locomotive Company', '17068.8 (millimetres)']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ ALCO RS-3 __predicate__ length __object__ 17068.8 (millimetres)']]
Text: The ALCO RS-3 is 17068.8 mms in length and is built by the American Locomotive Company.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'length']
Object: ['American Locomotive Company', '17068.8 (millimetres)']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ ALCO RS-3 __predicate__ powerType __object__ Diesel-electric transmission']]
Text: The ALCO RS-3 was built by the American Locomotive Company and has a diesel-electric transmission.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'powerType']
Object: ['American Locomotive Company', 'Diesel-electric transmission']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ ALCO RS-3 __predicate__ powerType __object__ Diesel-electric transmission']]
Text: The American Locomotive Company built the ALCO RS-3 which has a diesel-electric transmission.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'powerType']
Object: ['American Locomotive Company', 'Diesel-electric transmission']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ ALCO RS-3 __predicate__ powerType __object__ Diesel-electric transmission']]
Text: The ALCO RS-3 has a diesel-electric transmission and is built by the American Locomotive Company.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'powerType']
Object: ['American Locomotive Company', 'Diesel-electric transmission']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ American Locomotive Company __predicate__ foundationPlace __object__ Schenectady, New York']]
Text: The ALCO RS-3 was built by the American Locomotive Company who were founded in Schenectady, New York.
Subject: ['ALCO RS-3', 'American Locomotive Company']
Predicate: ['builder', 'foundationPlace']
Object: ['American Locomotive Company', 'Schenectady, New York']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ American Locomotive Company __predicate__ foundationPlace __object__ Schenectady, New York']]
Text: The American Locomotive Company built ALCO RS-3 and was founded in Schenectady, New York.
Subject: ['ALCO RS-3', 'American Locomotive Company']
Predicate: ['builder', 'foundationPlace']
Object: ['American Locomotive Company', 'Schenectady, New York']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ American Locomotive Company __predicate__ foundationPlace __object__ Schenectady, New York']]
Text: The builder of the ALCO RS-3 is the American Locomotive Company who were founded in Schenectady, New York.
Subject: ['ALCO RS-3', 'American Locomotive Company']
Predicate: ['builder', 'foundationPlace']
Object: ['American Locomotive Company', 'Schenectady, New York']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ American Locomotive Company __predicate__ foundationPlace __object__ United States']]
Text: The ALCO RS-3 was built by the US founded American Locomotive Company.
Subject: ['ALCO RS-3', 'American Locomotive Company']
Predicate: ['builder', 'foundationPlace']
Object: ['American Locomotive Company', 'United States']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ American Locomotive Company __predicate__ foundationPlace __object__ United States']]
Text: The American Locomotive Company built the ALCO RS-3 and was founded in the US.
Subject: ['ALCO RS-3', 'American Locomotive Company']
Predicate: ['builder', 'foundationPlace']
Object: ['American Locomotive Company', 'United States']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ American Locomotive Company __predicate__ foundationPlace __object__ United States']]
Text: The builder of the ALCO RS-3 is the American Locomotive Company which was founded in the United States.
Subject: ['ALCO RS-3', 'American Locomotive Company']
Predicate: ['builder', 'foundationPlace']
Object: ['American Locomotive Company', 'United States']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ American Locomotive Company __predicate__ country __object__ United States']]
Text: The ALCO RS-3 was built by the American Locomotive Company which is located in the U.S.
Subject: ['ALCO RS-3', 'American Locomotive Company']
Predicate: ['builder', 'country']
Object: ['American Locomotive Company', 'United States']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ American Locomotive Company __predicate__ country __object__ United States']]
Text: The American Locomotive Company which is located in the US, built the ALCO RS-3.
Subject: ['ALCO RS-3', 'American Locomotive Company']
Predicate: ['builder', 'country']
Object: ['American Locomotive Company', 'United States']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company', '__subject__ American Locomotive Company __predicate__ country __object__ United States']]
Text: The builder of the ALCO RS-3 is the American Locomotive Company, the location of which is the U.S.
Subject: ['ALCO RS-3', 'American Locomotive Company']
Predicate: ['builder', 'country']
Object: ['American Locomotive Company', 'United States']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ Montreal Locomotive Works', '__subject__ ALCO RS-3 __predicate__ engine __object__ V12 engine']]
Text: Montreal Locomotive Works is the builds of the ALCO RS-3 which has a V12 engine.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'engine']
Object: ['Montreal Locomotive Works', 'V12 engine']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ Montreal Locomotive Works', '__subject__ ALCO RS-3 __predicate__ engine __object__ V12 engine']]
Text: The ALCO RS-3 was built by the Montreal Locomotive Works and has a V12 engine.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'engine']
Object: ['Montreal Locomotive Works', 'V12 engine']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ Montreal Locomotive Works', '__subject__ ALCO RS-3 __predicate__ engine __object__ V12 engine']]
Text: The ALCO RS-3 has a V12 engine and was built by the Montreal Locomotive Works.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'engine']
Object: ['Montreal Locomotive Works', 'V12 engine']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ Montreal Locomotive Works', '__subject__ ALCO RS-3 __predicate__ length __object__ 17068.8 (millimetres)']]
Text: The ALCO RS-3, which is 17068.8 mm long, was manufactured by the Montreal Locomotive Works.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'length']
Object: ['Montreal Locomotive Works', '17068.8 (millimetres)']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ Montreal Locomotive Works', '__subject__ ALCO RS-3 __predicate__ length __object__ 17068.8 (millimetres)']]
Text: The ALCO RS-3 is 17068.8 millimetres long and was built by the Montreal Locomotive Works.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'length']
Object: ['Montreal Locomotive Works', '17068.8 (millimetres)']

Triple: [['__subject__ ALCO RS-3 __predicate__ builder __object__ Montreal Locomotive Works', '__subject__ ALCO RS-3 __predicate__ length __object__ 17068.8 (millimetres)']]
Text: The ALCO RS-3 is 17068.8 mms in length and was built by the Montreal Locomotive Works.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['builder', 'length']
Object: ['Montreal Locomotive Works', '17068.8 (millimetres)']

Triple: [['__subject__ ALCO RS-3 __predicate__ engine __object__ V12 engine', '__subject__ ALCO RS-3 __predicate__ buildDate __object__ May 1950 - August 1956']]
Text: The ALCO RS-3 has a V12 engine and was produced between May 1950 and August 1956.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['engine', 'buildDate']
Object: ['V12 engine', 'May 1950 - August 1956']

Triple: [['__subject__ ALCO RS-3 __predicate__ engine __object__ V12 engine', '__subject__ ALCO RS-3 __predicate__ buildDate __object__ May 1950 - August 1956']]
Text: The ALCO RS-3, made between May 1950 and Aug. 1956, has a V12 engine type.
Subject: ['ALCO RS-3', 'ALCO RS-3']
Predicate: ['engine', 'buildDate']
Object: ['V12 engine', 'May 1950 - August 1956']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ anthem __object__ The Star-Spangled Banner']]
Text: ALV X-1 is from the US; where the anthem is the Star Spangled Banner.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'anthem']
Object: ['United States', 'The Star-Spangled Banner']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ anthem __object__ The Star-Spangled Banner']]
Text: ALV X-1 originated in the United States which has the Star Spangled Banner for its anthem.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'anthem']
Object: ['United States', 'The Star-Spangled Banner']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ anthem __object__ The Star-Spangled Banner']]
Text: The Star Spangled Banner is the national anthem of the United States where the ALV X-1 originated.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'anthem']
Object: ['United States', 'The Star-Spangled Banner']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: ALV X-1 hails from the US where the capital city is Washington DC.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: ALV X-1 is from the United States; where Washington D.C. is the capital.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: The country of origin of the ALV X-1 is the United States, whose capital is Washington D.C.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ demonym __object__ Americans']]
Text: ALV X-1 came from the United States where Americans live.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'demonym']
Object: ['United States', 'Americans']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ demonym __object__ Americans']]
Text: The country of origin of the ALV X-1 is the United States, where Americans live.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'demonym']
Object: ['United States', 'Americans']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ demonym __object__ Americans']]
Text: The Americans live in the United States which is where the ALV X-1 originates.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'demonym']
Object: ['United States', 'Americans']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: ALV X-1 is from the United States, where one of the ethnic groups, is African Americans.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: ALV X-1 originated in the United States which has the African Americans among its ethnic groups.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: The ALV X-1 comes from the United States, where African Americans are an ethnic group.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: ALV X-1 is from the US and Asian Americans are an ethnic group within the U.S.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: ALV X-1 comes from the United States where Asian Americans are an ethnic group.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: The country of origin of the ALV X-1 is the United States, where Asian Americans are one of the ethnic groups.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: ALV X-1 hails from the US, where there is an ethnic group called Native Americans.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: The ALV X-1 came from the United States, a country where Native Americans are an ethnic group.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: ALV X-1 originated in the United States where Native Americans are one of the ethnic groups.
Subject: ['ALV X-1', 'United States']
Predicate: ['countryOrigin', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ ALV X-1 __predicate__ diameter __object__ 1.524 (metres)', '__subject__ ALV X-1 __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport']]
Text: The ALV X-1 has a diameter of 1.524 metres and was launched from the Mid-Atlantic Regional Spaceport.
Subject: ['ALV X-1', 'ALV X-1']
Predicate: ['diameter', 'launchSite']
Object: ['1.524 (metres)', 'Mid-Atlantic Regional Spaceport']

Triple: [['__subject__ ALV X-1 __predicate__ diameter __object__ 1.524 (metres)', '__subject__ ALV X-1 __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport']]
Text: The ALV X-1 is 1.524 metres in diameter and was launched from the Mid Atlantic Regional Spaceport.
Subject: ['ALV X-1', 'ALV X-1']
Predicate: ['diameter', 'launchSite']
Object: ['1.524 (metres)', 'Mid-Atlantic Regional Spaceport']

Triple: [['__subject__ ALV X-1 __predicate__ diameter __object__ 1.524 (metres)', '__subject__ ALV X-1 __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport']]
Text: The launch site of the ALV X-1, which has a diameter of 1.524 metres, was the Mid-Atlantic Regional Spaceport.
Subject: ['ALV X-1', 'ALV X-1']
Predicate: ['diameter', 'launchSite']
Object: ['1.524 (metres)', 'Mid-Atlantic Regional Spaceport']

Triple: [['__subject__ ALV X-1 __predicate__ failedLaunches __object__ 1', '__subject__ ALV X-1 __predicate__ diameter __object__ 1.524 (metres)']]
Text: The ALV X-1 has a diameter of 1.524 metres and has had 1 launch failure.
Subject: ['ALV X-1', 'ALV X-1']
Predicate: ['failedLaunches', 'diameter']
Object: ['1', '1.524 (metres)']

Triple: [['__subject__ ALV X-1 __predicate__ failedLaunches __object__ 1', '__subject__ ALV X-1 __predicate__ diameter __object__ 1.524 (metres)']]
Text: The ALV X-1 diameter is 1.524 m and failed 1 launch.
Subject: ['ALV X-1', 'ALV X-1']
Predicate: ['failedLaunches', 'diameter']
Object: ['1', '1.524 (metres)']

Triple: [['__subject__ ALV X-1 __predicate__ failedLaunches __object__ 1', '__subject__ ALV X-1 __predicate__ diameter __object__ 1.524 (metres)']]
Text: The ALV X-1 rocket, 1.524 m. in diameter, had 1 failed launch.
Subject: ['ALV X-1', 'ALV X-1']
Predicate: ['failedLaunches', 'diameter']
Object: ['1', '1.524 (metres)']

Triple: [['__subject__ ALV X-1 __predicate__ manufacturer __object__ Alliant Techsystems', '__subject__ Alliant Techsystems __predicate__ product __object__ XM25 CDTE']]
Text: Alliant Techsystems produces the ALV X-1 and the XM25 CDTE.
Subject: ['ALV X-1', 'Alliant Techsystems']
Predicate: ['manufacturer', 'product']
Object: ['Alliant Techsystems', 'XM25 CDTE']

Triple: [['__subject__ ALV X-1 __predicate__ manufacturer __object__ Alliant Techsystems', '__subject__ Alliant Techsystems __predicate__ product __object__ XM25 CDTE']]
Text: Alliant Techsystems produces the XM25 CDTE and makes the ALV X-1.
Subject: ['ALV X-1', 'Alliant Techsystems']
Predicate: ['manufacturer', 'product']
Object: ['Alliant Techsystems', 'XM25 CDTE']

Triple: [['__subject__ ALV X-1 __predicate__ manufacturer __object__ Alliant Techsystems', '__subject__ Alliant Techsystems __predicate__ product __object__ XM25 CDTE']]
Text: The ALV X-1 was manufactured by Alliant Techsystems, who produce the XM25 CDTE.
Subject: ['ALV X-1', 'Alliant Techsystems']
Predicate: ['manufacturer', 'product']
Object: ['Alliant Techsystems', 'XM25 CDTE']

Triple: [['__subject__ ALV X-1 __predicate__ totalLaunches __object__ 1', '__subject__ ALV X-1 __predicate__ diameter __object__ 1.524 (metres)']]
Text: The ALV X-1 rocket had a total of one launch and a diameter of 1.524 metres.
Subject: ['ALV X-1', 'ALV X-1']
Predicate: ['totalLaunches', 'diameter']
Object: ['1', '1.524 (metres)']

Triple: [['__subject__ ALV X-1 __predicate__ totalLaunches __object__ 1', '__subject__ ALV X-1 __predicate__ diameter __object__ 1.524 (metres)']]
Text: The 1.524m wide rocke ALV X-1 has been launched once.
Subject: ['ALV X-1', 'ALV X-1']
Predicate: ['totalLaunches', 'diameter']
Object: ['1', '1.524 (metres)']

Triple: [['__subject__ ALV X-1 __predicate__ totalLaunches __object__ 1', '__subject__ ALV X-1 __predicate__ diameter __object__ 1.524 (metres)']]
Text: The ALV X-1 rocket has a diameter of 1.524 metres and was launched once.
Subject: ['ALV X-1', 'ALV X-1']
Predicate: ['totalLaunches', 'diameter']
Object: ['1', '1.524 (metres)']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Mexico', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: The AMC Matador is assembled in Mexico, including the 1971 model.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Mexico', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Mexico', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: The AMC Matador, which has a 1971 model, was assembled in Mexico.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Mexico', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Mexico', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: The AMC Matador was assembled in Mexico in 1971.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Mexico', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ USA', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: The AMC Matador, including the 191 model, is assembled in the USA.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['USA', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ USA', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: 1971 is one of the model years of the AMC Matador, which was assembled in the USA.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['USA', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ USA', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: AMC Matadors are made in the USA and 1971 is one model year.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['USA', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Kenosha, Wisconsin', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: The AMC Matador includes the model year of 1971 and was assembled in Kenosha, Wisconsin.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Kenosha, Wisconsin', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Kenosha, Wisconsin', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: The AMC Matador model was manufactured during 1971 and was assembled in Kenosha, Wisconsin.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Kenosha, Wisconsin', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Kenosha, Wisconsin', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: The AMC Matador model was manufactured during 1971 and assembled on the line at Kenosha, Wisconsin.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Kenosha, Wisconsin', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Mexico City', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: 1971 is one of the model years of the AMC Matador, which is assembled in Mexico City.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Mexico City', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Mexico City', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: The AMC Matador is assembled in Mexico City and was manufactured during 1971.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Mexico City', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Mexico City', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: 1971 is one of the model years of the AMC Matador which was assembled in Mexico City.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Mexico City', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Mexico City', '__subject__ AMC Matador __predicate__ modelYears __object__ 1974']]
Text: 1974 is one of the model years of the AMC Matador which is assembled in Mexico City.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Mexico City', '1974']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Mexico City', '__subject__ AMC Matador __predicate__ modelYears __object__ 1974']]
Text: The AMC Matador is available in a 1974 model and is assembled in Mexico City.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Mexico City', '1974']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Mexico City', '__subject__ AMC Matador __predicate__ modelYears __object__ 1974']]
Text: The AMC Matador was assembled in Mexico City and is available in a 1974 model.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Mexico City', '1974']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Port Melbourne, Victoria', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: The AMC Matador model was manufactured during 1971 and is assembled in Port Melbourne, Victoria.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Port Melbourne, Victoria', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Port Melbourne, Victoria', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: The AMC Matador model was manufactured during 1971 and it was assembled in Port Melbourne, Victoria.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Port Melbourne, Victoria', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Port Melbourne, Victoria', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: 1971 is one of the model years of the AMC Matador which is made on the assembly line in Port Melbourne, Victoria.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Port Melbourne, Victoria', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Port Melbourne, Victoria', '__subject__ AMC Matador __predicate__ modelYears __object__ 1974']]
Text: The AMC Matador was produced at Port Melbourne, Victoria in 1974.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Port Melbourne, Victoria', '1974']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Port Melbourne, Victoria', '__subject__ AMC Matador __predicate__ modelYears __object__ 1974']]
Text: The AMC Matador, which includes a 1974 model, was built at Port Melbourne, Australia.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Port Melbourne, Victoria', '1974']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Port Melbourne, Victoria', '__subject__ AMC Matador __predicate__ modelYears __object__ 1974']]
Text: 1974 is one of the model years of the AMC Matador, whose assembly line is in Port Melbourne, Victoria.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Port Melbourne, Victoria', '1974']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Thames, New Zealand', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: 1971 is one of the model years of the AMC Matador which is assembled in Thames, New Zealand.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Thames, New Zealand', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Thames, New Zealand', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: The AMC Matador was assembled in Thames, New Zealand including the 1971 model year.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Thames, New Zealand', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Thames, New Zealand', '__subject__ AMC Matador __predicate__ modelYears __object__ 1971']]
Text: The AMC Matador, produced in 1971, was made in Thames in New Zealand.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Thames, New Zealand', '1971']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Thames, New Zealand', '__subject__ AMC Matador __predicate__ modelYears __object__ 1974']]
Text: AMC Matador is assembled in Thames, New Zealand and is available in a 1974 model.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Thames, New Zealand', '1974']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Thames, New Zealand', '__subject__ AMC Matador __predicate__ modelYears __object__ 1974']]
Text: The AMC Matador which is available in a 1974 model is assembled in Thames, New Zealand.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Thames, New Zealand', '1974']

Triple: [['__subject__ AMC Matador __predicate__ assembly __object__ Thames, New Zealand', '__subject__ AMC Matador __predicate__ modelYears __object__ 1974']]
Text: 1974 is one of the model years of the AMC Matador which was made in Thames, New Zealand.
Subject: ['AMC Matador', 'AMC Matador']
Predicate: ['assembly', 'modelYears']
Object: ['Thames, New Zealand', '1974']

Triple: [['__subject__ AMC Matador __predicate__ manufacturer __object__ American Motors', '__subject__ American Motors __predicate__ fate __object__ Chrysler']]
Text: American Motors was bought by Chrysler and manufactures the AMC Matador.
Subject: ['AMC Matador', 'American Motors']
Predicate: ['manufacturer', 'fate']
Object: ['American Motors', 'Chrysler']

Triple: [['__subject__ AMC Matador __predicate__ manufacturer __object__ American Motors', '__subject__ American Motors __predicate__ fate __object__ Chrysler']]
Text: The AMC Matador is manufactured by American Motors who were acquired by Chrysler.
Subject: ['AMC Matador', 'American Motors']
Predicate: ['manufacturer', 'fate']
Object: ['American Motors', 'Chrysler']

Triple: [['__subject__ AMC Matador __predicate__ manufacturer __object__ American Motors', '__subject__ American Motors __predicate__ fate __object__ Chrysler']]
Text: The AMC Matador is made by American Motors who were acquired by Chrysler.
Subject: ['AMC Matador', 'American Motors']
Predicate: ['manufacturer', 'fate']
Object: ['American Motors', 'Chrysler']

Triple: [['__subject__ AMC Matador __predicate__ manufacturer __object__ American Motors', '__subject__ American Motors __predicate__ keyPerson __object__ Roy D. Chapin, Jr.']]
Text: American Motors makes the AMC Matador where Roy D. Chapin Jr. is a key person.
Subject: ['AMC Matador', 'American Motors']
Predicate: ['manufacturer', 'keyPerson']
Object: ['American Motors', 'Roy D. Chapin, Jr.']

Triple: [['__subject__ AMC Matador __predicate__ manufacturer __object__ American Motors', '__subject__ American Motors __predicate__ keyPerson __object__ Roy D. Chapin, Jr.']]
Text: AMC Matador is manufactured by American Motors, where Roy D. Chapin Jr. is a key person.
Subject: ['AMC Matador', 'American Motors']
Predicate: ['manufacturer', 'keyPerson']
Object: ['American Motors', 'Roy D. Chapin, Jr.']

Triple: [['__subject__ AMC Matador __predicate__ manufacturer __object__ American Motors', '__subject__ American Motors __predicate__ keyPerson __object__ Roy D. Chapin, Jr.']]
Text: Roy D Chapin Jr is a key person at American Motors, which manufactures the AMC Matador.
Subject: ['AMC Matador', 'American Motors']
Predicate: ['manufacturer', 'keyPerson']
Object: ['American Motors', 'Roy D. Chapin, Jr.']

Triple: [['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ builder __object__ Cammell Laird', '__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ country __object__ Argentina']]
Text: The ARA Veinticinco de Mayo (V-2) comes from Argentina and is built by Cammell Laird.
Subject: ['ARA Veinticinco de Mayo (V-2)', 'ARA Veinticinco de Mayo (V-2)']
Predicate: ['builder', 'country']
Object: ['Cammell Laird', 'Argentina']

Triple: [['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ builder __object__ Cammell Laird', '__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ country __object__ Argentina']]
Text: The ARA Veinticinco de Mayo (V-2) was built by Cammell Laird and comes from Argentina.
Subject: ['ARA Veinticinco de Mayo (V-2)', 'ARA Veinticinco de Mayo (V-2)']
Predicate: ['builder', 'country']
Object: ['Cammell Laird', 'Argentina']

Triple: [['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ builder __object__ Cammell Laird', '__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ country __object__ Argentina']]
Text: The ARA Veinticinco de Mayo (V-2) is from Argentina and was built by Cammell Laird.
Subject: ['ARA Veinticinco de Mayo (V-2)', 'ARA Veinticinco de Mayo (V-2)']
Predicate: ['builder', 'country']
Object: ['Cammell Laird', 'Argentina']

Triple: [['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ length __object__ 192000.0 (millimetres)', '__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ shipBeam __object__ 24.4']]
Text: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam which measures 24.4.
Subject: ['ARA Veinticinco de Mayo (V-2)', 'ARA Veinticinco de Mayo (V-2)']
Predicate: ['length', 'shipBeam']
Object: ['192000.0 (millimetres)', '24.4']

Triple: [['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ length __object__ 192000.0 (millimetres)', '__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ shipBeam __object__ 24.4']]
Text: The ARA Veinticinco de Mayo (V-2) has a ship beam length of 24.4 and is 192000 mms long.
Subject: ['ARA Veinticinco de Mayo (V-2)', 'ARA Veinticinco de Mayo (V-2)']
Predicate: ['length', 'shipBeam']
Object: ['192000.0 (millimetres)', '24.4']

Triple: [['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ length __object__ 192000.0 (millimetres)', '__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ shipBeam __object__ 24.4']]
Text: The ARA Veinticinco de Mayo V-2, at a length of 192000.0 millimetres, has ship's beam which measures 24.4.
Subject: ['ARA Veinticinco de Mayo (V-2)', 'ARA Veinticinco de Mayo (V-2)']
Predicate: ['length', 'shipBeam']
Object: ['192000.0 (millimetres)', '24.4']

Triple: [['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ shipBeam __object__ 24.4', '__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ country __object__ Argentina']]
Text: The ARA Veinticinco de Mayo (V-2) comes from Argentina and is 24.4m long.
Subject: ['ARA Veinticinco de Mayo (V-2)', 'ARA Veinticinco de Mayo (V-2)']
Predicate: ['shipBeam', 'country']
Object: ['24.4', 'Argentina']

Triple: [['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ shipBeam __object__ 24.4', '__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ country __object__ Argentina']]
Text: The ARA Veinticinco de Mayo V-2 derives from Argentina and the ship's beam measures 24.4.
Subject: ['ARA Veinticinco de Mayo (V-2)', 'ARA Veinticinco de Mayo (V-2)']
Predicate: ['shipBeam', 'country']
Object: ['24.4', 'Argentina']

Triple: [['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ shipBeam __object__ 24.4', '__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ country __object__ Argentina']]
Text: The ARA Veinticinco De mayo (V-2) comes from Argentina and its ship beam measures 24.4.
Subject: ['ARA Veinticinco de Mayo (V-2)', 'ARA Veinticinco de Mayo (V-2)']
Predicate: ['shipBeam', 'country']
Object: ['24.4', 'Argentina']

Triple: [['__subject__ Abarth __predicate__ foundationPlace __object__ Bologna', '__subject__ Abarth 1000 GT Coupé __predicate__ manufacturer __object__ Abarth']]
Text: The Abarth company makes the Abarth 1000 GT Coupe and was founded in Bologna.
Subject: ['Abarth', 'Abarth 1000 GT Coupé']
Predicate: ['foundationPlace', 'manufacturer']
Object: ['Bologna', 'Abarth']

Triple: [['__subject__ Abarth __predicate__ foundationPlace __object__ Bologna', '__subject__ Abarth 1000 GT Coupé __predicate__ manufacturer __object__ Abarth']]
Text: The Abarth company, who made the Abarth 1000 GT Coupé, was founded in Bologna.
Subject: ['Abarth', 'Abarth 1000 GT Coupé']
Predicate: ['foundationPlace', 'manufacturer']
Object: ['Bologna', 'Abarth']

Triple: [['__subject__ Abarth __predicate__ foundationPlace __object__ Bologna', '__subject__ Abarth 1000 GT Coupé __predicate__ manufacturer __object__ Abarth']]
Text: The Abarth 1000 GT Coupe was made by Abarth company, which was founded in Bologna.
Subject: ['Abarth', 'Abarth 1000 GT Coupé']
Predicate: ['foundationPlace', 'manufacturer']
Object: ['Bologna', 'Abarth']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Two door coupé', '__subject__ Abarth 1000 GT Coupé __predicate__ engine __object__ Straight-four engine']]
Text: Abarth 1000 GT Coupé, a two door coupé, has a straight-four engine.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['bodyStyle', 'engine']
Object: ['Two door coupé', 'Straight-four engine']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Two door coupé', '__subject__ Abarth 1000 GT Coupé __predicate__ engine __object__ Straight-four engine']]
Text: The Abarth 1000 GT Coupé has a straight-four engine and has a two door coupe body style.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['bodyStyle', 'engine']
Object: ['Two door coupé', 'Straight-four engine']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Two door coupé', '__subject__ Abarth 1000 GT Coupé __predicate__ engine __object__ Straight-four engine']]
Text: The Abarth 1000 GT Coupé is a 2 door coupe with a straight-four engine.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['bodyStyle', 'engine']
Object: ['Two door coupé', 'Straight-four engine']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Coupé', '__subject__ Abarth 1000 GT Coupé __predicate__ engine __object__ Straight-four engine']]
Text: The Abarth 1000 GT has a coupe bodystyle and has a straight-four engine.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['bodyStyle', 'engine']
Object: ['Coupé', 'Straight-four engine']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Coupé', '__subject__ Abarth 1000 GT Coupé __predicate__ engine __object__ Straight-four engine']]
Text: The Abarth 1000GT Coupe is a coupe with a straight four engine.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['bodyStyle', 'engine']
Object: ['Coupé', 'Straight-four engine']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Coupé', '__subject__ Abarth 1000 GT Coupé __predicate__ engine __object__ Straight-four engine']]
Text: The Abarth 1000 GT Coupe has a Coupe body style and a straight-four engine.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['bodyStyle', 'engine']
Object: ['Coupé', 'Straight-four engine']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ designCompany __object__ Gruppo Bertone', '__subject__ Gruppo Bertone __predicate__ foundationPlace __object__ Italy']]
Text: Gruppo Bertone was founded in Italy and designed the Abarth 1000 GT Coupé.
Subject: ['Abarth 1000 GT Coupé', 'Gruppo Bertone']
Predicate: ['designCompany', 'foundationPlace']
Object: ['Gruppo Bertone', 'Italy']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ designCompany __object__ Gruppo Bertone', '__subject__ Gruppo Bertone __predicate__ foundationPlace __object__ Italy']]
Text: The Abarth 1000 GT Coupe was designed by Gruppo Bertone who originated in Italy.
Subject: ['Abarth 1000 GT Coupé', 'Gruppo Bertone']
Predicate: ['designCompany', 'foundationPlace']
Object: ['Gruppo Bertone', 'Italy']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ designCompany __object__ Gruppo Bertone', '__subject__ Gruppo Bertone __predicate__ foundationPlace __object__ Turin']]
Text: Turin based Gruppo Bertone designed the Abarth 1000 GT Coupe.
Subject: ['Abarth 1000 GT Coupé', 'Gruppo Bertone']
Predicate: ['designCompany', 'foundationPlace']
Object: ['Gruppo Bertone', 'Turin']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ designCompany __object__ Gruppo Bertone', '__subject__ Gruppo Bertone __predicate__ foundationPlace __object__ Turin']]
Text: The Abarth 1000 GT Coupé was designed by Gruppo Bertone, which was founded in Turin.
Subject: ['Abarth 1000 GT Coupé', 'Gruppo Bertone']
Predicate: ['designCompany', 'foundationPlace']
Object: ['Gruppo Bertone', 'Turin']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ designCompany __object__ Gruppo Bertone', '__subject__ Gruppo Bertone __predicate__ foundationPlace __object__ Turin']]
Text: The Gruppo Bertone was founded in Turin and designed the Abarth 1000 GT Coupe.
Subject: ['Abarth 1000 GT Coupé', 'Gruppo Bertone']
Predicate: ['designCompany', 'foundationPlace']
Object: ['Gruppo Bertone', 'Turin']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ designCompany __object__ Gruppo Bertone', '__subject__ Gruppo Bertone __predicate__ country __object__ Italy']]
Text: Gruppo Bertone, located in Italy, was the designer of the Abarth 1000 GT Coupe.
Subject: ['Abarth 1000 GT Coupé', 'Gruppo Bertone']
Predicate: ['designCompany', 'country']
Object: ['Gruppo Bertone', 'Italy']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ designCompany __object__ Gruppo Bertone', '__subject__ Gruppo Bertone __predicate__ country __object__ Italy']]
Text: The Abarth 1000 GT Coupé was designed by the Italian company, Gruppo Bertone.
Subject: ['Abarth 1000 GT Coupé', 'Gruppo Bertone']
Predicate: ['designCompany', 'country']
Object: ['Gruppo Bertone', 'Italy']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ designCompany __object__ Gruppo Bertone', '__subject__ Gruppo Bertone __predicate__ country __object__ Italy']]
Text: Gruppo Bertone is located in Italy and designed the Abarth 1000 GT Coupe.
Subject: ['Abarth 1000 GT Coupé', 'Gruppo Bertone']
Predicate: ['designCompany', 'country']
Object: ['Gruppo Bertone', 'Italy']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ manufacturer __object__ Abarth', '__subject__ Abarth __predicate__ foundationPlace __object__ Italy']]
Text: Abarth was founded in Italy and manufacture the Abarth 1000 GT Coupe.
Subject: ['Abarth 1000 GT Coupé', 'Abarth']
Predicate: ['manufacturer', 'foundationPlace']
Object: ['Abarth', 'Italy']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ manufacturer __object__ Abarth', '__subject__ Abarth __predicate__ foundationPlace __object__ Italy']]
Text: Abarth was founded in Italy and is the maker of the Abarth 1000 GT Coupé.
Subject: ['Abarth 1000 GT Coupé', 'Abarth']
Predicate: ['manufacturer', 'foundationPlace']
Object: ['Abarth', 'Italy']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ manufacturer __object__ Abarth', '__subject__ Abarth __predicate__ foundationPlace __object__ Italy']]
Text: The Abarth foundation, was founded in Italy, and is the manufacturer of the Abarth 1000 GT Coupé.
Subject: ['Abarth 1000 GT Coupé', 'Abarth']
Predicate: ['manufacturer', 'foundationPlace']
Object: ['Abarth', 'Italy']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ manufacturer __object__ Abarth', '__subject__ Abarth __predicate__ foundedBy __object__ Carlo Abarth']]
Text: Carlo Abarth founded Abarth Company that made the Abarth 1000 GT Coupé.
Subject: ['Abarth 1000 GT Coupé', 'Abarth']
Predicate: ['manufacturer', 'foundedBy']
Object: ['Abarth', 'Carlo Abarth']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ manufacturer __object__ Abarth', '__subject__ Abarth __predicate__ foundedBy __object__ Carlo Abarth']]
Text: Manufacturer of the Abarth 1000 GT Coupé is Abarth, founded by Carlo Abarth.
Subject: ['Abarth 1000 GT Coupé', 'Abarth']
Predicate: ['manufacturer', 'foundedBy']
Object: ['Abarth', 'Carlo Abarth']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ manufacturer __object__ Abarth', '__subject__ Abarth __predicate__ foundedBy __object__ Carlo Abarth']]
Text: The Abarth 1000 GT Coupe was made by Abarth which was founded by Carlo Abarth.
Subject: ['Abarth 1000 GT Coupé', 'Abarth']
Predicate: ['manufacturer', 'foundedBy']
Object: ['Abarth', 'Carlo Abarth']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ productionEndYear __object__ 1958', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Two door coupé']]
Text: The Abarth 1000 GT Coupe is a couple last produced in 1958.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['productionEndYear', 'bodyStyle']
Object: ['1958', 'Two door coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ productionEndYear __object__ 1958', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Two door coupé']]
Text: The Abarth 1000 GT Coupé is a two door model, which rolled off the production line in 1958.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['productionEndYear', 'bodyStyle']
Object: ['1958', 'Two door coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ productionEndYear __object__ 1958', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Two door coupé']]
Text: The Abarth 1000 GT Coupé 2-door coupe was last produced in 1958.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['productionEndYear', 'bodyStyle']
Object: ['1958', 'Two door coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ productionEndYear __object__ 1958', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Coupé']]
Text: With a Coupe bodystyle, the last Abarth 1000 GT Coupé rolled off the production line in 1958.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['productionEndYear', 'bodyStyle']
Object: ['1958', 'Coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ productionEndYear __object__ 1958', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Coupé']]
Text: The Abarth 1000 GT Coupe has a Coupe body style and the last one rolled off the production line in 1958.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['productionEndYear', 'bodyStyle']
Object: ['1958', 'Coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ productionStartYear __object__ 1958', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Two door coupé']]
Text: Production of the two door coupe Abarth 1000 GT Coupe began in 1958.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['productionStartYear', 'bodyStyle']
Object: ['1958', 'Two door coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ productionStartYear __object__ 1958', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Two door coupé']]
Text: Two door coupe is the body style of the Abarth 1000 GT Coupé, whose production started in 1958.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['productionStartYear', 'bodyStyle']
Object: ['1958', 'Two door coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ productionStartYear __object__ 1958', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Two door coupé']]
Text: The production of the Abarth 1000 GT Coupe, a two door model, began in 1958.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['productionStartYear', 'bodyStyle']
Object: ['1958', 'Two door coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ productionStartYear __object__ 1958', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Coupé']]
Text: The Abarth 1000 GT has a Coupé body style and its production began in 1958.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['productionStartYear', 'bodyStyle']
Object: ['1958', 'Coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ productionStartYear __object__ 1958', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Coupé']]
Text: The Abarth 1000 GT has a coupe bodystyle and production began in 1958.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['productionStartYear', 'bodyStyle']
Object: ['1958', 'Coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ productionStartYear __object__ 1958', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Coupé']]
Text: The Abarth 1000 GT Coupe has a Coupe body style and its production started in the Year, 1958.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['productionStartYear', 'bodyStyle']
Object: ['1958', 'Coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ wheelbase __object__ 2160.0 (millimetres)', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Two door coupé']]
Text: The wheelbase of the Abarth 1000 GT Coupe is 2160 millimetres and is a two door coupé.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['wheelbase', 'bodyStyle']
Object: ['2160.0 (millimetres)', 'Two door coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ wheelbase __object__ 2160.0 (millimetres)', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Two door coupé']]
Text: The Abarth 1000 GT Coupe is a two door model and the wheelbase is 2160 mms.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['wheelbase', 'bodyStyle']
Object: ['2160.0 (millimetres)', 'Two door coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ wheelbase __object__ 2160.0 (millimetres)', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Two door coupé']]
Text: The Abarth 1000 GT Coupe, has a wheelbase of 2160 millimetres and a two door coupe body style.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['wheelbase', 'bodyStyle']
Object: ['2160.0 (millimetres)', 'Two door coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ wheelbase __object__ 2160.0 (millimetres)', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Coupé']]
Text: The Abarth 1000 GT Coupe has a Coupe body style and a 2160 millimetre wheelbase.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['wheelbase', 'bodyStyle']
Object: ['2160.0 (millimetres)', 'Coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ wheelbase __object__ 2160.0 (millimetres)', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Coupé']]
Text: The Abarth 1000 GT Coupe is a coupe with a wheelbase measuring 2160mm.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['wheelbase', 'bodyStyle']
Object: ['2160.0 (millimetres)', 'Coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ wheelbase __object__ 2160.0 (millimetres)', '__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Coupé']]
Text: The Abarth 1000 GT has a Coupé body style, and its wheelbase is 2160.0 millimetres.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['wheelbase', 'bodyStyle']
Object: ['2160.0 (millimetres)', 'Coupé']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ wheelbase __object__ 2160.0 (millimetres)', '__subject__ Abarth 1000 GT Coupé __predicate__ engine __object__ Straight-four engine']]
Text: The Abarth 1000 GT Coupe has a wheelbase of 2160 millimetres and a straight-four engine.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['wheelbase', 'engine']
Object: ['2160.0 (millimetres)', 'Straight-four engine']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ wheelbase __object__ 2160.0 (millimetres)', '__subject__ Abarth 1000 GT Coupé __predicate__ engine __object__ Straight-four engine']]
Text: The Abarth 1000 GT Coupe has the straight four engine and a wheelbase of 2160 mms.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['wheelbase', 'engine']
Object: ['2160.0 (millimetres)', 'Straight-four engine']

Triple: [['__subject__ Abarth 1000 GT Coupé __predicate__ wheelbase __object__ 2160.0 (millimetres)', '__subject__ Abarth 1000 GT Coupé __predicate__ engine __object__ Straight-four engine']]
Text: The Abarth 1000 GT Coupe has the straight four engine and a wheelbase that measures, 2160 millimetres.
Subject: ['Abarth 1000 GT Coupé', 'Abarth 1000 GT Coupé']
Predicate: ['wheelbase', 'engine']
Object: ['2160.0 (millimetres)', 'Straight-four engine']

Triple: [['__subject__ Acura TLX __predicate__ assembly __object__ Marysville, Ohio', '__subject__ Acura TLX __predicate__ engine __object__ Honda K engine']]
Text: The Acura TLX is assembled in Marysville, Ohio has a Honda K engine.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['assembly', 'engine']
Object: ['Marysville, Ohio', 'Honda K engine']

Triple: [['__subject__ Acura TLX __predicate__ assembly __object__ Marysville, Ohio', '__subject__ Acura TLX __predicate__ engine __object__ Honda K engine']]
Text: The Acura TLX has a Honda K engine and was assembled in Marysville, Ohio.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['assembly', 'engine']
Object: ['Marysville, Ohio', 'Honda K engine']

Triple: [['__subject__ Acura TLX __predicate__ assembly __object__ Marysville, Ohio', '__subject__ Acura TLX __predicate__ engine __object__ Inline-four engine']]
Text: The Acura TLX has an Inline-four engine and is assembled in Marysville, Ohio.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['assembly', 'engine']
Object: ['Marysville, Ohio', 'Inline-four engine']

Triple: [['__subject__ Acura TLX __predicate__ assembly __object__ Marysville, Ohio', '__subject__ Acura TLX __predicate__ engine __object__ Inline-four engine']]
Text: The Acura TLX is assembled in Marysville, Ohio and has an Inline-four engine.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['assembly', 'engine']
Object: ['Marysville, Ohio', 'Inline-four engine']

Triple: [['__subject__ Acura TLX __predicate__ assembly __object__ Marysville, Ohio', '__subject__ Acura TLX __predicate__ engine __object__ Inline-four engine']]
Text: The Acura TLX has an Inline-four engine and was assembled in Marysville, Ohio.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['assembly', 'engine']
Object: ['Marysville, Ohio', 'Inline-four engine']

Triple: [['__subject__ Acura TLX __predicate__ assembly __object__ Marysville, Ohio', '__subject__ Acura TLX __predicate__ engine __object__ V6 engine']]
Text: The Acura TLX, with a V6 engine, is made in Marysville, Ohio.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['assembly', 'engine']
Object: ['Marysville, Ohio', 'V6 engine']

Triple: [['__subject__ Acura TLX __predicate__ assembly __object__ Marysville, Ohio', '__subject__ Acura TLX __predicate__ engine __object__ V6 engine']]
Text: The Acura TLX, with a v6 engine, is made in Marysville, Ohio.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['assembly', 'engine']
Object: ['Marysville, Ohio', 'V6 engine']

Triple: [['__subject__ Acura TLX __predicate__ assembly __object__ Marysville, Ohio', '__subject__ Acura TLX __predicate__ engine __object__ V6 engine']]
Text: The Acura TLX has a V6 engine and was assembled in Marysville, Ohio.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['assembly', 'engine']
Object: ['Marysville, Ohio', 'V6 engine']

Triple: [['__subject__ Acura TLX __predicate__ engine __object__ Honda J engine', '__subject__ Honda J engine __predicate__ manufacturer __object__ Honda']]
Text: The Acura TLX has a Honda manufactured Honda J engine.
Subject: ['Acura TLX', 'Honda J engine']
Predicate: ['engine', 'manufacturer']
Object: ['Honda J engine', 'Honda']

Triple: [['__subject__ Acura TLX __predicate__ engine __object__ Honda J engine', '__subject__ Honda J engine __predicate__ manufacturer __object__ Honda']]
Text: The Acura TLX's engine type is the Honda J, the manufacturer of which, in Honda.
Subject: ['Acura TLX', 'Honda J engine']
Predicate: ['engine', 'manufacturer']
Object: ['Honda J engine', 'Honda']

Triple: [['__subject__ Acura TLX __predicate__ engine __object__ Honda J engine', '__subject__ Honda J engine __predicate__ manufacturer __object__ Honda']]
Text: The Acura TLX's engine type is the Honda J, which was manufactured by Honda.
Subject: ['Acura TLX', 'Honda J engine']
Predicate: ['engine', 'manufacturer']
Object: ['Honda J engine', 'Honda']

Triple: [['__subject__ Acura TLX __predicate__ engine __object__ Honda K engine', '__subject__ Honda K engine __predicate__ manufacturer __object__ Honda']]
Text: The Acura TLX has a K engine made by Honda.
Subject: ['Acura TLX', 'Honda K engine']
Predicate: ['engine', 'manufacturer']
Object: ['Honda K engine', 'Honda']

Triple: [['__subject__ Acura TLX __predicate__ engine __object__ Honda K engine', '__subject__ Honda K engine __predicate__ manufacturer __object__ Honda']]
Text: The Acura TLX has a Honda K engine manufactured by Honda.
Subject: ['Acura TLX', 'Honda K engine']
Predicate: ['engine', 'manufacturer']
Object: ['Honda K engine', 'Honda']

Triple: [['__subject__ Acura TLX __predicate__ engine __object__ Honda K engine', '__subject__ Honda K engine __predicate__ manufacturer __object__ Honda']]
Text: The Acura TLX has a Honda K engine which is made by Honda.
Subject: ['Acura TLX', 'Honda K engine']
Predicate: ['engine', 'manufacturer']
Object: ['Honda K engine', 'Honda']

Triple: [['__subject__ Acura TLX __predicate__ engine __object__ V6 engine', '__subject__ Acura TLX __predicate__ assembly __object__ Marysville Auto Plant']]
Text: The Acura TLX has a V6 engine and is assembled at the Marysville Auto Plant.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['engine', 'assembly']
Object: ['V6 engine', 'Marysville Auto Plant']

Triple: [['__subject__ Acura TLX __predicate__ engine __object__ V6 engine', '__subject__ Acura TLX __predicate__ assembly __object__ Marysville Auto Plant']]
Text: The Acura TLX has a V6 engine and its assembly line is located at the Marysville Auto Plant.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['engine', 'assembly']
Object: ['V6 engine', 'Marysville Auto Plant']

Triple: [['__subject__ Acura TLX __predicate__ engine __object__ V6 engine', '__subject__ Acura TLX __predicate__ assembly __object__ Marysville Auto Plant']]
Text: The Acura TLX has a V6 engine and is built at the Marysville Auto Plant.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['engine', 'assembly']
Object: ['V6 engine', 'Marysville Auto Plant']

Triple: [['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda', '__subject__ Acura TLX __predicate__ engine __object__ 2.4 (litres)']]
Text: The Acura TLX with a 2.4 l engine is produced by Honda.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['manufacturer', 'engine']
Object: ['Honda', '2.4 (litres)']

Triple: [['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda', '__subject__ Acura TLX __predicate__ engine __object__ 2.4 (litres)']]
Text: Honda makes the Acura TLX which has a 2.4 litre engine.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['manufacturer', 'engine']
Object: ['Honda', '2.4 (litres)']

Triple: [['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda', '__subject__ Acura TLX __predicate__ engine __object__ 2.4 (litres)']]
Text: The Acura TLX has a 2.4 litre engine and is manufactured by Honda.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['manufacturer', 'engine']
Object: ['Honda', '2.4 (litres)']

Triple: [['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda', '__subject__ Acura TLX __predicate__ engine __object__ 3.5 (litres)']]
Text: Honda is the manufacturer of the Acura TLX, which has an engine size of 3.5 litres.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['manufacturer', 'engine']
Object: ['Honda', '3.5 (litres)']

Triple: [['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda', '__subject__ Acura TLX __predicate__ engine __object__ 3.5 (litres)']]
Text: The Acura TLX has a 3.5 litre engine and is made by Honda.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['manufacturer', 'engine']
Object: ['Honda', '3.5 (litres)']

Triple: [['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda', '__subject__ Acura TLX __predicate__ engine __object__ 3.5 (litres)']]
Text: The Acura TLX is manufactured by Honda and has an engine size of 3.5 litres.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['manufacturer', 'engine']
Object: ['Honda', '3.5 (litres)']

Triple: [['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda', '__subject__ Acura TLX __predicate__ engine __object__ Honda K engine']]
Text: The Acura TLX has a Honda K engine and is manufactured by Honda.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['manufacturer', 'engine']
Object: ['Honda', 'Honda K engine']

Triple: [['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda', '__subject__ Acura TLX __predicate__ engine __object__ Honda K engine']]
Text: The Acura TLX, made by Honda, has a Honda K engine.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['manufacturer', 'engine']
Object: ['Honda', 'Honda K engine']

Triple: [['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda', '__subject__ Acura TLX __predicate__ engine __object__ Honda K engine']]
Text: The Acura TLX is made by Honda and has a Honda K engine.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['manufacturer', 'engine']
Object: ['Honda', 'Honda K engine']

Triple: [['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda', '__subject__ Acura TLX __predicate__ engine __object__ V6 engine']]
Text: Honda makes the Acura TLX which has a V6 engine.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['manufacturer', 'engine']
Object: ['Honda', 'V6 engine']

Triple: [['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda', '__subject__ Acura TLX __predicate__ engine __object__ V6 engine']]
Text: Honda makes the Acura TLX with a V6 engine.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['manufacturer', 'engine']
Object: ['Honda', 'V6 engine']

Triple: [['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda', '__subject__ Acura TLX __predicate__ engine __object__ V6 engine']]
Text: The Acura TLX has a V6 engine and is manufactured by Honda.
Subject: ['Acura TLX', 'Acura TLX']
Predicate: ['manufacturer', 'engine']
Object: ['Honda', 'V6 engine']

Triple: [['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda', '__subject__ Honda __predicate__ division __object__ Acura']]
Text: Acura is a division of Honda which is the manufacturer of the Acura TLX.
Subject: ['Acura TLX', 'Honda']
Predicate: ['manufacturer', 'division']
Object: ['Honda', 'Acura']

Triple: [['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda', '__subject__ Honda __predicate__ division __object__ Acura']]
Text: Honda makes the Acura TLX since Acura is a part of the Honda Co.
Subject: ['Acura TLX', 'Honda']
Predicate: ['manufacturer', 'division']
Object: ['Honda', 'Acura']

Triple: [['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda', '__subject__ Honda __predicate__ division __object__ Acura']]
Text: Acura is a division of Honda who make the Acura TLX.
Subject: ['Acura TLX', 'Honda']
Predicate: ['manufacturer', 'division']
Object: ['Honda', 'Acura']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Finland', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Arctech Helsinki Shipyard']]
Text: The icebreaker Aleksay Chirikov was built at the Arctech Helsinki Shipyard in Finland.
Subject: ['Aleksey Chirikov (icebreaker)', 'Aleksey Chirikov (icebreaker)']
Predicate: ['builder', 'builder']
Object: ['Finland', 'Arctech Helsinki Shipyard']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Finland', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Arctech Helsinki Shipyard']]
Text: The icebreaker ship, Aleksey Chirikov, was built in Finland, by the Arctech Helsinki Shipyard.
Subject: ['Aleksey Chirikov (icebreaker)', 'Aleksey Chirikov (icebreaker)']
Predicate: ['builder', 'builder']
Object: ['Finland', 'Arctech Helsinki Shipyard']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Finland', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Arctech Helsinki Shipyard']]
Text: The icebreaker Aleksey Chirikov was built at the Arctech Helsinki Shipyard in Finland.
Subject: ['Aleksey Chirikov (icebreaker)', 'Aleksey Chirikov (icebreaker)']
Predicate: ['builder', 'builder']
Object: ['Finland', 'Arctech Helsinki Shipyard']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Finland', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Helsinki']]
Text: Finland, is the builder of the icebreaker called the Aleksey Chirikov, in Helsinki.
Subject: ['Aleksey Chirikov (icebreaker)', 'Aleksey Chirikov (icebreaker)']
Predicate: ['builder', 'builder']
Object: ['Finland', 'Helsinki']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Finland', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Helsinki']]
Text: The icebreaker was built by Aleksey Chirokov in Finland. Aleksey is in Helsinki.
Subject: ['Aleksey Chirikov (icebreaker)', 'Aleksey Chirikov (icebreaker)']
Predicate: ['builder', 'builder']
Object: ['Finland', 'Helsinki']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Finland', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Helsinki']]
Text: The icebreaker Aleksay Chirikov was built in Helsinki, Finland.
Subject: ['Aleksey Chirikov (icebreaker)', 'Aleksey Chirikov (icebreaker)']
Predicate: ['builder', 'builder']
Object: ['Finland', 'Helsinki']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Finland', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ shipBeam __object__ 21.2']]
Text: Finland is the builder of the icebreaker called the Aleksey Chirikov which has a 21.2 m long ship beam.
Subject: ['Aleksey Chirikov (icebreaker)', 'Aleksey Chirikov (icebreaker)']
Predicate: ['builder', 'shipBeam']
Object: ['Finland', '21.2']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Finland', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ shipBeam __object__ 21.2']]
Text: The Finnish built Aleksey Chirikov (icebreaker) has a 21.2 m long ship beam.
Subject: ['Aleksey Chirikov (icebreaker)', 'Aleksey Chirikov (icebreaker)']
Predicate: ['builder', 'shipBeam']
Object: ['Finland', '21.2']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Finland', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ shipBeam __object__ 21.2']]
Text: The icebreaker ship Aleksey Chirikov was built in Finland and has a ship beam of 21.2 m.
Subject: ['Aleksey Chirikov (icebreaker)', 'Aleksey Chirikov (icebreaker)']
Predicate: ['builder', 'shipBeam']
Object: ['Finland', '21.2']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Finland', '__subject__ Finland __predicate__ demonym __object__ Finns']]
Text: The people of Finland are known as Finns and the country built the icebreaker Aleksey Chirikov.
Subject: ['Aleksey Chirikov (icebreaker)', 'Finland']
Predicate: ['builder', 'demonym']
Object: ['Finland', 'Finns']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Finland', '__subject__ Finland __predicate__ demonym __object__ Finns']]
Text: The icebreaker Aleksey Chirikov was made in Finland. People from Finland are known as Finns.
Subject: ['Aleksey Chirikov (icebreaker)', 'Finland']
Predicate: ['builder', 'demonym']
Object: ['Finland', 'Finns']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Finland', '__subject__ Finland __predicate__ demonym __object__ Finns']]
Text: The icebreaker ship, Aleksey Chirikov, was built in Finland where the people are known as Finns.
Subject: ['Aleksey Chirikov (icebreaker)', 'Finland']
Predicate: ['builder', 'demonym']
Object: ['Finland', 'Finns']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Helsinki', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Arctech Helsinki Shipyard']]
Text: Arctech Helsinki Shipyard are based in Helsinki and built the Aleksey Chirikov icebreaker.
Subject: ['Aleksey Chirikov (icebreaker)', 'Aleksey Chirikov (icebreaker)']
Predicate: ['builder', 'builder']
Object: ['Helsinki', 'Arctech Helsinki Shipyard']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Helsinki', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Arctech Helsinki Shipyard']]
Text: The icebreaker Aleksey Chirikov was built at the Arctech Helsinki Shipyard in Helsinki.
Subject: ['Aleksey Chirikov (icebreaker)', 'Aleksey Chirikov (icebreaker)']
Predicate: ['builder', 'builder']
Object: ['Helsinki', 'Arctech Helsinki Shipyard']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ shipBeam __object__ 21.2', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Helsinki']]
Text: The Aleksey Chirikov icebreaker was built in Helsinki and has a 21.2 m long ship beam.
Subject: ['Aleksey Chirikov (icebreaker)', 'Aleksey Chirikov (icebreaker)']
Predicate: ['shipBeam', 'builder']
Object: ['21.2', 'Helsinki']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ shipBeam __object__ 21.2', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Helsinki']]
Text: The icebreaker Aleksey Chirikov was built in Helsinki and has a ship beam of 21.2 m.
Subject: ['Aleksey Chirikov (icebreaker)', 'Aleksey Chirikov (icebreaker)']
Predicate: ['shipBeam', 'builder']
Object: ['21.2', 'Helsinki']

Triple: [['__subject__ Aleksey Chirikov (icebreaker) __predicate__ shipBeam __object__ 21.2', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Helsinki']]
Text: The icebreaker Aleksey Chirikov was built in Helsinki and has a ship beam of 21.2.
Subject: ['Aleksey Chirikov (icebreaker)', 'Aleksey Chirikov (icebreaker)']
Predicate: ['shipBeam', 'builder']
Object: ['21.2', 'Helsinki']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ alternativeName __object__ Alfa Romeo 168', '__subject__ Alfa Romeo 164 __predicate__ class __object__ Mid-size luxury / Executive car']]
Text: The Alfa Romeo 164 is also known as the "Alfa Romeo 168" and is considered a mid-size luxury executive car.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['alternativeName', 'class']
Object: ['Alfa Romeo 168', 'Mid-size luxury / Executive car']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ alternativeName __object__ Alfa Romeo 168', '__subject__ Alfa Romeo 164 __predicate__ class __object__ Mid-size luxury / Executive car']]
Text: The Alfa Romeo 164 is also known as the "Alfa Romeo 168" is considered a mid-size luxury executive car.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['alternativeName', 'class']
Object: ['Alfa Romeo 168', 'Mid-size luxury / Executive car']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ alternativeName __object__ Alfa Romeo 168', '__subject__ Alfa Romeo 164 __predicate__ class __object__ Mid-size luxury / Executive car']]
Text: The Alfa Romeo 164, alternative name Alfa Romeo 168, is considered a mid-size luxury executive car.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['alternativeName', 'class']
Object: ['Alfa Romeo 168', 'Mid-size luxury / Executive car']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Arese', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Lancia Thema']]
Text: Alfa Romeo 164 was made in Arese and is related to Lancia Thema.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['assembly', 'relatedMeanOfTransportation']
Object: ['Arese', 'Lancia Thema']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Arese', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Lancia Thema']]
Text: The Alfa Romeo 164, which was assembled in Arese, is a related transport of the Lancia Thema.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['assembly', 'relatedMeanOfTransportation']
Object: ['Arese', 'Lancia Thema']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Arese', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Lancia Thema']]
Text: The Alfa Romeo 164 was made in Arese and is connectd to the Lancia Thema.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['assembly', 'relatedMeanOfTransportation']
Object: ['Arese', 'Lancia Thema']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Arese', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Saab 9000']]
Text: The Alfa Romeo 164, assembled inArese, and the Saab 9000 are related means of transport in that they are both cars.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['assembly', 'relatedMeanOfTransportation']
Object: ['Arese', 'Saab 9000']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Arese', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Saab 9000']]
Text: The Alfa Romeo 164, assembled in Arese, and the Saab 9000 are similar means of transport.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['assembly', 'relatedMeanOfTransportation']
Object: ['Arese', 'Saab 9000']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Arese', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Saab 9000']]
Text: The Alfa Romeo 164, assembled in Arese, and the Saab 9000 are similar vehicles.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['assembly', 'relatedMeanOfTransportation']
Object: ['Arese', 'Saab 9000']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Italy', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Saab 9000']]
Text: The Alfa Romeo 164 was assembled in Italy, both this vehicle and the Saab 9000 are cars.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['assembly', 'relatedMeanOfTransportation']
Object: ['Italy', 'Saab 9000']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Italy', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Saab 9000']]
Text: The Alfa Romeo 164, assembled in Italy, and the Saab 9000 are similar means of transport.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['assembly', 'relatedMeanOfTransportation']
Object: ['Italy', 'Saab 9000']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Italy', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Saab 9000']]
Text: The Alfa Romeo 164, which is assembled in Italy, and the Saab 9000 are related means of transport in that they are both cars.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['assembly', 'relatedMeanOfTransportation']
Object: ['Italy', 'Saab 9000']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Milan', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Lancia Thema']]
Text: Alfa Romeo 164, which is assembled in Milan, and Lancia Thema are related types of transportation.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['assembly', 'relatedMeanOfTransportation']
Object: ['Milan', 'Lancia Thema']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Milan', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Lancia Thema']]
Text: The Alfa Romeo 164 which is assembled in Milan is the related transport to the. Lancia Thema.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['assembly', 'relatedMeanOfTransportation']
Object: ['Milan', 'Lancia Thema']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Milan', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Lancia Thema']]
Text: The Alfa Romeo 164, which was assembled in Milan, and Lancia Thema are related types of transportation.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['assembly', 'relatedMeanOfTransportation']
Object: ['Milan', 'Lancia Thema']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ bodyStyle __object__ Sedan (automobile)', '__subject__ Alfa Romeo 164 __predicate__ engine __object__ Straight-four engine']]
Text: The Alfa Romeo 164 is a sedan with a straight-four engine.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['bodyStyle', 'engine']
Object: ['Sedan (automobile)', 'Straight-four engine']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ bodyStyle __object__ Sedan (automobile)', '__subject__ Alfa Romeo 164 __predicate__ engine __object__ Straight-four engine']]
Text: The Alfa Romeo 164 is a sedan and has a straight-four engine.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['bodyStyle', 'engine']
Object: ['Sedan (automobile)', 'Straight-four engine']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ bodyStyle __object__ Sedan (automobile)', '__subject__ Alfa Romeo 164 __predicate__ engine __object__ Straight-four engine']]
Text: The Alfa Romeo 164 is a sedan with a straight four engine.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['bodyStyle', 'engine']
Object: ['Sedan (automobile)', 'Straight-four engine']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Fiat Croma', '__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Arese']]
Text: The Arese assembled Alfa Romeo 164 and the Fiat Croma are related means of transportation.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'assembly']
Object: ['Fiat Croma', 'Arese']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Fiat Croma', '__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Arese']]
Text: The Alfa Romeo 164, which was assembled in Arese, and the Fiat Croma are related means of transportation.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'assembly']
Object: ['Fiat Croma', 'Arese']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Fiat Croma', '__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Arese']]
Text: The Alfa Romeo 164, made in Arese, and the Fiat Croma are very similar vehicles.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'assembly']
Object: ['Fiat Croma', 'Arese']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Fiat Croma', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Lancia Thema']]
Text: The Alfa Romeo 164 is related to the Lancia Thema as well as the Fiat Croma are therefore all a related means of transportation.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Fiat Croma', 'Lancia Thema']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Fiat Croma', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Lancia Thema']]
Text: The Alfa Romeo 164, Lancia Thema and the Fiat Croma are both related and similar means of transport.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Fiat Croma', 'Lancia Thema']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Fiat Croma', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Lancia Thema']]
Text: The Lancia Thema is a realted transport to the Alfa Romeo 164 which in turn, is a similar means of transport to the Fiat Croma.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Fiat Croma', 'Lancia Thema']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Fiat Croma', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Saab 9000']]
Text: The Alfa Romeo 164 and the Saab 9000 and the Fiat Croma are related means of transport in that they are all cars.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Fiat Croma', 'Saab 9000']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Fiat Croma', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Saab 9000']]
Text: The Alfa Romeo 164, the Fiat Croma and the Saab 9000 are all similar means of transport.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Fiat Croma', 'Saab 9000']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Fiat Croma', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Saab 9000']]
Text: The Alfa Romeo 164, Fiat Croma and the Saab 9000 are the same kind of means of transportation.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Fiat Croma', 'Saab 9000']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Saab 9000', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Lancia Thema']]
Text: Alfa Romeo 164, Saab 9000 and Lancia Thema are all cars.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Saab 9000', 'Lancia Thema']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Saab 9000', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Lancia Thema']]
Text: The Alfa Romeo 164 is similar to the Saab 9000 and the Lancia Thema.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Saab 9000', 'Lancia Thema']

Triple: [['__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Saab 9000', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Lancia Thema']]
Text: Alfa Romeo 164 and the Saab 9000 are means of transportation that are similar. Lancia Thema and the Alfa Romeo 164 are related transport systems.
Subject: ['Alfa Romeo 164', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Saab 9000', 'Lancia Thema']

Triple: [['__subject__ Alhambra __predicate__ maidenVoyage __object__ 1855-07-07', '__subject__ Alhambra __predicate__ length __object__ 63800.0 (millimetres)']]
Text: Alhambra has its maiden voyage on July 7th, 1855 and was 63800.0 millimetres long.
Subject: ['Alhambra', 'Alhambra']
Predicate: ['maidenVoyage', 'length']
Object: ['1855-07-07', '63800.0 (millimetres)']

Triple: [['__subject__ Alhambra __predicate__ maidenVoyage __object__ 1855-07-07', '__subject__ Alhambra __predicate__ length __object__ 63800.0 (millimetres)']]
Text: The Alhambra was 63800.0 millimetres long and its first trip was on 7 July 1855.
Subject: ['Alhambra', 'Alhambra']
Predicate: ['maidenVoyage', 'length']
Object: ['1855-07-07', '63800.0 (millimetres)']

Triple: [['__subject__ Alhambra __predicate__ maidenVoyage __object__ 1855-07-07', '__subject__ Alhambra __predicate__ length __object__ 63800.0 (millimetres)']]
Text: The Alhambra is 63.8m long and has its maiden voyage on 7th July 1855.
Subject: ['Alhambra', 'Alhambra']
Predicate: ['maidenVoyage', 'length']
Object: ['1855-07-07', '63800.0 (millimetres)']

Triple: [['__subject__ Alhambra __predicate__ owner __object__ P&O (company)', '__subject__ P&O (company) __predicate__ location __object__ London']]
Text: Alhambra is owned by London based P&O company.
Subject: ['Alhambra', 'P&O (company)']
Predicate: ['owner', 'location']
Object: ['P&O (company)', 'London']

Triple: [['__subject__ Alhambra __predicate__ owner __object__ P&O (company)', '__subject__ P&O (company) __predicate__ location __object__ London']]
Text: Alhambra is owned by the P & O company which is located in London.
Subject: ['Alhambra', 'P&O (company)']
Predicate: ['owner', 'location']
Object: ['P&O (company)', 'London']

Triple: [['__subject__ Alhambra __predicate__ owner __object__ P&O (company)', '__subject__ P&O (company) __predicate__ location __object__ London']]
Text: The Alhambra is owned by the London based, P&O company.
Subject: ['Alhambra', 'P&O (company)']
Predicate: ['owner', 'location']
Object: ['P&O (company)', 'London']

Triple: [['__subject__ Alhambra __predicate__ powerType __object__ Humphrys, Tennant and Dykes', '__subject__ Alhambra __predicate__ builder __object__ Samuda Brothers']]
Text: The Alhambra, built by the Samuda Brothers, has a Humphrys, Tennant and Dykes power type.
Subject: ['Alhambra', 'Alhambra']
Predicate: ['powerType', 'builder']
Object: ['Humphrys, Tennant and Dykes', 'Samuda Brothers']

Triple: [['__subject__ Alhambra __predicate__ powerType __object__ Humphrys, Tennant and Dykes', '__subject__ Alhambra __predicate__ builder __object__ Samuda Brothers']]
Text: The Alhambra was built by the Samuda brothers and is powered by a Humphrys, Tennant and Dykes engine.
Subject: ['Alhambra', 'Alhambra']
Predicate: ['powerType', 'builder']
Object: ['Humphrys, Tennant and Dykes', 'Samuda Brothers']

Triple: [['__subject__ Alhambra __predicate__ powerType __object__ Humphrys, Tennant and Dykes', '__subject__ Alhambra __predicate__ builder __object__ Samuda Brothers']]
Text: The Alhambra was built by the Samuda Brothers and is powered by a Humphrys, Tennant and Dykes engine.
Subject: ['Alhambra', 'Alhambra']
Predicate: ['powerType', 'builder']
Object: ['Humphrys, Tennant and Dykes', 'Samuda Brothers']

Triple: [['__subject__ Alhambra __predicate__ powerType __object__ Humphrys, Tennant and Dykes', '__subject__ Humphrys, Tennant and Dykes __predicate__ location __object__ London']]
Text: The Alhambra has a (London located) Humphrys, Tennant and Dykes power type.
Subject: ['Alhambra', 'Humphrys, Tennant and Dykes']
Predicate: ['powerType', 'location']
Object: ['Humphrys, Tennant and Dykes', 'London']

Triple: [['__subject__ Alhambra __predicate__ powerType __object__ Humphrys, Tennant and Dykes', '__subject__ Humphrys, Tennant and Dykes __predicate__ location __object__ London']]
Text: The Alhambra, found in London, has a Humphrys, Tennant and Dykes power type.
Subject: ['Alhambra', 'Humphrys, Tennant and Dykes']
Predicate: ['powerType', 'location']
Object: ['Humphrys, Tennant and Dykes', 'London']

Triple: [['__subject__ Alhambra __predicate__ powerType __object__ Humphrys, Tennant and Dykes', '__subject__ Humphrys, Tennant and Dykes __predicate__ location __object__ London']]
Text: The Alhambra is powered by a Humphrys, Tennant and Dykes engine, they are located in London.
Subject: ['Alhambra', 'Humphrys, Tennant and Dykes']
Predicate: ['powerType', 'location']
Object: ['Humphrys, Tennant and Dykes', 'London']

Triple: [['__subject__ Alhambra __predicate__ shipBeam __object__ 8.3 m', '__subject__ Alhambra __predicate__ status __object__ Wrecked']]
Text: Alhambra was wrecked and had a ship beam of 8.3m.
Subject: ['Alhambra', 'Alhambra']
Predicate: ['shipBeam', 'status']
Object: ['8.3 m', 'Wrecked']

Triple: [['__subject__ Alhambra __predicate__ shipBeam __object__ 8.3 m', '__subject__ Alhambra __predicate__ status __object__ Wrecked']]
Text: The Alhambra, which was wrecked, has an 8.3m ship beam.
Subject: ['Alhambra', 'Alhambra']
Predicate: ['shipBeam', 'status']
Object: ['8.3 m', 'Wrecked']

Triple: [['__subject__ Alhambra __predicate__ shipBeam __object__ 8.3 m', '__subject__ Alhambra __predicate__ status __object__ Wrecked']]
Text: The Alhambra ship beam is 8.3m but is now wrecked.
Subject: ['Alhambra', 'Alhambra']
Predicate: ['shipBeam', 'status']
Object: ['8.3 m', 'Wrecked']

Triple: [['__subject__ Alhambra __predicate__ shipBeam __object__ 8.3 m', '__subject__ Alhambra __predicate__ topSpeed __object__ 18.52']]
Text: The Alhambra has a ship beam of 8.3m and a top speed of 18.52.
Subject: ['Alhambra', 'Alhambra']
Predicate: ['shipBeam', 'topSpeed']
Object: ['8.3 m', '18.52']

Triple: [['__subject__ Alhambra __predicate__ shipBeam __object__ 8.3 m', '__subject__ Alhambra __predicate__ topSpeed __object__ 18.52']]
Text: The Alhambra has an 8.3m ship beam and a top speed of 18.52.
Subject: ['Alhambra', 'Alhambra']
Predicate: ['shipBeam', 'topSpeed']
Object: ['8.3 m', '18.52']

Triple: [['__subject__ Alhambra __predicate__ shipBeam __object__ 8.3 m', '__subject__ Alhambra __predicate__ topSpeed __object__ 18.52']]
Text: The Alhambra ship beam is 8.3m and it has a top speed of 18.52.
Subject: ['Alhambra', 'Alhambra']
Predicate: ['shipBeam', 'topSpeed']
Object: ['8.3 m', '18.52']

Triple: [['__subject__ Alhambra __predicate__ shipPower __object__ Geared steam engine Humphrys, Tennant and Dykes 140hp', '__subject__ Alhambra __predicate__ length __object__ 63800.0 (millimetres)']]
Text: The Alhambra had a Geared steam engine Humphrys, Tennant and Dykes 140hp and a length of 63800.0 millimetres.
Subject: ['Alhambra', 'Alhambra']
Predicate: ['shipPower', 'length']
Object: ['Geared steam engine Humphrys, Tennant and Dykes 140hp', '63800.0 (millimetres)']

Triple: [['__subject__ Alhambra __predicate__ shipPower __object__ Geared steam engine Humphrys, Tennant and Dykes 140hp', '__subject__ Alhambra __predicate__ length __object__ 63800.0 (millimetres)']]
Text: The Alhambra is 63800.0 millimetres long and had a Humphrys, Tennant and Dykes 140hp geared steam engine.
Subject: ['Alhambra', 'Alhambra']
Predicate: ['shipPower', 'length']
Object: ['Geared steam engine Humphrys, Tennant and Dykes 140hp', '63800.0 (millimetres)']

Triple: [['__subject__ Alhambra __predicate__ shipPower __object__ Geared steam engine Humphrys, Tennant and Dykes 140hp', '__subject__ Alhambra __predicate__ length __object__ 63800.0 (millimetres)']]
Text: The Alhambra was 63800.0 mms in length and had a Geared steam engine Humphrys, Tennant and Dykes 140hp.
Subject: ['Alhambra', 'Alhambra']
Predicate: ['shipPower', 'length']
Object: ['Geared steam engine Humphrys, Tennant and Dykes 140hp', '63800.0 (millimetres)']

Triple: [['__subject__ Alvis Speed 25 __predicate__ engine __object__ Petrol', '__subject__ Alvis Speed 25 __predicate__ transmission __object__ single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle']]
Text: The Alvis Speed 25 has a petrol engine and an impressive transmission coined as "single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints, spiral bevel fully floating back axle".
Subject: ['Alvis Speed 25', 'Alvis Speed 25']
Predicate: ['engine', 'transmission']
Object: ['Petrol', 'single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle']

Triple: [['__subject__ Alvis Speed 25 __predicate__ engine __object__ Petrol', '__subject__ Alvis Speed 25 __predicate__ transmission __object__ single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle']]
Text: The Alvis Speed 25 has a petrol engine and its transmission system comprises a single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints and spiral bevel fully floating back axle.
Subject: ['Alvis Speed 25', 'Alvis Speed 25']
Predicate: ['engine', 'transmission']
Object: ['Petrol', 'single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle']

Triple: [['__subject__ Alvis Speed 25 __predicate__ manufacturer __object__ Alvis Car and Engineering Company', '__subject__ Alvis Car and Engineering Company __predicate__ foundationPlace __object__ Coventry']]
Text: Alvis Speed 25 was manufactured by the Alvis Car and Engineering Company, which was founded in Coventry.
Subject: ['Alvis Speed 25', 'Alvis Car and Engineering Company']
Predicate: ['manufacturer', 'foundationPlace']
Object: ['Alvis Car and Engineering Company', 'Coventry']

Triple: [['__subject__ Alvis Speed 25 __predicate__ manufacturer __object__ Alvis Car and Engineering Company', '__subject__ Alvis Car and Engineering Company __predicate__ foundationPlace __object__ Coventry']]
Text: Alvis Speed 25 was made the Alvis Car and Engineering Company, founded in Coventry.
Subject: ['Alvis Speed 25', 'Alvis Car and Engineering Company']
Predicate: ['manufacturer', 'foundationPlace']
Object: ['Alvis Car and Engineering Company', 'Coventry']

Triple: [['__subject__ Alvis Speed 25 __predicate__ manufacturer __object__ Alvis Car and Engineering Company', '__subject__ Alvis Car and Engineering Company __predicate__ foundationPlace __object__ Coventry']]
Text: The Alvis Speed 25 was made by the Alvis Car and Engineering Company which was founded in Coventry.
Subject: ['Alvis Speed 25', 'Alvis Car and Engineering Company']
Predicate: ['manufacturer', 'foundationPlace']
Object: ['Alvis Car and Engineering Company', 'Coventry']

Triple: [['__subject__ Alvis Speed 25 __predicate__ manufacturer __object__ Alvis Car and Engineering Company', '__subject__ Alvis Car and Engineering Company __predicate__ successor __object__ Rover Company']]
Text: Alvis Speed 25 was manufactured by the Alvis Car and Engineering Company, which was succeeded by the Rover Company.
Subject: ['Alvis Speed 25', 'Alvis Car and Engineering Company']
Predicate: ['manufacturer', 'successor']
Object: ['Alvis Car and Engineering Company', 'Rover Company']

Triple: [['__subject__ Alvis Speed 25 __predicate__ manufacturer __object__ Alvis Car and Engineering Company', '__subject__ Alvis Car and Engineering Company __predicate__ successor __object__ Rover Company']]
Text: The Alvis Speed 25 was made by the Alvis Car and Engineering Company which was succeeded by the Rover Co.
Subject: ['Alvis Speed 25', 'Alvis Car and Engineering Company']
Predicate: ['manufacturer', 'successor']
Object: ['Alvis Car and Engineering Company', 'Rover Company']

Triple: [['__subject__ Alvis Speed 25 __predicate__ manufacturer __object__ Alvis Car and Engineering Company', '__subject__ Alvis Car and Engineering Company __predicate__ successor __object__ Rover Company']]
Text: The Alvis Speed 25 was manufactured by the Alvis Car and Engineering Company which was later succeeded by the Rover Company.
Subject: ['Alvis Speed 25', 'Alvis Car and Engineering Company']
Predicate: ['manufacturer', 'successor']
Object: ['Alvis Car and Engineering Company', 'Rover Company']

Triple: [['__subject__ Alvis Speed 25 __predicate__ transmission __object__ single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle', '__subject__ Alvis Speed 25 __predicate__ class __object__ Full-size luxury car']]
Text: The Alvis Speed 25 is a full size luxury vehicle with a specialised transmission system, which comprises a single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints, and spiral bevel fully floating back axle.
Subject: ['Alvis Speed 25', 'Alvis Speed 25']
Predicate: ['transmission', 'class']
Object: ['single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle', 'Full-size luxury car']

Triple: [['__subject__ Alvis Speed 25 __predicate__ transmission __object__ single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle', '__subject__ Alvis Speed 25 __predicate__ class __object__ Full-size luxury car']]
Text: The Alvis Speed 25 is a full size luxury car with a specialised transmission system, which consists of a single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints, and spiral bevel fully floating back axle.
Subject: ['Alvis Speed 25', 'Alvis Speed 25']
Predicate: ['transmission', 'class']
Object: ['single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle', 'Full-size luxury car']

Triple: [['__subject__ Alvis Speed 25 __predicate__ transmission __object__ single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle', '__subject__ Alvis Speed 25 __predicate__ class __object__ Full-size car']]
Text: Alvis Speed 25 is a full size car with a transmission system made of a single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints and spiral bevel fully floating back axle.
Subject: ['Alvis Speed 25', 'Alvis Speed 25']
Predicate: ['transmission', 'class']
Object: ['single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle', 'Full-size car']

Triple: [['__subject__ Alvis Speed 25 __predicate__ transmission __object__ single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle', '__subject__ Alvis Speed 25 __predicate__ engine __object__ 31.48 tax horsepower']]
Text: The Alvis Speed 25 has a 31.48 tax horsepower engine and an impressive transmission which possesses a single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints, and spiral bevel fully floating back axle.
Subject: ['Alvis Speed 25', 'Alvis Speed 25']
Predicate: ['transmission', 'engine']
Object: ['single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle', '31.48 tax horsepower']

Triple: [['__subject__ Alvis Speed 25 __predicate__ transmission __object__ single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle', '__subject__ Alvis Speed 25 __predicate__ engine __object__ 31.48 tax horsepower']]
Text: With a 31.48 tax horsepower engine, the Alvis Speed 25, has a transmission system which comprises a single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints and spiral bevel fully floating back axle.
Subject: ['Alvis Speed 25', 'Alvis Speed 25']
Predicate: ['transmission', 'engine']
Object: ['single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle', '31.48 tax horsepower']

Triple: [['__subject__ Alvis Speed 25 __predicate__ transmission __object__ single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle', '__subject__ Alvis Speed 25 __predicate__ engine __object__ 31.48 tax horsepower']]
Text: The Alvis Speed 25 has an engine capable of producing 31.48 tax horsepower and the transmission system comprises a single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints and spiral bevel fully floating back axle.
Subject: ['Alvis Speed 25', 'Alvis Speed 25']
Predicate: ['transmission', 'engine']
Object: ['single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle', '31.48 tax horsepower']

Triple: [['__subject__ American Motors __predicate__ subsidiary __object__ Wheel Horse', '__subject__ AMC Matador __predicate__ manufacturer __object__ American Motors']]
Text: The AMC Matador is made by American Motors and has The Wheel Horse Co. as its subsidiary.
Subject: ['American Motors', 'AMC Matador']
Predicate: ['subsidiary', 'manufacturer']
Object: ['Wheel Horse', 'American Motors']

Triple: [['__subject__ American Motors __predicate__ subsidiary __object__ Wheel Horse', '__subject__ AMC Matador __predicate__ manufacturer __object__ American Motors']]
Text: The Wheel Horse is a subsidiary of American Motors which makes the AMC Matador.
Subject: ['American Motors', 'AMC Matador']
Predicate: ['subsidiary', 'manufacturer']
Object: ['Wheel Horse', 'American Motors']

Triple: [['__subject__ American Motors __predicate__ subsidiary __object__ Wheel Horse', '__subject__ AMC Matador __predicate__ manufacturer __object__ American Motors']]
Text: Wheel Horse is a subsidiary of American Motors which makes the AMC Matador.
Subject: ['American Motors', 'AMC Matador']
Predicate: ['subsidiary', 'manufacturer']
Object: ['Wheel Horse', 'American Motors']

Triple: [['__subject__ American submarine NR-1 __predicate__ builder __object__ General Dynamics Electric Boat', '__subject__ General Dynamics Electric Boat __predicate__ city __object__ Groton, Connecticut']]
Text: General Dynamics Electric Boat. located in Groton, Connecticut, is the builder of the American submarine NR-1.
Subject: ['American submarine NR-1', 'General Dynamics Electric Boat']
Predicate: ['builder', 'city']
Object: ['General Dynamics Electric Boat', 'Groton, Connecticut']

Triple: [['__subject__ American submarine NR-1 __predicate__ builder __object__ General Dynamics Electric Boat', '__subject__ General Dynamics Electric Boat __predicate__ city __object__ Groton, Connecticut']]
Text: General Dynamics Electric Boat in Groton, Connecticut built the American submarine NR-1.
Subject: ['American submarine NR-1', 'General Dynamics Electric Boat']
Predicate: ['builder', 'city']
Object: ['General Dynamics Electric Boat', 'Groton, Connecticut']

Triple: [['__subject__ American submarine NR-1 __predicate__ builder __object__ General Dynamics Electric Boat', '__subject__ General Dynamics Electric Boat __predicate__ city __object__ Groton, Connecticut']]
Text: General Dynamics Electric Boat (located in Groton, CT), is the company that built the American submarine NR-1.
Subject: ['American submarine NR-1', 'General Dynamics Electric Boat']
Predicate: ['builder', 'city']
Object: ['General Dynamics Electric Boat', 'Groton, Connecticut']

Triple: [['__subject__ American submarine NR-1 __predicate__ shipDraft __object__ 4.6 m', '__subject__ American submarine NR-1 __predicate__ shipBeam __object__ 3.8 m']]
Text: The American submarine NR-1 has a draft of 4.6m and a beam of 3.8m.
Subject: ['American submarine NR-1', 'American submarine NR-1']
Predicate: ['shipDraft', 'shipBeam']
Object: ['4.6 m', '3.8 m']

Triple: [['__subject__ American submarine NR-1 __predicate__ shipDraft __object__ 4.6 m', '__subject__ American submarine NR-1 __predicate__ shipBeam __object__ 3.8 m']]
Text: The American submarine NR-1 has a ship draft of 4.6m and a beam of 3.8 metres.
Subject: ['American submarine NR-1', 'American submarine NR-1']
Predicate: ['shipDraft', 'shipBeam']
Object: ['4.6 m', '3.8 m']

Triple: [['__subject__ American submarine NR-1 __predicate__ shipDraft __object__ 4.6 m', '__subject__ American submarine NR-1 __predicate__ shipBeam __object__ 3.8 m']]
Text: The American submarine NR-1 has a ship draft of 4.6m and a beam of 3.8m.
Subject: ['American submarine NR-1', 'American submarine NR-1']
Predicate: ['shipDraft', 'shipBeam']
Object: ['4.6 m', '3.8 m']

Triple: [['__subject__ American submarine NR-1 __predicate__ shipLaunch __object__ 1969-01-25', '__subject__ American submarine NR-1 __predicate__ shipBeam __object__ 3.8 m']]
Text: The American Submarine NR-1 has a ship beam of 3.8 m and was launched on January 25, 1969.
Subject: ['American submarine NR-1', 'American submarine NR-1']
Predicate: ['shipLaunch', 'shipBeam']
Object: ['1969-01-25', '3.8 m']

Triple: [['__subject__ American submarine NR-1 __predicate__ shipLaunch __object__ 1969-01-25', '__subject__ American submarine NR-1 __predicate__ shipBeam __object__ 3.8 m']]
Text: The American sub NR-1 has a beam of 3.8m and was launched January 25th 1969.
Subject: ['American submarine NR-1', 'American submarine NR-1']
Predicate: ['shipLaunch', 'shipBeam']
Object: ['1969-01-25', '3.8 m']

Triple: [['__subject__ American submarine NR-1 __predicate__ shipLaunch __object__ 1969-01-25', '__subject__ American submarine NR-1 __predicate__ shipBeam __object__ 3.8 m']]
Text: The American submarine NR-1 was launched on The 25th of January 1969 and it has a ship beam of 3.8 m.
Subject: ['American submarine NR-1', 'American submarine NR-1']
Predicate: ['shipLaunch', 'shipBeam']
Object: ['1969-01-25', '3.8 m']

Triple: [['__subject__ American submarine NR-1 __predicate__ topSpeed __object__ 8.334', '__subject__ American submarine NR-1 __predicate__ shipBeam __object__ 3.8 m']]
Text: The American submarine NR-1 has a beam of 3.8m and a top speed of 8334 km/h.
Subject: ['American submarine NR-1', 'American submarine NR-1']
Predicate: ['topSpeed', 'shipBeam']
Object: ['8.334', '3.8 m']

Triple: [['__subject__ American submarine NR-1 __predicate__ topSpeed __object__ 8.334', '__subject__ American submarine NR-1 __predicate__ shipBeam __object__ 3.8 m']]
Text: The American submarine, NR-1, has a top speed of 8.334 km/h and a ship beam of 3.8 m.
Subject: ['American submarine NR-1', 'American submarine NR-1']
Predicate: ['topSpeed', 'shipBeam']
Object: ['8.334', '3.8 m']

Triple: [['__subject__ American submarine NR-1 __predicate__ topSpeed __object__ 8.334', '__subject__ American submarine NR-1 __predicate__ shipBeam __object__ 3.8 m']]
Text: The American sub NR-1 has a beam of 3.8m and a top speed of 8.334.
Subject: ['American submarine NR-1', 'American submarine NR-1']
Predicate: ['topSpeed', 'shipBeam']
Object: ['8.334', '3.8 m']

Triple: [['__subject__ Antares (rocket) __predicate__ comparable __object__ Delta II', '__subject__ Delta II __predicate__ countryOrigin __object__ United States']]
Text: The Antares rocket is similar with the Delta II from the U.S.
Subject: ['Antares (rocket)', 'Delta II']
Predicate: ['comparable', 'countryOrigin']
Object: ['Delta II', 'United States']

Triple: [['__subject__ Antares (rocket) __predicate__ comparable __object__ Delta II', '__subject__ Delta II __predicate__ countryOrigin __object__ United States']]
Text: The Antares rocket is similar to the Delta II rocket, the latter originates from the United States.
Subject: ['Antares (rocket)', 'Delta II']
Predicate: ['comparable', 'countryOrigin']
Object: ['Delta II', 'United States']

Triple: [['__subject__ Antares (rocket) __predicate__ comparable __object__ Delta II', '__subject__ Delta II __predicate__ countryOrigin __object__ United States']]
Text: The rocket Antares, is comparable to Delta II which originates from the United States.
Subject: ['Antares (rocket)', 'Delta II']
Predicate: ['comparable', 'countryOrigin']
Object: ['Delta II', 'United States']

Triple: [['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2014-07-13', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport']]
Text: The launch site of the Antares rocket, which had its final flight on July 13. 2014, was the Mid Atlantic Regional Spaceport.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['finalFlight', 'launchSite']
Object: ['2014-07-13', 'Mid-Atlantic Regional Spaceport']

Triple: [['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2014-07-13', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport']]
Text: The rocket Antares was launched from the Mid-Atlantic Regional Spaceport and its final flight was on July 13 2014.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['finalFlight', 'launchSite']
Object: ['2014-07-13', 'Mid-Atlantic Regional Spaceport']

Triple: [['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2014-07-13', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0']]
Text: The rocket, Antares, which made its final flight on 13th of July, 2014, was launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['finalFlight', 'launchSite']
Object: ['2014-07-13', 'Mid-Atlantic Regional Spaceport Launch Pad 0']

Triple: [['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2014-07-13', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0']]
Text: The Antares rocket has its final flight on 13th July 2014 and was launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['finalFlight', 'launchSite']
Object: ['2014-07-13', 'Mid-Atlantic Regional Spaceport Launch Pad 0']

Triple: [['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2014-07-13', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0']]
Text: The Antares rocket was launched at the Mid-Atlantic Regional Spaceport Launch Pad 0 and has its final flight on July 13 2014.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['finalFlight', 'launchSite']
Object: ['2014-07-13', 'Mid-Atlantic Regional Spaceport Launch Pad 0']

Triple: [['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2014-10-28', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport']]
Text: The rocket Antares was launched from the Mid-Atlantic Regional Spaceport and took its final flight on 28 October 2014.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['finalFlight', 'launchSite']
Object: ['2014-10-28', 'Mid-Atlantic Regional Spaceport']

Triple: [['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2014-10-28', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport']]
Text: The final flight of the Antares rocket was on 2014-10-28 from the launch site, the Mid Atlantic Regional Spaceport.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['finalFlight', 'launchSite']
Object: ['2014-10-28', 'Mid-Atlantic Regional Spaceport']

Triple: [['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2014-10-28', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport']]
Text: The Antares rocket, was launched from the Mid-Atlantic Regional Spaceport, its final flight was on, 2014-10-28.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['finalFlight', 'launchSite']
Object: ['2014-10-28', 'Mid-Atlantic Regional Spaceport']

Triple: [['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2014-10-28', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0']]
Text: The Antares rocket's final flight was from Mid-Atlantic Regional Spaceport Launch Pad 0 on the 28th October 2014.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['finalFlight', 'launchSite']
Object: ['2014-10-28', 'Mid-Atlantic Regional Spaceport Launch Pad 0']

Triple: [['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2014-10-28', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0']]
Text: The launch site of the Antares rocket was the Mid-Atlantic Regional Spaceport Launch Pad 0 and it took its final flight on 28 October 2014.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['finalFlight', 'launchSite']
Object: ['2014-10-28', 'Mid-Atlantic Regional Spaceport Launch Pad 0']

Triple: [['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2014-10-28', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0']]
Text: The rocket, Antares, was launched from the Mid-Atlantic Regional Spaceport Launch Pad 0 and its final flight was on 2014-10-28.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['finalFlight', 'launchSite']
Object: ['2014-10-28', 'Mid-Atlantic Regional Spaceport Launch Pad 0']

Triple: [['__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport', '__subject__ Antares (rocket) __predicate__ comparable __object__ Delta II']]
Text: The Antares rocket is comparable with the Delta II and was launched from the Mid-Atlantic Regional Spaceport.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['launchSite', 'comparable']
Object: ['Mid-Atlantic Regional Spaceport', 'Delta II']

Triple: [['__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport', '__subject__ Antares (rocket) __predicate__ comparable __object__ Delta II']]
Text: The rocket Antares was launched from the Mid-Atlantic Regional Spaceport and is similar to the Delta II rocket.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['launchSite', 'comparable']
Object: ['Mid-Atlantic Regional Spaceport', 'Delta II']

Triple: [['__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport', '__subject__ Antares (rocket) __predicate__ comparable __object__ Delta II']]
Text: The rocket Antares, which is comparable to Delta II, was launched from the Mid-Atlantic Regional Spaceport.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['launchSite', 'comparable']
Object: ['Mid-Atlantic Regional Spaceport', 'Delta II']

Triple: [['__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport', '__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2013-09-18']]
Text: The Antares rocket launch site was the Mid Atlantic Regional Spaceport and its final flight took place on 18 September 2013.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['launchSite', 'finalFlight']
Object: ['Mid-Atlantic Regional Spaceport', '2013-09-18']

Triple: [['__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport', '__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2013-09-18']]
Text: The Antares rocket was launched from the Mid-Atlantic Regional Spaceport and made its final voyage on September 18, 2013.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['launchSite', 'finalFlight']
Object: ['Mid-Atlantic Regional Spaceport', '2013-09-18']

Triple: [['__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport', '__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2013-09-18']]
Text: The rocker Antares was launched from the Mid-Atlantic Regional Spaceport and made its final voyage on September 18, 2013.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['launchSite', 'finalFlight']
Object: ['Mid-Atlantic Regional Spaceport', '2013-09-18']

Triple: [['__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0', '__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2013-09-18']]
Text: The Antares rocket was last launched at the Mid-Atlantic Regional Spaceport Launch Pad 0 on September 18th 2013.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['launchSite', 'finalFlight']
Object: ['Mid-Atlantic Regional Spaceport Launch Pad 0', '2013-09-18']

Triple: [['__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0', '__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2013-09-18']]
Text: The launch site of the Antares rocket was the Mid-Atlantic Regional Spaceport Launch Pad 0 and it made its final voyage on September 18, 2013.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['launchSite', 'finalFlight']
Object: ['Mid-Atlantic Regional Spaceport Launch Pad 0', '2013-09-18']

Triple: [['__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0', '__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2013-09-18']]
Text: The launch site of the Antares rocket was the Mid-Atlantic Regional Spaceport Launch Pad 0 and its final flight was on the 18th of September 2013.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['launchSite', 'finalFlight']
Object: ['Mid-Atlantic Regional Spaceport Launch Pad 0', '2013-09-18']

Triple: [['__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0', '__subject__ Mid-Atlantic Regional Spaceport Launch Pad 0 __predicate__ associatedRocket __object__ Minotaur IV']]
Text: The Mid-Atlantic Regional Spaceport Launch Pad 0 was the launch site of the Antares Rocket and is also associated with the Minotaur IV rocket.
Subject: ['Antares (rocket)', 'Mid-Atlantic Regional Spaceport Launch Pad 0']
Predicate: ['launchSite', 'associatedRocket']
Object: ['Mid-Atlantic Regional Spaceport Launch Pad 0', 'Minotaur IV']

Triple: [['__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0', '__subject__ Mid-Atlantic Regional Spaceport Launch Pad 0 __predicate__ associatedRocket __object__ Minotaur IV']]
Text: Both the Minotaur IV rocket and the Antares rocket were launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.
Subject: ['Antares (rocket)', 'Mid-Atlantic Regional Spaceport Launch Pad 0']
Predicate: ['launchSite', 'associatedRocket']
Object: ['Mid-Atlantic Regional Spaceport Launch Pad 0', 'Minotaur IV']

Triple: [['__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0', '__subject__ Mid-Atlantic Regional Spaceport Launch Pad 0 __predicate__ associatedRocket __object__ Minotaur IV']]
Text: The Minotaur IV and Antares rockets were both launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.
Subject: ['Antares (rocket)', 'Mid-Atlantic Regional Spaceport Launch Pad 0']
Predicate: ['launchSite', 'associatedRocket']
Object: ['Mid-Atlantic Regional Spaceport Launch Pad 0', 'Minotaur IV']

Triple: [['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2013-04-21', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport']]
Text: The Antares rocket had its maiden flight on April 21st 2013 and was launched from the Mid-Atlantic Regional Spaceport.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['maidenFlight', 'launchSite']
Object: ['2013-04-21', 'Mid-Atlantic Regional Spaceport']

Triple: [['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2013-04-21', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport']]
Text: The maiden flight of the Antares rocket was on April 21st, 2013 from the Mid Atlantic Regional Spaceport.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['maidenFlight', 'launchSite']
Object: ['2013-04-21', 'Mid-Atlantic Regional Spaceport']

Triple: [['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2013-04-21', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0']]
Text: The Antares rocket was first launched on April 21, 2013 at the Mid-Atlantic Regional Spaceport Launch Pad 0.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['maidenFlight', 'launchSite']
Object: ['2013-04-21', 'Mid-Atlantic Regional Spaceport Launch Pad 0']

Triple: [['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2013-04-21', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0']]
Text: The Antares rocket had its maiden flight on April 21st 2013 and was launched at the Mid-Atlantic Regional Spaceport Launch Pad 0.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['maidenFlight', 'launchSite']
Object: ['2013-04-21', 'Mid-Atlantic Regional Spaceport Launch Pad 0']

Triple: [['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2013-04-21', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0']]
Text: The Antares maiden flight was on 21 April 2013 and it was launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['maidenFlight', 'launchSite']
Object: ['2013-04-21', 'Mid-Atlantic Regional Spaceport Launch Pad 0']

Triple: [['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2014-01-09', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0']]
Text: The Antares rocket first voyage was on January 9, 2014 from the launch site, the Mid-Atlantic Regional Spaceport Launch Pad 0.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['maidenFlight', 'launchSite']
Object: ['2014-01-09', 'Mid-Atlantic Regional Spaceport Launch Pad 0']

Triple: [['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2014-01-09', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0']]
Text: Antares was launched at Mid-Atlantic Regional Spaceport Launch Pad 0 on January 9, 2014.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['maidenFlight', 'launchSite']
Object: ['2014-01-09', 'Mid-Atlantic Regional Spaceport Launch Pad 0']

Triple: [['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2014-01-09', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0']]
Text: The Antares rocket was launched at Mid-Atlantic Regional Spaceport Launch Pad 0 on January 9th 2014.
Subject: ['Antares (rocket)', 'Antares (rocket)']
Predicate: ['maidenFlight', 'launchSite']
Object: ['2014-01-09', 'Mid-Atlantic Regional Spaceport Launch Pad 0']

Triple: [['__subject__ Antares (rocket) __predicate__ manufacturer __object__ Yuzhnoye Design Office', '__subject__ Yuzhnoye Design Office __predicate__ location __object__ Dnipropetrovsk']]
Text: The Antares rocket is manufactured at the Yuzhnoye Design Office, the office of which, is in Dnipropetrovsk.
Subject: ['Antares (rocket)', 'Yuzhnoye Design Office']
Predicate: ['manufacturer', 'location']
Object: ['Yuzhnoye Design Office', 'Dnipropetrovsk']

Triple: [['__subject__ Antares (rocket) __predicate__ manufacturer __object__ Yuzhnoye Design Office', '__subject__ Yuzhnoye Design Office __predicate__ location __object__ Dnipropetrovsk']]
Text: The Antares rocket is made by the Yuzhnoye Design Office in Dnipropetrovsk.
Subject: ['Antares (rocket)', 'Yuzhnoye Design Office']
Predicate: ['manufacturer', 'location']
Object: ['Yuzhnoye Design Office', 'Dnipropetrovsk']

Triple: [['__subject__ Antares (rocket) __predicate__ manufacturer __object__ Yuzhnoye Design Office', '__subject__ Yuzhnoye Design Office __predicate__ location __object__ Dnipropetrovsk']]
Text: The Antares rocket was made by the Yuzhnoye Design Office, the location of which, is Dnipropetrovsk.
Subject: ['Antares (rocket)', 'Yuzhnoye Design Office']
Predicate: ['manufacturer', 'location']
Object: ['Yuzhnoye Design Office', 'Dnipropetrovsk']

Triple: [['__subject__ Antares (rocket) __predicate__ manufacturer __object__ Yuzhnoye Design Office', '__subject__ Yuzhnoye Design Office __predicate__ location __object__ Ukraine']]
Text: The Antares rocket is manufactured at the Yuzhnoye Design Office located in the Ukraine.
Subject: ['Antares (rocket)', 'Yuzhnoye Design Office']
Predicate: ['manufacturer', 'location']
Object: ['Yuzhnoye Design Office', 'Ukraine']

Triple: [['__subject__ Antares (rocket) __predicate__ manufacturer __object__ Yuzhnoye Design Office', '__subject__ Yuzhnoye Design Office __predicate__ location __object__ Ukraine']]
Text: The Antares rocket is manufactured by the Yuzhnoye Design Office which is located in the Ukraine.
Subject: ['Antares (rocket)', 'Yuzhnoye Design Office']
Predicate: ['manufacturer', 'location']
Object: ['Yuzhnoye Design Office', 'Ukraine']

Triple: [['__subject__ Antares (rocket) __predicate__ manufacturer __object__ Yuzhnoye Design Office', '__subject__ Yuzhnoye Design Office __predicate__ location __object__ Ukraine']]
Text: The Antares rocket was made by the Yuzhnoye Design Office located in the Ukraine.
Subject: ['Antares (rocket)', 'Yuzhnoye Design Office']
Predicate: ['manufacturer', 'location']
Object: ['Yuzhnoye Design Office', 'Ukraine']

Triple: [['__subject__ Argentina __predicate__ capital __object__ Buenos Aires', '__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ country __object__ Argentina']]
Text: ARA Veinticinco de Mayo (V-2) derives from Argentina, whose capital is Buenos Aires.
Subject: ['Argentina', 'ARA Veinticinco de Mayo (V-2)']
Predicate: ['capital', 'country']
Object: ['Buenos Aires', 'Argentina']

Triple: [['__subject__ Argentina __predicate__ capital __object__ Buenos Aires', '__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ country __object__ Argentina']]
Text: Buenos Aires is the capital of Argentina where the ARA Veinticinco De Mayo (V-2) comes from.
Subject: ['Argentina', 'ARA Veinticinco de Mayo (V-2)']
Predicate: ['capital', 'country']
Object: ['Buenos Aires', 'Argentina']

Triple: [['__subject__ Argentina __predicate__ capital __object__ Buenos Aires', '__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ country __object__ Argentina']]
Text: ARA Veinticinco de Mayo (V-2) derives from Argentina, the capital of which, is Buenos Aires.
Subject: ['Argentina', 'ARA Veinticinco de Mayo (V-2)']
Predicate: ['capital', 'country']
Object: ['Buenos Aires', 'Argentina']

Triple: [['__subject__ Argentina __predicate__ leader __object__ Mauricio Macri', '__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ country __object__ Argentina']]
Text: Argentina is led by Mauricio Macri and is where the ARA Veinticinco de Mayo V-2 comes from.
Subject: ['Argentina', 'ARA Veinticinco de Mayo (V-2)']
Predicate: ['leader', 'country']
Object: ['Mauricio Macri', 'Argentina']

Triple: [['__subject__ Argentina __predicate__ leader __object__ Mauricio Macri', '__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ country __object__ Argentina']]
Text: The ARA Veinticinco De mayo (V-2) comes from Argentina, the leader of which, is Mauricio Macri.
Subject: ['Argentina', 'ARA Veinticinco de Mayo (V-2)']
Predicate: ['leader', 'country']
Object: ['Mauricio Macri', 'Argentina']

Triple: [['__subject__ Argentina __predicate__ leader __object__ Mauricio Macri', '__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ country __object__ Argentina']]
Text: The ARA Veinticinco de Mayo (V-2) is from Argentina, whose leader is Mauricio Macri.
Subject: ['Argentina', 'ARA Veinticinco de Mayo (V-2)']
Predicate: ['leader', 'country']
Object: ['Mauricio Macri', 'Argentina']

Triple: [['__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3', '__subject__ Ariane 5 __predicate__ manufacturer __object__ ESA and Arianespace']]
Text: The Ariane 5 was made by ESA and Arianespace and was launched at ELA-3.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['launchSite', 'manufacturer']
Object: ['ELA-3', 'ESA and Arianespace']

Triple: [['__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3', '__subject__ Ariane 5 __predicate__ manufacturer __object__ ESA and Arianespace']]
Text: The Ariane 5 was manufactured at the ESA and Arianespace and was launched at the ELA-3.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['launchSite', 'manufacturer']
Object: ['ELA-3', 'ESA and Arianespace']

Triple: [['__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3', '__subject__ Ariane 5 __predicate__ manufacturer __object__ ESA and Arianespace']]
Text: The Ariane 5 was made by ESA and Arianespace and launched from the ELA-3 launchpad.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['launchSite', 'manufacturer']
Object: ['ELA-3', 'ESA and Arianespace']

Triple: [['__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3', '__subject__ Ariane 5 __predicate__ manufacturer __object__ European Space Agency']]
Text: The Ariane 5 was manufactured by the ESA and launched at ELA-3.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['launchSite', 'manufacturer']
Object: ['ELA-3', 'European Space Agency']

Triple: [['__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3', '__subject__ Ariane 5 __predicate__ manufacturer __object__ European Space Agency']]
Text: The European Space Agency manufactured the Ariane 5 which was launched at ELA-3.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['launchSite', 'manufacturer']
Object: ['ELA-3', 'European Space Agency']

Triple: [['__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3', '__subject__ Ariane 5 __predicate__ manufacturer __object__ European Space Agency']]
Text: The European Space Agency manufactured the Ariane 5, which was launched at the ELA-3.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['launchSite', 'manufacturer']
Object: ['ELA-3', 'European Space Agency']

Triple: [['__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3', '__subject__ ELA-3 __predicate__ operator __object__ Arianespace']]
Text: The Ariane 5 was launched at the ELA-3, operated by Arianespace.
Subject: ['Ariane 5', 'ELA-3']
Predicate: ['launchSite', 'operator']
Object: ['ELA-3', 'Arianespace']

Triple: [['__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3', '__subject__ ELA-3 __predicate__ operator __object__ Arianespace']]
Text: The launch site of the Ariane 5 was ELA-3 launchpad which is operated by Arianespace.
Subject: ['Ariane 5', 'ELA-3']
Predicate: ['launchSite', 'operator']
Object: ['ELA-3', 'Arianespace']

Triple: [['__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3', '__subject__ ELA-3 __predicate__ operator __object__ Arianespace']]
Text: The Ariane 5 was launched from ELA-3, operated by Arianespace.
Subject: ['Ariane 5', 'ELA-3']
Predicate: ['launchSite', 'operator']
Object: ['ELA-3', 'Arianespace']

Triple: [['__subject__ Ariane 5 __predicate__ manufacturer __object__ Airbus Defence and Space', '__subject__ Ariane 5 __predicate__ launchSite __object__ Guiana Space Centre']]
Text: The Ariane 5 which was manufactured by Airbus Defence and Space was launched from the Guiana Space Centre.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['manufacturer', 'launchSite']
Object: ['Airbus Defence and Space', 'Guiana Space Centre']

Triple: [['__subject__ Ariane 5 __predicate__ manufacturer __object__ Airbus Defence and Space', '__subject__ Ariane 5 __predicate__ launchSite __object__ Guiana Space Centre']]
Text: The Ariane 5 was manufactured by the Airbus Defence and Space and launched from the Guiana Space Centre.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['manufacturer', 'launchSite']
Object: ['Airbus Defence and Space', 'Guiana Space Centre']

Triple: [['__subject__ Ariane 5 __predicate__ manufacturer __object__ Airbus Defence and Space', '__subject__ Ariane 5 __predicate__ launchSite __object__ Guiana Space Centre']]
Text: The Ariane 5 was manufactured by The Airbus Defence and Space and launched in Guiana Space Centre.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['manufacturer', 'launchSite']
Object: ['Airbus Defence and Space', 'Guiana Space Centre']

Triple: [['__subject__ Ariane 5 __predicate__ manufacturer __object__ Arianespace', '__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3']]
Text: The Ariane 5 is made by Arianespace and was launched at the ELA-3.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['manufacturer', 'launchSite']
Object: ['Arianespace', 'ELA-3']

Triple: [['__subject__ Ariane 5 __predicate__ manufacturer __object__ Arianespace', '__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3']]
Text: The Ariane 5 was manufactured by Arianespace and was launched at ELA-3.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['manufacturer', 'launchSite']
Object: ['Arianespace', 'ELA-3']

Triple: [['__subject__ Ariane 5 __predicate__ manufacturer __object__ Arianespace', '__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3']]
Text: The Ariane 5, was manufactured by Arianespace and launched at the ELA-3.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['manufacturer', 'launchSite']
Object: ['Arianespace', 'ELA-3']

Triple: [['__subject__ Ariane 5 __predicate__ manufacturer __object__ Arianespace', '__subject__ Ariane 5 __predicate__ launchSite __object__ Guiana Space Centre']]
Text: Arianespace is the manufacturer of Ariane 5 and is launched from the Guiana Space Centre.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['manufacturer', 'launchSite']
Object: ['Arianespace', 'Guiana Space Centre']

Triple: [['__subject__ Ariane 5 __predicate__ manufacturer __object__ Arianespace', '__subject__ Ariane 5 __predicate__ launchSite __object__ Guiana Space Centre']]
Text: Arianespace is the manufacturer of Ariane 5 which was launched from the Guiana Space Centre.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['manufacturer', 'launchSite']
Object: ['Arianespace', 'Guiana Space Centre']

Triple: [['__subject__ Ariane 5 __predicate__ manufacturer __object__ European Space Agency', '__subject__ Ariane 5 __predicate__ launchSite __object__ Guiana Space Centre']]
Text: Ariane 5 is manufactured by the European Space Agency and launched from the Guiana Space Centre.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['manufacturer', 'launchSite']
Object: ['European Space Agency', 'Guiana Space Centre']

Triple: [['__subject__ Ariane 5 __predicate__ manufacturer __object__ European Space Agency', '__subject__ Ariane 5 __predicate__ launchSite __object__ Guiana Space Centre']]
Text: Ariane 5 was built by the European Space Agency and launched from Guiana Space Centre.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['manufacturer', 'launchSite']
Object: ['European Space Agency', 'Guiana Space Centre']

Triple: [['__subject__ Ariane 5 __predicate__ manufacturer __object__ European Space Agency', '__subject__ Ariane 5 __predicate__ launchSite __object__ Guiana Space Centre']]
Text: The European Space Agency manufactured the Ariane 5 which launched from the Guiana Space Centre.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['manufacturer', 'launchSite']
Object: ['European Space Agency', 'Guiana Space Centre']

Triple: [['__subject__ Ariane 5 __predicate__ partialFailures __object__ 2', '__subject__ Ariane 5 __predicate__ diameter __object__ 5.4 (metres)']]
Text: The Ariane 5 is 5.4m wide and has had 2 partial failures.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['partialFailures', 'diameter']
Object: ['2', '5.4 (metres)']

Triple: [['__subject__ Ariane 5 __predicate__ partialFailures __object__ 2', '__subject__ Ariane 5 __predicate__ diameter __object__ 5.4 (metres)']]
Text: The Ariane 5 has a diameter of 5.4 metres and has had 2 partial failures.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['partialFailures', 'diameter']
Object: ['2', '5.4 (metres)']

Triple: [['__subject__ Ariane 5 __predicate__ partialFailures __object__ 2', '__subject__ Ariane 5 __predicate__ diameter __object__ 5.4 (metres)']]
Text: The 5.4m wide Ariane 5 has had 2 partial failures.
Subject: ['Ariane 5', 'Ariane 5']
Predicate: ['partialFailures', 'diameter']
Object: ['2', '5.4 (metres)']

Triple: [['__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell, Buckinghamshire, England, United Kingdom', '__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin RHAM/1']]
Text: The Aston Martin V8, which is a related means of transport to the Aston Martin RHAM/1, was assembled in Newport Pagnell, Buckinghamshire, England, United Kingdom.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['assembly', 'relatedMeanOfTransportation']
Object: ['Newport Pagnell, Buckinghamshire, England, United Kingdom', 'Aston Martin RHAM/1']

Triple: [['__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell, Buckinghamshire, England, United Kingdom', '__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin RHAM/1']]
Text: The Aston Martin V8 is assembled in Newport Pagnell, Buckinghamshire, England, United Kingdom and is a related means of transport to the Aston Martin RHAM/1.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['assembly', 'relatedMeanOfTransportation']
Object: ['Newport Pagnell, Buckinghamshire, England, United Kingdom', 'Aston Martin RHAM/1']

Triple: [['__subject__ Aston Martin V8 __predicate__ bodyStyle __object__ Convertible', '__subject__ Aston Martin V8 __predicate__ engine __object__ 5.3 (litres)']]
Text: The Aston Martin V8 is a convertible with a 5.3l engine.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['bodyStyle', 'engine']
Object: ['Convertible', '5.3 (litres)']

Triple: [['__subject__ Aston Martin V8 __predicate__ bodyStyle __object__ Convertible', '__subject__ Aston Martin V8 __predicate__ engine __object__ 5.3 (litres)']]
Text: The Aston Martin V8 is a convertible with a 5.3 litre engine.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['bodyStyle', 'engine']
Object: ['Convertible', '5.3 (litres)']

Triple: [['__subject__ Aston Martin V8 __predicate__ bodyStyle __object__ Convertible', '__subject__ Aston Martin V8 __predicate__ engine __object__ 5.3 (litres)']]
Text: 5.3 litres is the engine volume of the Aston MArtin V8 which is a convertible.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['bodyStyle', 'engine']
Object: ['Convertible', '5.3 (litres)']

Triple: [['__subject__ Aston Martin V8 __predicate__ bodyStyle __object__ Coupé', '__subject__ Aston Martin V8 __predicate__ engine __object__ 5.3 (litres)']]
Text: The Aston Martin V8 is a Coupe with a 5.3 litre engine.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['bodyStyle', 'engine']
Object: ['Coupé', '5.3 (litres)']

Triple: [['__subject__ Aston Martin V8 __predicate__ bodyStyle __object__ Coupé', '__subject__ Aston Martin V8 __predicate__ engine __object__ 5.3 (litres)']]
Text: The Aston Martin V8 has a 5.3 litre engine and its body style is the coupe.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['bodyStyle', 'engine']
Object: ['Coupé', '5.3 (litres)']

Triple: [['__subject__ Aston Martin V8 __predicate__ bodyStyle __object__ Coupé', '__subject__ Aston Martin V8 __predicate__ engine __object__ 5.3 (litres)']]
Text: The Aston Martin V8's body style is the Coupé and it has an engine volume of 5.3 litres.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['bodyStyle', 'engine']
Object: ['Coupé', '5.3 (litres)']

Triple: [['__subject__ Aston Martin V8 __predicate__ manufacturer __object__ Aston Martin', '__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin RHAM/1']]
Text: The Aston Martin V8 was manufactured by Aston Martin and is a related means of transport to the Aston Martin RHAM/1.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['manufacturer', 'relatedMeanOfTransportation']
Object: ['Aston Martin', 'Aston Martin RHAM/1']

Triple: [['__subject__ Aston Martin V8 __predicate__ manufacturer __object__ Aston Martin', '__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin RHAM/1']]
Text: The Aston Martin V8 was manufactured by Aston Martin and is related to the Aston Martin RHAM/1.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['manufacturer', 'relatedMeanOfTransportation']
Object: ['Aston Martin', 'Aston Martin RHAM/1']

Triple: [['__subject__ Aston Martin V8 __predicate__ manufacturer __object__ Aston Martin', '__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin RHAM/1']]
Text: Aston Martin makes the Aston Martin V8 which is connected to the Aston Martin RHAM/1.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['manufacturer', 'relatedMeanOfTransportation']
Object: ['Aston Martin', 'Aston Martin RHAM/1']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin DBS __predicate__ manufacturer __object__ Aston Martin']]
Text: The Aston Martin V8 and Aston Martin DBS (manufactured by Aston Martin) are a related means of transport.
Subject: ['Aston Martin V8', 'Aston Martin DBS']
Predicate: ['relatedMeanOfTransportation', 'manufacturer']
Object: ['Aston Martin DBS', 'Aston Martin']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin DBS __predicate__ manufacturer __object__ Aston Martin']]
Text: The Aston Martin V8 and DBS are similar and made by Aston Martin.
Subject: ['Aston Martin V8', 'Aston Martin DBS']
Predicate: ['relatedMeanOfTransportation', 'manufacturer']
Object: ['Aston Martin DBS', 'Aston Martin']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin DBS __predicate__ manufacturer __object__ Aston Martin']]
Text: The Aston Martin V8 and the Aston Martin DBS, manufactured by Aston Martin, are related means of transport.
Subject: ['Aston Martin V8', 'Aston Martin DBS']
Predicate: ['relatedMeanOfTransportation', 'manufacturer']
Object: ['Aston Martin DBS', 'Aston Martin']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin DBS __predicate__ successor __object__ Aston Martin Vantage']]
Text: The Aston Martin V8 and Aston Martin DBS (later succeeded by the Aston Martin Vantage) are a related means of transport.
Subject: ['Aston Martin V8', 'Aston Martin DBS']
Predicate: ['relatedMeanOfTransportation', 'successor']
Object: ['Aston Martin DBS', 'Aston Martin Vantage']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin DBS __predicate__ successor __object__ Aston Martin Vantage']]
Text: Related means of transportation are the Aston Martin V8 and Aston Martin DBS, the latter is succeeded by the, Aston Martin Vantage.
Subject: ['Aston Martin V8', 'Aston Martin DBS']
Predicate: ['relatedMeanOfTransportation', 'successor']
Object: ['Aston Martin DBS', 'Aston Martin Vantage']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin DBS __predicate__ successor __object__ Aston Martin Vantage']]
Text: The Aston Martin V8 and the Aston Martin DBS are connected to each other, the Aston Martin Vantage succeeded by the Aston Martin DBS.
Subject: ['Aston Martin V8', 'Aston Martin DBS']
Predicate: ['relatedMeanOfTransportation', 'successor']
Object: ['Aston Martin DBS', 'Aston Martin Vantage']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell, Buckinghamshire, England, United Kingdom']]
Text: The Aston Martin V8 is assembled in Newport Pagnell, Buckinghamshire, England, United Kingdom and is a related means of transport to the Aston Martin DBS.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'assembly']
Object: ['Aston Martin DBS', 'Newport Pagnell, Buckinghamshire, England, United Kingdom']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell, Buckinghamshire, England, United Kingdom']]
Text: The Aston Martin V8, which was assembled in Newport Pagnell, Buckinghamshire, England, United Kingdom and is a related means of transport to the Aston Martin DBS.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'assembly']
Object: ['Aston Martin DBS', 'Newport Pagnell, Buckinghamshire, England, United Kingdom']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell, Buckinghamshire, England, United Kingdom']]
Text: The Aston Martin V8 and the Aston Martin DBS are similar vehicles. The former was built in Newport Pagnell, in Buckinghamshire, England, UK.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'assembly']
Object: ['Aston Martin DBS', 'Newport Pagnell, Buckinghamshire, England, United Kingdom']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell']]
Text: The Aston Martin V8 is a similar vehicle to the DBS and is assembled in Newport Pagnell.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'assembly']
Object: ['Aston Martin DBS', 'Newport Pagnell']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell']]
Text: The Aston Martin DBS is a related means of transport to the Aston Martin V8, the assembly of which, is located in Newport Pagnell.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'assembly']
Object: ['Aston Martin DBS', 'Newport Pagnell']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell']]
Text: The Aston Martin V8 was assembled at Newport Pagnell and is a related means of transport to the Aston Martin DBS.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'assembly']
Object: ['Aston Martin DBS', 'Newport Pagnell']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin V8 __predicate__ assembly __object__ United Kingdom']]
Text: The Aston Martin V8 and Aston Martin DBS are connected. Aston Martin V8 was built in the United Kingdom.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'assembly']
Object: ['Aston Martin DBS', 'United Kingdom']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin V8 __predicate__ assembly __object__ United Kingdom']]
Text: The Aston Martin DBS and the UK assembled Aston Martin V8 are related means of transport.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'assembly']
Object: ['Aston Martin DBS', 'United Kingdom']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin V8 __predicate__ assembly __object__ United Kingdom']]
Text: The UK built Aston Martin V8 and DBS are similar vehicles.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'assembly']
Object: ['Aston Martin DBS', 'United Kingdom']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin V8 __predicate__ manufacturer __object__ Aston Martin']]
Text: The Aston Martin V8 and DBS are similar vehicles.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'manufacturer']
Object: ['Aston Martin DBS', 'Aston Martin']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin V8 __predicate__ manufacturer __object__ Aston Martin']]
Text: The Aston Martin V8, made by Aston Martin, is related to the Aston Martin DBS vehicle.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'manufacturer']
Object: ['Aston Martin DBS', 'Aston Martin']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin V8 __predicate__ manufacturer __object__ Aston Martin']]
Text: The Aston Martin V8, manufactured by Aston Martin and the Aston Martin DBS are related means of transport.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'manufacturer']
Object: ['Aston Martin DBS', 'Aston Martin']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin RHAM/1', '__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell']]
Text: The Aston Martin RHAM/1 is related to the Aston Martin V8, the assembly of which, is located in Newport Pagnell.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'assembly']
Object: ['Aston Martin RHAM/1', 'Newport Pagnell']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin RHAM/1', '__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell']]
Text: The Aston Martin V8, which is assembled at Newport Pagnell, is related to the Aston Martin RHAM/1.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'assembly']
Object: ['Aston Martin RHAM/1', 'Newport Pagnell']

Triple: [['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin RHAM/1', '__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell']]
Text: The Aston Martin V8, which was assembled at Newport Pagnell, is related to the Aston Martin RHAM/1.
Subject: ['Aston Martin V8', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'assembly']
Object: ['Aston Martin RHAM/1', 'Newport Pagnell']

Triple: [['__subject__ Aston Martin Virage __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin V8 __predicate__ successor __object__ Aston Martin Virage']]
Text: The Aston Martin Virage which succeeded the V8, and the Aston Martin DBS are similar vehicles.
Subject: ['Aston Martin Virage', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'successor']
Object: ['Aston Martin DBS', 'Aston Martin Virage']

Triple: [['__subject__ Aston Martin Virage __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin V8 __predicate__ successor __object__ Aston Martin Virage']]
Text: The Aston Martin V8 was succeeded by the Aston Martin Virage which is a related vehicle to the Aston Martin DBS.
Subject: ['Aston Martin Virage', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'successor']
Object: ['Aston Martin DBS', 'Aston Martin Virage']

Triple: [['__subject__ Aston Martin Virage __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS', '__subject__ Aston Martin V8 __predicate__ successor __object__ Aston Martin Virage']]
Text: The Aston Martin V8 was succeeded by the Aston Martin Virage which is related to the Aston Martin DBS.
Subject: ['Aston Martin Virage', 'Aston Martin V8']
Predicate: ['relatedMeanOfTransportation', 'successor']
Object: ['Aston Martin DBS', 'Aston Martin Virage']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ Atlas II __predicate__ launchSite __object__ Spaceport Florida Launch Complex 36']]
Text: The Atlas II, originates from the United States and its launch site was the Spaceport Florida Launch Complex 36.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['countryOrigin', 'launchSite']
Object: ['United States', 'Spaceport Florida Launch Complex 36']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ Atlas II __predicate__ launchSite __object__ Spaceport Florida Launch Complex 36']]
Text: The Atlas II, from the U.S., launch pad is at Florida Spaceport Launch Complex 36.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['countryOrigin', 'launchSite']
Object: ['United States', 'Spaceport Florida Launch Complex 36']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ Atlas II __predicate__ launchSite __object__ Spaceport Florida Launch Complex 36']]
Text: The Atlas II originated from the U.S and was launched from Spaceport Florida Launch Complex 36.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['countryOrigin', 'launchSite']
Object: ['United States', 'Spaceport Florida Launch Complex 36']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg AFB Space Launch Complex 3']]
Text: Atlas II, from the United States, has its launchpad at Vandenberg AFB Space Launch Complex 3.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['countryOrigin', 'launchSite']
Object: ['United States', 'Vandenberg AFB Space Launch Complex 3']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg AFB Space Launch Complex 3']]
Text: The Atlas II originated from the U.S and is launched from the Vandenberg AFB Space Launch Complex 3.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['countryOrigin', 'launchSite']
Object: ['United States', 'Vandenberg AFB Space Launch Complex 3']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg AFB Space Launch Complex 3']]
Text: The Atlas II originated from the US and was launched at the Vandenberg AFB Space Launch Complex 3.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['countryOrigin', 'launchSite']
Object: ['United States', 'Vandenberg AFB Space Launch Complex 3']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg Air Force Base']]
Text: Atlas II originates from the United States and was launched from Vandenberg Air Force Base.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['countryOrigin', 'launchSite']
Object: ['United States', 'Vandenberg Air Force Base']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg Air Force Base']]
Text: The Atlas II originates from the United States and launched from Vandenberg Air Force Base.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['countryOrigin', 'launchSite']
Object: ['United States', 'Vandenberg Air Force Base']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg Air Force Base']]
Text: Atlas II from the United States, was launched from Vandenberg Air Force Base.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['countryOrigin', 'launchSite']
Object: ['United States', 'Vandenberg Air Force Base']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Atlas II comes from the United States, where African Americans are an ethnic group.
Subject: ['Atlas II', 'United States']
Predicate: ['countryOrigin', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: The Atlas II originated from the United States, where African Americans, are one of the ethnic groups.
Subject: ['Atlas II', 'United States']
Predicate: ['countryOrigin', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: The United States, where one of the ethnic groups are the African Americans, is the origin of the Atlas II.
Subject: ['Atlas II', 'United States']
Predicate: ['countryOrigin', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Atlas II originates from the United States where the Native Americans are an ethnic group of the country.
Subject: ['Atlas II', 'United States']
Predicate: ['countryOrigin', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: The Atlas II comes from the U.S. which have an ethnic group called Native Americans.
Subject: ['Atlas II', 'United States']
Predicate: ['countryOrigin', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: The Atlas II is from the US which has an ethnic group called Native Americans.
Subject: ['Atlas II', 'United States']
Predicate: ['countryOrigin', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ leaderTitle __object__ President of the United States']]
Text: Atlas II originates from the United States where the leader has the title President of the United States.
Subject: ['Atlas II', 'United States']
Predicate: ['countryOrigin', 'leaderTitle']
Object: ['United States', 'President of the United States']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ leaderTitle __object__ President of the United States']]
Text: The Atlas II is from the United States, where the leader is the President of the United States.
Subject: ['Atlas II', 'United States']
Predicate: ['countryOrigin', 'leaderTitle']
Object: ['United States', 'President of the United States']

Triple: [['__subject__ Atlas II __predicate__ countryOrigin __object__ United States', '__subject__ United States __predicate__ leaderTitle __object__ President of the United States']]
Text: The Atlas II originated from the United States, where the leader is the President of the United States.
Subject: ['Atlas II', 'United States']
Predicate: ['countryOrigin', 'leaderTitle']
Object: ['United States', 'President of the United States']

Triple: [['__subject__ Atlas II __predicate__ launchSite __object__ Cape Canaveral Air Force Station', '__subject__ Atlas II __predicate__ countryOrigin __object__ United States']]
Text: The Atlas II, from the U.S., was launched from Cape Canaveral Air Force Station.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['launchSite', 'countryOrigin']
Object: ['Cape Canaveral Air Force Station', 'United States']

Triple: [['__subject__ Atlas II __predicate__ launchSite __object__ Cape Canaveral Air Force Station', '__subject__ Atlas II __predicate__ countryOrigin __object__ United States']]
Text: The Atlas II, originated from the U.S. and was launched from Cape Canaveral Air Force Station.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['launchSite', 'countryOrigin']
Object: ['Cape Canaveral Air Force Station', 'United States']

Triple: [['__subject__ Atlas II __predicate__ launchSite __object__ Cape Canaveral Air Force Station', '__subject__ Atlas II __predicate__ countryOrigin __object__ United States']]
Text: Atlas II, originates from the United States and was launched from the Cape Canaveral Air Force Station.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['launchSite', 'countryOrigin']
Object: ['Cape Canaveral Air Force Station', 'United States']

Triple: [['__subject__ Atlas II __predicate__ launchSite __object__ Spaceport Florida Launch Complex 36', '__subject__ Spaceport Florida Launch Complex 36 __predicate__ operator __object__ United States Air Force']]
Text: The Atlas II was launched at the Spaceport Florida Launch Complex 36 operated by the USAF.
Subject: ['Atlas II', 'Spaceport Florida Launch Complex 36']
Predicate: ['launchSite', 'operator']
Object: ['Spaceport Florida Launch Complex 36', 'United States Air Force']

Triple: [['__subject__ Atlas II __predicate__ launchSite __object__ Spaceport Florida Launch Complex 36', '__subject__ Spaceport Florida Launch Complex 36 __predicate__ operator __object__ United States Air Force']]
Text: The Atlas II launch site was the Spaceport Florida Launch Complex 36 which is operated by the U.S. Air Force.
Subject: ['Atlas II', 'Spaceport Florida Launch Complex 36']
Predicate: ['launchSite', 'operator']
Object: ['Spaceport Florida Launch Complex 36', 'United States Air Force']

Triple: [['__subject__ Atlas II __predicate__ launchSite __object__ Spaceport Florida Launch Complex 36', '__subject__ Spaceport Florida Launch Complex 36 __predicate__ operator __object__ United States Air Force']]
Text: The Atlas II was launched from the Spaceport Florida Launch Complex 36, which is operated by the United States Air Force.
Subject: ['Atlas II', 'Spaceport Florida Launch Complex 36']
Predicate: ['launchSite', 'operator']
Object: ['Spaceport Florida Launch Complex 36', 'United States Air Force']

Triple: [['__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg AFB Space Launch Complex 3', '__subject__ Vandenberg AFB Space Launch Complex 3 __predicate__ operator __object__ United States Air Force']]
Text: The Atlas II is launched from the Vandenberg AFB Space Launch Complex 3, which is operated by the US Air Force.
Subject: ['Atlas II', 'Vandenberg AFB Space Launch Complex 3']
Predicate: ['launchSite', 'operator']
Object: ['Vandenberg AFB Space Launch Complex 3', 'United States Air Force']

Triple: [['__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg AFB Space Launch Complex 3', '__subject__ Vandenberg AFB Space Launch Complex 3 __predicate__ operator __object__ United States Air Force']]
Text: The Atlas II rocket’s launch site is Vandenberg AFB Space Launch Complex 3 which is operated by the United States Air Force.
Subject: ['Atlas II', 'Vandenberg AFB Space Launch Complex 3']
Predicate: ['launchSite', 'operator']
Object: ['Vandenberg AFB Space Launch Complex 3', 'United States Air Force']

Triple: [['__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg AFB Space Launch Complex 3', '__subject__ Vandenberg AFB Space Launch Complex 3 __predicate__ operator __object__ United States Air Force']]
Text: The Atlas II was launched at the Vandenberg AFB Space Launch Complex 3 run by the US Air Force.
Subject: ['Atlas II', 'Vandenberg AFB Space Launch Complex 3']
Predicate: ['launchSite', 'operator']
Object: ['Vandenberg AFB Space Launch Complex 3', 'United States Air Force']

Triple: [['__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg Air Force Base', '__subject__ Atlas II __predicate__ manufacturer __object__ Lockheed Martin']]
Text: Manufactured by Lockheed Martin, the Atlas II was launched at the Vandenberg Air Force Base.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['launchSite', 'manufacturer']
Object: ['Vandenberg Air Force Base', 'Lockheed Martin']

Triple: [['__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg Air Force Base', '__subject__ Atlas II __predicate__ manufacturer __object__ Lockheed Martin']]
Text: The Atlas II, manufactured by Lockheed Martin, was launched from Vandenberg Air Force Base.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['launchSite', 'manufacturer']
Object: ['Vandenberg Air Force Base', 'Lockheed Martin']

Triple: [['__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg Air Force Base', '__subject__ Atlas II __predicate__ manufacturer __object__ Lockheed Martin']]
Text: The Atlas II was manufactured by Lockheed Martin and launched from Vandenberg Air Force Base.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['launchSite', 'manufacturer']
Object: ['Vandenberg Air Force Base', 'Lockheed Martin']

Triple: [['__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg Air Force Base', '__subject__ Vandenberg Air Force Base __predicate__ location __object__ Lompoc, California']]
Text: Atlas II was launched from Vandenberg Air Force Base in Lompoc, California.
Subject: ['Atlas II', 'Vandenberg Air Force Base']
Predicate: ['launchSite', 'location']
Object: ['Vandenberg Air Force Base', 'Lompoc, California']

Triple: [['__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg Air Force Base', '__subject__ Vandenberg Air Force Base __predicate__ location __object__ Lompoc, California']]
Text: The Atlas II was launched from Vandenberg Air Force Base in Lompoc, California.
Subject: ['Atlas II', 'Vandenberg Air Force Base']
Predicate: ['launchSite', 'location']
Object: ['Vandenberg Air Force Base', 'Lompoc, California']

Triple: [['__subject__ Atlas II __predicate__ manufacturer __object__ Lockheed Martin', '__subject__ Atlas II __predicate__ launchSite __object__ Spaceport Florida Launch Complex 36']]
Text: Lockheed Martin is the manufacturer of the Atlas II, the launch site of which, was the Spaceport Florida Launch Complex 36.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['manufacturer', 'launchSite']
Object: ['Lockheed Martin', 'Spaceport Florida Launch Complex 36']

Triple: [['__subject__ Atlas II __predicate__ manufacturer __object__ Lockheed Martin', '__subject__ Atlas II __predicate__ launchSite __object__ Spaceport Florida Launch Complex 36']]
Text: The Atlas II was manufactured by Lockheed Martin and its launch site was the Spaceport Florida Launch Complex 36.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['manufacturer', 'launchSite']
Object: ['Lockheed Martin', 'Spaceport Florida Launch Complex 36']

Triple: [['__subject__ Atlas II __predicate__ manufacturer __object__ Lockheed Martin', '__subject__ Atlas II __predicate__ launchSite __object__ Spaceport Florida Launch Complex 36']]
Text: The Atlas II, whose launch pad is at Spaceport Florida Launch Complex 36, was made by Lockheed Martin.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['manufacturer', 'launchSite']
Object: ['Lockheed Martin', 'Spaceport Florida Launch Complex 36']

Triple: [['__subject__ Atlas II __predicate__ manufacturer __object__ Lockheed Martin', '__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg AFB Space Launch Complex 3']]
Text: The Atlas II was manufactured by Lockheed Martin and the rocket’s launch site is Vandenberg AFB Space Launch Complex 3.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['manufacturer', 'launchSite']
Object: ['Lockheed Martin', 'Vandenberg AFB Space Launch Complex 3']

Triple: [['__subject__ Atlas II __predicate__ manufacturer __object__ Lockheed Martin', '__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg AFB Space Launch Complex 3']]
Text: The Atlas II was launched from Vandenberg AFB Space Launch Complex 3 and it was made by Lockheed Martin.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['manufacturer', 'launchSite']
Object: ['Lockheed Martin', 'Vandenberg AFB Space Launch Complex 3']

Triple: [['__subject__ Atlas II __predicate__ manufacturer __object__ Lockheed Martin', '__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg AFB Space Launch Complex 3']]
Text: The Atlas II was manufactured by Lockheed Martin and launched at the Vandenberg AFB Space Launch Complex 3.
Subject: ['Atlas II', 'Atlas II']
Predicate: ['manufacturer', 'launchSite']
Object: ['Lockheed Martin', 'Vandenberg AFB Space Launch Complex 3']

Triple: [['__subject__ Atlas II __predicate__ manufacturer __object__ Lockheed Martin', '__subject__ Lockheed Martin __predicate__ location __object__ Bethesda, Maryland']]
Text: The Atlas II was manufactured by Lockheed Martin located in Bethesda, Maryland.
Subject: ['Atlas II', 'Lockheed Martin']
Predicate: ['manufacturer', 'location']
Object: ['Lockheed Martin', 'Bethesda, Maryland']

Triple: [['__subject__ Atlas II __predicate__ manufacturer __object__ Lockheed Martin', '__subject__ Lockheed Martin __predicate__ location __object__ Bethesda, Maryland']]
Text: The Atlas II was manufactured by Lockheed Martin who are located in Bethesda, Maryland.
Subject: ['Atlas II', 'Lockheed Martin']
Predicate: ['manufacturer', 'location']
Object: ['Lockheed Martin', 'Bethesda, Maryland']

Triple: [['__subject__ Atlas II __predicate__ manufacturer __object__ Lockheed Martin', '__subject__ Lockheed Martin __predicate__ location __object__ Bethesda, Maryland']]
Text: The manufacturer of the Atlas II is Lockheed Martin which is located in Bethesda, Maryland.
Subject: ['Atlas II', 'Lockheed Martin']
Predicate: ['manufacturer', 'location']
Object: ['Lockheed Martin', 'Bethesda, Maryland']

Triple: [['__subject__ Audi A1 __predicate__ engine __object__ 1.2 (litres)', '__subject__ Audi A1 __predicate__ assembly __object__ Brussels, Belgium']]
Text: The Audi A1 has a 1.2 litre engine and is assembled in Brussels, Belgium.
Subject: ['Audi A1', 'Audi A1']
Predicate: ['engine', 'assembly']
Object: ['1.2 (litres)', 'Brussels, Belgium']

Triple: [['__subject__ Audi A1 __predicate__ engine __object__ 1.2 (litres)', '__subject__ Audi A1 __predicate__ assembly __object__ Brussels, Belgium']]
Text: The Audi A1 is built in Brussels, Belgium and has a 1.2 litre engine.
Subject: ['Audi A1', 'Audi A1']
Predicate: ['engine', 'assembly']
Object: ['1.2 (litres)', 'Brussels, Belgium']

Triple: [['__subject__ Audi A1 __predicate__ engine __object__ 1.2 (litres)', '__subject__ Audi A1 __predicate__ assembly __object__ Brussels, Belgium']]
Text: The Audi A1 is assembled in Brussels, Belgium and has a 1.2 litre engine.
Subject: ['Audi A1', 'Audi A1']
Predicate: ['engine', 'assembly']
Object: ['1.2 (litres)', 'Brussels, Belgium']

Triple: [['__subject__ Audi A1 __predicate__ engine __object__ 1.2 (litres)', '__subject__ Audi A1 __predicate__ assembly __object__ Audi Brussels']]
Text: The Audi A1 is built by Audi Brussels and has a 1.2 litre engine.
Subject: ['Audi A1', 'Audi A1']
Predicate: ['engine', 'assembly']
Object: ['1.2 (litres)', 'Audi Brussels']

Triple: [['__subject__ Audi A1 __predicate__ engine __object__ 1.2 (litres)', '__subject__ Audi A1 __predicate__ assembly __object__ Audi Brussels']]
Text: The Audi A1 has a 1.2 litre engine and is assembled at Audi Brussels.
Subject: ['Audi A1', 'Audi A1']
Predicate: ['engine', 'assembly']
Object: ['1.2 (litres)', 'Audi Brussels']

Triple: [['__subject__ Audi A1 __predicate__ engine __object__ 1.2 (litres)', '__subject__ Audi A1 __predicate__ assembly __object__ Audi Brussels']]
Text: The Audi A1 is assembled by Audi Brussels and has a 1.2 litre engine.
Subject: ['Audi A1', 'Audi A1']
Predicate: ['engine', 'assembly']
Object: ['1.2 (litres)', 'Audi Brussels']

Triple: [['__subject__ Audi A1 __predicate__ engine __object__ 1.2 (litres)', '__subject__ Audi A1 __predicate__ bodyStyle __object__ Hatchback']]
Text: The Audi A1 is a hatchback with a 1.2 litre engine.
Subject: ['Audi A1', 'Audi A1']
Predicate: ['engine', 'bodyStyle']
Object: ['1.2 (litres)', 'Hatchback']

Triple: [['__subject__ Audi A1 __predicate__ engine __object__ 1.2 (litres)', '__subject__ Audi A1 __predicate__ bodyStyle __object__ Hatchback']]
Text: The Audi A1 is a hatchback and has a 1.2 litre engine.
Subject: ['Audi A1', 'Audi A1']
Predicate: ['engine', 'bodyStyle']
Object: ['1.2 (litres)', 'Hatchback']

Triple: [['__subject__ Audi A1 __predicate__ manufacturer __object__ Audi', '__subject__ Audi __predicate__ foundedBy __object__ August Horch']]
Text: The Audi A1 is made by Audi, which was founded by August Horch.
Subject: ['Audi A1', 'Audi']
Predicate: ['manufacturer', 'foundedBy']
Object: ['Audi', 'August Horch']

Triple: [['__subject__ Audi A1 __predicate__ manufacturer __object__ Audi', '__subject__ Audi __predicate__ foundedBy __object__ August Horch']]
Text: Audi A1, made by Audi, was founded by August Horch.
Subject: ['Audi A1', 'Audi']
Predicate: ['manufacturer', 'foundedBy']
Object: ['Audi', 'August Horch']

Triple: [['__subject__ Audi A1 __predicate__ manufacturer __object__ Audi', '__subject__ Audi __predicate__ foundedBy __object__ August Horch']]
Text: The Audi A1 is manufatured by Audi which was founded by August Horch.
Subject: ['Audi A1', 'Audi']
Predicate: ['manufacturer', 'foundedBy']
Object: ['Audi', 'August Horch']

Triple: [['__subject__ Audi A1 __predicate__ manufacturer __object__ Audi', '__subject__ Audi __predicate__ subsidiary __object__ Lamborghini']]
Text: Lamborghini is a subsidiary of Audi, who made the Audi A1.
Subject: ['Audi A1', 'Audi']
Predicate: ['manufacturer', 'subsidiary']
Object: ['Audi', 'Lamborghini']

Triple: [['__subject__ Audi A1 __predicate__ manufacturer __object__ Audi', '__subject__ Audi __predicate__ subsidiary __object__ Lamborghini']]
Text: Lamborghini is a subsidiary of Audi who manufacture the Audi A1.
Subject: ['Audi A1', 'Audi']
Predicate: ['manufacturer', 'subsidiary']
Object: ['Audi', 'Lamborghini']

Triple: [['__subject__ Audi A1 __predicate__ manufacturer __object__ Audi', '__subject__ Audi __predicate__ subsidiary __object__ Lamborghini']]
Text: Audi who make the Audi A1 have Lamborghini as a subsidiary.
Subject: ['Audi A1', 'Audi']
Predicate: ['manufacturer', 'subsidiary']
Object: ['Audi', 'Lamborghini']

Triple: [['__subject__ Audi A1 __predicate__ relatedMeanOfTransportation __object__ SEAT Ibiza', '__subject__ Audi A1 __predicate__ relatedMeanOfTransportation __object__ Volkswagen Polo']]
Text: The Audi A1 is a similar means of transport to the Seat Ibiza, and also related to the Volkswagen Polo.
Subject: ['Audi A1', 'Audi A1']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['SEAT Ibiza', 'Volkswagen Polo']

Triple: [['__subject__ Audi A1 __predicate__ relatedMeanOfTransportation __object__ SEAT Ibiza', '__subject__ Audi A1 __predicate__ relatedMeanOfTransportation __object__ Volkswagen Polo']]
Text: The Audi A1 and the Seat Ibiza are similar means of transport and as such, are related to the VW Polo.
Subject: ['Audi A1', 'Audi A1']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['SEAT Ibiza', 'Volkswagen Polo']

Triple: [['__subject__ Audi A1 __predicate__ relatedMeanOfTransportation __object__ SEAT Ibiza', '__subject__ Audi A1 __predicate__ relatedMeanOfTransportation __object__ Volkswagen Polo']]
Text: The Seat Ibiza and the Audi A1, a related vehicle to the VW Polo, are both cars and therefore a related means of transportation.
Subject: ['Audi A1', 'Audi A1']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['SEAT Ibiza', 'Volkswagen Polo']

Triple: [['__subject__ Audi A1 __predicate__ relatedMeanOfTransportation __object__ SEAT Ibiza', '__subject__ SEAT Ibiza __predicate__ relatedMeanOfTransportation __object__ Volkswagen Polo Mk3']]
Text: The Audi A1, the Seat Ibiza and the Volkswagen Polo Mk3 are similar and therefore related means of transportation.
Subject: ['Audi A1', 'SEAT Ibiza']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['SEAT Ibiza', 'Volkswagen Polo Mk3']

Triple: [['__subject__ Audi A1 __predicate__ relatedMeanOfTransportation __object__ SEAT Ibiza', '__subject__ SEAT Ibiza __predicate__ relatedMeanOfTransportation __object__ Volkswagen Polo Mk3']]
Text: The Seat Ibiza and the Audi A1 are both cars and the former is related to the VW Polo Mk3.
Subject: ['Audi A1', 'SEAT Ibiza']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['SEAT Ibiza', 'Volkswagen Polo Mk3']

Triple: [['__subject__ Audi A1 __predicate__ relatedMeanOfTransportation __object__ SEAT Ibiza', '__subject__ SEAT Ibiza __predicate__ relatedMeanOfTransportation __object__ Volkswagen Polo Mk3']]
Text: The cars, the Seat Ibiza, Volkswagen Polo Mk3 and Audi A1 are considered related means of transportation as they are similar types of vehicle.
Subject: ['Audi A1', 'SEAT Ibiza']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['SEAT Ibiza', 'Volkswagen Polo Mk3']

Triple: [['__subject__ Caterpillar Inc. __predicate__ location __object__ Illinois', '__subject__ AIDAluna __predicate__ powerType __object__ Caterpillar Inc.']]
Text: The power type of the AIDAluna is the engine by Caterpillar Inc. which is located in Illinois.
Subject: ['Caterpillar Inc.', 'AIDAluna']
Predicate: ['location', 'powerType']
Object: ['Illinois', 'Caterpillar Inc.']

Triple: [['__subject__ Caterpillar Inc. __predicate__ location __object__ Illinois', '__subject__ AIDAluna __predicate__ powerType __object__ Caterpillar Inc.']]
Text: AIDAluna, is powered by Caterpillar Inc. which is located in Illinois.
Subject: ['Caterpillar Inc.', 'AIDAluna']
Predicate: ['location', 'powerType']
Object: ['Illinois', 'Caterpillar Inc.']

Triple: [['__subject__ Caterpillar Inc. __predicate__ location __object__ Illinois', '__subject__ AIDAluna __predicate__ powerType __object__ Caterpillar Inc.']]
Text: Caterpillar Inc. are located in Illinois and powered the AIDAluna.
Subject: ['Caterpillar Inc.', 'AIDAluna']
Predicate: ['location', 'powerType']
Object: ['Illinois', 'Caterpillar Inc.']

Triple: [['__subject__ Caterpillar Inc. __predicate__ location __object__ Peoria, Illinois', '__subject__ AIDAluna __predicate__ powerType __object__ Caterpillar Inc.']]
Text: AIDAluna, which is powered by Caterpillar Inc. is located in Peoria, Illinois.
Subject: ['Caterpillar Inc.', 'AIDAluna']
Predicate: ['location', 'powerType']
Object: ['Peoria, Illinois', 'Caterpillar Inc.']

Triple: [['__subject__ Caterpillar Inc. __predicate__ location __object__ Peoria, Illinois', '__subject__ AIDAluna __predicate__ powerType __object__ Caterpillar Inc.']]
Text: Caterpillar Inc. is located in Peoria, Illinois and their engine powers the AIDAluna.
Subject: ['Caterpillar Inc.', 'AIDAluna']
Predicate: ['location', 'powerType']
Object: ['Peoria, Illinois', 'Caterpillar Inc.']

Triple: [['__subject__ Caterpillar Inc. __predicate__ location __object__ Peoria, Illinois', '__subject__ AIDAluna __predicate__ powerType __object__ Caterpillar Inc.']]
Text: The power type of the AIDAluna is the Caterpillar Inc. engine, who are located in Peoria, Illinois.
Subject: ['Caterpillar Inc.', 'AIDAluna']
Predicate: ['location', 'powerType']
Object: ['Peoria, Illinois', 'Caterpillar Inc.']

Triple: [['__subject__ Caterpillar Inc. __predicate__ location __object__ United States', '__subject__ AIDAluna __predicate__ powerType __object__ Caterpillar Inc.']]
Text: Caterpillar Inc is in the US. The power type of the AIDAluna is the Caterpillar Inc. engine.
Subject: ['Caterpillar Inc.', 'AIDAluna']
Predicate: ['location', 'powerType']
Object: ['United States', 'Caterpillar Inc.']

Triple: [['__subject__ Caterpillar Inc. __predicate__ location __object__ United States', '__subject__ AIDAluna __predicate__ powerType __object__ Caterpillar Inc.']]
Text: The power type of the AIDAluna is the Caterpillar Inc. engine, who are located in the U.S.
Subject: ['Caterpillar Inc.', 'AIDAluna']
Predicate: ['location', 'powerType']
Object: ['United States', 'Caterpillar Inc.']

Triple: [['__subject__ Costa Crociere __predicate__ location __object__ Genoa', '__subject__ AIDAstella __predicate__ owner __object__ Costa Crociere']]
Text: The AIDAstella is owned by Costa Crociere which is in Genoa.
Subject: ['Costa Crociere', 'AIDAstella']
Predicate: ['location', 'owner']
Object: ['Genoa', 'Costa Crociere']

Triple: [['__subject__ Costa Crociere __predicate__ location __object__ Genoa', '__subject__ AIDAstella __predicate__ owner __object__ Costa Crociere']]
Text: Costa Crociere is the owner of the AIDAstella and are located in Genoa.
Subject: ['Costa Crociere', 'AIDAstella']
Predicate: ['location', 'owner']
Object: ['Genoa', 'Costa Crociere']

Triple: [['__subject__ Costa Crociere __predicate__ location __object__ Genoa', '__subject__ AIDAstella __predicate__ owner __object__ Costa Crociere']]
Text: The AIDAstella is owned by Costa Crociere who are located in Genoa.
Subject: ['Costa Crociere', 'AIDAstella']
Predicate: ['location', 'owner']
Object: ['Genoa', 'Costa Crociere']

Triple: [['__subject__ Costa Crociere __predicate__ location __object__ Italy', '__subject__ AIDAstella __predicate__ owner __object__ Costa Crociere']]
Text: The AIDAstella is owned by the Italian located Costa Crociere.
Subject: ['Costa Crociere', 'AIDAstella']
Predicate: ['location', 'owner']
Object: ['Italy', 'Costa Crociere']

Triple: [['__subject__ Costa Crociere __predicate__ location __object__ Italy', '__subject__ AIDAstella __predicate__ owner __object__ Costa Crociere']]
Text: AIDAstella is owned by Costa Crociere who are located in Italy.
Subject: ['Costa Crociere', 'AIDAstella']
Predicate: ['location', 'owner']
Object: ['Italy', 'Costa Crociere']

Triple: [['__subject__ Costa Crociere __predicate__ location __object__ Italy', '__subject__ AIDAstella __predicate__ owner __object__ Costa Crociere']]
Text: The AIDAstella is owned by Costa Crociere who are located in Italy.
Subject: ['Costa Crociere', 'AIDAstella']
Predicate: ['location', 'owner']
Object: ['Italy', 'Costa Crociere']

Triple: [['__subject__ DeSoto Custom __predicate__ relatedMeanOfTransportation __object__ Dodge Coronet', '__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom']]
Text: The 1955 Dodge, the DeSoto Custom, and the Dodge Coronet are similar and therefore related means of transport.
Subject: ['DeSoto Custom', '1955 Dodge']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Dodge Coronet', 'DeSoto Custom']

Triple: [['__subject__ DeSoto Custom __predicate__ relatedMeanOfTransportation __object__ Dodge Coronet', '__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom']]
Text: The DeSoto is related to the Dodge Coronet, and the 1955 Dodge and the DeSoto Custom are related means of transportation.
Subject: ['DeSoto Custom', '1955 Dodge']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Dodge Coronet', 'DeSoto Custom']

Triple: [['__subject__ DeSoto Custom __predicate__ relatedMeanOfTransportation __object__ Dodge Coronet', '__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom']]
Text: The 1955 Dodge, DeSoto Custom and Dodge Coronet are all related.
Subject: ['DeSoto Custom', '1955 Dodge']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Dodge Coronet', 'DeSoto Custom']

Triple: [['__subject__ Delta II __predicate__ launchSite __object__ Cape Canaveral Air Force Station', '__subject__ Antares (rocket) __predicate__ comparable __object__ Delta II']]
Text: The Delta 11, launched from Cape Canaveral Air Force Station, is comparable with the Delta II.
Subject: ['Delta II', 'Antares (rocket)']
Predicate: ['launchSite', 'comparable']
Object: ['Cape Canaveral Air Force Station', 'Delta II']

Triple: [['__subject__ Delta II __predicate__ launchSite __object__ Cape Canaveral Air Force Station', '__subject__ Antares (rocket) __predicate__ comparable __object__ Delta II']]
Text: The rocket Antares is comparable to Delta II which was launched at the Cape Canaveral Air Force Station.
Subject: ['Delta II', 'Antares (rocket)']
Predicate: ['launchSite', 'comparable']
Object: ['Cape Canaveral Air Force Station', 'Delta II']

Triple: [['__subject__ Delta II __predicate__ launchSite __object__ Cape Canaveral Air Force Station', '__subject__ Antares (rocket) __predicate__ comparable __object__ Delta II']]
Text: The Antares rocket is similar to the Delta II rocket, which was launched at the Cape Canaveral Air Force Station.
Subject: ['Delta II', 'Antares (rocket)']
Predicate: ['launchSite', 'comparable']
Object: ['Cape Canaveral Air Force Station', 'Delta II']

Triple: [['__subject__ ELA-3 __predicate__ site __object__ Guiana Space Centre', '__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3']]
Text: The Ariane 5 was launched from the ELA-3 launchpad which is found at the Guiana Space Centre.
Subject: ['ELA-3', 'Ariane 5']
Predicate: ['site', 'launchSite']
Object: ['Guiana Space Centre', 'ELA-3']

Triple: [['__subject__ ELA-3 __predicate__ site __object__ Guiana Space Centre', '__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3']]
Text: Ariane 5 was launched at ELA-3 at the Guiana Space Centre.
Subject: ['ELA-3', 'Ariane 5']
Predicate: ['site', 'launchSite']
Object: ['Guiana Space Centre', 'ELA-3']

Triple: [['__subject__ ELA-3 __predicate__ site __object__ Guiana Space Centre', '__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3']]
Text: The launch site of the Ariane 5 was ELA-3 launchpad at the Guiana Space Centre.
Subject: ['ELA-3', 'Ariane 5']
Predicate: ['site', 'launchSite']
Object: ['Guiana Space Centre', 'ELA-3']

Triple: [['__subject__ Fiat Croma __predicate__ relatedMeanOfTransportation __object__ Opel Vectra', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Fiat Croma']]
Text: The Alfa Romeo 164, Opel Vectra and the Fiat Croma are related means of transportation.
Subject: ['Fiat Croma', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Opel Vectra', 'Fiat Croma']

Triple: [['__subject__ Fiat Croma __predicate__ relatedMeanOfTransportation __object__ Opel Vectra', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Fiat Croma']]
Text: The Alfa Romeo 164 and the Fiat Croma (which is related to the Opel Vectra) are similar means of transport.
Subject: ['Fiat Croma', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Opel Vectra', 'Fiat Croma']

Triple: [['__subject__ Fiat Croma __predicate__ relatedMeanOfTransportation __object__ Opel Vectra', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Fiat Croma']]
Text: Fiat Croma and Opel Vectra are connected. The Alfa Romeo 164 and the Fiat Croma are connected.
Subject: ['Fiat Croma', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Opel Vectra', 'Fiat Croma']

Triple: [['__subject__ Fiat Croma __predicate__ relatedMeanOfTransportation __object__ Saab 9000', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Fiat Croma']]
Text: The Alfa Romeo 164 and the Fiat Croma are similar means of transport and the latter is also related to the Saab 9000.
Subject: ['Fiat Croma', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Saab 9000', 'Fiat Croma']

Triple: [['__subject__ Fiat Croma __predicate__ relatedMeanOfTransportation __object__ Saab 9000', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Fiat Croma']]
Text: The Alfa Romeo 164, Saab 9000 and the Fiat Croma are all cars and as such, are related means of transport.
Subject: ['Fiat Croma', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Saab 9000', 'Fiat Croma']

Triple: [['__subject__ Fiat Croma __predicate__ relatedMeanOfTransportation __object__ Saab 9000', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Fiat Croma']]
Text: The Fiat Croma, which is a similar means of transport to the Alfa Romeo 164, is also a related means of transport to the Saab 9000.
Subject: ['Fiat Croma', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Saab 9000', 'Fiat Croma']

Triple: [['__subject__ Lancia Thema __predicate__ relatedMeanOfTransportation __object__ Saab 9000', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Lancia Thema']]
Text: Alfa Romeo 164, Lancia Thema and the Saab 9000 are related types of transportation.
Subject: ['Lancia Thema', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Saab 9000', 'Lancia Thema']

Triple: [['__subject__ Lancia Thema __predicate__ relatedMeanOfTransportation __object__ Saab 9000', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Lancia Thema']]
Text: The Lancia Thema is related to the Saab 9000 and the Alfa Romeo 164.
Subject: ['Lancia Thema', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Saab 9000', 'Lancia Thema']

Triple: [['__subject__ Lancia Thema __predicate__ relatedMeanOfTransportation __object__ Saab 9000', '__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Lancia Thema']]
Text: The Saab 9000 and the Lancia Thema are related vehicles. The Alfa Romeo 164 and Lancia Thema are also related means of transport.
Subject: ['Lancia Thema', 'Alfa Romeo 164']
Predicate: ['relatedMeanOfTransportation', 'relatedMeanOfTransportation']
Object: ['Saab 9000', 'Lancia Thema']

Triple: [['__subject__ MTU Friedrichshafen __predicate__ city __object__ Friedrichshafen', '__subject__ A-Rosa Luna __predicate__ powerType __object__ MTU Friedrichshafen']]
Text: The A-Rosa Luna is powered by a MTU Friedrichshafen engine in Friedrichshafen.
Subject: ['MTU Friedrichshafen', 'A-Rosa Luna']
Predicate: ['city', 'powerType']
Object: ['Friedrichshafen', 'MTU Friedrichshafen']

Triple: [['__subject__ MTU Friedrichshafen __predicate__ city __object__ Friedrichshafen', '__subject__ A-Rosa Luna __predicate__ powerType __object__ MTU Friedrichshafen']]
Text: The A-Rosa Luna is powered by MTU Friedrichshafen made engines, located in Friedrichshafen.
Subject: ['MTU Friedrichshafen', 'A-Rosa Luna']
Predicate: ['city', 'powerType']
Object: ['Friedrichshafen', 'MTU Friedrichshafen']

Triple: [['__subject__ MTU Friedrichshafen __predicate__ city __object__ Friedrichshafen', '__subject__ A-Rosa Luna __predicate__ powerType __object__ MTU Friedrichshafen']]
Text: The A-Rosa Luna is powered by a MTU Friedrichshafen engine which was created in the city of Friedrichshafen.
Subject: ['MTU Friedrichshafen', 'A-Rosa Luna']
Predicate: ['city', 'powerType']
Object: ['Friedrichshafen', 'MTU Friedrichshafen']

Triple: [['__subject__ MTU Friedrichshafen __predicate__ parentCompany __object__ Rolls-Royce Power Systems', '__subject__ A-Rosa Luna __predicate__ powerType __object__ MTU Friedrichshafen']]
Text: Rolls-Royce Power Systems is the parent co. of MTU Friedrichshafen who made an engine for the A-Rosa Luna.
Subject: ['MTU Friedrichshafen', 'A-Rosa Luna']
Predicate: ['parentCompany', 'powerType']
Object: ['Rolls-Royce Power Systems', 'MTU Friedrichshafen']

Triple: [['__subject__ MTU Friedrichshafen __predicate__ parentCompany __object__ Rolls-Royce Power Systems', '__subject__ A-Rosa Luna __predicate__ powerType __object__ MTU Friedrichshafen']]
Text: The A-Rosa Luna is powered by engines made by MTU Friedrichshafen whose parent company is Rolls-Royce Power Systems.
Subject: ['MTU Friedrichshafen', 'A-Rosa Luna']
Predicate: ['parentCompany', 'powerType']
Object: ['Rolls-Royce Power Systems', 'MTU Friedrichshafen']

Triple: [['__subject__ MTU Friedrichshafen __predicate__ parentCompany __object__ Rolls-Royce Power Systems', '__subject__ A-Rosa Luna __predicate__ powerType __object__ MTU Friedrichshafen']]
Text: The parent company of MTU Friedrichshafen, who make the engines that power the A-Rosa Luna, is Rolls-Royce Power Systems.
Subject: ['MTU Friedrichshafen', 'A-Rosa Luna']
Predicate: ['parentCompany', 'powerType']
Object: ['Rolls-Royce Power Systems', 'MTU Friedrichshafen']

Triple: [['__subject__ Meyer Werft __predicate__ location __object__ Germany', '__subject__ AIDAstella __predicate__ builder __object__ Meyer Werft']]
Text: Meyer Werft is located in Germany and built the AIDAstella.
Subject: ['Meyer Werft', 'AIDAstella']
Predicate: ['location', 'builder']
Object: ['Germany', 'Meyer Werft']

Triple: [['__subject__ Meyer Werft __predicate__ location __object__ Germany', '__subject__ AIDAstella __predicate__ builder __object__ Meyer Werft']]
Text: Meyer Werft is found in Germany and they built the AIDAstella.
Subject: ['Meyer Werft', 'AIDAstella']
Predicate: ['location', 'builder']
Object: ['Germany', 'Meyer Werft']

Triple: [['__subject__ Meyer Werft __predicate__ location __object__ Germany', '__subject__ AIDAstella __predicate__ builder __object__ Meyer Werft']]
Text: The AIDAstella was built by Meyer Werft, who are located in Germany.
Subject: ['Meyer Werft', 'AIDAstella']
Predicate: ['location', 'builder']
Object: ['Germany', 'Meyer Werft']

Triple: [['__subject__ Mid-Atlantic Regional Spaceport Launch Pad 0 __predicate__ associatedRocket __object__ Minotaur V', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0']]
Text: The Mid-Atlantic Regional Spaceport Launch Pad 0 is associated with the Minotaur V rocket, and was the launch site of the Antares rocket.
Subject: ['Mid-Atlantic Regional Spaceport Launch Pad 0', 'Antares (rocket)']
Predicate: ['associatedRocket', 'launchSite']
Object: ['Minotaur V', 'Mid-Atlantic Regional Spaceport Launch Pad 0']

Triple: [['__subject__ Mid-Atlantic Regional Spaceport Launch Pad 0 __predicate__ associatedRocket __object__ Minotaur V', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0']]
Text: Minotaur V and Antares were launched at Mid-Atlantic Regional Spaceport Launch Pad 0.
Subject: ['Mid-Atlantic Regional Spaceport Launch Pad 0', 'Antares (rocket)']
Predicate: ['associatedRocket', 'launchSite']
Object: ['Minotaur V', 'Mid-Atlantic Regional Spaceport Launch Pad 0']

Triple: [['__subject__ Mid-Atlantic Regional Spaceport Launch Pad 0 __predicate__ associatedRocket __object__ Minotaur V', '__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport Launch Pad 0']]
Text: The Minotaur V and the Antares rocket were launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.
Subject: ['Mid-Atlantic Regional Spaceport Launch Pad 0', 'Antares (rocket)']
Predicate: ['associatedRocket', 'launchSite']
Object: ['Minotaur V', 'Mid-Atlantic Regional Spaceport Launch Pad 0']

Triple: [['__subject__ Neptun Werft __predicate__ city __object__ Rostock', '__subject__ A-Rosa Luna __predicate__ builder __object__ Neptun Werft']]
Text: Located in Rostock, Neptun Werft, built the A-Rosa Luna.
Subject: ['Neptun Werft', 'A-Rosa Luna']
Predicate: ['city', 'builder']
Object: ['Rostock', 'Neptun Werft']

Triple: [['__subject__ Neptun Werft __predicate__ city __object__ Rostock', '__subject__ A-Rosa Luna __predicate__ builder __object__ Neptun Werft']]
Text: The A-Rosa Luna was built on the Neptun Werft, the location of which, is in Rostock.
Subject: ['Neptun Werft', 'A-Rosa Luna']
Predicate: ['city', 'builder']
Object: ['Rostock', 'Neptun Werft']

Triple: [['__subject__ Neptun Werft __predicate__ city __object__ Rostock', '__subject__ A-Rosa Luna __predicate__ builder __object__ Neptun Werft']]
Text: The Neptun Werft is located in Rostock and built the A-Rosa Luna.
Subject: ['Neptun Werft', 'A-Rosa Luna']
Predicate: ['city', 'builder']
Object: ['Rostock', 'Neptun Werft']

Triple: [['__subject__ Sovcomflot __predicate__ keyPerson __object__ Sergey Naryshkin', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ operator __object__ Sovcomflot']]
Text: Sergey Naryshkin is a key person at Sovcomflot, the operator of the icebreaker, Aleksey Chirikov.
Subject: ['Sovcomflot', 'Aleksey Chirikov (icebreaker)']
Predicate: ['keyPerson', 'operator']
Object: ['Sergey Naryshkin', 'Sovcomflot']

Triple: [['__subject__ Sovcomflot __predicate__ keyPerson __object__ Sergey Naryshkin', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ operator __object__ Sovcomflot']]
Text: Sergey Naryshkin is a key person at the company Sovcomflot who operate the Aleksey Chirikov icebreaker.
Subject: ['Sovcomflot', 'Aleksey Chirikov (icebreaker)']
Predicate: ['keyPerson', 'operator']
Object: ['Sergey Naryshkin', 'Sovcomflot']

Triple: [['__subject__ Sovcomflot __predicate__ keyPerson __object__ Sergey Naryshkin', '__subject__ Aleksey Chirikov (icebreaker) __predicate__ operator __object__ Sovcomflot']]
Text: Sergey Naryshkin is a key emplyee at Sovcomflot which operates the icebreaker Aleksey Chirikov.
Subject: ['Sovcomflot', 'Aleksey Chirikov (icebreaker)']
Predicate: ['keyPerson', 'operator']
Object: ['Sergey Naryshkin', 'Sovcomflot']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Atlas II __predicate__ countryOrigin __object__ United States']]
Text: The Atlas II came from the U.S. the capital city of which is Washington D.C.
Subject: ['United States', 'Atlas II']
Predicate: ['capital', 'countryOrigin']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Atlas II __predicate__ countryOrigin __object__ United States']]
Text: Atlas II originates from the United States which has Washington D.C. as its capital.
Subject: ['United States', 'Atlas II']
Predicate: ['capital', 'countryOrigin']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ Atlas II __predicate__ countryOrigin __object__ United States']]
Text: Washington D.C. is the capital of the United States, the country where the Atlas II is from.
Subject: ['United States', 'Atlas II']
Predicate: ['capital', 'countryOrigin']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ demonym __object__ Americans', '__subject__ Atlas II __predicate__ countryOrigin __object__ United States']]
Text: The Atlas II comes from the United States where Americans live.
Subject: ['United States', 'Atlas II']
Predicate: ['demonym', 'countryOrigin']
Object: ['Americans', 'United States']

Triple: [['__subject__ United States __predicate__ demonym __object__ Americans', '__subject__ Atlas II __predicate__ countryOrigin __object__ United States']]
Text: Americans live in the U.S, the home of The Atlas II.
Subject: ['United States', 'Atlas II']
Predicate: ['demonym', 'countryOrigin']
Object: ['Americans', 'United States']

Triple: [['__subject__ United States __predicate__ demonym __object__ Americans', '__subject__ Atlas II __predicate__ countryOrigin __object__ United States']]
Text: People from the US are called Americans and Atlas II is from the United States.
Subject: ['United States', 'Atlas II']
Predicate: ['demonym', 'countryOrigin']
Object: ['Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Atlas II __predicate__ countryOrigin __object__ United States']]
Text: Atlas II originates from the United States, of which Asian Americans are an ethnic group.
Subject: ['United States', 'Atlas II']
Predicate: ['ethnicGroup', 'countryOrigin']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Atlas II __predicate__ countryOrigin __object__ United States']]
Text: Atlas II came from the United States, a country where Asian Americans are one of the ethnic groups.
Subject: ['United States', 'Atlas II']
Predicate: ['ethnicGroup', 'countryOrigin']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Atlas II __predicate__ countryOrigin __object__ United States']]
Text: The Atlas II is from the United States, where Asian Americans are one of the ethnic groups.
Subject: ['United States', 'Atlas II']
Predicate: ['ethnicGroup', 'countryOrigin']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ White Americans', '__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States']]
Text: The ALV X-1 hails from the US, where white Americans are an ethnic group.
Subject: ['United States', 'ALV X-1']
Predicate: ['ethnicGroup', 'countryOrigin']
Object: ['White Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ White Americans', '__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States']]
Text: ALV X-1 originated in the United States, a country where the White Americans are an ethnic group.
Subject: ['United States', 'ALV X-1']
Predicate: ['ethnicGroup', 'countryOrigin']
Object: ['White Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ White Americans', '__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States']]
Text: ALV X-1 hails from the US where the White Americans are one of the country's ethnic groups.
Subject: ['United States', 'ALV X-1']
Predicate: ['ethnicGroup', 'countryOrigin']
Object: ['White Americans', 'United States']

Triple: [['__subject__ United States __predicate__ leaderTitle __object__ President of the United States', '__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States']]
Text: ALV X-1 hails from the United States, the leader of which, is titled, President of the United States.
Subject: ['United States', 'ALV X-1']
Predicate: ['leaderTitle', 'countryOrigin']
Object: ['President of the United States', 'United States']

Triple: [['__subject__ United States __predicate__ leaderTitle __object__ President of the United States', '__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States']]
Text: The U.S. is the origin of the ALV X-1 and has the President as its leader.
Subject: ['United States', 'ALV X-1']
Predicate: ['leaderTitle', 'countryOrigin']
Object: ['President of the United States', 'United States']

Triple: [['__subject__ United States __predicate__ leaderTitle __object__ President of the United States', '__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States']]
Text: ALV X-1 hails from the US which is led by the President of the United States.
Subject: ['United States', 'ALV X-1']
Predicate: ['leaderTitle', 'countryOrigin']
Object: ['President of the United States', 'United States']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ category __object__ Contributing property', '__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']]
Text: The 11th Mississippi Infantry Monument is in the municipality of Gettysburg, Pennsylvania and is categorised as a contributing property.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['category', 'municipality']
Object: ['Contributing property', 'Gettysburg, Pennsylvania']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ category __object__ Contributing property', '__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']]
Text: The 11th Mississippi Infantry Monument is categorised as a contributing property and can be found in Gettysburg, Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['category', 'municipality']
Object: ['Contributing property', 'Gettysburg, Pennsylvania']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ category __object__ Contributing property', '__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']]
Text: The 11th Mississippi Infantry Monument falls under the category of Contributing property and is placed in the municipality of Gettysburg in Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['category', 'municipality']
Object: ['Contributing property', 'Gettysburg, Pennsylvania']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ country __object__ United States', '__subject__ 11th Mississippi Infantry Monument __predicate__ category __object__ Contributing property']]
Text: The 11th Mississippi Infantry Monument is in the United States and falls under the category of Contributing property.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['country', 'category']
Object: ['United States', 'Contributing property']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ country __object__ United States', '__subject__ 11th Mississippi Infantry Monument __predicate__ category __object__ Contributing property']]
Text: The 11th Mississippi Infantry Monument falls under the category of Contributing property and is in the United States.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['country', 'category']
Object: ['United States', 'Contributing property']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ country __object__ United States', '__subject__ 11th Mississippi Infantry Monument __predicate__ category __object__ Contributing property']]
Text: The 11th Mississippi Infantry Monument, located in the United States, falls under the category of Contributing property.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['country', 'category']
Object: ['United States', 'Contributing property']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ established __object__ 2000', '__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']]
Text: The 11th Mississippi Infantry Monument, established in 2000, is in the municipality of Gettysburg, Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['established', 'municipality']
Object: ['2000', 'Gettysburg, Pennsylvania']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ established __object__ 2000', '__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']]
Text: The 11th Mississippi Infantry Monument is placed in the municipality of Gettysburg in Pennsylvania and erected in 2000.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['established', 'municipality']
Object: ['2000', 'Gettysburg, Pennsylvania']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ established __object__ 2000', '__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']]
Text: The 11th Mississippi Infantry Monument is in the municipality of Gettysburg Pennsylvania and was erected in 2000.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['established', 'municipality']
Object: ['2000', 'Gettysburg, Pennsylvania']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ category __object__ Contributing property']]
Text: The 11th Mississippi Infantry Monument, situated in Adams County, Pennsylvania, is categorised as a contributing property.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['location', 'category']
Object: ['Adams County, Pennsylvania', 'Contributing property']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ category __object__ Contributing property']]
Text: The 11th Mississippi Infantry Monument is located in Adams County, Pennsylvania falls under the category of Contributing property.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['location', 'category']
Object: ['Adams County, Pennsylvania', 'Contributing property']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ category __object__ Contributing property']]
Text: The 11th Mississippi Infantry Monument is located in Adams County, Pennsylvania and is categorised as a contributing property.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['location', 'category']
Object: ['Adams County, Pennsylvania', 'Contributing property']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ established __object__ 2000']]
Text: The 11th Mississippi Infantry Monument was established in 2000 and is located in Adams County, Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['location', 'established']
Object: ['Adams County, Pennsylvania', '2000']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ established __object__ 2000']]
Text: 11th Mississippi Infantry Monument's location is Adams County, Pennsylvania and was established in 2000.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['location', 'established']
Object: ['Adams County, Pennsylvania', '2000']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ established __object__ 2000']]
Text: The 11th Mississippi Infantry Monument is in Adams County, PA and was founded in 2000.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['location', 'established']
Object: ['Adams County, Pennsylvania', '2000']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ established __object__ 2000']]
Text: 11th Mississippi Infantry Monument was established in 2000 in Adams County, Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['location', 'established']
Object: ['Adams County, Pennsylvania', '2000']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ established __object__ 2000']]
Text: The 11th Mississippi Infantry Monument in Adams County, Pennsylvania was established in 2000.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['location', 'established']
Object: ['Adams County, Pennsylvania', '2000']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ established __object__ 2000']]
Text: The 11th Mississippi Infantry Monument established in 2000 is found in Adams County, Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['location', 'established']
Object: ['Adams County, Pennsylvania', '2000']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']]
Text: The 11th Mississippi Infantry Monument is in the municipality of Gettysburg, PA in Adams County.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['location', 'municipality']
Object: ['Adams County, Pennsylvania', 'Gettysburg, Pennsylvania']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']]
Text: The 11th Mississippi Infantry Monument is in the municipality of Gettysburg, Adams County, in Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['location', 'municipality']
Object: ['Adams County, Pennsylvania', 'Gettysburg, Pennsylvania']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']]
Text: The municipality for the 11th Mississippi Infantry Monument is Gettysburg, Adams County, Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['location', 'municipality']
Object: ['Adams County, Pennsylvania', 'Gettysburg, Pennsylvania']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']]
Text: The 11th Mississippi Infantry Monument is found in Adams County, Gettysburg, Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['location', 'municipality']
Object: ['Adams County, Pennsylvania', 'Gettysburg, Pennsylvania']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']]
Text: The 11th Mississippi Infantry Monument is located in Adams County, in Gettysburg, Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['location', 'municipality']
Object: ['Adams County, Pennsylvania', 'Gettysburg, Pennsylvania']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ category __object__ Contributing property']]
Text: The 11th Mississippi Infantry Monument falls under the category of Contributing property and is in Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['state', 'category']
Object: ['Pennsylvania', 'Contributing property']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ category __object__ Contributing property']]
Text: The 11th Mississippi Infantry Monument, which falls under the category of Contributing property, is in Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['state', 'category']
Object: ['Pennsylvania', 'Contributing property']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ category __object__ Contributing property']]
Text: The 11th Mississippi Infantry Monument, in Pennsylvania, falls under the category of Contributing property.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['state', 'category']
Object: ['Pennsylvania', 'Contributing property']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ established __object__ 2000']]
Text: The 11th Mississippi Infantry Monument is found in Pennsylvania and was established in 2000.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['state', 'established']
Object: ['Pennsylvania', '2000']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ established __object__ 2000']]
Text: 11th Mississippi Infantry Monument, established in 2000 is in Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['state', 'established']
Object: ['Pennsylvania', '2000']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ established __object__ 2000']]
Text: The 11th Mississippi Infantry Monument stands in the state of Pennsylvania and was established in 2000.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['state', 'established']
Object: ['Pennsylvania', '2000']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ established __object__ 2000']]
Text: 11th Mississippi Infantry Monument was established in 2000 in Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['state', 'established']
Object: ['Pennsylvania', '2000']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ established __object__ 2000']]
Text: The 11th Mississippi Infantry Monument was established in Pennsylvania in the year 2000.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['state', 'established']
Object: ['Pennsylvania', '2000']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']]
Text: The 11th Mississippi Infantry Monument is found in Gettysburg, Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['state', 'municipality']
Object: ['Pennsylvania', 'Gettysburg, Pennsylvania']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']]
Text: The 11th Mississippi Infantry Monument is in Pennsylvania, in the municipality of Gettysburg.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['state', 'municipality']
Object: ['Pennsylvania', 'Gettysburg, Pennsylvania']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']]
Text: 11th Mississippi Infantry Monument can be found in Gettysburg, Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['state', 'municipality']
Object: ['Pennsylvania', 'Gettysburg, Pennsylvania']

Triple: [['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania', '__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']]
Text: The 11th Mississippi Infantry Monument is located in Gettysburg, Pennsylvania.
Subject: ['11th Mississippi Infantry Monument', '11th Mississippi Infantry Monument']
Predicate: ['state', 'municipality']
Object: ['Pennsylvania', 'Gettysburg, Pennsylvania']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ category __object__ Historic districts in the United States', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ district __object__ Monocacy National Battlefield']]
Text: The 14th New Jersey Volunteer Infantry Monument, found in the Monocacy National Battlefield, is categorised as a historic district in the United States.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['category', 'district']
Object: ['Historic districts in the United States', 'Monocacy National Battlefield']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ category __object__ Historic districts in the United States', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ district __object__ Monocacy National Battlefield']]
Text: The 14th New Jersey Volunteer Infantry Monument belongs to the category of Historic districts in the United States and is found in the Monocacy National Battlefield.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['category', 'district']
Object: ['Historic districts in the United States', 'Monocacy National Battlefield']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ category __object__ Historic districts in the United States', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ district __object__ Monocacy National Battlefield']]
Text: The 14th New Jersey Volunteer Infantry Monument is categorised as a historic district in the United States and is located in the Monocacy National Battlefield.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['category', 'district']
Object: ['Historic districts in the United States', 'Monocacy National Battlefield']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ category __object__ Historic districts in the United States', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ established __object__ 1907-07-11']]
Text: The 14th New Jersey Volunteer Infantry Monument, which was established on July 11th 1907, belongs to the category of Historic districts in the United States.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['category', 'established']
Object: ['Historic districts in the United States', '1907-07-11']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ category __object__ Historic districts in the United States', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ established __object__ 1907-07-11']]
Text: The 14th New Jersey Volunteer Infantry Monument was founded on July 11, 1907 and belongs to the Historic districts of the U.S.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['category', 'established']
Object: ['Historic districts in the United States', '1907-07-11']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ category __object__ Historic districts in the United States', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ established __object__ 1907-07-11']]
Text: The 14th New Jersey Volunteer Infantry Monument is categorised as a historic district in the United States and was established in 1907-07-11.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['category', 'established']
Object: ['Historic districts in the United States', '1907-07-11']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ country __object__ United States', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ category __object__ Historic districts in the United States']]
Text: The 14th New Jersey Volunteer Infantry Monument belongs to the category of Historic districts and is found in the United States.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['country', 'category']
Object: ['United States', 'Historic districts in the United States']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ country __object__ United States', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ category __object__ Historic districts in the United States']]
Text: The 14th New Jersey Volunteer Infantry Monument is located in the United States of America and is labelled as a historic district.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['country', 'category']
Object: ['United States', 'Historic districts in the United States']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ country __object__ United States', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ category __object__ Historic districts in the United States']]
Text: The 14th New Jersey Volunteer Infantry Monument belongs to the category of Historic districts and is located in United States.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['country', 'category']
Object: ['United States', 'Historic districts in the United States']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ country __object__ United States', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ district __object__ Monocacy National Battlefield']]
Text: The 14th New Jersey Volunteer Infantry Monument is located in the United States at the Monocacy National Battlefield.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['country', 'district']
Object: ['United States', 'Monocacy National Battlefield']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ country __object__ United States', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ district __object__ Monocacy National Battlefield']]
Text: The 14th New Jersey Volunteer Infantry Monument is located in the district of the Monocacy National Battlefield in the United States.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['country', 'district']
Object: ['United States', 'Monocacy National Battlefield']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ country __object__ United States', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ district __object__ Monocacy National Battlefield']]
Text: The 14th New Jersey Volunteer Infantry Monument is located in the Monocacy National Battlefield in the United States.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['country', 'district']
Object: ['United States', 'Monocacy National Battlefield']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ country __object__ United States', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ established __object__ 1907-07-11']]
Text: The 14th New Jersey Volunteer Infantry Monument was made on July 11, 1907 and is located in the U.S.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['country', 'established']
Object: ['United States', '1907-07-11']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ country __object__ United States', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ established __object__ 1907-07-11']]
Text: The 14th New Jersey Volunteer Infantry Monument was established on July 11th, 1907 and is in the United States.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['country', 'established']
Object: ['United States', '1907-07-11']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ district __object__ Monocacy National Battlefield', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ established __object__ 1907-07-11']]
Text: The 14th New Jersey Volunteer Infantry Monument is in the Monocacy National Battlefield and was founded July 11, 1907.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['district', 'established']
Object: ['Monocacy National Battlefield', '1907-07-11']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ district __object__ Monocacy National Battlefield', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ established __object__ 1907-07-11']]
Text: The 14th New Jersey Volunteer Infantry Monument is located on the Monocacy National Battlefield and was established on 11th July 1907.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['district', 'established']
Object: ['Monocacy National Battlefield', '1907-07-11']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ district __object__ Monocacy National Battlefield', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ established __object__ 1907-07-11']]
Text: The 14th New Jersey Volunteer Infantry Monument is in the Monocacy National Battlefield and was established July 11, 1907.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['district', 'established']
Object: ['Monocacy National Battlefield', '1907-07-11']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ owner __object__ National Park Service', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ state __object__ Maryland']]
Text: The 14th New Jersey Volunteer Infantry Monuments are in Maryland and are owned by the National Park Service.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['owner', 'state']
Object: ['National Park Service', 'Maryland']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ owner __object__ National Park Service', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ state __object__ Maryland']]
Text: The National Park Service is the owner of the 14th New Jersey Volunteer Infantry Monument and located in the state of Maryland.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['owner', 'state']
Object: ['National Park Service', 'Maryland']

Triple: [['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ owner __object__ National Park Service', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ state __object__ Maryland']]
Text: The 14th New Jersey Volunteer Infantry Monument is owned by the National Park Service and is in the state of Maryland.
Subject: ['14th New Jersey Volunteer Infantry Monument', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['owner', 'state']
Object: ['National Park Service', 'Maryland']

Triple: [['__subject__ Adams County, Pennsylvania __predicate__ hasToItsSoutheast __object__ Carroll County, Maryland', '__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania']]
Text: Carroll County Maryland is southeast of Adams County Pennsylvania, where the 11th Mississippi Infantry Monument is located.
Subject: ['Adams County, Pennsylvania', '11th Mississippi Infantry Monument']
Predicate: ['hasToItsSoutheast', 'location']
Object: ['Carroll County, Maryland', 'Adams County, Pennsylvania']

Triple: [['__subject__ Adams County, Pennsylvania __predicate__ hasToItsSoutheast __object__ Carroll County, Maryland', '__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania']]
Text: To the southeast of Adams County, Pennsylvania where 11th Mississippi Infantry Monument is found lies Carroll County, Maryland.
Subject: ['Adams County, Pennsylvania', '11th Mississippi Infantry Monument']
Predicate: ['hasToItsSoutheast', 'location']
Object: ['Carroll County, Maryland', 'Adams County, Pennsylvania']

Triple: [['__subject__ Adams County, Pennsylvania __predicate__ hasToItsSoutheast __object__ Carroll County, Maryland', '__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania']]
Text: To the southeast of Adams County, Pennsylvania, where 11th Mississippi Infantry Monument is located, lies Carroll County, Maryland.
Subject: ['Adams County, Pennsylvania', '11th Mississippi Infantry Monument']
Predicate: ['hasToItsSoutheast', 'location']
Object: ['Carroll County, Maryland', 'Adams County, Pennsylvania']

Triple: [['__subject__ Adams County, Pennsylvania __predicate__ hasToItsSoutheast __object__ Carroll County, Maryland', '__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania']]
Text: 11th Mississippi Infantry Monument is located in Adams County, Pennsylvania which has Carroll County, Maryland to its southeast.
Subject: ['Adams County, Pennsylvania', '11th Mississippi Infantry Monument']
Predicate: ['hasToItsSoutheast', 'location']
Object: ['Carroll County, Maryland', 'Adams County, Pennsylvania']

Triple: [['__subject__ Adams County, Pennsylvania __predicate__ hasToItsSoutheast __object__ Carroll County, Maryland', '__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania']]
Text: The 11th Mississippi Infantry Monument is located in Adams County, Pennsylvania, which is northwest of Carroll County, Maryland.
Subject: ['Adams County, Pennsylvania', '11th Mississippi Infantry Monument']
Predicate: ['hasToItsSoutheast', 'location']
Object: ['Carroll County, Maryland', 'Adams County, Pennsylvania']

Triple: [['__subject__ Atatürk Monument (İzmir) __predicate__ inaugurationDate __object__ 1932-07-27', '__subject__ Atatürk Monument (İzmir) __predicate__ material __object__ Bronze']]
Text: The inauguration date for the Atatürk Monument (İzmir), made of bronze, is 1932-07-27.
Subject: ['Atatürk Monument (İzmir)', 'Atatürk Monument (İzmir)']
Predicate: ['inaugurationDate', 'material']
Object: ['1932-07-27', 'Bronze']

Triple: [['__subject__ Atatürk Monument (İzmir) __predicate__ inaugurationDate __object__ 1932-07-27', '__subject__ Atatürk Monument (İzmir) __predicate__ material __object__ Bronze']]
Text: The inauguration date of the Atatürk Monument, made of bronze, in Izmir is the 27th of July, 1932.
Subject: ['Atatürk Monument (İzmir)', 'Atatürk Monument (İzmir)']
Predicate: ['inaugurationDate', 'material']
Object: ['1932-07-27', 'Bronze']

Triple: [['__subject__ Atatürk Monument (İzmir) __predicate__ inaugurationDate __object__ 1932-07-27', '__subject__ Atatürk Monument (İzmir) __predicate__ material __object__ Bronze']]
Text: Ataturk Monument (Izmir) was bronze and was inaugurated on 1932-07-27.
Subject: ['Atatürk Monument (İzmir)', 'Atatürk Monument (İzmir)']
Predicate: ['inaugurationDate', 'material']
Object: ['1932-07-27', 'Bronze']

Triple: [['__subject__ Atatürk Monument (İzmir) __predicate__ inaugurationDate __object__ 1932-07-27', '__subject__ Atatürk Monument (İzmir) __predicate__ material __object__ Bronze']]
Text: The Atatürk Monument (made of bronze) in Izmir was inaugurated on 1932-07-27.
Subject: ['Atatürk Monument (İzmir)', 'Atatürk Monument (İzmir)']
Predicate: ['inaugurationDate', 'material']
Object: ['1932-07-27', 'Bronze']

Triple: [['__subject__ Atatürk Monument (İzmir) __predicate__ inaugurationDate __object__ 1932-07-27', '__subject__ Atatürk Monument (İzmir) __predicate__ material __object__ Bronze']]
Text: The inauguration date of the bronze Ataturk Monument was July 27th, 1932.
Subject: ['Atatürk Monument (İzmir)', 'Atatürk Monument (İzmir)']
Predicate: ['inaugurationDate', 'material']
Object: ['1932-07-27', 'Bronze']

Triple: [['__subject__ Atatürk Monument (İzmir) __predicate__ material __object__ Bronze', '__subject__ Atatürk Monument (İzmir) __predicate__ designer __object__ Pietro Canonica']]
Text: Pietro Canonica is the designer of the Ataturk Monument in Izmir, which is made of bronze.
Subject: ['Atatürk Monument (İzmir)', 'Atatürk Monument (İzmir)']
Predicate: ['material', 'designer']
Object: ['Bronze', 'Pietro Canonica']

Triple: [['__subject__ Atatürk Monument (İzmir) __predicate__ material __object__ Bronze', '__subject__ Atatürk Monument (İzmir) __predicate__ designer __object__ Pietro Canonica']]
Text: The Atatürk Monument in Izmir, made of bronze, was designed by Pietro Canonica.
Subject: ['Atatürk Monument (İzmir)', 'Atatürk Monument (İzmir)']
Predicate: ['material', 'designer']
Object: ['Bronze', 'Pietro Canonica']

Triple: [['__subject__ Atatürk Monument (İzmir) __predicate__ material __object__ Bronze', '__subject__ Atatürk Monument (İzmir) __predicate__ designer __object__ Pietro Canonica']]
Text: The Ataturk Monument designed by Pietro Canonica is made of Bronze.
Subject: ['Atatürk Monument (İzmir)', 'Atatürk Monument (İzmir)']
Predicate: ['material', 'designer']
Object: ['Bronze', 'Pietro Canonica']

Triple: [['__subject__ Azerbaijan __predicate__ capital __object__ Baku', "__subject__ Baku Turkish Martyrs' Memorial __predicate__ location __object__ Azerbaijan"]]
Text: Turkish Martyrs' Memorial is located in Baku, the capital of Azerbaijan.
Subject: ['Azerbaijan', "Baku Turkish Martyrs' Memorial"]
Predicate: ['capital', 'location']
Object: ['Baku', 'Azerbaijan']

Triple: [['__subject__ Azerbaijan __predicate__ capital __object__ Baku', "__subject__ Baku Turkish Martyrs' Memorial __predicate__ location __object__ Azerbaijan"]]
Text: Baku Turkish Martyrs' Memorial is in Azerbaijan. The capital is Baku.
Subject: ['Azerbaijan', "Baku Turkish Martyrs' Memorial"]
Predicate: ['capital', 'location']
Object: ['Baku', 'Azerbaijan']

Triple: [['__subject__ Azerbaijan __predicate__ capital __object__ Baku', "__subject__ Baku Turkish Martyrs' Memorial __predicate__ location __object__ Azerbaijan"]]
Text: The Turkish martyrs memorial is located in Baku, the capital of Azerbaijan.
Subject: ['Azerbaijan', "Baku Turkish Martyrs' Memorial"]
Predicate: ['capital', 'location']
Object: ['Baku', 'Azerbaijan']

Triple: [['__subject__ Azerbaijan __predicate__ leaderTitle __object__ Prime Minister of Azerbaijan', "__subject__ Baku Turkish Martyrs' Memorial __predicate__ location __object__ Azerbaijan"]]
Text: The leader of Azerbaijan is called the Prime Minister. The Baku Turkish Martyrs' Memorial is in Azerbaijan.
Subject: ['Azerbaijan', "Baku Turkish Martyrs' Memorial"]
Predicate: ['leaderTitle', 'location']
Object: ['Prime Minister of Azerbaijan', 'Azerbaijan']

Triple: [['__subject__ Azerbaijan __predicate__ leaderTitle __object__ Prime Minister of Azerbaijan', "__subject__ Baku Turkish Martyrs' Memorial __predicate__ location __object__ Azerbaijan"]]
Text: Baku Turkish Martyrs' Memorial is located in Azerbaijan and the leader is The Prime Minister of Azerbaijan.
Subject: ['Azerbaijan', "Baku Turkish Martyrs' Memorial"]
Predicate: ['leaderTitle', 'location']
Object: ['Prime Minister of Azerbaijan', 'Azerbaijan']

Triple: [['__subject__ Azerbaijan __predicate__ leaderTitle __object__ Prime Minister of Azerbaijan', "__subject__ Baku Turkish Martyrs' Memorial __predicate__ location __object__ Azerbaijan"]]
Text: Azerbaijan's leader is the Prime Minister. The Baku Turkish Martyrs' Memorial is in Azerbaijan.
Subject: ['Azerbaijan', "Baku Turkish Martyrs' Memorial"]
Predicate: ['leaderTitle', 'location']
Object: ['Prime Minister of Azerbaijan', 'Azerbaijan']

Triple: [["__subject__ Baku Turkish Martyrs' Memorial __predicate__ designer __object__ Hüseyin Bütüner and Hilmi Güner", "__subject__ Baku Turkish Martyrs' Memorial __predicate__ material __object__ Red granite and white marble"]]
Text: Huseyin Butuner and Hilmi Guner created the Baku Turkish Martyrs' Memorial. It is made of red granite and white marble.
Subject: ["Baku Turkish Martyrs' Memorial", "Baku Turkish Martyrs' Memorial"]
Predicate: ['designer', 'material']
Object: ['Hüseyin Bütüner and Hilmi Güner', 'Red granite and white marble']

Triple: [["__subject__ Baku Turkish Martyrs' Memorial __predicate__ designer __object__ Hüseyin Bütüner and Hilmi Güner", "__subject__ Baku Turkish Martyrs' Memorial __predicate__ material __object__ Red granite and white marble"]]
Text: The designers of the Red granite and white marble Baku Turkish Martyrs' Memorial are Hüseyin Bütüner and Hilmi Güner.
Subject: ["Baku Turkish Martyrs' Memorial", "Baku Turkish Martyrs' Memorial"]
Predicate: ['designer', 'material']
Object: ['Hüseyin Bütüner and Hilmi Güner', 'Red granite and white marble']

Triple: [["__subject__ Baku Turkish Martyrs' Memorial __predicate__ designer __object__ Hüseyin Bütüner and Hilmi Güner", "__subject__ Baku Turkish Martyrs' Memorial __predicate__ material __object__ Red granite and white marble"]]
Text: The Baku Turkish Martyrs' Memorial is designed by Huseyin Butuner and Hilmi Guner and is made with red granite and white marble.
Subject: ["Baku Turkish Martyrs' Memorial", "Baku Turkish Martyrs' Memorial"]
Predicate: ['designer', 'material']
Object: ['Hüseyin Bütüner and Hilmi Güner', 'Red granite and white marble']

Triple: [["__subject__ Baku Turkish Martyrs' Memorial __predicate__ designer __object__ Hüseyin Bütüner and Hilmi Güner", "__subject__ Baku Turkish Martyrs' Memorial __predicate__ material __object__ Red granite and white marble"]]
Text: The Baku Turkish Martyrs' Memorial, designed by Hüseyin Bütüner and Hilmi Güner, is made out of red granite and white marble.
Subject: ["Baku Turkish Martyrs' Memorial", "Baku Turkish Martyrs' Memorial"]
Predicate: ['designer', 'material']
Object: ['Hüseyin Bütüner and Hilmi Güner', 'Red granite and white marble']

Triple: [["__subject__ Baku Turkish Martyrs' Memorial __predicate__ designer __object__ Hüseyin Bütüner and Hilmi Güner", "__subject__ Baku Turkish Martyrs' Memorial __predicate__ material __object__ Red granite and white marble"]]
Text: Huseyin Butuner and Hilmi Guner designed the Baku Turkish Martyrs' Monument which is made of red granite and white marble.
Subject: ["Baku Turkish Martyrs' Memorial", "Baku Turkish Martyrs' Memorial"]
Predicate: ['designer', 'material']
Object: ['Hüseyin Bütüner and Hilmi Güner', 'Red granite and white marble']

Triple: [["__subject__ Baku Turkish Martyrs' Memorial __predicate__ location __object__ Azerbaijan", '__subject__ Azerbaijan __predicate__ legislature __object__ National Assembly (Azerbaijan)']]
Text: The National Assembly dictates the legislature of Azerbaijan, where the Baku Turkish Martyrs' Memorial is found.
Subject: ["Baku Turkish Martyrs' Memorial", 'Azerbaijan']
Predicate: ['location', 'legislature']
Object: ['Azerbaijan', 'National Assembly (Azerbaijan)']

Triple: [["__subject__ Baku Turkish Martyrs' Memorial __predicate__ location __object__ Azerbaijan", '__subject__ Azerbaijan __predicate__ legislature __object__ National Assembly (Azerbaijan)']]
Text: The National Assembly (Azerbaijan) is the source of legislature in Azerbaijan, where the Baku Turkish Martyrs' Memorial is located.
Subject: ["Baku Turkish Martyrs' Memorial", 'Azerbaijan']
Predicate: ['location', 'legislature']
Object: ['Azerbaijan', 'National Assembly (Azerbaijan)']

Triple: [["__subject__ Baku Turkish Martyrs' Memorial __predicate__ location __object__ Azerbaijan", "__subject__ Baku Turkish Martyrs' Memorial __predicate__ material __object__ Red granite and white marble"]]
Text: The Baku Turkish Martyrs' Memorial made of red granite and white marble can be found in Azerbaijan.
Subject: ["Baku Turkish Martyrs' Memorial", "Baku Turkish Martyrs' Memorial"]
Predicate: ['location', 'material']
Object: ['Azerbaijan', 'Red granite and white marble']

Triple: [["__subject__ Baku Turkish Martyrs' Memorial __predicate__ location __object__ Azerbaijan", "__subject__ Baku Turkish Martyrs' Memorial __predicate__ material __object__ Red granite and white marble"]]
Text: Baku Turkish Martyrs' Memorial is located in Azerbaijan and made of red granite and white marble.
Subject: ["Baku Turkish Martyrs' Memorial", "Baku Turkish Martyrs' Memorial"]
Predicate: ['location', 'material']
Object: ['Azerbaijan', 'Red granite and white marble']

Triple: [["__subject__ Baku Turkish Martyrs' Memorial __predicate__ nativeName __object__ Türk Şehitleri Anıtı", "__subject__ Baku Turkish Martyrs' Memorial __predicate__ designer __object__ Hüseyin Bütüner and Hilmi Güner"]]
Text: The native name for the Baku Turkish Martyrs' Memorial, designed by Hüseyin Bütüner and Hilmi Güner is Türk Şehitleri Anıtı.
Subject: ["Baku Turkish Martyrs' Memorial", "Baku Turkish Martyrs' Memorial"]
Predicate: ['nativeName', 'designer']
Object: ['Türk Şehitleri Anıtı', 'Hüseyin Bütüner and Hilmi Güner']

Triple: [["__subject__ Baku Turkish Martyrs' Memorial __predicate__ nativeName __object__ Türk Şehitleri Anıtı", "__subject__ Baku Turkish Martyrs' Memorial __predicate__ designer __object__ Hüseyin Bütüner and Hilmi Güner"]]
Text: The Baku Turkish Martyrs'Memorial which is know locally as Turk Sehitleri Aniti was designed by Huseyin Butuner and Hilmi Guner.
Subject: ["Baku Turkish Martyrs' Memorial", "Baku Turkish Martyrs' Memorial"]
Predicate: ['nativeName', 'designer']
Object: ['Türk Şehitleri Anıtı', 'Hüseyin Bütüner and Hilmi Güner']

Triple: [["__subject__ Baku Turkish Martyrs' Memorial __predicate__ nativeName __object__ Türk Şehitleri Anıtı", "__subject__ Baku Turkish Martyrs' Memorial __predicate__ designer __object__ Hüseyin Bütüner and Hilmi Güner"]]
Text: The Baku Turkish Martyrs' Memorial is known in Turkish as Turk Sehitleri Aniti and the designers are Hüseyin Bütüner and Hilmi Güner.
Subject: ["Baku Turkish Martyrs' Memorial", "Baku Turkish Martyrs' Memorial"]
Predicate: ['nativeName', 'designer']
Object: ['Türk Şehitleri Anıtı', 'Hüseyin Bütüner and Hilmi Güner']

Triple: [["__subject__ Dead Man's Plack __predicate__ location __object__ England", "__subject__ Dead Man's Plack __predicate__ material __object__ Rock (geology)"]]
Text: The Dead Man's Plack is made from rock and is in ENgland.
Subject: ["Dead Man's Plack", "Dead Man's Plack"]
Predicate: ['location', 'material']
Object: ['England', 'Rock (geology)']

Triple: [["__subject__ Dead Man's Plack __predicate__ location __object__ England", '__subject__ England __predicate__ capital __object__ London']]
Text: The Dead Man's Plack is located in England, the capital of which is London.
Subject: ["Dead Man's Plack", 'England']
Predicate: ['location', 'capital']
Object: ['England', 'London']

Triple: [["__subject__ Dead Man's Plack __predicate__ location __object__ England", '__subject__ England __predicate__ capital __object__ London']]
Text: The Dead Man's Plack is in London, England.
Subject: ["Dead Man's Plack", 'England']
Predicate: ['location', 'capital']
Object: ['England', 'London']

Triple: [["__subject__ Dead Man's Plack __predicate__ location __object__ England", '__subject__ England __predicate__ ethnicGroup __object__ British Arabs']]
Text: Dead Man's Plack is in England and one of the ethnic groups found in England is the British Arabs.
Subject: ["Dead Man's Plack", 'England']
Predicate: ['location', 'ethnicGroup']
Object: ['England', 'British Arabs']

Triple: [["__subject__ Dead Man's Plack __predicate__ location __object__ England", '__subject__ England __predicate__ ethnicGroup __object__ British Arabs']]
Text: The Dead Man's Plack is in England honoring the British Arab ethnic group.
Subject: ["Dead Man's Plack", 'England']
Predicate: ['location', 'ethnicGroup']
Object: ['England', 'British Arabs']

Triple: [["__subject__ Dead Man's Plack __predicate__ location __object__ England", '__subject__ England __predicate__ ethnicGroup __object__ British Arabs']]
Text: The Dead Man's Plack is located in England, where one of the ethnic groups is the British Arabs.
Subject: ["Dead Man's Plack", 'England']
Predicate: ['location', 'ethnicGroup']
Object: ['England', 'British Arabs']

Triple: [['__subject__ Monocacy National Battlefield __predicate__ location __object__ Frederick County, Maryland', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ district __object__ Monocacy National Battlefield']]
Text: The 14th New Jersey Volunteer Infantry Monument is found in the Monocacy National Battlefield which is located in Frederick County, Maryland.
Subject: ['Monocacy National Battlefield', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['location', 'district']
Object: ['Frederick County, Maryland', 'Monocacy National Battlefield']

Triple: [['__subject__ Monocacy National Battlefield __predicate__ location __object__ Frederick County, Maryland', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ district __object__ Monocacy National Battlefield']]
Text: The 14th New Jersey Volunteer Infantry Monument is located in the district of the Monocacy National Battlefield which is located Frederick County, Maryland.
Subject: ['Monocacy National Battlefield', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['location', 'district']
Object: ['Frederick County, Maryland', 'Monocacy National Battlefield']

Triple: [['__subject__ Monocacy National Battlefield __predicate__ location __object__ Frederick County, Maryland', '__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ district __object__ Monocacy National Battlefield']]
Text: The 14th New Jersey Volunteer Infantry Monument is in the Monocacy National Battlefield in Frederick County, Maryland.
Subject: ['Monocacy National Battlefield', '14th New Jersey Volunteer Infantry Monument']
Predicate: ['location', 'district']
Object: ['Frederick County, Maryland', 'Monocacy National Battlefield']

Triple: [['__subject__ Turkey __predicate__ capital __object__ Ankara', '__subject__ Atatürk Monument (İzmir) __predicate__ location __object__ Turkey']]
Text: The Atatürk Monument is located in Izmir, Turkey, where the capital is Ankara.
Subject: ['Turkey', 'Atatürk Monument (İzmir)']
Predicate: ['capital', 'location']
Object: ['Ankara', 'Turkey']

Triple: [['__subject__ Turkey __predicate__ capital __object__ Ankara', '__subject__ Atatürk Monument (İzmir) __predicate__ location __object__ Turkey']]
Text: The Atatürk Monument is located in İzmir, Turkey which capital is Ankara.
Subject: ['Turkey', 'Atatürk Monument (İzmir)']
Predicate: ['capital', 'location']
Object: ['Ankara', 'Turkey']

Triple: [['__subject__ Turkey __predicate__ currency __object__ Turkish lira', '__subject__ Atatürk Monument (İzmir) __predicate__ location __object__ Turkey']]
Text: The Atatürk Monument (İzmir) is found in Turkey where the currency is the Turkish Lira.
Subject: ['Turkey', 'Atatürk Monument (İzmir)']
Predicate: ['currency', 'location']
Object: ['Turkish lira', 'Turkey']

Triple: [['__subject__ Turkey __predicate__ currency __object__ Turkish lira', '__subject__ Atatürk Monument (İzmir) __predicate__ location __object__ Turkey']]
Text: The Atatürk Monument is in Turkey, where the currency is the lira.
Subject: ['Turkey', 'Atatürk Monument (İzmir)']
Predicate: ['currency', 'location']
Object: ['Turkish lira', 'Turkey']

Triple: [['__subject__ Turkey __predicate__ largestCity __object__ Istanbul', '__subject__ Atatürk Monument (İzmir) __predicate__ location __object__ Turkey']]
Text: The Atatürk Monument is in Turkey which largest city is Istanbul.
Subject: ['Turkey', 'Atatürk Monument (İzmir)']
Predicate: ['largestCity', 'location']
Object: ['Istanbul', 'Turkey']

Triple: [['__subject__ Turkey __predicate__ largestCity __object__ Istanbul', '__subject__ Atatürk Monument (İzmir) __predicate__ location __object__ Turkey']]
Text: Istanbul is the largest city in Turkey, where the Atatürk Monument is located.
Subject: ['Turkey', 'Atatürk Monument (İzmir)']
Predicate: ['largestCity', 'location']
Object: ['Istanbul', 'Turkey']

Triple: [['__subject__ Aaron S. Daggett __predicate__ award __object__ Purple Heart', '__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Salem Church']]
Text: Aaron S Daggett fought in the Battle of Salem Church and was awarded the Purple Heart.
Subject: ['Aaron S. Daggett', 'Aaron S. Daggett']
Predicate: ['award', 'battle']
Object: ['Purple Heart', 'Battle of Salem Church']

Triple: [['__subject__ Aaron S. Daggett __predicate__ award __object__ Purple Heart', '__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Salem Church']]
Text: Aaron S. Daggett, fought in the Battle of Salem Church and was awarded the Purple Heart.
Subject: ['Aaron S. Daggett', 'Aaron S. Daggett']
Predicate: ['award', 'battle']
Object: ['Purple Heart', 'Battle of Salem Church']

Triple: [['__subject__ Aaron S. Daggett __predicate__ award __object__ Purple Heart', '__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Salem Church']]
Text: Aaron S Daggett, who fought in the Battle of Salem Church, was awarded the Purple Heart.
Subject: ['Aaron S. Daggett', 'Aaron S. Daggett']
Predicate: ['award', 'battle']
Object: ['Purple Heart', 'Battle of Salem Church']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ American Civil War', '__subject__ Aaron S. Daggett __predicate__ award __object__ Purple Heart']]
Text: Aaron S. Daggett fought in the American Civil War. He was given the Purple Heart.
Subject: ['Aaron S. Daggett', 'Aaron S. Daggett']
Predicate: ['battle', 'award']
Object: ['American Civil War', 'Purple Heart']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ American Civil War', '__subject__ Aaron S. Daggett __predicate__ award __object__ Purple Heart']]
Text: Aaron S. Daggett fought in battles in the American Civil War and was awarded the Purple Heart.
Subject: ['Aaron S. Daggett', 'Aaron S. Daggett']
Predicate: ['battle', 'award']
Object: ['American Civil War', 'Purple Heart']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ American Civil War', '__subject__ Aaron S. Daggett __predicate__ award __object__ Purple Heart']]
Text: Aaron S. Daggett, fought in the American Civil War, and was awarded the Purple Heart.
Subject: ['Aaron S. Daggett', 'Aaron S. Daggett']
Predicate: ['battle', 'award']
Object: ['American Civil War', 'Purple Heart']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ American Civil War', '__subject__ American Civil War __predicate__ commander __object__ Abraham Lincoln']]
Text: Aaron S. Daggett fought in the American Civil War, where Abraham Lincoln was a commander.
Subject: ['Aaron S. Daggett', 'American Civil War']
Predicate: ['battle', 'commander']
Object: ['American Civil War', 'Abraham Lincoln']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ American Civil War', '__subject__ American Civil War __predicate__ commander __object__ Abraham Lincoln']]
Text: Aaron S. Daggett fought in the American Civil War, the war in which Abraham Lincoln was a commander.
Subject: ['Aaron S. Daggett', 'American Civil War']
Predicate: ['battle', 'commander']
Object: ['American Civil War', 'Abraham Lincoln']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ American Civil War', '__subject__ American Civil War __predicate__ commander __object__ Abraham Lincoln']]
Text: Aaron S. Daggett fought in the American Civil War in which Abraham Lincoln was a commander.
Subject: ['Aaron S. Daggett', 'American Civil War']
Predicate: ['battle', 'commander']
Object: ['American Civil War', 'Abraham Lincoln']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ American Civil War', '__subject__ American Civil War __predicate__ commander __object__ Jefferson Davis']]
Text: Aaron S. Daggett fought in the American Civil War where Jefferson Davis was a commander.
Subject: ['Aaron S. Daggett', 'American Civil War']
Predicate: ['battle', 'commander']
Object: ['American Civil War', 'Jefferson Davis']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ American Civil War', '__subject__ American Civil War __predicate__ commander __object__ Jefferson Davis']]
Text: Aaron S. Daggett fought in battles in the American Civil War, during which one of the commanders was, Jefferson Davis.
Subject: ['Aaron S. Daggett', 'American Civil War']
Predicate: ['battle', 'commander']
Object: ['American Civil War', 'Jefferson Davis']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ American Civil War', '__subject__ American Civil War __predicate__ commander __object__ Jefferson Davis']]
Text: Aaron S. Daggett fought in the American Civil War, where Jefferson Davis was a commander.
Subject: ['Aaron S. Daggett', 'American Civil War']
Predicate: ['battle', 'commander']
Object: ['American Civil War', 'Jefferson Davis']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Cold Harbor', '__subject__ Battle of Cold Harbor __predicate__ commander __object__ Robert E. Lee']]
Text: Aaron S. Daggett fought in the Battle of Cold Harbor where Robert E. Lee was the commander.
Subject: ['Aaron S. Daggett', 'Battle of Cold Harbor']
Predicate: ['battle', 'commander']
Object: ['Battle of Cold Harbor', 'Robert E. Lee']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Cold Harbor', '__subject__ Battle of Cold Harbor __predicate__ commander __object__ Robert E. Lee']]
Text: Aaron S Daggett took part in the Battle of Cold Harbor, the battle where one of the commanders was, Robert E. Lee.
Subject: ['Aaron S. Daggett', 'Battle of Cold Harbor']
Predicate: ['battle', 'commander']
Object: ['Battle of Cold Harbor', 'Robert E. Lee']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Cold Harbor', '__subject__ Battle of Cold Harbor __predicate__ commander __object__ Robert E. Lee']]
Text: Aaron S. Daggett fought in the Battle of Cold Harbor where Robert E Lee was the commander.
Subject: ['Aaron S. Daggett', 'Battle of Cold Harbor']
Predicate: ['battle', 'commander']
Object: ['Battle of Cold Harbor', 'Robert E. Lee']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Fredericksburg', '__subject__ Battle of Fredericksburg __predicate__ commander __object__ Robert E. Lee']]
Text: Aaron S. Daggett fought in the Battle of Fredericksburg where Robert E Lee was as a commander.
Subject: ['Aaron S. Daggett', 'Battle of Fredericksburg']
Predicate: ['battle', 'commander']
Object: ['Battle of Fredericksburg', 'Robert E. Lee']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Fredericksburg', '__subject__ Battle of Fredericksburg __predicate__ commander __object__ Robert E. Lee']]
Text: Aaron S. Daggett fought in the Battle of Fredericksburg; where Robert E. Lee was a commander.
Subject: ['Aaron S. Daggett', 'Battle of Fredericksburg']
Predicate: ['battle', 'commander']
Object: ['Battle of Fredericksburg', 'Robert E. Lee']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Fredericksburg', '__subject__ Battle of Fredericksburg __predicate__ commander __object__ Robert E. Lee']]
Text: Aaron S. Daggett fought in the Battle of Fredericksburg, where one of the commanders was Robert E. Lee.
Subject: ['Aaron S. Daggett', 'Battle of Fredericksburg']
Predicate: ['battle', 'commander']
Object: ['Battle of Fredericksburg', 'Robert E. Lee']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Gettysburg', '__subject__ Battle of Gettysburg __predicate__ commander __object__ Robert E. Lee']]
Text: Aaron S. Daggett participated in the Battle of Gettysburg and Robert E. Lee was a commander in that war.
Subject: ['Aaron S. Daggett', 'Battle of Gettysburg']
Predicate: ['battle', 'commander']
Object: ['Battle of Gettysburg', 'Robert E. Lee']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Gettysburg', '__subject__ Battle of Gettysburg __predicate__ commander __object__ Robert E. Lee']]
Text: Aaron S Daggett fought at the Battle of Gettysburg in which Robert E Lee was a commander.
Subject: ['Aaron S. Daggett', 'Battle of Gettysburg']
Predicate: ['battle', 'commander']
Object: ['Battle of Gettysburg', 'Robert E. Lee']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Gettysburg', '__subject__ Battle of Gettysburg __predicate__ commander __object__ Robert E. Lee']]
Text: Aaron S. Daggett was in the Battle of Gettysburg that was commanded by Robert E. Lee.
Subject: ['Aaron S. Daggett', 'Battle of Gettysburg']
Predicate: ['battle', 'commander']
Object: ['Battle of Gettysburg', 'Robert E. Lee']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of the Wilderness', '__subject__ Aaron S. Daggett __predicate__ award __object__ Purple Heart']]
Text: Aaron S Daggett fought in the Battle of the Wilderness and was awarded the Purple Heart.
Subject: ['Aaron S. Daggett', 'Aaron S. Daggett']
Predicate: ['battle', 'award']
Object: ['Battle of the Wilderness', 'Purple Heart']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of the Wilderness', '__subject__ Aaron S. Daggett __predicate__ award __object__ Purple Heart']]
Text: Awarded the Purple Heart, Aaron S. Daggett, was part of a number of battles, including, the Battle of the Wilderness.
Subject: ['Aaron S. Daggett', 'Aaron S. Daggett']
Predicate: ['battle', 'award']
Object: ['Battle of the Wilderness', 'Purple Heart']

Triple: [['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of the Wilderness', '__subject__ Aaron S. Daggett __predicate__ award __object__ Purple Heart']]
Text: Aaron S. Daggett was given the Purple Heart. He fought in the Battle of the Wilderness.
Subject: ['Aaron S. Daggett', 'Aaron S. Daggett']
Predicate: ['battle', 'award']
Object: ['Battle of the Wilderness', 'Purple Heart']

Triple: [['__subject__ Ab Klink __predicate__ almaMater __object__ Erasmus University Rotterdam', '__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands']]
Text: The alma mater of Netherlands born, Ab Klink, is Erasmus University in Rotterdam.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['almaMater', 'birthPlace']
Object: ['Erasmus University Rotterdam', 'Netherlands']

Triple: [['__subject__ Ab Klink __predicate__ almaMater __object__ Erasmus University Rotterdam', '__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands']]
Text: Ab Klink, who was born in the Netherlands, attended Erasmus University Rotterdam.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['almaMater', 'birthPlace']
Object: ['Erasmus University Rotterdam', 'Netherlands']

Triple: [['__subject__ Ab Klink __predicate__ almaMater __object__ Erasmus University Rotterdam', '__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands']]
Text: Ab Klink was born in the Netherlands and attended Erasmus University Rotterdam.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['almaMater', 'birthPlace']
Object: ['Erasmus University Rotterdam', 'Netherlands']

Triple: [['__subject__ Ab Klink __predicate__ almaMater __object__ Erasmus University Rotterdam', '__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam']]
Text: Ab Klink was born in Stellendam and graduated from Erasmus University Rotterdam.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['almaMater', 'birthPlace']
Object: ['Erasmus University Rotterdam', 'Stellendam']

Triple: [['__subject__ Ab Klink __predicate__ almaMater __object__ Erasmus University Rotterdam', '__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam']]
Text: Ab Klink, born in Stellendam, went to the Erasmus University Rotterdam.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['almaMater', 'birthPlace']
Object: ['Erasmus University Rotterdam', 'Stellendam']

Triple: [['__subject__ Ab Klink __predicate__ almaMater __object__ Erasmus University Rotterdam', '__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam']]
Text: Ab Klink was born in Stellendam and his alma mater is Erasmus University Rotterdam.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['almaMater', 'birthPlace']
Object: ['Erasmus University Rotterdam', 'Stellendam']

Triple: [['__subject__ Ab Klink __predicate__ almaMater __object__ Erasmus University Rotterdam', '__subject__ Erasmus University Rotterdam __predicate__ affiliation __object__ Association of MBAs']]
Text: Ab Klink's Alma mater is Erasmus University Rotterdam, which is affiliated to the Association of MBAs.
Subject: ['Ab Klink', 'Erasmus University Rotterdam']
Predicate: ['almaMater', 'affiliation']
Object: ['Erasmus University Rotterdam', 'Association of MBAs']

Triple: [['__subject__ Ab Klink __predicate__ almaMater __object__ Erasmus University Rotterdam', '__subject__ Erasmus University Rotterdam __predicate__ affiliation __object__ Association of MBAs']]
Text: Ab Klink's Alma mater is Erasmus University Rotterdam, which is affiliated to Association of MBAs.
Subject: ['Ab Klink', 'Erasmus University Rotterdam']
Predicate: ['almaMater', 'affiliation']
Object: ['Erasmus University Rotterdam', 'Association of MBAs']

Triple: [['__subject__ Ab Klink __predicate__ almaMater __object__ Erasmus University Rotterdam', '__subject__ Erasmus University Rotterdam __predicate__ affiliation __object__ Association of MBAs']]
Text: The alma mater of Ab Klink, is Erasmus University in Rotterdam, which is affiliated to Association of MBAs.
Subject: ['Ab Klink', 'Erasmus University Rotterdam']
Predicate: ['almaMater', 'affiliation']
Object: ['Erasmus University Rotterdam', 'Association of MBAs']

Triple: [['__subject__ Ab Klink __predicate__ almaMater __object__ Leiden University', '__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands']]
Text: Ab Klink was born in the Netherlands and graduated from Leiden University.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['almaMater', 'birthPlace']
Object: ['Leiden University', 'Netherlands']

Triple: [['__subject__ Ab Klink __predicate__ almaMater __object__ Leiden University', '__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands']]
Text: Ab Klink, born in the Netherlands, attended Leiden University.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['almaMater', 'birthPlace']
Object: ['Leiden University', 'Netherlands']

Triple: [['__subject__ Ab Klink __predicate__ almaMater __object__ Leiden University', '__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands']]
Text: Ab Klink, who was born in Netherlands, attended Leiden University.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['almaMater', 'birthPlace']
Object: ['Leiden University', 'Netherlands']

Triple: [['__subject__ Ab Klink __predicate__ almaMater __object__ Leiden University', '__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam']]
Text: Ab Klink was born in Stellendam and graduated from Leiden University.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['almaMater', 'birthPlace']
Object: ['Leiden University', 'Stellendam']

Triple: [['__subject__ Ab Klink __predicate__ almaMater __object__ Leiden University', '__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam']]
Text: Ab Klink, born in Stellendam, attended Leiden University.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['almaMater', 'birthPlace']
Object: ['Leiden University', 'Stellendam']

Triple: [['__subject__ Ab Klink __predicate__ almaMater __object__ Leiden University', '__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam']]
Text: Ab Klink, born in Stellendam, graduated from Leiden University.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['almaMater', 'birthPlace']
Object: ['Leiden University', 'Stellendam']

Triple: [['__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands', '__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam, Netherlands']]
Text: Ab Klink was born in Stellendam in the Netherlands.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Netherlands', 'Stellendam, Netherlands']

Triple: [['__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands', '__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam, Netherlands']]
Text: Ab Klink was born in Stellendam which is in the Netherlands.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Netherlands', 'Stellendam, Netherlands']

Triple: [['__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam', '__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam, Netherlands']]
Text: Ab Klink was born in Stellendam in the Netherlands.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Stellendam', 'Stellendam, Netherlands']

Triple: [['__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam', '__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam, Netherlands']]
Text: Ab Klink's place of birth, was Stellendam, in the Netherlands.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Stellendam', 'Stellendam, Netherlands']

Triple: [['__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam', '__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam, Netherlands']]
Text: Ab Klink was born in Stellendam, the Netherlands.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Stellendam', 'Stellendam, Netherlands']

Triple: [['__subject__ Ab Klink __predicate__ nationality __object__ Netherlands', '__subject__ Netherlands __predicate__ leader __object__ Mark Rutte']]
Text: Ab Klink is from the Netherlands where Mark Rutte is the leader.
Subject: ['Ab Klink', 'Netherlands']
Predicate: ['nationality', 'leader']
Object: ['Netherlands', 'Mark Rutte']

Triple: [['__subject__ Ab Klink __predicate__ party __object__ Christian Democratic Appeal', '__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands']]
Text: Born in the Netherlands, Ab Klink, belongs to the Christian Democratic Appeal party.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['party', 'birthPlace']
Object: ['Christian Democratic Appeal', 'Netherlands']

Triple: [['__subject__ Ab Klink __predicate__ party __object__ Christian Democratic Appeal', '__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands']]
Text: Ab Klink, who was born in the Netherlands, belongs to the Christian Democratic Appeal Party.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['party', 'birthPlace']
Object: ['Christian Democratic Appeal', 'Netherlands']

Triple: [['__subject__ Ab Klink __predicate__ party __object__ Christian Democratic Appeal', '__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands']]
Text: Ab Klink waas born in the Netherlands and belongs to the Christian Democratic Appeal party.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['party', 'birthPlace']
Object: ['Christian Democratic Appeal', 'Netherlands']

Triple: [['__subject__ Ab Klink __predicate__ party __object__ Christian Democratic Appeal', '__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam']]
Text: Ab Klink was born in Stellendam and belongs to the Christian Democratic Appeal party.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['party', 'birthPlace']
Object: ['Christian Democratic Appeal', 'Stellendam']

Triple: [['__subject__ Ab Klink __predicate__ party __object__ Christian Democratic Appeal', '__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam']]
Text: Born in Stellendam, Ab Klink, belongs to the Christian Democratic Appeal party.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['party', 'birthPlace']
Object: ['Christian Democratic Appeal', 'Stellendam']

Triple: [['__subject__ Ab Klink __predicate__ party __object__ Christian Democratic Appeal', '__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam']]
Text: Ab Klink, born in Stellendam, belongs to the Christian Democratic Appeal party.
Subject: ['Ab Klink', 'Ab Klink']
Predicate: ['party', 'birthPlace']
Object: ['Christian Democratic Appeal', 'Stellendam']

Triple: [["__subject__ Abdul Rahman Ya'kub __predicate__ inOfficeWhileVicePresident __object__ Tuanku Bujang Tuanku Othman", "__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Abdul Rahman Ya'kub"]]
Text: Abdul Rahman Ya'kub, the successor of Abdul Taib Mahmud, was in office whilst Tuanku Bujang Tuanku Othman was Vice President.
Subject: ["Abdul Rahman Ya'kub", 'Abdul Taib Mahmud']
Predicate: ['inOfficeWhileVicePresident', 'successor']
Object: ['Tuanku Bujang Tuanku Othman', "Abdul Rahman Ya'kub"]

Triple: [["__subject__ Abdul Rahman Ya'kub __predicate__ inOfficeWhileVicePresident __object__ Tuanku Bujang Tuanku Othman", "__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Abdul Rahman Ya'kub"]]
Text: Abdul Rahman Ya'kub, succeeded Abdul Taib Mahmud, and was in office while Tuanku Bujang Tuanku Othman was Vice President.
Subject: ["Abdul Rahman Ya'kub", 'Abdul Taib Mahmud']
Predicate: ['inOfficeWhileVicePresident', 'successor']
Object: ['Tuanku Bujang Tuanku Othman', "Abdul Rahman Ya'kub"]

Triple: [["__subject__ Abdul Rahman Ya'kub __predicate__ inOfficeWhileVicePresident __object__ Tuanku Bujang Tuanku Othman", "__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Abdul Rahman Ya'kub"]]
Text: Abdul Rahman Ya'kub (who was succeeded Abdul Taib Mahmud), was in office whilst Tuanku Bujang Tuanku Othman was Vice President.
Subject: ["Abdul Rahman Ya'kub", 'Abdul Taib Mahmud']
Predicate: ['inOfficeWhileVicePresident', 'successor']
Object: ['Tuanku Bujang Tuanku Othman', "Abdul Rahman Ya'kub"]

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak', "__subject__ Abdul Taib Mahmud __predicate__ party __object__ Barisan Ra'ayat Jati Sarawak"]]
Text: Abdul Taib Mahmud who is a member of Barisan Ra'ayat Jati Sarawak party, was born in the Kingdom of Sarawak.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'party']
Object: ['Kingdom of Sarawak', "Barisan Ra'ayat Jati Sarawak"]

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak', "__subject__ Abdul Taib Mahmud __predicate__ party __object__ Barisan Ra'ayat Jati Sarawak"]]
Text: Abdul Taib Mahmud, who was born in Sarawak, is a member of Barisan Ra'ayat Jati Sarawak Party.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'party']
Object: ['Kingdom of Sarawak', "Barisan Ra'ayat Jati Sarawak"]

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak', "__subject__ Abdul Taib Mahmud __predicate__ party __object__ Barisan Ra'ayat Jati Sarawak"]]
Text: Abdul Taib Mahmud, was born in the Kingdom of Sarawak, and is a member of the "Barisan Ra'ayat Jati Sarawak" party.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'party']
Object: ['Kingdom of Sarawak', "Barisan Ra'ayat Jati Sarawak"]

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak', '__subject__ Abdul Taib Mahmud __predicate__ party __object__ Parti Bumiputera Sarawak']]
Text: Abdul Taib Mahmud was born in the Kingdom of Sarawak and is a member of the Parti Bumiputera Sarawak Party.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'party']
Object: ['Kingdom of Sarawak', 'Parti Bumiputera Sarawak']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak', '__subject__ Abdul Taib Mahmud __predicate__ party __object__ Parti Bumiputera Sarawak']]
Text: Born in the Kingdom of Sarawak, Abdul Taib Mahmud, is a member of the Parti Bumiputera Sarawak Party.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'party']
Object: ['Kingdom of Sarawak', 'Parti Bumiputera Sarawak']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak', '__subject__ Abdul Taib Mahmud __predicate__ party __object__ Parti Bumiputera Sarawak']]
Text: Abdul Taib Mahmud was born in the Kingdom of Sarawak and belongs to the party of Parti Bumiputera Sarawak.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'party']
Object: ['Kingdom of Sarawak', 'Parti Bumiputera Sarawak']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak', '__subject__ Abdul Taib Mahmud __predicate__ residence __object__ Demak Jaya, Jalan Bako, Kuching, Sarawak']]
Text: Abdul Taib Mahmud was born in Sarawak and lives in Demak Jaya, Jalan Bako, Kuching, Sarawak.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'residence']
Object: ['Kingdom of Sarawak', 'Demak Jaya, Jalan Bako, Kuching, Sarawak']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak', '__subject__ Abdul Taib Mahmud __predicate__ residence __object__ Demak Jaya, Jalan Bako, Kuching, Sarawak']]
Text: Abdul Taib Mahmud's birthplace was Kingdom of Sarawak and he resided in Demak Jaya, Jalan Bako, Kuching, Sarawak.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'residence']
Object: ['Kingdom of Sarawak', 'Demak Jaya, Jalan Bako, Kuching, Sarawak']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak', '__subject__ Abdul Taib Mahmud __predicate__ residence __object__ Demak Jaya, Jalan Bako, Kuching, Sarawak']]
Text: Abdul Taib Mahmud was born in the Kingdom of Sarawak and lives in Demak Jaya, Jalan Bako, Kuching, Sarawak.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'residence']
Object: ['Kingdom of Sarawak', 'Demak Jaya, Jalan Bako, Kuching, Sarawak']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak', "__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Abdul Rahman Ya'kub"]]
Text: Born in Kingdom of Sarawak, Abdul Taib Mahmud's successor was, Abdul Rahman Ya'kub.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'successor']
Object: ['Kingdom of Sarawak', "Abdul Rahman Ya'kub"]

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak', "__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Abdul Rahman Ya'kub"]]
Text: Abdul Taib Mahmud, who was succeeded by Abdul Rahman Ya'Kub, was born in the Kingdom of Sarawak.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'successor']
Object: ['Kingdom of Sarawak', "Abdul Rahman Ya'kub"]

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak', "__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Abdul Rahman Ya'kub"]]
Text: Abdul Taib Mahmud was born in the Kingdom of Sarawak and he was succeeded by Abdul Rahman Ya'kub.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'successor']
Object: ['Kingdom of Sarawak', "Abdul Rahman Ya'kub"]

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak', '__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Sulaiman Abdul Rahman Taib']]
Text: Abdul Taib Mahmud, born in the Kingdom of Sarawak, was succeeded by, Sulaiman Abdul Rahman Taib.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'successor']
Object: ['Kingdom of Sarawak', 'Sulaiman Abdul Rahman Taib']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak', '__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Sulaiman Abdul Rahman Taib']]
Text: Abdul Taib Mahmud was born in the Kingdom of Sarawak and his successor was Sulaiman Abdul Rahman Taib.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'successor']
Object: ['Kingdom of Sarawak', 'Sulaiman Abdul Rahman Taib']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak', '__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Sulaiman Abdul Rahman Taib']]
Text: Abdul Taib Mahmud was born in the Kingdom of Sarawak and was succeded by Sulaiman Abdul Rahman Taib.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'successor']
Object: ['Kingdom of Sarawak', 'Sulaiman Abdul Rahman Taib']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia', "__subject__ Abdul Taib Mahmud __predicate__ party __object__ Barisan Ra'ayat Jati Sarawak"]]
Text: Born in Miri, Malaysia, Abdul Taib Mahmud, is a member of Barisan Ra'ayat Jati Sarawak party.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'party']
Object: ['Miri, Malaysia', "Barisan Ra'ayat Jati Sarawak"]

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia', "__subject__ Abdul Taib Mahmud __predicate__ party __object__ Barisan Ra'ayat Jati Sarawak"]]
Text: Miri, Malaysia, is the birthplace of Abdul Taib Mahmud, who is a member of Barisan Ra'ayat Jati Sarawak party.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'party']
Object: ['Miri, Malaysia', "Barisan Ra'ayat Jati Sarawak"]

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia', "__subject__ Abdul Taib Mahmud __predicate__ party __object__ Barisan Ra'ayat Jati Sarawak"]]
Text: Abdul Taib Mahmud was born in Miri, Malaysia and is part of the Barisan Ra'ayat Jati Sarawak party.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'party']
Object: ['Miri, Malaysia', "Barisan Ra'ayat Jati Sarawak"]

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia', '__subject__ Abdul Taib Mahmud __predicate__ party __object__ Parti Bumiputera Sarawak']]
Text: Abdul Taib Mahmud, who was born in Miri, Malaysia, is a member of the Parti Bumiputera Sarawak Party.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'party']
Object: ['Miri, Malaysia', 'Parti Bumiputera Sarawak']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia', '__subject__ Abdul Taib Mahmud __predicate__ party __object__ Parti Bumiputera Sarawak']]
Text: Abdul Taib Mahmud was born in Miri, Malaysia, and is a member of the Parti Bumiputera Sarawak Party.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'party']
Object: ['Miri, Malaysia', 'Parti Bumiputera Sarawak']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia', '__subject__ Abdul Taib Mahmud __predicate__ party __object__ Parti Bumiputera Sarawak']]
Text: Abdul Taib Mahmud, who was born in Miri, Malaysia, belongs to the Party of Parti Bumiputera Sarawak.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'party']
Object: ['Miri, Malaysia', 'Parti Bumiputera Sarawak']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia', "__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Abdul Rahman Ya'kub"]]
Text: Abdul Taib Mahmud was born in Miri, Malaysia, and he was succeeded by Abdul Rahman Ya'kub.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'successor']
Object: ['Miri, Malaysia', "Abdul Rahman Ya'kub"]

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia', "__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Abdul Rahman Ya'kub"]]
Text: Miri, Malaysia, is the birthplace of Abdul Taib Mahmud who was the successor to, Abdul Rahman Ya'kub.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'successor']
Object: ['Miri, Malaysia', "Abdul Rahman Ya'kub"]

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia', "__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Abdul Rahman Ya'kub"]]
Text: Abdul Rahman Ya'kub was the successor of Abdul Taib Mahmud who was born in Miri, Malaysia.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'successor']
Object: ['Miri, Malaysia', "Abdul Rahman Ya'kub"]

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia', '__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Sulaiman Abdul Rahman Taib']]
Text: Abdul Taib Mahmud, born in Miri, Malaysia, was succeeded by, Sulaiman Abdul Rahman Taib.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'successor']
Object: ['Miri, Malaysia', 'Sulaiman Abdul Rahman Taib']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia', '__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Sulaiman Abdul Rahman Taib']]
Text: Born in Miri, Malaysia, Abdul Taib Mahmud, was succeded by Sulaiman Abdul Rahman Taib.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['birthPlace', 'successor']
Object: ['Miri, Malaysia', 'Sulaiman Abdul Rahman Taib']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ residence __object__ Kuching', '__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia']]
Text: Born in Miri, Malaysia, Abdul Taib Mahmud lives in Kuching.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['residence', 'birthPlace']
Object: ['Kuching', 'Miri, Malaysia']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ residence __object__ Kuching', '__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia']]
Text: Abdul Taib Mahmud, was born in Miri, Malaysia, and lives in Kuching.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['residence', 'birthPlace']
Object: ['Kuching', 'Miri, Malaysia']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ residence __object__ Kuching', '__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia']]
Text: Miri, Malaysia, is the birthplace of Abdul Taib Mahmud, who resides in Kuching.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['residence', 'birthPlace']
Object: ['Kuching', 'Miri, Malaysia']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Adenan Satem', '__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak']]
Text: Abdul Taib Mahmud, who was born in the Kingdom of Sarawak, was succeeded by Adenan Satem.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['successor', 'birthPlace']
Object: ['Adenan Satem', 'Kingdom of Sarawak']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Adenan Satem', '__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak']]
Text: Adenan Satem succeeded by Abdul Taib Mahmud, who was born in the Kingdom of Sarawak.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['successor', 'birthPlace']
Object: ['Adenan Satem', 'Kingdom of Sarawak']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Adenan Satem', '__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak']]
Text: Adenan Satem was the successor of Abdul Taib Mahmud who was originally from the Kingdom of Sarawak.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['successor', 'birthPlace']
Object: ['Adenan Satem', 'Kingdom of Sarawak']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Adenan Satem', '__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia']]
Text: Abdul Taib Mahmud was born in Miri, Malaysia and was succeeded by Adenan Satem.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['successor', 'birthPlace']
Object: ['Adenan Satem', 'Miri, Malaysia']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Adenan Satem', '__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia']]
Text: Abdul Taib Mahmud, born in Miri, Malaysiam, was succeeded by Adenan Satem.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['successor', 'birthPlace']
Object: ['Adenan Satem', 'Miri, Malaysia']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Adenan Satem', '__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia']]
Text: Abdul Taib Mahmud, born in Miri, Malaysia, was succeeded by Adenan Satem.
Subject: ['Abdul Taib Mahmud', 'Abdul Taib Mahmud']
Predicate: ['successor', 'birthPlace']
Object: ['Adenan Satem', 'Miri, Malaysia']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Adenan Satem', '__subject__ Adenan Satem __predicate__ birthPlace __object__ Japanese occupation of British Borneo']]
Text: The Japanese occupation of British Borneo was the birthplace of Adenan Satem who succeeded Abdul Taib Mahmud.
Subject: ['Abdul Taib Mahmud', 'Adenan Satem']
Predicate: ['successor', 'birthPlace']
Object: ['Adenan Satem', 'Japanese occupation of British Borneo']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Adenan Satem', '__subject__ Adenan Satem __predicate__ birthPlace __object__ Japanese occupation of British Borneo']]
Text: Adenan Satem was born in the Japanese Occupation of British Borneo and succeeded Abdul Taib Mahmud.
Subject: ['Abdul Taib Mahmud', 'Adenan Satem']
Predicate: ['successor', 'birthPlace']
Object: ['Adenan Satem', 'Japanese occupation of British Borneo']

Triple: [['__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Adenan Satem', '__subject__ Adenan Satem __predicate__ birthPlace __object__ Japanese occupation of British Borneo']]
Text: Adenan Satem, born in British Borneo during the Japanese occupation, succeeded Abdul Taib Mahmud.
Subject: ['Abdul Taib Mahmud', 'Adenan Satem']
Predicate: ['successor', 'birthPlace']
Object: ['Adenan Satem', 'Japanese occupation of British Borneo']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ birthPlace __object__ Niger State', '__subject__ Abdulsalami Abubakar __predicate__ almaMater __object__ Technical Institute, Kaduna']]
Text: The alma mater of Abdulsalami Abubakar, who was born in Niger State, was the Technical Institute, Kaduna.
Subject: ['Abdulsalami Abubakar', 'Abdulsalami Abubakar']
Predicate: ['birthPlace', 'almaMater']
Object: ['Niger State', 'Technical Institute, Kaduna']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ birthPlace __object__ Niger State', '__subject__ Abdulsalami Abubakar __predicate__ almaMater __object__ Technical Institute, Kaduna']]
Text: Niger State, is the birth place of Abdulsalami Abubakar, whose alma mater was the Technical Institute, Kaduna.
Subject: ['Abdulsalami Abubakar', 'Abdulsalami Abubakar']
Predicate: ['birthPlace', 'almaMater']
Object: ['Niger State', 'Technical Institute, Kaduna']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ birthPlace __object__ Niger State', '__subject__ Abdulsalami Abubakar __predicate__ almaMater __object__ Technical Institute, Kaduna']]
Text: Abdulsalami Abubakar, born in the Niger State, attended The Technical Institute of Kaduna.
Subject: ['Abdulsalami Abubakar', 'Abdulsalami Abubakar']
Predicate: ['birthPlace', 'almaMater']
Object: ['Niger State', 'Technical Institute, Kaduna']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ country __object__ Nigeria', '__subject__ Nigeria __predicate__ leader __object__ Yemi Osinbajo']]
Text: Abdulsalami Abubakar lives in Nigeria, where the leader is Yemi Osinbajo.
Subject: ['Abdulsalami Abubakar', 'Nigeria']
Predicate: ['country', 'leader']
Object: ['Nigeria', 'Yemi Osinbajo']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ country __object__ Nigeria', '__subject__ Nigeria __predicate__ leader __object__ Yemi Osinbajo']]
Text: Abdulsalami Abubakar is from Nig where Yemi Osinbajo is the leader.
Subject: ['Abdulsalami Abubakar', 'Nigeria']
Predicate: ['country', 'leader']
Object: ['Nigeria', 'Yemi Osinbajo']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ country __object__ Nigeria', '__subject__ Nigeria __predicate__ leader __object__ Yemi Osinbajo']]
Text: Abdulsalami Abubakar's comes from Nigeria whose leader is called Yemi Osinbajo.
Subject: ['Abdulsalami Abubakar', 'Nigeria']
Predicate: ['country', 'leader']
Object: ['Nigeria', 'Yemi Osinbajo']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ inOfficeWhileVicePresident __object__ Mike Akhigbe', '__subject__ Abdulsalami Abubakar __predicate__ militaryBranch __object__ Nigerian Air Force']]
Text: Abdulsalami Abubakar was in office with Mike Akhigbe and was in the Nigerian Air Force.
Subject: ['Abdulsalami Abubakar', 'Abdulsalami Abubakar']
Predicate: ['inOfficeWhileVicePresident', 'militaryBranch']
Object: ['Mike Akhigbe', 'Nigerian Air Force']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ inOfficeWhileVicePresident __object__ Mike Akhigbe', '__subject__ Abdulsalami Abubakar __predicate__ militaryBranch __object__ Nigerian Air Force']]
Text: Abdulsalami Abubakar was in the Nigerian Air Force. He was in office while Mike Akhigbe was the Vice President.
Subject: ['Abdulsalami Abubakar', 'Abdulsalami Abubakar']
Predicate: ['inOfficeWhileVicePresident', 'militaryBranch']
Object: ['Mike Akhigbe', 'Nigerian Air Force']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ inOfficeWhileVicePresident __object__ Mike Akhigbe', '__subject__ Abdulsalami Abubakar __predicate__ militaryBranch __object__ Nigerian Air Force']]
Text: Abdulsalami Abubakar, who was a member of the Nigerian Air Force, was in office while Mike Akhigbe was the Vice President.
Subject: ['Abdulsalami Abubakar', 'Abdulsalami Abubakar']
Predicate: ['inOfficeWhileVicePresident', 'militaryBranch']
Object: ['Mike Akhigbe', 'Nigerian Air Force']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ inOfficeWhileVicePresident __object__ Mike Akhigbe', '__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Al-Amin Daggash']]
Text: Al-Amin Daggash was the successor of Abdulsalami Abubakar who was in office at the same time as Vice President Mike Akhigbe.
Subject: ['Abdulsalami Abubakar', 'Abdulsalami Abubakar']
Predicate: ['inOfficeWhileVicePresident', 'successor']
Object: ['Mike Akhigbe', 'Al-Amin Daggash']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ inOfficeWhileVicePresident __object__ Mike Akhigbe', '__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Al-Amin Daggash']]
Text: Abdulsalami Abubakar, who succeeded Al-Amin Daggash, was in office whilst Mike Akhigbe was Vice President.
Subject: ['Abdulsalami Abubakar', 'Abdulsalami Abubakar']
Predicate: ['inOfficeWhileVicePresident', 'successor']
Object: ['Mike Akhigbe', 'Al-Amin Daggash']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ inOfficeWhileVicePresident __object__ Mike Akhigbe', '__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Al-Amin Daggash']]
Text: Abdulsalami Abubakar, who was succeeded by Al-Amin Daggash, was in office while Mike Akhigbe was Vice President.
Subject: ['Abdulsalami Abubakar', 'Abdulsalami Abubakar']
Predicate: ['inOfficeWhileVicePresident', 'successor']
Object: ['Mike Akhigbe', 'Al-Amin Daggash']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ inOfficeWhileVicePresident __object__ Mike Akhigbe', '__subject__ Mike Akhigbe __predicate__ militaryBranch __object__ Nigerian Navy']]
Text: Abdulsalami Abubakar was in office whilst the Vice President was Mike Akhigbe, who belonged to the Nigerian Navy branch of the Military.
Subject: ['Abdulsalami Abubakar', 'Mike Akhigbe']
Predicate: ['inOfficeWhileVicePresident', 'militaryBranch']
Object: ['Mike Akhigbe', 'Nigerian Navy']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ inOfficeWhileVicePresident __object__ Mike Akhigbe', '__subject__ Mike Akhigbe __predicate__ militaryBranch __object__ Nigerian Navy']]
Text: Mike Akhigbe was Vice President while Abdulsalami Abubakar was in office. Mr. Akhigbe served in the Nigerian Navy.
Subject: ['Abdulsalami Abubakar', 'Mike Akhigbe']
Predicate: ['inOfficeWhileVicePresident', 'militaryBranch']
Object: ['Mike Akhigbe', 'Nigerian Navy']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ inOfficeWhileVicePresident __object__ Mike Akhigbe', '__subject__ Mike Akhigbe __predicate__ militaryBranch __object__ Nigerian Navy']]
Text: Abdulsalami Abubakar was in office whilst Mike Akhigbe, who was in the Nigerian Navy, was Vice President.
Subject: ['Abdulsalami Abubakar', 'Mike Akhigbe']
Predicate: ['inOfficeWhileVicePresident', 'militaryBranch']
Object: ['Mike Akhigbe', 'Nigerian Navy']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ inOfficeWhileVicePresident __object__ Mike Akhigbe', '__subject__ Mike Akhigbe __predicate__ predecessor __object__ Oladipo Diya']]
Text: Oladipo Diya was the predecesso of Mike Akhigbe, who was the Vice President, while Abdulsalami Abubakar was in office.
Subject: ['Abdulsalami Abubakar', 'Mike Akhigbe']
Predicate: ['inOfficeWhileVicePresident', 'predecessor']
Object: ['Mike Akhigbe', 'Oladipo Diya']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ inOfficeWhileVicePresident __object__ Mike Akhigbe', '__subject__ Mike Akhigbe __predicate__ predecessor __object__ Oladipo Diya']]
Text: Vice President Mike Akhigbe's predecesor was Oladipo Diya. Mr. Akigbe was in office alongside Abdulsalami Abubakar.
Subject: ['Abdulsalami Abubakar', 'Mike Akhigbe']
Predicate: ['inOfficeWhileVicePresident', 'predecessor']
Object: ['Mike Akhigbe', 'Oladipo Diya']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ inOfficeWhileVicePresident __object__ Mike Akhigbe', '__subject__ Mike Akhigbe __predicate__ successor __object__ Atiku Abubakar']]
Text: Abdulsalami Abubakar was in office at the same time that Mike Akhigbe was the Vice President. Mr Akhigbe was succeeded by Atiku Abubakar.
Subject: ['Abdulsalami Abubakar', 'Mike Akhigbe']
Predicate: ['inOfficeWhileVicePresident', 'successor']
Object: ['Mike Akhigbe', 'Atiku Abubakar']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Al-Amin Daggash', '__subject__ Abdulsalami Abubakar __predicate__ activeYearsEndDate __object__ 1999-05-29']]
Text: Abdulsalami Abubakar ended his career on 1999-05-29 and was succeeded by Al-Amin Daggash.
Subject: ['Abdulsalami Abubakar', 'Abdulsalami Abubakar']
Predicate: ['successor', 'activeYearsEndDate']
Object: ['Al-Amin Daggash', '1999-05-29']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Al-Amin Daggash', '__subject__ Abdulsalami Abubakar __predicate__ activeYearsEndDate __object__ 1999-05-29']]
Text: Abdulsalami Abubakar's successor was Al-Amin Daggash afterhe ended his career on 1999-05-29.
Subject: ['Abdulsalami Abubakar', 'Abdulsalami Abubakar']
Predicate: ['successor', 'activeYearsEndDate']
Object: ['Al-Amin Daggash', '1999-05-29']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Al-Amin Daggash', '__subject__ Abdulsalami Abubakar __predicate__ activeYearsEndDate __object__ 1999-05-29']]
Text: Al-Amin Daggash was succeeded by Abdulsalami Abubakar whose career ended on May 29, 1999.
Subject: ['Abdulsalami Abubakar', 'Abdulsalami Abubakar']
Predicate: ['successor', 'activeYearsEndDate']
Object: ['Al-Amin Daggash', '1999-05-29']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Olusegun Obasanjo', '__subject__ Abdulsalami Abubakar __predicate__ office __object__ Chief of the Defence Staff (Nigeria)']]
Text: Abdulsalami Abubakar, whose successor was Olusegun Obasanjo, worked as the Nigerian Chief of the Defence Staff.
Subject: ['Abdulsalami Abubakar', 'Abdulsalami Abubakar']
Predicate: ['successor', 'office']
Object: ['Olusegun Obasanjo', 'Chief of the Defence Staff (Nigeria)']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Olusegun Obasanjo', '__subject__ Abdulsalami Abubakar __predicate__ office __object__ Chief of the Defence Staff (Nigeria)']]
Text: Olusegun Obasanjo succeeded Abdulsalami Abubakar, who worked as the Nigerian Chief of the Defence Staff.
Subject: ['Abdulsalami Abubakar', 'Abdulsalami Abubakar']
Predicate: ['successor', 'office']
Object: ['Olusegun Obasanjo', 'Chief of the Defence Staff (Nigeria)']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Olusegun Obasanjo', '__subject__ Abdulsalami Abubakar __predicate__ office __object__ Chief of the Defence Staff (Nigeria)']]
Text: Abdulsalami Abubakar, was the Chief of the Defence Staff in Nigeria, and his successor was Olusegun Obasanjo.
Subject: ['Abdulsalami Abubakar', 'Abdulsalami Abubakar']
Predicate: ['successor', 'office']
Object: ['Olusegun Obasanjo', 'Chief of the Defence Staff (Nigeria)']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Olusegun Obasanjo', '__subject__ Olusegun Obasanjo __predicate__ inOfficeWhileVicePresident __object__ Atiku Abubakar']]
Text: Olusegun Obasanjo, successor of Abdulsalami Abubakar, took office during Atiku Abubaker's Vice Presidency.
Subject: ['Abdulsalami Abubakar', 'Olusegun Obasanjo']
Predicate: ['successor', 'inOfficeWhileVicePresident']
Object: ['Olusegun Obasanjo', 'Atiku Abubakar']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Olusegun Obasanjo', '__subject__ Olusegun Obasanjo __predicate__ inOfficeWhileVicePresident __object__ Atiku Abubakar']]
Text: Abdulsalami Abubakar's successor was Olusegun Obasanjo who was in office while Atiku Abubaker was Vice President.
Subject: ['Abdulsalami Abubakar', 'Olusegun Obasanjo']
Predicate: ['successor', 'inOfficeWhileVicePresident']
Object: ['Olusegun Obasanjo', 'Atiku Abubakar']

Triple: [['__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Olusegun Obasanjo', '__subject__ Olusegun Obasanjo __predicate__ inOfficeWhileVicePresident __object__ Atiku Abubakar']]
Text: Olusegun Obasanjo was Abdulsalami Abubakar successor and Atiku Abubakar was his Vice President.
Subject: ['Abdulsalami Abubakar', 'Olusegun Obasanjo']
Predicate: ['successor', 'inOfficeWhileVicePresident']
Object: ['Olusegun Obasanjo', 'Atiku Abubakar']

Triple: [['__subject__ Abel Caballero __predicate__ almaMater __object__ University of Santiago de Compostela', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Galicia (Spain)']]
Text: Born in Galicia, Spain, Abel Caballero, has the University of Santiago de Compostela for an alma mater.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['almaMater', 'birthPlace']
Object: ['University of Santiago de Compostela', 'Galicia (Spain)']

Triple: [['__subject__ Abel Caballero __predicate__ almaMater __object__ University of Santiago de Compostela', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Galicia (Spain)']]
Text: Abel Caballero's alma mater is the University of Santiago de Compostela and he was born in Galicia in Spain.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['almaMater', 'birthPlace']
Object: ['University of Santiago de Compostela', 'Galicia (Spain)']

Triple: [['__subject__ Abel Caballero __predicate__ almaMater __object__ University of Santiago de Compostela', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Galicia (Spain)']]
Text: Abel Caballero was born in Galicia, Spain and went to the University of Santiago de Compostela.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['almaMater', 'birthPlace']
Object: ['University of Santiago de Compostela', 'Galicia (Spain)']

Triple: [['__subject__ Abel Caballero __predicate__ birthPlace __object__ Galicia (Spain)', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Spain']]
Text: Galicia, Spain is the birthplace of Abel Caballero.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Galicia (Spain)', 'Spain']

Triple: [['__subject__ Abel Caballero __predicate__ birthPlace __object__ Galicia (Spain)', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Spain']]
Text: Abel Caballero was born in Galicia, Spain.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Galicia (Spain)', 'Spain']

Triple: [['__subject__ Abel Caballero __predicate__ birthPlace __object__ Galicia (Spain)', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Spain']]
Text: Abel Caballero was born in Galicia, in Spain.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Galicia (Spain)', 'Spain']

Triple: [['__subject__ Abel Caballero __predicate__ birthPlace __object__ Galicia (Spain)', "__subject__ Abel Caballero __predicate__ party __object__ Spanish Socialist Workers' Party"]]
Text: Abel Caballero was born in Galicia, Spain and belongs to the Spanish Socialist Workers' Party.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['birthPlace', 'party']
Object: ['Galicia (Spain)', "Spanish Socialist Workers' Party"]

Triple: [['__subject__ Abel Caballero __predicate__ birthPlace __object__ Ponteareas', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Spain']]
Text: Abel Caballero was born in Ponteareas, in Spain.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Ponteareas', 'Spain']

Triple: [['__subject__ Abel Caballero __predicate__ birthPlace __object__ Ponteareas', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Spain']]
Text: Abel Caballero was born in Ponteareas Spain.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Ponteareas', 'Spain']

Triple: [['__subject__ Abel Caballero __predicate__ birthPlace __object__ Ponteareas', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Spain']]
Text: Abel Caballero came to be in Ponteareas in Spain.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Ponteareas', 'Spain']

Triple: [['__subject__ Abel Caballero __predicate__ birthPlace __object__ Ponteareas', "__subject__ Abel Caballero __predicate__ party __object__ Spanish Socialist Workers' Party"]]
Text: Abel Caballero, who is a member of the Spanish Socialist Workers' Party was born in Ponteareas.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['birthPlace', 'party']
Object: ['Ponteareas', "Spanish Socialist Workers' Party"]

Triple: [['__subject__ Abel Caballero __predicate__ birthPlace __object__ Ponteareas', "__subject__ Abel Caballero __predicate__ party __object__ Spanish Socialist Workers' Party"]]
Text: Born in Ponteareas, Abel Caballero, is a member of the Spanish Socialist Workers' Party.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['birthPlace', 'party']
Object: ['Ponteareas', "Spanish Socialist Workers' Party"]

Triple: [['__subject__ Abel Caballero __predicate__ birthPlace __object__ Ponteareas', "__subject__ Abel Caballero __predicate__ party __object__ Spanish Socialist Workers' Party"]]
Text: Abel Caballero (b Ponteareas) is a member of the Spanish Socialist Workers' Party.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['birthPlace', 'party']
Object: ['Ponteareas', "Spanish Socialist Workers' Party"]

Triple: [['__subject__ Abel Caballero __predicate__ birthPlace __object__ Spain', "__subject__ Abel Caballero __predicate__ party __object__ Spanish Socialist Workers' Party"]]
Text: Abel Caballero is a member of the Spanish Socialist Workers' Party and was born in Spain.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['birthPlace', 'party']
Object: ['Spain', "Spanish Socialist Workers' Party"]

Triple: [['__subject__ Abel Caballero __predicate__ birthPlace __object__ Spain', "__subject__ Abel Caballero __predicate__ party __object__ Spanish Socialist Workers' Party"]]
Text: Abel Caballero belonged to the Spanish Socialist Workers' Party. Mr. Caballero was born in Spain.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['birthPlace', 'party']
Object: ['Spain', "Spanish Socialist Workers' Party"]

Triple: [['__subject__ Abel Caballero __predicate__ birthPlace __object__ Spain', "__subject__ Abel Caballero __predicate__ party __object__ Spanish Socialist Workers' Party"]]
Text: Abel Caballero, who was born in Spain, is a member of the Spanish Socialist Workers' Party.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['birthPlace', 'party']
Object: ['Spain', "Spanish Socialist Workers' Party"]

Triple: [['__subject__ Abel Caballero __predicate__ birthPlace __object__ Spain', "__subject__ Abel Caballero __predicate__ party __object__ Spanish Socialist Workers' Party"]]
Text: Abel Caballero, who was born in Spain, belongs to the Spanish Socialist Workers' Party.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['birthPlace', 'party']
Object: ['Spain', "Spanish Socialist Workers' Party"]

Triple: [['__subject__ Abel Caballero __predicate__ birthPlace __object__ Spain', "__subject__ Abel Caballero __predicate__ party __object__ Spanish Socialist Workers' Party"]]
Text: Abel Caballero was born in Spain and was part of the Spanish Socialist Workers' Party.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['birthPlace', 'party']
Object: ['Spain', "Spanish Socialist Workers' Party"]

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Galicia (Spain)']]
Text: Abel Caballero (b Galicia, Spain) served during the reign of King Juan Carlos I of Spain.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['inOfficeWhileMonarch', 'birthPlace']
Object: ['Juan Carlos I of Spain', 'Galicia (Spain)']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Galicia (Spain)']]
Text: Abel Caballero, born in Galicia, Spain, was in office during the reign of King Juan Carlos I of Spain.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['inOfficeWhileMonarch', 'birthPlace']
Object: ['Juan Carlos I of Spain', 'Galicia (Spain)']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Galicia (Spain)']]
Text: Abel Caballero, who was born in Galicia in Spain, was in office whilst Juan Carlos I of Spain was Monarch.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['inOfficeWhileMonarch', 'birthPlace']
Object: ['Juan Carlos I of Spain', 'Galicia (Spain)']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Ponteareas']]
Text: Abel Caballero, who was born in Ponteareas, was in office during the reign of Monarch, Juan Carlos I of Spain.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['inOfficeWhileMonarch', 'birthPlace']
Object: ['Juan Carlos I of Spain', 'Ponteareas']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Ponteareas']]
Text: Abel Caballero was born in Ponteareas and was in office whilst Juan Carlos I of Spain was Monarch.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['inOfficeWhileMonarch', 'birthPlace']
Object: ['Juan Carlos I of Spain', 'Ponteareas']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Ponteareas']]
Text: Abel Caballero, born in Ponteareas, was in office while Juan Carlos I of Spain was Monarch.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['inOfficeWhileMonarch', 'birthPlace']
Object: ['Juan Carlos I of Spain', 'Ponteareas']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Spain']]
Text: Abel Caballero (b Spain) served during the reign of King Juan Carlos 1 of Spain.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['inOfficeWhileMonarch', 'birthPlace']
Object: ['Juan Carlos I of Spain', 'Spain']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Spain']]
Text: Spanish born Abel Caballero was in office during the reign of Juan Carlos I of Spain.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['inOfficeWhileMonarch', 'birthPlace']
Object: ['Juan Carlos I of Spain', 'Spain']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Abel Caballero __predicate__ birthPlace __object__ Spain']]
Text: Spanish born Abel Caballero was in office during the reign of Monarch, Juan Carlos I.
Subject: ['Abel Caballero', 'Abel Caballero']
Predicate: ['inOfficeWhileMonarch', 'birthPlace']
Object: ['Juan Carlos I of Spain', 'Spain']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Juan Carlos I of Spain __predicate__ birthPlace __object__ Rome']]
Text: Abel Caballero was in office whilst Juan Carlos I of Spain was Monarch, who was born in Rome.
Subject: ['Abel Caballero', 'Juan Carlos I of Spain']
Predicate: ['inOfficeWhileMonarch', 'birthPlace']
Object: ['Juan Carlos I of Spain', 'Rome']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Juan Carlos I of Spain __predicate__ predecessor __object__ Alfonso XIII of Spain']]
Text: Abel Caballero was in office whilst Juan Carlos I of Spain, who preceded Alfonso XIII of Spain, was Monarch.
Subject: ['Abel Caballero', 'Juan Carlos I of Spain']
Predicate: ['inOfficeWhileMonarch', 'predecessor']
Object: ['Juan Carlos I of Spain', 'Alfonso XIII of Spain']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Juan Carlos I of Spain __predicate__ predecessor __object__ Alfonso XIII of Spain']]
Text: Abel Caballero was in office during the reign of Monarch, Juan Carlos I of Spain, who preceded Alfonso XIII of Spain.
Subject: ['Abel Caballero', 'Juan Carlos I of Spain']
Predicate: ['inOfficeWhileMonarch', 'predecessor']
Object: ['Juan Carlos I of Spain', 'Alfonso XIII of Spain']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Juan Carlos I of Spain __predicate__ predecessor __object__ Alfonso XIII of Spain']]
Text: Abel Caballero was in office during the reign of Monarch, Juan Carlos I of Spain, the predecessor of which, was Alfonso XIII of Spain.
Subject: ['Abel Caballero', 'Juan Carlos I of Spain']
Predicate: ['inOfficeWhileMonarch', 'predecessor']
Object: ['Juan Carlos I of Spain', 'Alfonso XIII of Spain']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Juan Carlos I of Spain __predicate__ predecessor __object__ Francisco Franco']]
Text: Abel Caballero was in office while Juan Carlos 1 of Spain was Monarch he was preceded by Francisco Franco.
Subject: ['Abel Caballero', 'Juan Carlos I of Spain']
Predicate: ['inOfficeWhileMonarch', 'predecessor']
Object: ['Juan Carlos I of Spain', 'Francisco Franco']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Juan Carlos I of Spain __predicate__ predecessor __object__ Francisco Franco']]
Text: The predecessor of Juan Carlos I of Spain, who reigned whilst Abel Caballero was in office, was Francisco Franco.
Subject: ['Abel Caballero', 'Juan Carlos I of Spain']
Predicate: ['inOfficeWhileMonarch', 'predecessor']
Object: ['Juan Carlos I of Spain', 'Francisco Franco']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Juan Carlos I of Spain __predicate__ predecessor __object__ Francisco Franco']]
Text: Abel Caballero was in office during the reign of Monarch, Juan Carlos I of Spain whose predecessor was Francisco Franco.
Subject: ['Abel Caballero', 'Juan Carlos I of Spain']
Predicate: ['inOfficeWhileMonarch', 'predecessor']
Object: ['Juan Carlos I of Spain', 'Francisco Franco']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Juan Carlos I of Spain __predicate__ spouse __object__ Queen Sofía of Spain']]
Text: Abel Caballero was in office whilst Juan Carlos I of Spain was Monarch, the wife of which, is Queen Sofia of Spain.
Subject: ['Abel Caballero', 'Juan Carlos I of Spain']
Predicate: ['inOfficeWhileMonarch', 'spouse']
Object: ['Juan Carlos I of Spain', 'Queen Sofía of Spain']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhileMonarch __object__ Juan Carlos I of Spain', '__subject__ Juan Carlos I of Spain __predicate__ spouse __object__ Queen Sofía of Spain']]
Text: Abel Caballero was in office during the reign of Monarch, Juan Carlos I of Spain, whose wife is Queen Sofia.
Subject: ['Abel Caballero', 'Juan Carlos I of Spain']
Predicate: ['inOfficeWhileMonarch', 'spouse']
Object: ['Juan Carlos I of Spain', 'Queen Sofía of Spain']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhilePrimeMinister __object__ Felipe González', '__subject__ Felipe González __predicate__ predecessor __object__ Rodolfo Llopis']]
Text: Abel Caballero was in office while Felipe Gonzalez was Prime Minister, whose predecessor was Rodolfo Llopis.
Subject: ['Abel Caballero', 'Felipe González']
Predicate: ['inOfficeWhilePrimeMinister', 'predecessor']
Object: ['Felipe González', 'Rodolfo Llopis']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhilePrimeMinister __object__ Felipe González', '__subject__ Felipe González __predicate__ predecessor __object__ Rodolfo Llopis']]
Text: Rodolfo Llopis preceded Felipe Gonzalez, who was Prime Minister, when Abel Caballero was in office.
Subject: ['Abel Caballero', 'Felipe González']
Predicate: ['inOfficeWhilePrimeMinister', 'predecessor']
Object: ['Felipe González', 'Rodolfo Llopis']

Triple: [['__subject__ Abel Caballero __predicate__ inOfficeWhilePrimeMinister __object__ Felipe González', '__subject__ Felipe González __predicate__ predecessor __object__ Rodolfo Llopis']]
Text: Abel Caballero was in office while Felipe Gonzalez was Prime Minister whose predecessor was Rodolfo Llopis.
Subject: ['Abel Caballero', 'Felipe González']
Predicate: ['inOfficeWhilePrimeMinister', 'predecessor']
Object: ['Felipe González', 'Rodolfo Llopis']

Triple: [['__subject__ Abner W. Sibal __predicate__ battle __object__ World War II', '__subject__ World War II __predicate__ commander __object__ Chiang Kai-shek']]
Text: Abner W. Sibal was in WWII and one commander in that war was Chiang Kai-shek.
Subject: ['Abner W. Sibal', 'World War II']
Predicate: ['battle', 'commander']
Object: ['World War II', 'Chiang Kai-shek']

Triple: [['__subject__ Abner W. Sibal __predicate__ battle __object__ World War II', '__subject__ World War II __predicate__ commander __object__ Chiang Kai-shek']]
Text: Abner W. Sibal fought in World War II, where one of the commanders was, Chiang Kai-shek.
Subject: ['Abner W. Sibal', 'World War II']
Predicate: ['battle', 'commander']
Object: ['World War II', 'Chiang Kai-shek']

Triple: [['__subject__ Abner W. Sibal __predicate__ battle __object__ World War II', '__subject__ World War II __predicate__ commander __object__ Chiang Kai-shek']]
Text: Chiang Kai-shek was a commander in the Second World War, in which Abner W Sibal fought.
Subject: ['Abner W. Sibal', 'World War II']
Predicate: ['battle', 'commander']
Object: ['World War II', 'Chiang Kai-shek']

Triple: [['__subject__ Abner W. Sibal __predicate__ battle __object__ World War II', '__subject__ World War II __predicate__ commander __object__ Franklin D. Roosevelt']]
Text: Abner W. Sibal fought during WWII and Franklin D. Roosevelt was a commander in that war.
Subject: ['Abner W. Sibal', 'World War II']
Predicate: ['battle', 'commander']
Object: ['World War II', 'Franklin D. Roosevelt']

Triple: [['__subject__ Abner W. Sibal __predicate__ battle __object__ World War II', '__subject__ World War II __predicate__ commander __object__ Franklin D. Roosevelt']]
Text: Abner W. Sibal fought in World War II which saw Franklin D. Roosevelt as a commander.
Subject: ['Abner W. Sibal', 'World War II']
Predicate: ['battle', 'commander']
Object: ['World War II', 'Franklin D. Roosevelt']

Triple: [['__subject__ Abner W. Sibal __predicate__ battle __object__ World War II', '__subject__ World War II __predicate__ commander __object__ Franklin D. Roosevelt']]
Text: Abner W. Sibal fought during WWII, the war in which Franklin D. Roosevelt was a commander.
Subject: ['Abner W. Sibal', 'World War II']
Predicate: ['battle', 'commander']
Object: ['World War II', 'Franklin D. Roosevelt']

Triple: [['__subject__ Abner W. Sibal __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ American Civil War']]
Text: Abner W. Sibal served in the United States Army which fought in the American Civil War.
Subject: ['Abner W. Sibal', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'American Civil War']

Triple: [['__subject__ Abner W. Sibal __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ American Civil War']]
Text: Abner W Sibal served in the US Army, which fought in the American Civil War.
Subject: ['Abner W. Sibal', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'American Civil War']

Triple: [['__subject__ Abner W. Sibal __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ American Civil War']]
Text: Abner W Sibal served in the US Army, who battled in the American Civil War.
Subject: ['Abner W. Sibal', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'American Civil War']

Triple: [['__subject__ Abner W. Sibal __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ Spanish–American War']]
Text: Abner W. Sibal served in the United States Army which was involved in battles in the Spanish-American War.
Subject: ['Abner W. Sibal', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'Spanish–American War']

Triple: [['__subject__ Abner W. Sibal __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ Spanish–American War']]
Text: The United States Army, which was involved in battles in the Spanish-American War, is the army, Abner W. Sibal served in.
Subject: ['Abner W. Sibal', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'Spanish–American War']

Triple: [['__subject__ Abner W. Sibal __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ Spanish–American War']]
Text: Abner W. Sibal was in the United States Army. That army fought in the battle of the Spanish-American War.
Subject: ['Abner W. Sibal', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'Spanish–American War']

Triple: [['__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District', '__subject__ Abner W. Sibal __predicate__ birthDate __object__ 1921-04-11']]
Text: Abner W Sibal (11-04-1921) was a member of the Connecticut Senate from the 26th District.
Subject: ['Abner W. Sibal', 'Abner W. Sibal']
Predicate: ['office', 'birthDate']
Object: ['Member of the Connecticut Senate from the 26th District', '1921-04-11']

Triple: [['__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District', '__subject__ Abner W. Sibal __predicate__ birthDate __object__ 1921-04-11']]
Text: Abner W. Sibal, who was born on 4 November 1921, was a member of the Connecticut Senate from the 26th District.
Subject: ['Abner W. Sibal', 'Abner W. Sibal']
Predicate: ['office', 'birthDate']
Object: ['Member of the Connecticut Senate from the 26th District', '1921-04-11']

Triple: [['__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District', '__subject__ Abner W. Sibal __predicate__ birthDate __object__ 1921-04-11']]
Text: Abner W. Sibal was born on the 11th April 1921 and worked as a member of the Connecticut Senate from the 26th District.
Subject: ['Abner W. Sibal', 'Abner W. Sibal']
Predicate: ['office', 'birthDate']
Object: ['Member of the Connecticut Senate from the 26th District', '1921-04-11']

Triple: [['__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District', '__subject__ Abner W. Sibal __predicate__ birthPlace __object__ Ridgewood, Queens']]
Text: Ridgewood, Queens is the birthplace of Abner W. Sibal who worked as a member of the Connecticut Senate from the 26th District.
Subject: ['Abner W. Sibal', 'Abner W. Sibal']
Predicate: ['office', 'birthPlace']
Object: ['Member of the Connecticut Senate from the 26th District', 'Ridgewood, Queens']

Triple: [['__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District', '__subject__ Abner W. Sibal __predicate__ birthPlace __object__ Ridgewood, Queens']]
Text: Born in Ridgewood, Queens, Abner W. Sibal, was a member of the Connecticut Senate from the 26th District.
Subject: ['Abner W. Sibal', 'Abner W. Sibal']
Predicate: ['office', 'birthPlace']
Object: ['Member of the Connecticut Senate from the 26th District', 'Ridgewood, Queens']

Triple: [['__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District', '__subject__ Abner W. Sibal __predicate__ birthPlace __object__ Ridgewood, Queens']]
Text: Abner W. Sibal was born in Ridgewood, Queens and was a member of the Connecticut Senate from the 26th district.
Subject: ['Abner W. Sibal', 'Abner W. Sibal']
Predicate: ['office', 'birthPlace']
Object: ['Member of the Connecticut Senate from the 26th District', 'Ridgewood, Queens']

Triple: [['__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District', '__subject__ Abner W. Sibal __predicate__ successor __object__ Donald J. Irwin']]
Text: Donald J. Irwin was succeeded by Abner W. Sibal who worked as a member of the Connecticut Senate from the 26th District.
Subject: ['Abner W. Sibal', 'Abner W. Sibal']
Predicate: ['office', 'successor']
Object: ['Member of the Connecticut Senate from the 26th District', 'Donald J. Irwin']

Triple: [['__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District', '__subject__ Abner W. Sibal __predicate__ successor __object__ Donald J. Irwin']]
Text: Abner W. Sibal, a member of the Connecticut Senate from the 26th District, was succeeded by, Donald J. Irwin.
Subject: ['Abner W. Sibal', 'Abner W. Sibal']
Predicate: ['office', 'successor']
Object: ['Member of the Connecticut Senate from the 26th District', 'Donald J. Irwin']

Triple: [['__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District', '__subject__ Abner W. Sibal __predicate__ successor __object__ Donald J. Irwin']]
Text: Abner W. Sibal, member of the Connecticut Senate from the 26th District was succeeded by Donald J. Irwin.
Subject: ['Abner W. Sibal', 'Abner W. Sibal']
Predicate: ['office', 'successor']
Object: ['Member of the Connecticut Senate from the 26th District', 'Donald J. Irwin']

Triple: [['__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District', '__subject__ Abner W. Sibal __predicate__ successor __object__ Marjorie Farmer']]
Text: Abner W. Sibal worked as a member of the Connecticut Senate from the 26th District, he was succeeded by Marjorie Farmer.
Subject: ['Abner W. Sibal', 'Abner W. Sibal']
Predicate: ['office', 'successor']
Object: ['Member of the Connecticut Senate from the 26th District', 'Marjorie Farmer']

Triple: [['__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District', '__subject__ Abner W. Sibal __predicate__ successor __object__ Marjorie Farmer']]
Text: Abner W. Sibal of Connecticut Senate, District 26, was succeeded by Marjorie Farmer.
Subject: ['Abner W. Sibal', 'Abner W. Sibal']
Predicate: ['office', 'successor']
Object: ['Member of the Connecticut Senate from the 26th District', 'Marjorie Farmer']

Triple: [['__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District', '__subject__ Abner W. Sibal __predicate__ successor __object__ Marjorie Farmer']]
Text: Abner W. Sibal, a member of the Connecticut Senate from the 26th District, was succeeded by Marjorie Farmer.
Subject: ['Abner W. Sibal', 'Abner W. Sibal']
Predicate: ['office', 'successor']
Object: ['Member of the Connecticut Senate from the 26th District', 'Marjorie Farmer']

Triple: [['__subject__ Abner W. Sibal __predicate__ party __object__ Republican Party (United States)', '__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District']]
Text: Abner W. Sibal was a member of the Republican party of the United States and worked as a member of the Connecticut Senate from the 26th District.
Subject: ['Abner W. Sibal', 'Abner W. Sibal']
Predicate: ['party', 'office']
Object: ['Republican Party (United States)', 'Member of the Connecticut Senate from the 26th District']

Triple: [['__subject__ Abner W. Sibal __predicate__ party __object__ Republican Party (United States)', '__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District']]
Text: Abner W. Sibal was a member of the Connecticut Senate from the 26th District and a member of the Republican Party of the United States.
Subject: ['Abner W. Sibal', 'Abner W. Sibal']
Predicate: ['party', 'office']
Object: ['Republican Party (United States)', 'Member of the Connecticut Senate from the 26th District']

Triple: [['__subject__ Abner W. Sibal __predicate__ party __object__ Republican Party (United States)', '__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District']]
Text: Abner W. Sibal, a member of the Republican party of the United States, worked as a member of the Connecticut Senate from the 26th District.
Subject: ['Abner W. Sibal', 'Abner W. Sibal']
Predicate: ['party', 'office']
Object: ['Republican Party (United States)', 'Member of the Connecticut Senate from the 26th District']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ Connecticut', '__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Ruth Ribicoff']]
Text: Abraham A. Ribicoff was born in Connecticut and is married to Ruth Ribicoff.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['birthPlace', 'spouse']
Object: ['Connecticut', 'Ruth Ribicoff']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ Connecticut', '__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Ruth Ribicoff']]
Text: Abraham A. Ribicoff, who was married to Ruth Ribicoff, was born in Connecticut.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['birthPlace', 'spouse']
Object: ['Connecticut', 'Ruth Ribicoff']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ New Britain, Connecticut', '__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Ruth Ribicoff']]
Text: Abraham A. Ribicoff's birthplace is New Britain, Connecticut. He was married to Ruth Ribicoff.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['birthPlace', 'spouse']
Object: ['New Britain, Connecticut', 'Ruth Ribicoff']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ New Britain, Connecticut', '__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Ruth Ribicoff']]
Text: Abraham A. Ribicoff was born in New Britain, Connecticut and was married to Ruth Ribicoff.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['birthPlace', 'spouse']
Object: ['New Britain, Connecticut', 'Ruth Ribicoff']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ New Britain, Connecticut', '__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Ruth Ribicoff']]
Text: Abraham A. Ribicoff, was born in New Britain, Connecticut, and married Ruth Ribicoff.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['birthPlace', 'spouse']
Object: ['New Britain, Connecticut', 'Ruth Ribicoff']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ United States', '__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York']]
Text: United States born Abraham A. Ribicoff died in New York.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['birthPlace', 'deathPlace']
Object: ['United States', 'New York']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ United States', '__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York']]
Text: Abraham A Ribicoff was born in New York, in the United States.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['birthPlace', 'deathPlace']
Object: ['United States', 'New York']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ United States', '__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York']]
Text: Abraham A Ribicoff was born in the United States and died in New York.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['birthPlace', 'deathPlace']
Object: ['United States', 'New York']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York City, New York, U.S.', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ Connecticut']]
Text: Abraham A. Ribicoff's birthplace was Connecticut. He died in New York City, New York in the U.S.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['deathPlace', 'birthPlace']
Object: ['New York City, New York, U.S.', 'Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York City, New York, U.S.', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ Connecticut']]
Text: Abraham A. Ribicoff, born in Connecticut, died in New York City, N.Y., U.S.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['deathPlace', 'birthPlace']
Object: ['New York City, New York, U.S.', 'Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York City, New York, U.S.', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ Connecticut']]
Text: Abraham A. Ribicoff died in New York City, New York, U.S. and he was born in Connecticut.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['deathPlace', 'birthPlace']
Object: ['New York City, New York, U.S.', 'Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York City', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ Connecticut']]
Text: Abraham A. Ribicoff was born in Connecticut and died in New York City.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['deathPlace', 'birthPlace']
Object: ['New York City', 'Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York City', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ Connecticut']]
Text: Abraham A. Ribicoff, was born in Connecticut, and died in New York City.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['deathPlace', 'birthPlace']
Object: ['New York City', 'Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York City', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ Connecticut']]
Text: Abraham A Ribicoff passed away in New York City but was born in Connecticut.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['deathPlace', 'birthPlace']
Object: ['New York City', 'Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York City', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ New Britain, Connecticut']]
Text: Abraham A. Ribicoff, who was born in New Britain, Connecticut, died in New York City.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['deathPlace', 'birthPlace']
Object: ['New York City', 'New Britain, Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York City', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ New Britain, Connecticut']]
Text: Abraham A Ribicoff was born in New Britain, Connecticut and died in New York City.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['deathPlace', 'birthPlace']
Object: ['New York City', 'New Britain, Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York City', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ New Britain, Connecticut']]
Text: Abraham A Ribicoff, who was born in New Britain, Connecticut, died in New York City.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['deathPlace', 'birthPlace']
Object: ['New York City', 'New Britain, Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York City', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ United States']]
Text: Abraham A. Ribicoff birthplace is the U.S. and he died in New York City.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['deathPlace', 'birthPlace']
Object: ['New York City', 'United States']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York City', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ United States']]
Text: Abraham A Ribicoff was born in the United States and died in New York City.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['deathPlace', 'birthPlace']
Object: ['New York City', 'United States']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ United States', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ Connecticut']]
Text: Abraham A. Ribicoff was born in Connecticut and died in the United States.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['deathPlace', 'birthPlace']
Object: ['United States', 'Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ United States', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ Connecticut']]
Text: Abraham A. Ribicoff, born in Connecticut, died in the U.S.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['deathPlace', 'birthPlace']
Object: ['United States', 'Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ United States', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ New Britain, Connecticut']]
Text: Abraham A Ribicoff was born in New Britain, Connecticut and died in the U.S.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['deathPlace', 'birthPlace']
Object: ['United States', 'New Britain, Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ United States', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ New Britain, Connecticut']]
Text: Abraham A. Ribicoff was born in New Britain, Connecticut and died in the United States.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['deathPlace', 'birthPlace']
Object: ['United States', 'New Britain, Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ United States', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ New Britain, Connecticut']]
Text: Abraham A. Ribicoff was born in New Britain, Connecticut and died in the U.S.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['deathPlace', 'birthPlace']
Object: ['United States', 'New Britain, Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ inOfficeWhilePresident __object__ John F. Kennedy', '__subject__ John F. Kennedy __predicate__ predecessor __object__ Dwight D. Eisenhower']]
Text: Abraham A. Ribicoff was in office at the same time as John F. Kennedy was president who had been preceded by Dwight D. Eisenhower.
Subject: ['Abraham A. Ribicoff', 'John F. Kennedy']
Predicate: ['inOfficeWhilePresident', 'predecessor']
Object: ['John F. Kennedy', 'Dwight D. Eisenhower']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ inOfficeWhilePresident __object__ John F. Kennedy', '__subject__ John F. Kennedy __predicate__ predecessor __object__ Dwight D. Eisenhower']]
Text: Abraham A. Ribicoff was in office while John F. Kennedy was president he succeeded Dwight D. Eisenhower.
Subject: ['Abraham A. Ribicoff', 'John F. Kennedy']
Predicate: ['inOfficeWhilePresident', 'predecessor']
Object: ['John F. Kennedy', 'Dwight D. Eisenhower']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ party __object__ Democratic Party (United States)', '__subject__ Abraham A. Ribicoff __predicate__ nationality __object__ American']]
Text: Abraham A. Ribicoff is from the United States and is a member of the Democratic Party in the U.S.A.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['party', 'nationality']
Object: ['Democratic Party (United States)', 'American']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ party __object__ Democratic Party (United States)', '__subject__ Abraham A. Ribicoff __predicate__ nationality __object__ American']]
Text: American, Abraham A. Ribicoff, is a member of the Democratic Party in the U.S.A.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['party', 'nationality']
Object: ['Democratic Party (United States)', 'American']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ party __object__ Democratic Party (United States)', '__subject__ Abraham A. Ribicoff __predicate__ nationality __object__ American']]
Text: American, Abraham A. Ribicoff, was a member of the Democratic Party in the United States.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['party', 'nationality']
Object: ['Democratic Party (United States)', 'American']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Casey Ribicoff', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ Connecticut']]
Text: Born in Connecticut, Abraham A. Ribicoff was the spouse of, Casey Ribicoff.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['spouse', 'birthPlace']
Object: ['Casey Ribicoff', 'Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Casey Ribicoff', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ Connecticut']]
Text: Abraham A. Ribicoff, born in Connecticut, has Casey Ribicoff for a wife.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['spouse', 'birthPlace']
Object: ['Casey Ribicoff', 'Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Casey Ribicoff', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ Connecticut']]
Text: Abraham A. Ribicoff's place of birth was Connecticut and he is married to Casey Ribicoff.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['spouse', 'birthPlace']
Object: ['Casey Ribicoff', 'Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Casey Ribicoff', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ New Britain, Connecticut']]
Text: Abraham A. Ribicoff was born in New Britain, Connecticut and was married to Casey Ribicoff.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['spouse', 'birthPlace']
Object: ['Casey Ribicoff', 'New Britain, Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Casey Ribicoff', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ New Britain, Connecticut']]
Text: Abraham A. Ribicoff, who was married to Casey Ribicoff, was born in New Britain, Connecticut.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['spouse', 'birthPlace']
Object: ['Casey Ribicoff', 'New Britain, Connecticut']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Casey Ribicoff', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ United States']]
Text: Abraham A. Ribicoff, who was born in the U.S. is married to Casey Ribicoff.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['spouse', 'birthPlace']
Object: ['Casey Ribicoff', 'United States']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Casey Ribicoff', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ United States']]
Text: Abraham A Ribicoff was born in the US and his spouse was Casey Ribicoff.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['spouse', 'birthPlace']
Object: ['Casey Ribicoff', 'United States']

Triple: [['__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Casey Ribicoff', '__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ United States']]
Text: Abraham A Ribicoff, who was born in the United States, was married to Casey Ribicoff.
Subject: ['Abraham A. Ribicoff', 'Abraham A. Ribicoff']
Predicate: ['spouse', 'birthPlace']
Object: ['Casey Ribicoff', 'United States']

Triple: [['__subject__ Adam Holloway __predicate__ battle __object__ Gulf War', '__subject__ Adam Holloway __predicate__ militaryBranch __object__ Grenadier Guards']]
Text: Adam Holloway, who served in the Grenadier Guards and was involved in Gulf War Battles.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['battle', 'militaryBranch']
Object: ['Gulf War', 'Grenadier Guards']

Triple: [['__subject__ Adam Holloway __predicate__ battle __object__ Gulf War', '__subject__ Adam Holloway __predicate__ militaryBranch __object__ Grenadier Guards']]
Text: Adam Holloway of the Grenadier Guards was involved in Gulf War Battles for the military.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['battle', 'militaryBranch']
Object: ['Gulf War', 'Grenadier Guards']

Triple: [['__subject__ Adam Holloway __predicate__ battle __object__ Gulf War', '__subject__ Adam Holloway __predicate__ militaryBranch __object__ Grenadier Guards']]
Text: Adam Holloway was in the Grenadier Guards in the military and fought in the Gulf War.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['battle', 'militaryBranch']
Object: ['Gulf War', 'Grenadier Guards']

Triple: [['__subject__ Adam Holloway __predicate__ battle __object__ Gulf War', '__subject__ Gulf War __predicate__ commander __object__ Colin Powell']]
Text: Adam Holloway fought in the Gulf War; where Colin Powell was a commander.
Subject: ['Adam Holloway', 'Gulf War']
Predicate: ['battle', 'commander']
Object: ['Gulf War', 'Colin Powell']

Triple: [['__subject__ Adam Holloway __predicate__ battle __object__ Gulf War', '__subject__ Gulf War __predicate__ commander __object__ Colin Powell']]
Text: Adam Holloway was in the Gulf War and one commander there was Colin Powell.
Subject: ['Adam Holloway', 'Gulf War']
Predicate: ['battle', 'commander']
Object: ['Gulf War', 'Colin Powell']

Triple: [['__subject__ Adam Holloway __predicate__ battle __object__ Gulf War', '__subject__ Gulf War __predicate__ commander __object__ Colin Powell']]
Text: Colin Powell commanded the Gulf War and one of the people to fight in that was was Adam Holloway.
Subject: ['Adam Holloway', 'Gulf War']
Predicate: ['battle', 'commander']
Object: ['Gulf War', 'Colin Powell']

Triple: [['__subject__ Adam Holloway __predicate__ battle __object__ Gulf War', '__subject__ Gulf War __predicate__ commander __object__ George H. W. Bush']]
Text: Adam Holloway was involved in the Gulf War where George H. W. Bush was a commander.
Subject: ['Adam Holloway', 'Gulf War']
Predicate: ['battle', 'commander']
Object: ['Gulf War', 'George H. W. Bush']

Triple: [['__subject__ Adam Holloway __predicate__ battle __object__ Gulf War', '__subject__ Gulf War __predicate__ commander __object__ George H. W. Bush']]
Text: Adam Holloway fought in the Gulf War where one of the commanders was George H W Bush.
Subject: ['Adam Holloway', 'Gulf War']
Predicate: ['battle', 'commander']
Object: ['Gulf War', 'George H. W. Bush']

Triple: [['__subject__ Adam Holloway __predicate__ battle __object__ Gulf War', '__subject__ Gulf War __predicate__ commander __object__ George H. W. Bush']]
Text: The commander of the Gulf War was George H. W. Bush and Adam Holloway was involved in the battles.
Subject: ['Adam Holloway', 'Gulf War']
Predicate: ['battle', 'commander']
Object: ['Gulf War', 'George H. W. Bush']

Triple: [['__subject__ Adam Holloway __predicate__ battle __object__ Gulf War', '__subject__ Gulf War __predicate__ commander __object__ John Major']]
Text: During the Gulf war, both Adam Holloway and John Major took part.
Subject: ['Adam Holloway', 'Gulf War']
Predicate: ['battle', 'commander']
Object: ['Gulf War', 'John Major']

Triple: [['__subject__ Adam Holloway __predicate__ battle __object__ Gulf War', '__subject__ Gulf War __predicate__ commander __object__ John Major']]
Text: Adam Holloway fought in the Gulf War, a war where John Major was one of the commanders.
Subject: ['Adam Holloway', 'Gulf War']
Predicate: ['battle', 'commander']
Object: ['Gulf War', 'John Major']

Triple: [['__subject__ Adam Holloway __predicate__ battle __object__ Gulf War', '__subject__ Gulf War __predicate__ commander __object__ John Major']]
Text: Adam Holloway fought in the Gulf War where John Major was a commander.
Subject: ['Adam Holloway', 'Gulf War']
Predicate: ['battle', 'commander']
Object: ['Gulf War', 'John Major']

Triple: [['__subject__ Adam Holloway __predicate__ birthPlace __object__ Faversham, Kent, England', '__subject__ Adam Holloway __predicate__ almaMater __object__ Magdalene College, Cambridge']]
Text: Adam Holloway, who was born in Faversham in Kent, England, graduated from Magdalene College, Cambridge.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['birthPlace', 'almaMater']
Object: ['Faversham, Kent, England', 'Magdalene College, Cambridge']

Triple: [['__subject__ Adam Holloway __predicate__ birthPlace __object__ Faversham, Kent, England', '__subject__ Adam Holloway __predicate__ almaMater __object__ Magdalene College, Cambridge']]
Text: Adam Holloway was born in Faversham Kent, England and studied at Magdalene College, Cambridge.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['birthPlace', 'almaMater']
Object: ['Faversham, Kent, England', 'Magdalene College, Cambridge']

Triple: [['__subject__ Adam Holloway __predicate__ birthPlace __object__ Faversham, Kent, England', '__subject__ Adam Holloway __predicate__ almaMater __object__ Magdalene College, Cambridge']]
Text: Adam Holloway was born in Faversham, Kent, England and graduated from Magdalene College, Cambridge.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['birthPlace', 'almaMater']
Object: ['Faversham, Kent, England', 'Magdalene College, Cambridge']

Triple: [['__subject__ Adam Holloway __predicate__ birthPlace __object__ Faversham', '__subject__ Adam Holloway __predicate__ almaMater __object__ Magdalene College, Cambridge']]
Text: Adam Holloway was born in Faversham and graduated from Magdalene College, Cambridge.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['birthPlace', 'almaMater']
Object: ['Faversham', 'Magdalene College, Cambridge']

Triple: [['__subject__ Adam Holloway __predicate__ birthPlace __object__ Faversham', '__subject__ Adam Holloway __predicate__ almaMater __object__ Magdalene College, Cambridge']]
Text: Adam Holloway was born in Faversham. His alma mater was Magdalene College in Cambridge.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['birthPlace', 'almaMater']
Object: ['Faversham', 'Magdalene College, Cambridge']

Triple: [['__subject__ Adam Holloway __predicate__ birthPlace __object__ Faversham', '__subject__ Adam Holloway __predicate__ almaMater __object__ Magdalene College, Cambridge']]
Text: Born in Faversham, Adam Holloway, has the Alma mater, Magdalene College, Cambridge.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['birthPlace', 'almaMater']
Object: ['Faversham', 'Magdalene College, Cambridge']

Triple: [['__subject__ Adam Holloway __predicate__ militaryBranch __object__ Grenadier Guards', '__subject__ Grenadier Guards __predicate__ battle __object__ Battle of Waterloo']]
Text: Adam Holloway member of The Grenadier Guards, fought in the Battle of Waterloo.
Subject: ['Adam Holloway', 'Grenadier Guards']
Predicate: ['militaryBranch', 'battle']
Object: ['Grenadier Guards', 'Battle of Waterloo']

Triple: [['__subject__ Adam Holloway __predicate__ militaryBranch __object__ Grenadier Guards', '__subject__ Grenadier Guards __predicate__ battle __object__ Battle of Waterloo']]
Text: Adam Holloway served in the Grenadier Guards and was part of the Battle of Waterloo.
Subject: ['Adam Holloway', 'Grenadier Guards']
Predicate: ['militaryBranch', 'battle']
Object: ['Grenadier Guards', 'Battle of Waterloo']

Triple: [['__subject__ Adam Holloway __predicate__ numberOfVotesAttained __object__ 9312', '__subject__ Adam Holloway __predicate__ office __object__ Member of Parliament for Gravesham']]
Text: Adam Holloway, who won 9312 votes, was the Member of Parliament for Gravesham.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['numberOfVotesAttained', 'office']
Object: ['9312', 'Member of Parliament for Gravesham']

Triple: [['__subject__ Adam Holloway __predicate__ numberOfVotesAttained __object__ 9312', '__subject__ Adam Holloway __predicate__ office __object__ Member of Parliament for Gravesham']]
Text: 9312 people voted for Adam Holloway, who worked as a member of Parliament for Gravesham.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['numberOfVotesAttained', 'office']
Object: ['9312', 'Member of Parliament for Gravesham']

Triple: [['__subject__ Adam Holloway __predicate__ numberOfVotesAttained __object__ 9312', '__subject__ Adam Holloway __predicate__ office __object__ Member of parliament']]
Text: Adam Holloway, a member of parliament, won 9312 votes.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['numberOfVotesAttained', 'office']
Object: ['9312', 'Member of parliament']

Triple: [['__subject__ Adam Holloway __predicate__ numberOfVotesAttained __object__ 9312', '__subject__ Adam Holloway __predicate__ office __object__ Member of parliament']]
Text: 9312 people voted for Adam Holloway to become a Member of Parliament.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['numberOfVotesAttained', 'office']
Object: ['9312', 'Member of parliament']

Triple: [['__subject__ Adam Holloway __predicate__ numberOfVotesAttained __object__ 9312', '__subject__ Adam Holloway __predicate__ office __object__ Member of parliament']]
Text: 9312 people voted for Adam Holloway who worked as a member of parliament.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['numberOfVotesAttained', 'office']
Object: ['9312', 'Member of parliament']

Triple: [['__subject__ Adam Holloway __predicate__ party __object__ Conservative Party (UK)', '__subject__ Adam Holloway __predicate__ nationality __object__ United Kingdom']]
Text: Adam Holloway is a U.K citizen who is a member of the Conservative Party in the United Kingdom.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['party', 'nationality']
Object: ['Conservative Party (UK)', 'United Kingdom']

Triple: [['__subject__ Adam Holloway __predicate__ party __object__ Conservative Party (UK)', '__subject__ Adam Holloway __predicate__ nationality __object__ United Kingdom']]
Text: Adam Holloway, a national of the United Kingdom, is a member of the Tories.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['party', 'nationality']
Object: ['Conservative Party (UK)', 'United Kingdom']

Triple: [['__subject__ Adam Holloway __predicate__ party __object__ Conservative Party (UK)', '__subject__ Adam Holloway __predicate__ nationality __object__ United Kingdom']]
Text: The United Kingdom national Adam Holloway is a member of the Conservative Party.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['party', 'nationality']
Object: ['Conservative Party (UK)', 'United Kingdom']

Triple: [['__subject__ Adam Holloway __predicate__ residence __object__ Gravesend', '__subject__ Adam Holloway __predicate__ birthPlace __object__ Faversham, Kent, England']]
Text: Adam Holloway was born in Faversham Kent, England and lived in Gravesend.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['residence', 'birthPlace']
Object: ['Gravesend', 'Faversham, Kent, England']

Triple: [['__subject__ Adam Holloway __predicate__ residence __object__ Gravesend', '__subject__ Adam Holloway __predicate__ birthPlace __object__ Faversham, Kent, England']]
Text: Adam Holloway, born in Faversham Kent, England, lives in Gravesend.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['residence', 'birthPlace']
Object: ['Gravesend', 'Faversham, Kent, England']

Triple: [['__subject__ Adam Holloway __predicate__ residence __object__ Gravesend', '__subject__ Adam Holloway __predicate__ birthPlace __object__ Faversham, Kent, England']]
Text: Adam Holloway, born in Faversham Kent, England, resides in Gravesend.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['residence', 'birthPlace']
Object: ['Gravesend', 'Faversham, Kent, England']

Triple: [['__subject__ Adam Holloway __predicate__ residence __object__ Gravesend', '__subject__ Adam Holloway __predicate__ birthPlace __object__ Faversham']]
Text: Faversham was the birthplace of Adam Holloway, who resided in Gravesend.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['residence', 'birthPlace']
Object: ['Gravesend', 'Faversham']

Triple: [['__subject__ Adam Holloway __predicate__ residence __object__ Gravesend', '__subject__ Adam Holloway __predicate__ birthPlace __object__ Faversham']]
Text: Adam Holloway, who was born in Faversham, resides is Gravesend.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['residence', 'birthPlace']
Object: ['Gravesend', 'Faversham']

Triple: [['__subject__ Adam Holloway __predicate__ residence __object__ Gravesend', '__subject__ Adam Holloway __predicate__ birthPlace __object__ Faversham']]
Text: The birthplace of Adam Holloway is Faversham and he now lives in Gravesend.
Subject: ['Adam Holloway', 'Adam Holloway']
Predicate: ['residence', 'birthPlace']
Object: ['Gravesend', 'Faversham']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Adam Koc __predicate__ award __object__ Cross of Independence']]
Text: Adam Koc, fought in the Polish–Soviet War, and was awarded the Cross of Independence.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['Polish–Soviet War', 'Cross of Independence']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Adam Koc __predicate__ award __object__ Cross of Independence']]
Text: Adam Koc fought in the Polish–Soviet War and has won the Cross of Independence award.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['Polish–Soviet War', 'Cross of Independence']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Adam Koc __predicate__ award __object__ Cross of Independence']]
Text: Adam Koc was involved in battles in the Polish–Soviet War and was awarded the Cross of Independence.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['Polish–Soviet War', 'Cross of Independence']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Adam Koc __predicate__ award __object__ Order of Polonia Restituta']]
Text: Adam Koc fought in the battle of the Polish–Soviet War and was given the Order of Polonia Restituta.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['Polish–Soviet War', 'Order of Polonia Restituta']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Adam Koc __predicate__ award __object__ Order of Polonia Restituta']]
Text: Adam Koc, who was involved in battles in the Polish–Soviet War was awarded the Order of Polonia Restituta.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['Polish–Soviet War', 'Order of Polonia Restituta']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Adam Koc __predicate__ award __object__ Order of Polonia Restituta']]
Text: Adam Koc, fought in the Polish–Soviet War and was awarded the Order of Polonia Restituta.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['Polish–Soviet War', 'Order of Polonia Restituta']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Adam Koc __predicate__ award __object__ Virtuti Militari']]
Text: Adam Koc fought in the Polish-Soviet War and was awarded the Virtuti Militari award.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['Polish–Soviet War', 'Virtuti Militari']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Adam Koc __predicate__ award __object__ Virtuti Militari']]
Text: Adam Koc who was awarded the Virtuti Militari, was involved in battle of the Polish-Soviet war.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['Polish–Soviet War', 'Virtuti Militari']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Adam Koc __predicate__ award __object__ Virtuti Militari']]
Text: Adam Koc fought in the Polish–Soviet War and awarded the Virtuti Militari.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['Polish–Soviet War', 'Virtuti Militari']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Polish–Soviet War __predicate__ commander __object__ Joseph Stalin']]
Text: Adam Koc was involved in battles in the Polish–Soviet War, where one of the commanders was, Joseph Stalin.
Subject: ['Adam Koc', 'Polish–Soviet War']
Predicate: ['battle', 'commander']
Object: ['Polish–Soviet War', 'Joseph Stalin']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Polish–Soviet War __predicate__ commander __object__ Joseph Stalin']]
Text: A commander at the Polish-Soviet War, which Adam Koc fought in, was Joseph Stalin.
Subject: ['Adam Koc', 'Polish–Soviet War']
Predicate: ['battle', 'commander']
Object: ['Polish–Soviet War', 'Joseph Stalin']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Polish–Soviet War __predicate__ commander __object__ Joseph Stalin']]
Text: Adam Koc was involved in battles in the Polish–Soviet War, the war where Joseph Stalin was a commander.
Subject: ['Adam Koc', 'Polish–Soviet War']
Predicate: ['battle', 'commander']
Object: ['Polish–Soviet War', 'Joseph Stalin']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Polish–Soviet War __predicate__ commander __object__ Leon Trotsky']]
Text: Adam Koc was involved in battles in the Polish–Soviet War, a war where Leon Trotsky was a commander.
Subject: ['Adam Koc', 'Polish–Soviet War']
Predicate: ['battle', 'commander']
Object: ['Polish–Soviet War', 'Leon Trotsky']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Polish–Soviet War __predicate__ commander __object__ Leon Trotsky']]
Text: Adam Koc fought in the Polish-Soviet war, where Leon Trotsky was a commander.
Subject: ['Adam Koc', 'Polish–Soviet War']
Predicate: ['battle', 'commander']
Object: ['Polish–Soviet War', 'Leon Trotsky']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Polish–Soviet War __predicate__ commander __object__ Leon Trotsky']]
Text: Adam Koc fought in the Polish-Soviet War while Leon Trotsky was the commender.
Subject: ['Adam Koc', 'Polish–Soviet War']
Predicate: ['battle', 'commander']
Object: ['Polish–Soviet War', 'Leon Trotsky']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Polish–Soviet War __predicate__ isPartOfMilitaryConflict __object__ Russian Civil War']]
Text: Adam Koc was involved in battles in the Polish–Soviet War which was part of the Russian Civil War.
Subject: ['Adam Koc', 'Polish–Soviet War']
Predicate: ['battle', 'isPartOfMilitaryConflict']
Object: ['Polish–Soviet War', 'Russian Civil War']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Polish–Soviet War __predicate__ isPartOfMilitaryConflict __object__ Russian Civil War']]
Text: Adam Koc fought in the Polish–Soviet War, which was part of the Russian Civil War military conflict.
Subject: ['Adam Koc', 'Polish–Soviet War']
Predicate: ['battle', 'isPartOfMilitaryConflict']
Object: ['Polish–Soviet War', 'Russian Civil War']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War', '__subject__ Polish–Soviet War __predicate__ isPartOfMilitaryConflict __object__ Russian Civil War']]
Text: Adam Koc fought in battles during the Polish-Soviet war which was part of the Russian Civil War.
Subject: ['Adam Koc', 'Polish–Soviet War']
Predicate: ['battle', 'isPartOfMilitaryConflict']
Object: ['Polish–Soviet War', 'Russian Civil War']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ World War I', '__subject__ Adam Koc __predicate__ award __object__ Cross of Independence']]
Text: Adam Koc battled in World War I. He won the Cross of Independence award.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['World War I', 'Cross of Independence']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ World War I', '__subject__ Adam Koc __predicate__ award __object__ Cross of Independence']]
Text: Adam Koc fought in WWI and was awarded the Cross of Independence.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['World War I', 'Cross of Independence']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ World War I', '__subject__ Adam Koc __predicate__ award __object__ Cross of Independence']]
Text: Adam Koc fought in World War 1 and was awarded the Cross of Independence.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['World War I', 'Cross of Independence']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ World War I', '__subject__ Adam Koc __predicate__ award __object__ Cross of Valour (Poland)']]
Text: Adam Koc, who fought in WWI was awarded the Cross of Valour (Poland).
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['World War I', 'Cross of Valour (Poland)']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ World War I', '__subject__ Adam Koc __predicate__ award __object__ Cross of Valour (Poland)']]
Text: Adam Koc fought in World War I and was awarded the Cross of Valour for Poland.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['World War I', 'Cross of Valour (Poland)']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ World War I', '__subject__ Adam Koc __predicate__ award __object__ Cross of Valour (Poland)']]
Text: Adam Koc fought in World War 1 and was awarded the Polish Cross of Valour.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['World War I', 'Cross of Valour (Poland)']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ World War I', '__subject__ Adam Koc __predicate__ award __object__ Legion of Honour']]
Text: Adam Koc fought in WWI and won the Legion of Honour award.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['World War I', 'Legion of Honour']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ World War I', '__subject__ Adam Koc __predicate__ award __object__ Legion of Honour']]
Text: Adam Koc fought in WWI and he was awarded the Legion of Honour.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['World War I', 'Legion of Honour']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ World War I', '__subject__ Adam Koc __predicate__ award __object__ Legion of Honour']]
Text: Adam Koc, who fought in World War I, won the Legion of Honour award.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['World War I', 'Legion of Honour']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ World War I', '__subject__ Adam Koc __predicate__ award __object__ Order of Polonia Restituta']]
Text: Adam Koc, fought in WWI, was awarded the Order of Polonia Restituta.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['World War I', 'Order of Polonia Restituta']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ World War I', '__subject__ Adam Koc __predicate__ award __object__ Order of Polonia Restituta']]
Text: Adam Koc was awarded the Order of Polonia Restituta after his efforts in World War One.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['World War I', 'Order of Polonia Restituta']

Triple: [['__subject__ Adam Koc __predicate__ battle __object__ World War I', '__subject__ Adam Koc __predicate__ award __object__ Order of Polonia Restituta']]
Text: Adam Koc, who fought in World War I was awarded the Order of Polonia Restituta.
Subject: ['Adam Koc', 'Adam Koc']
Predicate: ['battle', 'award']
Object: ['World War I', 'Order of Polonia Restituta']

Triple: [['__subject__ Adam Koc __predicate__ nationality __object__ Poland', '__subject__ Poland __predicate__ ethnicGroup __object__ Kashubians']]
Text: Kashubians are an ethnic group of Poland, the country Adam Koc comes from.
Subject: ['Adam Koc', 'Poland']
Predicate: ['nationality', 'ethnicGroup']
Object: ['Poland', 'Kashubians']

Triple: [['__subject__ Adam Koc __predicate__ nationality __object__ Poland', '__subject__ Poland __predicate__ ethnicGroup __object__ Kashubians']]
Text: Adam Koc was born in Poland; where Kashubians are an ethnic group.
Subject: ['Adam Koc', 'Poland']
Predicate: ['nationality', 'ethnicGroup']
Object: ['Poland', 'Kashubians']

Triple: [['__subject__ Adolf Schärf __predicate__ birthPlace __object__ Mikulov', '__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf']]
Text: Adolf Schärf was born in Mikulov and served in office with President Alfons Gorbach.
Subject: ['Adolf Schärf', 'Alfons Gorbach']
Predicate: ['birthPlace', 'inOfficeWhilePresident']
Object: ['Mikulov', 'Adolf Schärf']

Triple: [['__subject__ Adolf Schärf __predicate__ birthPlace __object__ Mikulov', '__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf']]
Text: Alfons Gorbach was in office while Mikulov born Adolf Scharf was President.
Subject: ['Adolf Schärf', 'Alfons Gorbach']
Predicate: ['birthPlace', 'inOfficeWhilePresident']
Object: ['Mikulov', 'Adolf Schärf']

Triple: [['__subject__ Adolf Schärf __predicate__ birthPlace __object__ Mikulov', '__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf']]
Text: Alfons Gorbach was in office at the same time that Mikulov born Adolf Scharf was President.
Subject: ['Adolf Schärf', 'Alfons Gorbach']
Predicate: ['birthPlace', 'inOfficeWhilePresident']
Object: ['Mikulov', 'Adolf Schärf']

Triple: [['__subject__ Adonis Georgiadis __predicate__ almaMater __object__ National and Kapodistrian University of Athens', '__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Athens']]
Text: Adonis Georgiadis was born in Athens and attended the National and Kapodistrian University of Athens.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['almaMater', 'birthPlace']
Object: ['National and Kapodistrian University of Athens', 'Athens']

Triple: [['__subject__ Adonis Georgiadis __predicate__ almaMater __object__ National and Kapodistrian University of Athens', '__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Athens']]
Text: Adonis Georgiadis was born in Athens and he attended the National and Kapodistrian University of Athens.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['almaMater', 'birthPlace']
Object: ['National and Kapodistrian University of Athens', 'Athens']

Triple: [['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Athens', '__subject__ Adonis Georgiadis __predicate__ party __object__ New Democracy (Greece)']]
Text: Adonis Georgiadis. born in Athens, was a member of the New Democracy party in Greece.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['birthPlace', 'party']
Object: ['Athens', 'New Democracy (Greece)']

Triple: [['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Athens', '__subject__ Adonis Georgiadis __predicate__ party __object__ New Democracy (Greece)']]
Text: Born in Athens, Adonis Georgiadis, is a member of the Greek New Democracy Party.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['birthPlace', 'party']
Object: ['Athens', 'New Democracy (Greece)']

Triple: [['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Athens', '__subject__ Adonis Georgiadis __predicate__ party __object__ New Democracy (Greece)']]
Text: Adonis Georgiadis, born in Athens, is a member of the Greek New Democracy Party.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['birthPlace', 'party']
Object: ['Athens', 'New Democracy (Greece)']

Triple: [['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Athens', '__subject__ Adonis Georgiadis __predicate__ successor __object__ Makis Voridis']]
Text: Makis Voridis was the successor of Adonis Georgiadis, who was born in Athens.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['birthPlace', 'successor']
Object: ['Athens', 'Makis Voridis']

Triple: [['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Athens', '__subject__ Adonis Georgiadis __predicate__ successor __object__ Makis Voridis']]
Text: Adonis Georgiadis, born in Athens, was succeeded by Makis Voridis.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['birthPlace', 'successor']
Object: ['Athens', 'Makis Voridis']

Triple: [['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Athens', '__subject__ Adonis Georgiadis __predicate__ successor __object__ Makis Voridis']]
Text: Adonis Georgiadis was born in Athens he was succeeded by Makis Voridis.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['birthPlace', 'successor']
Object: ['Athens', 'Makis Voridis']

Triple: [['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Greece', '__subject__ Adonis Georgiadis __predicate__ almaMater __object__ National and Kapodistrian University of Athens']]
Text: Born in Greece, Adonis Georgiadis's alma Mater was the National and Kapodistrian University of Athens.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['birthPlace', 'almaMater']
Object: ['Greece', 'National and Kapodistrian University of Athens']

Triple: [['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Greece', '__subject__ Adonis Georgiadis __predicate__ almaMater __object__ National and Kapodistrian University of Athens']]
Text: The National and Kapodistrian University of Athens, is the alma mater of Greek born Adonis Georgiadis.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['birthPlace', 'almaMater']
Object: ['Greece', 'National and Kapodistrian University of Athens']

Triple: [['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Greece', '__subject__ Adonis Georgiadis __predicate__ almaMater __object__ National and Kapodistrian University of Athens']]
Text: The alma mater of Greek born, Adonis Georgiadis, was the National and Kapodistrian University of Athens.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['birthPlace', 'almaMater']
Object: ['Greece', 'National and Kapodistrian University of Athens']

Triple: [['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Greece', '__subject__ Adonis Georgiadis __predicate__ party __object__ New Democracy (Greece)']]
Text: Adonis Georgiadis birthplace was in Greece where he was a member of the New Democracy party.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['birthPlace', 'party']
Object: ['Greece', 'New Democracy (Greece)']

Triple: [['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Greece', '__subject__ Adonis Georgiadis __predicate__ party __object__ New Democracy (Greece)']]
Text: Adonis Georgiadis was born in Greece and is a member of the Greek New Democracy Party.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['birthPlace', 'party']
Object: ['Greece', 'New Democracy (Greece)']

Triple: [['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Greece', '__subject__ Adonis Georgiadis __predicate__ party __object__ New Democracy (Greece)']]
Text: Adonis Georgiadis, member of the Greek New Democratic Party, was born in Greece.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['birthPlace', 'party']
Object: ['Greece', 'New Democracy (Greece)']

Triple: [['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Greece', '__subject__ Adonis Georgiadis __predicate__ successor __object__ Makis Voridis']]
Text: Adonis Georgiadis, was born in Greece, and was succeeded by Makis Voridis.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['birthPlace', 'successor']
Object: ['Greece', 'Makis Voridis']

Triple: [['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Greece', '__subject__ Adonis Georgiadis __predicate__ successor __object__ Makis Voridis']]
Text: Greek born Adonis Georgiadis was succeeded by Makis Voridis.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['birthPlace', 'successor']
Object: ['Greece', 'Makis Voridis']

Triple: [['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Greece', '__subject__ Adonis Georgiadis __predicate__ successor __object__ Makis Voridis']]
Text: Makis Voridis was the successor of Greek bron, Adonis Georgiadis.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['birthPlace', 'successor']
Object: ['Greece', 'Makis Voridis']

Triple: [['__subject__ Adonis Georgiadis __predicate__ inOfficeWhilePrimeMinister __object__ Antonis Samaras', '__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Greece']]
Text: Adonis Georgiadis, who was born in Greece, served in office while Antonis Samaras was Prime Minister.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['inOfficeWhilePrimeMinister', 'birthPlace']
Object: ['Antonis Samaras', 'Greece']

Triple: [['__subject__ Adonis Georgiadis __predicate__ inOfficeWhilePrimeMinister __object__ Antonis Samaras', '__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Greece']]
Text: Born in Greece, Adonis Georgiadis, was in office while Antonis Samaras was Prime Minister.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['inOfficeWhilePrimeMinister', 'birthPlace']
Object: ['Antonis Samaras', 'Greece']

Triple: [['__subject__ Adonis Georgiadis __predicate__ inOfficeWhilePrimeMinister __object__ Antonis Samaras', '__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Greece']]
Text: Adonis Georgiadis was born in Greece and served in office under Prime Minister Antonis Samaras.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['inOfficeWhilePrimeMinister', 'birthPlace']
Object: ['Antonis Samaras', 'Greece']

Triple: [['__subject__ Adonis Georgiadis __predicate__ inOfficeWhilePrimeMinister __object__ Antonis Samaras', '__subject__ Adonis Georgiadis __predicate__ successor __object__ Makis Voridis']]
Text: Makis Voridis was the successor of Adonis Georgiadis, who, served in office while Antonis Samaras was Prime Minister.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['inOfficeWhilePrimeMinister', 'successor']
Object: ['Antonis Samaras', 'Makis Voridis']

Triple: [['__subject__ Adonis Georgiadis __predicate__ inOfficeWhilePrimeMinister __object__ Antonis Samaras', '__subject__ Adonis Georgiadis __predicate__ successor __object__ Makis Voridis']]
Text: Makis Voridis was the successor of Adonis Georgiadis, who in turn was in office under Antonis Samaras, Prime Minister.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['inOfficeWhilePrimeMinister', 'successor']
Object: ['Antonis Samaras', 'Makis Voridis']

Triple: [['__subject__ Adonis Georgiadis __predicate__ inOfficeWhilePrimeMinister __object__ Antonis Samaras', '__subject__ Adonis Georgiadis __predicate__ successor __object__ Makis Voridis']]
Text: Adonis Georgiadis, who was succeeded by Makis Voridis, was in office while Antonis Samaras was Prime Minister.
Subject: ['Adonis Georgiadis', 'Adonis Georgiadis']
Predicate: ['inOfficeWhilePrimeMinister', 'successor']
Object: ['Antonis Samaras', 'Makis Voridis']

Triple: [['__subject__ Adonis Georgiadis __predicate__ inOfficeWhilePrimeMinister __object__ Antonis Samaras', '__subject__ Antonis Samaras __predicate__ birthPlace __object__ Athens']]
Text: Antonis Samaras was born in Athens and served as Prime Minister while Adonis Georgiadis was in office.
Subject: ['Adonis Georgiadis', 'Antonis Samaras']
Predicate: ['inOfficeWhilePrimeMinister', 'birthPlace']
Object: ['Antonis Samaras', 'Athens']

Triple: [['__subject__ Adonis Georgiadis __predicate__ inOfficeWhilePrimeMinister __object__ Antonis Samaras', '__subject__ Antonis Samaras __predicate__ birthPlace __object__ Athens']]
Text: Adonis Georgiadis was in office while Athens born Antonis Samaras was Prime Minister.
Subject: ['Adonis Georgiadis', 'Antonis Samaras']
Predicate: ['inOfficeWhilePrimeMinister', 'birthPlace']
Object: ['Antonis Samaras', 'Athens']

Triple: [['__subject__ Adonis Georgiadis __predicate__ inOfficeWhilePrimeMinister __object__ Antonis Samaras', '__subject__ Antonis Samaras __predicate__ birthPlace __object__ Athens']]
Text: Prime Minister Antonis Samaras was born in Athens and Adonis Georgiadis was a member of his office.
Subject: ['Adonis Georgiadis', 'Antonis Samaras']
Predicate: ['inOfficeWhilePrimeMinister', 'birthPlace']
Object: ['Antonis Samaras', 'Athens']

Triple: [['__subject__ Adonis Georgiadis __predicate__ inOfficeWhilePrimeMinister __object__ Antonis Samaras', '__subject__ Antonis Samaras __predicate__ hasDeputy __object__ Evangelos Venizelos']]
Text: Evangelos Venizelos is Prime Minister Antonis Samaras' deputy while Adonis Georgiadis was under office.
Subject: ['Adonis Georgiadis', 'Antonis Samaras']
Predicate: ['inOfficeWhilePrimeMinister', 'hasDeputy']
Object: ['Antonis Samaras', 'Evangelos Venizelos']

Triple: [['__subject__ Adonis Georgiadis __predicate__ inOfficeWhilePrimeMinister __object__ Antonis Samaras', '__subject__ Antonis Samaras __predicate__ hasDeputy __object__ Evangelos Venizelos']]
Text: Adonis Georgiadis was in office under Prime Minister Antonis Samaras, whose deputy is, Evangelos Venizelos.
Subject: ['Adonis Georgiadis', 'Antonis Samaras']
Predicate: ['inOfficeWhilePrimeMinister', 'hasDeputy']
Object: ['Antonis Samaras', 'Evangelos Venizelos']

Triple: [['__subject__ Agnes Kant __predicate__ almaMater __object__ Radboud University Nijmegen', '__subject__ Agnes Kant __predicate__ birthPlace __object__ Hessisch Oldendorf']]
Text: Agnes Kant, who was born in Hessisch Oldendorf, attended the Radboud University Nijmegen.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['almaMater', 'birthPlace']
Object: ['Radboud University Nijmegen', 'Hessisch Oldendorf']

Triple: [['__subject__ Agnes Kant __predicate__ almaMater __object__ Radboud University Nijmegen', '__subject__ Agnes Kant __predicate__ birthPlace __object__ Hessisch Oldendorf']]
Text: Agnes Kant was born in Hessisch Oldendorf and has alma mater is Radboud University Nijmegen.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['almaMater', 'birthPlace']
Object: ['Radboud University Nijmegen', 'Hessisch Oldendorf']

Triple: [['__subject__ Agnes Kant __predicate__ almaMater __object__ Radboud University Nijmegen', '__subject__ Agnes Kant __predicate__ birthPlace __object__ Hessisch Oldendorf']]
Text: Agnes Kant (b. Hessisch Oldendorf) graduated from Radboud University Nijmegen.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['almaMater', 'birthPlace']
Object: ['Radboud University Nijmegen', 'Hessisch Oldendorf']

Triple: [['__subject__ Agnes Kant __predicate__ birthPlace __object__ Hessisch Oldendorf', '__subject__ Agnes Kant __predicate__ office __object__ House of Representatives (Netherlands)']]
Text: Agnes Kant was born in Hessisch Oldendorf and worked in the Netherlands at the House of Representatives.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['birthPlace', 'office']
Object: ['Hessisch Oldendorf', 'House of Representatives (Netherlands)']

Triple: [['__subject__ Agnes Kant __predicate__ birthPlace __object__ Hessisch Oldendorf', '__subject__ Agnes Kant __predicate__ office __object__ House of Representatives (Netherlands)']]
Text: Agnes Kant was born in Hessisch Oldendorf and worked at the House of Representatives in the Netherlands.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['birthPlace', 'office']
Object: ['Hessisch Oldendorf', 'House of Representatives (Netherlands)']

Triple: [['__subject__ Agnes Kant __predicate__ birthPlace __object__ West Germany', '__subject__ Agnes Kant __predicate__ almaMater __object__ Radboud University Nijmegen']]
Text: Agnes Kant was born in West Germany and her alma mater is the Radboud university Nijmegen.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['birthPlace', 'almaMater']
Object: ['West Germany', 'Radboud University Nijmegen']

Triple: [['__subject__ Agnes Kant __predicate__ birthPlace __object__ West Germany', '__subject__ Agnes Kant __predicate__ almaMater __object__ Radboud University Nijmegen']]
Text: Agnes Kant was born in West Germany, her alma mater is the Radboud University Nijmegen.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['birthPlace', 'almaMater']
Object: ['West Germany', 'Radboud University Nijmegen']

Triple: [['__subject__ Agnes Kant __predicate__ birthPlace __object__ West Germany', '__subject__ Agnes Kant __predicate__ almaMater __object__ Radboud University Nijmegen']]
Text: Agnes Kant was born in West Germany and attending the Radboud University, Nijmegen.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['birthPlace', 'almaMater']
Object: ['West Germany', 'Radboud University Nijmegen']

Triple: [['__subject__ Agnes Kant __predicate__ birthPlace __object__ West Germany', '__subject__ Agnes Kant __predicate__ office __object__ House of Representatives (Netherlands)']]
Text: Agnes Kant, born in West Germany, worked at the House of Representatives in Netherlands.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['birthPlace', 'office']
Object: ['West Germany', 'House of Representatives (Netherlands)']

Triple: [['__subject__ Agnes Kant __predicate__ birthPlace __object__ West Germany', '__subject__ Agnes Kant __predicate__ office __object__ House of Representatives (Netherlands)']]
Text: Agnes Kant (b West Germany) worked at the Netherlands House of Representatives.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['birthPlace', 'office']
Object: ['West Germany', 'House of Representatives (Netherlands)']

Triple: [['__subject__ Agnes Kant __predicate__ birthPlace __object__ West Germany', '__subject__ Agnes Kant __predicate__ office __object__ House of Representatives (Netherlands)']]
Text: Agnes Kant was born in West Germany and worked in the House of Representatives in the Netherlands.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['birthPlace', 'office']
Object: ['West Germany', 'House of Representatives (Netherlands)']

Triple: [['__subject__ Agnes Kant __predicate__ birthPlace __object__ West Germany', '__subject__ Agnes Kant __predicate__ office __object__ Parliamentary group leader']]
Text: West Germany was the birthplace of Agnes Kant, who worked as the Parliamentary group leader.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['birthPlace', 'office']
Object: ['West Germany', 'Parliamentary group leader']

Triple: [['__subject__ Agnes Kant __predicate__ birthPlace __object__ West Germany', '__subject__ Agnes Kant __predicate__ office __object__ Parliamentary group leader']]
Text: West Germany was the birthplace of Agnes Kant, who worked as a Parliamentary group leader.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['birthPlace', 'office']
Object: ['West Germany', 'Parliamentary group leader']

Triple: [['__subject__ Agnes Kant __predicate__ birthPlace __object__ West Germany', '__subject__ Agnes Kant __predicate__ office __object__ Parliamentary group leader']]
Text: Agnes Kant was born in West Germany and was the Parliamentary group leader.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['birthPlace', 'office']
Object: ['West Germany', 'Parliamentary group leader']

Triple: [['__subject__ Agnes Kant __predicate__ nationality __object__ Netherlands', '__subject__ Netherlands __predicate__ currency __object__ Euro']]
Text: Agnes Kant is from the Netherlands, where their currency is the Euro.
Subject: ['Agnes Kant', 'Netherlands']
Predicate: ['nationality', 'currency']
Object: ['Netherlands', 'Euro']

Triple: [['__subject__ Agnes Kant __predicate__ nationality __object__ Netherlands', '__subject__ Netherlands __predicate__ currency __object__ Euro']]
Text: The nationality of Agnes Kant is the Netherlands, where the Euro is the currency.
Subject: ['Agnes Kant', 'Netherlands']
Predicate: ['nationality', 'currency']
Object: ['Netherlands', 'Euro']

Triple: [['__subject__ Agnes Kant __predicate__ nationality __object__ Netherlands', '__subject__ Netherlands __predicate__ currency __object__ Euro']]
Text: Agnes Kant has Dutch nationality, where the euro is the currency.
Subject: ['Agnes Kant', 'Netherlands']
Predicate: ['nationality', 'currency']
Object: ['Netherlands', 'Euro']

Triple: [['__subject__ Agnes Kant __predicate__ nationality __object__ Netherlands', '__subject__ Netherlands __predicate__ leader __object__ Mark Rutte']]
Text: Agnes Kant comes from the Netherlands, the leader of which, is Mark Rutte.
Subject: ['Agnes Kant', 'Netherlands']
Predicate: ['nationality', 'leader']
Object: ['Netherlands', 'Mark Rutte']

Triple: [['__subject__ Agnes Kant __predicate__ nationality __object__ Netherlands', '__subject__ Netherlands __predicate__ leader __object__ Mark Rutte']]
Text: The Netherlands is led by Mark Rutte and home to national Agnes Kant.
Subject: ['Agnes Kant', 'Netherlands']
Predicate: ['nationality', 'leader']
Object: ['Netherlands', 'Mark Rutte']

Triple: [['__subject__ Agnes Kant __predicate__ nationality __object__ Netherlands', '__subject__ Netherlands __predicate__ leader __object__ Mark Rutte']]
Text: Agnes Kant is a national of the Netherlands, where Mark Rutte is a leader.
Subject: ['Agnes Kant', 'Netherlands']
Predicate: ['nationality', 'leader']
Object: ['Netherlands', 'Mark Rutte']

Triple: [['__subject__ Agnes Kant __predicate__ office __object__ Member of the House of Representatives', '__subject__ Agnes Kant __predicate__ birthPlace __object__ Hessisch Oldendorf']]
Text: Agnes Kant was born in Hessisch Oldendorf and worked as a member of the House of Representatives.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['office', 'birthPlace']
Object: ['Member of the House of Representatives', 'Hessisch Oldendorf']

Triple: [['__subject__ Agnes Kant __predicate__ office __object__ Member of the House of Representatives', '__subject__ Agnes Kant __predicate__ birthPlace __object__ Hessisch Oldendorf']]
Text: Agnes Kant, born in Hessisch Oldendorf, was a Member of the House of Representatives.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['office', 'birthPlace']
Object: ['Member of the House of Representatives', 'Hessisch Oldendorf']

Triple: [['__subject__ Agnes Kant __predicate__ office __object__ Member of the House of Representatives', '__subject__ Agnes Kant __predicate__ birthPlace __object__ Hessisch Oldendorf']]
Text: House of Representatives member, Agnes Kant, was born in Hessisch Oldendorf.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['office', 'birthPlace']
Object: ['Member of the House of Representatives', 'Hessisch Oldendorf']

Triple: [['__subject__ Agnes Kant __predicate__ office __object__ Member of the House of Representatives', '__subject__ Agnes Kant __predicate__ birthPlace __object__ West Germany']]
Text: Agnes Kant was born in West Germany and worked as a member of the House of Representatives.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['office', 'birthPlace']
Object: ['Member of the House of Representatives', 'West Germany']

Triple: [['__subject__ Agnes Kant __predicate__ office __object__ Member of the House of Representatives', '__subject__ Agnes Kant __predicate__ birthPlace __object__ West Germany']]
Text: Agnes Kant was born in West Germany and was a member of the House of Representatives.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['office', 'birthPlace']
Object: ['Member of the House of Representatives', 'West Germany']

Triple: [['__subject__ Agnes Kant __predicate__ office __object__ Member of the House of Representatives', '__subject__ Agnes Kant __predicate__ birthPlace __object__ West Germany']]
Text: Agnes Kant, born in West Germany, was a Member of the House of Representatives.
Subject: ['Agnes Kant', 'Agnes Kant']
Predicate: ['office', 'birthPlace']
Object: ['Member of the House of Representatives', 'West Germany']

Triple: [['__subject__ Agnes Kant __predicate__ office __object__ House of Representatives (Netherlands)', '__subject__ House of Representatives (Netherlands) __predicate__ leader __object__ Khadija Arib']]
Text: Agnes Kant worked at the House of Representatives in the Netherlands, the leader of which is Khadija Arib.
Subject: ['Agnes Kant', 'House of Representatives (Netherlands)']
Predicate: ['office', 'leader']
Object: ['House of Representatives (Netherlands)', 'Khadija Arib']

Triple: [['__subject__ Agnes Kant __predicate__ office __object__ House of Representatives (Netherlands)', '__subject__ House of Representatives (Netherlands) __predicate__ leader __object__ Khadija Arib']]
Text: Khadija Arib is the leader of the House of Representatives in the Netherlands and Agnes Kant worked there.
Subject: ['Agnes Kant', 'House of Representatives (Netherlands)']
Predicate: ['office', 'leader']
Object: ['House of Representatives (Netherlands)', 'Khadija Arib']

Triple: [['__subject__ Agnes Kant __predicate__ office __object__ House of Representatives (Netherlands)', '__subject__ House of Representatives (Netherlands) __predicate__ leader __object__ Khadija Arib']]
Text: Khadija Arib is the leader of the House of Representatives in the Netherlands where Agnes Kant worked.
Subject: ['Agnes Kant', 'House of Representatives (Netherlands)']
Predicate: ['office', 'leader']
Object: ['House of Representatives (Netherlands)', 'Khadija Arib']

Triple: [['__subject__ Agnes Kant __predicate__ office __object__ Socialist Party (Netherlands)', '__subject__ Socialist Party (Netherlands) __predicate__ leader __object__ Emile Roemer']]
Text: Agnes Kant held office in the Socialist Party of the Netherlands which was led by Emile Roemer.
Subject: ['Agnes Kant', 'Socialist Party (Netherlands)']
Predicate: ['office', 'leader']
Object: ['Socialist Party (Netherlands)', 'Emile Roemer']

Triple: [['__subject__ Agnes Kant __predicate__ office __object__ Socialist Party (Netherlands)', '__subject__ Socialist Party (Netherlands) __predicate__ leader __object__ Emile Roemer']]
Text: Agnes Kant worked at the Socialist Party in the Netherlands which is led by Emile Roemer.
Subject: ['Agnes Kant', 'Socialist Party (Netherlands)']
Predicate: ['office', 'leader']
Object: ['Socialist Party (Netherlands)', 'Emile Roemer']

Triple: [['__subject__ Agnes Kant __predicate__ office __object__ Socialist Party (Netherlands)', '__subject__ Socialist Party (Netherlands) __predicate__ leader __object__ Emile Roemer']]
Text: Agnes Kant held office in the Socialist Party of the Netherlands, the leader of which, is Emile Roemer.
Subject: ['Agnes Kant', 'Socialist Party (Netherlands)']
Predicate: ['office', 'leader']
Object: ['Socialist Party (Netherlands)', 'Emile Roemer']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ Battle of France', '__subject__ Airey Neave __predicate__ activeYearsEndDate __object__ 1979-03-30']]
Text: Airey Neave was involved in the Battle of France and he ended his career on 30th March 1979.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'activeYearsEndDate']
Object: ['Battle of France', '1979-03-30']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ Battle of France', '__subject__ Airey Neave __predicate__ activeYearsEndDate __object__ 1979-03-30']]
Text: Airey Neave fought in the Battle of France and ended his career on 30th March 1979.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'activeYearsEndDate']
Object: ['Battle of France', '1979-03-30']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ Battle of France', '__subject__ Airey Neave __predicate__ activeYearsEndDate __object__ 1979-03-30']]
Text: Airey Neave fought in the Battle of France and his career ended on 30th March 1979.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'activeYearsEndDate']
Object: ['Battle of France', '1979-03-30']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ Battle of France', '__subject__ Airey Neave __predicate__ activeYearsStartDate __object__ 1953-06-30']]
Text: Airey Neave began his career on 30th June 1953 and he was involved in the Battle of France.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'activeYearsStartDate']
Object: ['Battle of France', '1953-06-30']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ Battle of France', '__subject__ Airey Neave __predicate__ activeYearsStartDate __object__ 1953-06-30']]
Text: Airey Neave started his career on 30th June 1953 and was involved in the Battle of France.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'activeYearsStartDate']
Object: ['Battle of France', '1953-06-30']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ Battle of France', '__subject__ Airey Neave __predicate__ activeYearsStartDate __object__ 1953-06-30']]
Text: Airey Neave, started his career on 30th June 1953 and was involved in the Battle of France.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'activeYearsStartDate']
Object: ['Battle of France', '1953-06-30']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ Battle of France', '__subject__ Airey Neave __predicate__ birthPlace __object__ Knightsbridge, London']]
Text: Airey Neave, born in Knightsbridge, London, fought in the Battle of France.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'birthPlace']
Object: ['Battle of France', 'Knightsbridge, London']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ Battle of France', '__subject__ Airey Neave __predicate__ birthPlace __object__ Knightsbridge, London']]
Text: Airey Neave, born in Knightsbridge, London, was involved in the Battle of France.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'birthPlace']
Object: ['Battle of France', 'Knightsbridge, London']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ Battle of France', '__subject__ Airey Neave __predicate__ birthPlace __object__ Knightsbridge, London']]
Text: Airey Neave, who fought in the Battle of France, was born in Knightsbridge, London.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'birthPlace']
Object: ['Battle of France', 'Knightsbridge, London']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ Battle of France', '__subject__ Airey Neave __predicate__ birthPlace __object__ Knightsbridge']]
Text: Airey Neave, born in Knightsbridge, fought in the Battle of France.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'birthPlace']
Object: ['Battle of France', 'Knightsbridge']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ Battle of France', '__subject__ Airey Neave __predicate__ birthPlace __object__ Knightsbridge']]
Text: Airey Neave was born in Knightsbridge and fought in the Battle of France.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'birthPlace']
Object: ['Battle of France', 'Knightsbridge']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ Battle of France', '__subject__ Airey Neave __predicate__ birthPlace __object__ Knightsbridge']]
Text: Airey Neave (b Knightsbridge) took part in the Battle of France.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'birthPlace']
Object: ['Battle of France', 'Knightsbridge']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ World War II', '__subject__ Airey Neave __predicate__ activeYearsEndDate __object__ 1979-03-30']]
Text: Airey Neave fought in World War II and ended his career on 30 March 1979.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'activeYearsEndDate']
Object: ['World War II', '1979-03-30']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ World War II', '__subject__ Airey Neave __predicate__ activeYearsEndDate __object__ 1979-03-30']]
Text: Airey Neave, who fought in World War II, ended his career on 30th March 1979.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'activeYearsEndDate']
Object: ['World War II', '1979-03-30']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ World War II', '__subject__ Airey Neave __predicate__ activeYearsEndDate __object__ 1979-03-30']]
Text: Airey Neave was in World War II and his career ended on 30th March 1979.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'activeYearsEndDate']
Object: ['World War II', '1979-03-30']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ World War II', '__subject__ Airey Neave __predicate__ activeYearsStartDate __object__ 1974-03-04']]
Text: Airey Neave was in World War II and began his career on March 4th 1974.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'activeYearsStartDate']
Object: ['World War II', '1974-03-04']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ World War II', '__subject__ Airey Neave __predicate__ activeYearsStartDate __object__ 1974-03-04']]
Text: Airey Neave began his career on March 4th 1974 and fought in World War II.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'activeYearsStartDate']
Object: ['World War II', '1974-03-04']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ World War II', '__subject__ Airey Neave __predicate__ activeYearsStartDate __object__ 1974-03-04']]
Text: Airey Neave fought in the Second World War and began his career on March 4th 1974.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'activeYearsStartDate']
Object: ['World War II', '1974-03-04']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ World War II', '__subject__ Airey Neave __predicate__ birthPlace __object__ Knightsbridge, London']]
Text: Knightsbridge, London, is the birthplace of Airey Neave, who fought in World War II.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'birthPlace']
Object: ['World War II', 'Knightsbridge, London']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ World War II', '__subject__ Airey Neave __predicate__ birthPlace __object__ Knightsbridge, London']]
Text: Knightsbridge, London is the birthplace of Airey Neave, who was in World War II.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'birthPlace']
Object: ['World War II', 'Knightsbridge, London']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ World War II', '__subject__ Airey Neave __predicate__ birthPlace __object__ Knightsbridge, London']]
Text: Airey Neave was born in Knightsbridge, London and fought in World War II.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['battle', 'birthPlace']
Object: ['World War II', 'Knightsbridge, London']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ World War II', '__subject__ World War II __predicate__ commander __object__ Benito Mussolini']]
Text: Both Airey Neave and Benito Mussolini (commander) participated in World War II.
Subject: ['Airey Neave', 'World War II']
Predicate: ['battle', 'commander']
Object: ['World War II', 'Benito Mussolini']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ World War II', '__subject__ World War II __predicate__ commander __object__ Benito Mussolini']]
Text: Airey Neave was in World War II and a commander there was Benito Mussolini.
Subject: ['Airey Neave', 'World War II']
Predicate: ['battle', 'commander']
Object: ['World War II', 'Benito Mussolini']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ World War II', '__subject__ World War II __predicate__ commander __object__ Benito Mussolini']]
Text: Benito Mussolini was a commander in World War II, the war Airey Neave was invloved in.
Subject: ['Airey Neave', 'World War II']
Predicate: ['battle', 'commander']
Object: ['World War II', 'Benito Mussolini']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ World War II', '__subject__ World War II __predicate__ commander __object__ Chiang Kai-shek']]
Text: Airey Neave fought in World War II, during which, Chiang Kai-shek was a commander.
Subject: ['Airey Neave', 'World War II']
Predicate: ['battle', 'commander']
Object: ['World War II', 'Chiang Kai-shek']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ World War II', '__subject__ World War II __predicate__ commander __object__ Chiang Kai-shek']]
Text: Airey Neave was in World War II, where one of the commanders was, Chiang Kai-shek.
Subject: ['Airey Neave', 'World War II']
Predicate: ['battle', 'commander']
Object: ['World War II', 'Chiang Kai-shek']

Triple: [['__subject__ Airey Neave __predicate__ battle __object__ World War II', '__subject__ World War II __predicate__ commander __object__ Chiang Kai-shek']]
Text: Airey Neave fought in World War II in which Chiang Kai-shek was a commander.
Subject: ['Airey Neave', 'World War II']
Predicate: ['battle', 'commander']
Object: ['World War II', 'Chiang Kai-shek']

Triple: [['__subject__ Airey Neave __predicate__ militaryRank __object__ Lieutenant colonel', '__subject__ Airey Neave __predicate__ activeYearsEndDate __object__ 1979-03-30']]
Text: Airey Neave was a Lieutenant Colonel and ended his career on 30th March 1979.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['militaryRank', 'activeYearsEndDate']
Object: ['Lieutenant colonel', '1979-03-30']

Triple: [['__subject__ Airey Neave __predicate__ militaryRank __object__ Lieutenant colonel', '__subject__ Airey Neave __predicate__ activeYearsEndDate __object__ 1979-03-30']]
Text: Airey Neave was a Lieutenant Colonel and he ended his career on 30th March 1979.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['militaryRank', 'activeYearsEndDate']
Object: ['Lieutenant colonel', '1979-03-30']

Triple: [['__subject__ Airey Neave __predicate__ militaryRank __object__ Lieutenant colonel', '__subject__ Airey Neave __predicate__ activeYearsEndDate __object__ 1979-03-30']]
Text: Airey Neave, whose military rank is Lieutenant Colonel, ended his career on 30th March 1979.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['militaryRank', 'activeYearsEndDate']
Object: ['Lieutenant colonel', '1979-03-30']

Triple: [['__subject__ Airey Neave __predicate__ serviceStartYear __object__ 1935', '__subject__ Airey Neave __predicate__ activeYearsEndDate __object__ 1979-03-30']]
Text: Airey Neave started serving in military in 1935 and ended his career on 30th March 1979.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['serviceStartYear', 'activeYearsEndDate']
Object: ['1935', '1979-03-30']

Triple: [['__subject__ Airey Neave __predicate__ serviceStartYear __object__ 1935', '__subject__ Airey Neave __predicate__ activeYearsEndDate __object__ 1979-03-30']]
Text: Airey Neave whose military career began in 1935, ended his career on 30th March 1979.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['serviceStartYear', 'activeYearsEndDate']
Object: ['1935', '1979-03-30']

Triple: [['__subject__ Airey Neave __predicate__ serviceStartYear __object__ 1935', '__subject__ Airey Neave __predicate__ activeYearsEndDate __object__ 1979-03-30']]
Text: Airey Neave began his service in 1935 and his career ended on 30 March 1979.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['serviceStartYear', 'activeYearsEndDate']
Object: ['1935', '1979-03-30']

Triple: [['__subject__ Airey Neave __predicate__ unit __object__ Royal Artillery', '__subject__ Airey Neave __predicate__ award __object__ Distinguished Service Order']]
Text: Airey Neave, served in the Royal Artillery Unit, and was awarded the Distinguished Service Order.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['unit', 'award']
Object: ['Royal Artillery', 'Distinguished Service Order']

Triple: [['__subject__ Airey Neave __predicate__ unit __object__ Royal Artillery', '__subject__ Airey Neave __predicate__ award __object__ Distinguished Service Order']]
Text: Airey Neave's unit was the Royal Artillery, and he was awarded the Distinguished Service Order.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['unit', 'award']
Object: ['Royal Artillery', 'Distinguished Service Order']

Triple: [['__subject__ Airey Neave __predicate__ unit __object__ Royal Artillery', '__subject__ Airey Neave __predicate__ award __object__ Distinguished Service Order']]
Text: Part of the Royal Artillery, Airey Neave, was a hero who was awarded the Distinguished Service Order.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['unit', 'award']
Object: ['Royal Artillery', 'Distinguished Service Order']

Triple: [['__subject__ Airey Neave __predicate__ unit __object__ Royal Artillery', '__subject__ Airey Neave __predicate__ award __object__ Order of the British Empire']]
Text: Airey Neave served in the Royal Artillery Unit and was awarded the Order of the British Empire.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['unit', 'award']
Object: ['Royal Artillery', 'Order of the British Empire']

Triple: [['__subject__ Airey Neave __predicate__ unit __object__ Royal Artillery', '__subject__ Airey Neave __predicate__ award __object__ Order of the British Empire']]
Text: Airey Neave served in the Royal Artillery an was awarded the Order of the British Empire.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['unit', 'award']
Object: ['Royal Artillery', 'Order of the British Empire']

Triple: [['__subject__ Airey Neave __predicate__ unit __object__ Royal Artillery', '__subject__ Airey Neave __predicate__ award __object__ Territorial Decoration']]
Text: Airey Neave, awarded the Territorial Decoration, served in the Royal Artillery Unit.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['unit', 'award']
Object: ['Royal Artillery', 'Territorial Decoration']

Triple: [['__subject__ Airey Neave __predicate__ unit __object__ Royal Artillery', '__subject__ Airey Neave __predicate__ award __object__ Territorial Decoration']]
Text: Airey Neave, whose unit was the Royal Artillery, won the Territorial Decoration award.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['unit', 'award']
Object: ['Royal Artillery', 'Territorial Decoration']

Triple: [['__subject__ Airey Neave __predicate__ unit __object__ Royal Artillery', '__subject__ Airey Neave __predicate__ award __object__ Territorial Decoration']]
Text: Airey Neave served in the Royal Artillery Unit where he won the Territorial Decoration Award.
Subject: ['Airey Neave', 'Airey Neave']
Predicate: ['unit', 'award']
Object: ['Royal Artillery', 'Territorial Decoration']

Triple: [['__subject__ Albert B. White __predicate__ birthDate __object__ 1856-09-22', '__subject__ Albert B. White __predicate__ birthPlace __object__ Cleveland']]
Text: Albert B White was born in Cleveland 1856-09-22.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['birthDate', 'birthPlace']
Object: ['1856-09-22', 'Cleveland']

Triple: [['__subject__ Albert B. White __predicate__ birthDate __object__ 1856-09-22', '__subject__ Albert B. White __predicate__ birthPlace __object__ Cleveland']]
Text: Albert B. White was born, 22nd September, 1856, in Cleveland.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['birthDate', 'birthPlace']
Object: ['1856-09-22', 'Cleveland']

Triple: [['__subject__ Albert B. White __predicate__ birthDate __object__ 1856-09-22', '__subject__ Albert B. White __predicate__ birthPlace __object__ Cleveland']]
Text: Albert B. White was born in Cleveland on September 2, 1856.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['birthDate', 'birthPlace']
Object: ['1856-09-22', 'Cleveland']

Triple: [['__subject__ Albert B. White __predicate__ birthDate __object__ 1856-09-22', '__subject__ Albert B. White __predicate__ deathDate __object__ 1941-07-03']]
Text: Albert B White was born on September 22nd 1856 and died July 7th, 1941.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['birthDate', 'deathDate']
Object: ['1856-09-22', '1941-07-03']

Triple: [['__subject__ Albert B. White __predicate__ birthDate __object__ 1856-09-22', '__subject__ Albert B. White __predicate__ deathDate __object__ 1941-07-03']]
Text: Albert B White was born 09/22/1856 and passed 04/03/1941.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['birthDate', 'deathDate']
Object: ['1856-09-22', '1941-07-03']

Triple: [['__subject__ Albert B. White __predicate__ birthDate __object__ 1856-09-22', '__subject__ Albert B. White __predicate__ deathDate __object__ 1941-07-03']]
Text: Albert B White was born on 22nd September 1856 and died on 3rd July 1941.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['birthDate', 'deathDate']
Object: ['1856-09-22', '1941-07-03']

Triple: [['__subject__ Albert B. White __predicate__ birthDate __object__ 1856-09-22', '__subject__ Albert B. White __predicate__ deathPlace __object__ Parkersburg, West Virginia']]
Text: Albert White was born on 22nd September 1856 and he died in Parkersburg West Virginia.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['birthDate', 'deathPlace']
Object: ['1856-09-22', 'Parkersburg, West Virginia']

Triple: [['__subject__ Albert B. White __predicate__ birthDate __object__ 1856-09-22', '__subject__ Albert B. White __predicate__ deathPlace __object__ Parkersburg, West Virginia']]
Text: Albert B White was born on September 22nd, 1856 and died in Parkersburg, West Virginia.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['birthDate', 'deathPlace']
Object: ['1856-09-22', 'Parkersburg, West Virginia']

Triple: [['__subject__ Albert B. White __predicate__ birthDate __object__ 1856-09-22', '__subject__ Albert B. White __predicate__ deathPlace __object__ Parkersburg, West Virginia']]
Text: Albert B. White was born September 22nd, 1856 and died in Parkersburg, West Virginia.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['birthDate', 'deathPlace']
Object: ['1856-09-22', 'Parkersburg, West Virginia']

Triple: [['__subject__ Albert B. White __predicate__ birthYear __object__ 1856', '__subject__ Albert B. White __predicate__ birthDate __object__ 1856-09-22']]
Text: Albert B. White was born 09/22/1856.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['birthYear', 'birthDate']
Object: ['1856', '1856-09-22']

Triple: [['__subject__ Albert B. White __predicate__ birthYear __object__ 1856', '__subject__ Albert B. White __predicate__ birthDate __object__ 1856-09-22']]
Text: Albert B. White was born on the 22nd of September, 1856.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['birthYear', 'birthDate']
Object: ['1856', '1856-09-22']

Triple: [['__subject__ Albert B. White __predicate__ birthYear __object__ 1856', '__subject__ Albert B. White __predicate__ birthDate __object__ 1856-09-22']]
Text: Albert B. White was born on the 22nd of September, in 1856.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['birthYear', 'birthDate']
Object: ['1856', '1856-09-22']

Triple: [['__subject__ Albert B. White __predicate__ party __object__ Republican Party (United States)', '__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson']]
Text: Albert B White, a member of the Republican Party of the United States, was succeeded by William M O Dawson.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['party', 'successor']
Object: ['Republican Party (United States)', 'William M. O. Dawson']

Triple: [['__subject__ Albert B. White __predicate__ party __object__ Republican Party (United States)', '__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson']]
Text: Albert B.White is a member of the Republican Party of the United States and he was succeeded by William M.O. Dawson.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['party', 'successor']
Object: ['Republican Party (United States)', 'William M. O. Dawson']

Triple: [['__subject__ Albert B. White __predicate__ party __object__ Republican Party (United States)', '__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson']]
Text: Albert B.White is a member of the Republican Party of the United States and was succeeded by William M. O. Dawson.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['party', 'successor']
Object: ['Republican Party (United States)', 'William M. O. Dawson']

Triple: [['__subject__ Albert B. White __predicate__ spouse __object__ Agnes Ward White', '__subject__ Albert B. White __predicate__ activeYearsEndDate __object__ 1905-03-04']]
Text: Albert B. White, who was married to Agnes Ward White, finished his career on March 4th 1905.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['spouse', 'activeYearsEndDate']
Object: ['Agnes Ward White', '1905-03-04']

Triple: [['__subject__ Albert B. White __predicate__ spouse __object__ Agnes Ward White', '__subject__ Albert B. White __predicate__ activeYearsEndDate __object__ 1905-03-04']]
Text: Agnes Ward White was the wife of Albert B. White, who finished his career on March 4th 1905.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['spouse', 'activeYearsEndDate']
Object: ['Agnes Ward White', '1905-03-04']

Triple: [['__subject__ Albert B. White __predicate__ spouse __object__ Agnes Ward White', '__subject__ Albert B. White __predicate__ activeYearsEndDate __object__ 1905-03-04']]
Text: Albert B. White was married to Agnes Ward White and finished his career on March 4th 1905.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['spouse', 'activeYearsEndDate']
Object: ['Agnes Ward White', '1905-03-04']

Triple: [['__subject__ Albert B. White __predicate__ spouse __object__ Agnes Ward White', '__subject__ Albert B. White __predicate__ birthPlace __object__ Cleveland']]
Text: Agnes Ward White, wife of Albert B. White was born in Cleveland.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['spouse', 'birthPlace']
Object: ['Agnes Ward White', 'Cleveland']

Triple: [['__subject__ Albert B. White __predicate__ spouse __object__ Agnes Ward White', '__subject__ Albert B. White __predicate__ birthPlace __object__ Cleveland']]
Text: Albert B. White, who was born in Cleveland, was the spouse of Agnes Ward White.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['spouse', 'birthPlace']
Object: ['Agnes Ward White', 'Cleveland']

Triple: [['__subject__ Albert B. White __predicate__ spouse __object__ Agnes Ward White', '__subject__ Albert B. White __predicate__ birthPlace __object__ Cleveland']]
Text: Albert B. White was born in Cleveland, and is married to Agnes Ward White.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['spouse', 'birthPlace']
Object: ['Agnes Ward White', 'Cleveland']

Triple: [['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson', '__subject__ Albert B. White __predicate__ activeYearsEndDate __object__ 1905-03-04']]
Text: Albert B. White finished his career on March 4th 1905 and was succeeded by William M O Dawson.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['successor', 'activeYearsEndDate']
Object: ['William M. O. Dawson', '1905-03-04']

Triple: [['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson', '__subject__ Albert B. White __predicate__ activeYearsEndDate __object__ 1905-03-04']]
Text: William M O Dawson was the successor to Albert B. White, who retired March 4, 1905.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['successor', 'activeYearsEndDate']
Object: ['William M. O. Dawson', '1905-03-04']

Triple: [['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson', '__subject__ Albert B. White __predicate__ activeYearsEndDate __object__ 1905-03-04']]
Text: William M.O. Dawson succeeded Albert B. White who ended his career on 4th March 1905.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['successor', 'activeYearsEndDate']
Object: ['William M. O. Dawson', '1905-03-04']

Triple: [['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson', '__subject__ Albert B. White __predicate__ birthPlace __object__ Cleveland']]
Text: Albert B. White was born in Cleveland and was succeeded by William MO Dawson.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['successor', 'birthPlace']
Object: ['William M. O. Dawson', 'Cleveland']

Triple: [['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson', '__subject__ Albert B. White __predicate__ birthPlace __object__ Cleveland']]
Text: The successor to Cleveland born, Albert B. White, was William M.O. Dawson.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['successor', 'birthPlace']
Object: ['William M. O. Dawson', 'Cleveland']

Triple: [['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson', '__subject__ Albert B. White __predicate__ birthPlace __object__ Cleveland']]
Text: Cleveland born, Albert B. White's, successor was William M. O. Dawson.
Subject: ['Albert B. White', 'Albert B. White']
Predicate: ['successor', 'birthPlace']
Object: ['William M. O. Dawson', 'Cleveland']

Triple: [['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson', '__subject__ William M. O. Dawson __predicate__ birthPlace __object__ Bloomington, Maryland']]
Text: William M O Dawson, born in Bloomington, Maryland, was the successor of Albert B White.
Subject: ['Albert B. White', 'William M. O. Dawson']
Predicate: ['successor', 'birthPlace']
Object: ['William M. O. Dawson', 'Bloomington, Maryland']

Triple: [['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson', '__subject__ William M. O. Dawson __predicate__ birthPlace __object__ Bloomington, Maryland']]
Text: William M O Dawson (b Bloomington, Maryland) succeeded Albert B White.
Subject: ['Albert B. White', 'William M. O. Dawson']
Predicate: ['successor', 'birthPlace']
Object: ['William M. O. Dawson', 'Bloomington, Maryland']

Triple: [['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson', '__subject__ William M. O. Dawson __predicate__ birthPlace __object__ Bloomington, Maryland']]
Text: Albert B White was succeeded by William M O Dawson, who was born in Bloomington Maryland.
Subject: ['Albert B. White', 'William M. O. Dawson']
Predicate: ['successor', 'birthPlace']
Object: ['William M. O. Dawson', 'Bloomington, Maryland']

Triple: [['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson', '__subject__ William M. O. Dawson __predicate__ deathPlace __object__ Charleston, West Virginia']]
Text: Albert B White was succeeded by William M O Dawson, who, died in Charleston, West Virginia.
Subject: ['Albert B. White', 'William M. O. Dawson']
Predicate: ['successor', 'deathPlace']
Object: ['William M. O. Dawson', 'Charleston, West Virginia']

Triple: [['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson', '__subject__ William M. O. Dawson __predicate__ deathPlace __object__ Charleston, West Virginia']]
Text: The successor to Albert B. White was William M.O. Dawson, who died in Charleston, West Virginia.
Subject: ['Albert B. White', 'William M. O. Dawson']
Predicate: ['successor', 'deathPlace']
Object: ['William M. O. Dawson', 'Charleston, West Virginia']

Triple: [['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson', '__subject__ William M. O. Dawson __predicate__ deathPlace __object__ Charleston, West Virginia']]
Text: Albert B. White's successor was William M. O. Dawson, who died in Charleston, West Virginia.
Subject: ['Albert B. White', 'William M. O. Dawson']
Predicate: ['successor', 'deathPlace']
Object: ['William M. O. Dawson', 'Charleston, West Virginia']

Triple: [['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson', '__subject__ William M. O. Dawson __predicate__ party __object__ Republican Party (United States)']]
Text: Albert B White was succeeded by William M O Dawson, who is a member of the United States Republican party.
Subject: ['Albert B. White', 'William M. O. Dawson']
Predicate: ['successor', 'party']
Object: ['William M. O. Dawson', 'Republican Party (United States)']

Triple: [['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson', '__subject__ William M. O. Dawson __predicate__ party __object__ Republican Party (United States)']]
Text: Albert B. White's successor was William M. O. Dawson, a member of the United States Republican Party.
Subject: ['Albert B. White', 'William M. O. Dawson']
Predicate: ['successor', 'party']
Object: ['William M. O. Dawson', 'Republican Party (United States)']

Triple: [['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson', '__subject__ William M. O. Dawson __predicate__ party __object__ Republican Party (United States)']]
Text: Albert B White was succeeded by Republican William M O Dawson.
Subject: ['Albert B. White', 'William M. O. Dawson']
Predicate: ['successor', 'party']
Object: ['William M. O. Dawson', 'Republican Party (United States)']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ battle __object__ American Civil War', '__subject__ American Civil War __predicate__ commander __object__ Jefferson Davis']]
Text: Albert Jennings Fountain fought in the American Civil War. Jefferson Davis was one commander in that war.
Subject: ['Albert Jennings Fountain', 'American Civil War']
Predicate: ['battle', 'commander']
Object: ['American Civil War', 'Jefferson Davis']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ battle __object__ American Civil War', '__subject__ American Civil War __predicate__ commander __object__ Jefferson Davis']]
Text: Jefferson Davis was a commander in the American Civil War, the war Albert Jennings Fountain fought in.
Subject: ['Albert Jennings Fountain', 'American Civil War']
Predicate: ['battle', 'commander']
Object: ['American Civil War', 'Jefferson Davis']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ battle __object__ American Civil War', '__subject__ American Civil War __predicate__ commander __object__ Jefferson Davis']]
Text: Jefferson Davis, was a commander in the American Civil War, the war in which Albert Jennings Fountain fought.
Subject: ['Albert Jennings Fountain', 'American Civil War']
Predicate: ['battle', 'commander']
Object: ['American Civil War', 'Jefferson Davis']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ New York', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ Staten Island']]
Text: Albert Jennings Fountain was born in Staten Island, New York.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['birthPlace', 'birthPlace']
Object: ['New York', 'Staten Island']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ New York', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ Staten Island']]
Text: Albert Jennings Fountain was born in Staten Island, in New York.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['birthPlace', 'birthPlace']
Object: ['New York', 'Staten Island']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ New York', '__subject__ New York __predicate__ language __object__ Arabic']]
Text: Albert Jennings Fountain was born in New York, where Arabic is spoken amongst many other languages.
Subject: ['Albert Jennings Fountain', 'New York']
Predicate: ['birthPlace', 'language']
Object: ['New York', 'Arabic']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ New York', '__subject__ New York __predicate__ language __object__ Arabic']]
Text: Albert Jennings Fountain was born in New York, a city of many languages, on of which is, Arabic.
Subject: ['Albert Jennings Fountain', 'New York']
Predicate: ['birthPlace', 'language']
Object: ['New York', 'Arabic']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ New York', '__subject__ New York __predicate__ language __object__ Arabic']]
Text: Albert Jennings Fountain came from New York where one language spoken is Arabic.
Subject: ['Albert Jennings Fountain', 'New York']
Predicate: ['birthPlace', 'language']
Object: ['New York', 'Arabic']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ New York', '__subject__ New York __predicate__ language __object__ French language']]
Text: Albert Jennings Fountain was born in New York, where one of the languages spoken, is French.
Subject: ['Albert Jennings Fountain', 'New York']
Predicate: ['birthPlace', 'language']
Object: ['New York', 'French language']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ New York', '__subject__ New York __predicate__ language __object__ French language']]
Text: Albert Jennings Fountain was born in New York, where French is one of the languages spoken.
Subject: ['Albert Jennings Fountain', 'New York']
Predicate: ['birthPlace', 'language']
Object: ['New York', 'French language']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ New York', '__subject__ New York __predicate__ language __object__ French language']]
Text: Albert Jennings Fountain was born in New York where one of the spoken languages is French.
Subject: ['Albert Jennings Fountain', 'New York']
Predicate: ['birthPlace', 'language']
Object: ['New York', 'French language']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ New York City', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ Staten Island']]
Text: Albert Jennings Fountain was born on Staten Island in New York City.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['birthPlace', 'birthPlace']
Object: ['New York City', 'Staten Island']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ New York City', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ Staten Island']]
Text: Staten Island, New York City, was the birth place of Albert Jennings Fountain.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['birthPlace', 'birthPlace']
Object: ['New York City', 'Staten Island']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ United States', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ Staten Island']]
Text: Albert Jennings Fountain was born in Staten Island, in the United States.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['birthPlace', 'birthPlace']
Object: ['United States', 'Staten Island']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ United States', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ Staten Island']]
Text: Albert Jennings Fountain birthplace is the United States on Staten Island.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['birthPlace', 'birthPlace']
Object: ['United States', 'Staten Island']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ United States', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ Staten Island']]
Text: Staten Island, in the United States, is the birth place of Albert Jennings Fountain.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['birthPlace', 'birthPlace']
Object: ['United States', 'Staten Island']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ Doña Ana County, New Mexico', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ Staten Island']]
Text: Staten Island born, Albert Jennings Fountain, died in Dona Ana County, New Mexico.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['deathPlace', 'birthPlace']
Object: ['Doña Ana County, New Mexico', 'Staten Island']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ Doña Ana County, New Mexico', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ Staten Island']]
Text: Albert Jennings Fountain was born in Staten Island and died in Dona Ana County, New Mexico.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['deathPlace', 'birthPlace']
Object: ['Doña Ana County, New Mexico', 'Staten Island']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ Doña Ana County, New Mexico', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ Staten Island']]
Text: Albert Jennings Fountain died in Dona Ana County, New Mexico and he was born in Staten Island.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['deathPlace', 'birthPlace']
Object: ['Doña Ana County, New Mexico', 'Staten Island']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ Doña Ana County, New Mexico', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ United States']]
Text: Albert Jennings Fountain's birthplace was the U.S. and he died in Dona Ana County, New Mexico.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['deathPlace', 'birthPlace']
Object: ['Doña Ana County, New Mexico', 'United States']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ Doña Ana County, New Mexico', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ United States']]
Text: Albert Jennings Fountain was born in the United States and died in Dona Ana County, New Mexico.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['deathPlace', 'birthPlace']
Object: ['Doña Ana County, New Mexico', 'United States']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ New Mexico Territory', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ New York City']]
Text: Albert Jennings Fountain, was born in New York City and died in New Mexico Territory.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['deathPlace', 'birthPlace']
Object: ['New Mexico Territory', 'New York City']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ New Mexico Territory', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ New York City']]
Text: Albert Jennings Fountain, born in New York City, died in the New Mexico Territory.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['deathPlace', 'birthPlace']
Object: ['New Mexico Territory', 'New York City']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ New Mexico Territory', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ New York City']]
Text: Albert Jennings Fountain was born in New York City and died in the New Mexico Territory.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['deathPlace', 'birthPlace']
Object: ['New Mexico Territory', 'New York City']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ United States', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ Staten Island']]
Text: Albert Jennings Fountain died in the United States and was born in Staten Island.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['deathPlace', 'birthPlace']
Object: ['United States', 'Staten Island']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ United States', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ Staten Island']]
Text: Albert Jennings Fountain, who was born in Staten Island, died in the U.S.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['deathPlace', 'birthPlace']
Object: ['United States', 'Staten Island']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ United States', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ Staten Island']]
Text: Albert Jennings Fountain was born in Staten Island and died in the U.S.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['deathPlace', 'birthPlace']
Object: ['United States', 'Staten Island']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Albert Jennings Fountain died in the United States where African Americans are an ethnic group.
Subject: ['Albert Jennings Fountain', 'United States']
Predicate: ['deathPlace', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Albert Jennings Fountain died in the United States, where African Americans are an ethnic group.
Subject: ['Albert Jennings Fountain', 'United States']
Predicate: ['deathPlace', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Albert Jennings Fountain died in the US, where African Americans are an ethnic group.
Subject: ['Albert Jennings Fountain', 'United States']
Predicate: ['deathPlace', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ inOfficeWhileVicePresident __object__ Edmund J. Davis', '__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ Doña Ana County, New Mexico']]
Text: Albert Jennings Fountain, a politician while Vice President Edmund J. Davis was in office, died in Dona Ana County, New Mexico.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['inOfficeWhileVicePresident', 'deathPlace']
Object: ['Edmund J. Davis', 'Doña Ana County, New Mexico']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ inOfficeWhileVicePresident __object__ Edmund J. Davis', '__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ Doña Ana County, New Mexico']]
Text: Albert Jennings Fountain was in office while Edmund J. Davis was Vice President and later died in Dona Ana County, New Mexico.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['inOfficeWhileVicePresident', 'deathPlace']
Object: ['Edmund J. Davis', 'Doña Ana County, New Mexico']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ inOfficeWhileVicePresident __object__ Edmund J. Davis', '__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ United States']]
Text: Albert Jennings Fountain was in office while Edmund J. Davis was Vice President. Mr. Fountain died in the U.S.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['inOfficeWhileVicePresident', 'deathPlace']
Object: ['Edmund J. Davis', 'United States']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ inOfficeWhileVicePresident __object__ Edmund J. Davis', '__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ United States']]
Text: Albert Jennings Fountain was in office while Edmund J. Davis was Vice President and Fountain id in the U.S.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['inOfficeWhileVicePresident', 'deathPlace']
Object: ['Edmund J. Davis', 'United States']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ inOfficeWhileVicePresident __object__ Edmund J. Davis', '__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ United States']]
Text: Albert Jennings Fountain, a politician while Vice President Edmund J. Davis was in office, died in the United States.
Subject: ['Albert Jennings Fountain', 'Albert Jennings Fountain']
Predicate: ['inOfficeWhileVicePresident', 'deathPlace']
Object: ['Edmund J. Davis', 'United States']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ inOfficeWhileVicePresident __object__ Edmund J. Davis', '__subject__ Edmund J. Davis __predicate__ deathPlace __object__ Austin, Texas']]
Text: Albert Jennings Fountain was in office whilst Edmund J. Davis (who later died in Austin, Texas), was Vice President.
Subject: ['Albert Jennings Fountain', 'Edmund J. Davis']
Predicate: ['inOfficeWhileVicePresident', 'deathPlace']
Object: ['Edmund J. Davis', 'Austin, Texas']

Triple: [['__subject__ Albert Jennings Fountain __predicate__ inOfficeWhileVicePresident __object__ Edmund J. Davis', '__subject__ Edmund J. Davis __predicate__ deathPlace __object__ Austin, Texas']]
Text: Albert Jennings Fountain was in office while Edmund J. Davis, who later died in Austin, Texas was Vice President.
Subject: ['Albert Jennings Fountain', 'Edmund J. Davis']
Predicate: ['inOfficeWhileVicePresident', 'deathPlace']
Object: ['Edmund J. Davis', 'Austin, Texas']

Triple: [['__subject__ Alberto Teisaire __predicate__ deathPlace __object__ Buenos Aires', '__subject__ Buenos Aires __predicate__ leader __object__ Gabriela Michetti']]
Text: Alberto Teisaire passed away in Buenos Aires, whose leader is Gabriela Michetti.
Subject: ['Alberto Teisaire', 'Buenos Aires']
Predicate: ['deathPlace', 'leader']
Object: ['Buenos Aires', 'Gabriela Michetti']

Triple: [['__subject__ Alberto Teisaire __predicate__ deathPlace __object__ Buenos Aires', '__subject__ Buenos Aires __predicate__ leader __object__ Gabriela Michetti']]
Text: The leader of Buenos Aires is called Gabriela Michetti and this is the place where Alberto Teisaire died.
Subject: ['Alberto Teisaire', 'Buenos Aires']
Predicate: ['deathPlace', 'leader']
Object: ['Buenos Aires', 'Gabriela Michetti']

Triple: [['__subject__ Alberto Teisaire __predicate__ deathPlace __object__ Buenos Aires', '__subject__ Buenos Aires __predicate__ leader __object__ Gabriela Michetti']]
Text: Alberto Teisaire's place of death was Buenos Aires, the leader of which, is Gabriela Michetti.
Subject: ['Alberto Teisaire', 'Buenos Aires']
Predicate: ['deathPlace', 'leader']
Object: ['Buenos Aires', 'Gabriela Michetti']

Triple: [['__subject__ Alberto Teisaire __predicate__ deathPlace __object__ Buenos Aires', '__subject__ Buenos Aires __predicate__ leader __object__ Horacio Rodríguez Larreta']]
Text: Horacio Rodríguez Larreta is the leader of Buenos Aires, which is the place where Alberto Teisaire died.
Subject: ['Alberto Teisaire', 'Buenos Aires']
Predicate: ['deathPlace', 'leader']
Object: ['Buenos Aires', 'Horacio Rodríguez Larreta']

Triple: [['__subject__ Alberto Teisaire __predicate__ deathPlace __object__ Buenos Aires', '__subject__ Buenos Aires __predicate__ leader __object__ Horacio Rodríguez Larreta']]
Text: Alberto Teisaire died in Buenos Aires which is led by Horacio Rodríguez Larreta.
Subject: ['Alberto Teisaire', 'Buenos Aires']
Predicate: ['deathPlace', 'leader']
Object: ['Buenos Aires', 'Horacio Rodríguez Larreta']

Triple: [['__subject__ Alberto Teisaire __predicate__ deathPlace __object__ Buenos Aires', '__subject__ Buenos Aires __predicate__ leader __object__ Horacio Rodríguez Larreta']]
Text: Alberto Teisaire died in Buenos Aires where the leader is Horacio Rodriguez Larreta.
Subject: ['Alberto Teisaire', 'Buenos Aires']
Predicate: ['deathPlace', 'leader']
Object: ['Buenos Aires', 'Horacio Rodríguez Larreta']

Triple: [['__subject__ Alberto Teisaire __predicate__ nationality __object__ Argentina', '__subject__ Argentina __predicate__ language __object__ Spanish language']]
Text: Alberto Teisaire was from Argentina where Spanish is a language spoken.
Subject: ['Alberto Teisaire', 'Argentina']
Predicate: ['nationality', 'language']
Object: ['Argentina', 'Spanish language']

Triple: [['__subject__ Alberto Teisaire __predicate__ nationality __object__ Argentina', '__subject__ Argentina __predicate__ language __object__ Spanish language']]
Text: Alberto Teisaire comes from Argentina, where Spanish is spoken.
Subject: ['Alberto Teisaire', 'Argentina']
Predicate: ['nationality', 'language']
Object: ['Argentina', 'Spanish language']

Triple: [['__subject__ Alberto Teisaire __predicate__ nationality __object__ Argentina', '__subject__ Argentina __predicate__ language __object__ Spanish language']]
Text: Alberto Teisaire was from Argentina where Spanish is spoken.
Subject: ['Alberto Teisaire', 'Argentina']
Predicate: ['nationality', 'language']
Object: ['Argentina', 'Spanish language']

Triple: [['__subject__ Alberto Teisaire __predicate__ nationality __object__ Argentina', '__subject__ Argentina __predicate__ officialLanguage __object__ Spanish language']]
Text: Alberto Teisaire is from Argentina, where the official language is, Spanish.
Subject: ['Alberto Teisaire', 'Argentina']
Predicate: ['nationality', 'officialLanguage']
Object: ['Argentina', 'Spanish language']

Triple: [['__subject__ Alberto Teisaire __predicate__ nationality __object__ Argentina', '__subject__ Argentina __predicate__ officialLanguage __object__ Spanish language']]
Text: Alberto Teisaire is Argentinian where Spanish is the official language.
Subject: ['Alberto Teisaire', 'Argentina']
Predicate: ['nationality', 'officialLanguage']
Object: ['Argentina', 'Spanish language']

Triple: [['__subject__ Alberto Teisaire __predicate__ nationality __object__ Argentina', '__subject__ Argentina __predicate__ officialLanguage __object__ Spanish language']]
Text: Alberto Teisaire is a national of Argentina, where Spanish, is the official language.
Subject: ['Alberto Teisaire', 'Argentina']
Predicate: ['nationality', 'officialLanguage']
Object: ['Argentina', 'Spanish language']

Triple: [['__subject__ Alberto Teisaire __predicate__ office __object__ Provisional President of the Argentine Senate', '__subject__ Alberto Teisaire __predicate__ birthPlace __object__ Mendoza, Argentina']]
Text: Alberto Teisaire, born in Mendoza, Argentina, worked as a Provisional President of the Argentine Senate.
Subject: ['Alberto Teisaire', 'Alberto Teisaire']
Predicate: ['office', 'birthPlace']
Object: ['Provisional President of the Argentine Senate', 'Mendoza, Argentina']

Triple: [['__subject__ Alberto Teisaire __predicate__ office __object__ Provisional President of the Argentine Senate', '__subject__ Alberto Teisaire __predicate__ birthPlace __object__ Mendoza, Argentina']]
Text: Alberto Teisaire, born in Mendoza, Argentina, was the Provisional President of the Argentina Senate.
Subject: ['Alberto Teisaire', 'Alberto Teisaire']
Predicate: ['office', 'birthPlace']
Object: ['Provisional President of the Argentine Senate', 'Mendoza, Argentina']

Triple: [['__subject__ Alberto Teisaire __predicate__ office __object__ Provisional President of the Argentine Senate', '__subject__ Alberto Teisaire __predicate__ birthPlace __object__ Mendoza, Argentina']]
Text: Alberto Teisaire, was born in Mendoza in Argentina and worked as the Provisional President of the Argentine Senate.
Subject: ['Alberto Teisaire', 'Alberto Teisaire']
Predicate: ['office', 'birthPlace']
Object: ['Provisional President of the Argentine Senate', 'Mendoza, Argentina']

Triple: [['__subject__ Alberto Teisaire __predicate__ office __object__ Provisional President of the Argentine Senate', '__subject__ Alberto Teisaire __predicate__ party __object__ Justicialist Party']]
Text: Alberto Teisaire of the Justicialist Party, worked as the Provisional President of the Argentine Senate.
Subject: ['Alberto Teisaire', 'Alberto Teisaire']
Predicate: ['office', 'party']
Object: ['Provisional President of the Argentine Senate', 'Justicialist Party']

Triple: [['__subject__ Alberto Teisaire __predicate__ office __object__ Provisional President of the Argentine Senate', '__subject__ Alberto Teisaire __predicate__ party __object__ Justicialist Party']]
Text: Alberto Teisaire, whose party is Justicialist Party, worked as a Provisional President of the Argentine Senate.
Subject: ['Alberto Teisaire', 'Alberto Teisaire']
Predicate: ['office', 'party']
Object: ['Provisional President of the Argentine Senate', 'Justicialist Party']

Triple: [['__subject__ Alberto Teisaire __predicate__ office __object__ Provisional President of the Argentine Senate', '__subject__ Alberto Teisaire __predicate__ party __object__ Justicialist Party']]
Text: Alberto Teisaire, a member of the Justicialist Party, worked as the Provisional President of the Argentine Senate.
Subject: ['Alberto Teisaire', 'Alberto Teisaire']
Predicate: ['office', 'party']
Object: ['Provisional President of the Argentine Senate', 'Justicialist Party']

Triple: [['__subject__ Alberto Teisaire __predicate__ party __object__ Justicialist Party', '__subject__ Alberto Teisaire __predicate__ birthPlace __object__ Mendoza, Argentina']]
Text: Alberto Teisaire, who was born in Mendoza, Argentina, is a member of the Justicialist Party.
Subject: ['Alberto Teisaire', 'Alberto Teisaire']
Predicate: ['party', 'birthPlace']
Object: ['Justicialist Party', 'Mendoza, Argentina']

Triple: [['__subject__ Alberto Teisaire __predicate__ party __object__ Justicialist Party', '__subject__ Alberto Teisaire __predicate__ birthPlace __object__ Mendoza, Argentina']]
Text: Alberto Teisaire, was born in Mendoza in Argentina, and is part of the Justicialist Party.
Subject: ['Alberto Teisaire', 'Alberto Teisaire']
Predicate: ['party', 'birthPlace']
Object: ['Justicialist Party', 'Mendoza, Argentina']

Triple: [['__subject__ Alberto Teisaire __predicate__ party __object__ Justicialist Party', '__subject__ Alberto Teisaire __predicate__ birthPlace __object__ Mendoza, Argentina']]
Text: Alberto Teisaire is a member of the Justicialist Party and was born in Mendoza in Argentina.
Subject: ['Alberto Teisaire', 'Alberto Teisaire']
Predicate: ['party', 'birthPlace']
Object: ['Justicialist Party', 'Mendoza, Argentina']

Triple: [['__subject__ Alberto Teisaire __predicate__ party __object__ Justicialist Party', '__subject__ Alberto Teisaire __predicate__ inOfficeWhilePresident __object__ Juan Perón']]
Text: Alberto Teisaire was a member of the Justicialist Party while Juan Peron was President.
Subject: ['Alberto Teisaire', 'Alberto Teisaire']
Predicate: ['party', 'inOfficeWhilePresident']
Object: ['Justicialist Party', 'Juan Perón']

Triple: [['__subject__ Alberto Teisaire __predicate__ party __object__ Justicialist Party', '__subject__ Alberto Teisaire __predicate__ inOfficeWhilePresident __object__ Juan Perón']]
Text: Alberto Teisaire, a member of the Justicialist Party, was in office while Juan Perón was president.
Subject: ['Alberto Teisaire', 'Alberto Teisaire']
Predicate: ['party', 'inOfficeWhilePresident']
Object: ['Justicialist Party', 'Juan Perón']

Triple: [['__subject__ Alberto Teisaire __predicate__ party __object__ Justicialist Party', '__subject__ Alberto Teisaire __predicate__ inOfficeWhilePresident __object__ Juan Perón']]
Text: Alberto Teisaire, whose party is Justicialist Party, was in office while Juan Peron was President.
Subject: ['Alberto Teisaire', 'Alberto Teisaire']
Predicate: ['party', 'inOfficeWhilePresident']
Object: ['Justicialist Party', 'Juan Perón']

Triple: [['__subject__ Alberto Teisaire __predicate__ successor __object__ Isaac Rojas', '__subject__ Alberto Teisaire __predicate__ birthPlace __object__ Mendoza, Argentina']]
Text: Alberto Teisaire was born in Mendoza in Argentina and his successor was Isaac Rojas.
Subject: ['Alberto Teisaire', 'Alberto Teisaire']
Predicate: ['successor', 'birthPlace']
Object: ['Isaac Rojas', 'Mendoza, Argentina']

Triple: [['__subject__ Alberto Teisaire __predicate__ successor __object__ Isaac Rojas', '__subject__ Alberto Teisaire __predicate__ birthPlace __object__ Mendoza, Argentina']]
Text: Mendoza in Argentina is the birthplace of Alberto Teisaire. Mr. Teisaire was succeeded by Isaac Rojas.
Subject: ['Alberto Teisaire', 'Alberto Teisaire']
Predicate: ['successor', 'birthPlace']
Object: ['Isaac Rojas', 'Mendoza, Argentina']

Triple: [['__subject__ Alberto Teisaire __predicate__ successor __object__ Isaac Rojas', '__subject__ Alberto Teisaire __predicate__ birthPlace __object__ Mendoza, Argentina']]
Text: Isaac Rojas succeeded Alberto Teisaire who was born in Mendoza, Argentina.
Subject: ['Alberto Teisaire', 'Alberto Teisaire']
Predicate: ['successor', 'birthPlace']
Object: ['Isaac Rojas', 'Mendoza, Argentina']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria-Hungary', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst']]
Text: Alfons Gorbach was born in Imst, in Austria-Hungary.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Austria-Hungary', 'Imst']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria-Hungary', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst']]
Text: Alfons Gorbach's birthplace is Imst, in Austria-Hungary.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Austria-Hungary', 'Imst']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria-Hungary', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst']]
Text: Alfons Gorbach was born in Imst in Austria-Hungary.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Austria-Hungary', 'Imst']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria-Hungary', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Tyrol (state)']]
Text: Alfons Gorbach's place of birth was Tyrol state, Austria-Hungary.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Austria-Hungary', 'Tyrol (state)']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria-Hungary', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Tyrol (state)']]
Text: Alfons Gorbach was born in the state of Tyrol in Austria-Hungary.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Austria-Hungary', 'Tyrol (state)']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria-Hungary', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Tyrol (state)']]
Text: Alfons Gorbach was born in the state of Tyrol, Austria-Hungary.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Austria-Hungary', 'Tyrol (state)']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria-Hungary', '__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf']]
Text: Alfons Gorbach was born in Austria-Hungary and was in office during President Adolf Schärf's reign.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'inOfficeWhilePresident']
Object: ['Austria-Hungary', 'Adolf Schärf']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ County of Tyrol', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria']]
Text: Alfons Gorbach was born in Tyrol, in Austria.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['County of Tyrol', 'Austria']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ County of Tyrol', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria']]
Text: Alfons Gorbach was born in the county of Tyrol, which is located in Austria.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['County of Tyrol', 'Austria']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ County of Tyrol', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria']]
Text: Alfons Gorbach was born in County of Tyrol, Austria-Hungary.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['County of Tyrol', 'Austria']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ County of Tyrol', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst']]
Text: Alfons Gorbach was born in Imst, in Tyrol.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['County of Tyrol', 'Imst']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ County of Tyrol', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst']]
Text: Alfons Gorbach was born in Imst in the County of Tyrol.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['County of Tyrol', 'Imst']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ County of Tyrol', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst']]
Text: Alfons Gorbach was born in Imst, County of Tyrol.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['County of Tyrol', 'Imst']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria']]
Text: Alfons Gorbach was born in Imst, Austria.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Imst', 'Austria']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria']]
Text: Alfons Gorbach's birthplace is Imst, in Austria.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Imst', 'Austria']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria']]
Text: Alfons Gorbach was born in Imst, in Austria.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Imst', 'Austria']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Tyrol (state)', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst']]
Text: Alfons Gorbach's birthplace is Imst, in the state of Tyrol.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Tyrol (state)', 'Imst']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Tyrol (state)', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst']]
Text: Alfons Gorbach birthplace was in Imst in Tyrol state.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Tyrol (state)', 'Imst']

Triple: [['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Tyrol (state)', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst']]
Text: Alfons Gorbach was born in Imst, Tyrol.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['birthPlace', 'birthPlace']
Object: ['Tyrol (state)', 'Imst']

Triple: [['__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf', '__subject__ Adolf Schärf __predicate__ birthPlace __object__ Austria-Hungary']]
Text: Adolf Scharf, born in Austria-Hungary, was president while Alfons Gorbach was in office.
Subject: ['Alfons Gorbach', 'Adolf Schärf']
Predicate: ['inOfficeWhilePresident', 'birthPlace']
Object: ['Adolf Schärf', 'Austria-Hungary']

Triple: [['__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf', '__subject__ Adolf Schärf __predicate__ birthPlace __object__ Austria-Hungary']]
Text: Adolf Schärf, was born in Austria-Hungary and was President at the same time Alfons Gorbach was in office.
Subject: ['Alfons Gorbach', 'Adolf Schärf']
Predicate: ['inOfficeWhilePresident', 'birthPlace']
Object: ['Adolf Schärf', 'Austria-Hungary']

Triple: [['__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf', '__subject__ Adolf Schärf __predicate__ birthPlace __object__ Austria-Hungary']]
Text: Alfons Gorbach was in office during Austrian-Hungarian born, President Adolf Schärf's reign.
Subject: ['Alfons Gorbach', 'Adolf Schärf']
Predicate: ['inOfficeWhilePresident', 'birthPlace']
Object: ['Adolf Schärf', 'Austria-Hungary']

Triple: [['__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ County of Tyrol']]
Text: Alfons Gorbach, who was born in the county of Tyrol was in office while Adolf Scharf was President.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['inOfficeWhilePresident', 'birthPlace']
Object: ['Adolf Schärf', 'County of Tyrol']

Triple: [['__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ County of Tyrol']]
Text: Alfons Gorbach's birthplace in the County of Tyrol. He was in office while President Adolf Schärf was there.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['inOfficeWhilePresident', 'birthPlace']
Object: ['Adolf Schärf', 'County of Tyrol']

Triple: [['__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ County of Tyrol']]
Text: Alfons Gorbach, who was born in the County of Tyrol, was in office during President Adolf Schärf's reign.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['inOfficeWhilePresident', 'birthPlace']
Object: ['Adolf Schärf', 'County of Tyrol']

Triple: [['__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst']]
Text: Alfons Gorbach, who was born in Imst, was in office during President Adolf Schärf's reign.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['inOfficeWhilePresident', 'birthPlace']
Object: ['Adolf Schärf', 'Imst']

Triple: [['__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst']]
Text: Alfons Gorbach was born in Imst and was in office during President Adolf Schärf's reign.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['inOfficeWhilePresident', 'birthPlace']
Object: ['Adolf Schärf', 'Imst']

Triple: [['__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst']]
Text: Alfons Gorbach, who was born in Imst, was in office while Adolf Scharf was President.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['inOfficeWhilePresident', 'birthPlace']
Object: ['Adolf Schärf', 'Imst']

Triple: [['__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Tyrol (state)']]
Text: Alfons Gorbach, who was born in the state of Tyrol, was in office during President Adolf Schärf's reign.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['inOfficeWhilePresident', 'birthPlace']
Object: ['Adolf Schärf', 'Tyrol (state)']

Triple: [['__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Tyrol (state)']]
Text: Born in the state, Tyrol, Alfons Gorbach, was in office during President Adolf Schärf's reign.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['inOfficeWhilePresident', 'birthPlace']
Object: ['Adolf Schärf', 'Tyrol (state)']

Triple: [['__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Tyrol (state)']]
Text: Alfons Gorbach, who was born in the state of Tyrol, was in office while Adolf Scharf was President.
Subject: ['Alfons Gorbach', 'Alfons Gorbach']
Predicate: ['inOfficeWhilePresident', 'birthPlace']
Object: ['Adolf Schärf', 'Tyrol (state)']

Triple: [['__subject__ Alfons Gorbach __predicate__ successor __object__ Josef Klaus', '__subject__ Josef Klaus __predicate__ almaMater __object__ University of Vienna']]
Text: Alfons Gorbach was suceeded by Josef Klaus who graduated the University of Vienna.
Subject: ['Alfons Gorbach', 'Josef Klaus']
Predicate: ['successor', 'almaMater']
Object: ['Josef Klaus', 'University of Vienna']

Triple: [['__subject__ Alfons Gorbach __predicate__ successor __object__ Josef Klaus', '__subject__ Josef Klaus __predicate__ almaMater __object__ University of Vienna']]
Text: The successor to Alfons Gorbach is Josef Klaus, whose alma mater is the University of Vienna.
Subject: ['Alfons Gorbach', 'Josef Klaus']
Predicate: ['successor', 'almaMater']
Object: ['Josef Klaus', 'University of Vienna']

Triple: [['__subject__ Alfons Gorbach __predicate__ successor __object__ Josef Klaus', '__subject__ Josef Klaus __predicate__ almaMater __object__ University of Vienna']]
Text: Alfons Gorbach was succeeded by Josef Klaus, who studied at the University of Vienna.
Subject: ['Alfons Gorbach', 'Josef Klaus']
Predicate: ['successor', 'almaMater']
Object: ['Josef Klaus', 'University of Vienna']

Triple: [['__subject__ Alfred Moore Scales __predicate__ almaMater __object__ University of North Carolina at Chapel Hill', '__subject__ Alfred Moore Scales __predicate__ successor __object__ James Madison Leach']]
Text: The alma mater of Alfred Moore Scales, who was succeeded by James Madison Leach, was the University of North Carolina at Chapel Hill.
Subject: ['Alfred Moore Scales', 'Alfred Moore Scales']
Predicate: ['almaMater', 'successor']
Object: ['University of North Carolina at Chapel Hill', 'James Madison Leach']

Triple: [['__subject__ Alfred Moore Scales __predicate__ almaMater __object__ University of North Carolina at Chapel Hill', '__subject__ Alfred Moore Scales __predicate__ successor __object__ James Madison Leach']]
Text: The alma mater of Alfred Moore Scales, later succeeded by James Madison Leach, was the University of North Carolina at Chapel Hill.
Subject: ['Alfred Moore Scales', 'Alfred Moore Scales']
Predicate: ['almaMater', 'successor']
Object: ['University of North Carolina at Chapel Hill', 'James Madison Leach']

Triple: [['__subject__ Alfred Moore Scales __predicate__ almaMater __object__ University of North Carolina at Chapel Hill', '__subject__ Alfred Moore Scales __predicate__ successor __object__ James W. Reid (politician)']]
Text: Alfred Moores Scales, whose alma mater was the University of North Carolina at Chapel Hill, was succeeded by the politician James W Reid.
Subject: ['Alfred Moore Scales', 'Alfred Moore Scales']
Predicate: ['almaMater', 'successor']
Object: ['University of North Carolina at Chapel Hill', 'James W. Reid (politician)']

Triple: [['__subject__ Alfred Moore Scales __predicate__ almaMater __object__ University of North Carolina at Chapel Hill', '__subject__ Alfred Moore Scales __predicate__ successor __object__ James W. Reid (politician)']]
Text: The alma Mater of Alfred Moore Scales, who was succeeded by the politician James W. Reid, is the University of North Carolina at Chapel Hill.
Subject: ['Alfred Moore Scales', 'Alfred Moore Scales']
Predicate: ['almaMater', 'successor']
Object: ['University of North Carolina at Chapel Hill', 'James W. Reid (politician)']

Triple: [['__subject__ Alfred Moore Scales __predicate__ almaMater __object__ University of North Carolina at Chapel Hill', '__subject__ Alfred Moore Scales __predicate__ successor __object__ James W. Reid (politician)']]
Text: Alfred Moore Scales who was succeeded by the politician, James W. Reid, studied at the University of North Carolina at Chapel Hill.
Subject: ['Alfred Moore Scales', 'Alfred Moore Scales']
Predicate: ['almaMater', 'successor']
Object: ['University of North Carolina at Chapel Hill', 'James W. Reid (politician)']

Triple: [['__subject__ Alfred Moore Scales __predicate__ battle __object__ Battle of Fredericksburg', '__subject__ Battle of Fredericksburg __predicate__ isPartOfMilitaryConflict __object__ American Civil War']]
Text: Alfred Moore Scales fought in battles such as the Battle of Fredericksburg in the American Civil War military conflict.
Subject: ['Alfred Moore Scales', 'Battle of Fredericksburg']
Predicate: ['battle', 'isPartOfMilitaryConflict']
Object: ['Battle of Fredericksburg', 'American Civil War']

Triple: [['__subject__ Alfred Moore Scales __predicate__ battle __object__ Battle of Fredericksburg', '__subject__ Battle of Fredericksburg __predicate__ isPartOfMilitaryConflict __object__ American Civil War']]
Text: Alfred Moore Scales fought in battles such as the Battle of Fredericksburg, part of the American Civil war.
Subject: ['Alfred Moore Scales', 'Battle of Fredericksburg']
Predicate: ['battle', 'isPartOfMilitaryConflict']
Object: ['Battle of Fredericksburg', 'American Civil War']

Triple: [['__subject__ Alfred Moore Scales __predicate__ battle __object__ Battle of Fredericksburg', '__subject__ Battle of Fredericksburg __predicate__ isPartOfMilitaryConflict __object__ American Civil War']]
Text: Alfred Moore Scales fought in the Battle of Fredericksburg which was part of the American Civil War.
Subject: ['Alfred Moore Scales', 'Battle of Fredericksburg']
Predicate: ['battle', 'isPartOfMilitaryConflict']
Object: ['Battle of Fredericksburg', 'American Civil War']

Triple: [['__subject__ Alfred Moore Scales __predicate__ battle __object__ Battle of Gettysburg', '__subject__ Battle of Gettysburg __predicate__ isPartOfMilitaryConflict __object__ American Civil War']]
Text: Alfred Moore Scales fought in the Battle of Gettysburg, part of the American Civil War conflict.
Subject: ['Alfred Moore Scales', 'Battle of Gettysburg']
Predicate: ['battle', 'isPartOfMilitaryConflict']
Object: ['Battle of Gettysburg', 'American Civil War']

Triple: [['__subject__ Alfred Moore Scales __predicate__ battle __object__ Battle of Gettysburg', '__subject__ Battle of Gettysburg __predicate__ isPartOfMilitaryConflict __object__ American Civil War']]
Text: One of the battles Alfred Moore Scales was involved in was the Battle of Gettysburg, which was part of the American Civil War conflict.
Subject: ['Alfred Moore Scales', 'Battle of Gettysburg']
Predicate: ['battle', 'isPartOfMilitaryConflict']
Object: ['Battle of Gettysburg', 'American Civil War']

Triple: [['__subject__ Alfred Moore Scales __predicate__ battle __object__ Battle of Gettysburg', '__subject__ Battle of Gettysburg __predicate__ isPartOfMilitaryConflict __object__ American Civil War']]
Text: The Battle of Gettysburg, took place during the American Civil War, and is one of the battles Alfred Moore Scales was involved in.
Subject: ['Alfred Moore Scales', 'Battle of Gettysburg']
Predicate: ['battle', 'isPartOfMilitaryConflict']
Object: ['Battle of Gettysburg', 'American Civil War']

Triple: [['__subject__ Alfred Moore Scales __predicate__ battle __object__ Siege of Petersburg', '__subject__ Siege of Petersburg __predicate__ isPartOfMilitaryConflict __object__ American Civil War']]
Text: Alfred Moore Scales took part in the Siege of Petersburg which occurred during the American Civil War.
Subject: ['Alfred Moore Scales', 'Siege of Petersburg']
Predicate: ['battle', 'isPartOfMilitaryConflict']
Object: ['Siege of Petersburg', 'American Civil War']

Triple: [['__subject__ Alfred Moore Scales __predicate__ battle __object__ Siege of Petersburg', '__subject__ Siege of Petersburg __predicate__ isPartOfMilitaryConflict __object__ American Civil War']]
Text: Alfred Moore Scales was at the Siege of Petersburg, which occurred during the American Civil War.
Subject: ['Alfred Moore Scales', 'Siege of Petersburg']
Predicate: ['battle', 'isPartOfMilitaryConflict']
Object: ['Siege of Petersburg', 'American Civil War']

Triple: [['__subject__ Alfred Moore Scales __predicate__ battle __object__ Siege of Petersburg', '__subject__ Siege of Petersburg __predicate__ isPartOfMilitaryConflict __object__ American Civil War']]
Text: Alfred Moore Scales was at the Siege of Petersburg which was part of the American Civil War conflict.
Subject: ['Alfred Moore Scales', 'Siege of Petersburg']
Predicate: ['battle', 'isPartOfMilitaryConflict']
Object: ['Siege of Petersburg', 'American Civil War']

Triple: [['__subject__ Alfred Moore Scales __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Alfred Moore Scales lives in the United States, where one of the ethnic groups, is African Americans.
Subject: ['Alfred Moore Scales', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Alfred Moore Scales __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: African Americans are an ethnic group in the United States, the country Alfred Moore Scales came from.
Subject: ['Alfred Moore Scales', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Alfred Moore Scales __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Alfred Moore Scales resides in the United States, where African Americans are an ethnic group.
Subject: ['Alfred Moore Scales', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Alfred Moore Scales __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Alfred Moore Scales lives in the United States, where Native Americans are an ethnic group.
Subject: ['Alfred Moore Scales', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Alfred Moore Scales __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Alfred Moore Scales came from the US where Native Americans make up an ethnic group.
Subject: ['Alfred Moore Scales', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Alfred Moore Scales __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: U.S. native Alfred Moore Scales is Native American.
Subject: ['Alfred Moore Scales', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Alfred Moore Scales __predicate__ successor __object__ Daniel Gould Fowle', '__subject__ Alfred Moore Scales __predicate__ almaMater __object__ University of North Carolina at Chapel Hill']]
Text: Daniel Gould Fowle suceeded Alfred Moore Scales, whose alma mater was the University of North Carolina at Chapel Hill.
Subject: ['Alfred Moore Scales', 'Alfred Moore Scales']
Predicate: ['successor', 'almaMater']
Object: ['Daniel Gould Fowle', 'University of North Carolina at Chapel Hill']

Triple: [['__subject__ Alfred Moore Scales __predicate__ successor __object__ Daniel Gould Fowle', '__subject__ Alfred Moore Scales __predicate__ almaMater __object__ University of North Carolina at Chapel Hill']]
Text: Daniel Gould Fowle succeeded Alfred Moore Scales . Mr. Scales alma mater was the University of North Carolina at Chapel Hill.
Subject: ['Alfred Moore Scales', 'Alfred Moore Scales']
Predicate: ['successor', 'almaMater']
Object: ['Daniel Gould Fowle', 'University of North Carolina at Chapel Hill']

Triple: [['__subject__ Alfred Moore Scales __predicate__ successor __object__ Daniel Gould Fowle', '__subject__ Alfred Moore Scales __predicate__ almaMater __object__ University of North Carolina at Chapel Hill']]
Text: Daniel Gould Fowle is the successor to Alfred Moore Scales, the alma mater of whom, was the University of North Carolina at Chapel Hill.
Subject: ['Alfred Moore Scales', 'Alfred Moore Scales']
Predicate: ['successor', 'almaMater']
Object: ['Daniel Gould Fowle', 'University of North Carolina at Chapel Hill']

Triple: [['__subject__ Alfred Moore Scales __predicate__ successor __object__ Daniel Gould Fowle', '__subject__ Alfred Moore Scales __predicate__ office __object__ Governor of North Carolina']]
Text: Daniel Gould Fowle is the successor to Alfred Moore Scales, the Governor of North Carolina.
Subject: ['Alfred Moore Scales', 'Alfred Moore Scales']
Predicate: ['successor', 'office']
Object: ['Daniel Gould Fowle', 'Governor of North Carolina']

Triple: [['__subject__ Alfred Moore Scales __predicate__ successor __object__ Daniel Gould Fowle', '__subject__ Alfred Moore Scales __predicate__ office __object__ Governor of North Carolina']]
Text: Daniel Gould Fowle suceeded Alfred Moore Scales, who was the Governor of North Carolina.
Subject: ['Alfred Moore Scales', 'Alfred Moore Scales']
Predicate: ['successor', 'office']
Object: ['Daniel Gould Fowle', 'Governor of North Carolina']

Triple: [['__subject__ Alfred Moore Scales __predicate__ successor __object__ Daniel Gould Fowle', '__subject__ Alfred Moore Scales __predicate__ office __object__ Governor of North Carolina']]
Text: Alfred Moore Scales was Governor of North Carolina and was succeeded by Daniel Gould Fowle.
Subject: ['Alfred Moore Scales', 'Alfred Moore Scales']
Predicate: ['successor', 'office']
Object: ['Daniel Gould Fowle', 'Governor of North Carolina']

Triple: [['__subject__ Alfred Moore Scales __predicate__ successor __object__ James Madison Leach', '__subject__ Alfred Moore Scales __predicate__ office __object__ Governor of North Carolina']]
Text: Alfred Moore Scales was Governor of North Carolina, and was succeeded by James Madison Leach.
Subject: ['Alfred Moore Scales', 'Alfred Moore Scales']
Predicate: ['successor', 'office']
Object: ['James Madison Leach', 'Governor of North Carolina']

Triple: [['__subject__ Alfred Moore Scales __predicate__ successor __object__ James Madison Leach', '__subject__ Alfred Moore Scales __predicate__ office __object__ Governor of North Carolina']]
Text: Governor Alfred Moore Scales of North Carolina was succeeded by James Madison Leach.
Subject: ['Alfred Moore Scales', 'Alfred Moore Scales']
Predicate: ['successor', 'office']
Object: ['James Madison Leach', 'Governor of North Carolina']

Triple: [['__subject__ Alfred Moore Scales __predicate__ successor __object__ James Madison Leach', '__subject__ Alfred Moore Scales __predicate__ office __object__ Governor of North Carolina']]
Text: Alfred Moore Scales was Governor of North Carolina and he was succeeded by James Madison Leach.
Subject: ['Alfred Moore Scales', 'Alfred Moore Scales']
Predicate: ['successor', 'office']
Object: ['James Madison Leach', 'Governor of North Carolina']

Triple: [['__subject__ Alfred N. Phillips __predicate__ birthPlace __object__ Connecticut', "__subject__ Alfred N. Phillips __predicate__ office __object__ Member of the U.S. House of Representatives from Connecticut's 4th district"]]
Text: Alfred N. Phillips was born in Connecticut and was a Member of the U.S. House of Representatives from Connecticut's 4th district.
Subject: ['Alfred N. Phillips', 'Alfred N. Phillips']
Predicate: ['birthPlace', 'office']
Object: ['Connecticut', "Member of the U.S. House of Representatives from Connecticut's 4th district"]

Triple: [['__subject__ Alfred N. Phillips __predicate__ birthPlace __object__ Connecticut', "__subject__ Alfred N. Phillips __predicate__ office __object__ Member of the U.S. House of Representatives from Connecticut's 4th district"]]
Text: Alfred N. Phillips, born in Connecticut, worked as Member of the U.S. House of Representatives from Connecticut's 4th district.
Subject: ['Alfred N. Phillips', 'Alfred N. Phillips']
Predicate: ['birthPlace', 'office']
Object: ['Connecticut', "Member of the U.S. House of Representatives from Connecticut's 4th district"]

Triple: [['__subject__ Alfred N. Phillips __predicate__ birthPlace __object__ Connecticut', "__subject__ Alfred N. Phillips __predicate__ office __object__ Member of the U.S. House of Representatives from Connecticut's 4th district"]]
Text: Alfred N. Phillips (born in Connecticut) was a member of the U.S. House of Representatives from Connecticut's 4th district.
Subject: ['Alfred N. Phillips', 'Alfred N. Phillips']
Predicate: ['birthPlace', 'office']
Object: ['Connecticut', "Member of the U.S. House of Representatives from Connecticut's 4th district"]

Triple: [['__subject__ Alfred N. Phillips __predicate__ birthPlace __object__ Connecticut', '__subject__ Alfred N. Phillips __predicate__ office __object__ Mayor of Stamford, Connecticut']]
Text: Alfred N. Phillips was born in Connecticut and later became the Mayor of Stamford Connecticut.
Subject: ['Alfred N. Phillips', 'Alfred N. Phillips']
Predicate: ['birthPlace', 'office']
Object: ['Connecticut', 'Mayor of Stamford, Connecticut']

Triple: [['__subject__ Alfred N. Phillips __predicate__ birthPlace __object__ Connecticut', '__subject__ Alfred N. Phillips __predicate__ office __object__ Mayor of Stamford, Connecticut']]
Text: Connecticut was the birthplace of Alfred N Phillips, who was Mayor of Stamford, Connecticut.
Subject: ['Alfred N. Phillips', 'Alfred N. Phillips']
Predicate: ['birthPlace', 'office']
Object: ['Connecticut', 'Mayor of Stamford, Connecticut']

Triple: [['__subject__ Alfred N. Phillips __predicate__ birthPlace __object__ Connecticut', '__subject__ Alfred N. Phillips __predicate__ office __object__ Mayor of Stamford, Connecticut']]
Text: Alfred N.Phillips was born in and became Mayor of Stamford in the state of Connecticut.
Subject: ['Alfred N. Phillips', 'Alfred N. Phillips']
Predicate: ['birthPlace', 'office']
Object: ['Connecticut', 'Mayor of Stamford, Connecticut']

Triple: [['__subject__ Alfred N. Phillips __predicate__ birthPlace __object__ Darien, Connecticut', "__subject__ Alfred N. Phillips __predicate__ office __object__ Member of the U.S. House of Representatives from Connecticut's 4th district"]]
Text: Alfred N. Phillips, born in Darien, Connecticut, was a Member of the U.S. House of Representatives from Connecticut's 4th district.
Subject: ['Alfred N. Phillips', 'Alfred N. Phillips']
Predicate: ['birthPlace', 'office']
Object: ['Darien, Connecticut', "Member of the U.S. House of Representatives from Connecticut's 4th district"]

Triple: [['__subject__ Alfred N. Phillips __predicate__ birthPlace __object__ Darien, Connecticut', "__subject__ Alfred N. Phillips __predicate__ office __object__ Member of the U.S. House of Representatives from Connecticut's 4th district"]]
Text: Alfred N. Phillips birthplace was Darien Connecticut. He was also part of the U.S. House of Representatives from Connecticut's 4th district.
Subject: ['Alfred N. Phillips', 'Alfred N. Phillips']
Predicate: ['birthPlace', 'office']
Object: ['Darien, Connecticut', "Member of the U.S. House of Representatives from Connecticut's 4th district"]

Triple: [['__subject__ Alfred N. Phillips __predicate__ birthPlace __object__ Darien, Connecticut', "__subject__ Alfred N. Phillips __predicate__ office __object__ Member of the U.S. House of Representatives from Connecticut's 4th district"]]
Text: Darien, Connecticut is the birthplace of Alfred N. Phillips, who worked as Member of the U.S. House of Representatives from Connecticut's 4th district.
Subject: ['Alfred N. Phillips', 'Alfred N. Phillips']
Predicate: ['birthPlace', 'office']
Object: ['Darien, Connecticut', "Member of the U.S. House of Representatives from Connecticut's 4th district"]

Triple: [['__subject__ Alfred N. Phillips __predicate__ birthPlace __object__ Darien, Connecticut', '__subject__ Alfred N. Phillips __predicate__ office __object__ United States House of Representatives']]
Text: Alfred N. Phillips, who was born in Darien Connecticut, worked at the United States House of Representatives.
Subject: ['Alfred N. Phillips', 'Alfred N. Phillips']
Predicate: ['birthPlace', 'office']
Object: ['Darien, Connecticut', 'United States House of Representatives']

Triple: [['__subject__ Alfred N. Phillips __predicate__ birthPlace __object__ Darien, Connecticut', '__subject__ Alfred N. Phillips __predicate__ office __object__ United States House of Representatives']]
Text: Darien, Connecticut is the birthplace of Alfred N. Phillips who worked at the United States House of Representatives.
Subject: ['Alfred N. Phillips', 'Alfred N. Phillips']
Predicate: ['birthPlace', 'office']
Object: ['Darien, Connecticut', 'United States House of Representatives']

Triple: [['__subject__ Alfred N. Phillips __predicate__ birthPlace __object__ Darien, Connecticut', '__subject__ Alfred N. Phillips __predicate__ office __object__ United States House of Representatives']]
Text: Alfred N Phillips, who was born in Darien Connecticut, worked at the United States House of Representatives.
Subject: ['Alfred N. Phillips', 'Alfred N. Phillips']
Predicate: ['birthPlace', 'office']
Object: ['Darien, Connecticut', 'United States House of Representatives']

Triple: [['__subject__ Alfred N. Phillips __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ American Revolutionary War']]
Text: Alfred N. Phillips was a member of the US Army which fought in the American Revolutionary War.
Subject: ['Alfred N. Phillips', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'American Revolutionary War']

Triple: [['__subject__ Alfred N. Phillips __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ American Revolutionary War']]
Text: Alfred N. Phillips was a member of the US Army who was a participant in the Revolutionary War.
Subject: ['Alfred N. Phillips', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'American Revolutionary War']

Triple: [['__subject__ Alfred N. Phillips __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ Invasion of Grenada']]
Text: The United States Army, whose members have included Alfred N. Phillips, took part in the Invasion of Grenada.
Subject: ['Alfred N. Phillips', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'Invasion of Grenada']

Triple: [['__subject__ Alfred N. Phillips __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ Invasion of Grenada']]
Text: Alfred N. Phillips served in the United States Army which has battled in the Invasion of Grenada.
Subject: ['Alfred N. Phillips', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'Invasion of Grenada']

Triple: [['__subject__ Alfred N. Phillips __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ Invasion of Grenada']]
Text: The U.S. Army fought in the Invasion of Grenada. Alfred N. Phillips was part of the U.S. Army.
Subject: ['Alfred N. Phillips', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'Invasion of Grenada']

Triple: [['__subject__ Alfred N. Phillips __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ Korean War']]
Text: Alfred N. Phillips was in the U.S. Army. That army fought in the Korean War.
Subject: ['Alfred N. Phillips', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'Korean War']

Triple: [['__subject__ Alfred N. Phillips __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ Korean War']]
Text: The United States Army fought in the Korean War and one of its members was Alfred N. Phillips.
Subject: ['Alfred N. Phillips', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'Korean War']

Triple: [['__subject__ Alfred N. Phillips __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ Spanish–American War']]
Text: The United States Army was involved in the Spanish-American War and one of is members was Alfred N. Phillips.
Subject: ['Alfred N. Phillips', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'Spanish–American War']

Triple: [['__subject__ Alfred N. Phillips __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ Spanish–American War']]
Text: Alfred N. Phillips served in the United States, Army, the army which was involved in battles in the Spanish-American War.
Subject: ['Alfred N. Phillips', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'Spanish–American War']

Triple: [['__subject__ Alfred N. Phillips __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ Whiskey Rebellion']]
Text: Alfred N. Phillips was a member of the US Army, which fought in the Whiskey Rebellion.
Subject: ['Alfred N. Phillips', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'Whiskey Rebellion']

Triple: [['__subject__ Alfred N. Phillips __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ Whiskey Rebellion']]
Text: Alfred N Phillips was a member of the US Army. The army fought in the Whiskey Rebellion Battle.
Subject: ['Alfred N. Phillips', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'Whiskey Rebellion']

Triple: [['__subject__ Alfred N. Phillips __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ Whiskey Rebellion']]
Text: Alfred N. Phillips served in the United States, Army which took part in the Whiskey Rebellion.
Subject: ['Alfred N. Phillips', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'Whiskey Rebellion']

Triple: [['__subject__ Allan Shivers __predicate__ birthPlace __object__ Lufkin, Texas', '__subject__ Allan Shivers __predicate__ office __object__ Governor of Texas']]
Text: Allan Shivers, who worked as the Governor of Texas, was born in Lufkin, Texas.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['birthPlace', 'office']
Object: ['Lufkin, Texas', 'Governor of Texas']

Triple: [['__subject__ Allan Shivers __predicate__ birthPlace __object__ Lufkin, Texas', '__subject__ Allan Shivers __predicate__ office __object__ Governor of Texas']]
Text: Allan Shivers, born in Lufkin, Texas, worked as the Governor of Texas.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['birthPlace', 'office']
Object: ['Lufkin, Texas', 'Governor of Texas']

Triple: [['__subject__ Allan Shivers __predicate__ birthPlace __object__ Lufkin, Texas', '__subject__ Allan Shivers __predicate__ office __object__ Governor of Texas']]
Text: Allan Shivers was Governor of Texas, and his birth place was Lufkin, Texas.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['birthPlace', 'office']
Object: ['Lufkin, Texas', 'Governor of Texas']

Triple: [['__subject__ Allan Shivers __predicate__ birthPlace __object__ Lufkin, Texas', '__subject__ Allan Shivers __predicate__ office __object__ Lieutenant Governor of Texas']]
Text: Allan Shivers was born in Lufkin Texas, where he was Lieutenant Governor.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['birthPlace', 'office']
Object: ['Lufkin, Texas', 'Lieutenant Governor of Texas']

Triple: [['__subject__ Allan Shivers __predicate__ birthPlace __object__ Lufkin, Texas', '__subject__ Allan Shivers __predicate__ office __object__ Lieutenant Governor of Texas']]
Text: Allan Shivers, who wsa born in Lufkin, Texas, was Lieutenant Governor of Texas.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['birthPlace', 'office']
Object: ['Lufkin, Texas', 'Lieutenant Governor of Texas']

Triple: [['__subject__ Allan Shivers __predicate__ birthPlace __object__ Lufkin, Texas', '__subject__ Allan Shivers __predicate__ office __object__ Lieutenant Governor of Texas']]
Text: Allan Shivers was born in Lufkin, Texas where he was Lieutenant Governor.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['birthPlace', 'office']
Object: ['Lufkin, Texas', 'Lieutenant Governor of Texas']

Triple: [['__subject__ Allan Shivers __predicate__ militaryBranch __object__ United States Army', '__subject__ Allan Shivers __predicate__ battle __object__ World War II']]
Text: Allan Shivers, served in the United States Army, and fought in World War II.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'World War II']

Triple: [['__subject__ Allan Shivers __predicate__ militaryBranch __object__ United States Army', '__subject__ Allan Shivers __predicate__ battle __object__ World War II']]
Text: Allan Shivers served in the United States Army and fought in World War II.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'World War II']

Triple: [['__subject__ Allan Shivers __predicate__ militaryBranch __object__ United States Army', '__subject__ Allan Shivers __predicate__ battle __object__ World War II']]
Text: Allan Shivers served in the United States Army and fought battles in World War II.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'World War II']

Triple: [['__subject__ Allan Shivers __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ American Civil War']]
Text: Allan Shivers served in the United States Army and the United States Army battled in the American Civil War.
Subject: ['Allan Shivers', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'American Civil War']

Triple: [['__subject__ Allan Shivers __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ American Civil War']]
Text: Allan Shivers served in the United States Army, which fought in the American Civil War.
Subject: ['Allan Shivers', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'American Civil War']

Triple: [['__subject__ Allan Shivers __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ American Civil War']]
Text: Allan Shivers served in the United States Army, which battled in the American Civil War.
Subject: ['Allan Shivers', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'American Civil War']

Triple: [['__subject__ Allan Shivers __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ American Revolutionary War']]
Text: Allan Shivers served in the United States Army which had previously been involved in the American Revolutionary War.
Subject: ['Allan Shivers', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'American Revolutionary War']

Triple: [['__subject__ Allan Shivers __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ American Revolutionary War']]
Text: Allan Shivers served in the United States Army, the same army, that battled in the American Revolutionary War.
Subject: ['Allan Shivers', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'American Revolutionary War']

Triple: [['__subject__ Allan Shivers __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ American Revolutionary War']]
Text: Allan Shivers served in the United States Army, which battled in the American Revolutionary War.
Subject: ['Allan Shivers', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'American Revolutionary War']

Triple: [['__subject__ Allan Shivers __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ Korean War']]
Text: Allan Shivers served in the United States Army, which took art in Korean War battles.
Subject: ['Allan Shivers', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'Korean War']

Triple: [['__subject__ Allan Shivers __predicate__ militaryBranch __object__ United States Army', '__subject__ United States Army __predicate__ battle __object__ Korean War']]
Text: Allan Shivers served in the United States Army, an army which fought in the Korean War.
Subject: ['Allan Shivers', 'United States Army']
Predicate: ['militaryBranch', 'battle']
Object: ['United States Army', 'Korean War']

Triple: [['__subject__ Allan Shivers __predicate__ office __object__ Member of the Texas State Senate from District 4 (Port Arthur)', '__subject__ Allan Shivers __predicate__ successor __object__ Price Daniel']]
Text: Allan Shivers was a member of the Texas State Senate District 4 for Port Arthur and he was succeeded by Price Daniel.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['office', 'successor']
Object: ['Member of the Texas State Senate from District 4 (Port Arthur)', 'Price Daniel']

Triple: [['__subject__ Allan Shivers __predicate__ office __object__ Member of the Texas State Senate from District 4 (Port Arthur)', '__subject__ Allan Shivers __predicate__ successor __object__ Price Daniel']]
Text: Allan Shivers, a member of the Texas State Senate District 4 for Port Arthur, was succeeded by Price Daniel.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['office', 'successor']
Object: ['Member of the Texas State Senate from District 4 (Port Arthur)', 'Price Daniel']

Triple: [['__subject__ Allan Shivers __predicate__ office __object__ Member of the Texas State Senate from District 4 (Port Arthur)', '__subject__ Allan Shivers __predicate__ successor __object__ Wilfred R. Cousins, Jr.']]
Text: Wilfred R. Cousins, Jr. was the successor of Allan Shivers, who was a member of the Texas State Senate District 4 for Port Arthur.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['office', 'successor']
Object: ['Member of the Texas State Senate from District 4 (Port Arthur)', 'Wilfred R. Cousins, Jr.']

Triple: [['__subject__ Allan Shivers __predicate__ office __object__ Member of the Texas State Senate from District 4 (Port Arthur)', '__subject__ Allan Shivers __predicate__ successor __object__ Wilfred R. Cousins, Jr.']]
Text: Allan Shivers was a part of the Texas State Senate District 4 for Port Arthur. Wilfred R. Cousins, Jr. succeeded him.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['office', 'successor']
Object: ['Member of the Texas State Senate from District 4 (Port Arthur)', 'Wilfred R. Cousins, Jr.']

Triple: [['__subject__ Allan Shivers __predicate__ office __object__ Member of the Texas State Senate from District 4 (Port Arthur)', '__subject__ Allan Shivers __predicate__ successor __object__ Wilfred R. Cousins, Jr.']]
Text: Allan Shivers worked as a member of the Texas State Senate from District 4 (Port Arthur) and was succeeded by Wilfred R. Cousins, Jr.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['office', 'successor']
Object: ['Member of the Texas State Senate from District 4 (Port Arthur)', 'Wilfred R. Cousins, Jr.']

Triple: [['__subject__ Allan Shivers __predicate__ successor __object__ Ben Ramsey', '__subject__ Allan Shivers __predicate__ office __object__ Lieutenant Governor of Texas']]
Text: Allan Shivers was Lieutenant Governor of Texas and was succeeded by Ben Ramsey.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['successor', 'office']
Object: ['Ben Ramsey', 'Lieutenant Governor of Texas']

Triple: [['__subject__ Allan Shivers __predicate__ successor __object__ Ben Ramsey', '__subject__ Allan Shivers __predicate__ office __object__ Lieutenant Governor of Texas']]
Text: Allan Shivers was Lieutenant Governor of Texas and was succeded by Ben Ramsey.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['successor', 'office']
Object: ['Ben Ramsey', 'Lieutenant Governor of Texas']

Triple: [['__subject__ Allan Shivers __predicate__ successor __object__ Ben Ramsey', '__subject__ Allan Shivers __predicate__ office __object__ Lieutenant Governor of Texas']]
Text: Allan Shivers, was Lieutenant Governor of Texas, and his successor was Ben Ramsey.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['successor', 'office']
Object: ['Ben Ramsey', 'Lieutenant Governor of Texas']

Triple: [['__subject__ Allan Shivers __predicate__ successor __object__ Price Daniel', '__subject__ Allan Shivers __predicate__ office __object__ Governor of Texas']]
Text: Allan Shivers was the Governor of Texas and his successor was Price Daniel.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['successor', 'office']
Object: ['Price Daniel', 'Governor of Texas']

Triple: [['__subject__ Allan Shivers __predicate__ successor __object__ Price Daniel', '__subject__ Allan Shivers __predicate__ office __object__ Governor of Texas']]
Text: Allan Shivers was Governor of Texas and was succeeded by Price Daniel.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['successor', 'office']
Object: ['Price Daniel', 'Governor of Texas']

Triple: [['__subject__ Allan Shivers __predicate__ successor __object__ Price Daniel', '__subject__ Allan Shivers __predicate__ office __object__ Governor of Texas']]
Text: Allan Shivers worked as the Governor of Texas and was succeeded by Price Daniel.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['successor', 'office']
Object: ['Price Daniel', 'Governor of Texas']

Triple: [['__subject__ Allan Shivers __predicate__ successor __object__ Price Daniel', '__subject__ Allan Shivers __predicate__ office __object__ Lieutenant Governor of Texas']]
Text: Allan Shivers, was Lieutenant Governor of Texas and was succeeded by Price Daniel.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['successor', 'office']
Object: ['Price Daniel', 'Lieutenant Governor of Texas']

Triple: [['__subject__ Allan Shivers __predicate__ successor __object__ Price Daniel', '__subject__ Allan Shivers __predicate__ office __object__ Lieutenant Governor of Texas']]
Text: Allan Shivers, a Lieutenant Governor of Texas, was succeeded by Price Daniel.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['successor', 'office']
Object: ['Price Daniel', 'Lieutenant Governor of Texas']

Triple: [['__subject__ Allan Shivers __predicate__ successor __object__ Price Daniel', '__subject__ Allan Shivers __predicate__ office __object__ Lieutenant Governor of Texas']]
Text: Allan Shivers was Lieutenant Governor of Texas and was succeeded by Price Daniel.
Subject: ['Allan Shivers', 'Allan Shivers']
Predicate: ['successor', 'office']
Object: ['Price Daniel', 'Lieutenant Governor of Texas']

Triple: [['__subject__ Alvah Sabin __predicate__ deathPlace __object__ Sycamore, Illinois', '__subject__ Sycamore, Illinois __predicate__ region __object__ DeKalb County, Illinois']]
Text: Alvah Sabin died in Sycamore, in DeKalb County, Illinois.
Subject: ['Alvah Sabin', 'Sycamore, Illinois']
Predicate: ['deathPlace', 'region']
Object: ['Sycamore, Illinois', 'DeKalb County, Illinois']

Triple: [['__subject__ Alvah Sabin __predicate__ deathPlace __object__ Sycamore, Illinois', '__subject__ Sycamore, Illinois __predicate__ region __object__ DeKalb County, Illinois']]
Text: Alvah Sabin died in Sycamore which is located in DeKalb County, Illinois.
Subject: ['Alvah Sabin', 'Sycamore, Illinois']
Predicate: ['deathPlace', 'region']
Object: ['Sycamore, Illinois', 'DeKalb County, Illinois']

Triple: [['__subject__ Alvah Sabin __predicate__ deathPlace __object__ Sycamore, Illinois', '__subject__ Sycamore, Illinois __predicate__ region __object__ DeKalb County, Illinois']]
Text: Alvah Sabin died in Dekalb County, Sycamore, Illinois.
Subject: ['Alvah Sabin', 'Sycamore, Illinois']
Predicate: ['deathPlace', 'region']
Object: ['Sycamore, Illinois', 'DeKalb County, Illinois']

Triple: [['__subject__ Alvah Sabin __predicate__ office __object__ Secretary of State of Vermont', '__subject__ Alvah Sabin __predicate__ birthPlace __object__ Georgia, Vermont']]
Text: Born in Georgia, Vermont, Alvah Sabin, worked as the secretary of the State of Vermont.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['office', 'birthPlace']
Object: ['Secretary of State of Vermont', 'Georgia, Vermont']

Triple: [['__subject__ Alvah Sabin __predicate__ office __object__ Secretary of State of Vermont', '__subject__ Alvah Sabin __predicate__ birthPlace __object__ Georgia, Vermont']]
Text: Alvah Sabin, was born in Georgia, Vermont, and worked as the Secretary of State of Vermont.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['office', 'birthPlace']
Object: ['Secretary of State of Vermont', 'Georgia, Vermont']

Triple: [['__subject__ Alvah Sabin __predicate__ party __object__ Whig Party (United States)', '__subject__ Whig Party (United States) __predicate__ leader __object__ Daniel Webster']]
Text: Alvah Sabin was a member of the United States Whig Party and its leader was Daniel Webster.
Subject: ['Alvah Sabin', 'Whig Party (United States)']
Predicate: ['party', 'leader']
Object: ['Whig Party (United States)', 'Daniel Webster']

Triple: [['__subject__ Alvah Sabin __predicate__ party __object__ Whig Party (United States)', '__subject__ Whig Party (United States) __predicate__ leader __object__ Daniel Webster']]
Text: Alvah Sabin was a member of the United States Whig Party who was led by Daniel Webster.
Subject: ['Alvah Sabin', 'Whig Party (United States)']
Predicate: ['party', 'leader']
Object: ['Whig Party (United States)', 'Daniel Webster']

Triple: [['__subject__ Alvah Sabin __predicate__ party __object__ Whig Party (United States)', '__subject__ Whig Party (United States) __predicate__ leader __object__ Daniel Webster']]
Text: Daniel Webster was a leader of the Whig Party (in the United States), one of the members is Alvah Sabin.
Subject: ['Alvah Sabin', 'Whig Party (United States)']
Predicate: ['party', 'leader']
Object: ['Whig Party (United States)', 'Daniel Webster']

Triple: [['__subject__ Alvah Sabin __predicate__ party __object__ Whig Party (United States)', '__subject__ Whig Party (United States) __predicate__ leader __object__ Henry Clay']]
Text: Alvah Sabin belongs to the Whig Party (United States) which is led by Henry Clay.
Subject: ['Alvah Sabin', 'Whig Party (United States)']
Predicate: ['party', 'leader']
Object: ['Whig Party (United States)', 'Henry Clay']

Triple: [['__subject__ Alvah Sabin __predicate__ party __object__ Whig Party (United States)', '__subject__ Whig Party (United States) __predicate__ leader __object__ Henry Clay']]
Text: Alvah Sabin was a member of the United States Whig Party, the leader of which, was Henry Clay.
Subject: ['Alvah Sabin', 'Whig Party (United States)']
Predicate: ['party', 'leader']
Object: ['Whig Party (United States)', 'Henry Clay']

Triple: [["__subject__ Alvah Sabin __predicate__ region __object__ Vermont's 3rd congressional district", '__subject__ Alvah Sabin __predicate__ activeYearsEndDate __object__ 1857-03-03']]
Text: Alvah Sabin, represented Vermont's 3rd Congressional District, ended his career on 1857-03-03.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'activeYearsEndDate']
Object: ["Vermont's 3rd congressional district", '1857-03-03']

Triple: [["__subject__ Alvah Sabin __predicate__ region __object__ Vermont's 3rd congressional district", '__subject__ Alvah Sabin __predicate__ activeYearsEndDate __object__ 1857-03-03']]
Text: Alvah Sabin, represented Vermont's 3rd Congressional District, and ended his career on 1857-03-03.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'activeYearsEndDate']
Object: ["Vermont's 3rd congressional district", '1857-03-03']

Triple: [["__subject__ Alvah Sabin __predicate__ region __object__ Vermont's 3rd congressional district", '__subject__ Alvah Sabin __predicate__ activeYearsEndDate __object__ 1857-03-03']]
Text: Alvah Sabin, who ended his career on 1857-03-03, represented Vermont's 3rd Congressional District.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'activeYearsEndDate']
Object: ["Vermont's 3rd congressional district", '1857-03-03']

Triple: [["__subject__ Alvah Sabin __predicate__ region __object__ Vermont's 3rd congressional district", '__subject__ Alvah Sabin __predicate__ deathPlace __object__ Sycamore, Illinois']]
Text: Alvah Sabin represented Vermont's 3rd Congressional District and later died in Sycamore, Illinois.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'deathPlace']
Object: ["Vermont's 3rd congressional district", 'Sycamore, Illinois']

Triple: [["__subject__ Alvah Sabin __predicate__ region __object__ Vermont's 3rd congressional district", '__subject__ Alvah Sabin __predicate__ deathPlace __object__ Sycamore, Illinois']]
Text: Alvah Sabin who, represented Vermont's 3rd Congressional District, died in Sycamore, Illinois.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'deathPlace']
Object: ["Vermont's 3rd congressional district", 'Sycamore, Illinois']

Triple: [["__subject__ Alvah Sabin __predicate__ region __object__ Vermont's 3rd congressional district", '__subject__ Alvah Sabin __predicate__ deathPlace __object__ Sycamore, Illinois']]
Text: Alvah Sabin who represented Vermont's 3rd Congressional District, died in Sycamore, Illinois.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'deathPlace']
Object: ["Vermont's 3rd congressional district", 'Sycamore, Illinois']

Triple: [["__subject__ Alvah Sabin __predicate__ region __object__ Vermont's 3rd congressional district", '__subject__ Alvah Sabin __predicate__ state __object__ Vermont']]
Text: Alvah Sabin represented the 3rd Congressional District in Vermont.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'state']
Object: ["Vermont's 3rd congressional district", 'Vermont']

Triple: [["__subject__ Alvah Sabin __predicate__ region __object__ Vermont's 3rd congressional district", '__subject__ Alvah Sabin __predicate__ state __object__ Vermont']]
Text: Alvah Sabin, originally from Vermont, was the representative of the 3rd Congressional District in that state.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'state']
Object: ["Vermont's 3rd congressional district", 'Vermont']

Triple: [["__subject__ Alvah Sabin __predicate__ region __object__ Vermont's 3rd congressional district", '__subject__ Alvah Sabin __predicate__ state __object__ Vermont']]
Text: Alvah Sabin was from Vermont and was a representative of their third Congressional District.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'state']
Object: ["Vermont's 3rd congressional district", 'Vermont']

Triple: [['__subject__ Alvah Sabin __predicate__ region __object__ Vermont', '__subject__ Alvah Sabin __predicate__ activeYearsEndDate __object__ 1857-03-03']]
Text: Alvah Sabin, who represented Vermont, ended his career on 1857-03-03.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'activeYearsEndDate']
Object: ['Vermont', '1857-03-03']

Triple: [['__subject__ Alvah Sabin __predicate__ region __object__ Vermont', '__subject__ Alvah Sabin __predicate__ activeYearsEndDate __object__ 1857-03-03']]
Text: Alvah Sabin, who represented Vermont, ended his career on 3rd of March, 1857.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'activeYearsEndDate']
Object: ['Vermont', '1857-03-03']

Triple: [['__subject__ Alvah Sabin __predicate__ region __object__ Vermont', '__subject__ Alvah Sabin __predicate__ activeYearsEndDate __object__ 1857-03-03']]
Text: Alvah Sabin represented Vermont and ended his political career are March 3rd, 1857.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'activeYearsEndDate']
Object: ['Vermont', '1857-03-03']

Triple: [['__subject__ Alvah Sabin __predicate__ region __object__ Vermont', '__subject__ Alvah Sabin __predicate__ deathPlace __object__ Sycamore, Illinois']]
Text: Alvah Sabin, who died in Sycamore, Illinois, represented Vermont.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'deathPlace']
Object: ['Vermont', 'Sycamore, Illinois']

Triple: [['__subject__ Alvah Sabin __predicate__ region __object__ Vermont', '__subject__ Alvah Sabin __predicate__ deathPlace __object__ Sycamore, Illinois']]
Text: Alvah Sabin, who represented Vermont, passed away in Sycamore, Illinois.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'deathPlace']
Object: ['Vermont', 'Sycamore, Illinois']

Triple: [['__subject__ Alvah Sabin __predicate__ region __object__ Vermont', '__subject__ Alvah Sabin __predicate__ deathPlace __object__ Sycamore, Illinois']]
Text: Alvah Sabin, who represented Vermont, died in Sycamore, Illinois.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'deathPlace']
Object: ['Vermont', 'Sycamore, Illinois']

Triple: [['__subject__ Alvah Sabin __predicate__ region __object__ Vermont', '__subject__ Alvah Sabin __predicate__ office __object__ Secretary of State of Vermont']]
Text: Alvah Sabin represented Vermont where he worked as Secretary of State.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'office']
Object: ['Vermont', 'Secretary of State of Vermont']

Triple: [['__subject__ Alvah Sabin __predicate__ region __object__ Vermont', '__subject__ Alvah Sabin __predicate__ office __object__ Secretary of State of Vermont']]
Text: Alvah Sabin, represented Vermon, and worked as the Secretary of State of Vermont.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'office']
Object: ['Vermont', 'Secretary of State of Vermont']

Triple: [['__subject__ Alvah Sabin __predicate__ region __object__ Vermont', '__subject__ Alvah Sabin __predicate__ office __object__ Secretary of State of Vermont']]
Text: Alvah Sabin represented the State of Vermont where he worked as the secretary of the State.
Subject: ['Alvah Sabin', 'Alvah Sabin']
Predicate: ['region', 'office']
Object: ['Vermont', 'Secretary of State of Vermont']

Triple: [['__subject__ Alvah Sabin __predicate__ region __object__ Vermont', '__subject__ Vermont __predicate__ largestCity __object__ Burlington, Vermont']]
Text: Alvah Sabin represented Vermont, whose largest city is Burlington.
Subject: ['Alvah Sabin', 'Vermont']
Predicate: ['region', 'largestCity']
Object: ['Vermont', 'Burlington, Vermont']

Triple: [['__subject__ Alvah Sabin __predicate__ region __object__ Vermont', '__subject__ Vermont __predicate__ largestCity __object__ Burlington, Vermont']]
Text: Alvah Sabin represented Vermont, the largest city of which, is Burlington, Vermont.
Subject: ['Alvah Sabin', 'Vermont']
Predicate: ['region', 'largestCity']
Object: ['Vermont', 'Burlington, Vermont']

Triple: [['__subject__ American Civil War __predicate__ commander __object__ Abraham Lincoln', '__subject__ Albert Jennings Fountain __predicate__ battle __object__ American Civil War']]
Text: Albert Jennings Fountain battled in the American Civil War in which Abraham Lincoln was a commander.
Subject: ['American Civil War', 'Albert Jennings Fountain']
Predicate: ['commander', 'battle']
Object: ['Abraham Lincoln', 'American Civil War']

Triple: [['__subject__ American Civil War __predicate__ commander __object__ Abraham Lincoln', '__subject__ Albert Jennings Fountain __predicate__ battle __object__ American Civil War']]
Text: Abraham Lincoln was a commander in the American Civil War, which Albert Jennings Fountain fought in.
Subject: ['American Civil War', 'Albert Jennings Fountain']
Predicate: ['commander', 'battle']
Object: ['Abraham Lincoln', 'American Civil War']

Triple: [['__subject__ American Civil War __predicate__ commander __object__ Abraham Lincoln', '__subject__ Albert Jennings Fountain __predicate__ battle __object__ American Civil War']]
Text: Albert Jennings Fountain battled in the American Civil War, the war in which Abraham Lincoln was a commander.
Subject: ['American Civil War', 'Albert Jennings Fountain']
Predicate: ['commander', 'battle']
Object: ['Abraham Lincoln', 'American Civil War']

Triple: [['__subject__ American Civil War __predicate__ commander __object__ Robert E. Lee', '__subject__ Aaron S. Daggett __predicate__ battle __object__ American Civil War']]
Text: Aaron S. Daggett fought in battles in the American Civil War, a war Robert E Lee was part of, as a commander.
Subject: ['American Civil War', 'Aaron S. Daggett']
Predicate: ['commander', 'battle']
Object: ['Robert E. Lee', 'American Civil War']

Triple: [['__subject__ American Civil War __predicate__ commander __object__ Robert E. Lee', '__subject__ Aaron S. Daggett __predicate__ battle __object__ American Civil War']]
Text: Aaron S. Daggett fought in, and Robert E. Lee was a commander in, the American Civil War.
Subject: ['American Civil War', 'Aaron S. Daggett']
Predicate: ['commander', 'battle']
Object: ['Robert E. Lee', 'American Civil War']

Triple: [['__subject__ American Civil War __predicate__ commander __object__ Robert E. Lee', '__subject__ Aaron S. Daggett __predicate__ battle __object__ American Civil War']]
Text: Aaron S. Daggett served in the American Civil War, commanded by Robert E Lee.
Subject: ['American Civil War', 'Aaron S. Daggett']
Predicate: ['commander', 'battle']
Object: ['Robert E. Lee', 'American Civil War']

Triple: [['__subject__ Austria __predicate__ language __object__ Austrian German', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria']]
Text: Alfons Gorbach was born in Austria, where Austrian German is the language spoken.
Subject: ['Austria', 'Alfons Gorbach']
Predicate: ['language', 'birthPlace']
Object: ['Austrian German', 'Austria']

Triple: [['__subject__ Austria __predicate__ language __object__ Austrian German', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria']]
Text: Austria was the birthplace of Alfons Gorbach whose language is Austrian German.
Subject: ['Austria', 'Alfons Gorbach']
Predicate: ['language', 'birthPlace']
Object: ['Austrian German', 'Austria']

Triple: [['__subject__ Austria __predicate__ language __object__ Austrian German', '__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria']]
Text: Austrian born Alfons Gorbach speaks Austrian German which is the language of Austria.
Subject: ['Austria', 'Alfons Gorbach']
Predicate: ['language', 'birthPlace']
Object: ['Austrian German', 'Austria']

Triple: [['__subject__ Austria __predicate__ leader __object__ Doris Bures', '__subject__ Alfons Gorbach __predicate__ deathPlace __object__ Austria']]
Text: Alfons Gorbach died in Austria, the country led by, Doris Bures.
Subject: ['Austria', 'Alfons Gorbach']
Predicate: ['leader', 'deathPlace']
Object: ['Doris Bures', 'Austria']

Triple: [['__subject__ Austria __predicate__ leader __object__ Doris Bures', '__subject__ Alfons Gorbach __predicate__ deathPlace __object__ Austria']]
Text: Alfons Gorbach's place of death was in Austria, a country which is led by Doris Bures.
Subject: ['Austria', 'Alfons Gorbach']
Predicate: ['leader', 'deathPlace']
Object: ['Doris Bures', 'Austria']

Triple: [['__subject__ Austria __predicate__ leader __object__ Doris Bures', '__subject__ Alfons Gorbach __predicate__ deathPlace __object__ Austria']]
Text: Alfons Gorbach died in Austria, the leader of which, is Doris Bures.
Subject: ['Austria', 'Alfons Gorbach']
Predicate: ['leader', 'deathPlace']
Object: ['Doris Bures', 'Austria']

Triple: [['__subject__ Battle of Antietam __predicate__ commander __object__ Robert E. Lee', '__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Antietam']]
Text: Both Aaron S. Daggett and Robert .E. Lee (commander) were at the Battle of Antietam.
Subject: ['Battle of Antietam', 'Aaron S. Daggett']
Predicate: ['commander', 'battle']
Object: ['Robert E. Lee', 'Battle of Antietam']

Triple: [['__subject__ Battle of Antietam __predicate__ commander __object__ Robert E. Lee', '__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Antietam']]
Text: Aaron S Daggett fought in the Battle of Antietam, where Robert E Lee was a commander.
Subject: ['Battle of Antietam', 'Aaron S. Daggett']
Predicate: ['commander', 'battle']
Object: ['Robert E. Lee', 'Battle of Antietam']

Triple: [['__subject__ Battle of Antietam __predicate__ commander __object__ Robert E. Lee', '__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Antietam']]
Text: Robert E Lee was commander in the Battle of Antietam in which Aaron S. Daggett also fought.
Subject: ['Battle of Antietam', 'Aaron S. Daggett']
Predicate: ['commander', 'battle']
Object: ['Robert E. Lee', 'Battle of Antietam']

Triple: [['__subject__ Battle of Chancellorsville __predicate__ isPartOfMilitaryConflict __object__ American Civil War', '__subject__ Alfred Moore Scales __predicate__ battle __object__ Battle of Chancellorsville']]
Text: Alfred Moore Scales took part in the Battle of Chancellorsville, which was part of the American Civil War conflict.
Subject: ['Battle of Chancellorsville', 'Alfred Moore Scales']
Predicate: ['isPartOfMilitaryConflict', 'battle']
Object: ['American Civil War', 'Battle of Chancellorsville']

Triple: [['__subject__ Battle of Chancellorsville __predicate__ isPartOfMilitaryConflict __object__ American Civil War', '__subject__ Alfred Moore Scales __predicate__ battle __object__ Battle of Chancellorsville']]
Text: The Battle of Chancellorsville was part of the American Civil War and one of the men who fought in that battle was Alfred Moore Scales.
Subject: ['Battle of Chancellorsville', 'Alfred Moore Scales']
Predicate: ['isPartOfMilitaryConflict', 'battle']
Object: ['American Civil War', 'Battle of Chancellorsville']

Triple: [['__subject__ Battle of Chancellorsville __predicate__ isPartOfMilitaryConflict __object__ American Civil War', '__subject__ Alfred Moore Scales __predicate__ battle __object__ Battle of Chancellorsville']]
Text: Battle of Chancellorsville was part of the American Civil War and one of its participants was Alfred Moore Scales.
Subject: ['Battle of Chancellorsville', 'Alfred Moore Scales']
Predicate: ['isPartOfMilitaryConflict', 'battle']
Object: ['American Civil War', 'Battle of Chancellorsville']

Triple: [['__subject__ Battle of France __predicate__ commander __object__ Gerd von Rundstedt', '__subject__ Airey Neave __predicate__ battle __object__ Battle of France']]
Text: Airey Neave fought in the Battle of France, where Gerd Von Rundstedt was a commander.
Subject: ['Battle of France', 'Airey Neave']
Predicate: ['commander', 'battle']
Object: ['Gerd von Rundstedt', 'Battle of France']

Triple: [['__subject__ Battle of France __predicate__ commander __object__ Gerd von Rundstedt', '__subject__ Airey Neave __predicate__ battle __object__ Battle of France']]
Text: Gerd von Rundstedt was a commander in the Battle of France and one of the people involved in that battle was Airey Neave.
Subject: ['Battle of France', 'Airey Neave']
Predicate: ['commander', 'battle']
Object: ['Gerd von Rundstedt', 'Battle of France']

Triple: [['__subject__ Battle of France __predicate__ commander __object__ Gerd von Rundstedt', '__subject__ Airey Neave __predicate__ battle __object__ Battle of France']]
Text: Airey Neave fought in the Battle of France whose commander was Gerd Von Rundstedt.
Subject: ['Battle of France', 'Airey Neave']
Predicate: ['commander', 'battle']
Object: ['Gerd von Rundstedt', 'Battle of France']

Triple: [['__subject__ Battle of Salem Church __predicate__ commander __object__ Robert E. Lee', '__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Salem Church']]
Text: Robert E Lee was a commander in the Battle of Salem Church where Aaron S Daggett also fought.
Subject: ['Battle of Salem Church', 'Aaron S. Daggett']
Predicate: ['commander', 'battle']
Object: ['Robert E. Lee', 'Battle of Salem Church']

Triple: [['__subject__ Battle of Salem Church __predicate__ commander __object__ Robert E. Lee', '__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Salem Church']]
Text: Robert E. Lee was a commander at the Battle of Salem Church, a battle Aaron S Daggett fought in.
Subject: ['Battle of Salem Church', 'Aaron S. Daggett']
Predicate: ['commander', 'battle']
Object: ['Robert E. Lee', 'Battle of Salem Church']

Triple: [['__subject__ Battle of Salem Church __predicate__ commander __object__ Robert E. Lee', '__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Salem Church']]
Text: Robert E. Lee was one commander at the Battle of Salem Church and Aaron S. Daggett fought in this same battle.
Subject: ['Battle of Salem Church', 'Aaron S. Daggett']
Predicate: ['commander', 'battle']
Object: ['Robert E. Lee', 'Battle of Salem Church']

Triple: [['__subject__ Juan Perón __predicate__ party __object__ Labour Party (Argentina)', '__subject__ Alberto Teisaire __predicate__ inOfficeWhilePresident __object__ Juan Perón']]
Text: Juan Peron was a member of the Argentinian Labour Party. Juan Peron was President whilst Alberto Teisaire was in office.
Subject: ['Juan Perón', 'Alberto Teisaire']
Predicate: ['party', 'inOfficeWhilePresident']
Object: ['Labour Party (Argentina)', 'Juan Perón']

Triple: [['__subject__ Juan Perón __predicate__ party __object__ Labour Party (Argentina)', '__subject__ Alberto Teisaire __predicate__ inOfficeWhilePresident __object__ Juan Perón']]
Text: Juan Peron belongs to the Labour Party in Argentina and while he was President Alberto Teisaire was in office.
Subject: ['Juan Perón', 'Alberto Teisaire']
Predicate: ['party', 'inOfficeWhilePresident']
Object: ['Labour Party (Argentina)', 'Juan Perón']

Triple: [['__subject__ Juan Perón __predicate__ party __object__ Labour Party (Argentina)', '__subject__ Alberto Teisaire __predicate__ inOfficeWhilePresident __object__ Juan Perón']]
Text: Alberto Teisaire was in office while Juan Peron (a member of the Labour Party in Argentina) was President.
Subject: ['Juan Perón', 'Alberto Teisaire']
Predicate: ['party', 'inOfficeWhilePresident']
Object: ['Labour Party (Argentina)', 'Juan Perón']

Triple: [['__subject__ Netherlands __predicate__ currency __object__ Euro', '__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands']]
Text: Ab Klink was born in the Netherlands, where the Euro is the currency.
Subject: ['Netherlands', 'Ab Klink']
Predicate: ['currency', 'birthPlace']
Object: ['Euro', 'Netherlands']

Triple: [['__subject__ Netherlands __predicate__ currency __object__ Euro', '__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands']]
Text: Ab Klink was born in the Netherlands, where the currency is the euro.
Subject: ['Netherlands', 'Ab Klink']
Predicate: ['currency', 'birthPlace']
Object: ['Euro', 'Netherlands']

Triple: [['__subject__ Netherlands __predicate__ currency __object__ Euro', '__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands']]
Text: The euro is the currency in the Netherlands where Ab Klink was born.
Subject: ['Netherlands', 'Ab Klink']
Predicate: ['currency', 'birthPlace']
Object: ['Euro', 'Netherlands']

Triple: [['__subject__ Netherlands __predicate__ currency __object__ Euro', '__subject__ Ab Klink __predicate__ nationality __object__ Netherlands']]
Text: Ab Klink comes from the Netherlands where the Euro is the currency.
Subject: ['Netherlands', 'Ab Klink']
Predicate: ['currency', 'nationality']
Object: ['Euro', 'Netherlands']

Triple: [['__subject__ Netherlands __predicate__ currency __object__ Euro', '__subject__ Ab Klink __predicate__ nationality __object__ Netherlands']]
Text: Ab Klink is from the Netherlands, whose currency is the Euro.
Subject: ['Netherlands', 'Ab Klink']
Predicate: ['currency', 'nationality']
Object: ['Euro', 'Netherlands']

Triple: [['__subject__ Netherlands __predicate__ leader __object__ Mark Rutte', '__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands']]
Text: Mark Rutte is the leader of the Netherlands where Ab Klink was born.
Subject: ['Netherlands', 'Ab Klink']
Predicate: ['leader', 'birthPlace']
Object: ['Mark Rutte', 'Netherlands']

Triple: [['__subject__ Netherlands __predicate__ leader __object__ Mark Rutte', '__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands']]
Text: Ab Klink was born in the Netherlands where the leader is Mark Rutte.
Subject: ['Netherlands', 'Ab Klink']
Predicate: ['leader', 'birthPlace']
Object: ['Mark Rutte', 'Netherlands']

Triple: [['__subject__ Netherlands __predicate__ leader __object__ Mark Rutte', '__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands']]
Text: Ab Klink was born in the Netherlands which is led by Mark Rutte.
Subject: ['Netherlands', 'Ab Klink']
Predicate: ['leader', 'birthPlace']
Object: ['Mark Rutte', 'Netherlands']

Triple: [['__subject__ New Democracy (Greece) __predicate__ colour __object__ Blue', '__subject__ Adonis Georgiadis __predicate__ party __object__ New Democracy (Greece)']]
Text: Adonis Georgiadis is a member of the Greek New Democracy Party, whose colour is blue.
Subject: ['New Democracy (Greece)', 'Adonis Georgiadis']
Predicate: ['colour', 'party']
Object: ['Blue', 'New Democracy (Greece)']

Triple: [['__subject__ New Democracy (Greece) __predicate__ colour __object__ Blue', '__subject__ Adonis Georgiadis __predicate__ party __object__ New Democracy (Greece)']]
Text: Adonis Georgiadis was a member of the New Democracy party in Greece and blue is their colour.
Subject: ['New Democracy (Greece)', 'Adonis Georgiadis']
Predicate: ['colour', 'party']
Object: ['Blue', 'New Democracy (Greece)']

Triple: [['__subject__ New Democracy (Greece) __predicate__ colour __object__ Blue', '__subject__ Adonis Georgiadis __predicate__ party __object__ New Democracy (Greece)']]
Text: Adonis Georgiadis is part of the New Democracy party in Greece whose color is blue.
Subject: ['New Democracy (Greece)', 'Adonis Georgiadis']
Predicate: ['colour', 'party']
Object: ['Blue', 'New Democracy (Greece)']

Triple: [['__subject__ Nigerian Air Force __predicate__ commander __object__ Sadique Abubakar', '__subject__ Abdulsalami Abubakar __predicate__ militaryBranch __object__ Nigerian Air Force']]
Text: Sadique Abubakar is a commander in the Nigerian Air Force, which Abdulsalami Abubakar was a member of.
Subject: ['Nigerian Air Force', 'Abdulsalami Abubakar']
Predicate: ['commander', 'militaryBranch']
Object: ['Sadique Abubakar', 'Nigerian Air Force']

Triple: [['__subject__ Nigerian Air Force __predicate__ commander __object__ Sadique Abubakar', '__subject__ Abdulsalami Abubakar __predicate__ militaryBranch __object__ Nigerian Air Force']]
Text: Abdulsalami Abubakar served in the Nigerian Air Force which is commanded by Sadique Abubakar.
Subject: ['Nigerian Air Force', 'Abdulsalami Abubakar']
Predicate: ['commander', 'militaryBranch']
Object: ['Sadique Abubakar', 'Nigerian Air Force']

Triple: [['__subject__ Nigerian Air Force __predicate__ commander __object__ Sadique Abubakar', '__subject__ Abdulsalami Abubakar __predicate__ militaryBranch __object__ Nigerian Air Force']]
Text: Abdulsalami Abubakar was in the Nigerian Air Force; where Sadique Abubakar is the commander.
Subject: ['Nigerian Air Force', 'Abdulsalami Abubakar']
Predicate: ['commander', 'militaryBranch']
Object: ['Sadique Abubakar', 'Nigerian Air Force']

Triple: [['__subject__ Poland __predicate__ ethnicGroup __object__ Romani people', '__subject__ Adam Koc __predicate__ nationality __object__ Poland']]
Text: Adam Koc's nationality is Poland, where one of the ethnic groups, is Romani.
Subject: ['Poland', 'Adam Koc']
Predicate: ['ethnicGroup', 'nationality']
Object: ['Romani people', 'Poland']

Triple: [['__subject__ Poland __predicate__ ethnicGroup __object__ Romani people', '__subject__ Adam Koc __predicate__ nationality __object__ Poland']]
Text: The Romani people are an ethnic group in Poland, the country of which Adam Koc is a national.
Subject: ['Poland', 'Adam Koc']
Predicate: ['ethnicGroup', 'nationality']
Object: ['Romani people', 'Poland']

Triple: [['__subject__ Poland __predicate__ language __object__ Kashubian language', '__subject__ Adam Koc __predicate__ nationality __object__ Poland']]
Text: Adam Koc is a Polish national where the Kashubian language is spoken.
Subject: ['Poland', 'Adam Koc']
Predicate: ['language', 'nationality']
Object: ['Kashubian language', 'Poland']

Triple: [['__subject__ Poland __predicate__ language __object__ Kashubian language', '__subject__ Adam Koc __predicate__ nationality __object__ Poland']]
Text: Adam Koc is a national of Poland where the Kashubian language is spoken.
Subject: ['Poland', 'Adam Koc']
Predicate: ['language', 'nationality']
Object: ['Kashubian language', 'Poland']

Triple: [['__subject__ Poland __predicate__ language __object__ Kashubian language', '__subject__ Adam Koc __predicate__ nationality __object__ Poland']]
Text: Adam Koc is a national of Poland, where the Kashubian language is spoken.
Subject: ['Poland', 'Adam Koc']
Predicate: ['language', 'nationality']
Object: ['Kashubian language', 'Poland']

Triple: [['__subject__ Poland __predicate__ language __object__ Polish language', '__subject__ Adam Koc __predicate__ nationality __object__ Poland']]
Text: Adam Kocis from Poland, where they speak Polish.
Subject: ['Poland', 'Adam Koc']
Predicate: ['language', 'nationality']
Object: ['Polish language', 'Poland']

Triple: [['__subject__ Poland __predicate__ language __object__ Polish language', '__subject__ Adam Koc __predicate__ nationality __object__ Poland']]
Text: The Polish language is used in Poland, the country Adam Koc is a national of.
Subject: ['Poland', 'Adam Koc']
Predicate: ['language', 'nationality']
Object: ['Polish language', 'Poland']

Triple: [['__subject__ Poland __predicate__ language __object__ Polish language', '__subject__ Adam Koc __predicate__ nationality __object__ Poland']]
Text: Adam Koc is Polish and people in Poland speak Polish.
Subject: ['Poland', 'Adam Koc']
Predicate: ['language', 'nationality']
Object: ['Polish language', 'Poland']

Triple: [['__subject__ Socialist Party (Netherlands) __predicate__ colour __object__ Red', '__subject__ Agnes Kant __predicate__ party __object__ Socialist Party (Netherlands)']]
Text: Agnes Kant is a member of the Socialist Party in Netherlands which uses red as one of its colours.
Subject: ['Socialist Party (Netherlands)', 'Agnes Kant']
Predicate: ['colour', 'party']
Object: ['Red', 'Socialist Party (Netherlands)']

Triple: [['__subject__ Socialist Party (Netherlands) __predicate__ colour __object__ Red', '__subject__ Agnes Kant __predicate__ party __object__ Socialist Party (Netherlands)']]
Text: Agnes Kant is a member of the Socialist Party in the Netherlands which uses the colour red.
Subject: ['Socialist Party (Netherlands)', 'Agnes Kant']
Predicate: ['colour', 'party']
Object: ['Red', 'Socialist Party (Netherlands)']

Triple: [['__subject__ Socialist Party (Netherlands) __predicate__ leader __object__ Emile Roemer', '__subject__ Agnes Kant __predicate__ party __object__ Socialist Party (Netherlands)']]
Text: Agnes Kant is a member of the Socialist Party in Netherlands, the leader of which, is Emile Roemer.
Subject: ['Socialist Party (Netherlands)', 'Agnes Kant']
Predicate: ['leader', 'party']
Object: ['Emile Roemer', 'Socialist Party (Netherlands)']

Triple: [['__subject__ Socialist Party (Netherlands) __predicate__ leader __object__ Emile Roemer', '__subject__ Agnes Kant __predicate__ party __object__ Socialist Party (Netherlands)']]
Text: A member of the Socialist Party in the Netherlands is Agnes Kant. The leader of that party is Emile Roemer.
Subject: ['Socialist Party (Netherlands)', 'Agnes Kant']
Predicate: ['leader', 'party']
Object: ['Emile Roemer', 'Socialist Party (Netherlands)']

Triple: [['__subject__ Socialist Party (Netherlands) __predicate__ leader __object__ Emile Roemer', '__subject__ Agnes Kant __predicate__ party __object__ Socialist Party (Netherlands)']]
Text: The leader of the Socialist Party of the Netherlands is called Emile Roemer and Agnes Kant is also a member.
Subject: ['Socialist Party (Netherlands)', 'Agnes Kant']
Predicate: ['leader', 'party']
Object: ['Emile Roemer', 'Socialist Party (Netherlands)']

Triple: [['__subject__ Spain __predicate__ leader __object__ Felipe VI of Spain', '__subject__ Abel Caballero __predicate__ nationality __object__ Spain']]
Text: Abel Caballero is from Spain, where the leader is, Felipe VI of Spain.
Subject: ['Spain', 'Abel Caballero']
Predicate: ['leader', 'nationality']
Object: ['Felipe VI of Spain', 'Spain']

Triple: [['__subject__ Spain __predicate__ leader __object__ Felipe VI of Spain', '__subject__ Abel Caballero __predicate__ nationality __object__ Spain']]
Text: Abel Caballero is a national of Spain whose leader is Felipe VI.
Subject: ['Spain', 'Abel Caballero']
Predicate: ['leader', 'nationality']
Object: ['Felipe VI of Spain', 'Spain']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ African Americans', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ United States']]
Text: Albert Jennings Fountain was born in the United States, where one of the ethnic groups, is African Americans.
Subject: ['United States', 'Albert Jennings Fountain']
Predicate: ['ethnicGroup', 'birthPlace']
Object: ['African Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ African Americans', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ United States']]
Text: Albert Jennings Fountain was born in the United States were African Americans are an ethnic group.
Subject: ['United States', 'Albert Jennings Fountain']
Predicate: ['ethnicGroup', 'birthPlace']
Object: ['African Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ African Americans', '__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ United States']]
Text: Albert Jennings Fountain was born in the United States; where African Americans are an ethnic group.
Subject: ['United States', 'Albert Jennings Fountain']
Predicate: ['ethnicGroup', 'birthPlace']
Object: ['African Americans', 'United States']

Triple: [['__subject__ Vermont __predicate__ largestCity __object__ Burlington, Vermont', '__subject__ Alvah Sabin __predicate__ state __object__ Vermont']]
Text: Alvah Sabin is from Vermont where Burlington is the largest city.
Subject: ['Vermont', 'Alvah Sabin']
Predicate: ['largestCity', 'state']
Object: ['Burlington, Vermont', 'Vermont']

Triple: [['__subject__ Vermont __predicate__ largestCity __object__ Burlington, Vermont', '__subject__ Alvah Sabin __predicate__ state __object__ Vermont']]
Text: Burlington is the largest city in Alvah Sabin's state of Vermont.
Subject: ['Vermont', 'Alvah Sabin']
Predicate: ['largestCity', 'state']
Object: ['Burlington, Vermont', 'Vermont']

Triple: [['__subject__ Vermont __predicate__ largestCity __object__ Burlington, Vermont', '__subject__ Alvah Sabin __predicate__ state __object__ Vermont']]
Text: Alvah Sabin was from Vermont, whose largest city is Burlington.
Subject: ['Vermont', 'Alvah Sabin']
Predicate: ['largestCity', 'state']
Object: ['Burlington, Vermont', 'Vermont']

Triple: [['__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger', '__subject__ Peter Stöger __predicate__ club __object__ Austria national football team']]
Text: Peter Stoger is manager of 1. FC Koln and plays for the Austria national football team.
Subject: ['1. FC Köln', 'Peter Stöger']
Predicate: ['manager', 'club']
Object: ['Peter Stöger', 'Austria national football team']

Triple: [['__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger', '__subject__ Peter Stöger __predicate__ club __object__ Austria national football team']]
Text: Peter Stoger is the manager of FC Koln and plays for the Austria national football team.
Subject: ['1. FC Köln', 'Peter Stöger']
Predicate: ['manager', 'club']
Object: ['Peter Stöger', 'Austria national football team']

Triple: [['__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger', '__subject__ Peter Stöger __predicate__ club __object__ Austria national football team']]
Text: Peter Stöger is manager of 1. FC Köln and plays for the Austria National Football team.
Subject: ['1. FC Köln', 'Peter Stöger']
Predicate: ['manager', 'club']
Object: ['Peter Stöger', 'Austria national football team']

Triple: [['__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger', '__subject__ Peter Stöger __predicate__ club __object__ FK Austria Wien']]
Text: Peter Stöger is at the FK Austria Wien club and manages 1 FC Koln.
Subject: ['1. FC Köln', 'Peter Stöger']
Predicate: ['manager', 'club']
Object: ['Peter Stöger', 'FK Austria Wien']

Triple: [['__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger', '__subject__ Peter Stöger __predicate__ club __object__ FK Austria Wien']]
Text: The manager of 1. FC Koln is Peter Stoger who plays for FK Austria Wien.
Subject: ['1. FC Köln', 'Peter Stöger']
Predicate: ['manager', 'club']
Object: ['Peter Stöger', 'FK Austria Wien']

Triple: [['__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger', '__subject__ Peter Stöger __predicate__ club __object__ FK Austria Wien']]
Text: Peter Stoger is the manager of FC Koln as well as being a member of the FK Austria Wien soccer club.
Subject: ['1. FC Köln', 'Peter Stöger']
Predicate: ['manager', 'club']
Object: ['Peter Stöger', 'FK Austria Wien']

Triple: [['__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger', '__subject__ Peter Stöger __predicate__ club __object__ LASK Linz']]
Text: Peter Stöger is manager of 1. FC Köln and plays for LASK Linz.
Subject: ['1. FC Köln', 'Peter Stöger']
Predicate: ['manager', 'club']
Object: ['Peter Stöger', 'LASK Linz']

Triple: [['__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger', '__subject__ Peter Stöger __predicate__ club __object__ LASK Linz']]
Text: The manager of 1. FC Koln is Peter Stoger, who plays for LASK Linz.
Subject: ['1. FC Köln', 'Peter Stöger']
Predicate: ['manager', 'club']
Object: ['Peter Stöger', 'LASK Linz']

Triple: [['__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger', '__subject__ Peter Stöger __predicate__ club __object__ LASK Linz']]
Text: Peter Stoger is the manager of FC Koln and played for the club LASK Linz.
Subject: ['1. FC Köln', 'Peter Stöger']
Predicate: ['manager', 'club']
Object: ['Peter Stöger', 'LASK Linz']

Triple: [['__subject__ 1. FC Köln __predicate__ numberOfMembers __object__ 50000', '__subject__ 1. FC Köln __predicate__ season __object__ 2014–15 Bundesliga']]
Text: FC Köln played the 2014-15 season in the Bundesliga, the team has 50000 members.
Subject: ['1. FC Köln', '1. FC Köln']
Predicate: ['numberOfMembers', 'season']
Object: ['50000', '2014–15 Bundesliga']

Triple: [['__subject__ 1. FC Köln __predicate__ numberOfMembers __object__ 50000', '__subject__ 1. FC Köln __predicate__ season __object__ 2014–15 Bundesliga']]
Text: 1. FC Köln has 50000 members and played the 2014-15 season in the Bundesliga.
Subject: ['1. FC Köln', '1. FC Köln']
Predicate: ['numberOfMembers', 'season']
Object: ['50000', '2014–15 Bundesliga']

Triple: [['__subject__ 1. FC Köln __predicate__ numberOfMembers __object__ 50000', '__subject__ 1. FC Köln __predicate__ season __object__ 2014–15 Bundesliga']]
Text: 1. FC Köln has 50000 members and were in the 2014–15 Bundesliga season.
Subject: ['1. FC Köln', '1. FC Köln']
Predicate: ['numberOfMembers', 'season']
Object: ['50000', '2014–15 Bundesliga']

Triple: [['__subject__ 1. FC Köln __predicate__ season __object__ 2014', '__subject__ 1. FC Köln __predicate__ numberOfMembers __object__ 50000']]
Text: 1. FC Köln has 50000 members and played in the 2014 season.
Subject: ['1. FC Köln', '1. FC Köln']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '50000']

Triple: [['__subject__ 1. FC Köln __predicate__ season __object__ 2014', '__subject__ 1. FC Köln __predicate__ numberOfMembers __object__ 50000']]
Text: 2014 saw 1. FC Koln participating, and they have 50000 members.
Subject: ['1. FC Köln', '1. FC Köln']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '50000']

Triple: [['__subject__ 1. FC Köln __predicate__ season __object__ 2014', '__subject__ 1. FC Köln __predicate__ numberOfMembers __object__ 50000']]
Text: 2014 saw 1. FC Koln, with 50000 members, participating.
Subject: ['1. FC Köln', '1. FC Köln']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '50000']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ league __object__ 3. Liga', '__subject__ 1. FC Magdeburg __predicate__ numberOfMembers __object__ 27250']]
Text: 3 Liga league team 1FC Magdeburg has 27250 members.
Subject: ['1. FC Magdeburg', '1. FC Magdeburg']
Predicate: ['league', 'numberOfMembers']
Object: ['3. Liga', '27250']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ league __object__ 3. Liga', '__subject__ 1. FC Magdeburg __predicate__ numberOfMembers __object__ 27250']]
Text: 1 FC Magdeburg is in the 3 Liga league and has 27250 members.
Subject: ['1. FC Magdeburg', '1. FC Magdeburg']
Predicate: ['league', 'numberOfMembers']
Object: ['3. Liga', '27250']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ league __object__ 3. Liga', '__subject__ 1. FC Magdeburg __predicate__ numberOfMembers __object__ 27250']]
Text: 1FC Magdeburg is in the 3 Liga league and has 27250 members.
Subject: ['1. FC Magdeburg', '1. FC Magdeburg']
Predicate: ['league', 'numberOfMembers']
Object: ['3. Liga', '27250']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ manager __object__ Jens Härtel', '__subject__ Jens Härtel __predicate__ club __object__ 1. FC Lokomotive Leipzig']]
Text: The manager of FC Magdeburg is Jens Härtel who played for 1. FC Lokomotive Leipzig.
Subject: ['1. FC Magdeburg', 'Jens Härtel']
Predicate: ['manager', 'club']
Object: ['Jens Härtel', '1. FC Lokomotive Leipzig']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ manager __object__ Jens Härtel', '__subject__ Jens Härtel __predicate__ club __object__ 1. FC Lokomotive Leipzig']]
Text: The first club Jens Härtel played for was FC Lokomotive Leipzig and he is now manager of FC Magdeburg.
Subject: ['1. FC Magdeburg', 'Jens Härtel']
Predicate: ['manager', 'club']
Object: ['Jens Härtel', '1. FC Lokomotive Leipzig']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ manager __object__ Jens Härtel', '__subject__ Jens Härtel __predicate__ club __object__ 1. FC Lokomotive Leipzig']]
Text: Jens Härtel has been the manager of 1 FC Magdeburg; the first club he played for was FC Lokomotive Leipzig.
Subject: ['1. FC Magdeburg', 'Jens Härtel']
Predicate: ['manager', 'club']
Object: ['Jens Härtel', '1. FC Lokomotive Leipzig']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ manager __object__ Jens Härtel', '__subject__ Jens Härtel __predicate__ club __object__ 1. FC Union Berlin']]
Text: Jens Härtel, is part of the club 1. FC Union Berlin and has been the manager of 1 FC Magdeburg.
Subject: ['1. FC Magdeburg', 'Jens Härtel']
Predicate: ['manager', 'club']
Object: ['Jens Härtel', '1. FC Union Berlin']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ manager __object__ Jens Härtel', '__subject__ Jens Härtel __predicate__ club __object__ 1. FC Union Berlin']]
Text: Jens Härtel, manager of FC Magdeburg, is also part of the club 1. FC Union Berlin.
Subject: ['1. FC Magdeburg', 'Jens Härtel']
Predicate: ['manager', 'club']
Object: ['Jens Härtel', '1. FC Union Berlin']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ manager __object__ Jens Härtel', '__subject__ Jens Härtel __predicate__ club __object__ 1. FC Union Berlin']]
Text: Jens Härtel has been the manager of 1 FC Magdeburg and is part of the club 1. FC Union Berlin.
Subject: ['1. FC Magdeburg', 'Jens Härtel']
Predicate: ['manager', 'club']
Object: ['Jens Härtel', '1. FC Union Berlin']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ manager __object__ Jens Härtel', '__subject__ Jens Härtel __predicate__ club __object__ FC Sachsen Leipzig']]
Text: The manager of FC Magdeburg is Jens Härtel, who has represented the club FC Sachsen Leipzig.
Subject: ['1. FC Magdeburg', 'Jens Härtel']
Predicate: ['manager', 'club']
Object: ['Jens Härtel', 'FC Sachsen Leipzig']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ manager __object__ Jens Härtel', '__subject__ Jens Härtel __predicate__ club __object__ FC Sachsen Leipzig']]
Text: Jens Härtel has managed the 1 FC Magdeburg. He has represented the club FC Sachsen Leipzig.
Subject: ['1. FC Magdeburg', 'Jens Härtel']
Predicate: ['manager', 'club']
Object: ['Jens Härtel', 'FC Sachsen Leipzig']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ manager __object__ Jens Härtel', '__subject__ Jens Härtel __predicate__ club __object__ FC Sachsen Leipzig']]
Text: The manager of FC Magdeburg is Jens Härtel who played for FC Sachsen Leipzig.
Subject: ['1. FC Magdeburg', 'Jens Härtel']
Predicate: ['manager', 'club']
Object: ['Jens Härtel', 'FC Sachsen Leipzig']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ manager __object__ Jens Härtel', '__subject__ Jens Härtel __predicate__ club __object__ SV Babelsberg 03']]
Text: Jens Härtel has been the manager of 1 FC Magdeburg and is part of the SV Babelsberg 03 club.
Subject: ['1. FC Magdeburg', 'Jens Härtel']
Predicate: ['manager', 'club']
Object: ['Jens Härtel', 'SV Babelsberg 03']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ manager __object__ Jens Härtel', '__subject__ Jens Härtel __predicate__ club __object__ SV Babelsberg 03']]
Text: The manager of FC Magdeburg is Jens Härtel who is part of the SV Babelsberg 03 club.
Subject: ['1. FC Magdeburg', 'Jens Härtel']
Predicate: ['manager', 'club']
Object: ['Jens Härtel', 'SV Babelsberg 03']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ manager __object__ Jens Härtel', '__subject__ Jens Härtel __predicate__ club __object__ SV Babelsberg 03']]
Text: Jens Härtel has been the manager of 1 FC Magdeburg, but now plays for SV Babelsberg 03.
Subject: ['1. FC Magdeburg', 'Jens Härtel']
Predicate: ['manager', 'club']
Object: ['Jens Härtel', 'SV Babelsberg 03']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ season __object__ 2014', '__subject__ 1. FC Magdeburg __predicate__ numberOfMembers __object__ 27250']]
Text: 1 FC Magdeburg played in the 2014 season and has 27250 members.
Subject: ['1. FC Magdeburg', '1. FC Magdeburg']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '27250']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ season __object__ 2014', '__subject__ 1. FC Magdeburg __predicate__ numberOfMembers __object__ 27250']]
Text: 1 FC Magdeburg, played in the 2014 season and has 27250 members.
Subject: ['1. FC Magdeburg', '1. FC Magdeburg']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '27250']

Triple: [['__subject__ 1. FC Magdeburg __predicate__ season __object__ 2014', '__subject__ 1. FC Magdeburg __predicate__ numberOfMembers __object__ 27250']]
Text: 1 FC Magdeburg played in the 2014 season, the team has 27250 members.
Subject: ['1. FC Magdeburg', '1. FC Magdeburg']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '27250']

Triple: [['__subject__ A.C. Cesena __predicate__ ground __object__ Cesena', '__subject__ A.C. Cesena __predicate__ league __object__ Serie B']]
Text: A.C. Cesena ground is in Cesena, the team is in the Serie B league.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['ground', 'league']
Object: ['Cesena', 'Serie B']

Triple: [['__subject__ A.C. Cesena __predicate__ ground __object__ Cesena', '__subject__ A.C. Cesena __predicate__ league __object__ Serie B']]
Text: A.C. Cesena, in the Serie B league, ground is in Cesena.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['ground', 'league']
Object: ['Cesena', 'Serie B']

Triple: [['__subject__ A.C. Cesena __predicate__ ground __object__ Cesena', '__subject__ A.C. Cesena __predicate__ league __object__ Serie B']]
Text: AC Cesena play in Serie B and their ground is in Cesena.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['ground', 'league']
Object: ['Cesena', 'Serie B']

Triple: [['__subject__ A.C. Cesena __predicate__ ground __object__ Cesena', '__subject__ A.C. Cesena __predicate__ numberOfMembers __object__ 23900']]
Text: A.C. Cesena has 23900 members and their ground is in Cesena.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['ground', 'numberOfMembers']
Object: ['Cesena', '23900']

Triple: [['__subject__ A.C. Cesena __predicate__ ground __object__ Cesena', '__subject__ A.C. Cesena __predicate__ numberOfMembers __object__ 23900']]
Text: AC Cesena, whose ground is in Cesena, has 23900 members.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['ground', 'numberOfMembers']
Object: ['Cesena', '23900']

Triple: [['__subject__ A.C. Cesena __predicate__ ground __object__ Cesena', '__subject__ A.C. Cesena __predicate__ numberOfMembers __object__ 23900']]
Text: A.C. Cesena has 23900 members and the ground is in Cesena.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['ground', 'numberOfMembers']
Object: ['Cesena', '23900']

Triple: [['__subject__ A.C. Cesena __predicate__ ground __object__ Italy', '__subject__ A.C. Cesena __predicate__ league __object__ Serie B']]
Text: A.C. Cesena, whose ground is located in Italy, are in the Serie B league.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['ground', 'league']
Object: ['Italy', 'Serie B']

Triple: [['__subject__ A.C. Cesena __predicate__ ground __object__ Italy', '__subject__ A.C. Cesena __predicate__ league __object__ Serie B']]
Text: A.C. Cesena's ground is located in Italy and they are in the Serie B league.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['ground', 'league']
Object: ['Italy', 'Serie B']

Triple: [['__subject__ A.C. Cesena __predicate__ ground __object__ Italy', '__subject__ A.C. Cesena __predicate__ league __object__ Serie B']]
Text: A. C. Cesena, whose ground is located in Italy, plays in Serie B.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['ground', 'league']
Object: ['Italy', 'Serie B']

Triple: [['__subject__ A.C. Cesena __predicate__ ground __object__ Italy', '__subject__ A.C. Cesena __predicate__ numberOfMembers __object__ 23900']]
Text: A.C. Cesena is in Italy and has 23900 members.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['ground', 'numberOfMembers']
Object: ['Italy', '23900']

Triple: [['__subject__ A.C. Cesena __predicate__ ground __object__ Italy', '__subject__ A.C. Cesena __predicate__ numberOfMembers __object__ 23900']]
Text: A.C. Cesena has 23900 members, and its ground is located in Italy.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['ground', 'numberOfMembers']
Object: ['Italy', '23900']

Triple: [['__subject__ A.C. Cesena __predicate__ ground __object__ Italy', '__subject__ A.C. Cesena __predicate__ numberOfMembers __object__ 23900']]
Text: Founded in Italy, A.C. Cesena has 23900 members.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['ground', 'numberOfMembers']
Object: ['Italy', '23900']

Triple: [['__subject__ A.C. Cesena __predicate__ ground __object__ Stadio Dino Manuzzi', '__subject__ A.C. Cesena __predicate__ numberOfMembers __object__ 23900']]
Text: A.C. Cesena's ground is Stadio Dino Manuzzi and they have 23900 members.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['ground', 'numberOfMembers']
Object: ['Stadio Dino Manuzzi', '23900']

Triple: [['__subject__ A.C. Cesena __predicate__ ground __object__ Stadio Dino Manuzzi', '__subject__ A.C. Cesena __predicate__ numberOfMembers __object__ 23900']]
Text: A.C. Cesena has 23900 members and its ground is the Stadio Dino Manuzzi.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['ground', 'numberOfMembers']
Object: ['Stadio Dino Manuzzi', '23900']

Triple: [['__subject__ A.C. Cesena __predicate__ league __object__ Serie B', '__subject__ A.C. Cesena __predicate__ ground __object__ Stadio Dino Manuzzi']]
Text: A.C. Cesena's ground is the Stadio Dino Manuzzi and they play in Serie B.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['league', 'ground']
Object: ['Serie B', 'Stadio Dino Manuzzi']

Triple: [['__subject__ A.C. Cesena __predicate__ league __object__ Serie B', '__subject__ A.C. Cesena __predicate__ ground __object__ Stadio Dino Manuzzi']]
Text: AC Cesena, who are in the Serie B league, have their grounds at the Stadio Dino Manuzzi.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['league', 'ground']
Object: ['Serie B', 'Stadio Dino Manuzzi']

Triple: [['__subject__ A.C. Cesena __predicate__ league __object__ Serie B', '__subject__ A.C. Cesena __predicate__ ground __object__ Stadio Dino Manuzzi']]
Text: A.C. Cesena's ground is Stadio Dino Manuzzi, he played in Serie B.
Subject: ['A.C. Cesena', 'A.C. Cesena']
Predicate: ['league', 'ground']
Object: ['Serie B', 'Stadio Dino Manuzzi']

Triple: [['__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago', '__subject__ Massimo Drago __predicate__ club __object__ A.S.D. Licata 1931']]
Text: Massimo Drago has been the manager of A C Cesena and plays for A.S.D. Licata 1931.
Subject: ['A.C. Cesena', 'Massimo Drago']
Predicate: ['manager', 'club']
Object: ['Massimo Drago', 'A.S.D. Licata 1931']

Triple: [['__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago', '__subject__ Massimo Drago __predicate__ club __object__ A.S.D. Licata 1931']]
Text: Massimo Drago was at the club ASD Licata 1931 and has been manager of A C Cesena.
Subject: ['A.C. Cesena', 'Massimo Drago']
Predicate: ['manager', 'club']
Object: ['Massimo Drago', 'A.S.D. Licata 1931']

Triple: [['__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago', '__subject__ Massimo Drago __predicate__ club __object__ A.S.D. Licata 1931']]
Text: Massimo Drago manages A.C. Cesena and plays for A.S.D. Licata 1931.
Subject: ['A.C. Cesena', 'Massimo Drago']
Predicate: ['manager', 'club']
Object: ['Massimo Drago', 'A.S.D. Licata 1931']

Triple: [['__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago', '__subject__ Massimo Drago __predicate__ club __object__ A.S.D. S.S. Nola 1925']]
Text: Massimo Drago has been the manager of A C Cesena, he played for A.S.D. S.S. Nola 1925.
Subject: ['A.C. Cesena', 'Massimo Drago']
Predicate: ['manager', 'club']
Object: ['Massimo Drago', 'A.S.D. S.S. Nola 1925']

Triple: [['__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago', '__subject__ Massimo Drago __predicate__ club __object__ A.S.D. S.S. Nola 1925']]
Text: Massimo Drago, who played for A.S.D. S.S. Nola 1925 has been the manager of AC Cesena.
Subject: ['A.C. Cesena', 'Massimo Drago']
Predicate: ['manager', 'club']
Object: ['Massimo Drago', 'A.S.D. S.S. Nola 1925']

Triple: [['__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago', '__subject__ Massimo Drago __predicate__ club __object__ A.S.D. S.S. Nola 1925']]
Text: Massimo Drago manages A.C. Cesena and played for A.S.D. S.S. Nola 1925.
Subject: ['A.C. Cesena', 'Massimo Drago']
Predicate: ['manager', 'club']
Object: ['Massimo Drago', 'A.S.D. S.S. Nola 1925']

Triple: [['__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago', '__subject__ Massimo Drago __predicate__ club __object__ Delfino Pescara 1936']]
Text: Massimo Drago has been the manager of A C Cesena and is attached to the club Delfino Pescara 1936.
Subject: ['A.C. Cesena', 'Massimo Drago']
Predicate: ['manager', 'club']
Object: ['Massimo Drago', 'Delfino Pescara 1936']

Triple: [['__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago', '__subject__ Massimo Drago __predicate__ club __object__ Delfino Pescara 1936']]
Text: Massimo Drago is connected to Delfino Pescara 1936 and manages A.C. Cesena.
Subject: ['A.C. Cesena', 'Massimo Drago']
Predicate: ['manager', 'club']
Object: ['Massimo Drago', 'Delfino Pescara 1936']

Triple: [['__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago', '__subject__ Massimo Drago __predicate__ club __object__ Delfino Pescara 1936']]
Text: Massimo Drago manages A.C. Cesena and is attached to the club Delfino Pescara 1936.
Subject: ['A.C. Cesena', 'Massimo Drago']
Predicate: ['manager', 'club']
Object: ['Massimo Drago', 'Delfino Pescara 1936']

Triple: [['__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago', '__subject__ Massimo Drago __predicate__ club __object__ S.S.D. Potenza Calcio']]
Text: Massimo Drago, played for the club SSD Potenza Calcio, and manages A.C. Cesena.
Subject: ['A.C. Cesena', 'Massimo Drago']
Predicate: ['manager', 'club']
Object: ['Massimo Drago', 'S.S.D. Potenza Calcio']

Triple: [['__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago', '__subject__ Massimo Drago __predicate__ club __object__ S.S.D. Potenza Calcio']]
Text: Massimo Drago, played for S.S.D. Potenza Calcio, and has been the manager of A C Cesena.
Subject: ['A.C. Cesena', 'Massimo Drago']
Predicate: ['manager', 'club']
Object: ['Massimo Drago', 'S.S.D. Potenza Calcio']

Triple: [['__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago', '__subject__ Massimo Drago __predicate__ club __object__ S.S.D. Potenza Calcio']]
Text: Massimo Drago has been the manager of A C Cesena and previously played for the club SSD Potenza Calcio.
Subject: ['A.C. Cesena', 'Massimo Drago']
Predicate: ['manager', 'club']
Object: ['Massimo Drago', 'S.S.D. Potenza Calcio']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ ground __object__ Verona, Italy', '__subject__ A.C. Chievo Verona __predicate__ league __object__ Serie A']]
Text: Verona, Italy is the home to A.C. Chievo Verona, which is in the league, Serie A.
Subject: ['A.C. Chievo Verona', 'A.C. Chievo Verona']
Predicate: ['ground', 'league']
Object: ['Verona, Italy', 'Serie A']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ ground __object__ Verona, Italy', '__subject__ A.C. Chievo Verona __predicate__ league __object__ Serie A']]
Text: Verona, Italy, is the home to A.C. Chievo Verona playing in the Serie A league.
Subject: ['A.C. Chievo Verona', 'A.C. Chievo Verona']
Predicate: ['ground', 'league']
Object: ['Verona, Italy', 'Serie A']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ ground __object__ Verona, Italy', '__subject__ A.C. Chievo Verona __predicate__ league __object__ Serie A']]
Text: Verona, Italy is the home to A.C. Chievo Verona, played in Serie A.
Subject: ['A.C. Chievo Verona', 'A.C. Chievo Verona']
Predicate: ['ground', 'league']
Object: ['Verona, Italy', 'Serie A']

Triple: [["__subject__ A.C. Chievo Verona __predicate__ ground __object__ Stadio Marc'Antonio Bentegodi", '__subject__ A.C. Chievo Verona __predicate__ numberOfMembers __object__ 39371']]
Text: A.C. Chievo Verona has 39371 members and its home ground is Stadio Marc'Antonio Bentegodi.
Subject: ['A.C. Chievo Verona', 'A.C. Chievo Verona']
Predicate: ['ground', 'numberOfMembers']
Object: ["Stadio Marc'Antonio Bentegodi", '39371']

Triple: [["__subject__ A.C. Chievo Verona __predicate__ ground __object__ Stadio Marc'Antonio Bentegodi", '__subject__ A.C. Chievo Verona __predicate__ numberOfMembers __object__ 39371']]
Text: AC Chievo Verona's home ground is Stadio Marc'Antonio Bentegodi and they have 39371 members.
Subject: ['A.C. Chievo Verona', 'A.C. Chievo Verona']
Predicate: ['ground', 'numberOfMembers']
Object: ["Stadio Marc'Antonio Bentegodi", '39371']

Triple: [["__subject__ A.C. Chievo Verona __predicate__ ground __object__ Stadio Marc'Antonio Bentegodi", '__subject__ A.C. Chievo Verona __predicate__ numberOfMembers __object__ 39371']]
Text: With 39371 members, A.C. Chievo Verona's home ground is Stadio Marc'Antonio Bentegodi.
Subject: ['A.C. Chievo Verona', 'A.C. Chievo Verona']
Predicate: ['ground', 'numberOfMembers']
Object: ["Stadio Marc'Antonio Bentegodi", '39371']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ ground __object__ Verona', '__subject__ A.C. Chievo Verona __predicate__ numberOfMembers __object__ 39371']]
Text: A.C. Chievo Verona play in Verona and has 39371 members.
Subject: ['A.C. Chievo Verona', 'A.C. Chievo Verona']
Predicate: ['ground', 'numberOfMembers']
Object: ['Verona', '39371']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ ground __object__ Verona', '__subject__ A.C. Chievo Verona __predicate__ numberOfMembers __object__ 39371']]
Text: A.C. Chievo Verona, with 39371 members, plays in their ground at Verona.
Subject: ['A.C. Chievo Verona', 'A.C. Chievo Verona']
Predicate: ['ground', 'numberOfMembers']
Object: ['Verona', '39371']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ ground __object__ Verona', '__subject__ A.C. Chievo Verona __predicate__ numberOfMembers __object__ 39371']]
Text: A.C. Chievo Verona is playing in his ground at Verona and has 39371 members.
Subject: ['A.C. Chievo Verona', 'A.C. Chievo Verona']
Predicate: ['ground', 'numberOfMembers']
Object: ['Verona', '39371']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ league __object__ Serie A', '__subject__ A.C. Chievo Verona __predicate__ ground __object__ Verona']]
Text: A.C. Chievo Verona play at Verona in Serie A.
Subject: ['A.C. Chievo Verona', 'A.C. Chievo Verona']
Predicate: ['league', 'ground']
Object: ['Serie A', 'Verona']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ league __object__ Serie A', '__subject__ A.C. Chievo Verona __predicate__ ground __object__ Verona']]
Text: A.C. Chievo Verona play in Verona, in Serie A.
Subject: ['A.C. Chievo Verona', 'A.C. Chievo Verona']
Predicate: ['league', 'ground']
Object: ['Serie A', 'Verona']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ league __object__ Serie A', '__subject__ A.C. Chievo Verona __predicate__ ground __object__ Verona']]
Text: A.C. Chievo Verona is in the league, Serie A and play in Verona.
Subject: ['A.C. Chievo Verona', 'A.C. Chievo Verona']
Predicate: ['league', 'ground']
Object: ['Serie A', 'Verona']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ Calcio Catania']]
Text: Rolando Maran is attached to the club Calcio Catania, and has also managed AC Chievo Verona.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'Calcio Catania']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ Calcio Catania']]
Text: Rolando Maran is a member of the Calcio Catania and is manager of A C Chievo Verona.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'Calcio Catania']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ Carrarese Calcio']]
Text: Associazione Calcio Chievo Verona is managed by Rolando Maran who plays for Carrarese Calcio.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'Carrarese Calcio']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ Carrarese Calcio']]
Text: The manager of A.C. Chievo Verona is Rolando Maran, he played for Carrarese Calcio.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'Carrarese Calcio']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ Carrarese Calcio']]
Text: The manager of A.C. Chievo Verona is Rolando Maran who is in the Carrarese Calcio club.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'Carrarese Calcio']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ F.C. Bari 1908']]
Text: Associazione Calcio Chievo Verona is managed by Rolando Maran who worked at FC Bari 1908.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'F.C. Bari 1908']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ F.C. Bari 1908']]
Text: The manager of A.C. Chievo Verona is Rolando Maran, who has worked at FC Bari 1908.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'F.C. Bari 1908']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ F.C. Bari 1908']]
Text: Associazione Calcio Chievo Verona is managed by Rolando Maran, who plays for F.C. Bari 1908.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'F.C. Bari 1908']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ Unione Triestina 2012 S.S.D.']]
Text: Associazione Calcio Chievo Verona is managed by Rolando Maran, who is in the Unione Triestina 2012 S.S.D. club.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'Unione Triestina 2012 S.S.D.']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ Unione Triestina 2012 S.S.D.']]
Text: The manager of A.C. Chievo Verona is Rolando Maran, who played for Unione Triestina 2012 S.S.D.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'Unione Triestina 2012 S.S.D.']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ Unione Triestina 2012 S.S.D.']]
Text: Associazione Calcio Chievo Verona is managed by Rolando Maran who plays for Unione Triestina 2012 SSD.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'Unione Triestina 2012 S.S.D.']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ Varese Calcio S.S.D.']]
Text: Previously owning club Varese Calcio S.S.D., Rolando Maran now manages club Associazione Calcio Chievo Verona.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'Varese Calcio S.S.D.']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ Varese Calcio S.S.D.']]
Text: Rolando Maran manages A.C. Chievo Verona and is in Varese Calcio S.S.D. club.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'Varese Calcio S.S.D.']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ Varese Calcio S.S.D.']]
Text: The manager of A.C. Chievo Verona is Rolando Maran who used to be at Varese Calcio S.S.D.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'Varese Calcio S.S.D.']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ Vicenza Calcio']]
Text: Associazione Calcio Chievo Verona is managed by Rolando Maran who plays for Vicenza Calcio.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'Vicenza Calcio']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ Vicenza Calcio']]
Text: Rolando Maran has managed AC Chievo Verona and plays at the Vicenza Calcio.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'Vicenza Calcio']

Triple: [['__subject__ A.C. Chievo Verona __predicate__ manager __object__ Rolando Maran', '__subject__ Rolando Maran __predicate__ club __object__ Vicenza Calcio']]
Text: Rolando Maran, in the Vicenza Calcio club, has managed AC Chievo Verona.
Subject: ['A.C. Chievo Verona', 'Rolando Maran']
Predicate: ['manager', 'club']
Object: ['Rolando Maran', 'Vicenza Calcio']

Triple: [['__subject__ A.C. Lumezzane __predicate__ fullName __object__ Associazione Calcio Lumezzane SpA', '__subject__ A.C. Lumezzane __predicate__ numberOfMembers __object__ 4150']]
Text: Associazione Calcio Lumezzane SpA (abbreviated to A.C. Lumezzane) has 4150 members.
Subject: ['A.C. Lumezzane', 'A.C. Lumezzane']
Predicate: ['fullName', 'numberOfMembers']
Object: ['Associazione Calcio Lumezzane SpA', '4150']

Triple: [['__subject__ A.C. Lumezzane __predicate__ fullName __object__ Associazione Calcio Lumezzane SpA', '__subject__ A.C. Lumezzane __predicate__ numberOfMembers __object__ 4150']]
Text: The full name of A.C. Lumezzane, which has 4150 members, is Associazione Calcio Lumezzane SpA.
Subject: ['A.C. Lumezzane', 'A.C. Lumezzane']
Predicate: ['fullName', 'numberOfMembers']
Object: ['Associazione Calcio Lumezzane SpA', '4150']

Triple: [['__subject__ A.C. Lumezzane __predicate__ fullName __object__ Associazione Calcio Lumezzane SpA', '__subject__ A.C. Lumezzane __predicate__ numberOfMembers __object__ 4150']]
Text: The "Associazione Calcio Lumezzane SpA" is the complete name of the A.C. Lumezzane. It has 4150 members.
Subject: ['A.C. Lumezzane', 'A.C. Lumezzane']
Predicate: ['fullName', 'numberOfMembers']
Object: ['Associazione Calcio Lumezzane SpA', '4150']

Triple: [['__subject__ A.C. Lumezzane __predicate__ league __object__ Lega Pro/A', '__subject__ A.C. Lumezzane __predicate__ numberOfMembers __object__ 4150']]
Text: AC Lumezzane, has 4150 members, and play in the Lega Pro/A.
Subject: ['A.C. Lumezzane', 'A.C. Lumezzane']
Predicate: ['league', 'numberOfMembers']
Object: ['Lega Pro/A', '4150']

Triple: [['__subject__ A.C. Lumezzane __predicate__ league __object__ Lega Pro/A', '__subject__ A.C. Lumezzane __predicate__ numberOfMembers __object__ 4150']]
Text: A.C. Lumezzane is in the Lega Pro/A league and has 4150 members.
Subject: ['A.C. Lumezzane', 'A.C. Lumezzane']
Predicate: ['league', 'numberOfMembers']
Object: ['Lega Pro/A', '4150']

Triple: [['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini', '__subject__ Michele Marcolini __predicate__ club __object__ A.C. Chievo Verona']]
Text: Michele Marcolini's club is A.C. Chievo Verona and he manages the A.C. Lumezzane.
Subject: ['A.C. Lumezzane', 'Michele Marcolini']
Predicate: ['manager', 'club']
Object: ['Michele Marcolini', 'A.C. Chievo Verona']

Triple: [['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini', '__subject__ Michele Marcolini __predicate__ club __object__ A.C. Chievo Verona']]
Text: A.C Chievo Verona, is the club of Michele Marcolini, who has been the manager of AC Lumezzane.
Subject: ['A.C. Lumezzane', 'Michele Marcolini']
Predicate: ['manager', 'club']
Object: ['Michele Marcolini', 'A.C. Chievo Verona']

Triple: [['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini', '__subject__ Michele Marcolini __predicate__ club __object__ A.C. Chievo Verona']]
Text: Michele Marcolini, manager of AC Lumezzane, plays for A.C. Chievo Verona.
Subject: ['A.C. Lumezzane', 'Michele Marcolini']
Predicate: ['manager', 'club']
Object: ['Michele Marcolini', 'A.C. Chievo Verona']

Triple: [['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini', '__subject__ Michele Marcolini __predicate__ club __object__ Atalanta B.C.']]
Text: Michele Marcolini manages the A.C. Lumezzane and plays for Atalanta B.C.
Subject: ['A.C. Lumezzane', 'Michele Marcolini']
Predicate: ['manager', 'club']
Object: ['Michele Marcolini', 'Atalanta B.C.']

Triple: [['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini', '__subject__ Michele Marcolini __predicate__ club __object__ Atalanta B.C.']]
Text: Michele Marcolini once managed AC Lumezzane. He played for Atalanta BC.
Subject: ['A.C. Lumezzane', 'Michele Marcolini']
Predicate: ['manager', 'club']
Object: ['Michele Marcolini', 'Atalanta B.C.']

Triple: [['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini', '__subject__ Michele Marcolini __predicate__ club __object__ Atalanta B.C.']]
Text: Michele Marcolini, who is in the Atalanta B.C. club, manages the A.C. Lumezzane.
Subject: ['A.C. Lumezzane', 'Michele Marcolini']
Predicate: ['manager', 'club']
Object: ['Michele Marcolini', 'Atalanta B.C.']

Triple: [['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini', '__subject__ Michele Marcolini __predicate__ club __object__ F.C. Bari 1908']]
Text: Michele Marcolini was at FC Bari 1908 and manages the AC Lumezzane.
Subject: ['A.C. Lumezzane', 'Michele Marcolini']
Predicate: ['manager', 'club']
Object: ['Michele Marcolini', 'F.C. Bari 1908']

Triple: [['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini', '__subject__ Michele Marcolini __predicate__ club __object__ F.C. Bari 1908']]
Text: Michele Marcolini has been associated with F.C. Bari 1908 and is now the manager of A.C. Lumezzane.
Subject: ['A.C. Lumezzane', 'Michele Marcolini']
Predicate: ['manager', 'club']
Object: ['Michele Marcolini', 'F.C. Bari 1908']

Triple: [['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini', '__subject__ Michele Marcolini __predicate__ club __object__ F.C. Bari 1908']]
Text: Michele Marcolini manages the A.C. Lumezzane, he played for F.C. Bari 1908.
Subject: ['A.C. Lumezzane', 'Michele Marcolini']
Predicate: ['manager', 'club']
Object: ['Michele Marcolini', 'F.C. Bari 1908']

Triple: [['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini', '__subject__ Michele Marcolini __predicate__ club __object__ Torino F.C.']]
Text: Michele Marcolini has been manager of AC Lumezzane and played for Torino FC.
Subject: ['A.C. Lumezzane', 'Michele Marcolini']
Predicate: ['manager', 'club']
Object: ['Michele Marcolini', 'Torino F.C.']

Triple: [['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini', '__subject__ Michele Marcolini __predicate__ club __object__ Torino F.C.']]
Text: The manager of A.C. Lumezzane is Michele Marcolini who owns Torino FC.
Subject: ['A.C. Lumezzane', 'Michele Marcolini']
Predicate: ['manager', 'club']
Object: ['Michele Marcolini', 'Torino F.C.']

Triple: [['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini', '__subject__ Michele Marcolini __predicate__ club __object__ Torino F.C.']]
Text: Michele Marcolini manages the A.C. Lumezzane and attends the Torino F.C. Club.
Subject: ['A.C. Lumezzane', 'Michele Marcolini']
Predicate: ['manager', 'club']
Object: ['Michele Marcolini', 'Torino F.C.']

Triple: [['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini', '__subject__ Michele Marcolini __predicate__ club __object__ Vicenza Calcio']]
Text: Michele Marcolini played for Vicenza Calcio and manages A.C. Lumezzane.
Subject: ['A.C. Lumezzane', 'Michele Marcolini']
Predicate: ['manager', 'club']
Object: ['Michele Marcolini', 'Vicenza Calcio']

Triple: [['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini', '__subject__ Michele Marcolini __predicate__ club __object__ Vicenza Calcio']]
Text: Michele Marcolini has been manager of AC Lumezzane and is in the Vicenza Calcio club.
Subject: ['A.C. Lumezzane', 'Michele Marcolini']
Predicate: ['manager', 'club']
Object: ['Michele Marcolini', 'Vicenza Calcio']

Triple: [['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini', '__subject__ Michele Marcolini __predicate__ club __object__ Vicenza Calcio']]
Text: The manager of A.C. Lumezzane is Michele Marcolini who plays for Vicenza Calcio.
Subject: ['A.C. Lumezzane', 'Michele Marcolini']
Predicate: ['manager', 'club']
Object: ['Michele Marcolini', 'Vicenza Calcio']

Triple: [['__subject__ A.C. Lumezzane __predicate__ numberOfMembers __object__ 4150', '__subject__ A.C. Lumezzane __predicate__ league __object__ Lega Pro']]
Text: The A.C. Lumezzane has 4150 members and they play in the Lega Pro league.
Subject: ['A.C. Lumezzane', 'A.C. Lumezzane']
Predicate: ['numberOfMembers', 'league']
Object: ['4150', 'Lega Pro']

Triple: [['__subject__ A.C. Lumezzane __predicate__ numberOfMembers __object__ 4150', '__subject__ A.C. Lumezzane __predicate__ league __object__ Lega Pro']]
Text: AC Lumezzane, play in the Lega Pro league, and have 4150 members.
Subject: ['A.C. Lumezzane', 'A.C. Lumezzane']
Predicate: ['numberOfMembers', 'league']
Object: ['4150', 'Lega Pro']

Triple: [['__subject__ A.C. Lumezzane __predicate__ numberOfMembers __object__ 4150', '__subject__ A.C. Lumezzane __predicate__ league __object__ Lega Pro']]
Text: The A.C. Lumezzane has 4150 members and play in the Lega Pro.
Subject: ['A.C. Lumezzane', 'A.C. Lumezzane']
Predicate: ['numberOfMembers', 'league']
Object: ['4150', 'Lega Pro']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Metapán, El Salvador', '__subject__ A.D. Isidro Metapán __predicate__ league __object__ Salvadoran Primera División']]
Text: A. D. Isidro Metapán play in a league called the Salvadoran Primera Division and is based in Metapan, El Salvador.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['ground', 'league']
Object: ['Metapán, El Salvador', 'Salvadoran Primera División']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Metapán, El Salvador', '__subject__ A.D. Isidro Metapán __predicate__ league __object__ Salvadoran Primera División']]
Text: A.D. Isidro Metapan in the Salvadoran Primera Division is located in Metapan, El Salvador.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['ground', 'league']
Object: ['Metapán, El Salvador', 'Salvadoran Primera División']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Metapán, El Salvador', '__subject__ A.D. Isidro Metapán __predicate__ league __object__ Salvadoran Primera División']]
Text: A.D. Isidro Metapán is in the Salvadoran Primera División league and its ground is in Metapan, El Salvador.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['ground', 'league']
Object: ['Metapán, El Salvador', 'Salvadoran Primera División']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Metapán, El Salvador', '__subject__ A.D. Isidro Metapán __predicate__ numberOfMembers __object__ 10000']]
Text: With 10000 members, AD Isidro Metapán's grounds are located in Metapán, El Salvador.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['ground', 'numberOfMembers']
Object: ['Metapán, El Salvador', '10000']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Metapán, El Salvador', '__subject__ A.D. Isidro Metapán __predicate__ numberOfMembers __object__ 10000']]
Text: The ground of AD Isidro Metapán, with 10000 members, is located in Metapán, El Salvador.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['ground', 'numberOfMembers']
Object: ['Metapán, El Salvador', '10000']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Metapán, El Salvador', '__subject__ A.D. Isidro Metapán __predicate__ numberOfMembers __object__ 10000']]
Text: A.D. Isidro Metapan's is in Metapan, El Salvador and has 10000 members.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['ground', 'numberOfMembers']
Object: ['Metapán, El Salvador', '10000']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Estadio Jorge Calero Suárez', '__subject__ A.D. Isidro Metapán __predicate__ league __object__ Salvadoran Primera División']]
Text: A D Isidro Metapán play in a league called the Salvadoran Primera Division and their home ground is the Estadio Jorge Calero Suárez.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['ground', 'league']
Object: ['Estadio Jorge Calero Suárez', 'Salvadoran Primera División']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Estadio Jorge Calero Suárez', '__subject__ A.D. Isidro Metapán __predicate__ league __object__ Salvadoran Primera División']]
Text: A.D. Isidro Metapán is in the Salvadoran Primera División league and are located at Estadio Jorge Calero Suárez.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['ground', 'league']
Object: ['Estadio Jorge Calero Suárez', 'Salvadoran Primera División']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Estadio Jorge Calero Suárez', '__subject__ A.D. Isidro Metapán __predicate__ league __object__ Salvadoran Primera División']]
Text: A.D. Isidro Metapan play at the Estadio Jorge Calero Suarez in the Salvadoran Primera Division league.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['ground', 'league']
Object: ['Estadio Jorge Calero Suárez', 'Salvadoran Primera División']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Estadio Jorge Calero Suárez', '__subject__ A.D. Isidro Metapán __predicate__ numberOfMembers __object__ 10000']]
Text: A.D. Isidro Metapan have 10000 members and play at the Estadio Jorge Calero Suarez.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['ground', 'numberOfMembers']
Object: ['Estadio Jorge Calero Suárez', '10000']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Estadio Jorge Calero Suárez', '__subject__ A.D. Isidro Metapán __predicate__ numberOfMembers __object__ 10000']]
Text: A.D. Isidro Metapán, are at Estadio Jorge Calero Suárez and have 10000 members.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['ground', 'numberOfMembers']
Object: ['Estadio Jorge Calero Suárez', '10000']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Estadio Jorge Calero Suárez', '__subject__ A.D. Isidro Metapán __predicate__ numberOfMembers __object__ 10000']]
Text: A.D. Isidro Metapan play at the Estadio Jorge Calero Suarez and they have 10000 members.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['ground', 'numberOfMembers']
Object: ['Estadio Jorge Calero Suárez', '10000']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Metapán', '__subject__ A.D. Isidro Metapán __predicate__ numberOfMembers __object__ 10000']]
Text: A.D. Isidro Metapán's ground is in Metapán and the club has 10000 members.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['ground', 'numberOfMembers']
Object: ['Metapán', '10000']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Metapán', '__subject__ A.D. Isidro Metapán __predicate__ numberOfMembers __object__ 10000']]
Text: 10000 members to date, AD Isidro Metapan's ground is in Metapan.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['ground', 'numberOfMembers']
Object: ['Metapán', '10000']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Metapán', '__subject__ A.D. Isidro Metapán __predicate__ numberOfMembers __object__ 10000']]
Text: A.D. Isidro Metapán is playing in its ground at Metapán and has 10000 members.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['ground', 'numberOfMembers']
Object: ['Metapán', '10000']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ league __object__ Salvadoran Primera División', '__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Metapán']]
Text: A.D. Isidro Metapan play in the Salvadoran Primera Division at its ground at Metapan.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['league', 'ground']
Object: ['Salvadoran Primera División', 'Metapán']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ league __object__ Salvadoran Primera División', '__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Metapán']]
Text: A.D. Isidro Metapan play in the Salvadoran Primera Division and their ground is in Metapán.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['league', 'ground']
Object: ['Salvadoran Primera División', 'Metapán']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ league __object__ Salvadoran Primera División', '__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Metapán']]
Text: A.D. Isidro Metapán is in the Salvadoran Primera División league, he is playing in its ground at Metapán.
Subject: ['A.D. Isidro Metapán', 'A.D. Isidro Metapán']
Predicate: ['league', 'ground']
Object: ['Salvadoran Primera División', 'Metapán']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ manager __object__ Jorge Humberto Rodríguez', '__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ Alianza F.C.']]
Text: Jorge Humberto Rodriguez, plays for Alianza F.C. and has been manager of A D Isidro Metapán.
Subject: ['A.D. Isidro Metapán', 'Jorge Humberto Rodríguez']
Predicate: ['manager', 'club']
Object: ['Jorge Humberto Rodríguez', 'Alianza F.C.']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ manager __object__ Jorge Humberto Rodríguez', '__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ Alianza F.C.']]
Text: A.D. Isidro Metapan's manager is Jorge Humberto Rodriguez whose club is Alianza F.C.
Subject: ['A.D. Isidro Metapán', 'Jorge Humberto Rodríguez']
Predicate: ['manager', 'club']
Object: ['Jorge Humberto Rodríguez', 'Alianza F.C.']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ manager __object__ Jorge Humberto Rodríguez', '__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ Alianza F.C.']]
Text: Jorge Humberto Rodríguez manages the A.D. Isidro Metapan and plays for the Alianza F.C. club.
Subject: ['A.D. Isidro Metapán', 'Jorge Humberto Rodríguez']
Predicate: ['manager', 'club']
Object: ['Jorge Humberto Rodríguez', 'Alianza F.C.']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ manager __object__ Jorge Humberto Rodríguez', '__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ C.D. Águila']]
Text: A.D. Isidro Metapan's manager is Jorge Humberto Rodriguez who is attached to the club CD Aguila.
Subject: ['A.D. Isidro Metapán', 'Jorge Humberto Rodríguez']
Predicate: ['manager', 'club']
Object: ['Jorge Humberto Rodríguez', 'C.D. Águila']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ manager __object__ Jorge Humberto Rodríguez', '__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ C.D. Águila']]
Text: A.D. Isidro Metapan's manager is Jorge Humberto Rodriguez who is a member of C.D. Aguila.
Subject: ['A.D. Isidro Metapán', 'Jorge Humberto Rodríguez']
Predicate: ['manager', 'club']
Object: ['Jorge Humberto Rodríguez', 'C.D. Águila']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ manager __object__ Jorge Humberto Rodríguez', '__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ C.D. Águila']]
Text: Jorge Humberto Rodriguez has been a manager of A D Isidro Metapan and is now a member of C.D. Aguila.
Subject: ['A.D. Isidro Metapán', 'Jorge Humberto Rodríguez']
Predicate: ['manager', 'club']
Object: ['Jorge Humberto Rodríguez', 'C.D. Águila']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ manager __object__ Jorge Humberto Rodríguez', '__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ El Salvador national football team']]
Text: Jorge Humberto Rodríguez manages the A.D. Isidro Metapan and plays for the El Salvador national football team.
Subject: ['A.D. Isidro Metapán', 'Jorge Humberto Rodríguez']
Predicate: ['manager', 'club']
Object: ['Jorge Humberto Rodríguez', 'El Salvador national football team']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ manager __object__ Jorge Humberto Rodríguez', '__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ El Salvador national football team']]
Text: Jorge Humberto Rodríguez, who is a member of the El Salvador National Football Team, also manages the team of A.D. Isidro Metapán.
Subject: ['A.D. Isidro Metapán', 'Jorge Humberto Rodríguez']
Predicate: ['manager', 'club']
Object: ['Jorge Humberto Rodríguez', 'El Salvador national football team']

Triple: [['__subject__ A.D. Isidro Metapán __predicate__ manager __object__ Jorge Humberto Rodríguez', '__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ El Salvador national football team']]
Text: Once manager of A D Isidro Metapán, Jorge Humberto Rodriguez, plays for the El Salvador national football team.
Subject: ['A.D. Isidro Metapán', 'Jorge Humberto Rodríguez']
Predicate: ['manager', 'club']
Object: ['Jorge Humberto Rodríguez', 'El Salvador national football team']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ capital __object__ Athens']]
Text: A.E Dimitra Efxeinoupolis is located in Greece, the capital of which is Athens.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'capital']
Object: ['Greece', 'Athens']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ capital __object__ Athens']]
Text: The A.E Dimitra Efxeinoupolis club is located in Greece where the capital city is Athens.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'capital']
Object: ['Greece', 'Athens']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ currency __object__ Euro']]
Text: The A.E Dimitra Efxeinoupolis club is located in Greece, and the Euro is the currency.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'currency']
Object: ['Greece', 'Euro']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ currency __object__ Euro']]
Text: A.E Dimitra Efxeinoupolis is located in Greece where the Euro is used as currency.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'currency']
Object: ['Greece', 'Euro']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ currency __object__ Euro']]
Text: The A.E Dimitra Efxeinoupolis club is located in Greece where the Euro is used as currency.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'currency']
Object: ['Greece', 'Euro']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ demonym __object__ Greeks']]
Text: A.E Dimitra Efxeinoupolis is located in Greece, where the Greeks live.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'demonym']
Object: ['Greece', 'Greeks']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ demonym __object__ Greeks']]
Text: The A.E Dimitra Efxeinoupolis club is located in Greece where the locals are called Greeks.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'demonym']
Object: ['Greece', 'Greeks']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ demonym __object__ Greeks']]
Text: The A.E Dimitra Efxeinoupolis club is located in Greece, inhabited by Greeks.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'demonym']
Object: ['Greece', 'Greeks']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ language __object__ Greek language']]
Text: A.E Dimitra Efxeinoupolis is located in Greece where the language is Greek.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'language']
Object: ['Greece', 'Greek language']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ language __object__ Greek language']]
Text: The A.E Dimitra Efxeinoupolis club is located in Greece, the country where the language they speak is Greek.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'language']
Object: ['Greece', 'Greek language']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ language __object__ Greek language']]
Text: The A.E Dimitra Efxeinoupolis club is located in Greece, where Greek is spoken.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'language']
Object: ['Greece', 'Greek language']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ leader __object__ Alexis Tsipras']]
Text: A.E Dimitra Efxeinoupolis is located in Greece which is headed by Alexis Tsipras.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'leader']
Object: ['Greece', 'Alexis Tsipras']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ leader __object__ Alexis Tsipras']]
Text: The A.E Dimitra Efxeinoupolis club is located in Greece, where the leader is Alexis Tsipras.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'leader']
Object: ['Greece', 'Alexis Tsipras']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ leader __object__ Alexis Tsipras']]
Text: A.E Dimitra Efxeinoupolis is located in Greece, where the leader is Alexis Tsipras.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'leader']
Object: ['Greece', 'Alexis Tsipras']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ leader __object__ Nikos Voutsis']]
Text: A.E Dimitra Efxeinoupolis is located in Greece, the leader of which is Nikos Voutsis.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'leader']
Object: ['Greece', 'Nikos Voutsis']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ leader __object__ Nikos Voutsis']]
Text: The A.E Dimitra Efxeinoupolis club is located in Greece, and a Greek leader is Nikos Voutsis.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'leader']
Object: ['Greece', 'Nikos Voutsis']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ leader __object__ Nikos Voutsis']]
Text: A.E. Dimitra Efxeinoupolis is located in Greece where the leader is Nikos Voutsis.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'leader']
Object: ['Greece', 'Nikos Voutsis']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ leader __object__ Prokopis Pavlopoulos']]
Text: The A.E Dimitra Efxeinoupolis club is located in Greece where Prokopis Pavlopoulos is a leader.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'leader']
Object: ['Greece', 'Prokopis Pavlopoulos']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ leader __object__ Prokopis Pavlopoulos']]
Text: The A.E Dimitra Efxeinoupolis club is located in Greece, where Prokopis Pavlopoulos is a leader.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'leader']
Object: ['Greece', 'Prokopis Pavlopoulos']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece', '__subject__ Greece __predicate__ leader __object__ Prokopis Pavlopoulos']]
Text: The A.E Dimitra Efxeinoupolis club is located in Greece, where the leader is Prokopis Pavlopoulos.
Subject: ['A.E Dimitra Efxeinoupolis', 'Greece']
Predicate: ['location', 'leader']
Object: ['Greece', 'Prokopis Pavlopoulos']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ numberOfMembers __object__ 1500', '__subject__ A.E Dimitra Efxeinoupolis __predicate__ ground __object__ Efxeinoupoli']]
Text: AE Dimitra Efxeinoupolis has 1500 members and its ground is located in the town of Efxeinoupoli.
Subject: ['A.E Dimitra Efxeinoupolis', 'A.E Dimitra Efxeinoupolis']
Predicate: ['numberOfMembers', 'ground']
Object: ['1500', 'Efxeinoupoli']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ numberOfMembers __object__ 1500', '__subject__ A.E Dimitra Efxeinoupolis __predicate__ ground __object__ Efxeinoupoli']]
Text: A.E Dimitra Efxeinoupolis is located in the town of Efxeinoupoli and has 1500 members.
Subject: ['A.E Dimitra Efxeinoupolis', 'A.E Dimitra Efxeinoupolis']
Predicate: ['numberOfMembers', 'ground']
Object: ['1500', 'Efxeinoupoli']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ numberOfMembers __object__ 1500', '__subject__ A.E Dimitra Efxeinoupolis __predicate__ ground __object__ Efxeinoupoli']]
Text: A.E. Dimitra Efxeinoupolis has 1500 members and its ground is located in the town of Efxeinoupoli.
Subject: ['A.E Dimitra Efxeinoupolis', 'A.E Dimitra Efxeinoupolis']
Predicate: ['numberOfMembers', 'ground']
Object: ['1500', 'Efxeinoupoli']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ numberOfMembers __object__ 1500', '__subject__ A.E Dimitra Efxeinoupolis __predicate__ season __object__ 2014']]
Text: A.E. Dimitra Efxeinoupolis has 1500 members and played in season 2015.
Subject: ['A.E Dimitra Efxeinoupolis', 'A.E Dimitra Efxeinoupolis']
Predicate: ['numberOfMembers', 'season']
Object: ['1500', '2014']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ numberOfMembers __object__ 1500', '__subject__ A.E Dimitra Efxeinoupolis __predicate__ season __object__ 2014']]
Text: A.E. Dimitra Efxeinoupolis has 1500 members and they were in the 2014 season.
Subject: ['A.E Dimitra Efxeinoupolis', 'A.E Dimitra Efxeinoupolis']
Predicate: ['numberOfMembers', 'season']
Object: ['1500', '2014']

Triple: [['__subject__ A.E Dimitra Efxeinoupolis __predicate__ numberOfMembers __object__ 1500', '__subject__ A.E Dimitra Efxeinoupolis __predicate__ season __object__ 2014']]
Text: A.E Dimitra Efxeinoupolis participated in the 2014 season. It has 1500 members.
Subject: ['A.E Dimitra Efxeinoupolis', 'A.E Dimitra Efxeinoupolis']
Predicate: ['numberOfMembers', 'season']
Object: ['1500', '2014']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ ground __object__ Jepson Way,', '__subject__ A.F.C. Blackpool __predicate__ numberOfMembers __object__ 1500']]
Text: A.F.C. Blackpool has 1500 members and play at their ground, Jepson Way.
Subject: ['A.F.C. Blackpool', 'A.F.C. Blackpool']
Predicate: ['ground', 'numberOfMembers']
Object: ['Jepson Way,', '1500']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ ground __object__ Jepson Way,', '__subject__ A.F.C. Blackpool __predicate__ numberOfMembers __object__ 1500']]
Text: AFC Blackpool has 1500 members and its grounds are called Jepson Way.
Subject: ['A.F.C. Blackpool', 'A.F.C. Blackpool']
Predicate: ['ground', 'numberOfMembers']
Object: ['Jepson Way,', '1500']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ ground __object__ Jepson Way,', '__subject__ A.F.C. Blackpool __predicate__ numberOfMembers __object__ 1500']]
Text: A.F.C. Blackpool has its grounds at Jepson Way and has 1500 members.
Subject: ['A.F.C. Blackpool', 'A.F.C. Blackpool']
Predicate: ['ground', 'numberOfMembers']
Object: ['Jepson Way,', '1500']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ ground __object__ The Mechanics,', '__subject__ A.F.C. Blackpool __predicate__ numberOfMembers __object__ 1500']]
Text: A.F.C. Blackpool's play area is The Mechanics. It has 1500 members.
Subject: ['A.F.C. Blackpool', 'A.F.C. Blackpool']
Predicate: ['ground', 'numberOfMembers']
Object: ['The Mechanics,', '1500']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ ground __object__ The Mechanics,', '__subject__ A.F.C. Blackpool __predicate__ numberOfMembers __object__ 1500']]
Text: A.F.C. Blackpool has 1500 members and their ground is The Mechanics.
Subject: ['A.F.C. Blackpool', 'A.F.C. Blackpool']
Predicate: ['ground', 'numberOfMembers']
Object: ['The Mechanics,', '1500']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ ground __object__ Blackpool', '__subject__ A.F.C. Blackpool __predicate__ league __object__ English football league system']]
Text: A.F.C. Blackpool, is in Blackpool, and play in the English Football League.
Subject: ['A.F.C. Blackpool', 'A.F.C. Blackpool']
Predicate: ['ground', 'league']
Object: ['Blackpool', 'English football league system']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ ground __object__ Blackpool', '__subject__ A.F.C. Blackpool __predicate__ league __object__ English football league system']]
Text: AFC Blackpool ground is located in Blackpool and they play in the English Football League.
Subject: ['A.F.C. Blackpool', 'A.F.C. Blackpool']
Predicate: ['ground', 'league']
Object: ['Blackpool', 'English football league system']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ ground __object__ Blackpool', '__subject__ A.F.C. Blackpool __predicate__ league __object__ English football league system']]
Text: English Football League club AFC Blackpool's ground is in Blackpool.
Subject: ['A.F.C. Blackpool', 'A.F.C. Blackpool']
Predicate: ['ground', 'league']
Object: ['Blackpool', 'English football league system']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ ground __object__ Blackpool', '__subject__ A.F.C. Blackpool __predicate__ league __object__ North West Counties Football League']]
Text: A.F.C. Blackpool play at their ground in Blackpool and is part of the North West Counties Football League.
Subject: ['A.F.C. Blackpool', 'A.F.C. Blackpool']
Predicate: ['ground', 'league']
Object: ['Blackpool', 'North West Counties Football League']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ ground __object__ Blackpool', '__subject__ A.F.C. Blackpool __predicate__ league __object__ North West Counties Football League']]
Text: AFC Blackpool, whose ground is located in Blackpool, plays in the North West Counties Football League.
Subject: ['A.F.C. Blackpool', 'A.F.C. Blackpool']
Predicate: ['ground', 'league']
Object: ['Blackpool', 'North West Counties Football League']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ ground __object__ Blackpool', '__subject__ A.F.C. Blackpool __predicate__ league __object__ North West Counties Football League']]
Text: AFC Blackpool (the grounds of which are in Blackpool), play in the North West Counties Football League.
Subject: ['A.F.C. Blackpool', 'A.F.C. Blackpool']
Predicate: ['ground', 'league']
Object: ['Blackpool', 'North West Counties Football League']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ ground __object__ Blackpool', '__subject__ A.F.C. Blackpool __predicate__ numberOfMembers __object__ 1500']]
Text: AFC Blackpool have 1500 members and the ground is located in Blackpool.
Subject: ['A.F.C. Blackpool', 'A.F.C. Blackpool']
Predicate: ['ground', 'numberOfMembers']
Object: ['Blackpool', '1500']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ ground __object__ Blackpool', '__subject__ A.F.C. Blackpool __predicate__ numberOfMembers __object__ 1500']]
Text: AFC Blackpool have 1500 members and their ground is located in Blackpool.
Subject: ['A.F.C. Blackpool', 'A.F.C. Blackpool']
Predicate: ['ground', 'numberOfMembers']
Object: ['Blackpool', '1500']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ ground __object__ Blackpool', '__subject__ A.F.C. Blackpool __predicate__ numberOfMembers __object__ 1500']]
Text: AFC Blackpool is located in Blackpool and has 1500 members.
Subject: ['A.F.C. Blackpool', 'A.F.C. Blackpool']
Predicate: ['ground', 'numberOfMembers']
Object: ['Blackpool', '1500']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)', '__subject__ Stuart Parker (footballer) __predicate__ club __object__ Blackpool F.C.']]
Text: Stuart Parker is manager at A.F.C. Blackpool and plays for Blackpool F.C.
Subject: ['A.F.C. Blackpool', 'Stuart Parker (footballer)']
Predicate: ['manager', 'club']
Object: ['Stuart Parker (footballer)', 'Blackpool F.C.']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)', '__subject__ Stuart Parker (footballer) __predicate__ club __object__ Blackpool F.C.']]
Text: Stuart Parker, who once managed AFC Blackpool, plays for Blackpool F.C.
Subject: ['A.F.C. Blackpool', 'Stuart Parker (footballer)']
Predicate: ['manager', 'club']
Object: ['Stuart Parker (footballer)', 'Blackpool F.C.']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)', '__subject__ Stuart Parker (footballer) __predicate__ club __object__ Blackpool F.C.']]
Text: The manager of A.F.C. Blackpool is Stuart Parker (footballer) who plays for Blackpool F.C.
Subject: ['A.F.C. Blackpool', 'Stuart Parker (footballer)']
Predicate: ['manager', 'club']
Object: ['Stuart Parker (footballer)', 'Blackpool F.C.']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)', '__subject__ Stuart Parker (footballer) __predicate__ club __object__ Bury F.C.']]
Text: The manager of A.F.C. Blackpool is Stuart Parker, who played football for Bury FC.
Subject: ['A.F.C. Blackpool', 'Stuart Parker (footballer)']
Predicate: ['manager', 'club']
Object: ['Stuart Parker (footballer)', 'Bury F.C.']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)', '__subject__ Stuart Parker (footballer) __predicate__ club __object__ Bury F.C.']]
Text: The manager of A.F.C. Blackpool is Stuart Parker (footballer) who plays for the Bury FC.
Subject: ['A.F.C. Blackpool', 'Stuart Parker (footballer)']
Predicate: ['manager', 'club']
Object: ['Stuart Parker (footballer)', 'Bury F.C.']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)', '__subject__ Stuart Parker (footballer) __predicate__ club __object__ Bury F.C.']]
Text: AFC Blackpool have had Stuart Parker as their manager who played football for Bury FC.
Subject: ['A.F.C. Blackpool', 'Stuart Parker (footballer)']
Predicate: ['manager', 'club']
Object: ['Stuart Parker (footballer)', 'Bury F.C.']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)', '__subject__ Stuart Parker (footballer) __predicate__ club __object__ Chesterfield F.C.']]
Text: The footballer Stuart Parker is attached to Chesterfield football club and has been manager at AFC Blackpool.
Subject: ['A.F.C. Blackpool', 'Stuart Parker (footballer)']
Predicate: ['manager', 'club']
Object: ['Stuart Parker (footballer)', 'Chesterfield F.C.']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)', '__subject__ Stuart Parker (footballer) __predicate__ club __object__ Chesterfield F.C.']]
Text: Footballer Stuart Parker is the manager of A.F.C. Blackpool and he is also attached to Chesterfield football club.
Subject: ['A.F.C. Blackpool', 'Stuart Parker (footballer)']
Predicate: ['manager', 'club']
Object: ['Stuart Parker (footballer)', 'Chesterfield F.C.']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)', '__subject__ Stuart Parker (footballer) __predicate__ club __object__ Chesterfield F.C.']]
Text: The manager of A.F.C. Blackpool is Stuart Parker, who is a member of the Chesterfield F.C.
Subject: ['A.F.C. Blackpool', 'Stuart Parker (footballer)']
Predicate: ['manager', 'club']
Object: ['Stuart Parker (footballer)', 'Chesterfield F.C.']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)', '__subject__ Stuart Parker (footballer) __predicate__ club __object__ Drogheda United F.C.']]
Text: AFC Blackpool have had Stuart Parker as their manager who also played football at Drogheda United FC.
Subject: ['A.F.C. Blackpool', 'Stuart Parker (footballer)']
Predicate: ['manager', 'club']
Object: ['Stuart Parker (footballer)', 'Drogheda United F.C.']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)', '__subject__ Stuart Parker (footballer) __predicate__ club __object__ Drogheda United F.C.']]
Text: The manager of A.F.C. Blackpool is Stuart Parker (footballer) who was at Drogheda United FC.
Subject: ['A.F.C. Blackpool', 'Stuart Parker (footballer)']
Predicate: ['manager', 'club']
Object: ['Stuart Parker (footballer)', 'Drogheda United F.C.']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)', '__subject__ Stuart Parker (footballer) __predicate__ club __object__ Drogheda United F.C.']]
Text: Stuart Parker, is a footballer with the Drogheda United F.C. and has been the manager of AFC Blackpool.
Subject: ['A.F.C. Blackpool', 'Stuart Parker (footballer)']
Predicate: ['manager', 'club']
Object: ['Stuart Parker (footballer)', 'Drogheda United F.C.']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)', '__subject__ Stuart Parker (footballer) __predicate__ club __object__ KV Mechelen']]
Text: Stuart Parker, who has managed AFC Blackpool, has represented the club KV Mechelen.
Subject: ['A.F.C. Blackpool', 'Stuart Parker (footballer)']
Predicate: ['manager', 'club']
Object: ['Stuart Parker (footballer)', 'KV Mechelen']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)', '__subject__ Stuart Parker (footballer) __predicate__ club __object__ Stockport County F.C.']]
Text: Stuart Parker, who plays football for Stockport County F.C. and has been manager for AFC Blackpool.
Subject: ['A.F.C. Blackpool', 'Stuart Parker (footballer)']
Predicate: ['manager', 'club']
Object: ['Stuart Parker (footballer)', 'Stockport County F.C.']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)', '__subject__ Stuart Parker (footballer) __predicate__ club __object__ Stockport County F.C.']]
Text: AFC Blackpool have had as their manager, Stuart Parker, whose football club was Stockport County F.C.
Subject: ['A.F.C. Blackpool', 'Stuart Parker (footballer)']
Predicate: ['manager', 'club']
Object: ['Stuart Parker (footballer)', 'Stockport County F.C.']

Triple: [['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)', '__subject__ Stuart Parker (footballer) __predicate__ club __object__ Stockport County F.C.']]
Text: The manager of A.F.C. Blackpool is Stuart Parker (footballer) who plays for Stockport County F.C.
Subject: ['A.F.C. Blackpool', 'Stuart Parker (footballer)']
Predicate: ['manager', 'club']
Object: ['Stuart Parker (footballer)', 'Stockport County F.C.']

Triple: [['__subject__ A.F.C. Fylde __predicate__ ground __object__ Kellamergh Park', '__subject__ A.F.C. Fylde __predicate__ numberOfMembers __object__ 3180']]
Text: A.F.C. Fylde's ground is Kellamergh Park and the club has 3180 members.
Subject: ['A.F.C. Fylde', 'A.F.C. Fylde']
Predicate: ['ground', 'numberOfMembers']
Object: ['Kellamergh Park', '3180']

Triple: [['__subject__ A.F.C. Fylde __predicate__ ground __object__ Kellamergh Park', '__subject__ A.F.C. Fylde __predicate__ numberOfMembers __object__ 3180']]
Text: AFC Fylde has the ground Kellamergh Park and also has 3180 members.
Subject: ['A.F.C. Fylde', 'A.F.C. Fylde']
Predicate: ['ground', 'numberOfMembers']
Object: ['Kellamergh Park', '3180']

Triple: [['__subject__ A.F.C. Fylde __predicate__ ground __object__ Kellamergh Park', '__subject__ A.F.C. Fylde __predicate__ numberOfMembers __object__ 3180']]
Text: A.F.C. Fylde, has 3180 members and its ground is Kellamergh Park.
Subject: ['A.F.C. Fylde', 'A.F.C. Fylde']
Predicate: ['ground', 'numberOfMembers']
Object: ['Kellamergh Park', '3180']

Triple: [['__subject__ A.F.C. Fylde __predicate__ ground __object__ Warton, Fylde, Lancashire', '__subject__ A.F.C. Fylde __predicate__ numberOfMembers __object__ 3180']]
Text: A.F.C. Fylde's ground is in Warton, Fylde, Lancashire and the club has 3180 members.
Subject: ['A.F.C. Fylde', 'A.F.C. Fylde']
Predicate: ['ground', 'numberOfMembers']
Object: ['Warton, Fylde, Lancashire', '3180']

Triple: [['__subject__ A.F.C. Fylde __predicate__ ground __object__ Warton, Fylde, Lancashire', '__subject__ A.F.C. Fylde __predicate__ numberOfMembers __object__ 3180']]
Text: A.F.C. Fylde have 3180 members and are based at Warton, Fylde, Lancashire.
Subject: ['A.F.C. Fylde', 'A.F.C. Fylde']
Predicate: ['ground', 'numberOfMembers']
Object: ['Warton, Fylde, Lancashire', '3180']

Triple: [['__subject__ A.F.C. Fylde __predicate__ ground __object__ Warton, Fylde, Lancashire', '__subject__ A.F.C. Fylde __predicate__ numberOfMembers __object__ 3180']]
Text: A.F.C. Fylde are based at Warton, Fylde, Lancashire and has 3180 members.
Subject: ['A.F.C. Fylde', 'A.F.C. Fylde']
Predicate: ['ground', 'numberOfMembers']
Object: ['Warton, Fylde, Lancashire', '3180']

Triple: [['__subject__ A.F.C. Fylde __predicate__ ground __object__ Warton, Fylde', '__subject__ A.F.C. Fylde __predicate__ numberOfMembers __object__ 3180']]
Text: AFC Fylde's ground is located in Warton, Fylde and they have 3180 members.
Subject: ['A.F.C. Fylde', 'A.F.C. Fylde']
Predicate: ['ground', 'numberOfMembers']
Object: ['Warton, Fylde', '3180']

Triple: [['__subject__ A.F.C. Fylde __predicate__ ground __object__ Warton, Fylde', '__subject__ A.F.C. Fylde __predicate__ numberOfMembers __object__ 3180']]
Text: A.F.C. Fylde ground is Warton Fylde and it has 3180 members.
Subject: ['A.F.C. Fylde', 'A.F.C. Fylde']
Predicate: ['ground', 'numberOfMembers']
Object: ['Warton, Fylde', '3180']

Triple: [['__subject__ A.F.C. Fylde __predicate__ ground __object__ Warton, Fylde', '__subject__ A.F.C. Fylde __predicate__ numberOfMembers __object__ 3180']]
Text: A.F.C. Fylde has 3180 members and their ground is Warton Fylde.
Subject: ['A.F.C. Fylde', 'A.F.C. Fylde']
Predicate: ['ground', 'numberOfMembers']
Object: ['Warton, Fylde', '3180']

Triple: [['__subject__ A.F.C. Fylde __predicate__ manager __object__ Dave Challinor', '__subject__ Dave Challinor __predicate__ club __object__ Bury F.C.']]
Text: AFC Fylde's manager is Dave Challinor who once played for Bury F.C.
Subject: ['A.F.C. Fylde', 'Dave Challinor']
Predicate: ['manager', 'club']
Object: ['Dave Challinor', 'Bury F.C.']

Triple: [['__subject__ A.F.C. Fylde __predicate__ manager __object__ Dave Challinor', '__subject__ Dave Challinor __predicate__ club __object__ Bury F.C.']]
Text: AFC Fylde's manager is Dave Challinor who used to play football for Bury FC.
Subject: ['A.F.C. Fylde', 'Dave Challinor']
Predicate: ['manager', 'club']
Object: ['Dave Challinor', 'Bury F.C.']

Triple: [['__subject__ A.F.C. Fylde __predicate__ manager __object__ Dave Challinor', '__subject__ Dave Challinor __predicate__ club __object__ Bury F.C.']]
Text: Dave Challinor, who played football for Bury FC., is the manager of AFC Fylde.
Subject: ['A.F.C. Fylde', 'Dave Challinor']
Predicate: ['manager', 'club']
Object: ['Dave Challinor', 'Bury F.C.']

Triple: [['__subject__ A.F.C. Fylde __predicate__ manager __object__ Dave Challinor', '__subject__ Dave Challinor __predicate__ club __object__ Colwyn Bay F.C.']]
Text: Dave Challinor is at Colwyn Bay FC and is the manager of AFC Fylde.
Subject: ['A.F.C. Fylde', 'Dave Challinor']
Predicate: ['manager', 'club']
Object: ['Dave Challinor', 'Colwyn Bay F.C.']

Triple: [['__subject__ A.F.C. Fylde __predicate__ manager __object__ Dave Challinor', '__subject__ Dave Challinor __predicate__ club __object__ Colwyn Bay F.C.']]
Text: Dave Challinor manages A.F.C. Fylde and also plays for Colwyn Bay F.C.
Subject: ['A.F.C. Fylde', 'Dave Challinor']
Predicate: ['manager', 'club']
Object: ['Dave Challinor', 'Colwyn Bay F.C.']

Triple: [['__subject__ A.F.C. Fylde __predicate__ manager __object__ Dave Challinor', '__subject__ Dave Challinor __predicate__ club __object__ Colwyn Bay F.C.']]
Text: Dave Challinor, is at Colwyn Bay FC, and manages A.F.C. Fylde.
Subject: ['A.F.C. Fylde', 'Dave Challinor']
Predicate: ['manager', 'club']
Object: ['Dave Challinor', 'Colwyn Bay F.C.']

Triple: [['__subject__ A.F.C. Fylde __predicate__ manager __object__ Dave Challinor', '__subject__ Dave Challinor __predicate__ club __object__ Stockport County F.C.']]
Text: AFC Fylde's manager is Dave Challinor who plays at the Stockport County F.C.
Subject: ['A.F.C. Fylde', 'Dave Challinor']
Predicate: ['manager', 'club']
Object: ['Dave Challinor', 'Stockport County F.C.']

Triple: [['__subject__ A.F.C. Fylde __predicate__ manager __object__ Dave Challinor', '__subject__ Dave Challinor __predicate__ club __object__ Stockport County F.C.']]
Text: Dave Challinor manages A.F.C. Fylde and plays at the Stockport County F.C.
Subject: ['A.F.C. Fylde', 'Dave Challinor']
Predicate: ['manager', 'club']
Object: ['Dave Challinor', 'Stockport County F.C.']

Triple: [['__subject__ A.F.C. Fylde __predicate__ manager __object__ Dave Challinor', '__subject__ Dave Challinor __predicate__ club __object__ Stockport County F.C.']]
Text: Dave Challinor, manager of AFC Fylde, played for Stockport County F.C.
Subject: ['A.F.C. Fylde', 'Dave Challinor']
Predicate: ['manager', 'club']
Object: ['Dave Challinor', 'Stockport County F.C.']

Triple: [['__subject__ A.F.C. Fylde __predicate__ manager __object__ Dave Challinor', '__subject__ Dave Challinor __predicate__ club __object__ Tranmere Rovers F.C.']]
Text: Dave Challinor is the manager of AFC Fylde, and he plays for Tranmere Rovers F.C.
Subject: ['A.F.C. Fylde', 'Dave Challinor']
Predicate: ['manager', 'club']
Object: ['Dave Challinor', 'Tranmere Rovers F.C.']

Triple: [['__subject__ A.F.C. Fylde __predicate__ manager __object__ Dave Challinor', '__subject__ Dave Challinor __predicate__ club __object__ Tranmere Rovers F.C.']]
Text: Affiliated with Tranmere Rovers F.C., Dave Challinor, manages A.F.C. Fylde.
Subject: ['A.F.C. Fylde', 'Dave Challinor']
Predicate: ['manager', 'club']
Object: ['Dave Challinor', 'Tranmere Rovers F.C.']

Triple: [['__subject__ A.F.C. Fylde __predicate__ manager __object__ Dave Challinor', '__subject__ Dave Challinor __predicate__ club __object__ Tranmere Rovers F.C.']]
Text: AFC Fylde's manager is Dave Challinor, who is affiliated with Tranmere Rovers F.C.
Subject: ['A.F.C. Fylde', 'Dave Challinor']
Predicate: ['manager', 'club']
Object: ['Dave Challinor', 'Tranmere Rovers F.C.']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ fullName __object__ Associazione Sportiva Gubbio 1910 Srl', '__subject__ A.S. Gubbio 1910 __predicate__ numberOfMembers __object__ 5300']]
Text: It has 5300 members, and the full name of A.S. Gubbio 1910, is Associazione Sportiva Gubbio 1910 Srl.
Subject: ['A.S. Gubbio 1910', 'A.S. Gubbio 1910']
Predicate: ['fullName', 'numberOfMembers']
Object: ['Associazione Sportiva Gubbio 1910 Srl', '5300']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ fullName __object__ Associazione Sportiva Gubbio 1910 Srl', '__subject__ A.S. Gubbio 1910 __predicate__ numberOfMembers __object__ 5300']]
Text: A.S. Gubbio 1910's full name is Associazione Sportiva Gubbio 1910 Srl. and it has 5300 members.
Subject: ['A.S. Gubbio 1910', 'A.S. Gubbio 1910']
Predicate: ['fullName', 'numberOfMembers']
Object: ['Associazione Sportiva Gubbio 1910 Srl', '5300']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ fullName __object__ Associazione Sportiva Gubbio 1910 Srl', '__subject__ A.S. Gubbio 1910 __predicate__ numberOfMembers __object__ 5300']]
Text: Associazione Sportiva Gubbio 1910 Srl (abbreviated to A.S. Gubbio 1910) has 5300 members.
Subject: ['A.S. Gubbio 1910', 'A.S. Gubbio 1910']
Predicate: ['fullName', 'numberOfMembers']
Object: ['Associazione Sportiva Gubbio 1910 Srl', '5300']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Gubbio', '__subject__ Gubbio __predicate__ leaderParty __object__ Left Ecology Freedom']]
Text: The ground of A.S. Gubbio 1910 is in Gubbio where the Left Ecology Freedom are the leading party.
Subject: ['A.S. Gubbio 1910', 'Gubbio']
Predicate: ['ground', 'leaderParty']
Object: ['Gubbio', 'Left Ecology Freedom']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Gubbio', '__subject__ Gubbio __predicate__ leaderParty __object__ Left Ecology Freedom']]
Text: A.S. Gubbio 1910 has a ground in Gubbio where the Left Ecology Freedom are the leading party.
Subject: ['A.S. Gubbio 1910', 'Gubbio']
Predicate: ['ground', 'leaderParty']
Object: ['Gubbio', 'Left Ecology Freedom']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Gubbio', '__subject__ Gubbio __predicate__ leaderParty __object__ Left Ecology Freedom']]
Text: The ground of A.S. Gubbio 1910 is located in Gubbio, The Left Ecology Freedom are the leading party.
Subject: ['A.S. Gubbio 1910', 'Gubbio']
Predicate: ['ground', 'leaderParty']
Object: ['Gubbio', 'Left Ecology Freedom']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy', '__subject__ A.S. Gubbio 1910 __predicate__ numberOfMembers __object__ 5300']]
Text: A.S. Gubbio 1910 has 5300 members and their ground is located in Italy.
Subject: ['A.S. Gubbio 1910', 'A.S. Gubbio 1910']
Predicate: ['ground', 'numberOfMembers']
Object: ['Italy', '5300']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy', '__subject__ A.S. Gubbio 1910 __predicate__ numberOfMembers __object__ 5300']]
Text: A.S. Gubbio 1910 in Italy has 5300 members.
Subject: ['A.S. Gubbio 1910', 'A.S. Gubbio 1910']
Predicate: ['ground', 'numberOfMembers']
Object: ['Italy', '5300']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy', '__subject__ A.S. Gubbio 1910 __predicate__ numberOfMembers __object__ 5300']]
Text: The ground of A.S. Gubbio 1910 is located in Italy, the team have 5300 members.
Subject: ['A.S. Gubbio 1910', 'A.S. Gubbio 1910']
Predicate: ['ground', 'numberOfMembers']
Object: ['Italy', '5300']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy', '__subject__ Italy __predicate__ language __object__ Italian language']]
Text: The ground of A.S. Gubbio 1910 is located in Italy, where the Italian language is spoken.
Subject: ['A.S. Gubbio 1910', 'Italy']
Predicate: ['ground', 'language']
Object: ['Italy', 'Italian language']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy', '__subject__ Italy __predicate__ language __object__ Italian language']]
Text: The ground of A.S. Gubbio 1910 is located in Italy where the Italian language is spoken.
Subject: ['A.S. Gubbio 1910', 'Italy']
Predicate: ['ground', 'language']
Object: ['Italy', 'Italian language']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Stadio Pietro Barbetti', '__subject__ A.S. Gubbio 1910 __predicate__ numberOfMembers __object__ 5300']]
Text: The ground of AS Gubbio 1910, which has 5300 members, is called Stadio Pietro Barbetti.
Subject: ['A.S. Gubbio 1910', 'A.S. Gubbio 1910']
Predicate: ['ground', 'numberOfMembers']
Object: ['Stadio Pietro Barbetti', '5300']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Stadio Pietro Barbetti', '__subject__ A.S. Gubbio 1910 __predicate__ numberOfMembers __object__ 5300']]
Text: The ground of AS Gubbio 1910 is called Stadio Pietro Barbetti and the club has 5300 members.
Subject: ['A.S. Gubbio 1910', 'A.S. Gubbio 1910']
Predicate: ['ground', 'numberOfMembers']
Object: ['Stadio Pietro Barbetti', '5300']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Stadio Pietro Barbetti', '__subject__ A.S. Gubbio 1910 __predicate__ numberOfMembers __object__ 5300']]
Text: The ground of AS Gubbio 1910 is called Stadio Pietro Barbetti and has the capacity for a crowd of 5300.
Subject: ['A.S. Gubbio 1910', 'A.S. Gubbio 1910']
Predicate: ['ground', 'numberOfMembers']
Object: ['Stadio Pietro Barbetti', '5300']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ league __object__ Serie D', '__subject__ Serie D __predicate__ champions __object__ S.S. Robur Siena']]
Text: The A.S. Gubbio 1910 football club play in Serie D, the champions of which are S.S. Robur Siena.
Subject: ['A.S. Gubbio 1910', 'Serie D']
Predicate: ['league', 'champions']
Object: ['Serie D', 'S.S. Robur Siena']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ league __object__ Serie D', '__subject__ Serie D __predicate__ champions __object__ S.S. Robur Siena']]
Text: A.S. Gubbio 1910 is in the Serie D league whose champions are SS Robur Siena.
Subject: ['A.S. Gubbio 1910', 'Serie D']
Predicate: ['league', 'champions']
Object: ['Serie D', 'S.S. Robur Siena']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ league __object__ Serie D', '__subject__ Serie D __predicate__ champions __object__ S.S. Robur Siena']]
Text: The A.S. Gubbio 1910 football club play in Serie D whose champions include S S Robur Siena.
Subject: ['A.S. Gubbio 1910', 'Serie D']
Predicate: ['league', 'champions']
Object: ['Serie D', 'S.S. Robur Siena']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ season __object__ 2014', '__subject__ A.S. Gubbio 1910 __predicate__ numberOfMembers __object__ 5300']]
Text: The A.S. Gubbio 1910, has 5300 members, and played in the 2014 season.
Subject: ['A.S. Gubbio 1910', 'A.S. Gubbio 1910']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '5300']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ season __object__ 2014', '__subject__ A.S. Gubbio 1910 __predicate__ numberOfMembers __object__ 5300']]
Text: A.S. Gubbio 1910 has 5300 members and played in 2014.
Subject: ['A.S. Gubbio 1910', 'A.S. Gubbio 1910']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '5300']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ season __object__ 2014', '__subject__ A.S. Gubbio 1910 __predicate__ numberOfMembers __object__ 5300']]
Text: AS Gubbio 1910 competed in the 2014 season, they have 5300 members.
Subject: ['A.S. Gubbio 1910', 'A.S. Gubbio 1910']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '5300']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ season __object__ 2014–15 Lega Pro', '__subject__ A.S. Gubbio 1910 __predicate__ numberOfMembers __object__ 5300']]
Text: A.S. Gubbio 1910 has 5300 members and was a part of the 2014–15 Lega Pro season.
Subject: ['A.S. Gubbio 1910', 'A.S. Gubbio 1910']
Predicate: ['season', 'numberOfMembers']
Object: ['2014–15 Lega Pro', '5300']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ season __object__ 2014–15 Lega Pro', '__subject__ A.S. Gubbio 1910 __predicate__ numberOfMembers __object__ 5300']]
Text: A.S. Gubbio 1910 has 5300 members and were in the Lega Pro in the 2014-15 season.
Subject: ['A.S. Gubbio 1910', 'A.S. Gubbio 1910']
Predicate: ['season', 'numberOfMembers']
Object: ['2014–15 Lega Pro', '5300']

Triple: [['__subject__ A.S. Gubbio 1910 __predicate__ season __object__ 2014–15 Lega Pro', '__subject__ A.S. Gubbio 1910 __predicate__ numberOfMembers __object__ 5300']]
Text: A.S. Gubbio 1910 was a part of the 2014–15 Lega Pro season, it has 5300 members.
Subject: ['A.S. Gubbio 1910', 'A.S. Gubbio 1910']
Predicate: ['season', 'numberOfMembers']
Object: ['2014–15 Lega Pro', '5300']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Livorno, Italy', '__subject__ A.S. Livorno Calcio __predicate__ league __object__ Serie B']]
Text: A.S. Livorno Calcio is based in Livorno, Italy and Serie B league.
Subject: ['A.S. Livorno Calcio', 'A.S. Livorno Calcio']
Predicate: ['ground', 'league']
Object: ['Livorno, Italy', 'Serie B']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Livorno, Italy', '__subject__ A.S. Livorno Calcio __predicate__ league __object__ Serie B']]
Text: Livorno, Italy is the location of the ground of AS Livorno Calcio, this club playing in Serie B.
Subject: ['A.S. Livorno Calcio', 'A.S. Livorno Calcio']
Predicate: ['ground', 'league']
Object: ['Livorno, Italy', 'Serie B']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Livorno, Italy', '__subject__ A.S. Livorno Calcio __predicate__ league __object__ Serie B']]
Text: A.S. Livorno Calcio's ground is in Livorno, Italy, and the club plays in Serie B.
Subject: ['A.S. Livorno Calcio', 'A.S. Livorno Calcio']
Predicate: ['ground', 'league']
Object: ['Livorno, Italy', 'Serie B']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Livorno, Italy', '__subject__ A.S. Livorno Calcio __predicate__ numberOfMembers __object__ 19238']]
Text: Based in Livorno, Italy, A.S. Livorno Calcio has 19238 members.
Subject: ['A.S. Livorno Calcio', 'A.S. Livorno Calcio']
Predicate: ['ground', 'numberOfMembers']
Object: ['Livorno, Italy', '19238']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Livorno, Italy', '__subject__ A.S. Livorno Calcio __predicate__ numberOfMembers __object__ 19238']]
Text: Livorno, Italy is the location of the ground of AS Livorno Calcio and has 19238 members.
Subject: ['A.S. Livorno Calcio', 'A.S. Livorno Calcio']
Predicate: ['ground', 'numberOfMembers']
Object: ['Livorno, Italy', '19238']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Livorno, Italy', '__subject__ A.S. Livorno Calcio __predicate__ numberOfMembers __object__ 19238']]
Text: Livorno, Italy is the location of the ground of AS Livorno Calcio, which has 19238 members.
Subject: ['A.S. Livorno Calcio', 'A.S. Livorno Calcio']
Predicate: ['ground', 'numberOfMembers']
Object: ['Livorno, Italy', '19238']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Livorno', '__subject__ A.S. Livorno Calcio __predicate__ numberOfMembers __object__ 19238']]
Text: A.S Livorno Calcio's ground is in Livorno, and it has 19238 members.
Subject: ['A.S. Livorno Calcio', 'A.S. Livorno Calcio']
Predicate: ['ground', 'numberOfMembers']
Object: ['Livorno', '19238']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Livorno', '__subject__ A.S. Livorno Calcio __predicate__ numberOfMembers __object__ 19238']]
Text: A.S Livorno Calcio ground is in Livorno and has 19238 members.
Subject: ['A.S. Livorno Calcio', 'A.S. Livorno Calcio']
Predicate: ['ground', 'numberOfMembers']
Object: ['Livorno', '19238']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Livorno', '__subject__ A.S. Livorno Calcio __predicate__ numberOfMembers __object__ 19238']]
Text: The AS Livorno Calcio has 19238 members and their ground is in Livorno.
Subject: ['A.S. Livorno Calcio', 'A.S. Livorno Calcio']
Predicate: ['ground', 'numberOfMembers']
Object: ['Livorno', '19238']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Stadio Armando Picchi', '__subject__ A.S. Livorno Calcio __predicate__ league __object__ Serie B']]
Text: AS Livorno club plays in Serie B and their home ground is the Stadio Armando Picchi.
Subject: ['A.S. Livorno Calcio', 'A.S. Livorno Calcio']
Predicate: ['ground', 'league']
Object: ['Stadio Armando Picchi', 'Serie B']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Stadio Armando Picchi', '__subject__ A.S. Livorno Calcio __predicate__ league __object__ Serie B']]
Text: A S Livorno Calcio's home ground is the Stadio Armando Picchi, and the league they play in is Serie B.
Subject: ['A.S. Livorno Calcio', 'A.S. Livorno Calcio']
Predicate: ['ground', 'league']
Object: ['Stadio Armando Picchi', 'Serie B']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Stadio Armando Picchi', '__subject__ A.S. Livorno Calcio __predicate__ league __object__ Serie B']]
Text: A.S. Livorno Calcio has the ground Stadio Armando Picchi and play in Serie B.
Subject: ['A.S. Livorno Calcio', 'A.S. Livorno Calcio']
Predicate: ['ground', 'league']
Object: ['Stadio Armando Picchi', 'Serie B']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Stadio Armando Picchi', '__subject__ A.S. Livorno Calcio __predicate__ numberOfMembers __object__ 19238']]
Text: A.S. Livorno Calcio (home ground Stadio Armando Picchi) has 19,238 members.
Subject: ['A.S. Livorno Calcio', 'A.S. Livorno Calcio']
Predicate: ['ground', 'numberOfMembers']
Object: ['Stadio Armando Picchi', '19238']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Stadio Armando Picchi', '__subject__ A.S. Livorno Calcio __predicate__ numberOfMembers __object__ 19238']]
Text: AS Livorno Calcio with 19238 members is in Stadio Armando Picchi.
Subject: ['A.S. Livorno Calcio', 'A.S. Livorno Calcio']
Predicate: ['ground', 'numberOfMembers']
Object: ['Stadio Armando Picchi', '19238']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Stadio Armando Picchi', '__subject__ A.S. Livorno Calcio __predicate__ numberOfMembers __object__ 19238']]
Text: A.S. Livorno Calcio, has 19238 members, and has their home ground at the Stadio Armando Picchi.
Subject: ['A.S. Livorno Calcio', 'A.S. Livorno Calcio']
Predicate: ['ground', 'numberOfMembers']
Object: ['Stadio Armando Picchi', '19238']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ manager __object__ Christian Panucci', '__subject__ Christian Panucci __predicate__ club __object__ Chelsea F.C.']]
Text: A.S. Livorno Calcio is managed by Christian Panucci who has played for Chelsea FC.
Subject: ['A.S. Livorno Calcio', 'Christian Panucci']
Predicate: ['manager', 'club']
Object: ['Christian Panucci', 'Chelsea F.C.']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ manager __object__ Christian Panucci', '__subject__ Christian Panucci __predicate__ club __object__ Chelsea F.C.']]
Text: A.S. Livorno Calcio, are managed by Christian Panucci, who has played for Chelsea FC.
Subject: ['A.S. Livorno Calcio', 'Christian Panucci']
Predicate: ['manager', 'club']
Object: ['Christian Panucci', 'Chelsea F.C.']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ manager __object__ Christian Panucci', '__subject__ Christian Panucci __predicate__ club __object__ Chelsea F.C.']]
Text: Christian Panucci is the manager of A.S. Livorno Calcio and has played for Chelsea FC.
Subject: ['A.S. Livorno Calcio', 'Christian Panucci']
Predicate: ['manager', 'club']
Object: ['Christian Panucci', 'Chelsea F.C.']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ manager __object__ Christian Panucci', '__subject__ Christian Panucci __predicate__ club __object__ Genoa C.F.C.']]
Text: A.S. Livorno Calcio is managed by Christian Panucci who played football for Genoa C.F.C.
Subject: ['A.S. Livorno Calcio', 'Christian Panucci']
Predicate: ['manager', 'club']
Object: ['Christian Panucci', 'Genoa C.F.C.']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ manager __object__ Christian Panucci', '__subject__ Christian Panucci __predicate__ club __object__ Genoa C.F.C.']]
Text: A.S. Livorno Calcio are managed by Christian Panucci who is attached to the club Genoa CFC.
Subject: ['A.S. Livorno Calcio', 'Christian Panucci']
Predicate: ['manager', 'club']
Object: ['Christian Panucci', 'Genoa C.F.C.']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ manager __object__ Christian Panucci', '__subject__ Christian Panucci __predicate__ club __object__ Genoa C.F.C.']]
Text: A.S. Livorno Calcio are managed by Christian Panucci, who played football for Genoa C.F.C.
Subject: ['A.S. Livorno Calcio', 'Christian Panucci']
Predicate: ['manager', 'club']
Object: ['Christian Panucci', 'Genoa C.F.C.']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ manager __object__ Christian Panucci', '__subject__ Christian Panucci __predicate__ club __object__ Inter Milan']]
Text: A.S. Livorno Calcio is managed by Christian Panucci who plays for Inter Milan.
Subject: ['A.S. Livorno Calcio', 'Christian Panucci']
Predicate: ['manager', 'club']
Object: ['Christian Panucci', 'Inter Milan']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ manager __object__ Christian Panucci', '__subject__ Christian Panucci __predicate__ club __object__ Inter Milan']]
Text: A.S. Livorno Calcio are managed by Christian Panucci who played for Inter Milan.
Subject: ['A.S. Livorno Calcio', 'Christian Panucci']
Predicate: ['manager', 'club']
Object: ['Christian Panucci', 'Inter Milan']

Triple: [['__subject__ A.S. Livorno Calcio __predicate__ manager __object__ Christian Panucci', '__subject__ Christian Panucci __predicate__ club __object__ Inter Milan']]
Text: Christian Panucci, manager of A. S. Livorno Calcio, used to play for Inter Milan.
Subject: ['A.S. Livorno Calcio', 'Christian Panucci']
Predicate: ['manager', 'club']
Object: ['Christian Panucci', 'Inter Milan']

Triple: [['__subject__ A.S. Roma __predicate__ chairman __object__ James Pallotta', '__subject__ James Pallotta __predicate__ birthPlace __object__ Boston']]
Text: A.S. Roma's chairman is James Pallotta, who was born in Boston.
Subject: ['A.S. Roma', 'James Pallotta']
Predicate: ['chairman', 'birthPlace']
Object: ['James Pallotta', 'Boston']

Triple: [['__subject__ A.S. Roma __predicate__ chairman __object__ James Pallotta', '__subject__ James Pallotta __predicate__ birthPlace __object__ Boston']]
Text: James Pallotta, who was born in Boston, is the chairman of A.S. Roma.
Subject: ['A.S. Roma', 'James Pallotta']
Predicate: ['chairman', 'birthPlace']
Object: ['James Pallotta', 'Boston']

Triple: [['__subject__ A.S. Roma __predicate__ chairman __object__ James Pallotta', '__subject__ James Pallotta __predicate__ birthPlace __object__ Boston']]
Text: James Pallotta, born in Boston, is the chairman of A.S. Roma.
Subject: ['A.S. Roma', 'James Pallotta']
Predicate: ['chairman', 'birthPlace']
Object: ['James Pallotta', 'Boston']

Triple: [['__subject__ A.S. Roma __predicate__ ground __object__ Rome, Italy', '__subject__ A.S. Roma __predicate__ numberOfMembers __object__ 70634']]
Text: A.S. Roma, which has 70634 members, have their grounds in Rome, Italy.
Subject: ['A.S. Roma', 'A.S. Roma']
Predicate: ['ground', 'numberOfMembers']
Object: ['Rome, Italy', '70634']

Triple: [['__subject__ A.S. Roma __predicate__ ground __object__ Rome, Italy', '__subject__ A.S. Roma __predicate__ numberOfMembers __object__ 70634']]
Text: AS Roma has 70634 members and their ground is in Rome, Italy.
Subject: ['A.S. Roma', 'A.S. Roma']
Predicate: ['ground', 'numberOfMembers']
Object: ['Rome, Italy', '70634']

Triple: [['__subject__ A.S. Roma __predicate__ ground __object__ Rome, Italy', '__subject__ A.S. Roma __predicate__ numberOfMembers __object__ 70634']]
Text: A.S. Roma's ground is in Rome, Italy, the team has 70634 members.
Subject: ['A.S. Roma', 'A.S. Roma']
Predicate: ['ground', 'numberOfMembers']
Object: ['Rome, Italy', '70634']

Triple: [['__subject__ A.S. Roma __predicate__ ground __object__ Stadio Olimpico', '__subject__ A.S. Roma __predicate__ league __object__ Serie A']]
Text: AS Roma, in the Serie A league, has its grounds in Stadio Olimpico.
Subject: ['A.S. Roma', 'A.S. Roma']
Predicate: ['ground', 'league']
Object: ['Stadio Olimpico', 'Serie A']

Triple: [['__subject__ A.S. Roma __predicate__ ground __object__ Stadio Olimpico', '__subject__ A.S. Roma __predicate__ league __object__ Serie A']]
Text: A.S. Roma play in Serie A and their ground is the Stadio Olimpico.
Subject: ['A.S. Roma', 'A.S. Roma']
Predicate: ['ground', 'league']
Object: ['Stadio Olimpico', 'Serie A']

Triple: [['__subject__ A.S. Roma __predicate__ ground __object__ Stadio Olimpico', '__subject__ A.S. Roma __predicate__ league __object__ Serie A']]
Text: A.S Roma's ground is Stadio Olimpico, and they play in the Serie A league.
Subject: ['A.S. Roma', 'A.S. Roma']
Predicate: ['ground', 'league']
Object: ['Stadio Olimpico', 'Serie A']

Triple: [['__subject__ A.S. Roma __predicate__ ground __object__ Stadio Olimpico', '__subject__ A.S. Roma __predicate__ numberOfMembers __object__ 70634']]
Text: A.S Roma ground is Stadio Olimpico and has 70634 members.
Subject: ['A.S. Roma', 'A.S. Roma']
Predicate: ['ground', 'numberOfMembers']
Object: ['Stadio Olimpico', '70634']

Triple: [['__subject__ A.S. Roma __predicate__ ground __object__ Stadio Olimpico', '__subject__ A.S. Roma __predicate__ numberOfMembers __object__ 70634']]
Text: A.S Roma's has 70634 members and its grounds are at Stadio Olimpico.
Subject: ['A.S. Roma', 'A.S. Roma']
Predicate: ['ground', 'numberOfMembers']
Object: ['Stadio Olimpico', '70634']

Triple: [['__subject__ A.S. Roma __predicate__ ground __object__ Stadio Olimpico', '__subject__ A.S. Roma __predicate__ numberOfMembers __object__ 70634']]
Text: A.S Roma has 70634 members and their ground is Stadio Olimpico.
Subject: ['A.S. Roma', 'A.S. Roma']
Predicate: ['ground', 'numberOfMembers']
Object: ['Stadio Olimpico', '70634']

Triple: [['__subject__ A.S. Roma __predicate__ league __object__ Serie A', '__subject__ A.S. Roma __predicate__ ground __object__ Rome']]
Text: AS Roma play in the Serie A league and have a ground in Rome.
Subject: ['A.S. Roma', 'A.S. Roma']
Predicate: ['league', 'ground']
Object: ['Serie A', 'Rome']

Triple: [['__subject__ A.S. Roma __predicate__ league __object__ Serie A', '__subject__ A.S. Roma __predicate__ ground __object__ Rome']]
Text: A.S. Roma play in Serie A and their stadium is in Rome.
Subject: ['A.S. Roma', 'A.S. Roma']
Predicate: ['league', 'ground']
Object: ['Serie A', 'Rome']

Triple: [['__subject__ A.S. Roma __predicate__ league __object__ Serie A', '__subject__ A.S. Roma __predicate__ ground __object__ Rome']]
Text: A.S. Roma play in Serie A and have a ground in Rome.
Subject: ['A.S. Roma', 'A.S. Roma']
Predicate: ['league', 'ground']
Object: ['Serie A', 'Rome']

Triple: [['__subject__ A.S. Roma __predicate__ manager __object__ Luciano Spalletti', '__subject__ Luciano Spalletti __predicate__ club __object__ Virtus Entella']]
Text: Luciano Spalletti, who was at the club Virtus Entella, manages A.S. Roma.
Subject: ['A.S. Roma', 'Luciano Spalletti']
Predicate: ['manager', 'club']
Object: ['Luciano Spalletti', 'Virtus Entella']

Triple: [['__subject__ A.S. Roma __predicate__ manager __object__ Luciano Spalletti', '__subject__ Luciano Spalletti __predicate__ club __object__ Virtus Entella']]
Text: AS Roma's manager is Luciano Spalletti, who plays for Virtus Entella.
Subject: ['A.S. Roma', 'Luciano Spalletti']
Predicate: ['manager', 'club']
Object: ['Luciano Spalletti', 'Virtus Entella']

Triple: [['__subject__ A.S. Roma __predicate__ manager __object__ Luciano Spalletti', '__subject__ Luciano Spalletti __predicate__ club __object__ Virtus Entella']]
Text: The manager of A.S. Roma is Luciano Spalletti, who was at the club Virtus Entella.
Subject: ['A.S. Roma', 'Luciano Spalletti']
Predicate: ['manager', 'club']
Object: ['Luciano Spalletti', 'Virtus Entella']

Triple: [['__subject__ A.S. Roma __predicate__ numberOfMembers __object__ 70634', '__subject__ A.S. Roma __predicate__ ground __object__ Rome']]
Text: AS Roma has 70634 members and their grounds are in Rome.
Subject: ['A.S. Roma', 'A.S. Roma']
Predicate: ['numberOfMembers', 'ground']
Object: ['70634', 'Rome']

Triple: [['__subject__ A.S. Roma __predicate__ numberOfMembers __object__ 70634', '__subject__ A.S. Roma __predicate__ ground __object__ Rome']]
Text: A.S. Roma have a ground in Rome and has 70634 members.
Subject: ['A.S. Roma', 'A.S. Roma']
Predicate: ['numberOfMembers', 'ground']
Object: ['70634', 'Rome']

Triple: [['__subject__ A.S. Roma __predicate__ numberOfMembers __object__ 70634', '__subject__ A.S. Roma __predicate__ ground __object__ Rome']]
Text: A.S. Roma has 70634 members and have a ground in Rome.
Subject: ['A.S. Roma', 'A.S. Roma']
Predicate: ['numberOfMembers', 'ground']
Object: ['70634', 'Rome']

Triple: [['__subject__ ACF Fiorentina __predicate__ manager __object__ Paulo Sousa', '__subject__ Paulo Sousa __predicate__ club __object__ Inter Milan']]
Text: Paulo Sousa, manager of ACF Fiorentina, is attached to club Inter Milan.
Subject: ['ACF Fiorentina', 'Paulo Sousa']
Predicate: ['manager', 'club']
Object: ['Paulo Sousa', 'Inter Milan']

Triple: [['__subject__ ACF Fiorentina __predicate__ manager __object__ Paulo Sousa', '__subject__ Paulo Sousa __predicate__ club __object__ Inter Milan']]
Text: Paulo Sousa is the manager of the ACF Fiorentina, he played at the Inter Milan club.
Subject: ['ACF Fiorentina', 'Paulo Sousa']
Predicate: ['manager', 'club']
Object: ['Paulo Sousa', 'Inter Milan']

Triple: [['__subject__ ACF Fiorentina __predicate__ manager __object__ Paulo Sousa', '__subject__ Paulo Sousa __predicate__ club __object__ Inter Milan']]
Text: The manager of ACF Fiorentina is Paulo Sousa, who plays at the Inter Milan club.
Subject: ['ACF Fiorentina', 'Paulo Sousa']
Predicate: ['manager', 'club']
Object: ['Paulo Sousa', 'Inter Milan']

Triple: [['__subject__ ACF Fiorentina __predicate__ manager __object__ Paulo Sousa', '__subject__ Paulo Sousa __predicate__ club __object__ Portugal national football team']]
Text: The manager, of ACF Fiorentina, is Paulo Sousa, who plays for the Portugal national football team.
Subject: ['ACF Fiorentina', 'Paulo Sousa']
Predicate: ['manager', 'club']
Object: ['Paulo Sousa', 'Portugal national football team']

Triple: [['__subject__ ACF Fiorentina __predicate__ manager __object__ Paulo Sousa', '__subject__ Paulo Sousa __predicate__ club __object__ Portugal national football team']]
Text: Paulo Sousa is a member of the Portugal National Football team and is the manager of ACF Fiorentina.
Subject: ['ACF Fiorentina', 'Paulo Sousa']
Predicate: ['manager', 'club']
Object: ['Paulo Sousa', 'Portugal national football team']

Triple: [['__subject__ ACF Fiorentina __predicate__ manager __object__ Paulo Sousa', '__subject__ Paulo Sousa __predicate__ club __object__ Portugal national football team']]
Text: Paulo Sousa is the manager of the ACF Fiorentina and a member of the Portugal National Football Team.
Subject: ['ACF Fiorentina', 'Paulo Sousa']
Predicate: ['manager', 'club']
Object: ['Paulo Sousa', 'Portugal national football team']

Triple: [['__subject__ ACF Fiorentina __predicate__ numberOfMembers __object__ 47290', '__subject__ ACF Fiorentina __predicate__ season __object__ 2014']]
Text: ACF Fiorentina has 47290 members, The team competed in the 2014 season.
Subject: ['ACF Fiorentina', 'ACF Fiorentina']
Predicate: ['numberOfMembers', 'season']
Object: ['47290', '2014']

Triple: [['__subject__ ACF Fiorentina __predicate__ numberOfMembers __object__ 47290', '__subject__ ACF Fiorentina __predicate__ season __object__ 2014']]
Text: ACF Fiorentina has 47290 members, and they competed in the 2014 season.
Subject: ['ACF Fiorentina', 'ACF Fiorentina']
Predicate: ['numberOfMembers', 'season']
Object: ['47290', '2014']

Triple: [['__subject__ ACF Fiorentina __predicate__ numberOfMembers __object__ 47290', '__subject__ ACF Fiorentina __predicate__ season __object__ 2014']]
Text: ACF Fiorentina competed in the 2014 season and they have 47290 members.
Subject: ['ACF Fiorentina', 'ACF Fiorentina']
Predicate: ['numberOfMembers', 'season']
Object: ['47290', '2014']

Triple: [['__subject__ ACF Fiorentina __predicate__ numberOfMembers __object__ 47290', '__subject__ ACF Fiorentina __predicate__ season __object__ 2014–15 Serie A']]
Text: ACF Fiorentina, have 47290 members, and played the 2014-15 season in Serie A.
Subject: ['ACF Fiorentina', 'ACF Fiorentina']
Predicate: ['numberOfMembers', 'season']
Object: ['47290', '2014–15 Serie A']

Triple: [['__subject__ ACF Fiorentina __predicate__ numberOfMembers __object__ 47290', '__subject__ ACF Fiorentina __predicate__ season __object__ 2014–15 Serie A']]
Text: ACF Fiorentina played the 2014-15 season in Serie A and their ground holds 47290 members.
Subject: ['ACF Fiorentina', 'ACF Fiorentina']
Predicate: ['numberOfMembers', 'season']
Object: ['47290', '2014–15 Serie A']

Triple: [['__subject__ ACF Fiorentina __predicate__ numberOfMembers __object__ 47290', '__subject__ ACF Fiorentina __predicate__ season __object__ 2014–15 Serie A']]
Text: ACF Fiorentina has 47290 members and played in the 2014-15 Serie A season.
Subject: ['ACF Fiorentina', 'ACF Fiorentina']
Predicate: ['numberOfMembers', 'season']
Object: ['47290', '2014–15 Serie A']

Triple: [['__subject__ AEK Athens F.C. __predicate__ ground __object__ Athens', '__subject__ Athens __predicate__ mayor __object__ Giorgos Kaminis']]
Text: AEK Athens F.C.'s ground is in Athens, where the mayor is Giorgos Kaminis.
Subject: ['AEK Athens F.C.', 'Athens']
Predicate: ['ground', 'mayor']
Object: ['Athens', 'Giorgos Kaminis']

Triple: [['__subject__ AEK Athens F.C. __predicate__ ground __object__ Athens', '__subject__ Athens __predicate__ mayor __object__ Giorgos Kaminis']]
Text: Giorgos Kaminis is the mayor of Athens, where AEK Athens F.C's ground is situated.
Subject: ['AEK Athens F.C.', 'Athens']
Predicate: ['ground', 'mayor']
Object: ['Athens', 'Giorgos Kaminis']

Triple: [['__subject__ AEK Athens F.C. __predicate__ ground __object__ Athens', '__subject__ Athens __predicate__ mayor __object__ Giorgos Kaminis']]
Text: AEK Athens F.C.'s ground is in Athens, the mayor of Athens is Giorgos Kaminis.
Subject: ['AEK Athens F.C.', 'Athens']
Predicate: ['ground', 'mayor']
Object: ['Athens', 'Giorgos Kaminis']

Triple: [['__subject__ AEK Athens F.C. __predicate__ ground __object__ Greece', '__subject__ AEK Athens F.C. __predicate__ league __object__ Superleague Greece']]
Text: AEK Athens F.C's grounds are in Greece and obviously they play in the Superleague Greece.
Subject: ['AEK Athens F.C.', 'AEK Athens F.C.']
Predicate: ['ground', 'league']
Object: ['Greece', 'Superleague Greece']

Triple: [['__subject__ AEK Athens F.C. __predicate__ ground __object__ Greece', '__subject__ AEK Athens F.C. __predicate__ league __object__ Superleague Greece']]
Text: AEK Athens F.C. is in the Superleague of Greece, where their ground is located.
Subject: ['AEK Athens F.C.', 'AEK Athens F.C.']
Predicate: ['ground', 'league']
Object: ['Greece', 'Superleague Greece']

Triple: [['__subject__ AEK Athens F.C. __predicate__ ground __object__ Greece', '__subject__ AEK Athens F.C. __predicate__ league __object__ Superleague Greece']]
Text: AEK Athens's ground is in Greece and they compete in the Superleague Greece.
Subject: ['AEK Athens F.C.', 'AEK Athens F.C.']
Predicate: ['ground', 'league']
Object: ['Greece', 'Superleague Greece']

Triple: [['__subject__ AEK Athens F.C. __predicate__ league __object__ Superleague Greece', '__subject__ AEK Athens F.C. __predicate__ ground __object__ Athens']]
Text: AEK Athens FC compete in the Superleague Greece and ground is in Athens.
Subject: ['AEK Athens F.C.', 'AEK Athens F.C.']
Predicate: ['league', 'ground']
Object: ['Superleague Greece', 'Athens']

Triple: [['__subject__ AEK Athens F.C. __predicate__ league __object__ Superleague Greece', '__subject__ AEK Athens F.C. __predicate__ ground __object__ Athens']]
Text: AEK Athens F.C. play in the Superleague Greece, and their ground is in Athens.
Subject: ['AEK Athens F.C.', 'AEK Athens F.C.']
Predicate: ['league', 'ground']
Object: ['Superleague Greece', 'Athens']

Triple: [['__subject__ AEK Athens F.C. __predicate__ league __object__ Superleague Greece', '__subject__ AEK Athens F.C. __predicate__ ground __object__ Athens']]
Text: AEK Athens F.C, member of the Superleague of Greece, has its ground in Athens.
Subject: ['AEK Athens F.C.', 'AEK Athens F.C.']
Predicate: ['league', 'ground']
Object: ['Superleague Greece', 'Athens']

Triple: [['__subject__ AEK Athens F.C. __predicate__ league __object__ Superleague Greece', '__subject__ Superleague Greece __predicate__ champions __object__ Olympiacos F.C.']]
Text: AEK Athens F.C. is in the Superleague of Greece, in which Olympiacos F.C. were past champions.
Subject: ['AEK Athens F.C.', 'Superleague Greece']
Predicate: ['league', 'champions']
Object: ['Superleague Greece', 'Olympiacos F.C.']

Triple: [['__subject__ AEK Athens F.C. __predicate__ league __object__ Superleague Greece', '__subject__ Superleague Greece __predicate__ champions __object__ Olympiacos F.C.']]
Text: AEK Athens F.C. play in the Superleague Greece, the champions of which are, Olympiacos F.C.
Subject: ['AEK Athens F.C.', 'Superleague Greece']
Predicate: ['league', 'champions']
Object: ['Superleague Greece', 'Olympiacos F.C.']

Triple: [['__subject__ AEK Athens F.C. __predicate__ league __object__ Superleague Greece', '__subject__ Superleague Greece __predicate__ champions __object__ Olympiacos F.C.']]
Text: AEK Athens FC compete in the Superleague Greece, Olympiacos FC are previous champions of the team.
Subject: ['AEK Athens F.C.', 'Superleague Greece']
Predicate: ['league', 'champions']
Object: ['Superleague Greece', 'Olympiacos F.C.']

Triple: [['__subject__ AEK Athens F.C. __predicate__ manager __object__ Gus Poyet', '__subject__ Gus Poyet __predicate__ club __object__ Chelsea F.C.']]
Text: Gus Poyet has been the manager of AEK Athens FC and has also been a player for Chelsea F.C.
Subject: ['AEK Athens F.C.', 'Gus Poyet']
Predicate: ['manager', 'club']
Object: ['Gus Poyet', 'Chelsea F.C.']

Triple: [['__subject__ AEK Athens F.C. __predicate__ manager __object__ Gus Poyet', '__subject__ Gus Poyet __predicate__ club __object__ Chelsea F.C.']]
Text: AEK Athens F.C. manager is Gus Poyet who played for Chelsea F.C.
Subject: ['AEK Athens F.C.', 'Gus Poyet']
Predicate: ['manager', 'club']
Object: ['Gus Poyet', 'Chelsea F.C.']

Triple: [['__subject__ AEK Athens F.C. __predicate__ manager __object__ Gus Poyet', '__subject__ Gus Poyet __predicate__ club __object__ Chelsea F.C.']]
Text: AEK Athens are managed by Gus Poyet who played for Chelsea F.C.
Subject: ['AEK Athens F.C.', 'Gus Poyet']
Predicate: ['manager', 'club']
Object: ['Gus Poyet', 'Chelsea F.C.']

Triple: [['__subject__ AEK Athens F.C. __predicate__ manager __object__ Gus Poyet', '__subject__ Gus Poyet __predicate__ club __object__ Real Zaragoza']]
Text: AEK Athens are managed by Gus Poyet who is in the Real Zaragoza club.
Subject: ['AEK Athens F.C.', 'Gus Poyet']
Predicate: ['manager', 'club']
Object: ['Gus Poyet', 'Real Zaragoza']

Triple: [['__subject__ AEK Athens F.C. __predicate__ manager __object__ Gus Poyet', '__subject__ Gus Poyet __predicate__ club __object__ Real Zaragoza']]
Text: AEK Athens F.C. manager is Gus Poyet, who is associated with the Real Zaragoza, a football club.
Subject: ['AEK Athens F.C.', 'Gus Poyet']
Predicate: ['manager', 'club']
Object: ['Gus Poyet', 'Real Zaragoza']

Triple: [['__subject__ AEK Athens F.C. __predicate__ manager __object__ Gus Poyet', '__subject__ Gus Poyet __predicate__ club __object__ Real Zaragoza']]
Text: Gus Poyet is manager of AEK Athens FC and his club is Real Zaragoza.
Subject: ['AEK Athens F.C.', 'Gus Poyet']
Predicate: ['manager', 'club']
Object: ['Gus Poyet', 'Real Zaragoza']

Triple: [['__subject__ AEK Athens F.C. __predicate__ numberOfMembers __object__ 69618', '__subject__ AEK Athens F.C. __predicate__ ground __object__ Olympic Stadium (Athens)']]
Text: The Olympic Stadium (Athens) is the home ground of AEK Athens FC which has 69618 members.
Subject: ['AEK Athens F.C.', 'AEK Athens F.C.']
Predicate: ['numberOfMembers', 'ground']
Object: ['69618', 'Olympic Stadium (Athens)']

Triple: [['__subject__ AEK Athens F.C. __predicate__ numberOfMembers __object__ 69618', '__subject__ AEK Athens F.C. __predicate__ ground __object__ Olympic Stadium (Athens)']]
Text: The ground for AEK Athens F.C., which has 69618 members, is the Olympic Stadium (Athens).
Subject: ['AEK Athens F.C.', 'AEK Athens F.C.']
Predicate: ['numberOfMembers', 'ground']
Object: ['69618', 'Olympic Stadium (Athens)']

Triple: [['__subject__ AEK Athens F.C. __predicate__ numberOfMembers __object__ 69618', '__subject__ AEK Athens F.C. __predicate__ ground __object__ Olympic Stadium (Athens)']]
Text: AEK Athens F.C. has 69618 members and their ground is the Olympic Stadium (Athens).
Subject: ['AEK Athens F.C.', 'AEK Athens F.C.']
Predicate: ['numberOfMembers', 'ground']
Object: ['69618', 'Olympic Stadium (Athens)']

Triple: [['__subject__ AFC Ajax __predicate__ manager __object__ Frank de Boer', '__subject__ Frank de Boer __predicate__ club __object__ Al-Shamal Sports Club']]
Text: The manager of AFC Ajax is Frank de Boer, who played for Al-Shamal Sports Club.
Subject: ['AFC Ajax', 'Frank de Boer']
Predicate: ['manager', 'club']
Object: ['Frank de Boer', 'Al-Shamal Sports Club']

Triple: [['__subject__ AFC Ajax __predicate__ manager __object__ Frank de Boer', '__subject__ Frank de Boer __predicate__ club __object__ Al-Shamal Sports Club']]
Text: Frank de Boer, played for Al-Shamal Sports Club and is the manager of AFC Ajax.
Subject: ['AFC Ajax', 'Frank de Boer']
Predicate: ['manager', 'club']
Object: ['Frank de Boer', 'Al-Shamal Sports Club']

Triple: [['__subject__ AFC Ajax __predicate__ manager __object__ Frank de Boer', '__subject__ Frank de Boer __predicate__ club __object__ Al-Shamal Sports Club']]
Text: Frank de Boer manages the AFC Ajax team and plays for Al-Shamal Sports Club.
Subject: ['AFC Ajax', 'Frank de Boer']
Predicate: ['manager', 'club']
Object: ['Frank de Boer', 'Al-Shamal Sports Club']

Triple: [['__subject__ AFC Ajax __predicate__ manager __object__ Frank de Boer', '__subject__ Frank de Boer __predicate__ club __object__ FC Barcelona']]
Text: The manager of AFC Ajax's manager is Frank de Boer who is also attached to the club FC Barcelona.
Subject: ['AFC Ajax', 'Frank de Boer']
Predicate: ['manager', 'club']
Object: ['Frank de Boer', 'FC Barcelona']

Triple: [['__subject__ AFC Ajax __predicate__ manager __object__ Frank de Boer', '__subject__ Frank de Boer __predicate__ club __object__ FC Barcelona']]
Text: Frank de Boer who once played football for FC Barcelona now manages the AFC Ajax.
Subject: ['AFC Ajax', 'Frank de Boer']
Predicate: ['manager', 'club']
Object: ['Frank de Boer', 'FC Barcelona']

Triple: [['__subject__ AFC Ajax __predicate__ manager __object__ Frank de Boer', '__subject__ Frank de Boer __predicate__ club __object__ FC Barcelona']]
Text: Frank de Boer is attached to the club FC Barcelona and is the manager of AFC Ajax.
Subject: ['AFC Ajax', 'Frank de Boer']
Predicate: ['manager', 'club']
Object: ['Frank de Boer', 'FC Barcelona']

Triple: [['__subject__ AFC Ajax __predicate__ manager __object__ Frank de Boer', '__subject__ Frank de Boer __predicate__ club __object__ Netherlands national football team']]
Text: Frank de Boer played for the Netherlands national football team and manages the AFC Ajax team.
Subject: ['AFC Ajax', 'Frank de Boer']
Predicate: ['manager', 'club']
Object: ['Frank de Boer', 'Netherlands national football team']

Triple: [['__subject__ AFC Ajax __predicate__ manager __object__ Frank de Boer', '__subject__ Frank de Boer __predicate__ club __object__ Netherlands national football team']]
Text: The manager of AFC Ajax is Frank de Boer, who played for the Netherlands national football team.
Subject: ['AFC Ajax', 'Frank de Boer']
Predicate: ['manager', 'club']
Object: ['Frank de Boer', 'Netherlands national football team']

Triple: [['__subject__ AFC Ajax __predicate__ manager __object__ Frank de Boer', '__subject__ Frank de Boer __predicate__ club __object__ Netherlands national football team']]
Text: Frank de Boer, who played for the Netherlands national football team, is the manager of AFC Ajax.
Subject: ['AFC Ajax', 'Frank de Boer']
Predicate: ['manager', 'club']
Object: ['Frank de Boer', 'Netherlands national football team']

Triple: [['__subject__ AFC Ajax __predicate__ numberOfMembers __object__ 53502', '__subject__ AFC Ajax __predicate__ fullName __object__ Amsterdamsche Football Club Ajax']]
Text: AFC stands for AFC Ajax is Amsterdamsche Football Club Ajax. Its current membership is 53502.
Subject: ['AFC Ajax', 'AFC Ajax']
Predicate: ['numberOfMembers', 'fullName']
Object: ['53502', 'Amsterdamsche Football Club Ajax']

Triple: [['__subject__ AFC Ajax __predicate__ numberOfMembers __object__ 53502', '__subject__ AFC Ajax __predicate__ fullName __object__ Amsterdamsche Football Club Ajax']]
Text: AFC Ajax, full name, "Amsterdamsche Football Club Ajax" has 53502 members.
Subject: ['AFC Ajax', 'AFC Ajax']
Predicate: ['numberOfMembers', 'fullName']
Object: ['53502', 'Amsterdamsche Football Club Ajax']

Triple: [['__subject__ AFC Ajax __predicate__ season __object__ 2014', '__subject__ AFC Ajax __predicate__ numberOfMembers __object__ 53502']]
Text: AFC Ajax has 53502 members and they payed in season 2014.
Subject: ['AFC Ajax', 'AFC Ajax']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '53502']

Triple: [['__subject__ AFC Ajax __predicate__ season __object__ 2014', '__subject__ AFC Ajax __predicate__ numberOfMembers __object__ 53502']]
Text: AFC Ajax played in the 2014 season, the team has 53502 members.
Subject: ['AFC Ajax', 'AFC Ajax']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '53502']

Triple: [['__subject__ AFC Ajax __predicate__ season __object__ 2014', '__subject__ AFC Ajax __predicate__ numberOfMembers __object__ 53502']]
Text: AFC Ajax, which has 53502 members, played in the 2014 season.
Subject: ['AFC Ajax', 'AFC Ajax']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '53502']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Amsterdam', '__subject__ Amsterdam __predicate__ part __object__ Amsterdam-Centrum']]
Text: Amsterdam-Centrum is part of Amsterdam where The ground of AFC Ajax (amateurs) is located.
Subject: ['AFC Ajax (amateurs)', 'Amsterdam']
Predicate: ['ground', 'part']
Object: ['Amsterdam', 'Amsterdam-Centrum']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Amsterdam', '__subject__ Amsterdam __predicate__ part __object__ Amsterdam-Centrum']]
Text: Amsterdam-Centrum is part of Amsterdam, the city where AFC Ajax (amateurs) have their ground.
Subject: ['AFC Ajax (amateurs)', 'Amsterdam']
Predicate: ['ground', 'part']
Object: ['Amsterdam', 'Amsterdam-Centrum']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Amsterdam', '__subject__ Amsterdam __predicate__ part __object__ Amsterdam-Centrum']]
Text: Amsterdam-Centrum is part of Amsterdam where AFC Ajax is based.
Subject: ['AFC Ajax (amateurs)', 'Amsterdam']
Predicate: ['ground', 'part']
Object: ['Amsterdam', 'Amsterdam-Centrum']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Amsterdam', '__subject__ Amsterdam __predicate__ part __object__ Amsterdam-Noord']]
Text: Amsterdam-Noord is part of Amsterdam where the ground of AFC Ajax (amateurs) is located.
Subject: ['AFC Ajax (amateurs)', 'Amsterdam']
Predicate: ['ground', 'part']
Object: ['Amsterdam', 'Amsterdam-Noord']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Amsterdam', '__subject__ Amsterdam __predicate__ part __object__ Amsterdam-Noord']]
Text: Amsterdam Noord is part of Amsterdam where the ground of AFC Ajax (amateurs) is located.
Subject: ['AFC Ajax (amateurs)', 'Amsterdam']
Predicate: ['ground', 'part']
Object: ['Amsterdam', 'Amsterdam-Noord']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Amsterdam', '__subject__ Amsterdam __predicate__ part __object__ Amsterdam-Noord']]
Text: Amsterdam Noord is part of Amsterdam where AFC Ajax is based.
Subject: ['AFC Ajax (amateurs)', 'Amsterdam']
Predicate: ['ground', 'part']
Object: ['Amsterdam', 'Amsterdam-Noord']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Sportpark De Toekomst', '__subject__ Sportpark De Toekomst __predicate__ operator __object__ AFC Ajax']]
Text: AFC Ajax (amateurs)'s ground, Sportpark De Toekomst, is operated by AFC Ajax.
Subject: ['AFC Ajax (amateurs)', 'Sportpark De Toekomst']
Predicate: ['ground', 'operator']
Object: ['Sportpark De Toekomst', 'AFC Ajax']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Sportpark De Toekomst', '__subject__ Sportpark De Toekomst __predicate__ operator __object__ AFC Ajax']]
Text: Sportpark De Toekomst is the ground of AFC Ajax (amateurs) and it is operated by AFC Ajax.
Subject: ['AFC Ajax (amateurs)', 'Sportpark De Toekomst']
Predicate: ['ground', 'operator']
Object: ['Sportpark De Toekomst', 'AFC Ajax']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Sportpark De Toekomst', '__subject__ Sportpark De Toekomst __predicate__ operator __object__ AFC Ajax']]
Text: AFC Ajax (amateurs)'s ground is Sportpark De Toekomst, operated by AFC Ajax.
Subject: ['AFC Ajax (amateurs)', 'Sportpark De Toekomst']
Predicate: ['ground', 'operator']
Object: ['Sportpark De Toekomst', 'AFC Ajax']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Sportpark De Toekomst', '__subject__ Sportpark De Toekomst __predicate__ owner __object__ AFC Ajax N.V.']]
Text: AFC Ajax (amateurs)'s ground is Sportpark De Toekomst, which is owned by AFC Ajax N.V.
Subject: ['AFC Ajax (amateurs)', 'Sportpark De Toekomst']
Predicate: ['ground', 'owner']
Object: ['Sportpark De Toekomst', 'AFC Ajax N.V.']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Sportpark De Toekomst', '__subject__ Sportpark De Toekomst __predicate__ owner __object__ AFC Ajax N.V.']]
Text: AFC Ajax (amateurs) ground is Sportpark De Toekomst which is owned by AFC Ajax N.V.
Subject: ['AFC Ajax (amateurs)', 'Sportpark De Toekomst']
Predicate: ['ground', 'owner']
Object: ['Sportpark De Toekomst', 'AFC Ajax N.V.']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Sportpark De Toekomst', '__subject__ Sportpark De Toekomst __predicate__ owner __object__ AFC Ajax N.V.']]
Text: Sportpark De Toekomst belongs to AFC Ajax N.V. and is also used by amateur AFC Ajax.
Subject: ['AFC Ajax (amateurs)', 'Sportpark De Toekomst']
Predicate: ['ground', 'owner']
Object: ['Sportpark De Toekomst', 'AFC Ajax N.V.']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Sportpark De Toekomst', '__subject__ Sportpark De Toekomst __predicate__ tenant __object__ Ajax Youth Academy']]
Text: Ajax Youth Academy is a tenant of Sportpark De Toekomst, the ground of AFC Ajax amateurs.
Subject: ['AFC Ajax (amateurs)', 'Sportpark De Toekomst']
Predicate: ['ground', 'tenant']
Object: ['Sportpark De Toekomst', 'Ajax Youth Academy']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Sportpark De Toekomst', '__subject__ Sportpark De Toekomst __predicate__ tenant __object__ Ajax Youth Academy']]
Text: AFC Ajax (amateurs)'s ground is Sportpark De Toekomst, where Ajax Youth Academy is a tenant.
Subject: ['AFC Ajax (amateurs)', 'Sportpark De Toekomst']
Predicate: ['ground', 'tenant']
Object: ['Sportpark De Toekomst', 'Ajax Youth Academy']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Sportpark De Toekomst', '__subject__ Sportpark De Toekomst __predicate__ tenant __object__ Ajax Youth Academy']]
Text: AFC Ajax (amateurs)'s ground is Sportpark De Toekomst, with Ajax Youth Academy as tenant.
Subject: ['AFC Ajax (amateurs)', 'Sportpark De Toekomst']
Predicate: ['ground', 'tenant']
Object: ['Sportpark De Toekomst', 'Ajax Youth Academy']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ league __object__ Hoofdklasse', '__subject__ AFC Ajax (amateurs) __predicate__ numberOfMembers __object__ 5000']]
Text: AFC Ajax (amateurs), with 5000 members, play in the Hoofdklasse league.
Subject: ['AFC Ajax (amateurs)', 'AFC Ajax (amateurs)']
Predicate: ['league', 'numberOfMembers']
Object: ['Hoofdklasse', '5000']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ league __object__ Hoofdklasse', '__subject__ AFC Ajax (amateurs) __predicate__ numberOfMembers __object__ 5000']]
Text: AFC Ajax, whose amateurs play in the Hoofdklasse league, has 5000 members.
Subject: ['AFC Ajax (amateurs)', 'AFC Ajax (amateurs)']
Predicate: ['league', 'numberOfMembers']
Object: ['Hoofdklasse', '5000']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ league __object__ Hoofdklasse', '__subject__ AFC Ajax (amateurs) __predicate__ numberOfMembers __object__ 5000']]
Text: AFC Ajax (amateurs) play in the Hoofdklasse league and their ground has the capacity for 5000 fans.
Subject: ['AFC Ajax (amateurs)', 'AFC Ajax (amateurs)']
Predicate: ['league', 'numberOfMembers']
Object: ['Hoofdklasse', '5000']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ numberOfMembers __object__ 5000', '__subject__ AFC Ajax (amateurs) __predicate__ fullName __object__ Amsterdamsche Football Club Ajax Amateurs']]
Text: Amsterdamsche Football Club Ajax Amateurs (abbreviated to AFC Ajax (amateurs)) has 5000 members.
Subject: ['AFC Ajax (amateurs)', 'AFC Ajax (amateurs)']
Predicate: ['numberOfMembers', 'fullName']
Object: ['5000', 'Amsterdamsche Football Club Ajax Amateurs']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ numberOfMembers __object__ 5000', '__subject__ AFC Ajax (amateurs) __predicate__ fullName __object__ Amsterdamsche Football Club Ajax Amateurs']]
Text: The full name of AFC Ajax (amateurs) which has 5000 members, is "Amsterdamsche Football Club Ajax Amateurs".
Subject: ['AFC Ajax (amateurs)', 'AFC Ajax (amateurs)']
Predicate: ['numberOfMembers', 'fullName']
Object: ['5000', 'Amsterdamsche Football Club Ajax Amateurs']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ numberOfMembers __object__ 5000', '__subject__ AFC Ajax (amateurs) __predicate__ fullName __object__ Amsterdamsche Football Club Ajax Amateurs']]
Text: The full name of AFC Ajax (amateurs) is Amsterdamsche Football Club Ajax Amateurs and it has 5000 members.
Subject: ['AFC Ajax (amateurs)', 'AFC Ajax (amateurs)']
Predicate: ['numberOfMembers', 'fullName']
Object: ['5000', 'Amsterdamsche Football Club Ajax Amateurs']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ season __object__ 2014', '__subject__ AFC Ajax (amateurs) __predicate__ numberOfMembers __object__ 5000']]
Text: AFC Ajax (amateurs) who have 5000 members played in the 2014 season.
Subject: ['AFC Ajax (amateurs)', 'AFC Ajax (amateurs)']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '5000']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ season __object__ 2014', '__subject__ AFC Ajax (amateurs) __predicate__ numberOfMembers __object__ 5000']]
Text: AFC Ajax (amateurs), who have 5000 members played in the 2014 season.
Subject: ['AFC Ajax (amateurs)', 'AFC Ajax (amateurs)']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '5000']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ season __object__ 2014', '__subject__ AFC Ajax (amateurs) __predicate__ numberOfMembers __object__ 5000']]
Text: AFC Ajax (Amateurs) competed in the 2014 season and it has 5000 members.
Subject: ['AFC Ajax (amateurs)', 'AFC Ajax (amateurs)']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '5000']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ season __object__ 2014–15 Topklasse', '__subject__ AFC Ajax (amateurs) __predicate__ fullName __object__ Amsterdamsche Football Club Ajax Amateurs']]
Text: The Amsterdamsche Football Club Ajax Amateurs is the complete name for the AFC Ajax (amateurs) who played in the Topklasse in the 2014-2015 season.
Subject: ['AFC Ajax (amateurs)', 'AFC Ajax (amateurs)']
Predicate: ['season', 'fullName']
Object: ['2014–15 Topklasse', 'Amsterdamsche Football Club Ajax Amateurs']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ season __object__ 2014–15 Topklasse', '__subject__ AFC Ajax (amateurs) __predicate__ fullName __object__ Amsterdamsche Football Club Ajax Amateurs']]
Text: The AFC Ajax amateurs (Amsterdamsche Football Club Ajax Amateurs) played the 2014-2015 season in the Topklasse.
Subject: ['AFC Ajax (amateurs)', 'AFC Ajax (amateurs)']
Predicate: ['season', 'fullName']
Object: ['2014–15 Topklasse', 'Amsterdamsche Football Club Ajax Amateurs']

Triple: [['__subject__ AFC Ajax (amateurs) __predicate__ season __object__ 2014–15 Topklasse', '__subject__ AFC Ajax (amateurs) __predicate__ fullName __object__ Amsterdamsche Football Club Ajax Amateurs']]
Text: AFC Ajax (amateurs), with full name "Amsterdamsche Football Club Ajax Amateurs", played in the Topklasse in the 2014-2015 season.
Subject: ['AFC Ajax (amateurs)', 'AFC Ajax (amateurs)']
Predicate: ['season', 'fullName']
Object: ['2014–15 Topklasse', 'Amsterdamsche Football Club Ajax Amateurs']

Triple: [['__subject__ AZAL Arena __predicate__ location __object__ Baku', '__subject__ AZAL PFK __predicate__ ground __object__ AZAL Arena']]
Text: AZAL PFK play their home matches at the AZAL Arena which is located in Baku.
Subject: ['AZAL Arena', 'AZAL PFK']
Predicate: ['location', 'ground']
Object: ['Baku', 'AZAL Arena']

Triple: [['__subject__ AZAL Arena __predicate__ location __object__ Baku', '__subject__ AZAL PFK __predicate__ ground __object__ AZAL Arena']]
Text: The AZAL Arena is in Baku and is the ground of AZAL PFK.
Subject: ['AZAL Arena', 'AZAL PFK']
Predicate: ['location', 'ground']
Object: ['Baku', 'AZAL Arena']

Triple: [['__subject__ AZAL Arena __predicate__ location __object__ Baku', '__subject__ AZAL PFK __predicate__ ground __object__ AZAL Arena']]
Text: AZAL Arena, the ground of AZAL PFK, is located in Baku.
Subject: ['AZAL Arena', 'AZAL PFK']
Predicate: ['location', 'ground']
Object: ['Baku', 'AZAL Arena']

Triple: [['__subject__ AZAL PFK __predicate__ ground __object__ AZAL Arena', '__subject__ AZAL Arena __predicate__ location __object__ Azerbaijan']]
Text: AZAL Arena in Azerbaijan is the ground of AZAL PFK.
Subject: ['AZAL PFK', 'AZAL Arena']
Predicate: ['ground', 'location']
Object: ['AZAL Arena', 'Azerbaijan']

Triple: [['__subject__ AZAL PFK __predicate__ ground __object__ AZAL Arena', '__subject__ AZAL Arena __predicate__ location __object__ Azerbaijan']]
Text: AZAL Arena is the ground of AZAL PFK, it is in Azerbaijan.
Subject: ['AZAL PFK', 'AZAL Arena']
Predicate: ['ground', 'location']
Object: ['AZAL Arena', 'Azerbaijan']

Triple: [['__subject__ AZAL PFK __predicate__ ground __object__ AZAL Arena', '__subject__ AZAL Arena __predicate__ location __object__ Azerbaijan']]
Text: AZAL PFK play their home matches at the AZAL Arena in Azerbaijan.
Subject: ['AZAL PFK', 'AZAL Arena']
Predicate: ['ground', 'location']
Object: ['AZAL Arena', 'Azerbaijan']

Triple: [['__subject__ AZAL PFK __predicate__ league __object__ Azerbaijan Premier League', '__subject__ AZAL PFK __predicate__ ground __object__ AZAL Arena']]
Text: AZAL Arena is the ground of AZAL PFK who play in the Azerbaijan Premier League.
Subject: ['AZAL PFK', 'AZAL PFK']
Predicate: ['league', 'ground']
Object: ['Azerbaijan Premier League', 'AZAL Arena']

Triple: [['__subject__ AZAL PFK __predicate__ league __object__ Azerbaijan Premier League', '__subject__ AZAL PFK __predicate__ ground __object__ AZAL Arena']]
Text: The AZAL PFK competes in The Azerbaijan Premier League and play their home matches at the AZAL Arena.
Subject: ['AZAL PFK', 'AZAL PFK']
Predicate: ['league', 'ground']
Object: ['Azerbaijan Premier League', 'AZAL Arena']

Triple: [['__subject__ AZAL PFK __predicate__ league __object__ Azerbaijan Premier League', '__subject__ AZAL PFK __predicate__ ground __object__ AZAL Arena']]
Text: AZAL PFK, in the Azerbaijan Premier League, play their home games at the AZAL Arena.
Subject: ['AZAL PFK', 'AZAL PFK']
Predicate: ['league', 'ground']
Object: ['Azerbaijan Premier League', 'AZAL Arena']

Triple: [['__subject__ AZAL PFK __predicate__ league __object__ Azerbaijan Premier League', '__subject__ Azerbaijan Premier League __predicate__ champions __object__ Qarabağ FK']]
Text: The AZAL PFK competes in The Azerbaijan Premier League where the championship is held by Qarabag FK.
Subject: ['AZAL PFK', 'Azerbaijan Premier League']
Predicate: ['league', 'champions']
Object: ['Azerbaijan Premier League', 'Qarabağ FK']

Triple: [['__subject__ AZAL PFK __predicate__ league __object__ Azerbaijan Premier League', '__subject__ Azerbaijan Premier League __predicate__ champions __object__ Qarabağ FK']]
Text: AZAL PFK play in the Azerbaijan Premier League where the champions are Qarabag FK.
Subject: ['AZAL PFK', 'Azerbaijan Premier League']
Predicate: ['league', 'champions']
Object: ['Azerbaijan Premier League', 'Qarabağ FK']

Triple: [['__subject__ AZAL PFK __predicate__ league __object__ Azerbaijan Premier League', '__subject__ Azerbaijan Premier League __predicate__ champions __object__ Qarabağ FK']]
Text: Although AZAL PFK is in the Azerbaijan Premier League, Qarabag FK are the champions.
Subject: ['AZAL PFK', 'Azerbaijan Premier League']
Predicate: ['league', 'champions']
Object: ['Azerbaijan Premier League', 'Qarabağ FK']

Triple: [['__subject__ AZAL PFK __predicate__ numberOfMembers __object__ 3500', '__subject__ AZAL PFK __predicate__ season __object__ 2014']]
Text: There are 3500 members of AZAL PFK who are in season 2014.
Subject: ['AZAL PFK', 'AZAL PFK']
Predicate: ['numberOfMembers', 'season']
Object: ['3500', '2014']

Triple: [['__subject__ AZAL PFK __predicate__ numberOfMembers __object__ 3500', '__subject__ AZAL PFK __predicate__ season __object__ 2014']]
Text: AZAL PFK has 3500 members and competed in the 2014season.
Subject: ['AZAL PFK', 'AZAL PFK']
Predicate: ['numberOfMembers', 'season']
Object: ['3500', '2014']

Triple: [['__subject__ AZAL PFK __predicate__ numberOfMembers __object__ 3500', '__subject__ AZAL PFK __predicate__ season __object__ 2014']]
Text: Azal Pfk are in season 2014, and have 3500 members.
Subject: ['AZAL PFK', 'AZAL PFK']
Predicate: ['numberOfMembers', 'season']
Object: ['3500', '2014']

Triple: [['__subject__ AZAL PFK __predicate__ season __object__ 2014–15 Azerbaijan Premier League', '__subject__ AZAL PFK __predicate__ numberOfMembers __object__ 3500']]
Text: AZAL PFK Bakou which has 3500 members is playing in the Azerbaijan Premier League, 2014–15.
Subject: ['AZAL PFK', 'AZAL PFK']
Predicate: ['season', 'numberOfMembers']
Object: ['2014–15 Azerbaijan Premier League', '3500']

Triple: [['__subject__ AZAL PFK __predicate__ season __object__ 2014–15 Azerbaijan Premier League', '__subject__ AZAL PFK __predicate__ numberOfMembers __object__ 3500']]
Text: AZAL PFK Bakou, whose ground has a capacity of 3500, played in the Azerbaijan Premier League, 2014–15.
Subject: ['AZAL PFK', 'AZAL PFK']
Predicate: ['season', 'numberOfMembers']
Object: ['2014–15 Azerbaijan Premier League', '3500']

Triple: [['__subject__ AZAL PFK __predicate__ season __object__ 2014–15 Azerbaijan Premier League', '__subject__ AZAL PFK __predicate__ numberOfMembers __object__ 3500']]
Text: AZAL PFK were in the Azerbaijan Premier League in 2014-15 and have 3500 members.
Subject: ['AZAL PFK', 'AZAL PFK']
Predicate: ['season', 'numberOfMembers']
Object: ['2014–15 Azerbaijan Premier League', '3500']

Triple: [['__subject__ AZ Alkmaar __predicate__ ground __object__ AFAS Stadion', '__subject__ AZ Alkmaar __predicate__ numberOfMembers __object__ 17023']]
Text: AZ Alkmaar's ground is the AFAS Stadion and it has 17023 members.
Subject: ['AZ Alkmaar', 'AZ Alkmaar']
Predicate: ['ground', 'numberOfMembers']
Object: ['AFAS Stadion', '17023']

Triple: [['__subject__ AZ Alkmaar __predicate__ ground __object__ AFAS Stadion', '__subject__ AZ Alkmaar __predicate__ numberOfMembers __object__ 17023']]
Text: AZ Alkmaar has 17023 members and its ground is the AFAS Stadion.
Subject: ['AZ Alkmaar', 'AZ Alkmaar']
Predicate: ['ground', 'numberOfMembers']
Object: ['AFAS Stadion', '17023']

Triple: [['__subject__ AZ Alkmaar __predicate__ ground __object__ AFAS Stadion', '__subject__ AZ Alkmaar __predicate__ numberOfMembers __object__ 17023']]
Text: AZ Alkmaar has has 17023 members and their ground is the AFAS Stadion.
Subject: ['AZ Alkmaar', 'AZ Alkmaar']
Predicate: ['ground', 'numberOfMembers']
Object: ['AFAS Stadion', '17023']

Triple: [['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom', '__subject__ John van den Brom __predicate__ club __object__ AFC Ajax']]
Text: John van den Brom plays for AFC Ajax and has previously been the manager for AZ Alkmaar.
Subject: ['AZ Alkmaar', 'John van den Brom']
Predicate: ['manager', 'club']
Object: ['John van den Brom', 'AFC Ajax']

Triple: [['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom', '__subject__ John van den Brom __predicate__ club __object__ AFC Ajax']]
Text: John van den Brom plays for AFC Ajax and manages AZ Alkmaar.
Subject: ['AZ Alkmaar', 'John van den Brom']
Predicate: ['manager', 'club']
Object: ['John van den Brom', 'AFC Ajax']

Triple: [['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom', '__subject__ John van den Brom __predicate__ club __object__ AFC Ajax']]
Text: John van den Brom manages the AZ Alkmaar and plays for AFC Ajax.
Subject: ['AZ Alkmaar', 'John van den Brom']
Predicate: ['manager', 'club']
Object: ['John van den Brom', 'AFC Ajax']

Triple: [['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom', '__subject__ John van den Brom __predicate__ club __object__ De Graafschap']]
Text: John van den Brom has been manager of AZ Alkmaar, Brom also plays for De Graafschap.
Subject: ['AZ Alkmaar', 'John van den Brom']
Predicate: ['manager', 'club']
Object: ['John van den Brom', 'De Graafschap']

Triple: [['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom', '__subject__ John van den Brom __predicate__ club __object__ De Graafschap']]
Text: John van den Brom plays for De Graafschap and manages AZ Alkmaar.
Subject: ['AZ Alkmaar', 'John van den Brom']
Predicate: ['manager', 'club']
Object: ['John van den Brom', 'De Graafschap']

Triple: [['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom', '__subject__ John van den Brom __predicate__ club __object__ De Graafschap']]
Text: John van den Brom, manager of AZ Alkmaar, plays for De Graafschap.
Subject: ['AZ Alkmaar', 'John van den Brom']
Predicate: ['manager', 'club']
Object: ['John van den Brom', 'De Graafschap']

Triple: [['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom', '__subject__ John van den Brom __predicate__ club __object__ Netherlands national football team']]
Text: John van den Brom played for the Netherlands national football team and is the manager of AZ Alkmaar.
Subject: ['AZ Alkmaar', 'John van den Brom']
Predicate: ['manager', 'club']
Object: ['John van den Brom', 'Netherlands national football team']

Triple: [['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom', '__subject__ John van den Brom __predicate__ club __object__ Netherlands national football team']]
Text: John van den Brom played for the Netherlands national football team but now manages the AZ Alkmaar.
Subject: ['AZ Alkmaar', 'John van den Brom']
Predicate: ['manager', 'club']
Object: ['John van den Brom', 'Netherlands national football team']

Triple: [['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom', '__subject__ John van den Brom __predicate__ club __object__ Vitesse Arnhem']]
Text: John van den Brom, who managed AZ Alkmaar, plays for Vitesse Arnhem.
Subject: ['AZ Alkmaar', 'John van den Brom']
Predicate: ['manager', 'club']
Object: ['John van den Brom', 'Vitesse Arnhem']

Triple: [['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom', '__subject__ John van den Brom __predicate__ club __object__ Vitesse Arnhem']]
Text: John van den Brom, who plays for Vitesse Arnhem, is the manager of AZ Alkmaar.
Subject: ['AZ Alkmaar', 'John van den Brom']
Predicate: ['manager', 'club']
Object: ['John van den Brom', 'Vitesse Arnhem']

Triple: [['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom', '__subject__ John van den Brom __predicate__ club __object__ Vitesse Arnhem']]
Text: John van den Brom, manager of AZ Alkmaar, is in Vitesse Arnhem.
Subject: ['AZ Alkmaar', 'John van den Brom']
Predicate: ['manager', 'club']
Object: ['John van den Brom', 'Vitesse Arnhem']

Triple: [['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom', '__subject__ John van den Brom __predicate__ club __object__ İstanbulspor A.Ş.']]
Text: John van den Brom has been manager of AZ Alkmaar and is a player in İstanbulspor A.Ş.
Subject: ['AZ Alkmaar', 'John van den Brom']
Predicate: ['manager', 'club']
Object: ['John van den Brom', 'İstanbulspor A.Ş.']

Triple: [['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom', '__subject__ John van den Brom __predicate__ club __object__ İstanbulspor A.Ş.']]
Text: John van den Brom plays in İstanbulspor A.Ş. He manages AZ Alkmaar.
Subject: ['AZ Alkmaar', 'John van den Brom']
Predicate: ['manager', 'club']
Object: ['John van den Brom', 'İstanbulspor A.Ş.']

Triple: [['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom', '__subject__ John van den Brom __predicate__ club __object__ İstanbulspor A.Ş.']]
Text: John van den Brom, who manages the AZ Alkmaar, plays for Istanbulspor A.S.
Subject: ['AZ Alkmaar', 'John van den Brom']
Predicate: ['manager', 'club']
Object: ['John van den Brom', 'İstanbulspor A.Ş.']

Triple: [['__subject__ AZ Alkmaar __predicate__ numberOfMembers __object__ 17023', '__subject__ AZ Alkmaar __predicate__ season __object__ 2014–15 Eredivisie']]
Text: AZ Alkmaar has 17023 members and played in the Eredivisie 2014-15.
Subject: ['AZ Alkmaar', 'AZ Alkmaar']
Predicate: ['numberOfMembers', 'season']
Object: ['17023', '2014–15 Eredivisie']

Triple: [['__subject__ AZ Alkmaar __predicate__ numberOfMembers __object__ 17023', '__subject__ AZ Alkmaar __predicate__ season __object__ 2014–15 Eredivisie']]
Text: AZ Alkmaar has 17023 members and played in the Eredivisie in 2014-15.
Subject: ['AZ Alkmaar', 'AZ Alkmaar']
Predicate: ['numberOfMembers', 'season']
Object: ['17023', '2014–15 Eredivisie']

Triple: [['__subject__ AZ Alkmaar __predicate__ numberOfMembers __object__ 17023', '__subject__ AZ Alkmaar __predicate__ season __object__ 2014–15 Eredivisie']]
Text: AZ Alkmaar, which has 17023 members, played in the Eredivisie in 2014-15.
Subject: ['AZ Alkmaar', 'AZ Alkmaar']
Predicate: ['numberOfMembers', 'season']
Object: ['17023', '2014–15 Eredivisie']

Triple: [['__subject__ AZ Alkmaar __predicate__ owner __object__ Max Huiberts', '__subject__ AZ Alkmaar __predicate__ numberOfMembers __object__ 17023']]
Text: Max Huiberts is the owner of AZ Alkmaar, which has 17023 members.
Subject: ['AZ Alkmaar', 'AZ Alkmaar']
Predicate: ['owner', 'numberOfMembers']
Object: ['Max Huiberts', '17023']

Triple: [['__subject__ AZ Alkmaar __predicate__ owner __object__ Max Huiberts', '__subject__ AZ Alkmaar __predicate__ numberOfMembers __object__ 17023']]
Text: Max Huiberts owns AZ Alkmaar which has 17023 members.
Subject: ['AZ Alkmaar', 'AZ Alkmaar']
Predicate: ['owner', 'numberOfMembers']
Object: ['Max Huiberts', '17023']

Triple: [['__subject__ AZ Alkmaar __predicate__ owner __object__ Max Huiberts', '__subject__ AZ Alkmaar __predicate__ numberOfMembers __object__ 17023']]
Text: Owned by Max Huiberts, club AZ Alkmaar is the club of 17023 members.
Subject: ['AZ Alkmaar', 'AZ Alkmaar']
Predicate: ['owner', 'numberOfMembers']
Object: ['Max Huiberts', '17023']

Triple: [['__subject__ AZ Alkmaar __predicate__ season __object__ 2014', '__subject__ AZ Alkmaar __predicate__ numberOfMembers __object__ 17023']]
Text: AZ Alkmaar has 17023 members and played in the 2014 season.
Subject: ['AZ Alkmaar', 'AZ Alkmaar']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '17023']

Triple: [['__subject__ AZ Alkmaar __predicate__ season __object__ 2014', '__subject__ AZ Alkmaar __predicate__ numberOfMembers __object__ 17023']]
Text: AZ Alkmaar, who has 17023 members, played in the 2014 season.
Subject: ['AZ Alkmaar', 'AZ Alkmaar']
Predicate: ['season', 'numberOfMembers']
Object: ['2014', '17023']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ ground __object__ Estádio Municipal Coaracy da Mata Fonseca', '__subject__ Estádio Municipal Coaracy da Mata Fonseca __predicate__ location __object__ Alagoas']]
Text: Agremiacao Sportiva Arapiraquense's ground is the Estadio Municipal Coaracy da Mata Fonseca in Alagoas.
Subject: ['Agremiação Sportiva Arapiraquense', 'Estádio Municipal Coaracy da Mata Fonseca']
Predicate: ['ground', 'location']
Object: ['Estádio Municipal Coaracy da Mata Fonseca', 'Alagoas']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ ground __object__ Estádio Municipal Coaracy da Mata Fonseca', '__subject__ Estádio Municipal Coaracy da Mata Fonseca __predicate__ location __object__ Alagoas']]
Text: Agremiacao Sportiva Arapiraquense's ground is Estadio Municipal Coaracy da Mata Fonseca. It is located in Alagoas.
Subject: ['Agremiação Sportiva Arapiraquense', 'Estádio Municipal Coaracy da Mata Fonseca']
Predicate: ['ground', 'location']
Object: ['Estádio Municipal Coaracy da Mata Fonseca', 'Alagoas']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ ground __object__ Estádio Municipal Coaracy da Mata Fonseca', '__subject__ Estádio Municipal Coaracy da Mata Fonseca __predicate__ location __object__ Alagoas']]
Text: Estadio Municipal Coaracy da Mata Fonseca is the name of the ground of Agremiacao Sportiva Arapiraquense and is located in Alagoas.
Subject: ['Agremiação Sportiva Arapiraquense', 'Estádio Municipal Coaracy da Mata Fonseca']
Predicate: ['ground', 'location']
Object: ['Estádio Municipal Coaracy da Mata Fonseca', 'Alagoas']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ ground __object__ Estádio Municipal Coaracy da Mata Fonseca', '__subject__ Estádio Municipal Coaracy da Mata Fonseca __predicate__ location __object__ Arapiraca']]
Text: Agremiacao Sportiva Arapiraquense's ground is the Estadio Municipal Coaracy da Mata Fonseca located in Arapiraca.
Subject: ['Agremiação Sportiva Arapiraquense', 'Estádio Municipal Coaracy da Mata Fonseca']
Predicate: ['ground', 'location']
Object: ['Estádio Municipal Coaracy da Mata Fonseca', 'Arapiraca']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ ground __object__ Estádio Municipal Coaracy da Mata Fonseca', '__subject__ Estádio Municipal Coaracy da Mata Fonseca __predicate__ location __object__ Arapiraca']]
Text: Estadio Municipal Coaracy da Mata Fonseca is the name of the ground of Agremiacao Sportiva Arapiraquense and is located in Arapiraca.
Subject: ['Agremiação Sportiva Arapiraquense', 'Estádio Municipal Coaracy da Mata Fonseca']
Predicate: ['ground', 'location']
Object: ['Estádio Municipal Coaracy da Mata Fonseca', 'Arapiraca']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ ground __object__ Estádio Municipal Coaracy da Mata Fonseca', '__subject__ Estádio Municipal Coaracy da Mata Fonseca __predicate__ location __object__ Arapiraca']]
Text: Agremiacao Sportiva Arapiraquense's ground is the Estadio Municipal Coaracy da Mata Fonseca, which is in Arapiraca.
Subject: ['Agremiação Sportiva Arapiraquense', 'Estádio Municipal Coaracy da Mata Fonseca']
Predicate: ['ground', 'location']
Object: ['Estádio Municipal Coaracy da Mata Fonseca', 'Arapiraca']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ league __object__ Campeonato Brasileiro Série C', '__subject__ Campeonato Brasileiro Série C __predicate__ champions __object__ Vila Nova Futebol Clube']]
Text: Vila Nova Futebol Clube have been champions of Campeonato Brasileiro Série C and Agremiação Sportiva Arapiraquense also play in this league.
Subject: ['Agremiação Sportiva Arapiraquense', 'Campeonato Brasileiro Série C']
Predicate: ['league', 'champions']
Object: ['Campeonato Brasileiro Série C', 'Vila Nova Futebol Clube']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ league __object__ Campeonato Brasileiro Série C', '__subject__ Campeonato Brasileiro Série C __predicate__ champions __object__ Vila Nova Futebol Clube']]
Text: The champions of Campeonato Brasileiro Serie C are Vila Nova Futebol Clube. The Agremiacao Sportiva Arapiraquense also play in this league.
Subject: ['Agremiação Sportiva Arapiraquense', 'Campeonato Brasileiro Série C']
Predicate: ['league', 'champions']
Object: ['Campeonato Brasileiro Série C', 'Vila Nova Futebol Clube']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ league __object__ Campeonato Brasileiro Série C', '__subject__ Campeonato Brasileiro Série C __predicate__ champions __object__ Vila Nova Futebol Clube']]
Text: Agremiação Sportiva Arapiraquense play in the Campeonato Brasileiro Série C league, The Vila Nova Futebol Clube were champions at the league.
Subject: ['Agremiação Sportiva Arapiraquense', 'Campeonato Brasileiro Série C']
Predicate: ['league', 'champions']
Object: ['Campeonato Brasileiro Série C', 'Vila Nova Futebol Clube']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ league __object__ Campeonato Brasileiro Série C', '__subject__ Campeonato Brasileiro Série C __predicate__ country __object__ Brazil']]
Text: Agremiação Sportiva Arapiraquense play in the Campeonato Brasileiro Série C league which is based in Brazil.
Subject: ['Agremiação Sportiva Arapiraquense', 'Campeonato Brasileiro Série C']
Predicate: ['league', 'country']
Object: ['Campeonato Brasileiro Série C', 'Brazil']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ league __object__ Campeonato Brasileiro Série C', '__subject__ Campeonato Brasileiro Série C __predicate__ country __object__ Brazil']]
Text: Agremiação Sportiva Arapiraquense play in the Campeonato Brasileiro Série C league, which is based in Brazil.
Subject: ['Agremiação Sportiva Arapiraquense', 'Campeonato Brasileiro Série C']
Predicate: ['league', 'country']
Object: ['Campeonato Brasileiro Série C', 'Brazil']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ league __object__ Campeonato Brasileiro Série C', '__subject__ Campeonato Brasileiro Série C __predicate__ country __object__ Brazil']]
Text: Agremiação Sportiva Arapiraquense play in the Campeonato Brasileiro Série C league which is from Brazil.
Subject: ['Agremiação Sportiva Arapiraquense', 'Campeonato Brasileiro Série C']
Predicate: ['league', 'country']
Object: ['Campeonato Brasileiro Série C', 'Brazil']

Triple: [["__subject__ Agremiação Sportiva Arapiraquense __predicate__ nickname __object__ ''Alvinegro", '__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000']]
Text: Agremiacao Sportiva Arapiraquense has 17000 members and are nicknamed Alvinegro.
Subject: ['Agremiação Sportiva Arapiraquense', 'Agremiação Sportiva Arapiraquense']
Predicate: ['nickname', 'numberOfMembers']
Object: ["''Alvinegro", '17000']

Triple: [["__subject__ Agremiação Sportiva Arapiraquense __predicate__ nickname __object__ ''Alvinegro", '__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000']]
Text: Agremiacao Sportiva Arapiraquense, nicknamed Alvinegro, has 17000 members.
Subject: ['Agremiação Sportiva Arapiraquense', 'Agremiação Sportiva Arapiraquense']
Predicate: ['nickname', 'numberOfMembers']
Object: ["''Alvinegro", '17000']

Triple: [["__subject__ Agremiação Sportiva Arapiraquense __predicate__ nickname __object__ ''Alvinegro", '__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000']]
Text: Alvinegro is the nickname of Agremiação Sportiva Arapiraquense which has 17000 members.
Subject: ['Agremiação Sportiva Arapiraquense', 'Agremiação Sportiva Arapiraquense']
Predicate: ['nickname', 'numberOfMembers']
Object: ["''Alvinegro", '17000']

Triple: [["__subject__ Agremiação Sportiva Arapiraquense __predicate__ nickname __object__ Asa Gigante ''", '__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000']]
Text: Agremiacao Sportiva Arapiraquense which has 17000 members and the nickname Asa Gigante.
Subject: ['Agremiação Sportiva Arapiraquense', 'Agremiação Sportiva Arapiraquense']
Predicate: ['nickname', 'numberOfMembers']
Object: ["Asa Gigante ''", '17000']

Triple: [["__subject__ Agremiação Sportiva Arapiraquense __predicate__ nickname __object__ Asa Gigante ''", '__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000']]
Text: Agremiação Sportiva Arapiraquense's nickname is Asa Gigante, and has 17000 members.
Subject: ['Agremiação Sportiva Arapiraquense', 'Agremiação Sportiva Arapiraquense']
Predicate: ['nickname', 'numberOfMembers']
Object: ["Asa Gigante ''", '17000']

Triple: [["__subject__ Agremiação Sportiva Arapiraquense __predicate__ nickname __object__ Asa Gigante ''", '__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000']]
Text: Agremiação Sportiva Arapiraquense has a nickname of Asa Gigante and contains 17000 members.
Subject: ['Agremiação Sportiva Arapiraquense', 'Agremiação Sportiva Arapiraquense']
Predicate: ['nickname', 'numberOfMembers']
Object: ["Asa Gigante ''", '17000']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000', '__subject__ Agremiação Sportiva Arapiraquense __predicate__ manager __object__ Vica']]
Text: Agremiação Sportiva Arapiraquense, managed by Vica, has 17000 members.
Subject: ['Agremiação Sportiva Arapiraquense', 'Agremiação Sportiva Arapiraquense']
Predicate: ['numberOfMembers', 'manager']
Object: ['17000', 'Vica']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000', '__subject__ Agremiação Sportiva Arapiraquense __predicate__ manager __object__ Vica']]
Text: Agremiação Sportiva Arapiraquense club has 17000 members and are managed by Vica.
Subject: ['Agremiação Sportiva Arapiraquense', 'Agremiação Sportiva Arapiraquense']
Predicate: ['numberOfMembers', 'manager']
Object: ['17000', 'Vica']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000', '__subject__ Agremiação Sportiva Arapiraquense __predicate__ manager __object__ Vica']]
Text: Agremiacao Sportiva Arapiraquense, who are managed by Vica, has 17,000 members.
Subject: ['Agremiação Sportiva Arapiraquense', 'Agremiação Sportiva Arapiraquense']
Predicate: ['numberOfMembers', 'manager']
Object: ['17000', 'Vica']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ season __object__ 2015', '__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000']]
Text: Agremiação Sportiva Arapiraquense played in the 2015 season and has 17000 members.
Subject: ['Agremiação Sportiva Arapiraquense', 'Agremiação Sportiva Arapiraquense']
Predicate: ['season', 'numberOfMembers']
Object: ['2015', '17000']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ season __object__ 2015', '__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000']]
Text: Agremiação Sportiva Arapiraquense has 17000 members and play in 2015.
Subject: ['Agremiação Sportiva Arapiraquense', 'Agremiação Sportiva Arapiraquense']
Predicate: ['season', 'numberOfMembers']
Object: ['2015', '17000']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ season __object__ 2015', '__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000']]
Text: Agremiação Sportiva Arapiraquense which has 17000 members played in the 2015 season.
Subject: ['Agremiação Sportiva Arapiraquense', 'Agremiação Sportiva Arapiraquense']
Predicate: ['season', 'numberOfMembers']
Object: ['2015', '17000']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ season __object__ 2015 Campeonato Brasileiro Série C', '__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000']]
Text: Agremiacao Sportiva Arapiraquense were in Campeonato Brasileiro Serie C in 2015, and they have 17000 members.
Subject: ['Agremiação Sportiva Arapiraquense', 'Agremiação Sportiva Arapiraquense']
Predicate: ['season', 'numberOfMembers']
Object: ['2015 Campeonato Brasileiro Série C', '17000']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ season __object__ 2015 Campeonato Brasileiro Série C', '__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000']]
Text: Agremiacao Sportiva Arapiraquense has 17000 members and they were in the Campeonato Brasileiro Serie C in 2015.
Subject: ['Agremiação Sportiva Arapiraquense', 'Agremiação Sportiva Arapiraquense']
Predicate: ['season', 'numberOfMembers']
Object: ['2015 Campeonato Brasileiro Série C', '17000']

Triple: [['__subject__ Agremiação Sportiva Arapiraquense __predicate__ season __object__ 2015 Campeonato Brasileiro Série C', '__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000']]
Text: Agremiacao Sportiva Arapiraquense have 17000 members and were in Campeonato Brasileiro Serie C in 2015.
Subject: ['Agremiação Sportiva Arapiraquense', 'Agremiação Sportiva Arapiraquense']
Predicate: ['season', 'numberOfMembers']
Object: ['2015 Campeonato Brasileiro Série C', '17000']

Triple: [['__subject__ Akron Summit Assault __predicate__ chairman __object__ Dave Laughlin', '__subject__ Akron Summit Assault __predicate__ numberOfMembers __object__ 3000']]
Text: Akron Summit Assault has 3000 members and their chairman is Dave Laughlin.
Subject: ['Akron Summit Assault', 'Akron Summit Assault']
Predicate: ['chairman', 'numberOfMembers']
Object: ['Dave Laughlin', '3000']

Triple: [['__subject__ Akron Summit Assault __predicate__ chairman __object__ Dave Laughlin', '__subject__ Akron Summit Assault __predicate__ numberOfMembers __object__ 3000']]
Text: Akron Summit Assault has got 3000 members and the chairman is Dave Laughlin.
Subject: ['Akron Summit Assault', 'Akron Summit Assault']
Predicate: ['chairman', 'numberOfMembers']
Object: ['Dave Laughlin', '3000']

Triple: [['__subject__ Akron Summit Assault __predicate__ chairman __object__ Dave Laughlin', '__subject__ Akron Summit Assault __predicate__ numberOfMembers __object__ 3000']]
Text: Akrons Summit Assault has 3000 members and the chairman is Dave Laughlin.
Subject: ['Akron Summit Assault', 'Akron Summit Assault']
Predicate: ['chairman', 'numberOfMembers']
Object: ['Dave Laughlin', '3000']

Triple: [['__subject__ Akron Summit Assault __predicate__ ground __object__ St. Vincent–St. Mary High School', '__subject__ St. Vincent–St. Mary High School __predicate__ city __object__ Akron, Ohio']]
Text: The ground of Akron Summit Assault is in St Vincent St Mary High School of Akron, Ohio.
Subject: ['Akron Summit Assault', 'St. Vincent–St. Mary High School']
Predicate: ['ground', 'city']
Object: ['St. Vincent–St. Mary High School', 'Akron, Ohio']

Triple: [['__subject__ Akron Summit Assault __predicate__ ground __object__ St. Vincent–St. Mary High School', '__subject__ St. Vincent–St. Mary High School __predicate__ city __object__ Akron, Ohio']]
Text: Akron Summit Assault's ground is St. Vincent-St. Mary High School, which is located in the city of Akron, Ohio.
Subject: ['Akron Summit Assault', 'St. Vincent–St. Mary High School']
Predicate: ['ground', 'city']
Object: ['St. Vincent–St. Mary High School', 'Akron, Ohio']

Triple: [['__subject__ Akron Summit Assault __predicate__ ground __object__ St. Vincent–St. Mary High School', '__subject__ St. Vincent–St. Mary High School __predicate__ city __object__ Akron, Ohio']]
Text: St. Vincent-St Mary High School in Akron, Ohio is where Akron Summit Assault is located.
Subject: ['Akron Summit Assault', 'St. Vincent–St. Mary High School']
Predicate: ['ground', 'city']
Object: ['St. Vincent–St. Mary High School', 'Akron, Ohio']

Triple: [['__subject__ Akron Summit Assault __predicate__ ground __object__ St. Vincent–St. Mary High School', '__subject__ St. Vincent–St. Mary High School __predicate__ country __object__ United States']]
Text: Akron Summit Assault's ground is St. Vincent-St. Mary High School in the United States.
Subject: ['Akron Summit Assault', 'St. Vincent–St. Mary High School']
Predicate: ['ground', 'country']
Object: ['St. Vincent–St. Mary High School', 'United States']

Triple: [['__subject__ Akron Summit Assault __predicate__ ground __object__ St. Vincent–St. Mary High School', '__subject__ St. Vincent–St. Mary High School __predicate__ country __object__ United States']]
Text: St Vincent-St Mary High School is the ground of Akron Summit Assault and is located in United States.
Subject: ['Akron Summit Assault', 'St. Vincent–St. Mary High School']
Predicate: ['ground', 'country']
Object: ['St. Vincent–St. Mary High School', 'United States']

Triple: [['__subject__ Akron Summit Assault __predicate__ ground __object__ St. Vincent–St. Mary High School', '__subject__ St. Vincent–St. Mary High School __predicate__ country __object__ United States']]
Text: St. Vincent-St. Mary High School in the United States is the ground of Akron Summit Assault.
Subject: ['Akron Summit Assault', 'St. Vincent–St. Mary High School']
Predicate: ['ground', 'country']
Object: ['St. Vincent–St. Mary High School', 'United States']

Triple: [['__subject__ Akron Summit Assault __predicate__ ground __object__ St. Vincent–St. Mary High School', '__subject__ St. Vincent–St. Mary High School __predicate__ state __object__ Ohio']]
Text: St Vincent-St Mary High School in Ohio is the ground of Akron Summit Assault.
Subject: ['Akron Summit Assault', 'St. Vincent–St. Mary High School']
Predicate: ['ground', 'state']
Object: ['St. Vincent–St. Mary High School', 'Ohio']

Triple: [['__subject__ Akron Summit Assault __predicate__ ground __object__ St. Vincent–St. Mary High School', '__subject__ St. Vincent–St. Mary High School __predicate__ state __object__ Ohio']]
Text: St Vincent-St Mary High School, located in the state of Ohio, is the ground of Akron Summit Assault.
Subject: ['Akron Summit Assault', 'St. Vincent–St. Mary High School']
Predicate: ['ground', 'state']
Object: ['St. Vincent–St. Mary High School', 'Ohio']

Triple: [['__subject__ Akron Summit Assault __predicate__ ground __object__ St. Vincent–St. Mary High School', '__subject__ St. Vincent–St. Mary High School __predicate__ state __object__ Ohio']]
Text: St. Vincent–St. Mary High School, in the state of Ohio, is the ground of Akron Summit Assault.
Subject: ['Akron Summit Assault', 'St. Vincent–St. Mary High School']
Predicate: ['ground', 'state']
Object: ['St. Vincent–St. Mary High School', 'Ohio']

Triple: [['__subject__ Akron Summit Assault __predicate__ league __object__ Premier Development League', '__subject__ Premier Development League __predicate__ champions __object__ K-W United FC']]
Text: The Premier Development League has K-W United F.C., (who have been champions) and Akron Summit Assault among its competing teams.
Subject: ['Akron Summit Assault', 'Premier Development League']
Predicate: ['league', 'champions']
Object: ['Premier Development League', 'K-W United FC']

Triple: [['__subject__ Akron Summit Assault __predicate__ league __object__ Premier Development League', '__subject__ Premier Development League __predicate__ champions __object__ K-W United FC']]
Text: Akron Summit Assault play in the Premier Development League, which K-W United FC were once the champions of.
Subject: ['Akron Summit Assault', 'Premier Development League']
Predicate: ['league', 'champions']
Object: ['Premier Development League', 'K-W United FC']

Triple: [['__subject__ Akron Summit Assault __predicate__ league __object__ Premier Development League', '__subject__ Premier Development League __predicate__ champions __object__ K-W United FC']]
Text: In the Premier Development League, Akron Summit Assault play and the champions are K-W United FC.
Subject: ['Akron Summit Assault', 'Premier Development League']
Predicate: ['league', 'champions']
Object: ['Premier Development League', 'K-W United FC']

Triple: [['__subject__ Akron Summit Assault __predicate__ manager __object__ Denzil Antonio', '__subject__ Akron Summit Assault __predicate__ numberOfMembers __object__ 3000']]
Text: Denzil Antonio is the manager of Akron Summit Assault which has 3000 members.
Subject: ['Akron Summit Assault', 'Akron Summit Assault']
Predicate: ['manager', 'numberOfMembers']
Object: ['Denzil Antonio', '3000']

Triple: [['__subject__ Akron Summit Assault __predicate__ manager __object__ Denzil Antonio', '__subject__ Akron Summit Assault __predicate__ numberOfMembers __object__ 3000']]
Text: Denzil Antonio was the manager of Akron Summit Assault, it has 3000 members.
Subject: ['Akron Summit Assault', 'Akron Summit Assault']
Predicate: ['manager', 'numberOfMembers']
Object: ['Denzil Antonio', '3000']

Triple: [['__subject__ Akron Summit Assault __predicate__ manager __object__ Denzil Antonio', '__subject__ Akron Summit Assault __predicate__ numberOfMembers __object__ 3000']]
Text: Akron Summit Assault, which has got 3000 members, was managed by Denzil Antonio.
Subject: ['Akron Summit Assault', 'Akron Summit Assault']
Predicate: ['manager', 'numberOfMembers']
Object: ['Denzil Antonio', '3000']

Triple: [['__subject__ Akron Summit Assault __predicate__ manager __object__ Denzil Antonio', '__subject__ Akron Summit Assault __predicate__ season __object__ 2011 PDL season']]
Text: The manager of Akron Summit Assault, who play in the 2011 PDL season, is Denzil Antonio.
Subject: ['Akron Summit Assault', 'Akron Summit Assault']
Predicate: ['manager', 'season']
Object: ['Denzil Antonio', '2011 PDL season']

Triple: [['__subject__ Akron Summit Assault __predicate__ manager __object__ Denzil Antonio', '__subject__ Akron Summit Assault __predicate__ season __object__ 2011 PDL season']]
Text: Akron Summit Assault, (managed by Denzil Antonio), played in the 2011 PDL season.
Subject: ['Akron Summit Assault', 'Akron Summit Assault']
Predicate: ['manager', 'season']
Object: ['Denzil Antonio', '2011 PDL season']

Triple: [['__subject__ Akron Summit Assault __predicate__ manager __object__ Denzil Antonio', '__subject__ Akron Summit Assault __predicate__ season __object__ 2011 PDL season']]
Text: Denzil Antonio was the manager of Akron Summit Assault and they participated in the 2011 PDL season.
Subject: ['Akron Summit Assault', 'Akron Summit Assault']
Predicate: ['manager', 'season']
Object: ['Denzil Antonio', '2011 PDL season']

Triple: [['__subject__ Akron Summit Assault __predicate__ numberOfMembers __object__ 3000', '__subject__ Akron Summit Assault __predicate__ season __object__ 2011']]
Text: Akron Summit Assault has got 3000 members and are in season 2011.
Subject: ['Akron Summit Assault', 'Akron Summit Assault']
Predicate: ['numberOfMembers', 'season']
Object: ['3000', '2011']

Triple: [['__subject__ Akron Summit Assault __predicate__ numberOfMembers __object__ 3000', '__subject__ Akron Summit Assault __predicate__ season __object__ 2011']]
Text: Akron Summit Assault has got 3000 members, he played in the 2011 season.
Subject: ['Akron Summit Assault', 'Akron Summit Assault']
Predicate: ['numberOfMembers', 'season']
Object: ['3000', '2011']

Triple: [['__subject__ Akron Summit Assault __predicate__ numberOfMembers __object__ 3000', '__subject__ Akron Summit Assault __predicate__ season __object__ 2011']]
Text: Akron Summit Assault, has 3000 members, and was in the 2011 season.
Subject: ['Akron Summit Assault', 'Akron Summit Assault']
Predicate: ['numberOfMembers', 'season']
Object: ['3000', '2011']

Triple: [['__subject__ Italy __predicate__ capital __object__ Rome', '__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy']]
Text: The ground of A.S. Gubbio 1910 is located in Italy, the capital of which is Rome.
Subject: ['Italy', 'A.S. Gubbio 1910']
Predicate: ['capital', 'ground']
Object: ['Rome', 'Italy']

Triple: [['__subject__ Italy __predicate__ capital __object__ Rome', '__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy']]
Text: The ground of A.S. Gubbio 1910 is located near Rome, capital of Italy.
Subject: ['Italy', 'A.S. Gubbio 1910']
Predicate: ['capital', 'ground']
Object: ['Rome', 'Italy']

Triple: [['__subject__ Italy __predicate__ capital __object__ Rome', '__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy']]
Text: The ground of A.S. Gubbio 1910 is located in Italy, which has Rome as its capital.
Subject: ['Italy', 'A.S. Gubbio 1910']
Predicate: ['capital', 'ground']
Object: ['Rome', 'Italy']

Triple: [['__subject__ Italy __predicate__ demonym __object__ Italians', '__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy']]
Text: Italians inhabit Italy where the ground of A.S. Gubbio 1910 is located.
Subject: ['Italy', 'A.S. Gubbio 1910']
Predicate: ['demonym', 'ground']
Object: ['Italians', 'Italy']

Triple: [['__subject__ Italy __predicate__ demonym __object__ Italians', '__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy']]
Text: The ground of A.S. Gubbio 1910 is located in Italy, where the people who live there are called Italians.
Subject: ['Italy', 'A.S. Gubbio 1910']
Predicate: ['demonym', 'ground']
Object: ['Italians', 'Italy']

Triple: [['__subject__ Italy __predicate__ demonym __object__ Italians', '__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy']]
Text: The ground of A.S. Gubbio 1910 is located in Italy, where Italians live.
Subject: ['Italy', 'A.S. Gubbio 1910']
Predicate: ['demonym', 'ground']
Object: ['Italians', 'Italy']

Triple: [['__subject__ Italy __predicate__ leader __object__ Sergio Mattarella', '__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy']]
Text: The ground of A.S. Gubbio 1910 is located in Italy where Sergio Mattarella is the leader.
Subject: ['Italy', 'A.S. Gubbio 1910']
Predicate: ['leader', 'ground']
Object: ['Sergio Mattarella', 'Italy']

Triple: [['__subject__ Italy __predicate__ leader __object__ Sergio Mattarella', '__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy']]
Text: The ground of A.S. Gubbio 1910 is located in Italy, where the leader is Sergio Mattarella.
Subject: ['Italy', 'A.S. Gubbio 1910']
Predicate: ['leader', 'ground']
Object: ['Sergio Mattarella', 'Italy']

Triple: [['__subject__ Italy __predicate__ leader __object__ Sergio Mattarella', '__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy']]
Text: The ground of A.S. Gubbio 1910 is located in Italy, which has the leader Sergio Mattarella.
Subject: ['Italy', 'A.S. Gubbio 1910']
Predicate: ['leader', 'ground']
Object: ['Sergio Mattarella', 'Italy']

Triple: [['__subject__ Italy __predicate__ officialLanguage __object__ Italian language', '__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy']]
Text: The ground of A.S. Gubbio 1910 is located in Italy, where the official language is Italian.
Subject: ['Italy', 'A.S. Gubbio 1910']
Predicate: ['officialLanguage', 'ground']
Object: ['Italian language', 'Italy']

Triple: [['__subject__ Italy __predicate__ officialLanguage __object__ Italian language', '__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy']]
Text: The ground of A.S. Gubbio 1910 is located in Italy, where unsurprisingly they speak Italian.
Subject: ['Italy', 'A.S. Gubbio 1910']
Predicate: ['officialLanguage', 'ground']
Object: ['Italian language', 'Italy']

Triple: [['__subject__ Italy __predicate__ officialLanguage __object__ Italian language', '__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Italy']]
Text: The ground of A.S. Gubbio 1910 is located in Italy where the official language is Italian.
Subject: ['Italy', 'A.S. Gubbio 1910']
Predicate: ['officialLanguage', 'ground']
Object: ['Italian language', 'Italy']

Triple: [['__subject__ Luciano Spalletti __predicate__ club __object__ Udinese Calcio', '__subject__ A.S. Roma __predicate__ manager __object__ Luciano Spalletti']]
Text: Luciano Spalletti, who manages A.S. Roma, played for Udinese Calcio.
Subject: ['Luciano Spalletti', 'A.S. Roma']
Predicate: ['club', 'manager']
Object: ['Udinese Calcio', 'Luciano Spalletti']

Triple: [['__subject__ Luciano Spalletti __predicate__ club __object__ Udinese Calcio', '__subject__ A.S. Roma __predicate__ manager __object__ Luciano Spalletti']]
Text: Luciano Spalletti plays for Udinese Calcio and manages AS Roma.
Subject: ['Luciano Spalletti', 'A.S. Roma']
Predicate: ['club', 'manager']
Object: ['Udinese Calcio', 'Luciano Spalletti']

Triple: [['__subject__ Luciano Spalletti __predicate__ club __object__ Udinese Calcio', '__subject__ A.S. Roma __predicate__ manager __object__ Luciano Spalletti']]
Text: Luciano Spalletti manages A S Roma and plays for Udinese Calcio.
Subject: ['Luciano Spalletti', 'A.S. Roma']
Predicate: ['club', 'manager']
Object: ['Udinese Calcio', 'Luciano Spalletti']

Triple: [['__subject__ Massimo Drago __predicate__ club __object__ U.S. Castrovillari Calcio', '__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago']]
Text: Massimo Drago plays for U.S Castrovillari Calcio and manages A.C. Cesena.
Subject: ['Massimo Drago', 'A.C. Cesena']
Predicate: ['club', 'manager']
Object: ['U.S. Castrovillari Calcio', 'Massimo Drago']

Triple: [['__subject__ Massimo Drago __predicate__ club __object__ U.S. Castrovillari Calcio', '__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago']]
Text: Massimo Drago, who manages A.C. Cesena, was once a player for US Castrovillari Calcio.
Subject: ['Massimo Drago', 'A.C. Cesena']
Predicate: ['club', 'manager']
Object: ['U.S. Castrovillari Calcio', 'Massimo Drago']

Triple: [['__subject__ Massimo Drago __predicate__ club __object__ U.S. Castrovillari Calcio', '__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago']]
Text: Massimo Drago plays for U.S Castrovillari Calcio and has been the manager of A C Cesena.
Subject: ['Massimo Drago', 'A.C. Cesena']
Predicate: ['club', 'manager']
Object: ['U.S. Castrovillari Calcio', 'Massimo Drago']

Triple: [['__subject__ Massimo Drago __predicate__ club __object__ Vigor Lamezia', '__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago']]
Text: Massimo Drago is attached to the club Vigor Lamezia and manages A.C. Cesena.
Subject: ['Massimo Drago', 'A.C. Cesena']
Predicate: ['club', 'manager']
Object: ['Vigor Lamezia', 'Massimo Drago']

Triple: [['__subject__ Massimo Drago __predicate__ club __object__ Vigor Lamezia', '__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago']]
Text: Massimo Drago is attached to the club Vigor Lamezia and he has been the manager of A C Cesena.
Subject: ['Massimo Drago', 'A.C. Cesena']
Predicate: ['club', 'manager']
Object: ['Vigor Lamezia', 'Massimo Drago']

Triple: [['__subject__ Massimo Drago __predicate__ club __object__ Vigor Lamezia', '__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago']]
Text: Massimo Drago is attached to the club Vigor Lamezia and has been the manager of A C Cesena.
Subject: ['Massimo Drago', 'A.C. Cesena']
Predicate: ['club', 'manager']
Object: ['Vigor Lamezia', 'Massimo Drago']

Triple: [['__subject__ National League North __predicate__ champions __object__ Barrow A.F.C.', '__subject__ A.F.C. Fylde __predicate__ league __object__ National League North']]
Text: Barrow A.F.C. team won the championship in the National League North, where A.F.C. Fylde also play.
Subject: ['National League North', 'A.F.C. Fylde']
Predicate: ['champions', 'league']
Object: ['Barrow A.F.C.', 'National League North']

Triple: [['__subject__ National League North __predicate__ champions __object__ Barrow A.F.C.', '__subject__ A.F.C. Fylde __predicate__ league __object__ National League North']]
Text: Barrow A.F.C. are the National League North Champions and A.F.C. Fylde play in the same league.
Subject: ['National League North', 'A.F.C. Fylde']
Predicate: ['champions', 'league']
Object: ['Barrow A.F.C.', 'National League North']

Triple: [['__subject__ National League North __predicate__ champions __object__ Barrow A.F.C.', '__subject__ A.F.C. Fylde __predicate__ league __object__ National League North']]
Text: Fylde played in the National League North league of which Barrow AFC are the champions.
Subject: ['National League North', 'A.F.C. Fylde']
Predicate: ['champions', 'league']
Object: ['Barrow A.F.C.', 'National League North']

Triple: [['__subject__ Olympic Stadium (Athens) __predicate__ location __object__ Athens', '__subject__ AEK Athens F.C. __predicate__ ground __object__ Olympic Stadium (Athens)']]
Text: The Olympic Stadium, located in Athens, is the home ground of AEK Athens FC.
Subject: ['Olympic Stadium (Athens)', 'AEK Athens F.C.']
Predicate: ['location', 'ground']
Object: ['Athens', 'Olympic Stadium (Athens)']

Triple: [['__subject__ Olympic Stadium (Athens) __predicate__ location __object__ Athens', '__subject__ AEK Athens F.C. __predicate__ ground __object__ Olympic Stadium (Athens)']]
Text: The Olympic Stadium in Athens is where the AEK Athens football club play.
Subject: ['Olympic Stadium (Athens)', 'AEK Athens F.C.']
Predicate: ['location', 'ground']
Object: ['Athens', 'Olympic Stadium (Athens)']

Triple: [['__subject__ Olympic Stadium (Athens) __predicate__ location __object__ Athens', '__subject__ AEK Athens F.C. __predicate__ ground __object__ Olympic Stadium (Athens)']]
Text: The Olympic Stadium, in Athens, is the home ground of AEK Athens FC.
Subject: ['Olympic Stadium (Athens)', 'AEK Athens F.C.']
Predicate: ['location', 'ground']
Object: ['Athens', 'Olympic Stadium (Athens)']

Triple: [['__subject__ Olympic Stadium (Athens) __predicate__ location __object__ Marousi', '__subject__ AEK Athens F.C. __predicate__ ground __object__ Olympic Stadium (Athens)']]
Text: The Olympic Stadium (Athens) is located in Marousi and is the home ground of AEK Athens FC.
Subject: ['Olympic Stadium (Athens)', 'AEK Athens F.C.']
Predicate: ['location', 'ground']
Object: ['Marousi', 'Olympic Stadium (Athens)']

Triple: [['__subject__ Olympic Stadium (Athens) __predicate__ location __object__ Marousi', '__subject__ AEK Athens F.C. __predicate__ ground __object__ Olympic Stadium (Athens)']]
Text: The ground for AEK Athens FC is the Olympic Stadium (Athens) located in Marousi.
Subject: ['Olympic Stadium (Athens)', 'AEK Athens F.C.']
Predicate: ['location', 'ground']
Object: ['Marousi', 'Olympic Stadium (Athens)']

Triple: [['__subject__ Olympic Stadium (Athens) __predicate__ location __object__ Marousi', '__subject__ AEK Athens F.C. __predicate__ ground __object__ Olympic Stadium (Athens)']]
Text: The ground for AEK Athens FC is the Olympic Stadium (Athens) in Marousi.
Subject: ['Olympic Stadium (Athens)', 'AEK Athens F.C.']
Predicate: ['location', 'ground']
Object: ['Marousi', 'Olympic Stadium (Athens)']

Triple: [['__subject__ Peter Stöger __predicate__ club __object__ FC Admira Wacker Mödling', '__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger']]
Text: Peter Stöger's club is the FC Admira Wacker Mödling and he is the manager of 1. FC Koln.
Subject: ['Peter Stöger', '1. FC Köln']
Predicate: ['club', 'manager']
Object: ['FC Admira Wacker Mödling', 'Peter Stöger']

Triple: [['__subject__ Peter Stöger __predicate__ club __object__ FC Admira Wacker Mödling', '__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger']]
Text: Peter Stoger is the manager of FC Koln and his club is FC Admira Wacker Modling.
Subject: ['Peter Stöger', '1. FC Köln']
Predicate: ['club', 'manager']
Object: ['FC Admira Wacker Mödling', 'Peter Stöger']

Triple: [['__subject__ Peter Stöger __predicate__ club __object__ FC Admira Wacker Mödling', '__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger']]
Text: The manager of 1.FC Koln is Peter Stoger, whose club is FC Admira Wacker Modling.
Subject: ['Peter Stöger', '1. FC Köln']
Predicate: ['club', 'manager']
Object: ['FC Admira Wacker Mödling', 'Peter Stöger']

Triple: [['__subject__ Peter Stöger __predicate__ club __object__ SK Rapid Wien', '__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger']]
Text: Peter Stoger plays for SK Rapid Wien and is the manager of 1. FC Koln.
Subject: ['Peter Stöger', '1. FC Köln']
Predicate: ['club', 'manager']
Object: ['SK Rapid Wien', 'Peter Stöger']

Triple: [['__subject__ Peter Stöger __predicate__ club __object__ SK Rapid Wien', '__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger']]
Text: The manager of 1. FC Koln isPeter Stöger, who plays for SK Rapid Wien club.
Subject: ['Peter Stöger', '1. FC Köln']
Predicate: ['club', 'manager']
Object: ['SK Rapid Wien', 'Peter Stöger']

Triple: [['__subject__ Peter Stöger __predicate__ club __object__ SK Rapid Wien', '__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger']]
Text: Peter Stöger, the manager of 1. FC Köln, plays for SK Rapid Wien.
Subject: ['Peter Stöger', '1. FC Köln']
Predicate: ['club', 'manager']
Object: ['SK Rapid Wien', 'Peter Stöger']

Triple: [['__subject__ Peter Stöger __predicate__ club __object__ SK Vorwärts Steyr', '__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger']]
Text: Peter Stoger, manager of 1.FC Koln, is also in the SK Vorwarts Steyr club.
Subject: ['Peter Stöger', '1. FC Köln']
Predicate: ['club', 'manager']
Object: ['SK Vorwärts Steyr', 'Peter Stöger']

Triple: [['__subject__ Peter Stöger __predicate__ club __object__ SK Vorwärts Steyr', '__subject__ 1. FC Köln __predicate__ manager __object__ Peter Stöger']]
Text: Peter Stoger is in the SK Vorwarts Steyr club and is the manager of 1. FC Koln.
Subject: ['Peter Stöger', '1. FC Köln']
Predicate: ['club', 'manager']
Object: ['SK Vorwärts Steyr', 'Peter Stöger']

Triple: [['__subject__ Serie A __predicate__ champions __object__ Juventus F.C.', '__subject__ A.C. Chievo Verona __predicate__ league __object__ Serie A']]
Text: A.C. Chievo Verona play in Serie A where Juventus FC have been champions .
Subject: ['Serie A', 'A.C. Chievo Verona']
Predicate: ['champions', 'league']
Object: ['Juventus F.C.', 'Serie A']

Triple: [['__subject__ Serie A __predicate__ champions __object__ Juventus F.C.', '__subject__ A.C. Chievo Verona __predicate__ league __object__ Serie A']]
Text: Juventus F.C. are former champions of Serie A, and A.C. Chievo Verona are also in the same competition.
Subject: ['Serie A', 'A.C. Chievo Verona']
Predicate: ['champions', 'league']
Object: ['Juventus F.C.', 'Serie A']

Triple: [['__subject__ Serie A __predicate__ champions __object__ Juventus F.C.', '__subject__ A.C. Chievo Verona __predicate__ league __object__ Serie A']]
Text: AC Chievo Verona play in the Serie A league in which Juventus FC have been champions.
Subject: ['Serie A', 'A.C. Chievo Verona']
Predicate: ['champions', 'league']
Object: ['Juventus F.C.', 'Serie A']

Triple: [['__subject__ Serie A __predicate__ champions __object__ Juventus F.C.', '__subject__ A.S. Roma __predicate__ league __object__ Serie A']]
Text: AS Roma play in the Serie A league where the champions are Juventus FC.
Subject: ['Serie A', 'A.S. Roma']
Predicate: ['champions', 'league']
Object: ['Juventus F.C.', 'Serie A']

Triple: [['__subject__ Serie A __predicate__ champions __object__ Juventus F.C.', '__subject__ A.S. Roma __predicate__ league __object__ Serie A']]
Text: Juventus FC have been Serie A champions and AS Roma play in the same league.
Subject: ['Serie A', 'A.S. Roma']
Predicate: ['champions', 'league']
Object: ['Juventus F.C.', 'Serie A']

Triple: [['__subject__ Serie A __predicate__ champions __object__ Juventus F.C.', '__subject__ A.S. Roma __predicate__ league __object__ Serie A']]
Text: Juventus F.C. are former champions of Serie A, A.S. Roma also play in the same competition.
Subject: ['Serie A', 'A.S. Roma']
Predicate: ['champions', 'league']
Object: ['Juventus F.C.', 'Serie A']

Triple: [['__subject__ 1 Decembrie 1918 University __predicate__ country __object__ Romania', '__subject__ Romania __predicate__ anthem __object__ Deșteaptă-te, române!']]
Text: 1 Decembrie 1918 University is located in Romania where the anthem is Deșteaptă-te, române!
Subject: ['1 Decembrie 1918 University', 'Romania']
Predicate: ['country', 'anthem']
Object: ['Romania', 'Deșteaptă-te, române!']

Triple: [['__subject__ 1 Decembrie 1918 University __predicate__ country __object__ Romania', '__subject__ Romania __predicate__ anthem __object__ Deșteaptă-te, române!']]
Text: The 1 Decembrie 1918 University is in Romania whose national anthem is Deșteaptă-te, române!
Subject: ['1 Decembrie 1918 University', 'Romania']
Predicate: ['country', 'anthem']
Object: ['Romania', 'Deșteaptă-te, române!']

Triple: [['__subject__ 1 Decembrie 1918 University __predicate__ latinName __object__ Universitas Apulensis', '__subject__ 1 Decembrie 1918 University __predicate__ country __object__ Romania']]
Text: The 1 Decembrie 1918 University of Romania has the latin name Universitas Apulensis.
Subject: ['1 Decembrie 1918 University', '1 Decembrie 1918 University']
Predicate: ['latinName', 'country']
Object: ['Universitas Apulensis', 'Romania']

Triple: [['__subject__ 1 Decembrie 1918 University __predicate__ latinName __object__ Universitas Apulensis', '__subject__ 1 Decembrie 1918 University __predicate__ country __object__ Romania']]
Text: 1 Decembrie 1918 University 's latin name is Universitas Apulensis and is located in Romania.
Subject: ['1 Decembrie 1918 University', '1 Decembrie 1918 University']
Predicate: ['latinName', 'country']
Object: ['Universitas Apulensis', 'Romania']

Triple: [['__subject__ 1 Decembrie 1918 University __predicate__ rector __object__ Breaz Valer Daniel', '__subject__ 1 Decembrie 1918 University __predicate__ city __object__ Alba Iulia']]
Text: Breaz Valer Daniel is the rector of the 1 Decembrie 1918 University in the city of Alba Iulia.
Subject: ['1 Decembrie 1918 University', '1 Decembrie 1918 University']
Predicate: ['rector', 'city']
Object: ['Breaz Valer Daniel', 'Alba Iulia']

Triple: [['__subject__ 1 Decembrie 1918 University __predicate__ rector __object__ Breaz Valer Daniel', '__subject__ 1 Decembrie 1918 University __predicate__ city __object__ Alba Iulia']]
Text: The 1 Decembrie 1918 University is situated in the city of Alba Iulia and the rector is Breaz Valer Daniel.
Subject: ['1 Decembrie 1918 University', '1 Decembrie 1918 University']
Predicate: ['rector', 'city']
Object: ['Breaz Valer Daniel', 'Alba Iulia']

Triple: [['__subject__ 1 Decembrie 1918 University __predicate__ state __object__ Alba', '__subject__ 1 Decembrie 1918 University __predicate__ country __object__ Romania']]
Text: The 1 Decembrie 1918 University is situated in the state of Alba, Romania.
Subject: ['1 Decembrie 1918 University', '1 Decembrie 1918 University']
Predicate: ['state', 'country']
Object: ['Alba', 'Romania']

Triple: [['__subject__ 1 Decembrie 1918 University __predicate__ state __object__ Alba', '__subject__ 1 Decembrie 1918 University __predicate__ country __object__ Romania']]
Text: 1 Decembrie 1918 University is in the state of Alba, Romania.
Subject: ['1 Decembrie 1918 University', '1 Decembrie 1918 University']
Predicate: ['state', 'country']
Object: ['Alba', 'Romania']

Triple: [['__subject__ AWH Engineering College __predicate__ academicStaffSize __object__ 250', '__subject__ AWH Engineering College __predicate__ city __object__ Kuttikkattoor']]
Text: There are 250 academic staff at the AWH Engineering College in the city of Kuttikkattoor.
Subject: ['AWH Engineering College', 'AWH Engineering College']
Predicate: ['academicStaffSize', 'city']
Object: ['250', 'Kuttikkattoor']

Triple: [['__subject__ AWH Engineering College __predicate__ academicStaffSize __object__ 250', '__subject__ AWH Engineering College __predicate__ city __object__ Kuttikkattoor']]
Text: AWH Engineering College in Kuttikkattoor has an academic staff size of 250 people.
Subject: ['AWH Engineering College', 'AWH Engineering College']
Predicate: ['academicStaffSize', 'city']
Object: ['250', 'Kuttikkattoor']

Triple: [['__subject__ AWH Engineering College __predicate__ academicStaffSize __object__ 250', '__subject__ AWH Engineering College __predicate__ city __object__ Kuttikkattoor']]
Text: AWH Engineering College has a staff size of 250 and is in the city of Kuttikkattoor.
Subject: ['AWH Engineering College', 'AWH Engineering College']
Predicate: ['academicStaffSize', 'city']
Object: ['250', 'Kuttikkattoor']

Triple: [['__subject__ AWH Engineering College __predicate__ country __object__ India', '__subject__ AWH Engineering College __predicate__ state __object__ Kerala']]
Text: The AWH Engineering College is located in the state of Kerala, India.
Subject: ['AWH Engineering College', 'AWH Engineering College']
Predicate: ['country', 'state']
Object: ['India', 'Kerala']

Triple: [['__subject__ AWH Engineering College __predicate__ country __object__ India', '__subject__ AWH Engineering College __predicate__ state __object__ Kerala']]
Text: AWH Engineering College is in the State of Kerala in India.
Subject: ['AWH Engineering College', 'AWH Engineering College']
Predicate: ['country', 'state']
Object: ['India', 'Kerala']

Triple: [['__subject__ AWH Engineering College __predicate__ country __object__ India', '__subject__ AWH Engineering College __predicate__ state __object__ Kerala']]
Text: AWH Engineering College is situated in the state of Kerala, India.
Subject: ['AWH Engineering College', 'AWH Engineering College']
Predicate: ['country', 'state']
Object: ['India', 'Kerala']

Triple: [['__subject__ AWH Engineering College __predicate__ country __object__ India', '__subject__ India __predicate__ river __object__ Ganges']]
Text: AWH Engineering College is located in India where the Ganges river flows.
Subject: ['AWH Engineering College', 'India']
Predicate: ['country', 'river']
Object: ['India', 'Ganges']

Triple: [['__subject__ AWH Engineering College __predicate__ country __object__ India', '__subject__ India __predicate__ river __object__ Ganges']]
Text: AWH Engineering College is in India where the Ganges River can be found.
Subject: ['AWH Engineering College', 'India']
Predicate: ['country', 'river']
Object: ['India', 'Ganges']

Triple: [['__subject__ AWH Engineering College __predicate__ country __object__ India', '__subject__ India __predicate__ river __object__ Ganges']]
Text: The biggest river of India is the Ganges. The AWH Engineering College is also located in India.
Subject: ['AWH Engineering College', 'India']
Predicate: ['country', 'river']
Object: ['India', 'Ganges']

Triple: [['__subject__ AWH Engineering College __predicate__ established __object__ 2001', '__subject__ AWH Engineering College __predicate__ city __object__ Kuttikkattoor']]
Text: In 2001 the AWH Engineering College was established in the city of Kuttikkattoor.
Subject: ['AWH Engineering College', 'AWH Engineering College']
Predicate: ['established', 'city']
Object: ['2001', 'Kuttikkattoor']

Triple: [['__subject__ AWH Engineering College __predicate__ established __object__ 2001', '__subject__ AWH Engineering College __predicate__ city __object__ Kuttikkattoor']]
Text: AWH Engineering College in Kuttikkattoor was established in 2001.
Subject: ['AWH Engineering College', 'AWH Engineering College']
Predicate: ['established', 'city']
Object: ['2001', 'Kuttikkattoor']

Triple: [['__subject__ AWH Engineering College __predicate__ established __object__ 2001', '__subject__ AWH Engineering College __predicate__ city __object__ Kuttikkattoor']]
Text: AWH Engineering College of the city Kuttikkattoor was established in 2001.
Subject: ['AWH Engineering College', 'AWH Engineering College']
Predicate: ['established', 'city']
Object: ['2001', 'Kuttikkattoor']

Triple: [['__subject__ Accademia di Architettura di Mendrisio __predicate__ country __object__ Switzerland', '__subject__ Accademia di Architettura di Mendrisio __predicate__ city __object__ Mendrisio']]
Text: The Accademia di Architettura di Mendrisio is located in the city of Mendrisio in Switzerland.
Subject: ['Accademia di Architettura di Mendrisio', 'Accademia di Architettura di Mendrisio']
Predicate: ['country', 'city']
Object: ['Switzerland', 'Mendrisio']

Triple: [['__subject__ Accademia di Architettura di Mendrisio __predicate__ country __object__ Switzerland', '__subject__ Accademia di Architettura di Mendrisio __predicate__ city __object__ Mendrisio']]
Text: Accademia di Architettura di Mendrisio is in Mendrisio, Switzerland.
Subject: ['Accademia di Architettura di Mendrisio', 'Accademia di Architettura di Mendrisio']
Predicate: ['country', 'city']
Object: ['Switzerland', 'Mendrisio']

Triple: [['__subject__ Accademia di Architettura di Mendrisio __predicate__ country __object__ Switzerland', '__subject__ Accademia di Architettura di Mendrisio __predicate__ city __object__ Mendrisio']]
Text: The Accademia di Architettura di Mendrisio is located in the city of Mendrisio, Switzerland.
Subject: ['Accademia di Architettura di Mendrisio', 'Accademia di Architettura di Mendrisio']
Predicate: ['country', 'city']
Object: ['Switzerland', 'Mendrisio']

Triple: [['__subject__ Accademia di Architettura di Mendrisio __predicate__ country __object__ Switzerland', '__subject__ Switzerland __predicate__ leader __object__ Johann Schneider-Ammann']]
Text: The Accademia di Architettura di Mendrisio is located in Switzerland where the leader of the country is Johann Schneider-Ammann.
Subject: ['Accademia di Architettura di Mendrisio', 'Switzerland']
Predicate: ['country', 'leader']
Object: ['Switzerland', 'Johann Schneider-Ammann']

Triple: [['__subject__ Accademia di Architettura di Mendrisio __predicate__ country __object__ Switzerland', '__subject__ Switzerland __predicate__ leader __object__ Johann Schneider-Ammann']]
Text: Switzerland, which is home to Accademia di Architettura di Mendrisio, is led by Johann Schneider-Ammann.
Subject: ['Accademia di Architettura di Mendrisio', 'Switzerland']
Predicate: ['country', 'leader']
Object: ['Switzerland', 'Johann Schneider-Ammann']

Triple: [['__subject__ Accademia di Architettura di Mendrisio __predicate__ country __object__ Switzerland', '__subject__ Switzerland __predicate__ leader __object__ Johann Schneider-Ammann']]
Text: Accademia di Architettura di Mendrisio is located in Switzerland and the leader is Johann Schneider-Ammann.
Subject: ['Accademia di Architettura di Mendrisio', 'Switzerland']
Predicate: ['country', 'leader']
Object: ['Switzerland', 'Johann Schneider-Ammann']

Triple: [['__subject__ Accademia di Architettura di Mendrisio __predicate__ dean __object__ Mario Botta', '__subject__ Accademia di Architettura di Mendrisio __predicate__ academicStaffSize __object__ 100']]
Text: Mario Botta is dean of the Accademia di Architettura di Mendrisio where there is an academic staff of 100.
Subject: ['Accademia di Architettura di Mendrisio', 'Accademia di Architettura di Mendrisio']
Predicate: ['dean', 'academicStaffSize']
Object: ['Mario Botta', '100']

Triple: [['__subject__ Accademia di Architettura di Mendrisio __predicate__ dean __object__ Mario Botta', '__subject__ Accademia di Architettura di Mendrisio __predicate__ academicStaffSize __object__ 100']]
Text: The Dean of Accademia di Architettura di Mendrisio is Mario Botta and the school has an academic staff size of 100 people.
Subject: ['Accademia di Architettura di Mendrisio', 'Accademia di Architettura di Mendrisio']
Predicate: ['dean', 'academicStaffSize']
Object: ['Mario Botta', '100']

Triple: [['__subject__ Accademia di Architettura di Mendrisio __predicate__ dean __object__ Mario Botta', '__subject__ Accademia di Architettura di Mendrisio __predicate__ academicStaffSize __object__ 100']]
Text: The Accademia di Architettura di Mendrisio has an academic staff of 100 and the dean is called Mario Botta.
Subject: ['Accademia di Architettura di Mendrisio', 'Accademia di Architettura di Mendrisio']
Predicate: ['dean', 'academicStaffSize']
Object: ['Mario Botta', '100']

Triple: [['__subject__ Accademia di Architettura di Mendrisio __predicate__ dean __object__ Mario Botta', '__subject__ Accademia di Architettura di Mendrisio __predicate__ established __object__ 1996']]
Text: Accademia di Architettura di Mendrisio was established in 1996 and the dean is Mario Botta.
Subject: ['Accademia di Architettura di Mendrisio', 'Accademia di Architettura di Mendrisio']
Predicate: ['dean', 'established']
Object: ['Mario Botta', '1996']

Triple: [['__subject__ Accademia di Architettura di Mendrisio __predicate__ dean __object__ Mario Botta', '__subject__ Accademia di Architettura di Mendrisio __predicate__ established __object__ 1996']]
Text: The Dean of Accademia di Architettura di Mendrisio, which was created in 1996, is Mario Botta.
Subject: ['Accademia di Architettura di Mendrisio', 'Accademia di Architettura di Mendrisio']
Predicate: ['dean', 'established']
Object: ['Mario Botta', '1996']

Triple: [['__subject__ Accademia di Architettura di Mendrisio __predicate__ dean __object__ Mario Botta', '__subject__ Accademia di Architettura di Mendrisio __predicate__ established __object__ 1996']]
Text: Mario Botta is Dean of the Accademia di Architettura di Mendrisio which was established in 1996.
Subject: ['Accademia di Architettura di Mendrisio', 'Accademia di Architettura di Mendrisio']
Predicate: ['dean', 'established']
Object: ['Mario Botta', '1996']

Triple: [['__subject__ Accademia di Architettura di Mendrisio __predicate__ numberOfStudents __object__ 600', '__subject__ Accademia di Architettura di Mendrisio __predicate__ established __object__ 1996']]
Text: The number of students at the Accademia di Architettura di Mendrisio which was established in 1996, is 600.
Subject: ['Accademia di Architettura di Mendrisio', 'Accademia di Architettura di Mendrisio']
Predicate: ['numberOfStudents', 'established']
Object: ['600', '1996']

Triple: [['__subject__ Accademia di Architettura di Mendrisio __predicate__ numberOfStudents __object__ 600', '__subject__ Accademia di Architettura di Mendrisio __predicate__ established __object__ 1996']]
Text: Accademia di Architettura di Mendrisio, which has 600 students, was established in 1996.
Subject: ['Accademia di Architettura di Mendrisio', 'Accademia di Architettura di Mendrisio']
Predicate: ['numberOfStudents', 'established']
Object: ['600', '1996']

Triple: [['__subject__ Accademia di Architettura di Mendrisio __predicate__ numberOfStudents __object__ 600', '__subject__ Accademia di Architettura di Mendrisio __predicate__ established __object__ 1996']]
Text: Accademia di Architettura di Mendrisio was established in 1996 and has 600 students.
Subject: ['Accademia di Architettura di Mendrisio', 'Accademia di Architettura di Mendrisio']
Predicate: ['numberOfStudents', 'established']
Object: ['600', '1996']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ academicStaffSize __object__ ~500', '__subject__ Acharya Institute of Technology __predicate__ motto __object__ Nurturing Excellence']]
Text: The motto of the Acharya Institute of Technology is "Nurturing Excellence" and there is an academic staff of 500.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['academicStaffSize', 'motto']
Object: ['~500', 'Nurturing Excellence']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ academicStaffSize __object__ ~500', '__subject__ Acharya Institute of Technology __predicate__ motto __object__ Nurturing Excellence']]
Text: The motto of Acharya Institute of Technology, which has about 500 employees, is Nurturing Excellence.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['academicStaffSize', 'motto']
Object: ['~500', 'Nurturing Excellence']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ academicStaffSize __object__ ~500', '__subject__ Acharya Institute of Technology __predicate__ motto __object__ Nurturing Excellence']]
Text: Acharya Institute of Technology has an academic staff size of 500 and their motto is Nurturing Excellence.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['academicStaffSize', 'motto']
Object: ['~500', 'Nurturing Excellence']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ affiliation __object__ Visvesvaraya Technological University', '__subject__ Acharya Institute of Technology __predicate__ state __object__ Karnataka']]
Text: Located in the state of Karnataka, Acharya Institute of Technology is an affiliate of Visvesvaraya Technological University.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['affiliation', 'state']
Object: ['Visvesvaraya Technological University', 'Karnataka']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ affiliation __object__ Visvesvaraya Technological University', '__subject__ Acharya Institute of Technology __predicate__ state __object__ Karnataka']]
Text: Acharya Institute of Technology in Karnataka is affiliated with Visvesvaraya Technological University.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['affiliation', 'state']
Object: ['Visvesvaraya Technological University', 'Karnataka']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ city __object__ Bangalore', '__subject__ Acharya Institute of Technology __predicate__ affiliation __object__ Visvesvaraya Technological University']]
Text: The Acharya Institute of Technology in Bangalore is affiliated with Visvesvaraya Technological University.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['city', 'affiliation']
Object: ['Bangalore', 'Visvesvaraya Technological University']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ city __object__ Bangalore', '__subject__ Acharya Institute of Technology __predicate__ affiliation __object__ Visvesvaraya Technological University']]
Text: The Acharya Institute of Technology, in the city of Bangalore, is affiliated with Visvesvaraya Technological University.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['city', 'affiliation']
Object: ['Bangalore', 'Visvesvaraya Technological University']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ city __object__ Bangalore', '__subject__ Acharya Institute of Technology __predicate__ affiliation __object__ Visvesvaraya Technological University']]
Text: Acharya Institute of Technology in Bangalore is affiliated with Visvesvaraya Technological University.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['city', 'affiliation']
Object: ['Bangalore', 'Visvesvaraya Technological University']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ country __object__ India', '__subject__ Acharya Institute of Technology __predicate__ affiliation __object__ Visvesvaraya Technological University']]
Text: The Acharya Institute of Technology in India is affiliated with the Visvesvaraya Technological University.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['country', 'affiliation']
Object: ['India', 'Visvesvaraya Technological University']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ country __object__ India', '__subject__ Acharya Institute of Technology __predicate__ affiliation __object__ Visvesvaraya Technological University']]
Text: Acharya Institute of Technology in India is affiliated with Visvesvaraya Technological University.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['country', 'affiliation']
Object: ['India', 'Visvesvaraya Technological University']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ country __object__ India', '__subject__ Acharya Institute of Technology __predicate__ affiliation __object__ Visvesvaraya Technological University']]
Text: Acharya Institute of Technology is affiliated with Visvesvaraya Technological University in India.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['country', 'affiliation']
Object: ['India', 'Visvesvaraya Technological University']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ established __object__ 2000', '__subject__ Acharya Institute of Technology __predicate__ country __object__ India']]
Text: The Acharya Institute of Technology was established in India in 2000.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['established', 'country']
Object: ['2000', 'India']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ established __object__ 2000', '__subject__ Acharya Institute of Technology __predicate__ country __object__ India']]
Text: Acharya Institute of Technology in India was created in 2000.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['established', 'country']
Object: ['2000', 'India']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ established __object__ 2000', '__subject__ Acharya Institute of Technology __predicate__ country __object__ India']]
Text: Acharya Institute of Technology of India was established in the year 2000.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['established', 'country']
Object: ['2000', 'India']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ numberOfUndergraduateStudents __object__ 10000', '__subject__ Acharya Institute of Technology __predicate__ country __object__ India']]
Text: Acharya Institute of Technology of India has 10000 Undergraduate students.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['numberOfUndergraduateStudents', 'country']
Object: ['10000', 'India']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ numberOfUndergraduateStudents __object__ 10000', '__subject__ Acharya Institute of Technology __predicate__ country __object__ India']]
Text: The Acharya Institute of Technology in India has 10000 undergraduate students.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['numberOfUndergraduateStudents', 'country']
Object: ['10000', 'India']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ numberOfUndergraduateStudents __object__ 10000', '__subject__ Acharya Institute of Technology __predicate__ country __object__ India']]
Text: Acharya Institute of Technology in India has 10000 Undergraduate students.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['numberOfUndergraduateStudents', 'country']
Object: ['10000', 'India']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ outlookRanking __object__ 63', '__subject__ Acharya Institute of Technology __predicate__ officialSchoolColour __object__ Blue, White and Orange']]
Text: The Acharya Institute of Technology has the official school colours of blue, white and orange and has the Outlook Ranking of 63.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['outlookRanking', 'officialSchoolColour']
Object: ['63', 'Blue, White and Orange']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ outlookRanking __object__ 63', '__subject__ Acharya Institute of Technology __predicate__ officialSchoolColour __object__ Blue, White and Orange']]
Text: Acharya Institute of Technology's ranking is 63 and its school colors are Blue, White and Orange.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['outlookRanking', 'officialSchoolColour']
Object: ['63', 'Blue, White and Orange']

Triple: [['__subject__ Acharya Institute of Technology __predicate__ outlookRanking __object__ 63', '__subject__ Acharya Institute of Technology __predicate__ officialSchoolColour __object__ Blue, White and Orange']]
Text: The outlook ranking of the Acharya Institute of Technology is 63, and the official school colours are blue, white and orange.
Subject: ['Acharya Institute of Technology', 'Acharya Institute of Technology']
Predicate: ['outlookRanking', 'officialSchoolColour']
Object: ['63', 'Blue, White and Orange']

Triple: [['__subject__ Alba Iulia __predicate__ country __object__ Romania', '__subject__ 1 Decembrie 1918 University __predicate__ city __object__ Alba Iulia']]
Text: Alba Iulia in Romania is the location of the 1 Decembrie 1918 University.
Subject: ['Alba Iulia', '1 Decembrie 1918 University']
Predicate: ['country', 'city']
Object: ['Romania', 'Alba Iulia']

Triple: [['__subject__ Alba Iulia __predicate__ country __object__ Romania', '__subject__ 1 Decembrie 1918 University __predicate__ city __object__ Alba Iulia']]
Text: 1 Decembrie 1918 University is located in Alba Iulia in Romania.
Subject: ['Alba Iulia', '1 Decembrie 1918 University']
Predicate: ['country', 'city']
Object: ['Romania', 'Alba Iulia']

Triple: [['__subject__ Alba Iulia __predicate__ isPartOf __object__ Alba County', '__subject__ 1 Decembrie 1918 University __predicate__ city __object__ Alba Iulia']]
Text: Alba Iulia is a part of Alba County and is the location of the 1 Decembrie 1918 University.
Subject: ['Alba Iulia', '1 Decembrie 1918 University']
Predicate: ['isPartOf', 'city']
Object: ['Alba County', 'Alba Iulia']

Triple: [['__subject__ Alba Iulia __predicate__ isPartOf __object__ Alba County', '__subject__ 1 Decembrie 1918 University __predicate__ city __object__ Alba Iulia']]
Text: 1 Decembrie 1918 University is located in Alba Iulia which is part of Alba County.
Subject: ['Alba Iulia', '1 Decembrie 1918 University']
Predicate: ['isPartOf', 'city']
Object: ['Alba County', 'Alba Iulia']

Triple: [['__subject__ Denmark __predicate__ leader __object__ Lars Løkke Rasmussen', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ country __object__ Denmark']]
Text: The leader of Denmark is Lars Lokke Rasmussen. Denmark is the home of the School of Business Studies and Social Sciences at the Aarhus University.
Subject: ['Denmark', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['leader', 'country']
Object: ['Lars Løkke Rasmussen', 'Denmark']

Triple: [['__subject__ Denmark __predicate__ leader __object__ Lars Løkke Rasmussen', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ country __object__ Denmark']]
Text: Denmark, which is home to the School of Business and Social Sciences at the Aarhus University, is led by Lars Løkke Rasmussen.
Subject: ['Denmark', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['leader', 'country']
Object: ['Lars Løkke Rasmussen', 'Denmark']

Triple: [['__subject__ Denmark __predicate__ leader __object__ Lars Løkke Rasmussen', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ country __object__ Denmark']]
Text: The School of Business and Social Sciences at the Aarhus University is located in the country of Denmark whose leader is Lars Løkke Rasmussen.
Subject: ['Denmark', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['leader', 'country']
Object: ['Lars Løkke Rasmussen', 'Denmark']

Triple: [['__subject__ Mendrisio __predicate__ neighboringMunicipality __object__ Meride', '__subject__ Accademia di Architettura di Mendrisio __predicate__ city __object__ Mendrisio']]
Text: The Accademia di Architettura di Mendrisio is located in the city of Mendrisio; the neighboring municipality of Mendrisio is Meride.
Subject: ['Mendrisio', 'Accademia di Architettura di Mendrisio']
Predicate: ['neighboringMunicipality', 'city']
Object: ['Meride', 'Mendrisio']

Triple: [['__subject__ Mendrisio __predicate__ neighboringMunicipality __object__ Meride', '__subject__ Accademia di Architettura di Mendrisio __predicate__ city __object__ Mendrisio']]
Text: Accademia di Architettura di Mendrisio in Mendrisio is bordered by the Municipality of Meride.
Subject: ['Mendrisio', 'Accademia di Architettura di Mendrisio']
Predicate: ['neighboringMunicipality', 'city']
Object: ['Meride', 'Mendrisio']

Triple: [['__subject__ Mendrisio __predicate__ neighboringMunicipality __object__ Meride', '__subject__ Accademia di Architettura di Mendrisio __predicate__ city __object__ Mendrisio']]
Text: Accademia di Architettura di Mendrisio is located in Meride in Mendrisio.
Subject: ['Mendrisio', 'Accademia di Architettura di Mendrisio']
Predicate: ['neighboringMunicipality', 'city']
Object: ['Meride', 'Mendrisio']

Triple: [['__subject__ Romania __predicate__ capital __object__ Bucharest', '__subject__ 1 Decembrie 1918 University __predicate__ country __object__ Romania']]
Text: The 1 Decembrie 1918 University is located in Romania where the capital is Bucharest.
Subject: ['Romania', '1 Decembrie 1918 University']
Predicate: ['capital', 'country']
Object: ['Bucharest', 'Romania']

Triple: [['__subject__ Romania __predicate__ capital __object__ Bucharest', '__subject__ 1 Decembrie 1918 University __predicate__ country __object__ Romania']]
Text: The 1 Decembrie 1918 University is located in the country of Romania, whose capital is Bucharest.
Subject: ['Romania', '1 Decembrie 1918 University']
Predicate: ['capital', 'country']
Object: ['Bucharest', 'Romania']

Triple: [['__subject__ Romania __predicate__ ethnicGroup __object__ Germans of Romania', '__subject__ 1 Decembrie 1918 University __predicate__ country __object__ Romania']]
Text: The 1 Decembrie 1918 University is in Romania, which has an ethnic group called Germans of Romania.
Subject: ['Romania', '1 Decembrie 1918 University']
Predicate: ['ethnicGroup', 'country']
Object: ['Germans of Romania', 'Romania']

Triple: [['__subject__ Romania __predicate__ ethnicGroup __object__ Germans of Romania', '__subject__ 1 Decembrie 1918 University __predicate__ country __object__ Romania']]
Text: The 1 Decembrie 1918 University is situated in Romania. It has a native ethnic group, Germans of Romania.
Subject: ['Romania', '1 Decembrie 1918 University']
Predicate: ['ethnicGroup', 'country']
Object: ['Germans of Romania', 'Romania']

Triple: [['__subject__ Romania __predicate__ ethnicGroup __object__ Germans of Romania', '__subject__ 1 Decembrie 1918 University __predicate__ country __object__ Romania']]
Text: 1 Decembrie 1918 University is located in Romania, where one of the ethnic groups is the Germans.
Subject: ['Romania', '1 Decembrie 1918 University']
Predicate: ['ethnicGroup', 'country']
Object: ['Germans of Romania', 'Romania']

Triple: [['__subject__ Romania __predicate__ leader __object__ Klaus Iohannis', '__subject__ 1 Decembrie 1918 University __predicate__ country __object__ Romania']]
Text: 1 Decembrie 1918 University is located in Romania whose leader is Klaus Iohannis.
Subject: ['Romania', '1 Decembrie 1918 University']
Predicate: ['leader', 'country']
Object: ['Klaus Iohannis', 'Romania']

Triple: [['__subject__ Romania __predicate__ patronSaint __object__ Andrew the Apostle', '__subject__ 1 Decembrie 1918 University __predicate__ country __object__ Romania']]
Text: The 1 Decembrie 1918 University is in the country of Romania who has the patron saint Andrew the Apostle.
Subject: ['Romania', '1 Decembrie 1918 University']
Predicate: ['patronSaint', 'country']
Object: ['Andrew the Apostle', 'Romania']

Triple: [['__subject__ Romania __predicate__ patronSaint __object__ Andrew the Apostle', '__subject__ 1 Decembrie 1918 University __predicate__ country __object__ Romania']]
Text: The 1 Decembrie 1918 University is located in Romania. The country's patron saint is Andrew the Apostle.
Subject: ['Romania', '1 Decembrie 1918 University']
Predicate: ['patronSaint', 'country']
Object: ['Andrew the Apostle', 'Romania']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ academicStaffSize __object__ 737', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ country __object__ Denmark']]
Text: Denmark's School of Business and Social Sciences at the Aarhus University has an academic staff size of 737 people.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['academicStaffSize', 'country']
Object: ['737', 'Denmark']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ academicStaffSize __object__ 737', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ country __object__ Denmark']]
Text: School of Business and Social Sciences at the Aarhus University has a staff size of 737 and is located in Denmark.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['academicStaffSize', 'country']
Object: ['737', 'Denmark']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ academicStaffSize __object__ 737', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ established __object__ 1928']]
Text: The School of Business and Social Sciences at the Aarhus University was established in 1928 and has an academic staff of 737.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['academicStaffSize', 'established']
Object: ['737', '1928']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ academicStaffSize __object__ 737', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ established __object__ 1928']]
Text: The School of Business and Social Sciences at Aarhus University was created in 1928 and has an academic staff size of 737 people.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['academicStaffSize', 'established']
Object: ['737', '1928']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ academicStaffSize __object__ 737', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ established __object__ 1928']]
Text: School of Business and Social Sciences at the Aarhus University was established in 1928 with a staff size of 737.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['academicStaffSize', 'established']
Object: ['737', '1928']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ affiliation __object__ European University Association', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ established __object__ 1928']]
Text: The School of Business and Social Sciences at the Aarhus University, which was established in 1928, is affiliated with the European University Association.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['affiliation', 'established']
Object: ['European University Association', '1928']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ affiliation __object__ European University Association', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ established __object__ 1928']]
Text: The School of Business and Social Sciences at the Aarhus University, which was created in 1928, is affiliated with the European University Association.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['affiliation', 'established']
Object: ['European University Association', '1928']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ affiliation __object__ European University Association', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ established __object__ 1928']]
Text: School of Business and Social Sciences at the Aarhus University was established in 1928 and is affiliated with the European University Association.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['affiliation', 'established']
Object: ['European University Association', '1928']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ city __object__ Aarhus', '__subject__ Aarhus __predicate__ governmentType __object__ Magistrate']]
Text: The type of government in Aarhus is that of magistrate. The city of Aarhus is where the School of Business and Social Sciences at the Aarhus University is located.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'Aarhus']
Predicate: ['city', 'governmentType']
Object: ['Aarhus', 'Magistrate']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ city __object__ Aarhus', '__subject__ Aarhus __predicate__ governmentType __object__ Magistrate']]
Text: The School of Business and Social Sciences at Aarhus University in Aarhus has a Magistrate as its government.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'Aarhus']
Predicate: ['city', 'governmentType']
Object: ['Aarhus', 'Magistrate']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ city __object__ Aarhus', '__subject__ Aarhus __predicate__ governmentType __object__ Magistrate']]
Text: The School of Business and Social Sciences at the Aarhus University is found in the city of Aarhus which has Magistrate as its government type.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'Aarhus']
Predicate: ['city', 'governmentType']
Object: ['Aarhus', 'Magistrate']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ city __object__ Aarhus', '__subject__ Aarhus __predicate__ hasToItsNortheast __object__ Mols']]
Text: Mols is situated to the northeast of Aarhus where the School of Business and Social Sciences at Aarhus University is located.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'Aarhus']
Predicate: ['city', 'hasToItsNortheast']
Object: ['Aarhus', 'Mols']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ city __object__ Aarhus', '__subject__ Aarhus __predicate__ hasToItsNortheast __object__ Mols']]
Text: The School of Business and Social Sciences at Aarhus University is in the city of Aarhus which has Mols to its northeast.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'Aarhus']
Predicate: ['city', 'hasToItsNortheast']
Object: ['Aarhus', 'Mols']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ city __object__ Aarhus', '__subject__ Aarhus __predicate__ hasToItsNortheast __object__ Mols']]
Text: The School of Business and Social Sciences at the Aarhus University is located in the city of Aarhus, which has Mols to its northeast.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'Aarhus']
Predicate: ['city', 'hasToItsNortheast']
Object: ['Aarhus', 'Mols']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ city __object__ Aarhus', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ country __object__ Denmark']]
Text: The School of Business and Social Sciences at Aaarhus University is located in Aarhus, Denmark.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['city', 'country']
Object: ['Aarhus', 'Denmark']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ city __object__ Aarhus', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ country __object__ Denmark']]
Text: School of Business and Social Sciences at the Aarhus University is in Aarhus, Denmark.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['city', 'country']
Object: ['Aarhus', 'Denmark']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ city __object__ Aarhus', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ country __object__ Denmark']]
Text: The School of Business and Social Sciences at the Aarhus University is located in the city of Aarhus in Denmark.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['city', 'country']
Object: ['Aarhus', 'Denmark']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ country __object__ Denmark', '__subject__ Denmark __predicate__ religion __object__ Church of Denmark']]
Text: The School of Business and Social Sciences at the Aarhus University is located in the country of Denmark which has the religion The Church of Denmark.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'Denmark']
Predicate: ['country', 'religion']
Object: ['Denmark', 'Church of Denmark']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ country __object__ Denmark', '__subject__ Denmark __predicate__ religion __object__ Church of Denmark']]
Text: The School of Business and Social Sciences at the Aarhus University in Denmark is also where the Church of Denmark is located.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'Denmark']
Predicate: ['country', 'religion']
Object: ['Denmark', 'Church of Denmark']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ country __object__ Denmark', '__subject__ Denmark __predicate__ religion __object__ Church of Denmark']]
Text: School of Business and Social Sciences at the Aarhus University is in Denmark as well as the Church of Denmark.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'Denmark']
Predicate: ['country', 'religion']
Object: ['Denmark', 'Church of Denmark']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ dean __object__ Thomas Pallesen', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ academicStaffSize __object__ 737']]
Text: Thomas Pallesen is dean of the School of Business and Social Sciences at the Aarhus University where there is an academic staff of 737.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['dean', 'academicStaffSize']
Object: ['Thomas Pallesen', '737']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ dean __object__ Thomas Pallesen', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ academicStaffSize __object__ 737']]
Text: The School of Business and Social Sciences at Aarhus University, which has an academic staff size of 737, has Thomas Pallesen as its Dean.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['dean', 'academicStaffSize']
Object: ['Thomas Pallesen', '737']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ dean __object__ Thomas Pallesen', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ academicStaffSize __object__ 737']]
Text: School of Business and Social Sciences at the Aarhus University has an academic staff size of 737 and the dean is Thomas Pallesen.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['dean', 'academicStaffSize']
Object: ['Thomas Pallesen', '737']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ latinName __object__ Universitas Aarhusiensis', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ affiliation __object__ European University Association']]
Text: Universitas Aarhusiensis is the latin name of the School of Business and Social Sciences at the Aarhus University which is affiliated to the European University Association.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['latinName', 'affiliation']
Object: ['Universitas Aarhusiensis', 'European University Association']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ latinName __object__ Universitas Aarhusiensis', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ affiliation __object__ European University Association']]
Text: The Latin name for the School of Business and Social Sciences at Aarhus University, which is affiliated with the European University Association, is "Universitas Aarhusiensis".
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['latinName', 'affiliation']
Object: ['Universitas Aarhusiensis', 'European University Association']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ latinName __object__ Universitas Aarhusiensis', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ affiliation __object__ European University Association']]
Text: School of Business and Social Sciences at the Aarhus University is affiliated with the European University Association and its called Universitas Aarhusiensis in latin.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['latinName', 'affiliation']
Object: ['Universitas Aarhusiensis', 'European University Association']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ numberOfStudents __object__ 16000', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ affiliation __object__ European University Association']]
Text: The School of Business and Social Sciences at Aarhus University takes 16000 students and is affiliated to the European University Association.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['numberOfStudents', 'affiliation']
Object: ['16000', 'European University Association']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ numberOfStudents __object__ 16000', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ affiliation __object__ European University Association']]
Text: The School of Business and Social Sciences at Aarhus University has 16,000 students and is affiliated with the European University Association.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['numberOfStudents', 'affiliation']
Object: ['16000', 'European University Association']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ numberOfStudents __object__ 16000', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ affiliation __object__ European University Association']]
Text: The School of Business and Social Sciences at the Aarhus University has 16000 students and is affiliated with the European University Association.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['numberOfStudents', 'affiliation']
Object: ['16000', 'European University Association']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ numberOfStudents __object__ 16000', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ country __object__ Denmark']]
Text: The School of Business and Social Sciences at the Aarhus University has 16000 students and is located in Denmark.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['numberOfStudents', 'country']
Object: ['16000', 'Denmark']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ numberOfStudents __object__ 16000', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ country __object__ Denmark']]
Text: The School of Business and Social Sciences at Aarhus University in Denmark has 16,000 students.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['numberOfStudents', 'country']
Object: ['16000', 'Denmark']

Triple: [['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ numberOfStudents __object__ 16000', '__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ country __object__ Denmark']]
Text: The School of Business and Social Sciences at the Aarhus University in Denmark has 16000 students.
Subject: ['School of Business and Social Sciences at the Aarhus University', 'School of Business and Social Sciences at the Aarhus University']
Predicate: ['numberOfStudents', 'country']
Object: ['16000', 'Denmark']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ isbnNumber __object__ 978-1-4165-4253-7', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: 1634: The Bavarian Crisis, written by Virginia DeMarce and Eric Flint, can be located by its ISBN number "978-1-4165-4253-7".
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['isbnNumber', 'author']
Object: ['978-1-4165-4253-7', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ isbnNumber __object__ 978-1-4165-4253-7', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: 1634: The Bavarian Crisis is written by Virginia DeMarce and Eric Flint and has the ISBN number 978-1-4165-4253-7.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['isbnNumber', 'author']
Object: ['978-1-4165-4253-7', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ isbnNumber __object__ 978-1-4165-4253-7', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: The ISBN number of 1634: The Bavarian Crisis is 978-1-4165-4253-7 and the authors are Virginia DeMarce and Eric Flint.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['isbnNumber', 'author']
Object: ['978-1-4165-4253-7', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ isbnNumber __object__ 978-1-4165-4253-7', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce']]
Text: 1634: The Bavarian Crisis, written by Virginia DeMarce, can be located by its ISBN number "978-1-4165-4253-7".
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['isbnNumber', 'author']
Object: ['978-1-4165-4253-7', 'Virginia DeMarce']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ isbnNumber __object__ 978-1-4165-4253-7', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce']]
Text: The book "1634: The Bavarian Crisis," by Virginia DeMarce, has ISBN number 978-1-4165-4253-7.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['isbnNumber', 'author']
Object: ['978-1-4165-4253-7', 'Virginia DeMarce']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Print']]
Text: 1634: The Bavarian Crisis is written by Virginia DeMarce and Eric Flint and is available in print form.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'mediaType']
Object: ['Virginia DeMarce and Eric Flint', 'Print']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Print']]
Text: '1634: The Bavarian Crisis', which was authored by Virginia DeMarce and Eric Flint, is available in print form.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'mediaType']
Object: ['Virginia DeMarce and Eric Flint', 'Print']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Print']]
Text: Virginia DeMarce and Eric Flint are the authors of 1634: The Bavarian Crisis which was put in print.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'mediaType']
Object: ['Virginia DeMarce and Eric Flint', 'Print']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ isbnNumber __object__ 978-1-4165-4253-7']]
Text: '1634: The Bavarian Crisis', written by Eric Flint, can be found using its ISBN number, 978-1-4165-4253-7.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'isbnNumber']
Object: ['Eric Flint', '978-1-4165-4253-7']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ isbnNumber __object__ 978-1-4165-4253-7']]
Text: 1634: The Bavarian Crisis was written by Eric Flint and has the ISBN number 978-1-4165-4253-7.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'isbnNumber']
Object: ['Eric Flint', '978-1-4165-4253-7']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ isbnNumber __object__ 978-1-4165-4253-7']]
Text: 978-1-4165-4253-7 is the ISBN number of "1634: The Bavarian Crisis" which was authored by Eric Flint.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'isbnNumber']
Object: ['Eric Flint', '978-1-4165-4253-7']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Print']]
Text: 1634: The Bavarian Crisis was written by Eric Flint and is available in print form.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'mediaType']
Object: ['Eric Flint', 'Print']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Print']]
Text: In 1634 the Bavarian Crisis was written by Eric Flint and was then put into print.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'mediaType']
Object: ['Eric Flint', 'Print']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Print']]
Text: 1634: The Bavarian Crisis available in print is written by Eric Flint.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'mediaType']
Object: ['Eric Flint', 'Print']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Hardcover']]
Text: 1634: The Bavarian Crisis is a hardcover publication written by Eric Flint.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'mediaType']
Object: ['Eric Flint', 'Hardcover']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Hardcover']]
Text: 1634 The Bavarian Crisis comes in hardcover and was written by Eric Flint.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'mediaType']
Object: ['Eric Flint', 'Hardcover']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Hardcover']]
Text: '1634: The Bavarian Crisis' which was written by Eric Flint, is available in hardcover.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'mediaType']
Object: ['Eric Flint', 'Hardcover']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Baltic War']]
Text: Eric Flint was the author of 1634: The Bavarian Crisis, which was preceded by his novel 1634: The Baltic War.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint', '1634: The Baltic War']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Baltic War']]
Text: 1634: The Bavarian Crisis was written by Eric Flint and is preceded by 1634: The Baltic War.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint', '1634: The Baltic War']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Baltic War']]
Text: Eric Flint is the author of 1634: The Bavarian Crisis which was the follow-up to 1634: The Baltic War.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint', '1634: The Baltic War']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Ram Rebellion']]
Text: '1634: The Bavarian Crisis' was written by Eric Flint and was preceded by '1634: The Ram Rebellion'.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint', '1634: The Ram Rebellion']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Ram Rebellion']]
Text: Eric Flint is the author of 1634: The Bavarian Crisis, which was preceded by 1634: The Ram Rebellion.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint', '1634: The Ram Rebellion']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ Grantville Gazette II']]
Text: 1634: The Bavarian Crisis was written by Eric Flint and was preceded by Grantville Gazette II.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint', 'Grantville Gazette II']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ Grantville Gazette II']]
Text: 1634: The Bavarian Crisis, written by Eric Flint, was preceded by Grantville Gazette II.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint', 'Grantville Gazette II']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ Grantville Gazette II']]
Text: Eric Flint's book, "1634: The Bavarian Crisis," was preceded by "Grantville Gazette II".
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint', 'Grantville Gazette II']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ Grantville Gazette III']]
Text: Eric Flint is the author of 1634: The Bavarian Crisis, which was preceded by Grantville Gazette III.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint', 'Grantville Gazette III']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ Grantville Gazette III']]
Text: Eric Flint is the author of 1634: The Bavarian Crisis, which is the sequel to Grantville Gazette III.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint', 'Grantville Gazette III']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ Grantville Gazette III']]
Text: Eric Flint is the author of 1634: The Bavarian Crisis which was preceded by Grantville Gazette III.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint', 'Grantville Gazette III']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Print', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce']]
Text: The author of 1634: The Bavarian Crisis, which is available in print form, is Virginia DeMarce.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['mediaType', 'author']
Object: ['Print', 'Virginia DeMarce']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Print', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce']]
Text: '1634: The Bavarian Crisis' which was written by Virginia DeMarce is available in print form.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['mediaType', 'author']
Object: ['Print', 'Virginia DeMarce']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Print', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce']]
Text: Virginia DeMarce is the author of 1634: The Bavarian Crisis, which was published in print form.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['mediaType', 'author']
Object: ['Print', 'Virginia DeMarce']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Hardcover', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: 1634: The Bavarian Crisis is written by Virginia DeMarce and Eric Flint and comes in hardcover.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['mediaType', 'author']
Object: ['Hardcover', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Hardcover', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: 1634: The Bavarian Crisis by Virginia DeMarce and Eric Flint, is available in hardcover.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['mediaType', 'author']
Object: ['Hardcover', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Hardcover', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: The hardcover publication of 1634: The Bavarian Crisis was authored by Virginia DeMarce and Eric Flint.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['mediaType', 'author']
Object: ['Hardcover', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Hardcover', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce']]
Text: Written by Virginia DeMarce, 1634: The Bavarian Crisis, is available in hardcover.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['mediaType', 'author']
Object: ['Hardcover', 'Virginia DeMarce']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Hardcover', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce']]
Text: Virginia DeMarce is the author of "1634: The Bavarian Crisis," available in hardcover.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['mediaType', 'author']
Object: ['Hardcover', 'Virginia DeMarce']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Hardcover', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce']]
Text: '1634: The Bavarian Crisis' which was written by Virginia DeMarce, is a hardcover publication.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['mediaType', 'author']
Object: ['Hardcover', 'Virginia DeMarce']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Baltic War', '__subject__ 1634: The Baltic War __predicate__ author __object__ David Weber']]
Text: 1634: The Bavarian Crisis is preceded by 1634: The Baltic War, which was written by David Weber.
Subject: ['1634: The Bavarian Crisis', '1634: The Baltic War']
Predicate: ['precededBy', 'author']
Object: ['1634: The Baltic War', 'David Weber']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Baltic War', '__subject__ 1634: The Baltic War __predicate__ author __object__ David Weber']]
Text: '1634: The Bavarian Crisis' is preceded by '1634: The Baltic War' which was written by David Weber.
Subject: ['1634: The Bavarian Crisis', '1634: The Baltic War']
Predicate: ['precededBy', 'author']
Object: ['1634: The Baltic War', 'David Weber']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Baltic War', '__subject__ 1634: The Baltic War __predicate__ author __object__ David Weber']]
Text: '1634: The Bavarian Crisis' was preceded by '1634: The Baltic War' which was written by David Weber.
Subject: ['1634: The Bavarian Crisis', '1634: The Baltic War']
Predicate: ['precededBy', 'author']
Object: ['1634: The Baltic War', 'David Weber']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Baltic War', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: 1634: The Bavarian Crisis is preceded by 1634: The Baltic War, both written by Virginia DeMarce and Eric Flint.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['precededBy', 'author']
Object: ['1634: The Baltic War', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Baltic War', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: '1634: The Bavarian Crisis', which was written by Virginia DeMarce and Eric Flint. was preceded by '1634: The Baltic War.'.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['precededBy', 'author']
Object: ['1634: The Baltic War', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Baltic War', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: Virginia DeMarce and Eric Flint are the authors of 1634: The Bavarian Crisis which was preceded by 1634: The Baltic War.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['precededBy', 'author']
Object: ['1634: The Baltic War', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Ram Rebellion', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: 1634 The Bavarian Crisis which was authored by Virginia DeMarce and Eric Flint, was preceded by 1634 The Ram Rebellion.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['precededBy', 'author']
Object: ['1634: The Ram Rebellion', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Ram Rebellion', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: 1634: The Bavarian Crisis which was preceded by 1634: The Ram Rebellion is written by Virginia DeMarce and Eric Flint.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['precededBy', 'author']
Object: ['1634: The Ram Rebellion', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Ram Rebellion', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: 1634: The Bavarian Crisis, was authored by Virginia DeMarce and Eric Flint, it was preceded by 1634: The Ram Rebellion.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['precededBy', 'author']
Object: ['1634: The Ram Rebellion', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ Grantville Gazette II', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: 1634: The Bavarian Crisis was preceded by Grantville Gazette II, and was written by Virginia DeMarce and Eric Flint.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['precededBy', 'author']
Object: ['Grantville Gazette II', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ Grantville Gazette II', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: 1634: The Bavarian Crisis is written by Virginia DeMarce and Eric Flint and was preceded by Grantville Gazette II.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['precededBy', 'author']
Object: ['Grantville Gazette II', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ Grantville Gazette II', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: Virginia DeMarce and Eric Flint are the authors of 1634: The Bavarian Crisis which was preceded by Grantville Gazette II.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['precededBy', 'author']
Object: ['Grantville Gazette II', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ The Grantville Gazettes', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: 1634: The Bavarian Crisis, written by Virginia DeMarce and Eric Flint, is preceded The Grantville Gazettes.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['precededBy', 'author']
Object: ['The Grantville Gazettes', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ The Grantville Gazettes', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: Virginia DeMarce and Eric Flint are the authors of 1634: The Bavarian Crisis which is preceded by The Grantville Gazettes.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['precededBy', 'author']
Object: ['The Grantville Gazettes', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ The Grantville Gazettes', '__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']]
Text: Virginia DeMarce and Eric Flint are the authors of 1634: The Bavarian crisis which is the sequel to The Grantville Gazettes.
Subject: ['1634: The Bavarian Crisis', '1634: The Bavarian Crisis']
Predicate: ['precededBy', 'author']
Object: ['The Grantville Gazettes', 'Virginia DeMarce and Eric Flint']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint, Virginia DeMarce, et al.', '__subject__ 1634: The Ram Rebellion __predicate__ isbnNumber __object__ 1-4165-2060-0']]
Text: 1634: The Ram Rebellion, ISBN 1-4165-2060-0, was written by Eric Flint, Virginia DeMarce, et al.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['author', 'isbnNumber']
Object: ['Eric Flint, Virginia DeMarce, et al.', '1-4165-2060-0']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint, Virginia DeMarce, et al.', '__subject__ 1634: The Ram Rebellion __predicate__ isbnNumber __object__ 1-4165-2060-0']]
Text: 1634: The Ram Rebellion was written by Eric Flint, Virginia DeMarce, et al and has the ISBN number of 1-4165-2060-0.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['author', 'isbnNumber']
Object: ['Eric Flint, Virginia DeMarce, et al.', '1-4165-2060-0']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint, Virginia DeMarce, et al.', '__subject__ 1634: The Ram Rebellion __predicate__ precededBy __object__ 1634: The Galileo Affair']]
Text: 1634 The Ram Rebellion, preceded by 1634 The Galileo Affair, was written by Eric Flint, Virginia DeMarce, et al.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint, Virginia DeMarce, et al.', '1634: The Galileo Affair']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint, Virginia DeMarce, et al.', '__subject__ 1634: The Ram Rebellion __predicate__ precededBy __object__ 1634: The Galileo Affair']]
Text: 1634: The Galileo Affair and its sequel 1634: The Ram Rebellion were both written by Eric Flint, Virginia DeMarce, et al.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint, Virginia DeMarce, et al.', '1634: The Galileo Affair']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint, Virginia DeMarce, et al.', '__subject__ 1634: The Ram Rebellion __predicate__ precededBy __object__ 1634: The Galileo Affair']]
Text: 1634: The Ram Rebellion was written by Eric Flint, Virginia DeMarce, et al and was preceded by 1634: The Galileo Affair.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint, Virginia DeMarce, et al.', '1634: The Galileo Affair']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Ram Rebellion __predicate__ isbnNumber __object__ 1-4165-2060-0']]
Text: 1634: The Ram Rebellion which was written by Eric Flint, has the ISBN number 1-4165-2060-0.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['author', 'isbnNumber']
Object: ['Eric Flint', '1-4165-2060-0']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Ram Rebellion __predicate__ isbnNumber __object__ 1-4165-2060-0']]
Text: The book "1634: The Ram Rebellion" by Eric Flint has an ISBN number 1-4165-2060-0.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['author', 'isbnNumber']
Object: ['Eric Flint', '1-4165-2060-0']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Ram Rebellion __predicate__ isbnNumber __object__ 1-4165-2060-0']]
Text: Eric Flint wrote the book "1634: The Ram Rebellion" which has the ISBN number 1-4165-2060-0.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['author', 'isbnNumber']
Object: ['Eric Flint', '1-4165-2060-0']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Ram Rebellion __predicate__ mediaType __object__ Print']]
Text: 1634: The Ram Rebellion was written by Eric Flint and published in print.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['author', 'mediaType']
Object: ['Eric Flint', 'Print']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Ram Rebellion __predicate__ mediaType __object__ Print']]
Text: Eric Flint is the author of 1634: The Ram Rebellion, currently in print.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['author', 'mediaType']
Object: ['Eric Flint', 'Print']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Ram Rebellion __predicate__ mediaType __object__ Print']]
Text: Eric Flint wrote the printed book "1634: The Ram Rebellion".
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['author', 'mediaType']
Object: ['Eric Flint', 'Print']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Ram Rebellion __predicate__ precededBy __object__ 1634: The Galileo Affair']]
Text: Eric Flint is the author of 1634: The Ram Rebellion, which was preceded by 1634 The Galileo Affair.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint', '1634: The Galileo Affair']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Ram Rebellion __predicate__ precededBy __object__ 1634: The Galileo Affair']]
Text: 1634: The Ram Rebellion by Eric Flint, is preceded by 1634: The Galileo Affair.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint', '1634: The Galileo Affair']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint', '__subject__ 1634: The Ram Rebellion __predicate__ precededBy __object__ 1634: The Galileo Affair']]
Text: Eric Flint wrote the book 1634: The Ram Rebellion which was preceded by 1634: The Galileo Affair.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['author', 'precededBy']
Object: ['Eric Flint', '1634: The Galileo Affair']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint', '__subject__ Eric Flint __predicate__ birthPlace __object__ Burbank, California']]
Text: Eric Flint was born in Burbank, California, he is the author of 1634 : The Ram Rebellion.
Subject: ['1634: The Ram Rebellion', 'Eric Flint']
Predicate: ['author', 'birthPlace']
Object: ['Eric Flint', 'Burbank, California']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint', '__subject__ Eric Flint __predicate__ birthPlace __object__ Burbank, California']]
Text: Eric Flint, born in Burbank, California, wrote 1634: The Ram Rebellion.
Subject: ['1634: The Ram Rebellion', 'Eric Flint']
Predicate: ['author', 'birthPlace']
Object: ['Eric Flint', 'Burbank, California']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint', '__subject__ Eric Flint __predicate__ birthPlace __object__ Burbank, California']]
Text: Eric Flint the author of 1634: The Ram Rebellion was born in Burbank, California.
Subject: ['1634: The Ram Rebellion', 'Eric Flint']
Predicate: ['author', 'birthPlace']
Object: ['Eric Flint', 'Burbank, California']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint', '__subject__ Eric Flint __predicate__ influencedBy __object__ Robert A. Heinlein']]
Text: Eric Flint, author of '1634: The Ram Rebellion', was influenced by Robert A Heinlein.
Subject: ['1634: The Ram Rebellion', 'Eric Flint']
Predicate: ['author', 'influencedBy']
Object: ['Eric Flint', 'Robert A. Heinlein']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint', '__subject__ Eric Flint __predicate__ influencedBy __object__ Robert A. Heinlein']]
Text: Eric Flint is the author of 1634: The Ram Rebellion, and was influenced by Robert A. Heinlein.
Subject: ['1634: The Ram Rebellion', 'Eric Flint']
Predicate: ['author', 'influencedBy']
Object: ['Eric Flint', 'Robert A. Heinlein']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint', '__subject__ Eric Flint __predicate__ influencedBy __object__ Robert A. Heinlein']]
Text: Eric Flint, who wrote the book, "1634: The Ram Rebellion," was influenced by Robert A. Heinlein.
Subject: ['1634: The Ram Rebellion', 'Eric Flint']
Predicate: ['author', 'influencedBy']
Object: ['Eric Flint', 'Robert A. Heinlein']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Virginia DeMarce', '__subject__ 1634: The Ram Rebellion __predicate__ isbnNumber __object__ 1-4165-2060-0']]
Text: 1634: The Ram Rebellion was written by Virginia DeMarce and has the ISBN number 1-4165-2060-0.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['author', 'isbnNumber']
Object: ['Virginia DeMarce', '1-4165-2060-0']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Virginia DeMarce', '__subject__ 1634: The Ram Rebellion __predicate__ isbnNumber __object__ 1-4165-2060-0']]
Text: Virginia DeMarce is the author of 1634: The Ram Rebellion which has the ISBN number of 1-4165-2060-0.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['author', 'isbnNumber']
Object: ['Virginia DeMarce', '1-4165-2060-0']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: Both the African Americans ethnic group and the book 1634 The Ram Rebellion are from the United States.
Subject: ['1634: The Ram Rebellion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: The USA is both the home to the book 1634 The Ram Rebellion and the African American ethnic groups.
Subject: ['1634: The Ram Rebellion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: '1634 The Ram Rebellion' was written in the United States, a country where African Americans are one of the ethnic groups.
Subject: ['1634: The Ram Rebellion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: 1634 The Ram Rebellion comes from the United States where there is an ethnic group called Asian Americans.
Subject: ['1634: The Ram Rebellion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: 1634 The Ram Rebellion comes from the United States, which includes many Asian Americans.
Subject: ['1634: The Ram Rebellion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']]
Text: 1634 The Ram Rebellion was written in the U.S where the Asian Americans are an ethnic group.
Subject: ['1634: The Ram Rebellion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Asian Americans']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: The American book The Ram Rebellion was written in 1634 where Native Americans form one of the ethnic groups.
Subject: ['1634: The Ram Rebellion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: 1634 The Ram Rebellion was written in the U.S where the Native Americans are one of the ethnic groups.
Subject: ['1634: The Ram Rebellion', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ followedBy __object__ 1635: The Cannon Law', '__subject__ 1634: The Ram Rebellion __predicate__ precededBy __object__ 1634: The Galileo Affair']]
Text: 1634: The Ram Rebellion is followed by 1635: The Cannon Law and preceded by 1634 The Galileo Affair.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['followedBy', 'precededBy']
Object: ['1635: The Cannon Law', '1634: The Galileo Affair']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ followedBy __object__ 1635: The Cannon Law', '__subject__ 1634: The Ram Rebellion __predicate__ precededBy __object__ 1634: The Galileo Affair']]
Text: The Galileo Affair was written in 1634, followed in the same year by The Ram Rebellion this was followed in 1635 by The Cannon Law.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['followedBy', 'precededBy']
Object: ['1635: The Cannon Law', '1634: The Galileo Affair']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ followedBy __object__ 1635: The Cannon Law', '__subject__ 1634: The Ram Rebellion __predicate__ precededBy __object__ 1634: The Galileo Affair']]
Text: 1634: The Ram Rebellion was followed by 1635: The Cannon Law and 1634 The Galileo Affair.
Subject: ['1634: The Ram Rebellion', '1634: The Ram Rebellion']
Predicate: ['followedBy', 'precededBy']
Object: ['1635: The Cannon Law', '1634: The Galileo Affair']

Triple: [['__subject__ 1634: The Ram Rebellion __predicate__ language __object__ English language', '__subject__ English language __predicate__ spokenIn __object__ Great Britain']]
Text: English is spoken in Great Britain and is the language used in 1634: The Ram Rebellion.
Subject: ['1634: The Ram Rebellion', 'English language']
Predicate: ['language', 'spokenIn']
Object: ['English language', 'Great Britain']

Triple: [['__subject__ ACM Transactions on Information Systems __predicate__ LCCN number __object__ 89646863', '__subject__ ACM Transactions on Information Systems __predicate__ abbreviation __object__ ACM Trans. Inf. Syst.']]
Text: ACM Transactions on Information Systems has the abbreviation of ACM Trans. Inf. Syst and the LCCN number 89646863.
Subject: ['ACM Transactions on Information Systems', 'ACM Transactions on Information Systems']
Predicate: ['LCCN number', 'abbreviation']
Object: ['89646863', 'ACM Trans. Inf. Syst.']

Triple: [['__subject__ ACM Transactions on Information Systems __predicate__ LCCN number __object__ 89646863', '__subject__ ACM Transactions on Information Systems __predicate__ abbreviation __object__ ACM Trans. Inf. Syst.']]
Text: ACM Transactions on Information Systems has an LCCN number of 89646863 an is abbreviated to ACM Trans. Inf. Syst.
Subject: ['ACM Transactions on Information Systems', 'ACM Transactions on Information Systems']
Predicate: ['LCCN number', 'abbreviation']
Object: ['89646863', 'ACM Trans. Inf. Syst.']

Triple: [['__subject__ ACM Transactions on Information Systems __predicate__ abbreviation __object__ ACM Trans. Inf. Syst.', '__subject__ ACM Transactions on Information Systems __predicate__ issnNumber __object__ 1046-8188']]
Text: The ISSN number of ACM Transactions on Information Systems is 1046-8188 and has the abbreviation of ACM Trans. Inf. Syst.
Subject: ['ACM Transactions on Information Systems', 'ACM Transactions on Information Systems']
Predicate: ['abbreviation', 'issnNumber']
Object: ['ACM Trans. Inf. Syst.', '1046-8188']

Triple: [['__subject__ ACM Transactions on Information Systems __predicate__ abbreviation __object__ ACM Trans. Inf. Syst.', '__subject__ ACM Transactions on Information Systems __predicate__ issnNumber __object__ 1046-8188']]
Text: ACM Transactions on Information Systems (abbreviated to ACM Trans. Inf. Syst.) has the ISSN number 1046-8188.
Subject: ['ACM Transactions on Information Systems', 'ACM Transactions on Information Systems']
Predicate: ['abbreviation', 'issnNumber']
Object: ['ACM Trans. Inf. Syst.', '1046-8188']

Triple: [['__subject__ ACM Transactions on Information Systems __predicate__ abbreviation __object__ ACM Trans. Inf. Syst.', '__subject__ ACM Transactions on Information Systems __predicate__ issnNumber __object__ 1046-8188']]
Text: The abbreviation "ACM Trans. Inf. Syst." is for ACM Transactions on Information Systems and the ISSN number is 1046-8188.
Subject: ['ACM Transactions on Information Systems', 'ACM Transactions on Information Systems']
Predicate: ['abbreviation', 'issnNumber']
Object: ['ACM Trans. Inf. Syst.', '1046-8188']

Triple: [['__subject__ ACM Transactions on Information Systems __predicate__ abbreviation __object__ ACM Trans. Inf. Syst.', '__subject__ ACM Transactions on Information Systems __predicate__ issnNumber __object__ 1558-2868']]
Text: The ACM Transactions on Information Systems is abbreviated to ACM Trans. Inf. Syst and has the ISSN number 1558-2868.
Subject: ['ACM Transactions on Information Systems', 'ACM Transactions on Information Systems']
Predicate: ['abbreviation', 'issnNumber']
Object: ['ACM Trans. Inf. Syst.', '1558-2868']

Triple: [['__subject__ ACM Transactions on Information Systems __predicate__ abbreviation __object__ ACM Trans. Inf. Syst.', '__subject__ ACM Transactions on Information Systems __predicate__ issnNumber __object__ 1558-2868']]
Text: ACM Transactions on Information Systems has the ISSN number 1558-2868 and the abbreviation "ACM Trans. Inf. Syst."
Subject: ['ACM Transactions on Information Systems', 'ACM Transactions on Information Systems']
Predicate: ['abbreviation', 'issnNumber']
Object: ['ACM Trans. Inf. Syst.', '1558-2868']

Triple: [['__subject__ ACM Transactions on Information Systems __predicate__ abbreviation __object__ ACM Trans. Inf. Syst.', '__subject__ ACM Transactions on Information Systems __predicate__ academicDiscipline __object__ Computer science']]
Text: ACM Transactions on Information Systems has the abbreviation of ACM Trans. Inf. Syst and is part of the academic discipline of computer science.
Subject: ['ACM Transactions on Information Systems', 'ACM Transactions on Information Systems']
Predicate: ['abbreviation', 'academicDiscipline']
Object: ['ACM Trans. Inf. Syst.', 'Computer science']

Triple: [['__subject__ ACM Transactions on Information Systems __predicate__ abbreviation __object__ ACM Trans. Inf. Syst.', '__subject__ ACM Transactions on Information Systems __predicate__ academicDiscipline __object__ Computer science']]
Text: ACM Trans. Inf. Syst. is the abbreviation of ACM Transactions on Information Systems which publishes in the domain of Computer Science.
Subject: ['ACM Transactions on Information Systems', 'ACM Transactions on Information Systems']
Predicate: ['abbreviation', 'academicDiscipline']
Object: ['ACM Trans. Inf. Syst.', 'Computer science']

Triple: [['__subject__ ACM Transactions on Information Systems __predicate__ abbreviation __object__ ACM Trans. Inf. Syst.', '__subject__ ACM Transactions on Information Systems __predicate__ academicDiscipline __object__ Computer science']]
Text: The abbreviation "ACM Trans. Inf. Syst." is for ACM Transactions on Information Systems whose academic discipline is Computer Science.
Subject: ['ACM Transactions on Information Systems', 'ACM Transactions on Information Systems']
Predicate: ['abbreviation', 'academicDiscipline']
Object: ['ACM Trans. Inf. Syst.', 'Computer science']

Triple: [['__subject__ ACM Transactions on Information Systems __predicate__ publisher __object__ Association for Computing Machinery', '__subject__ Association for Computing Machinery __predicate__ headquarter __object__ New York City']]
Text: ACM Transactions on Information Systems is published by the Association for Computing Machinery and is located in New York City.
Subject: ['ACM Transactions on Information Systems', 'Association for Computing Machinery']
Predicate: ['publisher', 'headquarter']
Object: ['Association for Computing Machinery', 'New York City']

Triple: [['__subject__ ACM Transactions on Information Systems __predicate__ publisher __object__ Association for Computing Machinery', '__subject__ Association for Computing Machinery __predicate__ headquarter __object__ New York City']]
Text: ACM Transactions on Information Systems was published by the Association for Computing Machinery headquartered in New York City.
Subject: ['ACM Transactions on Information Systems', 'Association for Computing Machinery']
Predicate: ['publisher', 'headquarter']
Object: ['Association for Computing Machinery', 'New York City']

Triple: [['__subject__ ACM Transactions on Information Systems __predicate__ publisher __object__ Association for Computing Machinery', '__subject__ Association for Computing Machinery __predicate__ headquarter __object__ New York City']]
Text: The Association for Computing Machinery is the publisher of ACM Transactions on information systems and is headquartered in New York City.
Subject: ['ACM Transactions on Information Systems', 'Association for Computing Machinery']
Predicate: ['publisher', 'headquarter']
Object: ['Association for Computing Machinery', 'New York City']

Triple: [['__subject__ ACM Transactions on Information Systems __predicate__ publisher __object__ Association for Computing Machinery', '__subject__ Association for Computing Machinery __predicate__ leader __object__ Alexander L. Wolf']]
Text: ACM Transactions on Information Systems is published by the Association for Computing Machinery, led by Alexander L. Wolf.
Subject: ['ACM Transactions on Information Systems', 'Association for Computing Machinery']
Predicate: ['publisher', 'leader']
Object: ['Association for Computing Machinery', 'Alexander L. Wolf']

Triple: [['__subject__ ACM Transactions on Information Systems __predicate__ publisher __object__ Association for Computing Machinery', '__subject__ Association for Computing Machinery __predicate__ leader __object__ Alexander L. Wolf']]
Text: Alexander L. Wolf is the leader of the Association for Computing Machinery which is the publisher of ACM Transactions on Information Systems.
Subject: ['ACM Transactions on Information Systems', 'Association for Computing Machinery']
Predicate: ['publisher', 'leader']
Object: ['Association for Computing Machinery', 'Alexander L. Wolf']

Triple: [['__subject__ ACM Transactions on Information Systems __predicate__ publisher __object__ Association for Computing Machinery', '__subject__ Association for Computing Machinery __predicate__ leader __object__ Alexander L. Wolf']]
Text: Alexander L. Wolf. is the leader of the Association for Computing Machinery which published ACM Transactions on Information Systems.
Subject: ['ACM Transactions on Information Systems', 'Association for Computing Machinery']
Predicate: ['publisher', 'leader']
Object: ['Association for Computing Machinery', 'Alexander L. Wolf']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV/AIDS', '__subject__ AIDS (journal) __predicate__ issnNumber __object__ 0269-9370']]
Text: The AIDS journal belongs to the academic discipline, HIV/AIDS, and it has the ISSN number 0269-9370.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'issnNumber']
Object: ['HIV/AIDS', '0269-9370']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV/AIDS', '__subject__ AIDS (journal) __predicate__ issnNumber __object__ 0269-9370']]
Text: The AIDS journal, which studies HIV/AIDS, has the ISSN number 0269-9370.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'issnNumber']
Object: ['HIV/AIDS', '0269-9370']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV/AIDS', '__subject__ AIDS (journal) __predicate__ issnNumber __object__ 0269-9370']]
Text: The discipline of the AIDS Journal, ISSN number 0269-9370, is HIV/AIDS.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'issnNumber']
Object: ['HIV/AIDS', '0269-9370']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV/AIDS', '__subject__ AIDS (journal) __predicate__ issnNumber __object__ 1473-5571']]
Text: The AIDS Journal, with ISSN number 1473-5571, belongs to the academic discipline HIV/AIDS.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'issnNumber']
Object: ['HIV/AIDS', '1473-5571']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV/AIDS', '__subject__ AIDS (journal) __predicate__ issnNumber __object__ 1473-5571']]
Text: The AIDS journal belongs to the academic discipline, HIV/AIDS and has the ISSN number 1473-5571.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'issnNumber']
Object: ['HIV/AIDS', '1473-5571']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV/AIDS', '__subject__ AIDS (journal) __predicate__ issnNumber __object__ 1473-5571']]
Text: The AIDS journal studies HIV/AIDS and The ISSN number is 1473-5571.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'issnNumber']
Object: ['HIV/AIDS', '1473-5571']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV/AIDS', '__subject__ AIDS (journal) __predicate__ firstPublicationYear __object__ 1987']]
Text: The AIDS journal was first published in 1987 and belongs to the academic discipline, HIV/AIDS.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'firstPublicationYear']
Object: ['HIV/AIDS', '1987']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV/AIDS', '__subject__ AIDS (journal) __predicate__ firstPublicationYear __object__ 1987']]
Text: The AIDS journal, first published in 1987, is in HIV/AIDS studies.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'firstPublicationYear']
Object: ['HIV/AIDS', '1987']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV/AIDS', '__subject__ AIDS (journal) __predicate__ firstPublicationYear __object__ 1987']]
Text: First published in 1987, the Aids Journal's discipline is HIV/AIDS.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'firstPublicationYear']
Object: ['HIV/AIDS', '1987']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV', '__subject__ AIDS (journal) __predicate__ issnNumber __object__ 0269-9370']]
Text: The academic discipline of AIDS journal with IBN of 0269-9370 is HIV.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'issnNumber']
Object: ['HIV', '0269-9370']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV', '__subject__ AIDS (journal) __predicate__ issnNumber __object__ 1473-5571']]
Text: AIDS journal has the ISSN number 1473-5571 and comes under the academic discipline HIV.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'issnNumber']
Object: ['HIV', '1473-5571']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV', '__subject__ AIDS (journal) __predicate__ issnNumber __object__ 1473-5571']]
Text: With an ISSN number of 1473-5571, AIDS journal comes under the academic discipline HIV.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'issnNumber']
Object: ['HIV', '1473-5571']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV', '__subject__ AIDS (journal) __predicate__ issnNumber __object__ 1473-5571']]
Text: The academic discipline of AIDS journal (which has the ISSN number 1473-5571) is HIV.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'issnNumber']
Object: ['HIV', '1473-5571']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV', '__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV/AIDS']]
Text: The AIDS journal in concerned with the study of AIDS/HIV.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'academicDiscipline']
Object: ['HIV', 'HIV/AIDS']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV', '__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV/AIDS']]
Text: The AIDS (journal) is the academic discipline of HIV, studying HIV/AIDS.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'academicDiscipline']
Object: ['HIV', 'HIV/AIDS']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV', '__subject__ AIDS (journal) __predicate__ firstPublicationYear __object__ 1987']]
Text: The AIDS journal, first published in 1987, comes under the academic discipline HIV.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'firstPublicationYear']
Object: ['HIV', '1987']

Triple: [['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV', '__subject__ AIDS (journal) __predicate__ firstPublicationYear __object__ 1987']]
Text: The journal AIDS, was first published in 1987 and belongs to the academic discipline HIV.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['academicDiscipline', 'firstPublicationYear']
Object: ['HIV', '1987']

Triple: [['__subject__ AIDS (journal) __predicate__ country __object__ United Kingdom', '__subject__ AIDS (journal) __predicate__ publisher __object__ Lippincott Williams & Wilkins']]
Text: The AIDS journal is published in the UK by Lippincott Williams & Wilkins.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['country', 'publisher']
Object: ['United Kingdom', 'Lippincott Williams & Wilkins']

Triple: [['__subject__ AIDS (journal) __predicate__ country __object__ United Kingdom', '__subject__ AIDS (journal) __predicate__ publisher __object__ Lippincott Williams & Wilkins']]
Text: The AIDS journal is published by Lippincott, Williams & Wilkins in the UK.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['country', 'publisher']
Object: ['United Kingdom', 'Lippincott Williams & Wilkins']

Triple: [['__subject__ AIDS (journal) __predicate__ country __object__ United Kingdom', '__subject__ AIDS (journal) __predicate__ publisher __object__ Lippincott Williams & Wilkins']]
Text: The AIDS journal is published in the United Kingdom by Lippincott, Williams & Wilkins.
Subject: ['AIDS (journal)', 'AIDS (journal)']
Predicate: ['country', 'publisher']
Object: ['United Kingdom', 'Lippincott Williams & Wilkins']

Triple: [['__subject__ AIDS (journal) __predicate__ country __object__ United Kingdom', '__subject__ United Kingdom __predicate__ capital __object__ London']]
Text: AIDS journal is from the United Kingdom where the capital city is London.
Subject: ['AIDS (journal)', 'United Kingdom']
Predicate: ['country', 'capital']
Object: ['United Kingdom', 'London']

Triple: [['__subject__ AIDS (journal) __predicate__ country __object__ United Kingdom', '__subject__ United Kingdom __predicate__ capital __object__ London']]
Text: London is the capital of the United Kingdom which is the country where AIDS journal is from.
Subject: ['AIDS (journal)', 'United Kingdom']
Predicate: ['country', 'capital']
Object: ['United Kingdom', 'London']

Triple: [['__subject__ AIDS (journal) __predicate__ publisher __object__ Lippincott Williams & Wilkins', '__subject__ Lippincott Williams & Wilkins __predicate__ country __object__ United States']]
Text: AIDS (journal) was published by Lippincott Williams & Wilkins, based in the United States.
Subject: ['AIDS (journal)', 'Lippincott Williams & Wilkins']
Predicate: ['publisher', 'country']
Object: ['Lippincott Williams & Wilkins', 'United States']

Triple: [['__subject__ AIDS (journal) __predicate__ publisher __object__ Lippincott Williams & Wilkins', '__subject__ Lippincott Williams & Wilkins __predicate__ country __object__ United States']]
Text: Lippincott, Williams & Wilkins which originated in the United States, publishes the journal AIDS.
Subject: ['AIDS (journal)', 'Lippincott Williams & Wilkins']
Predicate: ['publisher', 'country']
Object: ['Lippincott Williams & Wilkins', 'United States']

Triple: [['__subject__ AIDS (journal) __predicate__ publisher __object__ Lippincott Williams & Wilkins', '__subject__ Lippincott Williams & Wilkins __predicate__ country __object__ United States']]
Text: The AIDS (journal) is published by the United States company Lippincott Williams & Wilkins.
Subject: ['AIDS (journal)', 'Lippincott Williams & Wilkins']
Predicate: ['publisher', 'country']
Object: ['Lippincott Williams & Wilkins', 'United States']

Triple: [['__subject__ AIDS (journal) __predicate__ publisher __object__ Lippincott Williams & Wilkins', '__subject__ Lippincott Williams & Wilkins __predicate__ parentCompany __object__ Wolters Kluwer']]
Text: The AIDS (journal) is published by Lippincott Williams & Wilkins whose parent company is Wolters Kluwer.
Subject: ['AIDS (journal)', 'Lippincott Williams & Wilkins']
Predicate: ['publisher', 'parentCompany']
Object: ['Lippincott Williams & Wilkins', 'Wolters Kluwer']

Triple: [['__subject__ AIDS (journal) __predicate__ publisher __object__ Lippincott Williams & Wilkins', '__subject__ Lippincott Williams & Wilkins __predicate__ parentCompany __object__ Wolters Kluwer']]
Text: Wolters Kluwer is the parent company of Lippincott Williams & Wilkins who publish the journal AIDS.
Subject: ['AIDS (journal)', 'Lippincott Williams & Wilkins']
Predicate: ['publisher', 'parentCompany']
Object: ['Lippincott Williams & Wilkins', 'Wolters Kluwer']

Triple: [['__subject__ AIDS (journal) __predicate__ publisher __object__ Lippincott Williams & Wilkins', '__subject__ Lippincott Williams & Wilkins __predicate__ parentCompany __object__ Wolters Kluwer']]
Text: The AIDS journal is published by Lippincott, Williams & Wilkins, parented by the Wolters Kluwer company.
Subject: ['AIDS (journal)', 'Lippincott Williams & Wilkins']
Predicate: ['publisher', 'parentCompany']
Object: ['Lippincott Williams & Wilkins', 'Wolters Kluwer']

Triple: [['__subject__ AIP Advances __predicate__ abbreviation __object__ AIP Adv.', '__subject__ AIP Advances __predicate__ codenCode __object__ AAIDBI']]
Text: AIP Advances (abbreviated to "AIP Adv.") has a CODEN code of "AAIDBI".
Subject: ['AIP Advances', 'AIP Advances']
Predicate: ['abbreviation', 'codenCode']
Object: ['AIP Adv.', 'AAIDBI']

Triple: [['__subject__ AIP Advances __predicate__ abbreviation __object__ AIP Adv.', '__subject__ AIP Advances __predicate__ codenCode __object__ AAIDBI']]
Text: The coden code for AIP Advances (abbreviated "AIP Adv.") is AAIDBI.
Subject: ['AIP Advances', 'AIP Advances']
Predicate: ['abbreviation', 'codenCode']
Object: ['AIP Adv.', 'AAIDBI']

Triple: [['__subject__ AIP Advances __predicate__ abbreviation __object__ AIP Adv.', '__subject__ AIP Advances __predicate__ academicDiscipline __object__ Physics']]
Text: AIP Advances (abbreviated to "AIP Adv.") covers the discipline of physics.
Subject: ['AIP Advances', 'AIP Advances']
Predicate: ['abbreviation', 'academicDiscipline']
Object: ['AIP Adv.', 'Physics']

Triple: [['__subject__ AIP Advances __predicate__ abbreviation __object__ AIP Adv.', '__subject__ AIP Advances __predicate__ academicDiscipline __object__ Physics']]
Text: AIP Advances (abbreviated to "AIP Adv.") is devoted to the study of physics.
Subject: ['AIP Advances', 'AIP Advances']
Predicate: ['abbreviation', 'academicDiscipline']
Object: ['AIP Adv.', 'Physics']

Triple: [['__subject__ AIP Advances __predicate__ abbreviation __object__ AIP Adv.', '__subject__ AIP Advances __predicate__ academicDiscipline __object__ Physics']]
Text: AIP Advances, abbreviated to AIP Adv., covers the discipline of physics.
Subject: ['AIP Advances', 'AIP Advances']
Predicate: ['abbreviation', 'academicDiscipline']
Object: ['AIP Adv.', 'Physics']

Triple: [['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson', '__subject__ A.T. Charlie Johnson __predicate__ almaMater __object__ Harvard University']]
Text: Harvard University is the Alma mater of A T Charlie Johnson who is the editor of AIP Advances.
Subject: ['AIP Advances', 'A.T. Charlie Johnson']
Predicate: ['editor', 'almaMater']
Object: ['A.T. Charlie Johnson', 'Harvard University']

Triple: [['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson', '__subject__ A.T. Charlie Johnson __predicate__ almaMater __object__ Harvard University']]
Text: Harvard University is the alma mater of A T Charlie Johnson, who edited AIP Advances.
Subject: ['AIP Advances', 'A.T. Charlie Johnson']
Predicate: ['editor', 'almaMater']
Object: ['A.T. Charlie Johnson', 'Harvard University']

Triple: [['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson', '__subject__ A.T. Charlie Johnson __predicate__ almaMater __object__ Harvard University']]
Text: The editor of AIP Advances is A.T. Charlie Johnson whose Alma Mater was Harvard University.
Subject: ['AIP Advances', 'A.T. Charlie Johnson']
Predicate: ['editor', 'almaMater']
Object: ['A.T. Charlie Johnson', 'Harvard University']

Triple: [['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson', '__subject__ A.T. Charlie Johnson __predicate__ almaMater __object__ Stanford University']]
Text: Editor of AIP Advances, A T Charlie Johnson, has Stanford University for an almaMater.
Subject: ['AIP Advances', 'A.T. Charlie Johnson']
Predicate: ['editor', 'almaMater']
Object: ['A.T. Charlie Johnson', 'Stanford University']

Triple: [['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson', '__subject__ A.T. Charlie Johnson __predicate__ almaMater __object__ Stanford University']]
Text: A.T. Charlie Johnson, who edited AIP Advances, has Stanford University for an Alma mater.
Subject: ['AIP Advances', 'A.T. Charlie Johnson']
Predicate: ['editor', 'almaMater']
Object: ['A.T. Charlie Johnson', 'Stanford University']

Triple: [['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson', '__subject__ A.T. Charlie Johnson __predicate__ almaMater __object__ Stanford University']]
Text: The editor of AIP Advances is A.T. Charlie Johnson, an alumnus of Stanford University.
Subject: ['AIP Advances', 'A.T. Charlie Johnson']
Predicate: ['editor', 'almaMater']
Object: ['A.T. Charlie Johnson', 'Stanford University']

Triple: [['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson', '__subject__ A.T. Charlie Johnson __predicate__ doctoralAdvisor __object__ Michael Tinkham']]
Text: The doctoral advisor of A T Charlie Johnson, the editor of AIP Advances, was Michael Tinkham.
Subject: ['AIP Advances', 'A.T. Charlie Johnson']
Predicate: ['editor', 'doctoralAdvisor']
Object: ['A.T. Charlie Johnson', 'Michael Tinkham']

Triple: [['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson', '__subject__ A.T. Charlie Johnson __predicate__ doctoralAdvisor __object__ Michael Tinkham']]
Text: A T Charlie Johnson, editor of AIP Advances, was a PhD student of Michael Tinkham.
Subject: ['AIP Advances', 'A.T. Charlie Johnson']
Predicate: ['editor', 'doctoralAdvisor']
Object: ['A.T. Charlie Johnson', 'Michael Tinkham']

Triple: [['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson', '__subject__ A.T. Charlie Johnson __predicate__ doctoralAdvisor __object__ Michael Tinkham']]
Text: Michael Tinkham was the doctoral advisor to A T Charlie Johnson who is the editor of AIP Advances.
Subject: ['AIP Advances', 'A.T. Charlie Johnson']
Predicate: ['editor', 'doctoralAdvisor']
Object: ['A.T. Charlie Johnson', 'Michael Tinkham']

Triple: [['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson', '__subject__ A.T. Charlie Johnson __predicate__ nationality __object__ United States']]
Text: AIP Advances was edited by A.T. Charlie Johnson who is a United States national.
Subject: ['AIP Advances', 'A.T. Charlie Johnson']
Predicate: ['editor', 'nationality']
Object: ['A.T. Charlie Johnson', 'United States']

Triple: [['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson', '__subject__ A.T. Charlie Johnson __predicate__ nationality __object__ United States']]
Text: AIP Advances was edited by A.T. Charlie Johnson from the United States.
Subject: ['AIP Advances', 'A.T. Charlie Johnson']
Predicate: ['editor', 'nationality']
Object: ['A.T. Charlie Johnson', 'United States']

Triple: [['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson', '__subject__ A.T. Charlie Johnson __predicate__ nationality __object__ United States']]
Text: The editor of AIP Advances is A.T. Charlie Johnson who is a United States national.
Subject: ['AIP Advances', 'A.T. Charlie Johnson']
Predicate: ['editor', 'nationality']
Object: ['A.T. Charlie Johnson', 'United States']

Triple: [['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson', '__subject__ A.T. Charlie Johnson __predicate__ residence __object__ United States']]
Text: A T Charlie Johnson lives in the US and is the editor of AIP Advances.
Subject: ['AIP Advances', 'A.T. Charlie Johnson']
Predicate: ['editor', 'residence']
Object: ['A.T. Charlie Johnson', 'United States']

Triple: [['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson', '__subject__ A.T. Charlie Johnson __predicate__ residence __object__ United States']]
Text: A T Charlie Johnson is the editor of AIP Advances and resides in the United States.
Subject: ['AIP Advances', 'A.T. Charlie Johnson']
Predicate: ['editor', 'residence']
Object: ['A.T. Charlie Johnson', 'United States']

Triple: [['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson', '__subject__ A.T. Charlie Johnson __predicate__ residence __object__ United States']]
Text: A.T. Charlie Johnson is the editor of AIP Advances, he resides in the United States.
Subject: ['AIP Advances', 'A.T. Charlie Johnson']
Predicate: ['editor', 'residence']
Object: ['A.T. Charlie Johnson', 'United States']

Triple: [['__subject__ AIP Advances __predicate__ impactFactor __object__ 1.524', '__subject__ AIP Advances __predicate__ abbreviation __object__ AIP Adv.']]
Text: AIP Advances (AIP Adv) has the impact factor 1.524.
Subject: ['AIP Advances', 'AIP Advances']
Predicate: ['impactFactor', 'abbreviation']
Object: ['1.524', 'AIP Adv.']

Triple: [['__subject__ AIP Advances __predicate__ impactFactor __object__ 1.524', '__subject__ AIP Advances __predicate__ abbreviation __object__ AIP Adv.']]
Text: AIP Advances (abbreviated to AIP Adv.) has the impact factor 1.524.
Subject: ['AIP Advances', 'AIP Advances']
Predicate: ['impactFactor', 'abbreviation']
Object: ['1.524', 'AIP Adv.']

Triple: [['__subject__ AIP Advances __predicate__ impactFactor __object__ 1.524', '__subject__ AIP Advances __predicate__ abbreviation __object__ AIP Adv.']]
Text: The impact factor of AIP Advances, abbreviated to AIP Adv., is 1.524.
Subject: ['AIP Advances', 'AIP Advances']
Predicate: ['impactFactor', 'abbreviation']
Object: ['1.524', 'AIP Adv.']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ author __object__ J. V. Jones', '__subject__ A Fortress of Grey Ice __predicate__ oclcNumber __object__ 51969173']]
Text: A Fortress of Grey Ice was written by J. V. Jones and has the OCLC number 51969173.
Subject: ['A Fortress of Grey Ice', 'A Fortress of Grey Ice']
Predicate: ['author', 'oclcNumber']
Object: ['J. V. Jones', '51969173']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ author __object__ J. V. Jones', '__subject__ A Fortress of Grey Ice __predicate__ oclcNumber __object__ 51969173']]
Text: J.V. Jones is the author of A Fortress of Grey Ice and the OCLC number is 51969173.
Subject: ['A Fortress of Grey Ice', 'A Fortress of Grey Ice']
Predicate: ['author', 'oclcNumber']
Object: ['J. V. Jones', '51969173']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ author __object__ J. V. Jones', '__subject__ A Fortress of Grey Ice __predicate__ oclcNumber __object__ 51969173']]
Text: The author of the book A fortress of Grey Ice is J.V. Jones and this book has the OCLC number 51969173.
Subject: ['A Fortress of Grey Ice', 'A Fortress of Grey Ice']
Predicate: ['author', 'oclcNumber']
Object: ['J. V. Jones', '51969173']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: A Fortress of Grey Ice is from the United States where the Native Americans are an ethnic group.
Subject: ['A Fortress of Grey Ice', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: A Fortress of Grey Ice is from the United States, which counts Native Americans among its ethnic groups.
Subject: ['A Fortress of Grey Ice', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ language __object__ English language', '__subject__ A Fortress of Grey Ice __predicate__ country __object__ United States']]
Text: A Fortress of Grey Ice is from the United States and written in the English language.
Subject: ['A Fortress of Grey Ice', 'A Fortress of Grey Ice']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ language __object__ English language', '__subject__ A Fortress of Grey Ice __predicate__ country __object__ United States']]
Text: A Fortress of Grey Ice is from the United States and originally published in English.
Subject: ['A Fortress of Grey Ice', 'A Fortress of Grey Ice']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ language __object__ English language', '__subject__ A Fortress of Grey Ice __predicate__ country __object__ United States']]
Text: A Fortress of Grey Ice is from the United States and was originally published in English.
Subject: ['A Fortress of Grey Ice', 'A Fortress of Grey Ice']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ language __object__ English language', '__subject__ English language __predicate__ spokenIn __object__ Great Britain']]
Text: A Fortress of Grey Ice is written in English, which is the language spoken in Great Britain.
Subject: ['A Fortress of Grey Ice', 'English language']
Predicate: ['language', 'spokenIn']
Object: ['English language', 'Great Britain']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ language __object__ English language', '__subject__ English language __predicate__ spokenIn __object__ Great Britain']]
Text: A Fortress of Grey Ice was originally published in English which is spoken in Great Britain.
Subject: ['A Fortress of Grey Ice', 'English language']
Predicate: ['language', 'spokenIn']
Object: ['English language', 'Great Britain']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ language __object__ English language', '__subject__ English language __predicate__ spokenIn __object__ Great Britain']]
Text: A Fortress of Grey Ice was originally published in English the language spoken in Great Britain.
Subject: ['A Fortress of Grey Ice', 'English language']
Predicate: ['language', 'spokenIn']
Object: ['English language', 'Great Britain']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ mediaType __object__ Hardcover', '__subject__ A Fortress of Grey Ice __predicate__ isbnNumber __object__ 0-7653-0633-6']]
Text: The hardcover book, A Fortress of Grey Ice, has the ISBN number 0-7653-0633-6.
Subject: ['A Fortress of Grey Ice', 'A Fortress of Grey Ice']
Predicate: ['mediaType', 'isbnNumber']
Object: ['Hardcover', '0-7653-0633-6']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ mediaType __object__ Hardcover', '__subject__ A Fortress of Grey Ice __predicate__ isbnNumber __object__ 0-7653-0633-6']]
Text: A Fortress of Grey Ice was produced in hardcover with the ISBN number 0-7653-0633-6.
Subject: ['A Fortress of Grey Ice', 'A Fortress of Grey Ice']
Predicate: ['mediaType', 'isbnNumber']
Object: ['Hardcover', '0-7653-0633-6']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ mediaType __object__ Hardcover', '__subject__ A Fortress of Grey Ice __predicate__ author __object__ J. V. Jones']]
Text: J.V, Jones is the author of the hardcovered book, A Fortress of Grey Ice.
Subject: ['A Fortress of Grey Ice', 'A Fortress of Grey Ice']
Predicate: ['mediaType', 'author']
Object: ['Hardcover', 'J. V. Jones']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ mediaType __object__ Hardcover', '__subject__ A Fortress of Grey Ice __predicate__ author __object__ J. V. Jones']]
Text: A Fortress of Grey Ice was written by J. V. Jones and was produced in Hardcover.
Subject: ['A Fortress of Grey Ice', 'A Fortress of Grey Ice']
Predicate: ['mediaType', 'author']
Object: ['Hardcover', 'J. V. Jones']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ mediaType __object__ Hardcover', '__subject__ A Fortress of Grey Ice __predicate__ author __object__ J. V. Jones']]
Text: A Fortress of Grey Ice released in Hardcover was written by J.V. Jones.
Subject: ['A Fortress of Grey Ice', 'A Fortress of Grey Ice']
Predicate: ['mediaType', 'author']
Object: ['Hardcover', 'J. V. Jones']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ publisher __object__ Tor Books', '__subject__ Tor Books __predicate__ parentCompany __object__ Macmillan Publishers']]
Text: "A Fortress of Grey Ice" was published by Tor Books, a subsidiary of Macmillan Publishers.
Subject: ['A Fortress of Grey Ice', 'Tor Books']
Predicate: ['publisher', 'parentCompany']
Object: ['Tor Books', 'Macmillan Publishers']

Triple: [['__subject__ A Fortress of Grey Ice __predicate__ publisher __object__ Tor Books', '__subject__ Tor Books __predicate__ parentCompany __object__ Macmillan Publishers']]
Text: Macmillan Publishers are the parent company of Tor Books who publish A Fortress of Grey Ice.
Subject: ['A Fortress of Grey Ice', 'Tor Books']
Predicate: ['publisher', 'parentCompany']
Object: ['Tor Books', 'Macmillan Publishers']

Triple: [['__subject__ A Glastonbury Romance __predicate__ oclcNumber __object__ 76798317', '__subject__ A Glastonbury Romance __predicate__ isbnNumber __object__ 0-7156-3648-0']]
Text: A Glastonbury Romance has the OCLC number 76798317 and the ISBN number 0-7156-3648-0.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['oclcNumber', 'isbnNumber']
Object: ['76798317', '0-7156-3648-0']

Triple: [['__subject__ A Glastonbury Romance __predicate__ oclcNumber __object__ 76798317', '__subject__ A Glastonbury Romance __predicate__ isbnNumber __object__ 0-7156-3648-0']]
Text: The OCLC number for A Glastonbury Romance is 76798317 and the ISNN is 0-7156-3648-0.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['oclcNumber', 'isbnNumber']
Object: ['76798317', '0-7156-3648-0']

Triple: [['__subject__ A Glastonbury Romance __predicate__ oclcNumber __object__ 76798317', '__subject__ A Glastonbury Romance __predicate__ isbnNumber __object__ 0-7156-3648-0']]
Text: A Glastonbury Romance has the ISBN number 0-7156-3648-0 and OCLC number 76798317.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['oclcNumber', 'isbnNumber']
Object: ['76798317', '0-7156-3648-0']

Triple: [['__subject__ A Glastonbury Romance __predicate__ oclcNumber __object__ 76798317', '__subject__ A Glastonbury Romance __predicate__ mediaType __object__ Print']]
Text: A Glastonbury Romance is available in print and has the OCLC number 76798317.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['oclcNumber', 'mediaType']
Object: ['76798317', 'Print']

Triple: [['__subject__ A Glastonbury Romance __predicate__ oclcNumber __object__ 76798317', '__subject__ A Glastonbury Romance __predicate__ mediaType __object__ Print']]
Text: The OCLC number of the currently in print book "A Glastonbury Romance" is 76798317.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['oclcNumber', 'mediaType']
Object: ['76798317', 'Print']

Triple: [['__subject__ A Glastonbury Romance __predicate__ oclcNumber __object__ 76798317', '__subject__ A Glastonbury Romance __predicate__ mediaType __object__ Print']]
Text: The OCLC number of "A Glastonbury Romance" is 76798317, and it is available in print.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['oclcNumber', 'mediaType']
Object: ['76798317', 'Print']

Triple: [['__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys', '__subject__ A Glastonbury Romance __predicate__ publisher __object__ The Bodley Head']]
Text: The author of A Glastonbury Romance, published by The Bodley Head, is John Cowper Powys.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['author', 'publisher']
Object: ['John Cowper Powys', 'The Bodley Head']

Triple: [['__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys', '__subject__ A Glastonbury Romance __predicate__ publisher __object__ The Bodley Head']]
Text: The author of A Glastonbury Romance is John Cowper Powys, and it is published by The Bodley Head.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['author', 'publisher']
Object: ['John Cowper Powys', 'The Bodley Head']

Triple: [['__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys', '__subject__ A Glastonbury Romance __predicate__ publisher __object__ The Bodley Head']]
Text: John Cowper Powys is the author of A Glastonbury Romance which is published by The Bodley Head.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['author', 'publisher']
Object: ['John Cowper Powys', 'The Bodley Head']

Triple: [['__subject__ A Glastonbury Romance __predicate__ followedBy __object__ Weymouth Sands', '__subject__ Weymouth Sands __predicate__ author __object__ John Cowper Powys']]
Text: 'A Glastonbury Romance' was followed by 'Weymouth Sands' which was authored by John Cowper Powys.
Subject: ['A Glastonbury Romance', 'Weymouth Sands']
Predicate: ['followedBy', 'author']
Object: ['Weymouth Sands', 'John Cowper Powys']

Triple: [['__subject__ A Glastonbury Romance __predicate__ followedBy __object__ Weymouth Sands', '__subject__ Weymouth Sands __predicate__ author __object__ John Cowper Powys']]
Text: The book "A Glastonbury Romance" was followed by "Weymouth Sands" the author of which is John Cowper Powys.
Subject: ['A Glastonbury Romance', 'Weymouth Sands']
Predicate: ['followedBy', 'author']
Object: ['Weymouth Sands', 'John Cowper Powys']

Triple: [['__subject__ A Glastonbury Romance __predicate__ followedBy __object__ Weymouth Sands', '__subject__ Weymouth Sands __predicate__ author __object__ John Cowper Powys']]
Text: "A Glastonbury Romance" was followed by "Weymouth Sands" written by John Cowper Powys.
Subject: ['A Glastonbury Romance', 'Weymouth Sands']
Predicate: ['followedBy', 'author']
Object: ['Weymouth Sands', 'John Cowper Powys']

Triple: [['__subject__ A Glastonbury Romance __predicate__ mediaType __object__ Hardcover', '__subject__ A Glastonbury Romance __predicate__ oclcNumber __object__ 76798317']]
Text: "A Glastonbury Romance " can be found in hardcover and as the OCLC number 76798317.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['mediaType', 'oclcNumber']
Object: ['Hardcover', '76798317']

Triple: [['__subject__ A Glastonbury Romance __predicate__ mediaType __object__ Hardcover', '__subject__ A Glastonbury Romance __predicate__ oclcNumber __object__ 76798317']]
Text: A Glastonbury Romance which has the OCLC number76798317, is available in hardcover.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['mediaType', 'oclcNumber']
Object: ['Hardcover', '76798317']

Triple: [['__subject__ A Glastonbury Romance __predicate__ mediaType __object__ Hardcover', '__subject__ A Glastonbury Romance __predicate__ oclcNumber __object__ 76798317']]
Text: 'A Glastonbury Romance' has the OCLC number 76798317 and is available in hardcover.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['mediaType', 'oclcNumber']
Object: ['Hardcover', '76798317']

Triple: [['__subject__ A Glastonbury Romance __predicate__ mediaType __object__ Hardcover', '__subject__ A Glastonbury Romance __predicate__ numberOfPages __object__ 1174']]
Text: "A Glastonbury Romance " which has 1174 pages can be found in hardcover.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['mediaType', 'numberOfPages']
Object: ['Hardcover', '1174']

Triple: [['__subject__ A Glastonbury Romance __predicate__ mediaType __object__ Hardcover', '__subject__ A Glastonbury Romance __predicate__ numberOfPages __object__ 1174']]
Text: A Glastonbury Romance is available in hardcover and has 1174 pages.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['mediaType', 'numberOfPages']
Object: ['Hardcover', '1174']

Triple: [['__subject__ A Glastonbury Romance __predicate__ mediaType __object__ Hardcover', '__subject__ A Glastonbury Romance __predicate__ numberOfPages __object__ 1174']]
Text: A Glastonbury Romance, 1174 pages, is available in hardcover.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['mediaType', 'numberOfPages']
Object: ['Hardcover', '1174']

Triple: [['__subject__ A Glastonbury Romance __predicate__ numberOfPages __object__ 1174', '__subject__ A Glastonbury Romance __predicate__ isbnNumber __object__ 0-7156-3648-0']]
Text: A Glastonbury Romance has 1174 pages, and its ISBN number is 0-7156-3648-0.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['numberOfPages', 'isbnNumber']
Object: ['1174', '0-7156-3648-0']

Triple: [['__subject__ A Glastonbury Romance __predicate__ numberOfPages __object__ 1174', '__subject__ A Glastonbury Romance __predicate__ isbnNumber __object__ 0-7156-3648-0']]
Text: A Glastonbury Romance has 1174 pages and the ISBN number 0-7156-3648-0.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['numberOfPages', 'isbnNumber']
Object: ['1174', '0-7156-3648-0']

Triple: [['__subject__ A Glastonbury Romance __predicate__ numberOfPages __object__ 1174', '__subject__ A Glastonbury Romance __predicate__ isbnNumber __object__ 0-7156-3648-0']]
Text: A Glastonbury Romance with the ISBN 0-7156-3648-0 has 1174.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['numberOfPages', 'isbnNumber']
Object: ['1174', '0-7156-3648-0']

Triple: [['__subject__ A Glastonbury Romance __predicate__ precededBy __object__ Wolf Solent', '__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys']]
Text: A Glastonbury Romance is the sequel to Wolf Solent and was written by John Cowper Powys.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['precededBy', 'author']
Object: ['Wolf Solent', 'John Cowper Powys']

Triple: [['__subject__ A Glastonbury Romance __predicate__ precededBy __object__ Wolf Solent', '__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys']]
Text: A Glastonbury Romance which was preceded by Wolf Solent, was written by John Cowper Powys.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['precededBy', 'author']
Object: ['Wolf Solent', 'John Cowper Powys']

Triple: [['__subject__ A Glastonbury Romance __predicate__ precededBy __object__ Wolf Solent', '__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys']]
Text: "A Glastonbury Romance," by John Cowper Powys, was preceded by "Wolf Solent".
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['precededBy', 'author']
Object: ['Wolf Solent', 'John Cowper Powys']

Triple: [['__subject__ A Glastonbury Romance __predicate__ precededBy __object__ Wolf Solent', '__subject__ Wolf Solent __predicate__ author __object__ John Cowper Powys']]
Text: John Cowper Powys is the author of Wolf Solent which is followed by A Glastonbury Romance.
Subject: ['A Glastonbury Romance', 'Wolf Solent']
Predicate: ['precededBy', 'author']
Object: ['Wolf Solent', 'John Cowper Powys']

Triple: [['__subject__ A Glastonbury Romance __predicate__ precededBy __object__ Wolf Solent', '__subject__ Wolf Solent __predicate__ author __object__ John Cowper Powys']]
Text: A Glastonbury Romance was preceded By Wolf Solent written by John Cowper Powys.
Subject: ['A Glastonbury Romance', 'Wolf Solent']
Predicate: ['precededBy', 'author']
Object: ['Wolf Solent', 'John Cowper Powys']

Triple: [['__subject__ A Glastonbury Romance __predicate__ publisher __object__ Simon & Schuster', '__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys']]
Text: A Glastonbury Romance, which was written by John Cowper Powys, is published by Simon & Schuster.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['publisher', 'author']
Object: ['Simon & Schuster', 'John Cowper Powys']

Triple: [['__subject__ A Glastonbury Romance __predicate__ publisher __object__ Simon & Schuster', '__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys']]
Text: Simon & Schuster is the publisher of A Glastonbury Romance, written by John Cowper Powys.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['publisher', 'author']
Object: ['Simon & Schuster', 'John Cowper Powys']

Triple: [['__subject__ A Glastonbury Romance __predicate__ publisher __object__ Simon & Schuster', '__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys']]
Text: Simon & Schuster is the publisher of A Glastonbury Romance written by John Cowper Powys.
Subject: ['A Glastonbury Romance', 'A Glastonbury Romance']
Predicate: ['publisher', 'author']
Object: ['Simon & Schuster', 'John Cowper Powys']

Triple: [['__subject__ A Glastonbury Romance __predicate__ publisher __object__ The Bodley Head', '__subject__ The Bodley Head __predicate__ founder __object__ Charles Elkin Mathews']]
Text: A Glastonbury Romance is published by The Bodley Head which was founded by Charles Elkin Mathews.
Subject: ['A Glastonbury Romance', 'The Bodley Head']
Predicate: ['publisher', 'founder']
Object: ['The Bodley Head', 'Charles Elkin Mathews']

Triple: [['__subject__ A Glastonbury Romance __predicate__ publisher __object__ The Bodley Head', '__subject__ The Bodley Head __predicate__ founder __object__ Charles Elkin Mathews']]
Text: Founded by Charles Elkin Mathews, The Bodley Head published 'A Glastonbury Romance'.
Subject: ['A Glastonbury Romance', 'The Bodley Head']
Predicate: ['publisher', 'founder']
Object: ['The Bodley Head', 'Charles Elkin Mathews']

Triple: [['__subject__ A Glastonbury Romance __predicate__ publisher __object__ The Bodley Head', '__subject__ The Bodley Head __predicate__ founder __object__ Charles Elkin Mathews']]
Text: A Glastonbury Romance is published by The Bodley Head, whose founder is Charles Elkin Mathews.
Subject: ['A Glastonbury Romance', 'The Bodley Head']
Predicate: ['publisher', 'founder']
Object: ['The Bodley Head', 'Charles Elkin Mathews']

Triple: [['__subject__ A Long Long Way __predicate__ isbnNumber __object__ 0-670-03380-4', '__subject__ A Long Long Way __predicate__ mediaType __object__ Hardcover']]
Text: A Long Long Way is available in hardcover and has the ISBN number of 0-670-03380-4.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['isbnNumber', 'mediaType']
Object: ['0-670-03380-4', 'Hardcover']

Triple: [['__subject__ A Long Long Way __predicate__ isbnNumber __object__ 0-670-03380-4', '__subject__ A Long Long Way __predicate__ mediaType __object__ Hardcover']]
Text: The ISBN number of the hardcover A Long Long Way is 0-670-03380-4.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['isbnNumber', 'mediaType']
Object: ['0-670-03380-4', 'Hardcover']

Triple: [['__subject__ A Long Long Way __predicate__ isbnNumber __object__ 0-670-03380-4', '__subject__ A Long Long Way __predicate__ mediaType __object__ Hardcover']]
Text: A Long Long Way is available in hardcover and has the ISBN number 0-670-03380-4.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['isbnNumber', 'mediaType']
Object: ['0-670-03380-4', 'Hardcover']

Triple: [['__subject__ A Long Long Way __predicate__ oclcNumber __object__ 57392246', '__subject__ A Long Long Way __predicate__ mediaType __object__ Hardcover']]
Text: The OCLC number of A Long Long Way is 57392246 and is available in hardcover.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['oclcNumber', 'mediaType']
Object: ['57392246', 'Hardcover']

Triple: [['__subject__ A Long Long Way __predicate__ oclcNumber __object__ 57392246', '__subject__ A Long Long Way __predicate__ mediaType __object__ Hardcover']]
Text: The OCLC number of A Long Long Way is 57392246, which is available in hardcover.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['oclcNumber', 'mediaType']
Object: ['57392246', 'Hardcover']

Triple: [['__subject__ A Long Long Way __predicate__ oclcNumber __object__ 57392246', '__subject__ A Long Long Way __predicate__ mediaType __object__ Hardcover']]
Text: The OCLC number of A Long Long Way is 57392246, and is available in hardcover.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['oclcNumber', 'mediaType']
Object: ['57392246', 'Hardcover']

Triple: [['__subject__ A Long Long Way __predicate__ country __object__ Ireland', '__subject__ A Long Long Way __predicate__ followedBy __object__ The Secret Scripture']]
Text: The book The Secret Scripture followed the book "A Long Long Way", which comes from Ireland.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['country', 'followedBy']
Object: ['Ireland', 'The Secret Scripture']

Triple: [['__subject__ A Long Long Way __predicate__ country __object__ Ireland', '__subject__ A Long Long Way __predicate__ followedBy __object__ The Secret Scripture']]
Text: The book A Long Long Way was written in Ireland and the second book in the series is The Secret Scripture.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['country', 'followedBy']
Object: ['Ireland', 'The Secret Scripture']

Triple: [['__subject__ A Long Long Way __predicate__ country __object__ Ireland', '__subject__ A Long Long Way __predicate__ followedBy __object__ The Secret Scripture']]
Text: A Long Long Way was written in Ireland and is followed by the book The Secret Scripture.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['country', 'followedBy']
Object: ['Ireland', 'The Secret Scripture']

Triple: [['__subject__ A Long Long Way __predicate__ country __object__ Ireland', '__subject__ A Long Long Way __predicate__ publisher __object__ Viking Press']]
Text: A Long Long Way comes from Ireland and was published by Viking Press.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['country', 'publisher']
Object: ['Ireland', 'Viking Press']

Triple: [['__subject__ A Long Long Way __predicate__ country __object__ Ireland', '__subject__ A Long Long Way __predicate__ publisher __object__ Viking Press']]
Text: A Long Long Way was written in Ireland and published by Viking press.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['country', 'publisher']
Object: ['Ireland', 'Viking Press']

Triple: [['__subject__ A Long Long Way __predicate__ country __object__ Ireland', '__subject__ Ireland __predicate__ ethnicGroup __object__ White people']]
Text: A Long Long Way comes from Ireland, where the ethnic group is white.
Subject: ['A Long Long Way', 'Ireland']
Predicate: ['country', 'ethnicGroup']
Object: ['Ireland', 'White people']

Triple: [['__subject__ A Long Long Way __predicate__ country __object__ Ireland', '__subject__ Ireland __predicate__ ethnicGroup __object__ White people']]
Text: A Long Long Way was written in Ireland where the ethnic group is White people.
Subject: ['A Long Long Way', 'Ireland']
Predicate: ['country', 'ethnicGroup']
Object: ['Ireland', 'White people']

Triple: [['__subject__ A Long Long Way __predicate__ country __object__ Ireland', '__subject__ Ireland __predicate__ ethnicGroup __object__ White people']]
Text: A Long Long Way was written in Ireland where white people are an ethnic group.
Subject: ['A Long Long Way', 'Ireland']
Predicate: ['country', 'ethnicGroup']
Object: ['Ireland', 'White people']

Triple: [['__subject__ A Long Long Way __predicate__ language __object__ English language', '__subject__ English language __predicate__ spokenIn __object__ Great Britain']]
Text: A Long Long Way is written in the English language, which is spoken in Great Britain.
Subject: ['A Long Long Way', 'English language']
Predicate: ['language', 'spokenIn']
Object: ['English language', 'Great Britain']

Triple: [['__subject__ A Long Long Way __predicate__ mediaType __object__ Print  & Paperback', '__subject__ A Long Long Way __predicate__ isbnNumber __object__ 0-670-03380-4']]
Text: A Long Long Way was published in Print & Paperback and has The ISBN number of 0-670-03380-4.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['mediaType', 'isbnNumber']
Object: ['Print  & Paperback', '0-670-03380-4']

Triple: [['__subject__ A Long Long Way __predicate__ mediaType __object__ Print  & Paperback', '__subject__ A Long Long Way __predicate__ isbnNumber __object__ 0-670-03380-4']]
Text: A Long Long Way has the ISBN number 0-670-03380-4 and was published in Print & Paperback.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['mediaType', 'isbnNumber']
Object: ['Print  & Paperback', '0-670-03380-4']

Triple: [['__subject__ A Long Long Way __predicate__ mediaType __object__ Print  & Paperback', '__subject__ A Long Long Way __predicate__ isbnNumber __object__ 0-670-03380-4']]
Text: With and the ISBN number 0-670-03380-4, A Long Long Way was published in Print & Paperback.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['mediaType', 'isbnNumber']
Object: ['Print  & Paperback', '0-670-03380-4']

Triple: [['__subject__ A Long Long Way __predicate__ numberOfPages __object__ 292', '__subject__ A Long Long Way __predicate__ mediaType __object__ Print  & Paperback']]
Text: A Long Long Way is 292 pages long and was published in print & paperback.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['numberOfPages', 'mediaType']
Object: ['292', 'Print  & Paperback']

Triple: [['__subject__ A Long Long Way __predicate__ numberOfPages __object__ 292', '__subject__ A Long Long Way __predicate__ mediaType __object__ Hardcover']]
Text: A Long Long Way is available in hardcover and has 292 pages.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['numberOfPages', 'mediaType']
Object: ['292', 'Hardcover']

Triple: [['__subject__ A Long Long Way __predicate__ numberOfPages __object__ 292', '__subject__ A Long Long Way __predicate__ mediaType __object__ Hardcover']]
Text: Available in hardcover, A Long Long Way is 292 pages in length.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['numberOfPages', 'mediaType']
Object: ['292', 'Hardcover']

Triple: [['__subject__ A Long Long Way __predicate__ numberOfPages __object__ 292', '__subject__ A Long Long Way __predicate__ mediaType __object__ Hardcover']]
Text: The 292-page A Long, Long Way is available in hardcover.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['numberOfPages', 'mediaType']
Object: ['292', 'Hardcover']

Triple: [['__subject__ A Long Long Way __predicate__ precededBy __object__ Annie Dunne', '__subject__ A Long Long Way __predicate__ followedBy __object__ The Secret Scripture']]
Text: The novel A Long Long Way was preceded by Annie Dunne and followed by The Secret Scripture.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['precededBy', 'followedBy']
Object: ['Annie Dunne', 'The Secret Scripture']

Triple: [['__subject__ A Long Long Way __predicate__ precededBy __object__ Annie Dunne', '__subject__ A Long Long Way __predicate__ followedBy __object__ The Secret Scripture']]
Text: "The Secret Scripture" followed the book "A Long Long Way," which was preceded by "Annie Dunne".
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['precededBy', 'followedBy']
Object: ['Annie Dunne', 'The Secret Scripture']

Triple: [['__subject__ A Long Long Way __predicate__ precededBy __object__ Annie Dunne', '__subject__ A Long Long Way __predicate__ followedBy __object__ The Secret Scripture']]
Text: Annie Dunne was followed by A Long Long Way and The Secret Scripture.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['precededBy', 'followedBy']
Object: ['Annie Dunne', 'The Secret Scripture']

Triple: [['__subject__ A Long Long Way __predicate__ publisher __object__ Viking Press', '__subject__ A Long Long Way __predicate__ followedBy __object__ The Secret Scripture']]
Text: The book, "A Long, Long Way," published by Viking Press, was followed by "The Secret Scripture".
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['publisher', 'followedBy']
Object: ['Viking Press', 'The Secret Scripture']

Triple: [['__subject__ A Long Long Way __predicate__ publisher __object__ Viking Press', '__subject__ A Long Long Way __predicate__ followedBy __object__ The Secret Scripture']]
Text: The book "A Long, Long Way," which was followed by "The Secret Scripture," is published by Viking Press.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['publisher', 'followedBy']
Object: ['Viking Press', 'The Secret Scripture']

Triple: [['__subject__ A Long Long Way __predicate__ publisher __object__ Viking Press', '__subject__ A Long Long Way __predicate__ followedBy __object__ The Secret Scripture']]
Text: Published by Viking Press, the novel A Long Long Way was followed by The Secret Scripture.
Subject: ['A Long Long Way', 'A Long Long Way']
Predicate: ['publisher', 'followedBy']
Object: ['Viking Press', 'The Secret Scripture']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ isbnNumber __object__ 1-56947-301-3', '__subject__ A Loyal Character Dancer __predicate__ numberOfPages __object__ 360']]
Text: The book A Loyal Character Dancer has 360 pages and the ISBN number of 1-56947-301-3.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['isbnNumber', 'numberOfPages']
Object: ['1-56947-301-3', '360']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ isbnNumber __object__ 1-56947-301-3', '__subject__ A Loyal Character Dancer __predicate__ numberOfPages __object__ 360']]
Text: The book, A Loyal Character Dancer, has the ISBN number of 1-56947-301-3 which has 360 pages.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['isbnNumber', 'numberOfPages']
Object: ['1-56947-301-3', '360']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ isbnNumber __object__ 1-56947-301-3', '__subject__ A Loyal Character Dancer __predicate__ numberOfPages __object__ 360']]
Text: The 360-page "A Loyal Character Dancer," has the ISBN number of 1-56947-301-3.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['isbnNumber', 'numberOfPages']
Object: ['1-56947-301-3', '360']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ author __object__ Qiu Xiaolong', '__subject__ A Loyal Character Dancer __predicate__ isbnNumber __object__ 1-56947-301-3']]
Text: The book A Loyal Character Dancer was written by Qiu Xiaolong and has the ISBN number of 1-56947-301-3.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['author', 'isbnNumber']
Object: ['Qiu Xiaolong', '1-56947-301-3']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ author __object__ Qiu Xiaolong', '__subject__ A Loyal Character Dancer __predicate__ isbnNumber __object__ 1-56947-301-3']]
Text: A Loyal Character Dancer, written by Qiu Xiaolong, has ISBN:1-56947-301-3.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['author', 'isbnNumber']
Object: ['Qiu Xiaolong', '1-56947-301-3']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ author __object__ Qiu Xiaolong', '__subject__ A Loyal Character Dancer __predicate__ isbnNumber __object__ 1-56947-301-3']]
Text: Qiu Xiaolong is the author of A Loyal Character Dancer, with ISBN number 1-56947-301-3.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['author', 'isbnNumber']
Object: ['Qiu Xiaolong', '1-56947-301-3']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ author __object__ Qiu Xiaolong', '__subject__ A Loyal Character Dancer __predicate__ oclcNumber __object__ 49805501']]
Text: The OCLC number of A Loyal Character Dancer penned by Qiu Xiaolong is 49805501.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['author', 'oclcNumber']
Object: ['Qiu Xiaolong', '49805501']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ author __object__ Qiu Xiaolong', '__subject__ A Loyal Character Dancer __predicate__ oclcNumber __object__ 49805501']]
Text: A Loyal Character Dancer, written by Qiu Xiaolong, has the OCLC number 49805501.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['author', 'oclcNumber']
Object: ['Qiu Xiaolong', '49805501']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ author __object__ Qiu Xiaolong', '__subject__ A Loyal Character Dancer __predicate__ oclcNumber __object__ 49805501']]
Text: Qiu Xiaolong is the author of A Loyal Character Dancer, OCLC number 49805501.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['author', 'oclcNumber']
Object: ['Qiu Xiaolong', '49805501']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ author __object__ Qiu Xiaolong', '__subject__ A Loyal Character Dancer __predicate__ mediaType __object__ Hardcover']]
Text: A Loyal Character Dancer can be found in hardcover and was penned by Qiu Xiaolong.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['author', 'mediaType']
Object: ['Qiu Xiaolong', 'Hardcover']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ author __object__ Qiu Xiaolong', '__subject__ A Loyal Character Dancer __predicate__ mediaType __object__ Hardcover']]
Text: A Loyal Character Dancer written by Qiu Xiaolong can be found in hardcover.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['author', 'mediaType']
Object: ['Qiu Xiaolong', 'Hardcover']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ author __object__ Qiu Xiaolong', '__subject__ A Loyal Character Dancer __predicate__ mediaType __object__ Hardcover']]
Text: 'A Loyal Character Dancer' was written by Qiu Xiaolong and published in hardcover.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['author', 'mediaType']
Object: ['Qiu Xiaolong', 'Hardcover']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: A Loyal Character Dancer is published in the United States, the capital of which is Washington D.C.
Subject: ['A Loyal Character Dancer', 'United States']
Predicate: ['country', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: A Loyal Character Dancer is published in the United States, the capital of which is Washington, D. C.
Subject: ['A Loyal Character Dancer', 'United States']
Predicate: ['country', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States', '__subject__ United States __predicate__ capital __object__ Washington, D.C.']]
Text: A Loyal Character Dancer is published in the United States which has as its capital Washington D. C.
Subject: ['A Loyal Character Dancer', 'United States']
Predicate: ['country', 'capital']
Object: ['United States', 'Washington, D.C.']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: A Loyal Character Dancer is published in the United States where one of the ethnic groups is African American.
Subject: ['A Loyal Character Dancer', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: A Loyal Character Dancer is published in the United States, where the African Americans are an ethnic group.
Subject: ['A Loyal Character Dancer', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: In almost unrelated facts both the Native Americans ethnic group and the book A Loyal Character Dancer originate in the USA.
Subject: ['A Loyal Character Dancer', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: A Loyal Character Dancer is published in the United States, a country where the original ethnic group is Native American.
Subject: ['A Loyal Character Dancer', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States', '__subject__ United States __predicate__ language __object__ English language']]
Text: A Loyal Character Dancer is published in the United States where English is the language.
Subject: ['A Loyal Character Dancer', 'United States']
Predicate: ['country', 'language']
Object: ['United States', 'English language']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States', '__subject__ United States __predicate__ language __object__ English language']]
Text: A Loyal Character Dancer is published in the United States, a country whose official language is English.
Subject: ['A Loyal Character Dancer', 'United States']
Predicate: ['country', 'language']
Object: ['United States', 'English language']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States', '__subject__ United States __predicate__ language __object__ English language']]
Text: A Loyal Character Dancer is published in the United States, where the language is English.
Subject: ['A Loyal Character Dancer', 'United States']
Predicate: ['country', 'language']
Object: ['United States', 'English language']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Barack Obama']]
Text: A Loyal Character Dancer is published in the United States, where Barack Obama is the leader.
Subject: ['A Loyal Character Dancer', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Barack Obama']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Barack Obama']]
Text: A Loyal Character Dancer is published in the United States where Barack Obama is the president.
Subject: ['A Loyal Character Dancer', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Barack Obama']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States', '__subject__ United States __predicate__ leader __object__ Barack Obama']]
Text: A Loyal Character Dancer is published in the United States, which has Barack Obama as leader.
Subject: ['A Loyal Character Dancer', 'United States']
Predicate: ['country', 'leader']
Object: ['United States', 'Barack Obama']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States', '__subject__ United States __predicate__ leaderTitle __object__ President of the United States']]
Text: A Loyal Character Dancer is published in the United States where the leader is known as the President.
Subject: ['A Loyal Character Dancer', 'United States']
Predicate: ['country', 'leaderTitle']
Object: ['United States', 'President of the United States']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States', '__subject__ United States __predicate__ leaderTitle __object__ President of the United States']]
Text: A Loyal Character Dancer is published in the United States which is, unrelatedly, led by a president.
Subject: ['A Loyal Character Dancer', 'United States']
Predicate: ['country', 'leaderTitle']
Object: ['United States', 'President of the United States']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States', '__subject__ United States __predicate__ leaderTitle __object__ President of the United States']]
Text: A Loyal Character Dancer is published in the United States, where the leader is known as the President.
Subject: ['A Loyal Character Dancer', 'United States']
Predicate: ['country', 'leaderTitle']
Object: ['United States', 'President of the United States']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ language __object__ English language', '__subject__ A Loyal Character Dancer __predicate__ country __object__ United States']]
Text: A Loyal Character Dancer is written in English and published in the United States.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ language __object__ English language', '__subject__ A Loyal Character Dancer __predicate__ country __object__ United States']]
Text: A Loyal Character Dancer, written in English, is published in the United States.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ language __object__ English language', '__subject__ A Loyal Character Dancer __predicate__ country __object__ United States']]
Text: A Loyal Character Dancer is published in the United States and is written in English.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ language __object__ English language', '__subject__ English language __predicate__ spokenIn __object__ Great Britain']]
Text: A Loyal Character Dancer is written in English which is the language spoken in Great Britain.
Subject: ['A Loyal Character Dancer', 'English language']
Predicate: ['language', 'spokenIn']
Object: ['English language', 'Great Britain']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ language __object__ English language', '__subject__ English language __predicate__ spokenIn __object__ Great Britain']]
Text: A Loyal Character Dancer is written in English, which is spoken in Great Britain.
Subject: ['A Loyal Character Dancer', 'English language']
Predicate: ['language', 'spokenIn']
Object: ['English language', 'Great Britain']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ mediaType __object__ Print', '__subject__ A Loyal Character Dancer __predicate__ isbnNumber __object__ 1-56947-301-3']]
Text: A Loyal Character Dancer is in print and has the ISBN number of 1-56947-301-3.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['mediaType', 'isbnNumber']
Object: ['Print', '1-56947-301-3']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ publisher __object__ Soho Press', '__subject__ A Loyal Character Dancer __predicate__ country __object__ United States']]
Text: A loyal Character Dancer is published by Soho Press which is based in the United States.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['publisher', 'country']
Object: ['Soho Press', 'United States']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ publisher __object__ Soho Press', '__subject__ A Loyal Character Dancer __predicate__ country __object__ United States']]
Text: A Loyal Character Dancer was published by Soho Press in the United States.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['publisher', 'country']
Object: ['Soho Press', 'United States']

Triple: [['__subject__ A Loyal Character Dancer __predicate__ publisher __object__ Soho Press', '__subject__ A Loyal Character Dancer __predicate__ country __object__ United States']]
Text: A Loyal Character Dancer is published in the United States by Soho Press.
Subject: ['A Loyal Character Dancer', 'A Loyal Character Dancer']
Predicate: ['publisher', 'country']
Object: ['Soho Press', 'United States']

Triple: [['__subject__ A Severed Wasp __predicate__ isbnNumber __object__ 0-374-26131-8', '__subject__ A Severed Wasp __predicate__ mediaType __object__ Hardcover']]
Text: A Severed Wasp has an ISBN number of "0-374-26131-8 and is a hardcover book.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['isbnNumber', 'mediaType']
Object: ['0-374-26131-8', 'Hardcover']

Triple: [['__subject__ A Severed Wasp __predicate__ isbnNumber __object__ 0-374-26131-8', '__subject__ A Severed Wasp __predicate__ mediaType __object__ Hardcover']]
Text: A Severed Wasp is a hardcover book with the ISBN number 0-374-26131-8.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['isbnNumber', 'mediaType']
Object: ['0-374-26131-8', 'Hardcover']

Triple: [['__subject__ A Severed Wasp __predicate__ isbnNumber __object__ 0-374-26131-8', '__subject__ A Severed Wasp __predicate__ mediaType __object__ Hardcover']]
Text: A Severed Wasp, published in hardback, has the ISBN number 0-374-26131-8.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['isbnNumber', 'mediaType']
Object: ['0-374-26131-8', 'Hardcover']

Triple: [['__subject__ A Severed Wasp __predicate__ oclcNumber __object__ 8805735', '__subject__ A Severed Wasp __predicate__ mediaType __object__ Print']]
Text: Assigned the OCLC number 8805735, 'A Severed Wasp' can be found in print.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['oclcNumber', 'mediaType']
Object: ['8805735', 'Print']

Triple: [['__subject__ A Severed Wasp __predicate__ oclcNumber __object__ 8805735', '__subject__ A Severed Wasp __predicate__ mediaType __object__ Print']]
Text: A Severed Wasp, available in print has the OCLC number 8805735.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['oclcNumber', 'mediaType']
Object: ['8805735', 'Print']

Triple: [['__subject__ A Severed Wasp __predicate__ oclcNumber __object__ 8805735', '__subject__ A Severed Wasp __predicate__ mediaType __object__ Print']]
Text: The book "A Severed Wasp," with OCLC number 8805735, is currently in print.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['oclcNumber', 'mediaType']
Object: ['8805735', 'Print']

Triple: [["__subject__ A Severed Wasp __predicate__ author __object__ Madeleine L'Engle", "__subject__ Madeleine L'Engle __predicate__ influencedBy __object__ George MacDonald"]]
Text: Madeleine L'Engle is an author, influenced by George MacDonald, who wrote A Severed Wasp.
Subject: ['A Severed Wasp', "Madeleine L'Engle"]
Predicate: ['author', 'influencedBy']
Object: ["Madeleine L'Engle", 'George MacDonald']

Triple: [["__subject__ A Severed Wasp __predicate__ author __object__ Madeleine L'Engle", "__subject__ Madeleine L'Engle __predicate__ influencedBy __object__ George MacDonald"]]
Text: Madeleine L'Engle, author of A Severed Wasp, was influenced by George MacDonald.
Subject: ['A Severed Wasp', "Madeleine L'Engle"]
Predicate: ['author', 'influencedBy']
Object: ["Madeleine L'Engle", 'George MacDonald']

Triple: [["__subject__ A Severed Wasp __predicate__ author __object__ Madeleine L'Engle", "__subject__ Madeleine L'Engle __predicate__ influencedBy __object__ George MacDonald"]]
Text: Madeleine L'Engle who is influenced by George Macdonald wrote "A Severed Wasp".
Subject: ['A Severed Wasp', "Madeleine L'Engle"]
Predicate: ['author', 'influencedBy']
Object: ["Madeleine L'Engle", 'George MacDonald']

Triple: [['__subject__ A Severed Wasp __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: A Severed Wasp is from the United States where one of the ethnic groups is African American.
Subject: ['A Severed Wasp', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ A Severed Wasp __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: A Severed Wasp is from the United States, which counts African Americans among its ethnic groups.
Subject: ['A Severed Wasp', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ A Severed Wasp __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: A severed Wasp originates from the United States, where the African Americans are an ethnic group.
Subject: ['A Severed Wasp', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ A Severed Wasp __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: A Severed Wasp is from the United States where the Native Americans are an ethnic group.
Subject: ['A Severed Wasp', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ A Severed Wasp __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: 'A Severed Wasp' is from the United States, a country where Native Americans are one of the ethnic groups.
Subject: ['A Severed Wasp', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ A Severed Wasp __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: A severed Wasp originates from the United States, a country where one of the ethnic groups is Native Americans.
Subject: ['A Severed Wasp', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ A Severed Wasp __predicate__ language __object__ English language', '__subject__ A Severed Wasp __predicate__ country __object__ United States']]
Text: A Severed Wasp, published in the United States is in the English language.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ A Severed Wasp __predicate__ language __object__ English language', '__subject__ A Severed Wasp __predicate__ country __object__ United States']]
Text: A Severed Wasp, from the United States, was written in the English language.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ A Severed Wasp __predicate__ language __object__ English language', '__subject__ A Severed Wasp __predicate__ country __object__ United States']]
Text: A Severed Wasp originates from the United States and is written in the English language.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ A Severed Wasp __predicate__ numberOfPages __object__ 388', '__subject__ A Severed Wasp __predicate__ isbnNumber __object__ 0-374-26131-8']]
Text: The 388-page "A Severed Wasp" has an ISBN number of "0-374-26131-8.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['numberOfPages', 'isbnNumber']
Object: ['388', '0-374-26131-8']

Triple: [['__subject__ A Severed Wasp __predicate__ numberOfPages __object__ 388', '__subject__ A Severed Wasp __predicate__ isbnNumber __object__ 0-374-26131-8']]
Text: A Severed Wasp has an ISBN number of "0-374-26131-8" and has 388 pages.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['numberOfPages', 'isbnNumber']
Object: ['388', '0-374-26131-8']

Triple: [['__subject__ A Severed Wasp __predicate__ numberOfPages __object__ 388', '__subject__ A Severed Wasp __predicate__ mediaType __object__ Print']]
Text: A book called A Severed Wasp has 388 pages in total and appeared in print.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['numberOfPages', 'mediaType']
Object: ['388', 'Print']

Triple: [['__subject__ A Severed Wasp __predicate__ numberOfPages __object__ 388', '__subject__ A Severed Wasp __predicate__ mediaType __object__ Print']]
Text: A Severed Wasp has 388 pages and is available in print.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['numberOfPages', 'mediaType']
Object: ['388', 'Print']

Triple: [['__subject__ A Severed Wasp __predicate__ numberOfPages __object__ 388', '__subject__ A Severed Wasp __predicate__ mediaType __object__ Print']]
Text: The book "A Severed Wasp" is available in print and has 388 pages.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['numberOfPages', 'mediaType']
Object: ['388', 'Print']

Triple: [['__subject__ A Severed Wasp __predicate__ numberOfPages __object__ 388', '__subject__ A Severed Wasp __predicate__ mediaType __object__ Hardcover']]
Text: A severed Wasp, a 388-page book, was published in hardback.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['numberOfPages', 'mediaType']
Object: ['388', 'Hardcover']

Triple: [['__subject__ A Severed Wasp __predicate__ numberOfPages __object__ 388', '__subject__ A Severed Wasp __predicate__ mediaType __object__ Hardcover']]
Text: A Severed Wasp was published in hardback and has 388 pages.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['numberOfPages', 'mediaType']
Object: ['388', 'Hardcover']

Triple: [['__subject__ A Severed Wasp __predicate__ numberOfPages __object__ 388', '__subject__ A Severed Wasp __predicate__ mediaType __object__ Hardcover']]
Text: There are 388 pages in the book "A Severed Wasp" which was published in hardback.
Subject: ['A Severed Wasp', 'A Severed Wasp']
Predicate: ['numberOfPages', 'mediaType']
Object: ['388', 'Hardcover']

Triple: [['__subject__ A Severed Wasp __predicate__ publisher __object__ Farrar, Straus and Giroux', '__subject__ Farrar, Straus and Giroux __predicate__ parentCompany __object__ Macmillan Publishers']]
Text: Macmillan Publishers is the parent company of Farrar, Straus and Giroux who published A severed wasp.
Subject: ['A Severed Wasp', 'Farrar, Straus and Giroux']
Predicate: ['publisher', 'parentCompany']
Object: ['Farrar, Straus and Giroux', 'Macmillan Publishers']

Triple: [['__subject__ A Severed Wasp __predicate__ publisher __object__ Farrar, Straus and Giroux', '__subject__ Farrar, Straus and Giroux __predicate__ parentCompany __object__ Macmillan Publishers']]
Text: A Severed Wasp was published by Farrar, Straus, and Giroux, a subsidiary of Macmillan Publishers.
Subject: ['A Severed Wasp', 'Farrar, Straus and Giroux']
Predicate: ['publisher', 'parentCompany']
Object: ['Farrar, Straus and Giroux', 'Macmillan Publishers']

Triple: [['__subject__ A Severed Wasp __predicate__ publisher __object__ Farrar, Straus and Giroux', '__subject__ Farrar, Straus and Giroux __predicate__ parentCompany __object__ Macmillan Publishers']]
Text: A Severed Wasp was published by Farrar, Straus, and Giroux which is a subsidiary of Macmillan Publishers.
Subject: ['A Severed Wasp', 'Farrar, Straus and Giroux']
Predicate: ['publisher', 'parentCompany']
Object: ['Farrar, Straus and Giroux', 'Macmillan Publishers']

Triple: [['__subject__ A Wizard of Mars __predicate__ author __object__ Diane Duane', '__subject__ A Wizard of Mars __predicate__ isbnNumber __object__ 978-0-15-204770-2']]
Text: A Wizard of Mars was written by Diane Duane, and has the ISBN number 978-0-15-204770-2.
Subject: ['A Wizard of Mars', 'A Wizard of Mars']
Predicate: ['author', 'isbnNumber']
Object: ['Diane Duane', '978-0-15-204770-2']

Triple: [['__subject__ A Wizard of Mars __predicate__ author __object__ Diane Duane', '__subject__ A Wizard of Mars __predicate__ isbnNumber __object__ 978-0-15-204770-2']]
Text: "A Wizard of Mars" by Diane Duane has ISBN number 978-0-15-204770-2.
Subject: ['A Wizard of Mars', 'A Wizard of Mars']
Predicate: ['author', 'isbnNumber']
Object: ['Diane Duane', '978-0-15-204770-2']

Triple: [['__subject__ A Wizard of Mars __predicate__ author __object__ Diane Duane', '__subject__ A Wizard of Mars __predicate__ isbnNumber __object__ 978-0-15-204770-2']]
Text: The author Diane Duane wrote the book A wizard of Mars, which can be found under the ISBN "978-0-15-204770-2".
Subject: ['A Wizard of Mars', 'A Wizard of Mars']
Predicate: ['author', 'isbnNumber']
Object: ['Diane Duane', '978-0-15-204770-2']

Triple: [['__subject__ A Wizard of Mars __predicate__ author __object__ Diane Duane', '__subject__ A Wizard of Mars __predicate__ mediaType __object__ Print']]
Text: Diane Duane wrote A Wizard of Mars which is available in print form.
Subject: ['A Wizard of Mars', 'A Wizard of Mars']
Predicate: ['author', 'mediaType']
Object: ['Diane Duane', 'Print']

Triple: [['__subject__ A Wizard of Mars __predicate__ author __object__ Diane Duane', '__subject__ A Wizard of Mars __predicate__ mediaType __object__ Print']]
Text: A Wizard of Mars was written by Diane Duane and is available in print form.
Subject: ['A Wizard of Mars', 'A Wizard of Mars']
Predicate: ['author', 'mediaType']
Object: ['Diane Duane', 'Print']

Triple: [['__subject__ A Wizard of Mars __predicate__ author __object__ Diane Duane', '__subject__ A Wizard of Mars __predicate__ mediaType __object__ Print']]
Text: Diane Duane authored A Wizard of Mars which was published in print.
Subject: ['A Wizard of Mars', 'A Wizard of Mars']
Predicate: ['author', 'mediaType']
Object: ['Diane Duane', 'Print']

Triple: [['__subject__ A Wizard of Mars __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Native Americans are an ethnic group located in the US where A Wizard of Mars originates from.
Subject: ['A Wizard of Mars', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ A Wizard of Mars __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: A Wizard of Mars is American Literature. Native Americans are the original ethnic group of that country.
Subject: ['A Wizard of Mars', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ A Wizard of Mars __predicate__ language __object__ English language', '__subject__ A Wizard of Mars __predicate__ country __object__ United States']]
Text: A Wizard of Mars was published in the United States in English.
Subject: ['A Wizard of Mars', 'A Wizard of Mars']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ A Wizard of Mars __predicate__ language __object__ English language', '__subject__ A Wizard of Mars __predicate__ country __object__ United States']]
Text: A Wizard of Mars is published in English and originates from the United States.
Subject: ['A Wizard of Mars', 'A Wizard of Mars']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ A Wizard of Mars __predicate__ language __object__ English language', '__subject__ English language __predicate__ spokenIn __object__ Great Britain']]
Text: A Wizard of Mars is published in English, the language that is spoken in Great Britain.
Subject: ['A Wizard of Mars', 'English language']
Predicate: ['language', 'spokenIn']
Object: ['English language', 'Great Britain']

Triple: [['__subject__ A Wizard of Mars __predicate__ language __object__ English language', '__subject__ English language __predicate__ spokenIn __object__ Great Britain']]
Text: A Wizard of Mars is written in English which is spoken in Great Britain.
Subject: ['A Wizard of Mars', 'English language']
Predicate: ['language', 'spokenIn']
Object: ['English language', 'Great Britain']

Triple: [['__subject__ A Wizard of Mars __predicate__ language __object__ English language', '__subject__ English language __predicate__ spokenIn __object__ Great Britain']]
Text: A Wizard of Mars is written in English, a language spoken in Great Britain.
Subject: ['A Wizard of Mars', 'English language']
Predicate: ['language', 'spokenIn']
Object: ['English language', 'Great Britain']

Triple: [['__subject__ A Wizard of Mars __predicate__ mediaType __object__ Hardcover', '__subject__ A Wizard of Mars __predicate__ author __object__ Diane Duane']]
Text: A Wizard of Mars, written by Diane Duane is published in Hardcover.
Subject: ['A Wizard of Mars', 'A Wizard of Mars']
Predicate: ['mediaType', 'author']
Object: ['Hardcover', 'Diane Duane']

Triple: [['__subject__ A Wizard of Mars __predicate__ mediaType __object__ Hardcover', '__subject__ A Wizard of Mars __predicate__ author __object__ Diane Duane']]
Text: A Wizard of Mars is published in Hardcover and the author was Diane Duane.
Subject: ['A Wizard of Mars', 'A Wizard of Mars']
Predicate: ['mediaType', 'author']
Object: ['Hardcover', 'Diane Duane']

Triple: [['__subject__ A Wizard of Mars __predicate__ mediaType __object__ Hardcover', '__subject__ A Wizard of Mars __predicate__ author __object__ Diane Duane']]
Text: A Wizard of Mars, which was written by Diane Duane, was published in hardback.
Subject: ['A Wizard of Mars', 'A Wizard of Mars']
Predicate: ['mediaType', 'author']
Object: ['Hardcover', 'Diane Duane']

Triple: [['__subject__ A Wizard of Mars __predicate__ publisher __object__ Harcourt (publisher)', '__subject__ A Wizard of Mars __predicate__ precededBy __object__ Wizards at War']]
Text: A Wizard of Mars, published by Harcourt, was preceded by Wizards at War.
Subject: ['A Wizard of Mars', 'A Wizard of Mars']
Predicate: ['publisher', 'precededBy']
Object: ['Harcourt (publisher)', 'Wizards at War']

Triple: [['__subject__ A Wizard of Mars __predicate__ publisher __object__ Harcourt (publisher)', '__subject__ A Wizard of Mars __predicate__ precededBy __object__ Wizards at War']]
Text: Harcourt is the publisher of A Wizard of Mars, which was preceded by Wizards at War.
Subject: ['A Wizard of Mars', 'A Wizard of Mars']
Predicate: ['publisher', 'precededBy']
Object: ['Harcourt (publisher)', 'Wizards at War']

Triple: [['__subject__ A Wizard of Mars __predicate__ publisher __object__ Harcourt (publisher)', '__subject__ A Wizard of Mars __predicate__ precededBy __object__ Wizards at War']]
Text: Wizards at War preceded A Wizard of Mars which was published by Harcourt.
Subject: ['A Wizard of Mars', 'A Wizard of Mars']
Predicate: ['publisher', 'precededBy']
Object: ['Harcourt (publisher)', 'Wizards at War']

Triple: [['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ issnNumber __object__ 0025-5858', '__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ abbreviation __object__ Abh. Math. Semin. Univ. Hambg.']]
Text: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg can be located by the ISSN number "0025-5858" and has the abbreviation Abh. Math. Semin. Univ. Hambg.
Subject: ['Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg', 'Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg']
Predicate: ['issnNumber', 'abbreviation']
Object: ['0025-5858', 'Abh. Math. Semin. Univ. Hambg.']

Triple: [['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ issnNumber __object__ 0025-5858', '__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ abbreviation __object__ Abh. Math. Semin. Univ. Hambg.']]
Text: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg, ISSN 0025-5858 can be shortened to Abh. Math. Semin. Univ. Hambg.
Subject: ['Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg', 'Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg']
Predicate: ['issnNumber', 'abbreviation']
Object: ['0025-5858', 'Abh. Math. Semin. Univ. Hambg.']

Triple: [['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ issnNumber __object__ 0025-5858', '__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ abbreviation __object__ Abh. Math. Semin. Univ. Hambg.']]
Text: The ISSN number for Abhandlungen aus dem Mathematischen Seminar der Universitat Hamburg (abbreviating to Abh. Math. Semin. Univ. Hambg.) is 0025-5858.
Subject: ['Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg', 'Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg']
Predicate: ['issnNumber', 'abbreviation']
Object: ['0025-5858', 'Abh. Math. Semin. Univ. Hambg.']

Triple: [['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ LCCN number __object__ 32024459', '__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ abbreviation __object__ Abh. Math. Semin. Univ. Hambg.']]
Text: With a LCCN number 32024459, Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg abbreviated form is Abh.Math.Semin.Univ.Hambg.
Subject: ['Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg', 'Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg']
Predicate: ['LCCN number', 'abbreviation']
Object: ['32024459', 'Abh. Math. Semin. Univ. Hambg.']

Triple: [['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ LCCN number __object__ 32024459', '__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ abbreviation __object__ Abh. Math. Semin. Univ. Hambg.']]
Text: With the LCCN number 32024459, Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg has the abbreviation Abh. Math. Semin. Univ. Hambg.
Subject: ['Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg', 'Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg']
Predicate: ['LCCN number', 'abbreviation']
Object: ['32024459', 'Abh. Math. Semin. Univ. Hambg.']

Triple: [['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ LCCN number __object__ 32024459', '__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ abbreviation __object__ Abh. Math. Semin. Univ. Hambg.']]
Text: The LCCN number of Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg (abbreviated to Abh. Math. Semin. Univ. Hambg) is 32024459.
Subject: ['Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg', 'Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg']
Predicate: ['LCCN number', 'abbreviation']
Object: ['32024459', 'Abh. Math. Semin. Univ. Hambg.']

Triple: [['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ abbreviation __object__ Abh. Math. Semin. Univ. Hambg.', '__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ codenCode __object__ AMHAAJ']]
Text: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg, which has the abbreviation Abh.Math.Semin.Univ.Hambg, has the CODEN code AMHAAJ.
Subject: ['Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg', 'Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg']
Predicate: ['abbreviation', 'codenCode']
Object: ['Abh. Math. Semin. Univ. Hambg.', 'AMHAAJ']

Triple: [['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ abbreviation __object__ Abh. Math. Semin. Univ. Hambg.', '__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ codenCode __object__ AMHAAJ']]
Text: The CODEN code for Abhandlungen aus dem Mathematischen Seminar der Universitat Hamburg (abbreviating to Abh. Math. Semin. Univ. Hambg.) is AMHAAJ.
Subject: ['Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg', 'Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg']
Predicate: ['abbreviation', 'codenCode']
Object: ['Abh. Math. Semin. Univ. Hambg.', 'AMHAAJ']

Triple: [['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ academicDiscipline __object__ Pure mathematics', '__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ abbreviation __object__ Abh. Math. Semin. Univ. Hambg.']]
Text: "Abh.Math.Semin.Univ.Hambg" is the abbreviation for Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg and is concerned with the academic discipline of Pure Mathematics.
Subject: ['Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg', 'Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg']
Predicate: ['academicDiscipline', 'abbreviation']
Object: ['Pure mathematics', 'Abh. Math. Semin. Univ. Hambg.']

Triple: [['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ academicDiscipline __object__ Pure mathematics', '__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ abbreviation __object__ Abh. Math. Semin. Univ. Hambg.']]
Text: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg (abbreviating to Abh. Math. Semin. Univ. Hambg.) is concerned with the academic discipline of Pure Mathematics.
Subject: ['Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg', 'Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg']
Predicate: ['academicDiscipline', 'abbreviation']
Object: ['Pure mathematics', 'Abh. Math. Semin. Univ. Hambg.']

Triple: [['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ academicDiscipline __object__ Pure mathematics', '__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ abbreviation __object__ Abh. Math. Semin. Univ. Hambg.']]
Text: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg, or Abh. Math. Semin. Univ. Hambg. for short, is about the academic discipline of Pure Mathematics.
Subject: ['Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg', 'Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg']
Predicate: ['academicDiscipline', 'abbreviation']
Object: ['Pure mathematics', 'Abh. Math. Semin. Univ. Hambg.']

Triple: [['__subject__ Above the Veil __predicate__ oclcNumber __object__ 46451790', '__subject__ Above the Veil __predicate__ author __object__ Garth Nix']]
Text: 'Above the Veil' authored by Garth Nix has a OCLC number of 46451790.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['oclcNumber', 'author']
Object: ['46451790', 'Garth Nix']

Triple: [['__subject__ Above the Veil __predicate__ oclcNumber __object__ 46451790', '__subject__ Above the Veil __predicate__ author __object__ Garth Nix']]
Text: Above the Veil has the OCLC number 46451790 and was written by Garth Nix.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['oclcNumber', 'author']
Object: ['46451790', 'Garth Nix']

Triple: [['__subject__ Above the Veil __predicate__ oclcNumber __object__ 46451790', '__subject__ Above the Veil __predicate__ author __object__ Garth Nix']]
Text: 'Above the Veil' which was written by Garth Nix, has the OCLC number 46451790.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['oclcNumber', 'author']
Object: ['46451790', 'Garth Nix']

Triple: [['__subject__ Above the Veil __predicate__ author __object__ Garth Nix', '__subject__ Above the Veil __predicate__ isbnNumber __object__ 0-439-17685-9']]
Text: Garth Nix is the author of "Above the Veil," ISBN number 0-439-17685-9.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['author', 'isbnNumber']
Object: ['Garth Nix', '0-439-17685-9']

Triple: [['__subject__ Above the Veil __predicate__ author __object__ Garth Nix', '__subject__ Above the Veil __predicate__ isbnNumber __object__ 0-439-17685-9']]
Text: Above the Veil, ISBN number 0-439-17685-9, is written by Garth Nix.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['author', 'isbnNumber']
Object: ['Garth Nix', '0-439-17685-9']

Triple: [['__subject__ Above the Veil __predicate__ author __object__ Garth Nix', '__subject__ Above the Veil __predicate__ isbnNumber __object__ 0-439-17685-9']]
Text: The author of Above the Veil is Garth Nix and has the ISBN number 0-439-17685-9.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['author', 'isbnNumber']
Object: ['Garth Nix', '0-439-17685-9']

Triple: [['__subject__ Above the Veil __predicate__ author __object__ Garth Nix', '__subject__ Above the Veil __predicate__ mediaType __object__ Print']]
Text: Above the Veil a book produced in Print was authored by Garth Nix.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['author', 'mediaType']
Object: ['Garth Nix', 'Print']

Triple: [['__subject__ Above the Veil __predicate__ author __object__ Garth Nix', '__subject__ Above the Veil __predicate__ mediaType __object__ Print']]
Text: Garth Nix is the author of Above the Veil which was produced in print.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['author', 'mediaType']
Object: ['Garth Nix', 'Print']

Triple: [['__subject__ Above the Veil __predicate__ author __object__ Garth Nix', '__subject__ Above the Veil __predicate__ mediaType __object__ Print']]
Text: Above the Veil is written by Garth Nix and produced in print.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['author', 'mediaType']
Object: ['Garth Nix', 'Print']

Triple: [['__subject__ Above the Veil __predicate__ author __object__ Garth Nix', '__subject__ Above the Veil __predicate__ mediaType __object__ Hardcover']]
Text: Garth Nix is the author of Above the Veil which is available in hardcover.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['author', 'mediaType']
Object: ['Garth Nix', 'Hardcover']

Triple: [['__subject__ Above the Veil __predicate__ author __object__ Garth Nix', '__subject__ Above the Veil __predicate__ mediaType __object__ Hardcover']]
Text: Above the Veil, by Garth Nix, is available in hardcover.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['author', 'mediaType']
Object: ['Garth Nix', 'Hardcover']

Triple: [['__subject__ Above the Veil __predicate__ author __object__ Garth Nix', '__subject__ Above the Veil __predicate__ mediaType __object__ Hardcover']]
Text: The author of Above the Veil available in hardcover is Garth Nix.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['author', 'mediaType']
Object: ['Garth Nix', 'Hardcover']

Triple: [['__subject__ Above the Veil __predicate__ followedBy __object__ Into Battle (novel)', '__subject__ Above the Veil __predicate__ precededBy __object__ Aenir']]
Text: Above the Veil was preceded by Aenir and followed by Into Battle.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['followedBy', 'precededBy']
Object: ['Into Battle (novel)', 'Aenir']

Triple: [['__subject__ Above the Veil __predicate__ followedBy __object__ Into Battle (novel)', '__subject__ Above the Veil __predicate__ precededBy __object__ Aenir']]
Text: The novel "Into Battle" followed "Above the Veil" which is the sequel to Aenir.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['followedBy', 'precededBy']
Object: ['Into Battle (novel)', 'Aenir']

Triple: [['__subject__ Above the Veil __predicate__ followedBy __object__ Into Battle (novel)', '__subject__ Above the Veil __predicate__ precededBy __object__ Aenir']]
Text: Aenir is followed by Above the Veil and the novel Into Battle.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['followedBy', 'precededBy']
Object: ['Into Battle (novel)', 'Aenir']

Triple: [['__subject__ Above the Veil __predicate__ numberOfPages __object__ 248', '__subject__ Above the Veil __predicate__ isbnNumber __object__ 0-439-17685-9']]
Text: Above the Veil is 248 pages long and has the ISBN number 0-439-17685-9.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['numberOfPages', 'isbnNumber']
Object: ['248', '0-439-17685-9']

Triple: [['__subject__ Above the Veil __predicate__ numberOfPages __object__ 248', '__subject__ Above the Veil __predicate__ isbnNumber __object__ 0-439-17685-9']]
Text: Above the Veil is 248 pages long and ISBN number is 0-439-17685-9.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['numberOfPages', 'isbnNumber']
Object: ['248', '0-439-17685-9']

Triple: [['__subject__ Above the Veil __predicate__ numberOfPages __object__ 248', '__subject__ Above the Veil __predicate__ isbnNumber __object__ 0-439-17685-9']]
Text: Above the Veil, ISBN number 0-439-17685-9, is 248 pages long.
Subject: ['Above the Veil', 'Above the Veil']
Predicate: ['numberOfPages', 'isbnNumber']
Object: ['248', '0-439-17685-9']

Triple: [['__subject__ Acta Mathematica Hungarica __predicate__ issnNumber __object__ 1588-2632', '__subject__ Acta Mathematica Hungarica __predicate__ abbreviation __object__ Acta Math. Hungar.']]
Text: Acta Mathematica Hungarica has the abbreviation of "Acta Math. Hungar." and the ISSN number of "1588-2632".
Subject: ['Acta Mathematica Hungarica', 'Acta Mathematica Hungarica']
Predicate: ['issnNumber', 'abbreviation']
Object: ['1588-2632', 'Acta Math. Hungar.']

Triple: [['__subject__ Acta Mathematica Hungarica __predicate__ issnNumber __object__ 1588-2632', '__subject__ Acta Mathematica Hungarica __predicate__ abbreviation __object__ Acta Math. Hungar.']]
Text: Acta Mathematica Hungarica has the abbreviation of "Acta Math. Hungar." and the ISSN number 1588-2632.
Subject: ['Acta Mathematica Hungarica', 'Acta Mathematica Hungarica']
Predicate: ['issnNumber', 'abbreviation']
Object: ['1588-2632', 'Acta Math. Hungar.']

Triple: [['__subject__ Acta Mathematica Hungarica __predicate__ issnNumber __object__ 1588-2632', '__subject__ Acta Mathematica Hungarica __predicate__ abbreviation __object__ Acta Math. Hungar.']]
Text: Acta Mathematica Hungarica has the abbreviation of "Acta Math. Hungar" and the ISSN number is 1588-2632.
Subject: ['Acta Mathematica Hungarica', 'Acta Mathematica Hungarica']
Predicate: ['issnNumber', 'abbreviation']
Object: ['1588-2632', 'Acta Math. Hungar.']

Triple: [['__subject__ Acta Mathematica Hungarica __predicate__ LCCN number __object__ 83646315', '__subject__ Acta Mathematica Hungarica __predicate__ abbreviation __object__ Acta Math. Hungar.']]
Text: 83646315 is the LCCN number for Acta Mathematica Hungarica which has the abbreviation of "Acta Math. Hungar".
Subject: ['Acta Mathematica Hungarica', 'Acta Mathematica Hungarica']
Predicate: ['LCCN number', 'abbreviation']
Object: ['83646315', 'Acta Math. Hungar.']

Triple: [['__subject__ Acta Mathematica Hungarica __predicate__ LCCN number __object__ 83646315', '__subject__ Acta Mathematica Hungarica __predicate__ abbreviation __object__ Acta Math. Hungar.']]
Text: Acta Mathematica Hungarica (abbreviated to Acta Math. Hungar) has the LCCN number 83646315.
Subject: ['Acta Mathematica Hungarica', 'Acta Mathematica Hungarica']
Predicate: ['LCCN number', 'abbreviation']
Object: ['83646315', 'Acta Math. Hungar.']

Triple: [['__subject__ Acta Mathematica Hungarica __predicate__ abbreviation __object__ Acta Math. Hungar.', '__subject__ Acta Mathematica Hungarica __predicate__ codenCode __object__ AMAHE9']]
Text: Acta Mathematica Hungarica with code AMAHE9 is abbreviated with Acta Math. Hungar.
Subject: ['Acta Mathematica Hungarica', 'Acta Mathematica Hungarica']
Predicate: ['abbreviation', 'codenCode']
Object: ['Acta Math. Hungar.', 'AMAHE9']

Triple: [['__subject__ Acta Mathematica Hungarica __predicate__ abbreviation __object__ Acta Math. Hungar.', '__subject__ Acta Mathematica Hungarica __predicate__ codenCode __object__ AMAHE9']]
Text: The Acta Mathematica Hungarica CODEN code is "AMAHE9" and is also known as Acta Math. Hungar.
Subject: ['Acta Mathematica Hungarica', 'Acta Mathematica Hungarica']
Predicate: ['abbreviation', 'codenCode']
Object: ['Acta Math. Hungar.', 'AMAHE9']

Triple: [['__subject__ Acta Mathematica Hungarica __predicate__ abbreviation __object__ Acta Math. Hungar.', '__subject__ Acta Mathematica Hungarica __predicate__ codenCode __object__ AMAHE9']]
Text: The CODEN code for Acta Mathematica Hungarica is "AMAHE9" and the abbreviation is Acta Math.Hungar.
Subject: ['Acta Mathematica Hungarica', 'Acta Mathematica Hungarica']
Predicate: ['abbreviation', 'codenCode']
Object: ['Acta Math. Hungar.', 'AMAHE9']

Triple: [['__subject__ Acta Mathematica Hungarica __predicate__ abbreviation __object__ Acta Math. Hungar.', '__subject__ Acta Mathematica Hungarica __predicate__ academicDiscipline __object__ Mathematics']]
Text: Acta Mathematica Hungarica has the abbreviation of "Acta Math. Hungar." and comes under the discipline of Math.
Subject: ['Acta Mathematica Hungarica', 'Acta Mathematica Hungarica']
Predicate: ['abbreviation', 'academicDiscipline']
Object: ['Acta Math. Hungar.', 'Mathematics']

Triple: [['__subject__ Acta Mathematica Hungarica __predicate__ abbreviation __object__ Acta Math. Hungar.', '__subject__ Acta Mathematica Hungarica __predicate__ academicDiscipline __object__ Mathematics']]
Text: The abbreviation of Acta Mathematica Hungarica is Acta Math. Hungar and covers the academic discipline of Mathematics.
Subject: ['Acta Mathematica Hungarica', 'Acta Mathematica Hungarica']
Predicate: ['abbreviation', 'academicDiscipline']
Object: ['Acta Math. Hungar.', 'Mathematics']

Triple: [['__subject__ Acta Mathematica Hungarica __predicate__ abbreviation __object__ Acta Math. Hungar.', '__subject__ Acta Mathematica Hungarica __predicate__ academicDiscipline __object__ Mathematics']]
Text: The Acta Mathematica Hungarica (abbreviation: Acta Math. Hungar) discipline is Math.
Subject: ['Acta Mathematica Hungarica', 'Acta Mathematica Hungarica']
Predicate: ['abbreviation', 'academicDiscipline']
Object: ['Acta Math. Hungar.', 'Mathematics']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ LCCN number __object__ 60040714', '__subject__ Acta Palaeontologica Polonica __predicate__ abbreviation __object__ Acta Palaeontol. Pol.']]
Text: Acta Palaeontologica Polonica which is abbreviated to Acta Palaeontol. Pol. has a LCCN number of 60040714.
Subject: ['Acta Palaeontologica Polonica', 'Acta Palaeontologica Polonica']
Predicate: ['LCCN number', 'abbreviation']
Object: ['60040714', 'Acta Palaeontol. Pol.']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ LCCN number __object__ 60040714', '__subject__ Acta Palaeontologica Polonica __predicate__ abbreviation __object__ Acta Palaeontol. Pol.']]
Text: Acta Palaeontologica Polonica's has the abbreviated name Acta Palaeontol. Pol. and an LCCN number of 60040714.
Subject: ['Acta Palaeontologica Polonica', 'Acta Palaeontologica Polonica']
Predicate: ['LCCN number', 'abbreviation']
Object: ['60040714', 'Acta Palaeontol. Pol.']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ abbreviation __object__ Acta Palaeontol. Pol.', '__subject__ Acta Palaeontologica Polonica __predicate__ codenCode __object__ APGPAC']]
Text: Acta Palaeontologica Polonica (abbreviated to Acta Palaeontol. Pol.) has a CODEN code of "APGPAC".
Subject: ['Acta Palaeontologica Polonica', 'Acta Palaeontologica Polonica']
Predicate: ['abbreviation', 'codenCode']
Object: ['Acta Palaeontol. Pol.', 'APGPAC']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ abbreviation __object__ Acta Palaeontol. Pol.', '__subject__ Acta Palaeontologica Polonica __predicate__ codenCode __object__ APGPAC']]
Text: The Acta Palaeontologica Polonica CODEN code is "APGPAC" and the abbreviated name of Acta Palaeontol. Pol.
Subject: ['Acta Palaeontologica Polonica', 'Acta Palaeontologica Polonica']
Predicate: ['abbreviation', 'codenCode']
Object: ['Acta Palaeontol. Pol.', 'APGPAC']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ abbreviation __object__ Acta Palaeontol. Pol.', '__subject__ Acta Palaeontologica Polonica __predicate__ codenCode __object__ APGPAC']]
Text: The CODEN code for the Acta Palaeontologica Polonica, abbreviated to Acta Palaeontol. Pol., is APGPAC.
Subject: ['Acta Palaeontologica Polonica', 'Acta Palaeontologica Polonica']
Predicate: ['abbreviation', 'codenCode']
Object: ['Acta Palaeontol. Pol.', 'APGPAC']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ abbreviation __object__ Acta Palaeontol. Pol.', '__subject__ Acta Palaeontologica Polonica __predicate__ issnNumber __object__ 1732-2421']]
Text: Acta Palaeontologica Polonica (abbreviated to Acta Palaeontol. Pol.) has the ISSN number 1732-2421.
Subject: ['Acta Palaeontologica Polonica', 'Acta Palaeontologica Polonica']
Predicate: ['abbreviation', 'issnNumber']
Object: ['Acta Palaeontol. Pol.', '1732-2421']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ abbreviation __object__ Acta Palaeontol. Pol.', '__subject__ Acta Palaeontologica Polonica __predicate__ issnNumber __object__ 1732-2421']]
Text: The Acta Palaeontologica Polonica (abbreviated Acta Palaeontol. Pol.), has the ISSN number "1732-2421".
Subject: ['Acta Palaeontologica Polonica', 'Acta Palaeontologica Polonica']
Predicate: ['abbreviation', 'issnNumber']
Object: ['Acta Palaeontol. Pol.', '1732-2421']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ abbreviation __object__ Acta Palaeontol. Pol.', '__subject__ Acta Palaeontologica Polonica __predicate__ issnNumber __object__ 1732-2421']]
Text: The Acta Palaeontologica Polonica (abbreviated Acta Palaeontol. Pol.) has the ISSN number 1732-2421.
Subject: ['Acta Palaeontologica Polonica', 'Acta Palaeontologica Polonica']
Predicate: ['abbreviation', 'issnNumber']
Object: ['Acta Palaeontol. Pol.', '1732-2421']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ academicDiscipline __object__ Paleobiology', '__subject__ Acta Palaeontologica Polonica __predicate__ abbreviation __object__ Acta Palaeontol. Pol.']]
Text: Paleobiology is the academic discipline of Acta Palaeontologica Polonica which has the abbreviated name of Acta Palaeontol. Pol.
Subject: ['Acta Palaeontologica Polonica', 'Acta Palaeontologica Polonica']
Predicate: ['academicDiscipline', 'abbreviation']
Object: ['Paleobiology', 'Acta Palaeontol. Pol.']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ academicDiscipline __object__ Paleobiology', '__subject__ Acta Palaeontologica Polonica __predicate__ abbreviation __object__ Acta Palaeontol. Pol.']]
Text: The Acta Palaeontologica Polonica, abbreviated to Acta Palaeontol. Pol., comes under the academic discipline of Paleobiology.
Subject: ['Acta Palaeontologica Polonica', 'Acta Palaeontologica Polonica']
Predicate: ['academicDiscipline', 'abbreviation']
Object: ['Paleobiology', 'Acta Palaeontol. Pol.']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ academicDiscipline __object__ Paleontology', '__subject__ Acta Palaeontologica Polonica __predicate__ abbreviation __object__ Acta Palaeontol. Pol.']]
Text: Acta Palaeontologica Polonica, whose abbreviated name is Acta Palaeontol. Pol., is academically focused on Paleontology.
Subject: ['Acta Palaeontologica Polonica', 'Acta Palaeontologica Polonica']
Predicate: ['academicDiscipline', 'abbreviation']
Object: ['Paleontology', 'Acta Palaeontol. Pol.']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ academicDiscipline __object__ Paleontology', '__subject__ Acta Palaeontologica Polonica __predicate__ abbreviation __object__ Acta Palaeontol. Pol.']]
Text: Acta Palaeontologica Polonica, which can be abbreviated to Acta Palaeontol. Pol., is academically focused on Paleontology.
Subject: ['Acta Palaeontologica Polonica', 'Acta Palaeontologica Polonica']
Predicate: ['academicDiscipline', 'abbreviation']
Object: ['Paleontology', 'Acta Palaeontol. Pol.']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ academicDiscipline __object__ Paleontology', '__subject__ Acta Palaeontologica Polonica __predicate__ abbreviation __object__ Acta Palaeontol. Pol.']]
Text: The Acta Palaeontologica Polonica (abbreviated to Acta Palaeontol. Pol) comes under the academic discipline of paleontology.
Subject: ['Acta Palaeontologica Polonica', 'Acta Palaeontologica Polonica']
Predicate: ['academicDiscipline', 'abbreviation']
Object: ['Paleontology', 'Acta Palaeontol. Pol.']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ publisher __object__ Polish Academy of Sciences', '__subject__ Polish Academy of Sciences __predicate__ headquarter __object__ Warsaw']]
Text: Acta Palaeontologica Polonica was published by the Polish Academy of Sciences which has its headquarters in Warsaw.
Subject: ['Acta Palaeontologica Polonica', 'Polish Academy of Sciences']
Predicate: ['publisher', 'headquarter']
Object: ['Polish Academy of Sciences', 'Warsaw']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ publisher __object__ Polish Academy of Sciences', '__subject__ Polish Academy of Sciences __predicate__ headquarter __object__ Warsaw']]
Text: Acta Palaeontologica Polonica was published by the Polish Academy of Sciences, headquartered in Warsaw.
Subject: ['Acta Palaeontologica Polonica', 'Polish Academy of Sciences']
Predicate: ['publisher', 'headquarter']
Object: ['Polish Academy of Sciences', 'Warsaw']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ publisher __object__ Polish Academy of Sciences', '__subject__ Polish Academy of Sciences __predicate__ headquarter __object__ Warsaw']]
Text: The Polish Academy of Sciences, headquartered in Warsaw, is the publisher of Acta Palaeontologica Polonica.
Subject: ['Acta Palaeontologica Polonica', 'Polish Academy of Sciences']
Predicate: ['publisher', 'headquarter']
Object: ['Polish Academy of Sciences', 'Warsaw']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ publisher __object__ Polish Academy of Sciences', '__subject__ Polish Academy of Sciences __predicate__ regionServed __object__ Poland']]
Text: Acta Palaeontologica Polonica was published by the Polish Academy of Sciences which serves Poland.
Subject: ['Acta Palaeontologica Polonica', 'Polish Academy of Sciences']
Predicate: ['publisher', 'regionServed']
Object: ['Polish Academy of Sciences', 'Poland']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ publisher __object__ Polish Academy of Sciences', '__subject__ Polish Academy of Sciences __predicate__ regionServed __object__ Poland']]
Text: The Polish Academy of Sciences, based in Poland, is the publisher of Acta Palaeontologica Polonica.
Subject: ['Acta Palaeontologica Polonica', 'Polish Academy of Sciences']
Predicate: ['publisher', 'regionServed']
Object: ['Polish Academy of Sciences', 'Poland']

Triple: [['__subject__ Acta Palaeontologica Polonica __predicate__ publisher __object__ Polish Academy of Sciences', '__subject__ Polish Academy of Sciences __predicate__ regionServed __object__ Poland']]
Text: The Polish Academy of Sciences which serves Poland publishes the Acta Palaeontologica Polonica.
Subject: ['Acta Palaeontologica Polonica', 'Polish Academy of Sciences']
Predicate: ['publisher', 'regionServed']
Object: ['Polish Academy of Sciences', 'Poland']

Triple: [['__subject__ Addiction (journal) __predicate__ codenCode __object__ ADICE5', '__subject__ Addiction (journal) __predicate__ abbreviation __object__ Addiction']]
Text: Addiction (Journal) has the CODEN Code ADICE5 and is abbreviated to Addiction.
Subject: ['Addiction (journal)', 'Addiction (journal)']
Predicate: ['codenCode', 'abbreviation']
Object: ['ADICE5', 'Addiction']

Triple: [['__subject__ Addiction (journal) __predicate__ codenCode __object__ ADICE5', '__subject__ Addiction (journal) __predicate__ abbreviation __object__ Addiction']]
Text: Addiction Journal has the CODEN Code ADICE5. and is often abbreviated as Addiction.
Subject: ['Addiction (journal)', 'Addiction (journal)']
Predicate: ['codenCode', 'abbreviation']
Object: ['ADICE5', 'Addiction']

Triple: [['__subject__ Addiction (journal) __predicate__ codenCode __object__ ADICE5', '__subject__ Addiction (journal) __predicate__ abbreviation __object__ Addiction']]
Text: Addiction (journal) has the abbreviation of "Addiction" and the CODEN code "ADICE5".
Subject: ['Addiction (journal)', 'Addiction (journal)']
Predicate: ['codenCode', 'abbreviation']
Object: ['ADICE5', 'Addiction']

Triple: [['__subject__ Addiction (journal) __predicate__ abbreviation __object__ Addiction', '__subject__ Addiction (journal) __predicate__ LCCN number __object__ 93645978']]
Text: Addiction (journal) has the abbreviation of "Addiction" and an LCCN number of 93645978.
Subject: ['Addiction (journal)', 'Addiction (journal)']
Predicate: ['abbreviation', 'LCCN number']
Object: ['Addiction', '93645978']

Triple: [['__subject__ Addiction (journal) __predicate__ abbreviation __object__ Addiction', '__subject__ Addiction (journal) __predicate__ LCCN number __object__ 93645978']]
Text: Addiction (journal) (abbreviated to Addiction) has the LCCN number 93645978.
Subject: ['Addiction (journal)', 'Addiction (journal)']
Predicate: ['abbreviation', 'LCCN number']
Object: ['Addiction', '93645978']

Triple: [['__subject__ Addiction (journal) __predicate__ abbreviation __object__ Addiction', '__subject__ Addiction (journal) __predicate__ LCCN number __object__ 93645978']]
Text: The journal Addiction (abbreviated to Addiction) has the LCCN number 93645978.
Subject: ['Addiction (journal)', 'Addiction (journal)']
Predicate: ['abbreviation', 'LCCN number']
Object: ['Addiction', '93645978']

Triple: [['__subject__ Addiction (journal) __predicate__ academicDiscipline __object__ Addiction', '__subject__ Addiction (journal) __predicate__ abbreviation __object__ Addiction']]
Text: Addiction (journal) is abbreviated to Addiction, and addiction is also its subject.
Subject: ['Addiction (journal)', 'Addiction (journal)']
Predicate: ['academicDiscipline', 'abbreviation']
Object: ['Addiction', 'Addiction']

Triple: [['__subject__ Addiction (journal) __predicate__ academicDiscipline __object__ Addiction', '__subject__ Addiction (journal) __predicate__ abbreviation __object__ Addiction']]
Text: Addiction Journal, abbreviated to Addiction, is about addiction.
Subject: ['Addiction (journal)', 'Addiction (journal)']
Predicate: ['academicDiscipline', 'abbreviation']
Object: ['Addiction', 'Addiction']

Triple: [['__subject__ Addiction (journal) __predicate__ academicDiscipline __object__ Addiction', '__subject__ Addiction (journal) __predicate__ abbreviation __object__ Addiction']]
Text: The Addiction journal, about addiction, is also known as just 'Addiction'.
Subject: ['Addiction (journal)', 'Addiction (journal)']
Predicate: ['academicDiscipline', 'abbreviation']
Object: ['Addiction', 'Addiction']

Triple: [['__subject__ Addiction (journal) __predicate__ publisher __object__ Wiley-Blackwell', '__subject__ Wiley-Blackwell __predicate__ parentCompany __object__ John Wiley & Sons']]
Text: Addiction journal is published by Wiley-Blackwell, whose parent company is John Wiley & Sons.
Subject: ['Addiction (journal)', 'Wiley-Blackwell']
Predicate: ['publisher', 'parentCompany']
Object: ['Wiley-Blackwell', 'John Wiley & Sons']

Triple: [['__subject__ Addiction (journal) __predicate__ publisher __object__ Wiley-Blackwell', '__subject__ Wiley-Blackwell __predicate__ parentCompany __object__ John Wiley & Sons']]
Text: John Wiley & Sons is the parent company of Wiley-Blackwell which published Addiction journal.
Subject: ['Addiction (journal)', 'Wiley-Blackwell']
Predicate: ['publisher', 'parentCompany']
Object: ['Wiley-Blackwell', 'John Wiley & Sons']

Triple: [['__subject__ Addiction (journal) __predicate__ publisher __object__ Wiley-Blackwell', '__subject__ Wiley-Blackwell __predicate__ parentCompany __object__ John Wiley & Sons']]
Text: John Wiley & Sons is the parent company of Wiley-Blackwell, which is the publisher of the journal Addiction.
Subject: ['Addiction (journal)', 'Wiley-Blackwell']
Predicate: ['publisher', 'parentCompany']
Object: ['Wiley-Blackwell', 'John Wiley & Sons']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ LCCN number __object__ 57059226', '__subject__ Administrative Science Quarterly __predicate__ abbreviation __object__ Admin. Sci. Q.']]
Text: The Administrative Science Quarterly (abbreviated to Admin. Sci. Q) has a LLCN number of 57059226.
Subject: ['Administrative Science Quarterly', 'Administrative Science Quarterly']
Predicate: ['LCCN number', 'abbreviation']
Object: ['57059226', 'Admin. Sci. Q.']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ LCCN number __object__ 57059226', '__subject__ Administrative Science Quarterly __predicate__ abbreviation __object__ Admin. Sci. Q.']]
Text: Administrative Science Quarterly, abbreviated Admin. Sci. Q, LLCN number is 57059226.
Subject: ['Administrative Science Quarterly', 'Administrative Science Quarterly']
Predicate: ['LCCN number', 'abbreviation']
Object: ['57059226', 'Admin. Sci. Q.']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ LCCN number __object__ 57059226', '__subject__ Administrative Science Quarterly __predicate__ abbreviation __object__ Admin. Sci. Q.']]
Text: Admin. Sci. Q is the abbreviation for the Administrative Science Quarterly which has the LCCN number of 57059226.
Subject: ['Administrative Science Quarterly', 'Administrative Science Quarterly']
Predicate: ['LCCN number', 'abbreviation']
Object: ['57059226', 'Admin. Sci. Q.']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ abbreviation __object__ Admin. Sci. Q.', '__subject__ Administrative Science Quarterly __predicate__ issnNumber __object__ 0001-8392']]
Text: The ISSN number for Administrative Science Quarterly (abbreviated as Admin. Sci. Q) is 0001-8392.
Subject: ['Administrative Science Quarterly', 'Administrative Science Quarterly']
Predicate: ['abbreviation', 'issnNumber']
Object: ['Admin. Sci. Q.', '0001-8392']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ abbreviation __object__ Admin. Sci. Q.', '__subject__ Administrative Science Quarterly __predicate__ issnNumber __object__ 0001-8392']]
Text: Administrative Science Quarterly, abbreviated Admin. Sci. Q., has ISSN number 0001-8392.
Subject: ['Administrative Science Quarterly', 'Administrative Science Quarterly']
Predicate: ['abbreviation', 'issnNumber']
Object: ['Admin. Sci. Q.', '0001-8392']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ abbreviation __object__ Admin. Sci. Q.', '__subject__ Administrative Science Quarterly __predicate__ issnNumber __object__ 0001-8392']]
Text: The ISSN number "0001-8392" is for Administrative Science Quarterly, which abbreviates to Admin. Sci. Q.
Subject: ['Administrative Science Quarterly', 'Administrative Science Quarterly']
Predicate: ['abbreviation', 'issnNumber']
Object: ['Admin. Sci. Q.', '0001-8392']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ academicDiscipline __object__ Management', '__subject__ Administrative Science Quarterly __predicate__ abbreviation __object__ Admin. Sci. Q.']]
Text: The academic discipline of Administrative Science Quarterly (abbreviated as Admin. Sci. Q) is Management.
Subject: ['Administrative Science Quarterly', 'Administrative Science Quarterly']
Predicate: ['academicDiscipline', 'abbreviation']
Object: ['Management', 'Admin. Sci. Q.']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ academicDiscipline __object__ Management', '__subject__ Administrative Science Quarterly __predicate__ abbreviation __object__ Admin. Sci. Q.']]
Text: The abbreviation for the Administrative Science Quarterly is Admin. Sci. Q. and it comes under the academic discipline of Management.
Subject: ['Administrative Science Quarterly', 'Administrative Science Quarterly']
Predicate: ['academicDiscipline', 'abbreviation']
Object: ['Management', 'Admin. Sci. Q.']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ academicDiscipline __object__ Management', '__subject__ Administrative Science Quarterly __predicate__ abbreviation __object__ Admin. Sci. Q.']]
Text: The Administrative Science Quarterly, abbreviated "Admin. Sci. Q," comes under the academic discipline of Management.
Subject: ['Administrative Science Quarterly', 'Administrative Science Quarterly']
Predicate: ['academicDiscipline', 'abbreviation']
Object: ['Management', 'Admin. Sci. Q.']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University', '__subject__ Cornell University __predicate__ affiliation __object__ Association of American Universities']]
Text: Administrative Science Quarterly was published by Cornell University which is affiliated with the Association of American Universities.
Subject: ['Administrative Science Quarterly', 'Cornell University']
Predicate: ['publisher', 'affiliation']
Object: ['Cornell University', 'Association of American Universities']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University', '__subject__ Cornell University __predicate__ affiliation __object__ Association of American Universities']]
Text: Cornell University is affiliated with the Association of American Universities and is the publisher of Administrative Science Quarterly.
Subject: ['Administrative Science Quarterly', 'Cornell University']
Predicate: ['publisher', 'affiliation']
Object: ['Cornell University', 'Association of American Universities']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University', '__subject__ Cornell University __predicate__ affiliation __object__ Association of American Universities']]
Text: As well as being affiliated with the Association of American Universities, Cornell University publishes Administrative Science Quarterly.
Subject: ['Administrative Science Quarterly', 'Cornell University']
Predicate: ['publisher', 'affiliation']
Object: ['Cornell University', 'Association of American Universities']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University', '__subject__ Cornell University __predicate__ city __object__ Ithaca, New York']]
Text: Cornell University in the city of Ithaca, New York, is the publisher of Administrative Science Quarterly.
Subject: ['Administrative Science Quarterly', 'Cornell University']
Predicate: ['publisher', 'city']
Object: ['Cornell University', 'Ithaca, New York']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University', '__subject__ Cornell University __predicate__ city __object__ Ithaca, New York']]
Text: Cornell University, located in Ithaca NY, is the publisher of the Administrative Science Quarterly.
Subject: ['Administrative Science Quarterly', 'Cornell University']
Predicate: ['publisher', 'city']
Object: ['Cornell University', 'Ithaca, New York']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University', '__subject__ Cornell University __predicate__ nickname __object__ Cornell Big Red']]
Text: Administrative Science Quarterly was published by Cornell University which has the nickname of Cornell Big Red.
Subject: ['Administrative Science Quarterly', 'Cornell University']
Predicate: ['publisher', 'nickname']
Object: ['Cornell University', 'Cornell Big Red']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University', '__subject__ Cornell University __predicate__ nickname __object__ Cornell Big Red']]
Text: Cornell University, which goes by the nickname Cornell Big Red, is the publisher of Administrative Science Quarterly.
Subject: ['Administrative Science Quarterly', 'Cornell University']
Predicate: ['publisher', 'nickname']
Object: ['Cornell University', 'Cornell Big Red']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University', '__subject__ Cornell University __predicate__ nickname __object__ Cornell Big Red']]
Text: Cornell University, nicknamed Cornell Big Red, is the publisher of the Administrative Science Quarterly.
Subject: ['Administrative Science Quarterly', 'Cornell University']
Predicate: ['publisher', 'nickname']
Object: ['Cornell University', 'Cornell Big Red']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University', '__subject__ Cornell University __predicate__ president __object__ Elizabeth Garrett']]
Text: Administrative Science Quarterly was published by Cornell University where Elizabeth Garrett is the president.
Subject: ['Administrative Science Quarterly', 'Cornell University']
Predicate: ['publisher', 'president']
Object: ['Cornell University', 'Elizabeth Garrett']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University', '__subject__ Cornell University __predicate__ president __object__ Elizabeth Garrett']]
Text: Cornell University, headed by president Elizabeth Garrett, is the publisher of Administrative Science Quarterly.
Subject: ['Administrative Science Quarterly', 'Cornell University']
Predicate: ['publisher', 'president']
Object: ['Cornell University', 'Elizabeth Garrett']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University', '__subject__ Cornell University __predicate__ president __object__ Elizabeth Garrett']]
Text: Cornell University, with president Elizabeth Garrett, is the publisher of the Administrative Science Quarterly.
Subject: ['Administrative Science Quarterly', 'Cornell University']
Predicate: ['publisher', 'president']
Object: ['Cornell University', 'Elizabeth Garrett']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University', '__subject__ Cornell University __predicate__ state __object__ New York']]
Text: Administrative Science Quarterly was published by Cornell University in the state of New York.
Subject: ['Administrative Science Quarterly', 'Cornell University']
Predicate: ['publisher', 'state']
Object: ['Cornell University', 'New York']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University', '__subject__ Cornell University __predicate__ state __object__ New York']]
Text: Cornell University is the publisher of Administrative Science Quarterly and is based in New York.
Subject: ['Administrative Science Quarterly', 'Cornell University']
Predicate: ['publisher', 'state']
Object: ['Cornell University', 'New York']

Triple: [['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University', '__subject__ Cornell University __predicate__ state __object__ New York']]
Text: Cornell University in New York is the publisher of the Administrative Science Quarterly.
Subject: ['Administrative Science Quarterly', 'Cornell University']
Predicate: ['publisher', 'state']
Object: ['Cornell University', 'New York']

Triple: [['__subject__ Aenir __predicate__ oclcNumber __object__ 45644811', '__subject__ Aenir __predicate__ author __object__ Garth Nix']]
Text: The author of Aenir, OCLC number 45644811, is Garth Nix.
Subject: ['Aenir', 'Aenir']
Predicate: ['oclcNumber', 'author']
Object: ['45644811', 'Garth Nix']

Triple: [['__subject__ Aenir __predicate__ oclcNumber __object__ 45644811', '__subject__ Aenir __predicate__ author __object__ Garth Nix']]
Text: Aenir was written by Garth Nix and has the OCLC number 45644811.
Subject: ['Aenir', 'Aenir']
Predicate: ['oclcNumber', 'author']
Object: ['45644811', 'Garth Nix']

Triple: [['__subject__ Aenir __predicate__ oclcNumber __object__ 45644811', '__subject__ Aenir __predicate__ author __object__ Garth Nix']]
Text: Aenir was written by Garth Nix and its OCLC number is 45644811.
Subject: ['Aenir', 'Aenir']
Predicate: ['oclcNumber', 'author']
Object: ['45644811', 'Garth Nix']

Triple: [['__subject__ Aenir __predicate__ author __object__ Garth Nix', '__subject__ Aenir __predicate__ mediaType __object__ Print']]
Text: Aenir is available in print and was written by Garth Nix.
Subject: ['Aenir', 'Aenir']
Predicate: ['author', 'mediaType']
Object: ['Garth Nix', 'Print']

Triple: [['__subject__ Aenir __predicate__ author __object__ Garth Nix', '__subject__ Aenir __predicate__ mediaType __object__ Print']]
Text: Aenir was written by Garth Nix and was produced in print.
Subject: ['Aenir', 'Aenir']
Predicate: ['author', 'mediaType']
Object: ['Garth Nix', 'Print']

Triple: [['__subject__ Aenir __predicate__ author __object__ Garth Nix', '__subject__ Aenir __predicate__ mediaType __object__ Print']]
Text: The author of Aenir is Garth Nix and is available in print.
Subject: ['Aenir', 'Aenir']
Predicate: ['author', 'mediaType']
Object: ['Garth Nix', 'Print']

Triple: [['__subject__ Aenir __predicate__ author __object__ Garth Nix', '__subject__ Aenir __predicate__ mediaType __object__ Paperback']]
Text: Aenir is a paperback and was written by Garth Nix.
Subject: ['Aenir', 'Aenir']
Predicate: ['author', 'mediaType']
Object: ['Garth Nix', 'Paperback']

Triple: [['__subject__ Aenir __predicate__ author __object__ Garth Nix', '__subject__ Aenir __predicate__ mediaType __object__ Paperback']]
Text: Aenir which is available in paperback was written by author Garth Nix.
Subject: ['Aenir', 'Aenir']
Predicate: ['author', 'mediaType']
Object: ['Garth Nix', 'Paperback']

Triple: [['__subject__ Aenir __predicate__ author __object__ Garth Nix', '__subject__ Aenir __predicate__ mediaType __object__ Paperback']]
Text: The author of the paperback book Aenir is Garth Nix.
Subject: ['Aenir', 'Aenir']
Predicate: ['author', 'mediaType']
Object: ['Garth Nix', 'Paperback']

Triple: [['__subject__ Aenir __predicate__ country __object__ Australians', '__subject__ Above the Veil __predicate__ precededBy __object__ Aenir']]
Text: Above the Veil was preceded By Aenir, both Australian novels.
Subject: ['Aenir', 'Above the Veil']
Predicate: ['country', 'precededBy']
Object: ['Australians', 'Aenir']

Triple: [['__subject__ Aenir __predicate__ country __object__ Australians', '__subject__ Above the Veil __predicate__ precededBy __object__ Aenir']]
Text: Above the Veil is the sequel to Aenir which was written by Australians.
Subject: ['Aenir', 'Above the Veil']
Predicate: ['country', 'precededBy']
Object: ['Australians', 'Aenir']

Triple: [['__subject__ Aenir __predicate__ country __object__ Australians', '__subject__ Above the Veil __predicate__ precededBy __object__ Aenir']]
Text: Above the Veil and its sequel Aenir are examples of Australian literature.
Subject: ['Aenir', 'Above the Veil']
Predicate: ['country', 'precededBy']
Object: ['Australians', 'Aenir']

Triple: [['__subject__ Aenir __predicate__ language __object__ English language', '__subject__ Aenir __predicate__ followedBy __object__ Above the Veil']]
Text: The book Aenir is written in English and was followed by Above the Veil.
Subject: ['Aenir', 'Aenir']
Predicate: ['language', 'followedBy']
Object: ['English language', 'Above the Veil']

Triple: [['__subject__ Aenir __predicate__ language __object__ English language', '__subject__ Aenir __predicate__ followedBy __object__ Above the Veil']]
Text: The book "Aenir," written in English, was followed by "Above the Veil".
Subject: ['Aenir', 'Aenir']
Predicate: ['language', 'followedBy']
Object: ['English language', 'Above the Veil']

Triple: [['__subject__ Aenir __predicate__ language __object__ English language', '__subject__ Aenir __predicate__ followedBy __object__ Above the Veil']]
Text: The novel Aenir, written in English, was followed by Above the Veil.
Subject: ['Aenir', 'Aenir']
Predicate: ['language', 'followedBy']
Object: ['English language', 'Above the Veil']

Triple: [['__subject__ Aenir __predicate__ mediaType __object__ Print', '__subject__ Aenir __predicate__ isbnNumber __object__ 0-439-17684-0']]
Text: Aenir is available in print and has the ISBN number of "0-439-17684-0".
Subject: ['Aenir', 'Aenir']
Predicate: ['mediaType', 'isbnNumber']
Object: ['Print', '0-439-17684-0']

Triple: [['__subject__ Aenir __predicate__ mediaType __object__ Print', '__subject__ Aenir __predicate__ isbnNumber __object__ 0-439-17684-0']]
Text: Aenir with ISBN"0-439-17684-0" was produced in print.
Subject: ['Aenir', 'Aenir']
Predicate: ['mediaType', 'isbnNumber']
Object: ['Print', '0-439-17684-0']

Triple: [['__subject__ Aenir __predicate__ mediaType __object__ Print', '__subject__ Aenir __predicate__ isbnNumber __object__ 0-439-17684-0']]
Text: Aenir with the ISBN number 0-439-17684-0 is a print production.
Subject: ['Aenir', 'Aenir']
Predicate: ['mediaType', 'isbnNumber']
Object: ['Print', '0-439-17684-0']

Triple: [['__subject__ Aenir __predicate__ numberOfPages __object__ 233', '__subject__ Aenir __predicate__ isbnNumber __object__ 0-439-17684-0']]
Text: Aenir has a total of 233 pages and the ISBN number 0-439-17684-0.
Subject: ['Aenir', 'Aenir']
Predicate: ['numberOfPages', 'isbnNumber']
Object: ['233', '0-439-17684-0']

Triple: [['__subject__ Aenir __predicate__ numberOfPages __object__ 233', '__subject__ Aenir __predicate__ isbnNumber __object__ 0-439-17684-0']]
Text: Aenir is 233 pages long and has the ISBN number 0-439-17684-0.
Subject: ['Aenir', 'Aenir']
Predicate: ['numberOfPages', 'isbnNumber']
Object: ['233', '0-439-17684-0']

Triple: [['__subject__ Aenir __predicate__ numberOfPages __object__ 233', '__subject__ Aenir __predicate__ isbnNumber __object__ 0-439-17684-0']]
Text: Aenir, ISBN number 0-439-17684-0 has 233 pages.
Subject: ['Aenir', 'Aenir']
Predicate: ['numberOfPages', 'isbnNumber']
Object: ['233', '0-439-17684-0']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ oclcNumber __object__ 78771100', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Print']]
Text: Alcatraz Versus The Evil Librarians is produced in print with OCLC number 78771100.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['oclcNumber', 'mediaType']
Object: ['78771100', 'Print']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ oclcNumber __object__ 78771100', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Print']]
Text: Alcatraz Versus the Evil Librarians is produced in print and has an OCLC number of 78771100.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['oclcNumber', 'mediaType']
Object: ['78771100', 'Print']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ oclcNumber __object__ 78771100', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Print']]
Text: "Alcatraz Versus the Evil Librarians is in print and has the OCLC number 7877110.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['oclcNumber', 'mediaType']
Object: ['78771100', 'Print']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ author __object__ Brandon Sanderson', "__subject__ Alcatraz Versus the Evil Librarians __predicate__ followedBy __object__ Alcatraz Versus the Scrivener's Bones"]]
Text: Alcatraz Versus the Evil Librarians was written by Brandon Sanderson and was followed by Alcatraz Versus the Scrivener's Bones.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['author', 'followedBy']
Object: ['Brandon Sanderson', "Alcatraz Versus the Scrivener's Bones"]

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ author __object__ Brandon Sanderson', "__subject__ Alcatraz Versus the Evil Librarians __predicate__ followedBy __object__ Alcatraz Versus the Scrivener's Bones"]]
Text: Alcatraz versus the Evil Librarians written by Brandon Sanderson is followed by Alcatraz Versus the Scrivener's Bones.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['author', 'followedBy']
Object: ['Brandon Sanderson', "Alcatraz Versus the Scrivener's Bones"]

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ author __object__ Brandon Sanderson', "__subject__ Alcatraz Versus the Evil Librarians __predicate__ followedBy __object__ Alcatraz Versus the Scrivener's Bones"]]
Text: The book Alcatraz Versus the Evil Librarians is followed by the book Alcatraz Versus the Scrivener's Bones written by Brandon Sanderson.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['author', 'followedBy']
Object: ['Brandon Sanderson', "Alcatraz Versus the Scrivener's Bones"]

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ author __object__ Brandon Sanderson', '__subject__ Brandon Sanderson __predicate__ birthPlace __object__ Lincoln, Nebraska']]
Text: Brandon Sanderson, who was born in Lincoln, Nebraska, wrote "Alcatraz Versus the Evil Librarians".
Subject: ['Alcatraz Versus the Evil Librarians', 'Brandon Sanderson']
Predicate: ['author', 'birthPlace']
Object: ['Brandon Sanderson', 'Lincoln, Nebraska']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ author __object__ Brandon Sanderson', '__subject__ Brandon Sanderson __predicate__ birthPlace __object__ Lincoln, Nebraska']]
Text: Alcatraz Versus the Evil Librarians was written by Lincoln, Nebraska native Brandon Sanderson.
Subject: ['Alcatraz Versus the Evil Librarians', 'Brandon Sanderson']
Predicate: ['author', 'birthPlace']
Object: ['Brandon Sanderson', 'Lincoln, Nebraska']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: The United states is both the home of the African American ethnic group and the book Alcatraz Versus the Evil Librarians which is almost totally unrelated.
Subject: ['Alcatraz Versus the Evil Librarians', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: The book Alcatraz Versus the Evil Librarians comes from the U. S. where there is an ethnic group of African Americans.
Subject: ['Alcatraz Versus the Evil Librarians', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ African Americans']]
Text: The book Alcatraz Versus the Evil Librarians comes from the United States where the African Americans are an ethnic group.
Subject: ['Alcatraz Versus the Evil Librarians', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'African Americans']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ country __object__ United States', '__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']]
Text: Alcatraz Versus the Evil Librarians is from The United States where the Native Americans are an ethnic group.
Subject: ['Alcatraz Versus the Evil Librarians', 'United States']
Predicate: ['country', 'ethnicGroup']
Object: ['United States', 'Native Americans in the United States']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ language __object__ English language', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ country __object__ United States']]
Text: Alcatraz Versus the Evil Librarians, written in English, is from The United States.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ language __object__ English language', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ country __object__ United States']]
Text: The book Alcatraz Versus the Evil Librarians is written in English and comes from the U.S.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ language __object__ English language', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ country __object__ United States']]
Text: Alcatraz Versus the Evil Librarians is from The United States and written in English.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ language __object__ English language', '__subject__ English language __predicate__ spokenIn __object__ Great Britain']]
Text: Alcatraz Versus the Evil Librarians is written in English, the language originated in Great Britain.
Subject: ['Alcatraz Versus the Evil Librarians', 'English language']
Predicate: ['language', 'spokenIn']
Object: ['English language', 'Great Britain']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ language __object__ English language', '__subject__ English language __predicate__ spokenIn __object__ Great Britain']]
Text: Alcatraz Versus the Evil Librarians is in English, the national language of Great Britain.
Subject: ['Alcatraz Versus the Evil Librarians', 'English language']
Predicate: ['language', 'spokenIn']
Object: ['English language', 'Great Britain']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ language __object__ English language', '__subject__ English language __predicate__ spokenIn __object__ Great Britain']]
Text: The book Alcatraz Versus the Evil Librarians is written in English the language spoken in Great Britain.
Subject: ['Alcatraz Versus the Evil Librarians', 'English language']
Predicate: ['language', 'spokenIn']
Object: ['English language', 'Great Britain']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Print', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ isbnNumber __object__ 0-439-92550-9']]
Text: Alcatraz Versus the Evil Librarians, available in print, has the ISBN number 0-439-92550-9.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['mediaType', 'isbnNumber']
Object: ['Print', '0-439-92550-9']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Print', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ isbnNumber __object__ 0-439-92550-9']]
Text: Alcatraz Versus the Evil Librarians is produced in print, with the ISBN number 0-439-92550-9.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['mediaType', 'isbnNumber']
Object: ['Print', '0-439-92550-9']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Print', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ isbnNumber __object__ 0-439-92550-9']]
Text: The book 'Alcatraz Versus the Evil Librarians' is in print and has the ISBN number 0-439-92550-9.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['mediaType', 'isbnNumber']
Object: ['Print', '0-439-92550-9']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Hardcover', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ oclcNumber __object__ 78771100']]
Text: Alcatraz Versus the Evil Librarians is published in Hardcover and the OCLC number 78771100.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['mediaType', 'oclcNumber']
Object: ['Hardcover', '78771100']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Hardcover', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ oclcNumber __object__ 78771100']]
Text: Alcatraz Versus the Evil Librarians is published in Hardcover and has an OCLC number of 78771100.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['mediaType', 'oclcNumber']
Object: ['Hardcover', '78771100']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Hardcover', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ oclcNumber __object__ 78771100']]
Text: Alcatraz Versus the Evil Librarians is published in Hardcover and its OCLC number is 7877110.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['mediaType', 'oclcNumber']
Object: ['Hardcover', '78771100']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Hardcover', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ numberOfPages __object__ 320']]
Text: Alcatraz Versus the Evil Librarians is published in Hardcover and has 320 pages.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['mediaType', 'numberOfPages']
Object: ['Hardcover', '320']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Hardcover', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ numberOfPages __object__ 320']]
Text: Alcatraz Versus the Evil Librarians is a 320-page hardcover book.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['mediaType', 'numberOfPages']
Object: ['Hardcover', '320']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Hardcover', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ numberOfPages __object__ 320']]
Text: Alcatraz Versus the Evil Librarians is published in Hardcover which is 320 pages long.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['mediaType', 'numberOfPages']
Object: ['Hardcover', '320']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ numberOfPages __object__ 320', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Print']]
Text: Alcatraz Versus the Evil Librarians is produced in print and has 320 pages.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['numberOfPages', 'mediaType']
Object: ['320', 'Print']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ numberOfPages __object__ 320', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Print']]
Text: Alcatraz Versus the Evil Librarians is produced in print which is 320 pages long.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['numberOfPages', 'mediaType']
Object: ['320', 'Print']

Triple: [['__subject__ Alcatraz Versus the Evil Librarians __predicate__ numberOfPages __object__ 320', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Print']]
Text: The 320-page book, "Alcatraz Versus the Evil Librarians" is currently in print.
Subject: ['Alcatraz Versus the Evil Librarians', 'Alcatraz Versus the Evil Librarians']
Predicate: ['numberOfPages', 'mediaType']
Object: ['320', 'Print']

Triple: [['__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.', '__subject__ American Journal of Mathematics __predicate__ eissnNumber __object__ 1080']]
Text: Am. J. Math is the abbreviation for the American Journal of Mathematics which has the EISSN number 1080.
Subject: ['American Journal of Mathematics', 'American Journal of Mathematics']
Predicate: ['abbreviation', 'eissnNumber']
Object: ['Am. J. Math.', '1080']

Triple: [['__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.', '__subject__ American Journal of Mathematics __predicate__ eissnNumber __object__ 1080']]
Text: Am. J. Math is the abbreviation for the American Journal of Mathematics whose EISSN number is 1080.
Subject: ['American Journal of Mathematics', 'American Journal of Mathematics']
Predicate: ['abbreviation', 'eissnNumber']
Object: ['Am. J. Math.', '1080']

Triple: [['__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.', '__subject__ American Journal of Mathematics __predicate__ eissnNumber __object__ 1080']]
Text: Am. J. Math is the abbreviation for the American Journal of Mathematics, 1080 is the EISSN number.
Subject: ['American Journal of Mathematics', 'American Journal of Mathematics']
Predicate: ['abbreviation', 'eissnNumber']
Object: ['Am. J. Math.', '1080']

Triple: [['__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.', '__subject__ American Journal of Mathematics __predicate__ issnNumber __object__ 0002-9327']]
Text: The American Journal of Mathematics ISSN 0002-9327 is often abbreviated as AM. J. Math.
Subject: ['American Journal of Mathematics', 'American Journal of Mathematics']
Predicate: ['abbreviation', 'issnNumber']
Object: ['Am. J. Math.', '0002-9327']

Triple: [['__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.', '__subject__ American Journal of Mathematics __predicate__ issnNumber __object__ 0002-9327']]
Text: The American Journal of Mathematics has the abbreviated title of Am. J. Math. and the ISSN number of 0002-9327.
Subject: ['American Journal of Mathematics', 'American Journal of Mathematics']
Predicate: ['abbreviation', 'issnNumber']
Object: ['Am. J. Math.', '0002-9327']

Triple: [['__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.', '__subject__ American Journal of Mathematics __predicate__ issnNumber __object__ 0002-9327']]
Text: The ISSN number "0002-9327" is for American Journal of Mathematics which has the abbreviated title of Am.J.Math.
Subject: ['American Journal of Mathematics', 'American Journal of Mathematics']
Predicate: ['abbreviation', 'issnNumber']
Object: ['Am. J. Math.', '0002-9327']

Triple: [['__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.', '__subject__ American Journal of Mathematics __predicate__ issnNumber __object__ 1080-6377']]
Text: The American Journal of Mathematics (abbreviated to Am. J. Math) has ISSN number 1080-6377.
Subject: ['American Journal of Mathematics', 'American Journal of Mathematics']
Predicate: ['abbreviation', 'issnNumber']
Object: ['Am. J. Math.', '1080-6377']

Triple: [['__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.', '__subject__ American Journal of Mathematics __predicate__ issnNumber __object__ 1080-6377']]
Text: The book American Journal of Mathematics, identified by ISSN number 1080-6377, is abbreviated by Am. J. Math.
Subject: ['American Journal of Mathematics', 'American Journal of Mathematics']
Predicate: ['abbreviation', 'issnNumber']
Object: ['Am. J. Math.', '1080-6377']

Triple: [['__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.', '__subject__ American Journal of Mathematics __predicate__ issnNumber __object__ 1080-6377']]
Text: The American Journal of Mathematics, also known as Am. J. Math, has an ISSN number 1080-6377.
Subject: ['American Journal of Mathematics', 'American Journal of Mathematics']
Predicate: ['abbreviation', 'issnNumber']
Object: ['Am. J. Math.', '1080-6377']

Triple: [['__subject__ American Journal of Mathematics __predicate__ firstPublicationYear __object__ 1878', '__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.']]
Text: Am. J. Math is the abbreviation for the American Journal of Mathematics which was first published in 1878.
Subject: ['American Journal of Mathematics', 'American Journal of Mathematics']
Predicate: ['firstPublicationYear', 'abbreviation']
Object: ['1878', 'Am. J. Math.']

Triple: [['__subject__ American Journal of Mathematics __predicate__ firstPublicationYear __object__ 1878', '__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.']]
Text: The American Journal of Mathematics, abbreviated to Am. J. Math., was first published in 1878.
Subject: ['American Journal of Mathematics', 'American Journal of Mathematics']
Predicate: ['firstPublicationYear', 'abbreviation']
Object: ['1878', 'Am. J. Math.']

Triple: [['__subject__ American Journal of Mathematics __predicate__ firstPublicationYear __object__ 1878', '__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.']]
Text: The American Journal of Mathematics was first published in 1878 and is also known by the abbreviated title of Am. J. Math.
Subject: ['American Journal of Mathematics', 'American Journal of Mathematics']
Predicate: ['firstPublicationYear', 'abbreviation']
Object: ['1878', 'Am. J. Math.']

Triple: [['__subject__ American Journal of Mathematics __predicate__ impactFactor __object__ 1.337', '__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.']]
Text: With an impact Factor of 1.337, The American Journal of Mathematics has the abbreviation Am. J. Math.
Subject: ['American Journal of Mathematics', 'American Journal of Mathematics']
Predicate: ['impactFactor', 'abbreviation']
Object: ['1.337', 'Am. J. Math.']

Triple: [['__subject__ American Journal of Mathematics __predicate__ impactFactor __object__ 1.337', '__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.']]
Text: The American Journal of Mathematics is abbreviated to Am. J. Math. and has the impact factor of 1.337.
Subject: ['American Journal of Mathematics', 'American Journal of Mathematics']
Predicate: ['impactFactor', 'abbreviation']
Object: ['1.337', 'Am. J. Math.']

Triple: [['__subject__ American Journal of Mathematics __predicate__ impactFactor __object__ 1.337', '__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.']]
Text: The American Journal of Mathematics is also known by the abbreviated title of Am. J. Math and has an impact factor of 1.337.
Subject: ['American Journal of Mathematics', 'American Journal of Mathematics']
Predicate: ['impactFactor', 'abbreviation']
Object: ['1.337', 'Am. J. Math.']

Triple: [['__subject__ American Journal of Mathematics __predicate__ publisher __object__ Johns Hopkins University Press', '__subject__ Johns Hopkins University Press __predicate__ country __object__ United States']]
Text: Johns Hopkins University Press is located in the United States and publishes the American Journal of Mathematics.
Subject: ['American Journal of Mathematics', 'Johns Hopkins University Press']
Predicate: ['publisher', 'country']
Object: ['Johns Hopkins University Press', 'United States']

Triple: [['__subject__ American Journal of Mathematics __predicate__ publisher __object__ Johns Hopkins University Press', '__subject__ Johns Hopkins University Press __predicate__ country __object__ United States']]
Text: The American Journal of Mathematics was published by Johns Hopkins University Press in the United States.
Subject: ['American Journal of Mathematics', 'Johns Hopkins University Press']
Predicate: ['publisher', 'country']
Object: ['Johns Hopkins University Press', 'United States']

Triple: [['__subject__ American Journal of Mathematics __predicate__ publisher __object__ Johns Hopkins University Press', '__subject__ Johns Hopkins University Press __predicate__ country __object__ United States']]
Text: The American Journal of Mathematics was published by Johns Hopkins University Press based in the United States.
Subject: ['American Journal of Mathematics', 'Johns Hopkins University Press']
Predicate: ['publisher', 'country']
Object: ['Johns Hopkins University Press', 'United States']

Triple: [['__subject__ HIV __predicate__ family __object__ Retrovirus', '__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV']]
Text: The AIDS (journal) is the academic discipline of HIV which is part of the family Retrovirus.
Subject: ['HIV', 'AIDS (journal)']
Predicate: ['family', 'academicDiscipline']
Object: ['Retrovirus', 'HIV']

Triple: [['__subject__ Into Battle (novel) __predicate__ followedBy __object__ The Violet Keystone', '__subject__ Above the Veil __predicate__ followedBy __object__ Into Battle (novel)']]
Text: Above the Veil is followed by Into Battle and The Violet Keystone.
Subject: ['Into Battle (novel)', 'Above the Veil']
Predicate: ['followedBy', 'followedBy']
Object: ['The Violet Keystone', 'Into Battle (novel)']

Triple: [['__subject__ Into Battle (novel) __predicate__ followedBy __object__ The Violet Keystone', '__subject__ Above the Veil __predicate__ followedBy __object__ Into Battle (novel)']]
Text: The novel Into Battle is followed by The Violet Keystone and Above the Veil.
Subject: ['Into Battle (novel)', 'Above the Veil']
Predicate: ['followedBy', 'followedBy']
Object: ['The Violet Keystone', 'Into Battle (novel)']

Triple: [['__subject__ Into Battle (novel) __predicate__ followedBy __object__ The Violet Keystone', '__subject__ Above the Veil __predicate__ followedBy __object__ Into Battle (novel)']]
Text: The Violet Keystone followed the novel Into Battle, which followed Above the Veil.
Subject: ['Into Battle (novel)', 'Above the Veil']
Predicate: ['followedBy', 'followedBy']
Object: ['The Violet Keystone', 'Into Battle (novel)']

Triple: [['__subject__ John Cowper Powys __predicate__ birthPlace __object__ Shirley, Derbyshire', '__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys']]
Text: A Glastonbury Romance was written by John Cowper Powys, who was born in Shirley, Derbyshire.
Subject: ['John Cowper Powys', 'A Glastonbury Romance']
Predicate: ['birthPlace', 'author']
Object: ['Shirley, Derbyshire', 'John Cowper Powys']

Triple: [['__subject__ John Cowper Powys __predicate__ birthPlace __object__ Shirley, Derbyshire', '__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys']]
Text: A Glastonbury Romance is authored by Shirley, Derbyshire native John Cowper Powys.
Subject: ['John Cowper Powys', 'A Glastonbury Romance']
Predicate: ['birthPlace', 'author']
Object: ['Shirley, Derbyshire', 'John Cowper Powys']

Triple: [['__subject__ John Cowper Powys __predicate__ birthPlace __object__ Shirley, Derbyshire', '__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys']]
Text: John Cowper Powys wrote A Glastonbury Romance and was born in Shirley, Derbyshire.
Subject: ['John Cowper Powys', 'A Glastonbury Romance']
Predicate: ['birthPlace', 'author']
Object: ['Shirley, Derbyshire', 'John Cowper Powys']

Triple: [['__subject__ John Cowper Powys __predicate__ notableWork __object__ Owen Glendower (novel)', '__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys']]
Text: The novel Owen Glendower is a notable work by John Cowper Powys, who also wrote A Glastonbury Romance.
Subject: ['John Cowper Powys', 'A Glastonbury Romance']
Predicate: ['notableWork', 'author']
Object: ['Owen Glendower (novel)', 'John Cowper Powys']

Triple: [['__subject__ John Cowper Powys __predicate__ notableWork __object__ Owen Glendower (novel)', '__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys']]
Text: Owen Glendower and A Glastonbury Romance are both novels written by John Cowper Powys.
Subject: ['John Cowper Powys', 'A Glastonbury Romance']
Predicate: ['notableWork', 'author']
Object: ['Owen Glendower (novel)', 'John Cowper Powys']

Triple: [['__subject__ John Cowper Powys __predicate__ notableWork __object__ Owen Glendower (novel)', '__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys']]
Text: John Cowper Powys wrote the novel Owen Glendower and A Glastonbury Romance.
Subject: ['John Cowper Powys', 'A Glastonbury Romance']
Predicate: ['notableWork', 'author']
Object: ['Owen Glendower (novel)', 'John Cowper Powys']

Triple: [['__subject__ John Cowper Powys __predicate__ notableWork __object__ Wolf Solent', '__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys']]
Text: Wolf Solent and A Glastonbury Romance were both novels written by John Cowper Powys.
Subject: ['John Cowper Powys', 'A Glastonbury Romance']
Predicate: ['notableWork', 'author']
Object: ['Wolf Solent', 'John Cowper Powys']

Triple: [['__subject__ John Cowper Powys __predicate__ notableWork __object__ Wolf Solent', '__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys']]
Text: Wolf Solent is a notable work of author John Cowper Powys who also wrote A Glastonbury Romance.
Subject: ['John Cowper Powys', 'A Glastonbury Romance']
Predicate: ['notableWork', 'author']
Object: ['Wolf Solent', 'John Cowper Powys']

Triple: [['__subject__ SAGE Publications __predicate__ founder __object__ Sara Miller McCune', '__subject__ Administrative Science Quarterly __predicate__ publisher __object__ SAGE Publications']]
Text: SAGE Publications founded by Sara Miller McCune publishes the Administrative Science Quarterly.
Subject: ['SAGE Publications', 'Administrative Science Quarterly']
Predicate: ['founder', 'publisher']
Object: ['Sara Miller McCune', 'SAGE Publications']

Triple: [['__subject__ SAGE Publications __predicate__ founder __object__ Sara Miller McCune', '__subject__ Administrative Science Quarterly __predicate__ publisher __object__ SAGE Publications']]
Text: Sara Miller McCune founded SAGE Publications which is the publisher of Administrative Science Quarterly.
Subject: ['SAGE Publications', 'Administrative Science Quarterly']
Predicate: ['founder', 'publisher']
Object: ['Sara Miller McCune', 'SAGE Publications']

Triple: [['__subject__ SAGE Publications __predicate__ founder __object__ Sara Miller McCune', '__subject__ Administrative Science Quarterly __predicate__ publisher __object__ SAGE Publications']]
Text: Sara Miller McCune is the founder of SAGE publications, which publishes Administrative Science Quarterly.
Subject: ['SAGE Publications', 'Administrative Science Quarterly']
Predicate: ['founder', 'publisher']
Object: ['Sara Miller McCune', 'SAGE Publications']

Triple: [['__subject__ The Secret Scripture __predicate__ publisher __object__ Faber and Faber', '__subject__ A Long Long Way __predicate__ followedBy __object__ The Secret Scripture']]
Text: The novel A Long Long Way was followed by The Secret Scripture published by Faber and Faber.
Subject: ['The Secret Scripture', 'A Long Long Way']
Predicate: ['publisher', 'followedBy']
Object: ['Faber and Faber', 'The Secret Scripture']

Triple: [['__subject__ The Secret Scripture __predicate__ publisher __object__ Faber and Faber', '__subject__ A Long Long Way __predicate__ followedBy __object__ The Secret Scripture']]
Text: "The Secret Scriptures," published by Faber and Faber, followed "A Long, Long Way".
Subject: ['The Secret Scripture', 'A Long Long Way']
Predicate: ['publisher', 'followedBy']
Object: ['Faber and Faber', 'The Secret Scripture']

Triple: [['__subject__ The Secret Scripture __predicate__ publisher __object__ Faber and Faber', '__subject__ A Long Long Way __predicate__ followedBy __object__ The Secret Scripture']]
Text: The book The Secret Scriptures, published by Faber and Faber, followed the book "A Long Long Way".
Subject: ['The Secret Scripture', 'A Long Long Way']
Predicate: ['publisher', 'followedBy']
Object: ['Faber and Faber', 'The Secret Scripture']

Triple: [['__subject__ United Kingdom __predicate__ language __object__ English language', '__subject__ AIDS (journal) __predicate__ country __object__ United Kingdom']]
Text: AIDS (journal) is published in the UK where English is the spoken language.
Subject: ['United Kingdom', 'AIDS (journal)']
Predicate: ['language', 'country']
Object: ['English language', 'United Kingdom']

Triple: [['__subject__ United Kingdom __predicate__ language __object__ English language', '__subject__ AIDS (journal) __predicate__ country __object__ United Kingdom']]
Text: AIDS journal is from the United Kingdom where the language spoken is English.
Subject: ['United Kingdom', 'AIDS (journal)']
Predicate: ['language', 'country']
Object: ['English language', 'United Kingdom']

Triple: [['__subject__ United Kingdom __predicate__ language __object__ English language', '__subject__ AIDS (journal) __predicate__ country __object__ United Kingdom']]
Text: The AIDS journal was published in the United Kingdom where the English language is spoken.
Subject: ['United Kingdom', 'AIDS (journal)']
Predicate: ['language', 'country']
Object: ['English language', 'United Kingdom']

Triple: [['__subject__ United Kingdom __predicate__ leader __object__ David Cameron', '__subject__ AIDS (journal) __predicate__ country __object__ United Kingdom']]
Text: The AIDS Journal was published in the UK, where David Cameron was a leader.
Subject: ['United Kingdom', 'AIDS (journal)']
Predicate: ['leader', 'country']
Object: ['David Cameron', 'United Kingdom']

Triple: [['__subject__ United Kingdom __predicate__ leader __object__ David Cameron', '__subject__ AIDS (journal) __predicate__ country __object__ United Kingdom']]
Text: AIDS (journal) is published in the UK where David Cameron is the leader.
Subject: ['United Kingdom', 'AIDS (journal)']
Predicate: ['leader', 'country']
Object: ['David Cameron', 'United Kingdom']

Triple: [['__subject__ United Kingdom __predicate__ leader __object__ David Cameron', '__subject__ AIDS (journal) __predicate__ country __object__ United Kingdom']]
Text: AIDS journal is from the United Kingdom where the leader is David Cameron.
Subject: ['United Kingdom', 'AIDS (journal)']
Predicate: ['leader', 'country']
Object: ['David Cameron', 'United Kingdom']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ A Severed Wasp __predicate__ country __object__ United States']]
Text: A Severed Wasp is from the United States where the capital is Washington DC.
Subject: ['United States', 'A Severed Wasp']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ A Severed Wasp __predicate__ country __object__ United States']]
Text: 'A severed Wasp' comes from the United States where the capital is Washington, D.C.
Subject: ['United States', 'A Severed Wasp']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ A Wizard of Mars __predicate__ country __object__ United States']]
Text: A Wizard of Mars originates from the United States where the capital city is Washington DC.
Subject: ['United States', 'A Wizard of Mars']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ capital __object__ Washington, D.C.', '__subject__ A Wizard of Mars __predicate__ country __object__ United States']]
Text: A Wizard of Mars originates from the United States where the capital is Washington D. C.
Subject: ['United States', 'A Wizard of Mars']
Predicate: ['capital', 'country']
Object: ['Washington, D.C.', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ A Fortress of Grey Ice __predicate__ country __object__ United States']]
Text: A Fortress of Grey Ice is from the United States, where Asian Americans form one of the ethnic groups.
Subject: ['United States', 'A Fortress of Grey Ice']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ A Fortress of Grey Ice __predicate__ country __object__ United States']]
Text: A Fortress of Grey Ice is from the United States where there are many Asian Americans.
Subject: ['United States', 'A Fortress of Grey Ice']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ A Severed Wasp __predicate__ country __object__ United States']]
Text: A Severed Wasp originates from the United States, which counts Asian Americans among its ethnic groups.
Subject: ['United States', 'A Severed Wasp']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ A Severed Wasp __predicate__ country __object__ United States']]
Text: The United States has an ethnic group called Asian Americans and is the home of a severed wasp.
Subject: ['United States', 'A Severed Wasp']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ country __object__ United States']]
Text: In almost unrelated facts both Asian Americans and the book Alcatraz Versus the Evil Librarians come from the U.S.
Subject: ['United States', 'Alcatraz Versus the Evil Librarians']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ country __object__ United States']]
Text: The book Alcatraz Versus the Evil Librarians comes from the U.S where there are many Asian Americans.
Subject: ['United States', 'Alcatraz Versus the Evil Librarians']
Predicate: ['ethnicGroup', 'country']
Object: ['Asian Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ White Americans', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ country __object__ United States']]
Text: The book Alcatraz Versus the Evil Librarians is an example of American Literature. White people are a part of the U.S's ethnic make-up.
Subject: ['United States', 'Alcatraz Versus the Evil Librarians']
Predicate: ['ethnicGroup', 'country']
Object: ['White Americans', 'United States']

Triple: [['__subject__ United States __predicate__ ethnicGroup __object__ White Americans', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ country __object__ United States']]
Text: 'Alcatraz Versus the Evil Librarians' is from The United States, the country where White Americans live.
Subject: ['United States', 'Alcatraz Versus the Evil Librarians']
Predicate: ['ethnicGroup', 'country']
Object: ['White Americans', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ A Severed Wasp __predicate__ country __object__ United States']]
Text: English is the main language spoken in the United States. This country is home to the Severed Wasp.
Subject: ['United States', 'A Severed Wasp']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ A Severed Wasp __predicate__ country __object__ United States']]
Text: A Severed Wasp is from the United States where English is the language.
Subject: ['United States', 'A Severed Wasp']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ A Severed Wasp __predicate__ country __object__ United States']]
Text: A severed Wasp originates from the United States where the language is English.
Subject: ['United States', 'A Severed Wasp']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ A Wizard of Mars __predicate__ country __object__ United States']]
Text: " A Wizard of Mars was Published in the United States, of which English is the language.
Subject: ['United States', 'A Wizard of Mars']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ A Wizard of Mars __predicate__ country __object__ United States']]
Text: "A Wizard of Mars" was published in the United States, where the official language is English.
Subject: ['United States', 'A Wizard of Mars']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ A Wizard of Mars __predicate__ country __object__ United States']]
Text: A Wizard of Mars originates from the United States, where the official language is English.
Subject: ['United States', 'A Wizard of Mars']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ country __object__ United States']]
Text: English is the language of the United States the country where the book Alcatraz Versus the Evil Librarians was written.
Subject: ['United States', 'Alcatraz Versus the Evil Librarians']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ country __object__ United States']]
Text: The book Alcatraz Versus the Evil Librarians comes from the United States where the English language is spoken.
Subject: ['United States', 'Alcatraz Versus the Evil Librarians']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ language __object__ English language', '__subject__ Alcatraz Versus the Evil Librarians __predicate__ country __object__ United States']]
Text: Alcatraz Versus the Evil Librarians is from The United States therefore is written in english.
Subject: ['United States', 'Alcatraz Versus the Evil Librarians']
Predicate: ['language', 'country']
Object: ['English language', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ 1634: The Ram Rebellion __predicate__ country __object__ United States']]
Text: 1634 The Ram Rebellion was written in the U.S where Barack Obama is the leader.
Subject: ['United States', '1634: The Ram Rebellion']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ 1634: The Ram Rebellion __predicate__ country __object__ United States']]
Text: 1634 The Ram Rebellion comes from the United States where Barack Obama is the president.
Subject: ['United States', '1634: The Ram Rebellion']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ 1634: The Ram Rebellion __predicate__ country __object__ United States']]
Text: 1634 The Ram Rebellion was written in the U.S where Barack Obama is President.
Subject: ['United States', '1634: The Ram Rebellion']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ A Fortress of Grey Ice __predicate__ country __object__ United States']]
Text: A Fortress of Grey Ice is from the United States, led by President Barack Obama.
Subject: ['United States', 'A Fortress of Grey Ice']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ A Fortress of Grey Ice __predicate__ country __object__ United States']]
Text: A Fortress of Grey Ice is from the United States where Barack Obama is President.
Subject: ['United States', 'A Fortress of Grey Ice']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ A Fortress of Grey Ice __predicate__ country __object__ United States']]
Text: A Fortress of Grey Ice is from the United States, where the leader is Barack Obama.
Subject: ['United States', 'A Fortress of Grey Ice']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ A Severed Wasp __predicate__ country __object__ United States']]
Text: A Severed Wasp is from the United States where Barack Obama is president.
Subject: ['United States', 'A Severed Wasp']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ A Severed Wasp __predicate__ country __object__ United States']]
Text: A Severed Wasp originates from the United States where Barack Obama is President.
Subject: ['United States', 'A Severed Wasp']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ A Severed Wasp __predicate__ country __object__ United States']]
Text: A Severed Wasp is from the United States where the leader is Barack Obama.
Subject: ['United States', 'A Severed Wasp']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ A Wizard of Mars __predicate__ country __object__ United States']]
Text: A Wizard of Mars was Published in the United States where Barack Obama is president.
Subject: ['United States', 'A Wizard of Mars']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ A Wizard of Mars __predicate__ country __object__ United States']]
Text: ' A Wizard of Mars' was published in the United States, the country where Barack Obama is the leader.
Subject: ['United States', 'A Wizard of Mars']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leader __object__ Barack Obama', '__subject__ A Wizard of Mars __predicate__ country __object__ United States']]
Text: A Wizard of Mars originates from the United States where Barack Obama is the leader.
Subject: ['United States', 'A Wizard of Mars']
Predicate: ['leader', 'country']
Object: ['Barack Obama', 'United States']

Triple: [['__subject__ United States __predicate__ leaderTitle __object__ President of the United States', '__subject__ 1634: The Ram Rebellion __predicate__ country __object__ United States']]
Text: 1634 The Ram Rebellion was written in the United States where the leader is known as the President.
Subject: ['United States', '1634: The Ram Rebellion']
Predicate: ['leaderTitle', 'country']
Object: ['President of the United States', 'United States']

Triple: [['__subject__ United States __predicate__ leaderTitle __object__ President of the United States', '__subject__ 1634: The Ram Rebellion __predicate__ country __object__ United States']]
Text: 1634 The Ram Rebellion comes from the United States, where the President is the head of state.
Subject: ['United States', '1634: The Ram Rebellion']
Predicate: ['leaderTitle', 'country']
Object: ['President of the United States', 'United States']

Triple: [['__subject__ United States __predicate__ leaderTitle __object__ President of the United States', '__subject__ 1634: The Ram Rebellion __predicate__ country __object__ United States']]
Text: 1634 The Ram Rebellion was written in the U.S where the title of the leader is President.
Subject: ['United States', '1634: The Ram Rebellion']
Predicate: ['leaderTitle', 'country']
Object: ['President of the United States', 'United States']

Triple: [['__subject__ United States __predicate__ leaderTitle __object__ President of the United States', '__subject__ A Fortress of Grey Ice __predicate__ country __object__ United States']]
Text: A Fortress of Grey Ice is from the United States where the leader is known as the President.
Subject: ['United States', 'A Fortress of Grey Ice']
Predicate: ['leaderTitle', 'country']
Object: ['President of the United States', 'United States']

Triple: [['__subject__ United States __predicate__ leaderTitle __object__ President of the United States', '__subject__ A Fortress of Grey Ice __predicate__ country __object__ United States']]
Text: A Fortress of Grey Ice is from the United States where the title of the leader is President.
Subject: ['United States', 'A Fortress of Grey Ice']
Predicate: ['leaderTitle', 'country']
Object: ['President of the United States', 'United States']

Triple: [['__subject__ United States __predicate__ leaderTitle __object__ President of the United States', '__subject__ A Fortress of Grey Ice __predicate__ country __object__ United States']]
Text: A Fortress of Grey Ice is from the United States, whose leader is called the President.
Subject: ['United States', 'A Fortress of Grey Ice']
Predicate: ['leaderTitle', 'country']
Object: ['President of the United States', 'United States']

Triple: [['__subject__ United States __predicate__ leaderTitle __object__ President of the United States', '__subject__ A Severed Wasp __predicate__ country __object__ United States']]
Text: The head of state of the United States is known as the President. This country is home to the Severed Wasp.
Subject: ['United States', 'A Severed Wasp']
Predicate: ['leaderTitle', 'country']
Object: ['President of the United States', 'United States']

Triple: [['__subject__ United States __predicate__ leaderTitle __object__ President of the United States', '__subject__ A Severed Wasp __predicate__ country __object__ United States']]
Text: A Severed Wasp is from the United States, whose leader is the President.
Subject: ['United States', 'A Severed Wasp']
Predicate: ['leaderTitle', 'country']
Object: ['President of the United States', 'United States']

Triple: [['__subject__ United States __predicate__ leaderTitle __object__ President of the United States', '__subject__ A Severed Wasp __predicate__ country __object__ United States']]
Text: The leader of the United States is the President. This country is home to the severed Wasp.
Subject: ['United States', 'A Severed Wasp']
Predicate: ['leaderTitle', 'country']
Object: ['President of the United States', 'United States']

Triple: [['__subject__ United States __predicate__ leaderTitle __object__ President of the United States', '__subject__ A Wizard of Mars __predicate__ country __object__ United States']]
Text: "A Wizard of Mars" was published in the United States, where the leader is known as the President.
Subject: ['United States', 'A Wizard of Mars']
Predicate: ['leaderTitle', 'country']
Object: ['President of the United States', 'United States']

Triple: [['__subject__ United States __predicate__ leaderTitle __object__ President of the United States', '__subject__ A Wizard of Mars __predicate__ country __object__ United States']]
Text: A Wizard of Mars originates from the United States where the title of the leader is the President.
Subject: ['United States', 'A Wizard of Mars']
Predicate: ['leaderTitle', 'country']
Object: ['President of the United States', 'United States']

Triple: [['__subject__ Viking Press __predicate__ country __object__ United States', '__subject__ A Long Long Way __predicate__ publisher __object__ Viking Press']]
Text: A Long Long Way is published by Viking press in the United States.
Subject: ['Viking Press', 'A Long Long Way']
Predicate: ['country', 'publisher']
Object: ['United States', 'Viking Press']

Triple: [['__subject__ Viking Press __predicate__ country __object__ United States', '__subject__ A Long Long Way __predicate__ publisher __object__ Viking Press']]
Text: The book 'A Long Long Way' was published by Viking Press which is in the United States.
Subject: ['Viking Press', 'A Long Long Way']
Predicate: ['country', 'publisher']
Object: ['United States', 'Viking Press']

Triple: [['__subject__ Weymouth Sands __predicate__ followedBy __object__ Maiden Castle (novel)', '__subject__ A Glastonbury Romance __predicate__ followedBy __object__ Weymouth Sands']]
Text: 'A Glastonbury Romance' was followed by 'Weymouth Sands', the sequel to which was 'Maiden Castle'.
Subject: ['Weymouth Sands', 'A Glastonbury Romance']
Predicate: ['followedBy', 'followedBy']
Object: ['Maiden Castle (novel)', 'Weymouth Sands']

Triple: [['__subject__ Weymouth Sands __predicate__ followedBy __object__ Maiden Castle (novel)', '__subject__ A Glastonbury Romance __predicate__ followedBy __object__ Weymouth Sands']]
Text: A Glastonbury Romance was followed by Weymouth Sands and Maiden Castle.
Subject: ['Weymouth Sands', 'A Glastonbury Romance']
Predicate: ['followedBy', 'followedBy']
Object: ['Maiden Castle (novel)', 'Weymouth Sands']

Triple: [['__subject__ Wizards at War __predicate__ publisher __object__ Harcourt (publisher)', '__subject__ A Wizard of Mars __predicate__ precededBy __object__ Wizards at War']]
Text: Wizards at War, which preceded A Wizard of Mars is published by Harcourt.
Subject: ['Wizards at War', 'A Wizard of Mars']
Predicate: ['publisher', 'precededBy']
Object: ['Harcourt (publisher)', 'Wizards at War']

Triple: [['__subject__ Wizards at War __predicate__ publisher __object__ Harcourt (publisher)', '__subject__ A Wizard of Mars __predicate__ precededBy __object__ Wizards at War']]
Text: Wizards at War, which was preceded by A Wizard of Mars was published by Harcourt (publishers).
Subject: ['Wizards at War', 'A Wizard of Mars']
Predicate: ['publisher', 'precededBy']
Object: ['Harcourt (publisher)', 'Wizards at War']

Triple: [['__subject__ Wizards at War __predicate__ publisher __object__ Harcourt (publisher)', '__subject__ A Wizard of Mars __predicate__ precededBy __object__ Wizards at War']]
Text: Wizards at War, followed by A Wizard of Mars, was published by Harcourt (publishers).
Subject: ['Wizards at War', 'A Wizard of Mars']
Predicate: ['publisher', 'precededBy']
Object: ['Harcourt (publisher)', 'Wizards at War']

