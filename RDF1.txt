Triple: ['__subject__ Aarhus Airport __predicate__ cityServed __object__ Aarhus, Denmark']
Text: The Aarhus is the airport of Aarhus, Denmark.
Subject: Aarhus Airport
Predicate: cityServed
Object: Aarhus, Denmark

Triple: ['__subject__ Aarhus Airport __predicate__ cityServed __object__ Aarhus, Denmark']
Text: Aarhus Airport serves the city of Aarhus, Denmark.
Subject: Aarhus Airport
Predicate: cityServed
Object: Aarhus, Denmark

Triple: ['__subject__ Aarhus Airport __predicate__ cityServed __object__ Aarhus']
Text: Aarhus airport serves the city of Aarhus.
Subject: Aarhus Airport
Predicate: cityServed
Object: Aarhus

Triple: ['__subject__ Aarhus Airport __predicate__ elevationAboveTheSeaLevel __object__ 25.0']
Text: Aarhus Airport is 25 metres above sea level.
Subject: Aarhus Airport
Predicate: elevationAboveTheSeaLevel
Object: 25.0

Triple: ['__subject__ Aarhus Airport __predicate__ elevationAboveTheSeaLevel __object__ 25.0']
Text: Aarhus airport is at an elevation of 25 metres above seal level.
Subject: Aarhus Airport
Predicate: elevationAboveTheSeaLevel
Object: 25.0

Triple: ['__subject__ Aarhus Airport __predicate__ elevationAboveTheSeaLevel __object__ 25.0']
Text: Aarhus Airport is 25.0 metres above the sea level.
Subject: Aarhus Airport
Predicate: elevationAboveTheSeaLevel
Object: 25.0

Triple: ['__subject__ Aarhus Airport __predicate__ location __object__ Tirstrup']
Text: Aarhus Airport is located in Tirstrup.
Subject: Aarhus Airport
Predicate: location
Object: Tirstrup

Triple: ['__subject__ Aarhus Airport __predicate__ location __object__ Tirstrup']
Text: The location of Aarhus Airport is Tirstrup.
Subject: Aarhus Airport
Predicate: location
Object: Tirstrup

Triple: ['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aarhus Lufthavn A/S']
Text: Aarhus Airport is operated by Aarhus Lufthavn A/S.
Subject: Aarhus Airport
Predicate: operatingOrganisation
Object: Aarhus Lufthavn A/S

Triple: ['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aarhus Lufthavn A/S']
Text: Aarhus Lufthavn A/S is the operation organisation of Aarhus Airport.
Subject: Aarhus Airport
Predicate: operatingOrganisation
Object: Aarhus Lufthavn A/S

Triple: ['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab']
Text: Aktieselskab is the operating organisation for Aarhus Airport.
Subject: Aarhus Airport
Predicate: operatingOrganisation
Object: Aktieselskab

Triple: ['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab']
Text: Aktieselskab operates Aarhus Airport.
Subject: Aarhus Airport
Predicate: operatingOrganisation
Object: Aktieselskab

Triple: ['__subject__ Aarhus Airport __predicate__ operatingOrganisation __object__ Aktieselskab']
Text: Aarhus Airport is operated by the Aktieselskab organisation.
Subject: Aarhus Airport
Predicate: operatingOrganisation
Object: Aktieselskab

Triple: ['__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2776.0']
Text: Aarhus Airport runway length is 2776.0.
Subject: Aarhus Airport
Predicate: runwayLength
Object: 2776.0

Triple: ['__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2776.0']
Text: Aarhus Airport has a runway length of 2776.0.
Subject: Aarhus Airport
Predicate: runwayLength
Object: 2776.0

Triple: ['__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2776.0']
Text: The length of the runway at Aarhus Airport is 2776.0.
Subject: Aarhus Airport
Predicate: runwayLength
Object: 2776.0

Triple: ['__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2777.0']
Text: The runway length at Aarhus Airport is 2777.0 meters.
Subject: Aarhus Airport
Predicate: runwayLength
Object: 2777.0

Triple: ['__subject__ Aarhus Airport __predicate__ runwayLength __object__ 2777.0']
Text: The runway length at Aarhus airport is 2777.0.
Subject: Aarhus Airport
Predicate: runwayLength
Object: 2777.0

Triple: ['__subject__ Aarhus Airport __predicate__ runwayName __object__ 10L/28R']
Text: Aarhus Airport runway name is 10L/28R.
Subject: Aarhus Airport
Predicate: runwayName
Object: 10L/28R

Triple: ['__subject__ Aarhus Airport __predicate__ runwayName __object__ 10L/28R']
Text: 10L/28R is the runway name of the Aarhus Airport.
Subject: Aarhus Airport
Predicate: runwayName
Object: 10L/28R

Triple: ['__subject__ Aarhus Airport __predicate__ runwayName __object__ 10L/28R']
Text: The runway name of Aarhus Airport is 10L/28R.
Subject: Aarhus Airport
Predicate: runwayName
Object: 10L/28R

Triple: ['__subject__ Aarhus Airport __predicate__ runwayName __object__ 10R/28L']
Text: The runway name at Aarhus Airport is "10R/28L".
Subject: Aarhus Airport
Predicate: runwayName
Object: 10R/28L

Triple: ['__subject__ Aarhus Airport __predicate__ runwayName __object__ 10R/28L']
Text: 10R/28L is the runway name at Aarhus airport.
Subject: Aarhus Airport
Predicate: runwayName
Object: 10R/28L

Triple: ['__subject__ Aarhus Airport __predicate__ runwayName __object__ 10R/28L']
Text: The runway name of Aarhus Airport is 10R/28L.
Subject: Aarhus Airport
Predicate: runwayName
Object: 10R/28L

Triple: ['__subject__ Abilene, Texas __predicate__ country __object__ United States']
Text: Abilene, Texas is in the United States.
Subject: Abilene, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Abilene, Texas __predicate__ country __object__ United States']
Text: Abilene Texas is in the United States.
Subject: Abilene, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Abilene, Texas __predicate__ country __object__ United States']
Text: Abilene, Texas is located in the United States.
Subject: Abilene, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Jones County, Texas']
Text: Abilene, Texas is part of Jones County, Texas.
Subject: Abilene, Texas
Predicate: isPartOf
Object: Jones County, Texas

Triple: ['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Jones County, Texas']
Text: Abilene is part of Jones County, Texas.
Subject: Abilene, Texas
Predicate: isPartOf
Object: Jones County, Texas

Triple: ['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Taylor County, Texas']
Text: Abilene, Texas is part of Taylor County, Texas.
Subject: Abilene, Texas
Predicate: isPartOf
Object: Taylor County, Texas

Triple: ['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Taylor County, Texas']
Text: Abilene is a part of Taylor County, Texas.
Subject: Abilene, Texas
Predicate: isPartOf
Object: Taylor County, Texas

Triple: ['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Texas']
Text: Abilene, Texas is part of Texas.
Subject: Abilene, Texas
Predicate: isPartOf
Object: Texas

Triple: ['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Texas']
Text: Abilene is part of Texas.
Subject: Abilene, Texas
Predicate: isPartOf
Object: Texas

Triple: ['__subject__ Abilene Regional Airport __predicate__ 1stRunwayLengthFeet __object__ 3678']
Text: The length of the 1st runway at Abilene Regional airport is 3678 feet.
Subject: Abilene Regional Airport
Predicate: 1stRunwayLengthFeet
Object: 3678

Triple: ['__subject__ Abilene Regional Airport __predicate__ 1stRunwaySurfaceType __object__ Asphalt']
Text: The first runway at Abilene Regional Airport is made from asphalt.
Subject: Abilene Regional Airport
Predicate: 1stRunwaySurfaceType
Object: Asphalt

Triple: ['__subject__ Abilene Regional Airport __predicate__ 1stRunwaySurfaceType __object__ Asphalt']
Text: The 1st runway at Abilene Regional Airport is made of Asphalt.
Subject: Abilene Regional Airport
Predicate: 1stRunwaySurfaceType
Object: Asphalt

Triple: ['__subject__ Abilene Regional Airport __predicate__ 3rdRunwayLengthFeet __object__ 7202']
Text: The third runway at Abilene Regional Airport is 7,202 feet long.
Subject: Abilene Regional Airport
Predicate: 3rdRunwayLengthFeet
Object: 7202

Triple: ['__subject__ Abilene Regional Airport __predicate__ 3rdRunwayLengthFeet __object__ 7202']
Text: The 3rd runway at Abilene Regional airport is 7202 feet.
Subject: Abilene Regional Airport
Predicate: 3rdRunwayLengthFeet
Object: 7202

Triple: ['__subject__ Abilene Regional Airport __predicate__ 3rdRunwayLengthFeet __object__ 7202']
Text: The Abilene Regional Airport's 3rd runway length is ft is 7202.
Subject: Abilene Regional Airport
Predicate: 3rdRunwayLengthFeet
Object: 7202

Triple: ['__subject__ Abilene Regional Airport __predicate__ icaoLocationIdentifier __object__ KABI']
Text: Abilene Regional Airport ICAO Location Identifier is KABI.
Subject: Abilene Regional Airport
Predicate: icaoLocationIdentifier
Object: KABI

Triple: ['__subject__ Abilene Regional Airport __predicate__ icaoLocationIdentifier __object__ KABI']
Text: KABI is the ICAO location identifier of Abilene Regional Airport.
Subject: Abilene Regional Airport
Predicate: icaoLocationIdentifier
Object: KABI

Triple: ['__subject__ Abilene Regional Airport __predicate__ icaoLocationIdentifier __object__ KABI']
Text: The ICAO Location Identifier of Abilene Regional Airport is KABI.
Subject: Abilene Regional Airport
Predicate: icaoLocationIdentifier
Object: KABI

Triple: ['__subject__ Abilene Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 546']
Text: Abilene Regional Airport elevation above the sea level in metres is 546.
Subject: Abilene Regional Airport
Predicate: elevationAboveTheSeaLevel
Object: 546

Triple: ['__subject__ Abilene Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 546']
Text: The Abilene Regional Airport is 546 metres above sea level.
Subject: Abilene Regional Airport
Predicate: elevationAboveTheSeaLevel
Object: 546

Triple: ['__subject__ Abilene Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 546']
Text: Abilene Regional Airport is located 546 metres above sea level.
Subject: Abilene Regional Airport
Predicate: elevationAboveTheSeaLevel
Object: 546

Triple: ['__subject__ Abilene Regional Airport __predicate__ locationIdentifier __object__ ABI']
Text: The location identifier for Abilene Regional airport is ABI.
Subject: Abilene Regional Airport
Predicate: locationIdentifier
Object: ABI

Triple: ['__subject__ Abilene Regional Airport __predicate__ locationIdentifier __object__ ABI']
Text: The Abilene Regional Airport's location id is "ABI".
Subject: Abilene Regional Airport
Predicate: locationIdentifier
Object: ABI

Triple: ['__subject__ Abilene Regional Airport __predicate__ locationIdentifier __object__ ABI']
Text: The location Identifier of Abilene Regional Airport is ABI.
Subject: Abilene Regional Airport
Predicate: locationIdentifier
Object: ABI

Triple: ['__subject__ Abilene Regional Airport __predicate__ runwayLength __object__ 1121.0']
Text: The runway length of Abilene Regional Airport is 1,121.
Subject: Abilene Regional Airport
Predicate: runwayLength
Object: 1121.0

Triple: ['__subject__ Abilene Regional Airport __predicate__ runwayLength __object__ 1121.0']
Text: Abilene Regional airport has a runway length of 1121.0.
Subject: Abilene Regional Airport
Predicate: runwayLength
Object: 1121.0

Triple: ['__subject__ Abilene Regional Airport __predicate__ runwayLength __object__ 1121.0']
Text: The runway length of Abilene Regional Airport is 1121.0.
Subject: Abilene Regional Airport
Predicate: runwayLength
Object: 1121.0

Triple: ['__subject__ Abilene Regional Airport __predicate__ runwayLength __object__ 2194.0']
Text: The runway length of Abilene Regional Airport is 2194.0.
Subject: Abilene Regional Airport
Predicate: runwayLength
Object: 2194.0

Triple: ['__subject__ Abilene Regional Airport __predicate__ runwayLength __object__ 2195.0']
Text: The runway length of Abilene Regional Airport is 2,195.
Subject: Abilene Regional Airport
Predicate: runwayLength
Object: 2195.0

Triple: ['__subject__ Abilene Regional Airport __predicate__ runwayLength __object__ 2195.0']
Text: The runway length of Abilene Regional Airport is 2195.0.
Subject: Abilene Regional Airport
Predicate: runwayLength
Object: 2195.0

Triple: ['__subject__ Abilene Regional Airport __predicate__ runwayName __object__ 17L/35R']
Text: Abilene Regional Airport runway name is 17L/35R.
Subject: Abilene Regional Airport
Predicate: runwayName
Object: 17L/35R

Triple: ['__subject__ Abilene Regional Airport __predicate__ runwayName __object__ 17L/35R']
Text: 17L/35R is the runway name of Abilene Regional Airport.
Subject: Abilene Regional Airport
Predicate: runwayName
Object: 17L/35R

Triple: ['__subject__ Abilene Regional Airport __predicate__ runwayName __object__ 17L/35R']
Text: Abilene Regional Airport has the runway name 17L/35R.
Subject: Abilene Regional Airport
Predicate: runwayName
Object: 17L/35R

Triple: ['__subject__ Abilene Regional Airport __predicate__ runwayName __object__ 17R/35L']
Text: 17R/35L is the runway name at Abilene Regional airport.
Subject: Abilene Regional Airport
Predicate: runwayName
Object: 17R/35L

Triple: ['__subject__ Abilene Regional Airport __predicate__ runwayName __object__ 17R/35L']
Text: The name of the runway at Abilene Regional Airport is 17R/35L.
Subject: Abilene Regional Airport
Predicate: runwayName
Object: 17R/35L

Triple: ['__subject__ Abilene Regional Airport __predicate__ runwayName __object__ 17R/35L']
Text: The runway name of Abilene Regional Airport is 17R/35L.
Subject: Abilene Regional Airport
Predicate: runwayName
Object: 17R/35L

Triple: ['__subject__ Adirondack Regional Airport __predicate__ 1stRunwayLengthFeet __object__ 6573']
Text: The length of the first runway at Adirondack Regional Airport is 6,573 feet.
Subject: Adirondack Regional Airport
Predicate: 1stRunwayLengthFeet
Object: 6573

Triple: ['__subject__ Adirondack Regional Airport __predicate__ 1stRunwayLengthFeet __object__ 6573']
Text: 6573 feet is the length of the first runway at Adirondack Regional Airport.
Subject: Adirondack Regional Airport
Predicate: 1stRunwayLengthFeet
Object: 6573

Triple: ['__subject__ Adirondack Regional Airport __predicate__ 1stRunwayLengthFeet __object__ 6573']
Text: The 1st runway length in feet of Adirondack Regional Airport is 6573.
Subject: Adirondack Regional Airport
Predicate: 1stRunwayLengthFeet
Object: 6573

Triple: ['__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Lake Placid, New York']
Text: Lake Placid, N.Y. is served by the Adirondack Regional Airport.
Subject: Adirondack Regional Airport
Predicate: cityServed
Object: Lake Placid, New York

Triple: ['__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Lake Placid, New York']
Text: Adirondack Regional Airport serves the city of Lake Placid, New York.
Subject: Adirondack Regional Airport
Predicate: cityServed
Object: Lake Placid, New York

Triple: ['__subject__ Adirondack Regional Airport __predicate__ cityServed __object__ Saranac Lake, New York']
Text: Adirondack Regional Airport serves the city of Saranac Lake, New York.
Subject: Adirondack Regional Airport
Predicate: cityServed
Object: Saranac Lake, New York

Triple: ['__subject__ Adirondack Regional Airport __predicate__ locationIdentifier __object__ SLK']
Text: Adirondack Regional Airport location identifier is SLK.
Subject: Adirondack Regional Airport
Predicate: locationIdentifier
Object: SLK

Triple: ['__subject__ Adirondack Regional Airport __predicate__ locationIdentifier __object__ SLK']
Text: SLK is the I.D. of the Adirondack Regional Airport.
Subject: Adirondack Regional Airport
Predicate: locationIdentifier
Object: SLK

Triple: ['__subject__ Adirondack Regional Airport __predicate__ locationIdentifier __object__ SLK']
Text: The Adirondack Regional Airport location identifier is SLK.
Subject: Adirondack Regional Airport
Predicate: locationIdentifier
Object: SLK

Triple: ['__subject__ Adirondack Regional Airport __predicate__ runwayLength __object__ 1219.0']
Text: The runway length of Adirondack Regional Airport is 1,219.
Subject: Adirondack Regional Airport
Predicate: runwayLength
Object: 1219.0

Triple: ['__subject__ Adirondack Regional Airport __predicate__ runwayLength __object__ 1219.0']
Text: The runway length at Adirondack Regional Airport is 1219.0.
Subject: Adirondack Regional Airport
Predicate: runwayLength
Object: 1219.0

Triple: ['__subject__ Adirondack Regional Airport __predicate__ runwayLength __object__ 1219.0']
Text: The runway length of Adirondack Regional Airport is 1219.0.
Subject: Adirondack Regional Airport
Predicate: runwayLength
Object: 1219.0

Triple: ['__subject__ Adirondack Regional Airport __predicate__ runwayLength __object__ 2003.0']
Text: The runway length of Adirondack Regional Airport is 2003.0.
Subject: Adirondack Regional Airport
Predicate: runwayLength
Object: 2003.0

Triple: ['__subject__ Adirondack Regional Airport __predicate__ runwayLength __object__ 2003.0']
Text: The length of the runway at Adirondack Regional Airport is 2003.0.
Subject: Adirondack Regional Airport
Predicate: runwayLength
Object: 2003.0

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ elevationAboveTheSeaLevel __object__ 610.0']
Text: Adolfo Suárez Madrid-Barajas Airport has an elevation of 610.0 metres above sea level.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: elevationAboveTheSeaLevel
Object: 610.0

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ elevationAboveTheSeaLevel __object__ 610.0']
Text: Adolfo Suárez Madrid–Barajas Airport is elevated 610 metres above sea level.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: elevationAboveTheSeaLevel
Object: 610.0

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Alcobendas']
Text: Adolfo Suárez Madrid–Barajas Airport is in Alcobendas.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: location
Object: Alcobendas

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Alcobendas']
Text: Adolfo Suárez Madrid Barajas Airport is found in Alcobendas.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: location
Object: Alcobendas

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Alcobendas']
Text: Adolfo Suárez Madrid–Barajas Airport is located in Alcobendas.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: location
Object: Alcobendas

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Madrid']
Text: Adolfo Suárez Madrid–Barajas Airport is found in Madrid.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: location
Object: Madrid

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Madrid']
Text: The Adolfo Suárez Madrid–Barajas Airport is in Madrid.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: location
Object: Madrid

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Madrid']
Text: Adolfo Suarez Madrid-Barajas Airport is located in Madrid.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: location
Object: Madrid

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama']
Text: Adolfo Suárez Madrid–Barajas Airport can be found in Paracuellos de Jarama.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: location
Object: Paracuellos de Jarama

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama']
Text: Adolfo Suarez Madrid-Barajas airport is located at Paracuellos de Jarama.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: location
Object: Paracuellos de Jarama

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ location __object__ Paracuellos de Jarama']
Text: The Adolfo Suárez Madrid–Barajas Airport is in Paracuellos de Jarama.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: location
Object: Paracuellos de Jarama

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ operatingOrganisation __object__ ENAIRE']
Text: The Adolfo Suárez Madrid–Barajas Airport is operated by ENAIRE.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: operatingOrganisation
Object: ENAIRE

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ operatingOrganisation __object__ ENAIRE']
Text: ENAIRE is the operating organisation for Adolfo Suarez Madrid-Barajas airport.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: operatingOrganisation
Object: ENAIRE

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ operatingOrganisation __object__ ENAIRE']
Text: Adolfo Suarez Madrid-Barajas Airport is operated by ENAIRE.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: operatingOrganisation
Object: ENAIRE

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 3500.0']
Text: The runway length of Adolfo Suárez Madrid–Barajas Airport is 3,500.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: runwayLength
Object: 3500.0

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 3500.0']
Text: The runway length at Adolfo Suarez Madrid-Barajas airport is 3500.0.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: runwayLength
Object: 3500.0

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 3500.0']
Text: The Adolfo Suárez Madrid–Barajas Airport's runway length is 3500.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: runwayLength
Object: 3500.0

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4100.0']
Text: The runway length of Adolfo Suárez Madrid–Barajas Airport is 4,100.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: runwayLength
Object: 4100.0

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4100.0']
Text: The runway length of Adolfo Suarez Madrid-Barajas airport is 4100.0.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: runwayLength
Object: 4100.0

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4100.0']
Text: The length of the runway at Adolfo Suarez Madrid Barajas Airport is 4100.0.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: runwayLength
Object: 4100.0

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4349.0']
Text: The runway length of Adolfo Suárez Madrid–Barajas Airport is 4,349.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: runwayLength
Object: 4349.0

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4349.0']
Text: Adolfo Suárez Madrid–Barajas Airport has a runway that is 4349 metres long.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: runwayLength
Object: 4349.0

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayLength __object__ 4349.0']
Text: The runway length of Adolfo Suarez Madrid-Barajas Airport is 4349.0.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: runwayLength
Object: 4349.0

Triple: ['__subject__ Adolfo Suárez Madrid–Barajas Airport __predicate__ runwayName __object__ 18R/36L']
Text: 18R/36L is the runway name of the Adolfo Suárez Madrid-Barajas Airport.
Subject: Adolfo Suárez Madrid–Barajas Airport
Predicate: runwayName
Object: 18R/36L

Triple: ['__subject__ Afonso Pena International Airport __predicate__ elevationAboveTheSeaLevelInFeet __object__ 2988']
Text: Afonso Pena International Airport is elevated 2988 feet above sea level.
Subject: Afonso Pena International Airport
Predicate: elevationAboveTheSeaLevelInFeet
Object: 2988

Triple: ['__subject__ Afonso Pena International Airport __predicate__ elevationAboveTheSeaLevelInFeet __object__ 2988']
Text: Afonso Pena International Airport has an elevation above the sea level (in feet) of 2988.
Subject: Afonso Pena International Airport
Predicate: elevationAboveTheSeaLevelInFeet
Object: 2988

Triple: ['__subject__ Afonso Pena International Airport __predicate__ elevationAboveTheSeaLevel __object__ 911.0']
Text: Afonso Pena International airport is located 911 metres above sea level.
Subject: Afonso Pena International Airport
Predicate: elevationAboveTheSeaLevel
Object: 911.0

Triple: ['__subject__ Afonso Pena International Airport __predicate__ elevationAboveTheSeaLevel __object__ 911.0']
Text: Afonso Pena International Airport has the elevation of 911 meters above the sea level.
Subject: Afonso Pena International Airport
Predicate: elevationAboveTheSeaLevel
Object: 911.0

Triple: ['__subject__ Afonso Pena International Airport __predicate__ elevationAboveTheSeaLevel __object__ 911.0']
Text: Afonso Pena International Airport is 911.0 metres above sea level.
Subject: Afonso Pena International Airport
Predicate: elevationAboveTheSeaLevel
Object: 911.0

Triple: ['__subject__ Afonso Pena International Airport __predicate__ location __object__ São José dos Pinhais']
Text: The location of Afonso Pena International airport is Sao Jose dos Pinhais.
Subject: Afonso Pena International Airport
Predicate: location
Object: São José dos Pinhais

Triple: ['__subject__ Afonso Pena International Airport __predicate__ location __object__ São José dos Pinhais']
Text: Afonso Pena International Airport is located in São José dos Pinhais.
Subject: Afonso Pena International Airport
Predicate: location
Object: São José dos Pinhais

Triple: ['__subject__ Afonso Pena International Airport __predicate__ location __object__ São José dos Pinhais']
Text: Afonso Pena International Airport is located in Sao Jose dos Pinhais.
Subject: Afonso Pena International Airport
Predicate: location
Object: São José dos Pinhais

Triple: ['__subject__ Afonso Pena International Airport __predicate__ runwayLength __object__ 1800.0']
Text: The runway length at Afonso Pena International airport is 1800.0.
Subject: Afonso Pena International Airport
Predicate: runwayLength
Object: 1800.0

Triple: ['__subject__ Afonso Pena International Airport __predicate__ runwayLength __object__ 1800.0']
Text: The runway at Afonso Pena International Airport is 1800 meters long.
Subject: Afonso Pena International Airport
Predicate: runwayLength
Object: 1800.0

Triple: ['__subject__ Afonso Pena International Airport __predicate__ runwayLength __object__ 1800.0']
Text: The runway length of Afonso Pena International Airport is 1800.0.
Subject: Afonso Pena International Airport
Predicate: runwayLength
Object: 1800.0

Triple: ['__subject__ Afonso Pena International Airport __predicate__ runwayLength __object__ 2215.0']
Text: Afonso Pena International Airport runway length is 2215.0.
Subject: Afonso Pena International Airport
Predicate: runwayLength
Object: 2215.0

Triple: ['__subject__ Afonso Pena International Airport __predicate__ runwayLength __object__ 2215.0']
Text: Afonso Pena International Airport has a runway length of 2215.0.
Subject: Afonso Pena International Airport
Predicate: runwayLength
Object: 2215.0

Triple: ['__subject__ Afonso Pena International Airport __predicate__ runwayLength __object__ 2215.0']
Text: The runway length of Afonso Pena International Airport is 2215.0.
Subject: Afonso Pena International Airport
Predicate: runwayLength
Object: 2215.0

Triple: ['__subject__ Afonso Pena International Airport __predicate__ runwayName __object__ 11/29']
Text: Afonso Pena International Airport has the runway name 11/29.
Subject: Afonso Pena International Airport
Predicate: runwayName
Object: 11/29

Triple: ['__subject__ Afonso Pena International Airport __predicate__ runwayName __object__ 15/33']
Text: The runway name of Afonso Pena International Airport is 15/33.
Subject: Afonso Pena International Airport
Predicate: runwayName
Object: 15/33

Triple: ['__subject__ Afonso Pena International Airport __predicate__ runwayName __object__ 15/33']
Text: 15/33 is the runway name at Afonso Pena International airport.
Subject: Afonso Pena International Airport
Predicate: runwayName
Object: 15/33

Triple: ['__subject__ Afonso Pena International Airport __predicate__ runwayName __object__ 15/33']
Text: The Afonso Pena International Airport's runway name is "15/33".
Subject: Afonso Pena International Airport
Predicate: runwayName
Object: 15/33

Triple: ['__subject__ Agra Airport __predicate__ iataLocationIdentifier __object__ AGR']
Text: Agra Airport IATA Location Identifier is AGR.
Subject: Agra Airport
Predicate: iataLocationIdentifier
Object: AGR

Triple: ['__subject__ Agra Airport __predicate__ iataLocationIdentifier __object__ AGR']
Text: AGR is the IATA I.D. of the Agra Airport.
Subject: Agra Airport
Predicate: iataLocationIdentifier
Object: AGR

Triple: ['__subject__ Agra Airport __predicate__ iataLocationIdentifier __object__ AGR']
Text: AGR is the ATA Location Identifier for Agra Airport.
Subject: Agra Airport
Predicate: iataLocationIdentifier
Object: AGR

Triple: ['__subject__ Agra Airport __predicate__ icaoLocationIdentifier __object__ VIAG']
Text: The location identifier for Agra Airport is VIAG.
Subject: Agra Airport
Predicate: icaoLocationIdentifier
Object: VIAG

Triple: ['__subject__ Agra Airport __predicate__ icaoLocationIdentifier __object__ VIAG']
Text: The Agra Airport's ICAO location identifier is "VIAG".
Subject: Agra Airport
Predicate: icaoLocationIdentifier
Object: VIAG

Triple: ['__subject__ Agra Airport __predicate__ icaoLocationIdentifier __object__ VIAG']
Text: The ICAO Location Identifier of Agra Airport is VIAG.
Subject: Agra Airport
Predicate: icaoLocationIdentifier
Object: VIAG

Triple: ['__subject__ Agra Airport __predicate__ elevationAboveTheSeaLevel __object__ 167.94']
Text: Agra Airport is elevated 167.94 metres above sea level.
Subject: Agra Airport
Predicate: elevationAboveTheSeaLevel
Object: 167.94

Triple: ['__subject__ Agra Airport __predicate__ elevationAboveTheSeaLevel __object__ 167.94']
Text: The elevation above the sea level (in metres) of Agra Airport is 167.94.
Subject: Agra Airport
Predicate: elevationAboveTheSeaLevel
Object: 167.94

Triple: ['__subject__ Agra Airport __predicate__ location __object__ India']
Text: Agra Airport is in India.
Subject: Agra Airport
Predicate: location
Object: India

Triple: ['__subject__ Agra Airport __predicate__ location __object__ India']
Text: Agra airport is located in India.
Subject: Agra Airport
Predicate: location
Object: India

Triple: ['__subject__ Agra Airport __predicate__ location __object__ Uttar Pradesh']
Text: Agra Airport is in Uttar Pradesh.
Subject: Agra Airport
Predicate: location
Object: Uttar Pradesh

Triple: ['__subject__ Agra Airport __predicate__ location __object__ Uttar Pradesh']
Text: Agra Airport is located in Uttar Pradesh.
Subject: Agra Airport
Predicate: location
Object: Uttar Pradesh

Triple: ['__subject__ Agra Airport __predicate__ nativeName __object__ Kheria Air Force Station']
Text: Kheria Air Force Station is the native name of Agra Airport.
Subject: Agra Airport
Predicate: nativeName
Object: Kheria Air Force Station

Triple: ['__subject__ Agra Airport __predicate__ nativeName __object__ Kheria Air Force Station']
Text: The native name of Agra Airport is Kheria Air Force Station.
Subject: Agra Airport
Predicate: nativeName
Object: Kheria Air Force Station

Triple: ['__subject__ Agra Airport __predicate__ operatingOrganisation __object__ Airports Authority of India']
Text: The Airports Authority of India is the operating organisation of Agra Airport.
Subject: Agra Airport
Predicate: operatingOrganisation
Object: Airports Authority of India

Triple: ['__subject__ Agra Airport __predicate__ operatingOrganisation __object__ Airports Authority of India']
Text: Agra Airport is operated by the Airports Authority of India.
Subject: Agra Airport
Predicate: operatingOrganisation
Object: Airports Authority of India

Triple: ['__subject__ Agra Airport __predicate__ operatingOrganisation __object__ Indian Air Force']
Text: The operating organization for Agra Airport is the Indian Air Force.
Subject: Agra Airport
Predicate: operatingOrganisation
Object: Indian Air Force

Triple: ['__subject__ Agra Airport __predicate__ operatingOrganisation __object__ Indian Air Force']
Text: The Indian Air Force operates the Agra Airport.
Subject: Agra Airport
Predicate: operatingOrganisation
Object: Indian Air Force

Triple: ['__subject__ Agra Airport __predicate__ operatingOrganisation __object__ Indian Air Force']
Text: Agra Airport is operated by the Indian Air Force.
Subject: Agra Airport
Predicate: operatingOrganisation
Object: Indian Air Force

Triple: ['__subject__ Agra Airport __predicate__ runwayLength __object__ 1818.0']
Text: 1818 is the length of the runway of Agra Airport.
Subject: Agra Airport
Predicate: runwayLength
Object: 1818.0

Triple: ['__subject__ Agra Airport __predicate__ runwayLength __object__ 1818.0']
Text: The length of the runway at Agra Airport is 1818.0.
Subject: Agra Airport
Predicate: runwayLength
Object: 1818.0

Triple: ['__subject__ Agra Airport __predicate__ runwayLength __object__ 2743.0']
Text: Agra Airport's runway length is 2743.0.
Subject: Agra Airport
Predicate: runwayLength
Object: 2743.0

Triple: ['__subject__ Al-Taqaddum Air Base __predicate__ location __object__ Habbaniyah']
Text: Al Taqaddum Air Base is located in Habbaniyah.
Subject: Al-Taqaddum Air Base
Predicate: location
Object: Habbaniyah

Triple: ['__subject__ Al-Taqaddum Air Base __predicate__ location __object__ Habbaniyah']
Text: The location of Al-Taqaddum Air Base is Habbaniyah.
Subject: Al-Taqaddum Air Base
Predicate: location
Object: Habbaniyah

Triple: ['__subject__ Al-Taqaddum Air Base __predicate__ locationIdentifier __object__ MAT']
Text: The location identifier for Al-Taqaddum air base is MAT.
Subject: Al-Taqaddum Air Base
Predicate: locationIdentifier
Object: MAT

Triple: ['__subject__ Al-Taqaddum Air Base __predicate__ locationIdentifier __object__ MAT']
Text: The location identifier of Al Taqaddum Air Base is MAT.
Subject: Al-Taqaddum Air Base
Predicate: locationIdentifier
Object: MAT

Triple: ['__subject__ Al-Taqaddum Air Base __predicate__ runwayLength __object__ 4019.0']
Text: The runway length of Al-Taqaddum Air Base is 4,019.
Subject: Al-Taqaddum Air Base
Predicate: runwayLength
Object: 4019.0

Triple: ['__subject__ Al-Taqaddum Air Base __predicate__ runwayLength __object__ 4019.0']
Text: The runway length of Al-Taqaddum air base is 4019.0.
Subject: Al-Taqaddum Air Base
Predicate: runwayLength
Object: 4019.0

Triple: ['__subject__ Al-Taqaddum Air Base __predicate__ runwayLength __object__ 4019.0']
Text: The runway length of Al Taqaddum Air Base is 4019.0.
Subject: Al-Taqaddum Air Base
Predicate: runwayLength
Object: 4019.0

Triple: ['__subject__ Al Asad Airbase __predicate__ icaoLocationIdentifier __object__ ORAA']
Text: ORAA is the ICAO location identifier of Al Asad Airbase.
Subject: Al Asad Airbase
Predicate: icaoLocationIdentifier
Object: ORAA

Triple: ['__subject__ Al Asad Airbase __predicate__ icaoLocationIdentifier __object__ ORAA']
Text: The ICAO Location Identifier of Al Asad Airbase is ORAA.
Subject: Al Asad Airbase
Predicate: icaoLocationIdentifier
Object: ORAA

Triple: ['__subject__ Al Asad Airbase __predicate__ elevationAboveTheSeaLevelInFeet __object__ 618']
Text: Al Asad Airbase is 618 feet above sea level.
Subject: Al Asad Airbase
Predicate: elevationAboveTheSeaLevelInFeet
Object: 618

Triple: ['__subject__ Al Asad Airbase __predicate__ elevationAboveTheSeaLevelInFeet __object__ 618']
Text: The Al Asad Airbase is 618 ft above sea level.
Subject: Al Asad Airbase
Predicate: elevationAboveTheSeaLevelInFeet
Object: 618

Triple: ['__subject__ Al Asad Airbase __predicate__ elevationAboveTheSeaLevelInFeet __object__ 618']
Text: Al Asad Airbase has an elevation above the sea level (in feet) of 618.
Subject: Al Asad Airbase
Predicate: elevationAboveTheSeaLevelInFeet
Object: 618

Triple: ['__subject__ Al Asad Airbase __predicate__ location __object__ Al Anbar Province, Iraq']
Text: The Al Asad Airbase is situated in the Al Anbar Province, Iraq.
Subject: Al Asad Airbase
Predicate: location
Object: Al Anbar Province, Iraq

Triple: ['__subject__ Al Asad Airbase __predicate__ location __object__ Al Anbar Province, Iraq']
Text: Al Asad airbase is located at Al Anbar Province, Iraq.
Subject: Al Asad Airbase
Predicate: location
Object: Al Anbar Province, Iraq

Triple: ['__subject__ Al Asad Airbase __predicate__ location __object__ Al Anbar Province, Iraq']
Text: Al Asad Airbase is located in Al Anbar Province, Iraq.
Subject: Al Asad Airbase
Predicate: location
Object: Al Anbar Province, Iraq

Triple: ['__subject__ Al Asad Airbase __predicate__ location __object__ Iraq']
Text: Al Asad Airbase is found in Iraq.
Subject: Al Asad Airbase
Predicate: location
Object: Iraq

Triple: ['__subject__ Al Asad Airbase __predicate__ location __object__ Iraq']
Text: The Al Asad Airbase is in Iraq.
Subject: Al Asad Airbase
Predicate: location
Object: Iraq

Triple: ['__subject__ Al Asad Airbase __predicate__ location __object__ Iraq']
Text: Al Asad Airbase is in Iraq.
Subject: Al Asad Airbase
Predicate: location
Object: Iraq

Triple: ['__subject__ Al Asad Airbase __predicate__ operatingOrganisation __object__ United States Air Force']
Text: Al Asad Airbase is operated by the United States Air Force.
Subject: Al Asad Airbase
Predicate: operatingOrganisation
Object: United States Air Force

Triple: ['__subject__ Al Asad Airbase __predicate__ operatingOrganisation __object__ United States Air Force']
Text: The United States Air Force is the operating organisation for Al Asad airbase.
Subject: Al Asad Airbase
Predicate: operatingOrganisation
Object: United States Air Force

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3078.48']
Text: The runway length of Al Asad Airbase is 3078.48.
Subject: Al Asad Airbase
Predicate: runwayLength
Object: 3078.48

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3078.48']
Text: Al Asad Airbase has a runway length of 3078.48.
Subject: Al Asad Airbase
Predicate: runwayLength
Object: 3078.48

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3090.0']
Text: The runway length of Al Asad Airbase is 3090 meters.
Subject: Al Asad Airbase
Predicate: runwayLength
Object: 3090.0

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3090.0']
Text: The runway length at Al Asad airbase is 3090.0.
Subject: Al Asad Airbase
Predicate: runwayLength
Object: 3090.0

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3090.0']
Text: Al Asad Airbase's runway length is 3090.0.
Subject: Al Asad Airbase
Predicate: runwayLength
Object: 3090.0

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3990.0']
Text: The runway length of Al Asad Airbase is 3,990.
Subject: Al Asad Airbase
Predicate: runwayLength
Object: 3990.0

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3990.0']
Text: The runway length of Al Asad Airbase is 3990.0.
Subject: Al Asad Airbase
Predicate: runwayLength
Object: 3990.0

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3990.0']
Text: The Al Asad Airbase has a runway length of 3990.0.
Subject: Al Asad Airbase
Predicate: runwayLength
Object: 3990.0

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3992.88']
Text: The runway length of Al Asad Airbase is 3,992.88.
Subject: Al Asad Airbase
Predicate: runwayLength
Object: 3992.88

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayLength __object__ 3992.88']
Text: 3992.88 is the length of the runway at Al Asad Airbase.
Subject: Al Asad Airbase
Predicate: runwayLength
Object: 3992.88

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayName __object__ 08/26']
Text: ''08/26'' is the runway name at Al Asad Airbase.
Subject: Al Asad Airbase
Predicate: runwayName
Object: 08/26

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayName __object__ 08/26']
Text: 08/26 is the runway name of the Al Asad Airbase.
Subject: Al Asad Airbase
Predicate: runwayName
Object: 08/26

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayName __object__ 08/26']
Text: The runway name of Al Asad Airbase is 08/26.
Subject: Al Asad Airbase
Predicate: runwayName
Object: 08/26

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayName __object__ 09L/27R']
Text: The runway name of Al Asad Airbase is 09L/27R.
Subject: Al Asad Airbase
Predicate: runwayName
Object: 09L/27R

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayName __object__ 09L/27R']
Text: The Al Asad Airbase's runway name is "09L/27R".
Subject: Al Asad Airbase
Predicate: runwayName
Object: 09L/27R

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayName __object__ 09R/27L']
Text: 09R/27L is the runway name at Al Asad airbase.
Subject: Al Asad Airbase
Predicate: runwayName
Object: 09R/27L

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayName __object__ 09R/27L']
Text: The name of the runway at al Asad Airbase is 09R/27L.
Subject: Al Asad Airbase
Predicate: runwayName
Object: 09R/27L

Triple: ['__subject__ Al Asad Airbase __predicate__ runwayName __object__ 09R/27L']
Text: Al Asad Airbase has the runway name 09R/27L.
Subject: Al Asad Airbase
Predicate: runwayName
Object: 09R/27L

Triple: ['__subject__ Alcobendas __predicate__ country __object__ Spain']
Text: Alcobendas is located in Spain.
Subject: Alcobendas
Predicate: country
Object: Spain

Triple: ['__subject__ Alcobendas __predicate__ country __object__ Spain']
Text: Alcobendas is in Spain.
Subject: Alcobendas
Predicate: country
Object: Spain

Triple: ['__subject__ Alcobendas __predicate__ isPartOf __object__ Community of Madrid']
Text: Alcobendas is part of Community of Madrid.
Subject: Alcobendas
Predicate: isPartOf
Object: Community of Madrid

Triple: ['__subject__ Alcobendas __predicate__ isPartOf __object__ Community of Madrid']
Text: Alcobendas is part of the community of Madrid.
Subject: Alcobendas
Predicate: isPartOf
Object: Community of Madrid

Triple: ["__subject__ Alcobendas __predicate__ leaderParty __object__ People's Party (Spain)"]
Text: The leader party at Alcobendas is the Peoples Party (Spain).
Subject: Alcobendas
Predicate: leaderParty
Object: People's Party (Spain)

Triple: ['__subject__ Alderney __predicate__ capital __object__ Saint Anne, Alderney']
Text: Saint Anne is the capital of Alderney.
Subject: Alderney
Predicate: capital
Object: Saint Anne, Alderney

Triple: ['__subject__ Alderney __predicate__ language __object__ English language']
Text: The main language spoken on Alderney is English.
Subject: Alderney
Predicate: language
Object: English language

Triple: ['__subject__ Alderney __predicate__ language __object__ English language']
Text: The English language is spoken in Alderney.
Subject: Alderney
Predicate: language
Object: English language

Triple: ['__subject__ Alderney __predicate__ language __object__ English language']
Text: Alderney uses the English language.
Subject: Alderney
Predicate: language
Object: English language

Triple: ['__subject__ Alderney __predicate__ leader __object__ Elizabeth II']
Text: Alderney's leader name is Elizabeth II.
Subject: Alderney
Predicate: leader
Object: Elizabeth II

Triple: ['__subject__ Alderney __predicate__ leader __object__ Elizabeth II']
Text: Alderney's leader is Elizabeth II.
Subject: Alderney
Predicate: leader
Object: Elizabeth II

Triple: ['__subject__ Alderney __predicate__ leader __object__ Elizabeth II']
Text: The leader's name of Alderney is Elizabeth II.
Subject: Alderney
Predicate: leader
Object: Elizabeth II

Triple: ['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Asphalt']
Text: The first runway at Alderney Airport is made of asphalt.
Subject: Alderney Airport
Predicate: 1stRunwaySurfaceType
Object: Asphalt

Triple: ['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Asphalt']
Text: The 1st runway at Alderney airport has an asphalt surface.
Subject: Alderney Airport
Predicate: 1stRunwaySurfaceType
Object: Asphalt

Triple: ['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Asphalt']
Text: The 1st runway at Alderney Airport is made from Asphalt.
Subject: Alderney Airport
Predicate: 1stRunwaySurfaceType
Object: Asphalt

Triple: ['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae']
Text: The surface of the 1st runway at Alderney airport is poaceae.
Subject: Alderney Airport
Predicate: 1stRunwaySurfaceType
Object: Poaceae

Triple: ['__subject__ Alderney Airport __predicate__ 1stRunwaySurfaceType __object__ Poaceae']
Text: The 1st runway at Alderney Airport is made from Poaceae.
Subject: Alderney Airport
Predicate: 1stRunwaySurfaceType
Object: Poaceae

Triple: ['__subject__ Alderney Airport __predicate__ elevationAboveTheSeaLevel __object__ 88.0']
Text: Alderney Airport is 88 metres above sea level.
Subject: Alderney Airport
Predicate: elevationAboveTheSeaLevel
Object: 88.0

Triple: ['__subject__ Alderney Airport __predicate__ elevationAboveTheSeaLevel __object__ 88.0']
Text: The Alderney Airport elevation above the sea level (in meters) is 88.
Subject: Alderney Airport
Predicate: elevationAboveTheSeaLevel
Object: 88.0

Triple: ['__subject__ Alderney Airport __predicate__ runwayLength __object__ 497.0']
Text: Alderney Airport has a runway length of 497.0.
Subject: Alderney Airport
Predicate: runwayLength
Object: 497.0

Triple: ['__subject__ Alderney Airport __predicate__ runwayLength __object__ 497.0']
Text: The runway length of Alderney Airport is 497.0.
Subject: Alderney Airport
Predicate: runwayLength
Object: 497.0

Triple: ['__subject__ Alderney Airport __predicate__ runwayLength __object__ 733.0']
Text: The Alderney Airport runway has a length of 733.0.
Subject: Alderney Airport
Predicate: runwayLength
Object: 733.0

Triple: ['__subject__ Alderney Airport __predicate__ runwayLength __object__ 877.0']
Text: The runway length of Alderney Airport is 877.
Subject: Alderney Airport
Predicate: runwayLength
Object: 877.0

Triple: ['__subject__ Alderney Airport __predicate__ runwayLength __object__ 877.0']
Text: Alderney Airport's runway has a length of 877.0.
Subject: Alderney Airport
Predicate: runwayLength
Object: 877.0

Triple: ['__subject__ Alderney Airport __predicate__ runwayLength __object__ 877.0']
Text: The runway length of Alderney Airport is 877.0.
Subject: Alderney Airport
Predicate: runwayLength
Object: 877.0

Triple: ['__subject__ Alderney Airport __predicate__ runwayName __object__ 03/21']
Text: Alderney Airport runway name is 03/21.
Subject: Alderney Airport
Predicate: runwayName
Object: 03/21

Triple: ['__subject__ Alderney Airport __predicate__ runwayName __object__ 03/21']
Text: The runway name of Alderney Airport is 03/21.
Subject: Alderney Airport
Predicate: runwayName
Object: 03/21

Triple: ['__subject__ Alderney Airport __predicate__ runwayName __object__ 03/21']
Text: The runway at Alderney Airport is named 03/21.
Subject: Alderney Airport
Predicate: runwayName
Object: 03/21

Triple: ['__subject__ Alderney Airport __predicate__ runwayName __object__ 08/26']
Text: 08/26 is the runway name of Alderney Airport.
Subject: Alderney Airport
Predicate: runwayName
Object: 08/26

Triple: ['__subject__ Alderney Airport __predicate__ runwayName __object__ 08/26']
Text: The runway name of Alderney Airport is 08/26.
Subject: Alderney Airport
Predicate: runwayName
Object: 08/26

Triple: ['__subject__ Allama Iqbal International Airport __predicate__ cityServed __object__ Lahore']
Text: Allama Iqbal International Airport serves the city of Lahore.
Subject: Allama Iqbal International Airport
Predicate: cityServed
Object: Lahore

Triple: ['__subject__ Allama Iqbal International Airport __predicate__ cityServed __object__ Lahore']
Text: The city of Lahore is served by Allama Iqbal International airport.
Subject: Allama Iqbal International Airport
Predicate: cityServed
Object: Lahore

Triple: ['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Pakistan']
Text: Allama Iqbal International airport is located in Pakistan.
Subject: Allama Iqbal International Airport
Predicate: location
Object: Pakistan

Triple: ['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Punjab, Pakistan']
Text: Allama Iqbal International Airport is found in Punjab, Pakistan.
Subject: Allama Iqbal International Airport
Predicate: location
Object: Punjab, Pakistan

Triple: ['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Punjab, Pakistan']
Text: Allama Iqbal International Airport is located in Punjab, Pakistan.
Subject: Allama Iqbal International Airport
Predicate: location
Object: Punjab, Pakistan

Triple: ['__subject__ Allama Iqbal International Airport __predicate__ location __object__ Punjab, Pakistan']
Text: Allama Iqbal International airport is located in Punjab Pakistan.
Subject: Allama Iqbal International Airport
Predicate: location
Object: Punjab, Pakistan

Triple: ['__subject__ Allama Iqbal International Airport __predicate__ operatingOrganisation __object__ Pakistan Civil Aviation Authority']
Text: The Pakistan Civil Aviation Authority governs the Allama Iqbal International Airport.
Subject: Allama Iqbal International Airport
Predicate: operatingOrganisation
Object: Pakistan Civil Aviation Authority

Triple: ['__subject__ Allama Iqbal International Airport __predicate__ operatingOrganisation __object__ Pakistan Civil Aviation Authority']
Text: The Pakistan Civil Aviation Authority is the operating organisation of the Allama Iqbal International Airport.
Subject: Allama Iqbal International Airport
Predicate: operatingOrganisation
Object: Pakistan Civil Aviation Authority

Triple: ['__subject__ Allama Iqbal International Airport __predicate__ operatingOrganisation __object__ Pakistan Civil Aviation Authority']
Text: Allama Iqbal International Airport is operated by Pakistan Civil Aviation Authority.
Subject: Allama Iqbal International Airport
Predicate: operatingOrganisation
Object: Pakistan Civil Aviation Authority

Triple: ['__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 2900.0']
Text: The runway length of Allama Iqbal International Airport is 2900.0.
Subject: Allama Iqbal International Airport
Predicate: runwayLength
Object: 2900.0

Triple: ['__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 3310.0']
Text: The runway length of Allama Iqbal International Airport is 3,310.
Subject: Allama Iqbal International Airport
Predicate: runwayLength
Object: 3310.0

Triple: ['__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 3310.0']
Text: Allama Iqbal International airport has a runway length of 3310.0.
Subject: Allama Iqbal International Airport
Predicate: runwayLength
Object: 3310.0

Triple: ['__subject__ Allama Iqbal International Airport __predicate__ runwayLength __object__ 3310.0']
Text: The runway length of Allama Iqbal International Airport is 3310.0.
Subject: Allama Iqbal International Airport
Predicate: runwayLength
Object: 3310.0

Triple: ['__subject__ Allama Iqbal International Airport __predicate__ runwayName __object__ 18L/36R']
Text: The runway name at Allama Iqbal International airport is 18L/36R.
Subject: Allama Iqbal International Airport
Predicate: runwayName
Object: 18L/36R

Triple: ['__subject__ Allama Iqbal International Airport __predicate__ runwayName __object__ 18L/36R']
Text: The Allama Iqbal International Airport's runway name is "18L/36R".
Subject: Allama Iqbal International Airport
Predicate: runwayName
Object: 18L/36R

Triple: ['__subject__ Allama Iqbal International Airport __predicate__ runwayName __object__ 18L/36R']
Text: The runway name of Allama Iqbal International Airport is 18L/36R.
Subject: Allama Iqbal International Airport
Predicate: runwayName
Object: 18L/36R

Triple: ['__subject__ Alpena, Michigan __predicate__ country __object__ United States']
Text: Alpena Michigan is a country in United States.
Subject: Alpena, Michigan
Predicate: country
Object: United States

Triple: ['__subject__ Alpena, Michigan __predicate__ country __object__ United States']
Text: Alpena, Michigan is in the U.S.
Subject: Alpena, Michigan
Predicate: country
Object: United States

Triple: ['__subject__ Alpena, Michigan __predicate__ country __object__ United States']
Text: Alpena, Michigan is located in the United States.
Subject: Alpena, Michigan
Predicate: country
Object: United States

Triple: ['__subject__ Alpena County Regional Airport __predicate__ 1stRunwayLengthFeet __object__ 9001']
Text: The length of the first runway of Alpena County Regional Airport is 9001.
Subject: Alpena County Regional Airport
Predicate: 1stRunwayLengthFeet
Object: 9001

Triple: ['__subject__ Alpena County Regional Airport __predicate__ 1stRunwayLengthFeet __object__ 9001']
Text: The first runway length in feet of Alpena County Regional Airport is 9001.
Subject: Alpena County Regional Airport
Predicate: 1stRunwayLengthFeet
Object: 9001

Triple: ['__subject__ Alpena County Regional Airport __predicate__ cityServed __object__ Alpena, Michigan']
Text: Alpena County Regional Airport city served Alpena, Michigan.
Subject: Alpena County Regional Airport
Predicate: cityServed
Object: Alpena, Michigan

Triple: ['__subject__ Alpena County Regional Airport __predicate__ cityServed __object__ Alpena, Michigan']
Text: Alpena County Regional Airport serves the city of Alpena, Michigan.
Subject: Alpena County Regional Airport
Predicate: cityServed
Object: Alpena, Michigan

Triple: ['__subject__ Alpena County Regional Airport __predicate__ cityServed __object__ Alpena, Michigan']
Text: Alpena County Regional Airport serves Alpena, Michigan.
Subject: Alpena County Regional Airport
Predicate: cityServed
Object: Alpena, Michigan

Triple: ['__subject__ Alpena County Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 210']
Text: Alpena County Regional Airport elevation above the sea level in metres is 210.
Subject: Alpena County Regional Airport
Predicate: elevationAboveTheSeaLevel
Object: 210

Triple: ['__subject__ Alpena County Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 210']
Text: Alpena County Regional Airport has an elevation of 210 metres above sea level.
Subject: Alpena County Regional Airport
Predicate: elevationAboveTheSeaLevel
Object: 210

Triple: ['__subject__ Alpena County Regional Airport __predicate__ elevationAboveTheSeaLevel __object__ 210']
Text: Alpena County Regional Airport is elevated 210 metres above sea level.
Subject: Alpena County Regional Airport
Predicate: elevationAboveTheSeaLevel
Object: 210

Triple: ['__subject__ Alpena County Regional Airport __predicate__ location __object__ Maple Ridge Township, Alpena County, Michigan']
Text: Alpena County Regional Airport is found in Maple Ridge Township, Alpena County in Michigan.
Subject: Alpena County Regional Airport
Predicate: location
Object: Maple Ridge Township, Alpena County, Michigan

Triple: ['__subject__ Alpena County Regional Airport __predicate__ location __object__ Maple Ridge Township, Alpena County, Michigan']
Text: The location of Alpena County Regional Airport is Maple Ridge Township, Alpena County, Michigan.
Subject: Alpena County Regional Airport
Predicate: location
Object: Maple Ridge Township, Alpena County, Michigan

Triple: ['__subject__ Alpena County Regional Airport __predicate__ location __object__ Maple Ridge Township, Alpena County, Michigan']
Text: Alpena County Regional Airport is located in Maple Ridge Township, Alpena County, Michigan.
Subject: Alpena County Regional Airport
Predicate: location
Object: Maple Ridge Township, Alpena County, Michigan

Triple: ['__subject__ Alpena County Regional Airport __predicate__ location __object__ Wilson Township, Alpena County, Michigan']
Text: Alpena County Regional Airport is found in Wilson Township, Alpena County, Michigan.
Subject: Alpena County Regional Airport
Predicate: location
Object: Wilson Township, Alpena County, Michigan

Triple: ['__subject__ Alpena County Regional Airport __predicate__ location __object__ Wilson Township, Alpena County, Michigan']
Text: Alpena County Regional Airport is located in the Wilson Township, Alpena County, Michigan.
Subject: Alpena County Regional Airport
Predicate: location
Object: Wilson Township, Alpena County, Michigan

Triple: ['__subject__ Alpena County Regional Airport __predicate__ location __object__ Wilson Township, Alpena County, Michigan']
Text: The location of Alpena County Regional Airport is Wilson Township, Alpena County, Michigan.
Subject: Alpena County Regional Airport
Predicate: location
Object: Wilson Township, Alpena County, Michigan

Triple: ['__subject__ Alpena County Regional Airport __predicate__ locationIdentifier __object__ APN']
Text: The location identifier of Alpena County Regional airport is APN.
Subject: Alpena County Regional Airport
Predicate: locationIdentifier
Object: APN

Triple: ['__subject__ Alpena County Regional Airport __predicate__ locationIdentifier __object__ APN']
Text: The Alpena County Regional Airport's location id is "APN".
Subject: Alpena County Regional Airport
Predicate: locationIdentifier
Object: APN

Triple: ['__subject__ Alpena County Regional Airport __predicate__ locationIdentifier __object__ APN']
Text: The location identifier of Alpena County Regional Airport is APN.
Subject: Alpena County Regional Airport
Predicate: locationIdentifier
Object: APN

Triple: ['__subject__ Alpena County Regional Airport __predicate__ owner __object__ Alpena County, Michigan']
Text: Alpena County Regional Airport owner is Alpena County, Michigan.
Subject: Alpena County Regional Airport
Predicate: owner
Object: Alpena County, Michigan

Triple: ['__subject__ Alpena County Regional Airport __predicate__ owner __object__ Alpena County, Michigan']
Text: Alpena County, Michigan is the owner of the Alpena County Regional Airport.
Subject: Alpena County Regional Airport
Predicate: owner
Object: Alpena County, Michigan

Triple: ['__subject__ Alpena County Regional Airport __predicate__ owner __object__ Alpena County, Michigan']
Text: The owner of Alpena County Regional Airport is Alpena County, Michigan.
Subject: Alpena County Regional Airport
Predicate: owner
Object: Alpena County, Michigan

Triple: ['__subject__ Alpena County Regional Airport __predicate__ runwayLength __object__ 2744.0']
Text: Alpena County Regional Airport's runway length is 2744.0.
Subject: Alpena County Regional Airport
Predicate: runwayLength
Object: 2744.0

Triple: ['__subject__ Alpena County Regional Airport __predicate__ runwayLength __object__ 2744.0']
Text: The Alpena County Regional Airport is 2744 meters long.
Subject: Alpena County Regional Airport
Predicate: runwayLength
Object: 2744.0

Triple: ['__subject__ Alpena County Regional Airport __predicate__ runwayLength __object__ 2744.0']
Text: The runway length of Alpena County Regional Airport is 2744.0.
Subject: Alpena County Regional Airport
Predicate: runwayLength
Object: 2744.0

Triple: ['__subject__ Alpena County Regional Airport __predicate__ runwayName __object__ 7/25']
Text: 7/25 is the runway name of Alpena County Regional Airport.
Subject: Alpena County Regional Airport
Predicate: runwayName
Object: 7/25

Triple: ['__subject__ Alpena County Regional Airport __predicate__ runwayName __object__ 7/25']
Text: The runway name of Alpena County Regional Airport is 7/25.
Subject: Alpena County Regional Airport
Predicate: runwayName
Object: 7/25

Triple: ['__subject__ Amsterdam __predicate__ leader __object__ Eberhard van der Laan']
Text: Amsterdam's leader is Eberhard van der Laan.
Subject: Amsterdam
Predicate: leader
Object: Eberhard van der Laan

Triple: ['__subject__ Amsterdam __predicate__ leader __object__ Eberhard van der Laan']
Text: Eberhard van der Laan is the name of the leader of Amsterdam.
Subject: Amsterdam
Predicate: leader
Object: Eberhard van der Laan

Triple: ['__subject__ Amsterdam __predicate__ leader __object__ Eberhard van der Laan']
Text: The leader of Amsterdam is Eberhard van der Laan.
Subject: Amsterdam
Predicate: leader
Object: Eberhard van der Laan

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ 1stRunwayLengthMetre __object__ 3800']
Text: The length of the first runway at Amsterdam Airport Schiphol is 3800 metres.
Subject: Amsterdam Airport Schiphol
Predicate: 1stRunwayLengthMetre
Object: 3800

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ 1stRunwayLengthMetre __object__ 3800']
Text: The length of the 1st runway at Amsterdam airport Schiphol is 3800 metres.
Subject: Amsterdam Airport Schiphol
Predicate: 1stRunwayLengthMetre
Object: 3800

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ 1stRunwayLengthMetre __object__ 3800']
Text: The length of the first runway at Amsterdam Airport Schiphol is 3800 meters.
Subject: Amsterdam Airport Schiphol
Predicate: 1stRunwayLengthMetre
Object: 3800

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ 1stRunwaySurfaceType __object__ Asphalt']
Text: The first runway at Amsterdam's Schiphol Airport is made from asphalt.
Subject: Amsterdam Airport Schiphol
Predicate: 1stRunwaySurfaceType
Object: Asphalt

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ 1stRunwaySurfaceType __object__ Asphalt']
Text: The first runway of Amsterdam Airport Schiphol is made in asphalt.
Subject: Amsterdam Airport Schiphol
Predicate: 1stRunwaySurfaceType
Object: Asphalt

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ 1stRunwaySurfaceType __object__ Asphalt']
Text: The 1st runway at Amsterdam Airport Schiphol is made from Asphalt.
Subject: Amsterdam Airport Schiphol
Predicate: 1stRunwaySurfaceType
Object: Asphalt

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ 4thRunwaySurfaceType __object__ Asphalt']
Text: The fourth runway at Schiphol Airport in Amsterdam is made of asphalt.
Subject: Amsterdam Airport Schiphol
Predicate: 4thRunwaySurfaceType
Object: Asphalt

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ 4thRunwaySurfaceType __object__ Asphalt']
Text: The 4th runway at Amsterdam Airport Schiphol has a surface of asphalt.
Subject: Amsterdam Airport Schiphol
Predicate: 4thRunwaySurfaceType
Object: Asphalt

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ 5thRunwayNumber __object__ 18']
Text: Amsterdam Airport Schiphol is 5th runway number 18.
Subject: Amsterdam Airport Schiphol
Predicate: 5thRunwayNumber
Object: 18

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ 5thRunwayNumber __object__ 18']
Text: 18 is the number of the fifth runway of Amsterdam Airport Schiphol.
Subject: Amsterdam Airport Schiphol
Predicate: 5thRunwayNumber
Object: 18

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ 5thRunwayNumber __object__ 18']
Text: Amsterdam Schiphols Airport's 5th runway has the number 18.
Subject: Amsterdam Airport Schiphol
Predicate: 5thRunwayNumber
Object: 18

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ elevationAboveTheSeaLevel __object__ -3.3528']
Text: Amsterdam Airport Schiphol is -3.3528 metres above sea level.
Subject: Amsterdam Airport Schiphol
Predicate: elevationAboveTheSeaLevel
Object: -3.3528

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ elevationAboveTheSeaLevel __object__ -3.3528']
Text: Amsterdam airport Schiphol is -3.3528 above sea level.
Subject: Amsterdam Airport Schiphol
Predicate: elevationAboveTheSeaLevel
Object: -3.3528

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ elevationAboveTheSeaLevel __object__ -3.3528']
Text: Amsterdam Airport Schiphol is at an elevation of -3.3528 from sea level.
Subject: Amsterdam Airport Schiphol
Predicate: elevationAboveTheSeaLevel
Object: -3.3528

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ location __object__ Haarlemmermeer']
Text: Amsterdam's Schiphol Airport is located in Haarlemmermeer.
Subject: Amsterdam Airport Schiphol
Predicate: location
Object: Haarlemmermeer

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ location __object__ Haarlemmermeer']
Text: The Amsterdam Airport Schiphol is in Haarlemmermeer.
Subject: Amsterdam Airport Schiphol
Predicate: location
Object: Haarlemmermeer

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ location __object__ Haarlemmermeer']
Text: Amsterdam Airport Schiphol is located in Haarlemmermeer.
Subject: Amsterdam Airport Schiphol
Predicate: location
Object: Haarlemmermeer

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ operatingOrganisation __object__ Schiphol Group']
Text: Amsterdam Airport Schiphol operating organization is Schiphol Group.
Subject: Amsterdam Airport Schiphol
Predicate: operatingOrganisation
Object: Schiphol Group

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ operatingOrganisation __object__ Schiphol Group']
Text: Schiphol Group operates the Amsterdam Airport Schiphol.
Subject: Amsterdam Airport Schiphol
Predicate: operatingOrganisation
Object: Schiphol Group

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ operatingOrganisation __object__ Schiphol Group']
Text: The Amsterdam Airport Schiphol is run by the operation organisation the Schiphol Group.
Subject: Amsterdam Airport Schiphol
Predicate: operatingOrganisation
Object: Schiphol Group

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 2014.0']
Text: The runway length at Amsterdam Airport Schiphol is 2014.0 meters.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 2014.0

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 2014.0']
Text: The runway length at Amsterdam airport, Schiphol is 2014.0.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 2014.0

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 2014.0']
Text: Amsterdam Airport Schiphol's runway length is 2014.0.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 2014.0

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3300.0']
Text: The runway length of Amsterdam airport Schiphol is 3300.0.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 3300.0

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3300.0']
Text: The Amsterdam Airport Schiphol's runway length is 3300.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 3300.0

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3300.0']
Text: The runway length of Amsterdam Airport Schiphol is 3300.0.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 3300.0

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3400.0']
Text: The length of the runway at Amsterdam Airport Schiphol is 3400.0 metres.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 3400.0

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3400.0']
Text: The runway length at Amsterdam Airport, Schiphol is 3400.0.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 3400.0

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3400.0']
Text: Amsterdam Airport Schiphol's runway length is 3400.0.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 3400.0

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3453.0']
Text: The runway length of Amsterdam's Schiphol Airport is 3,453.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 3453.0

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3453.0']
Text: The runway length at Amsterdam Airport Schiphol is 3453.0.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 3453.0

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3453.0']
Text: The runway length of Amsterdam Airport Schiphol is 3453.0.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 3453.0

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3500.0']
Text: Amsterdam's Schiphol Airport has a runway length of 3,500.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 3500.0

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3500.0']
Text: The runway length of Amsterdam Airport Schiphol is 3500.0.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 3500.0

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3800.0']
Text: The runway length of Amsterdam Airport Schiphol is 3800.0 metres.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 3800.0

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3800.0']
Text: The runway length at Amsterdam Airport Schiphol is 3800.0.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 3800.0

Triple: ['__subject__ Amsterdam Airport Schiphol __predicate__ runwayLength __object__ 3800.0']
Text: Amsterdam Airport Schiphol's runway length is 3800.0.
Subject: Amsterdam Airport Schiphol
Predicate: runwayLength
Object: 3800.0

Triple: ["__subject__ Amsterdam Airport Schiphol __predicate__ runwayName __object__ 04/22 'Oostbaan'"]
Text: Amsterdam Airport Schiphol runway name is 04/22 Oostbaan.
Subject: Amsterdam Airport Schiphol
Predicate: runwayName
Object: 04/22 'Oostbaan'

Triple: ["__subject__ Amsterdam Airport Schiphol __predicate__ runwayName __object__ 04/22 'Oostbaan'"]
Text: 04/22 Oostbaan is the runway name of Amsterdam Airport Schiphol.
Subject: Amsterdam Airport Schiphol
Predicate: runwayName
Object: 04/22 'Oostbaan'

Triple: ["__subject__ Amsterdam Airport Schiphol __predicate__ runwayName __object__ 04/22 'Oostbaan'"]
Text: The runway at Amsterdam Airport Schiphol is 04/22 'Oostbaan.
Subject: Amsterdam Airport Schiphol
Predicate: runwayName
Object: 04/22 'Oostbaan'

Triple: ["__subject__ Amsterdam Airport Schiphol __predicate__ runwayName __object__ 09/27 'Buitenveldertbaan'"]
Text: Amsterdam Airport Schiphol runway name is 09/27 Buitenveldertbaan.
Subject: Amsterdam Airport Schiphol
Predicate: runwayName
Object: 09/27 'Buitenveldertbaan'

Triple: ["__subject__ Amsterdam Airport Schiphol __predicate__ runwayName __object__ 09/27 'Buitenveldertbaan'"]
Text: 09/27 Buitenveldertbaan is the runway name of the Amsterdam Airport Schiphol.
Subject: Amsterdam Airport Schiphol
Predicate: runwayName
Object: 09/27 'Buitenveldertbaan'

Triple: ["__subject__ Amsterdam Airport Schiphol __predicate__ runwayName __object__ 09/27 'Buitenveldertbaan'"]
Text: Amsterdam Schiphol Airport has a runway named 09/27 Buitenveldertbaan.
Subject: Amsterdam Airport Schiphol
Predicate: runwayName
Object: 09/27 'Buitenveldertbaan'

Triple: ["__subject__ Amsterdam Airport Schiphol __predicate__ runwayName __object__ 18C/36C 'Zwanenburgbaan'"]
Text: The runway name of Amsterdam's Schiphol Airport is 18C/36C Zwanenburgbaan.
Subject: Amsterdam Airport Schiphol
Predicate: runwayName
Object: 18C/36C 'Zwanenburgbaan'

Triple: ["__subject__ Amsterdam Airport Schiphol __predicate__ runwayName __object__ 18C/36C 'Zwanenburgbaan'"]
Text: 18C/36C or Zwanenburgbaan are the names for the runway at Amsterdam Airport Schiphol.
Subject: Amsterdam Airport Schiphol
Predicate: runwayName
Object: 18C/36C 'Zwanenburgbaan'

Triple: ["__subject__ Amsterdam Airport Schiphol __predicate__ runwayName __object__ 18C/36C 'Zwanenburgbaan'"]
Text: The runway name of Amsterdam Airport Schiphol is 18C/36C Zwanenburgbaan.
Subject: Amsterdam Airport Schiphol
Predicate: runwayName
Object: 18C/36C 'Zwanenburgbaan'

Triple: ["__subject__ Amsterdam Airport Schiphol __predicate__ runwayName __object__ 18L/36R 'Aalsmeerbaan'"]
Text: Amsterdam Airport Schiphol runway name is 18L/36R Aalsmeerbaan.
Subject: Amsterdam Airport Schiphol
Predicate: runwayName
Object: 18L/36R 'Aalsmeerbaan'

Triple: ["__subject__ Amsterdam Airport Schiphol __predicate__ runwayName __object__ 18L/36R 'Aalsmeerbaan'"]
Text: 18L/36R Aalsmeerbaan is the runway name of Amsterdam Airport Schiphol.
Subject: Amsterdam Airport Schiphol
Predicate: runwayName
Object: 18L/36R 'Aalsmeerbaan'

Triple: ["__subject__ Amsterdam Airport Schiphol __predicate__ runwayName __object__ 18L/36R 'Aalsmeerbaan'"]
Text: Amsterdam Schiphol Airport has the runway name 18L/36R 'Aalsmeerbaan'.
Subject: Amsterdam Airport Schiphol
Predicate: runwayName
Object: 18L/36R 'Aalsmeerbaan'

Triple: ["__subject__ Amsterdam Airport Schiphol __predicate__ runwayName __object__ 18R/36L 'Polderbaan'"]
Text: 18R/36L Polderbaan is the runway name at Amsterdam Airport Schiphol.
Subject: Amsterdam Airport Schiphol
Predicate: runwayName
Object: 18R/36L 'Polderbaan'

Triple: ["__subject__ Amsterdam Airport Schiphol __predicate__ runwayName __object__ 18R/36L 'Polderbaan'"]
Text: The runway at Amsterdam Schiphol Airport is called 18R/36L Polderbaan.
Subject: Amsterdam Airport Schiphol
Predicate: runwayName
Object: 18R/36L 'Polderbaan'

Triple: ["__subject__ Amsterdam Airport Schiphol __predicate__ runwayName __object__ 18R/36L 'Polderbaan'"]
Text: The runway name of Amsterdam Airport Schiphol is 18R/36L Polderbaan.
Subject: Amsterdam Airport Schiphol
Predicate: runwayName
Object: 18R/36L 'Polderbaan'

Triple: ['__subject__ Andrews County, Texas __predicate__ largestCity __object__ Andrews, Texas']
Text: The largest city in Andrews County, Texas is Andrews.
Subject: Andrews County, Texas
Predicate: largestCity
Object: Andrews, Texas

Triple: ['__subject__ Andrews County, Texas __predicate__ largestCity __object__ Andrews, Texas']
Text: Andrews, Texas is the largest city in Andrews County, Texas.
Subject: Andrews County, Texas
Predicate: largestCity
Object: Andrews, Texas

Triple: ['__subject__ Andrews County Airport __predicate__ 3rdRunwayLengthFeet __object__ 2939']
Text: The third runway length of Andrews County Airport is 2,939 feet.
Subject: Andrews County Airport
Predicate: 3rdRunwayLengthFeet
Object: 2939

Triple: ['__subject__ Andrews County Airport __predicate__ 3rdRunwayLengthFeet __object__ 2939']
Text: The Andrews County Airport's 3rd runway length in ft is 2939.
Subject: Andrews County Airport
Predicate: 3rdRunwayLengthFeet
Object: 2939

Triple: ['__subject__ Andrews County Airport __predicate__ 3rdRunwayLengthFeet __object__ 2939']
Text: The length of the 3rd runway at Andrews County Airport is 2939 feet.
Subject: Andrews County Airport
Predicate: 3rdRunwayLengthFeet
Object: 2939

Triple: ['__subject__ Andrews County Airport __predicate__ 4thRunwayLengthFeet __object__ 25']
Text: Andrews County Airport is 4th runway length feet of 25.
Subject: Andrews County Airport
Predicate: 4thRunwayLengthFeet
Object: 25

Triple: ['__subject__ Andrews County Airport __predicate__ 4thRunwayLengthFeet __object__ 25']
Text: The fourth runway at Andrews County Airport is 25 feet long.
Subject: Andrews County Airport
Predicate: 4thRunwayLengthFeet
Object: 25

Triple: ['__subject__ Andrews County Airport __predicate__ 4thRunwayLengthFeet __object__ 25']
Text: Andrews County Airport's 4th runway has a length in feet of 25.
Subject: Andrews County Airport
Predicate: 4thRunwayLengthFeet
Object: 25

Triple: ['__subject__ Andrews County Airport __predicate__ 4thRunwaySurfaceType __object__ Asphalt']
Text: The fourth runway at Andrews County Airport is made from asphalt.
Subject: Andrews County Airport
Predicate: 4thRunwaySurfaceType
Object: Asphalt

Triple: ['__subject__ Andrews County Airport __predicate__ 4thRunwaySurfaceType __object__ Asphalt']
Text: The Andrews County Airport fourth runway is made of asphalt.
Subject: Andrews County Airport
Predicate: 4thRunwaySurfaceType
Object: Asphalt

Triple: ['__subject__ Andrews County Airport __predicate__ 4thRunwaySurfaceType __object__ Asphalt']
Text: The 4th runway at Andrews County Airport is made of Asphalt.
Subject: Andrews County Airport
Predicate: 4thRunwaySurfaceType
Object: Asphalt

Triple: ['__subject__ Andrews County Airport __predicate__ location __object__ Texas']
Text: Andrews County Airport is located in Texas.
Subject: Andrews County Airport
Predicate: location
Object: Texas

Triple: ['__subject__ Andrews County Airport __predicate__ locationIdentifier __object__ E11']
Text: Andrews County Airport location identifier is E11.
Subject: Andrews County Airport
Predicate: locationIdentifier
Object: E11

Triple: ['__subject__ Andrews County Airport __predicate__ locationIdentifier __object__ E11']
Text: E11 is the location identifier of Andrews County Airport.
Subject: Andrews County Airport
Predicate: locationIdentifier
Object: E11

Triple: ['__subject__ Andrews County Airport __predicate__ locationIdentifier __object__ E11']
Text: Andrews County Airport is located in E11.
Subject: Andrews County Airport
Predicate: locationIdentifier
Object: E11

Triple: ['__subject__ Andrews County Airport __predicate__ runwayLength __object__ 1773.0']
Text: The length of the runway at Andrews County Airport is 1773 metres.
Subject: Andrews County Airport
Predicate: runwayLength
Object: 1773.0

Triple: ['__subject__ Andrews County Airport __predicate__ runwayLength __object__ 1773.0']
Text: The runway length at Andrews County airport is 1773.0.
Subject: Andrews County Airport
Predicate: runwayLength
Object: 1773.0

Triple: ['__subject__ Andrews County Airport __predicate__ runwayLength __object__ 1773.0']
Text: Andrews County Airport's runway length is 1773.0.
Subject: Andrews County Airport
Predicate: runwayLength
Object: 1773.0

Triple: ['__subject__ Andrews County Airport __predicate__ runwayLength __object__ 8.0']
Text: Andrews County Airport runway is 8 meters long.
Subject: Andrews County Airport
Predicate: runwayLength
Object: 8.0

Triple: ['__subject__ Andrews County Airport __predicate__ runwayLength __object__ 8.0']
Text: The runway length of Andrews County Airport is 8.0.
Subject: Andrews County Airport
Predicate: runwayLength
Object: 8.0

Triple: ['__subject__ Andrews County Airport __predicate__ runwayLength __object__ 8.0']
Text: Andrews County Airport runway length is 8.0.
Subject: Andrews County Airport
Predicate: runwayLength
Object: 8.0

Triple: ['__subject__ Andrews County Airport __predicate__ runwayLength __object__ 929.0']
Text: The runway length of Andrews County airport is 929.0.
Subject: Andrews County Airport
Predicate: runwayLength
Object: 929.0

Triple: ['__subject__ Andrews County Airport __predicate__ runwayLength __object__ 929.0']
Text: The Andrews County Airport's runway length is 929.
Subject: Andrews County Airport
Predicate: runwayLength
Object: 929.0

Triple: ['__subject__ Andrews County Airport __predicate__ runwayName __object__ 16/34']
Text: Andrews County Airport's runway name is 16/34.
Subject: Andrews County Airport
Predicate: runwayName
Object: 16/34

Triple: ['__subject__ Andrews County Airport __predicate__ runwayName __object__ 16/34']
Text: 16/34 is the runway name of Andrews County Airport.
Subject: Andrews County Airport
Predicate: runwayName
Object: 16/34

Triple: ['__subject__ Andrews County Airport __predicate__ runwayName __object__ 2/20']
Text: The runway name of Andrews County Airport is 2/20.
Subject: Andrews County Airport
Predicate: runwayName
Object: 2/20

Triple: ['__subject__ Andrews County Airport __predicate__ runwayName __object__ 2/20']
Text: 2/20 is the name of the runway of Andrews County Airport.
Subject: Andrews County Airport
Predicate: runwayName
Object: 2/20

Triple: ['__subject__ Angola International Airport __predicate__ 1stRunwayLengthFeet __object__ 13123']
Text: The length of the first runway at Angola International Airport is 13,123 feet.
Subject: Angola International Airport
Predicate: 1stRunwayLengthFeet
Object: 13123

Triple: ['__subject__ Angola International Airport __predicate__ 1stRunwayLengthFeet __object__ 13123']
Text: The first runway of Angola International Airport is 13123 feet long.
Subject: Angola International Airport
Predicate: 1stRunwayLengthFeet
Object: 13123

Triple: ['__subject__ Angola International Airport __predicate__ 1stRunwayLengthFeet __object__ 13123']
Text: The 1st runway length in feet of Angola International Airport is 13123.
Subject: Angola International Airport
Predicate: 1stRunwayLengthFeet
Object: 13123

Triple: ['__subject__ Angola International Airport __predicate__ 1stRunwayNumber __object__ 5']
Text: Angola International Airport 1st runway is Number 5.
Subject: Angola International Airport
Predicate: 1stRunwayNumber
Object: 5

Triple: ['__subject__ Angola International Airport __predicate__ 1stRunwayNumber __object__ 5']
Text: 5 is the number of the first runway of Angola International Airport.
Subject: Angola International Airport
Predicate: 1stRunwayNumber
Object: 5

Triple: ['__subject__ Angola International Airport __predicate__ 1stRunwayNumber __object__ 5']
Text: Angola International Airport's 1st runway has the number 5.
Subject: Angola International Airport
Predicate: 1stRunwayNumber
Object: 5

Triple: ['__subject__ Angola International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 159']
Text: Angola International airport is 159 metres above sea level.
Subject: Angola International Airport
Predicate: elevationAboveTheSeaLevelInMetres
Object: 159

Triple: ['__subject__ Angola International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 159']
Text: The Angola International Airport is 159 meters above sea level.
Subject: Angola International Airport
Predicate: elevationAboveTheSeaLevelInMetres
Object: 159

Triple: ['__subject__ Angola International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 159']
Text: Angola International Airport is 159 metres above the sea level.
Subject: Angola International Airport
Predicate: elevationAboveTheSeaLevelInMetres
Object: 159

Triple: ['__subject__ Angola International Airport __predicate__ location __object__ Ícolo e Bengo']
Text: Angola International Airport is located at Ícolo e Bengo.
Subject: Angola International Airport
Predicate: location
Object: Ícolo e Bengo

Triple: ['__subject__ Angola International Airport __predicate__ location __object__ Ícolo e Bengo']
Text: Angola International airport is located in Icolo e Bengo.
Subject: Angola International Airport
Predicate: location
Object: Ícolo e Bengo

Triple: ['__subject__ Angola International Airport __predicate__ location __object__ Ícolo e Bengo']
Text: Angola International Airport is located in Ícolo e Bengo.
Subject: Angola International Airport
Predicate: location
Object: Ícolo e Bengo

Triple: ['__subject__ Angola International Airport __predicate__ runwayLength __object__ 3800.0']
Text: The runway length of Angola International Airport is 3,800.
Subject: Angola International Airport
Predicate: runwayLength
Object: 3800.0

Triple: ['__subject__ Angola International Airport __predicate__ runwayLength __object__ 3800.0']
Text: The runway at Angola International airport is 3800 long.
Subject: Angola International Airport
Predicate: runwayLength
Object: 3800.0

Triple: ['__subject__ Angola International Airport __predicate__ runwayLength __object__ 3800.0']
Text: The runway length of Angola International Airport is 3800.0.
Subject: Angola International Airport
Predicate: runwayLength
Object: 3800.0

Triple: ['__subject__ Angola International Airport __predicate__ runwayLength __object__ 4000.0']
Text: 4000ft is the runway length at Angola International Airport.
Subject: Angola International Airport
Predicate: runwayLength
Object: 4000.0

Triple: ['__subject__ Angola International Airport __predicate__ runwayLength __object__ 4000.0']
Text: The Angola International Airport is 4000 length.
Subject: Angola International Airport
Predicate: runwayLength
Object: 4000.0

Triple: ['__subject__ Angola International Airport __predicate__ runwayLength __object__ 4000.0']
Text: The runway length of Angola International Airport is 4000.0.
Subject: Angola International Airport
Predicate: runwayLength
Object: 4000.0

Triple: ['__subject__ Angola International Airport __predicate__ runwayName __object__ 05L/23R']
Text: The runway at Angola International Airport is called "05L/23R".
Subject: Angola International Airport
Predicate: runwayName
Object: 05L/23R

Triple: ['__subject__ Angola International Airport __predicate__ runwayName __object__ 05L/23R']
Text: 05L/23R is the runway name at Angola International airport.
Subject: Angola International Airport
Predicate: runwayName
Object: 05L/23R

Triple: ['__subject__ Angola International Airport __predicate__ runwayName __object__ 05L/23R']
Text: The runway at Angola International Airport is named 05L/23R.
Subject: Angola International Airport
Predicate: runwayName
Object: 05L/23R

Triple: ['__subject__ Angola International Airport __predicate__ runwayName __object__ South Runway']
Text: "South Runway" is a runway name at Angola International airport.
Subject: Angola International Airport
Predicate: runwayName
Object: South Runway

Triple: ['__subject__ Angola International Airport __predicate__ runwayName __object__ South Runway']
Text: The runway at Angola International Airport is named South Runway.
Subject: Angola International Airport
Predicate: runwayName
Object: South Runway

Triple: ['__subject__ Angola International Airport __predicate__ runwayName __object__ South Runway']
Text: The name of Angola International Airport runway is "South Runway".
Subject: Angola International Airport
Predicate: runwayName
Object: South Runway

Triple: ['__subject__ Antwerp __predicate__ administrativeArrondissement __object__ Arrondissement of Antwerp']
Text: Antwerp is admin Arrondissement of Arrondissement.
Subject: Antwerp
Predicate: administrativeArrondissement
Object: Arrondissement of Antwerp

Triple: ['__subject__ Antwerp __predicate__ administrativeArrondissement __object__ Arrondissement of Antwerp']
Text: Arrondissement of Antwerp is the administrative arrondissement of Antwerp.
Subject: Antwerp
Predicate: administrativeArrondissement
Object: Arrondissement of Antwerp

Triple: ['__subject__ Antwerp __predicate__ administrativeArrondissement __object__ Arrondissement of Antwerp']
Text: The administrative Arrondissement of Antwerp is the Arrondissement of Antwerp.
Subject: Antwerp
Predicate: administrativeArrondissement
Object: Arrondissement of Antwerp

Triple: ['__subject__ Antwerp __predicate__ country __object__ Belgium']
Text: Antwerp is in the country of Belgium.
Subject: Antwerp
Predicate: country
Object: Belgium

Triple: ['__subject__ Antwerp __predicate__ country __object__ Belgium']
Text: Antwerp is a popular tourist destination in Belgium.
Subject: Antwerp
Predicate: country
Object: Belgium

Triple: ['__subject__ Antwerp __predicate__ country __object__ Belgium']
Text: Antwerp is in Belgium.
Subject: Antwerp
Predicate: country
Object: Belgium

Triple: ['__subject__ Antwerp __predicate__ mayor __object__ Bart De Wever']
Text: The mayor of Antwerp is Bart De Wever.
Subject: Antwerp
Predicate: mayor
Object: Bart De Wever

Triple: ['__subject__ Antwerp __predicate__ mayor __object__ Bart De Wever']
Text: Bart De Wever is the mayor of Antwerp.
Subject: Antwerp
Predicate: mayor
Object: Bart De Wever

Triple: ['__subject__ Antwerp International Airport __predicate__ cityServed __object__ Antwerp']
Text: Antwerp International Airport serves the city of Antwerp.
Subject: Antwerp International Airport
Predicate: cityServed
Object: Antwerp

Triple: ['__subject__ Antwerp International Airport __predicate__ cityServed __object__ Antwerp']
Text: Antwerp is served by Antwerp International airport.
Subject: Antwerp International Airport
Predicate: cityServed
Object: Antwerp

Triple: ['__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish department of Mobility and Public Works']
Text: Antwerp International Airport operation organization is Flemish department of mobility and public works.
Subject: Antwerp International Airport
Predicate: operatingOrganisation
Object: Flemish department of Mobility and Public Works

Triple: ['__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish department of Mobility and Public Works']
Text: Flemish Department of Mobility and Public Works operates the Antwerp International Airport.
Subject: Antwerp International Airport
Predicate: operatingOrganisation
Object: Flemish department of Mobility and Public Works

Triple: ['__subject__ Antwerp International Airport __predicate__ operatingOrganisation __object__ Flemish department of Mobility and Public Works']
Text: The Flemish department of Mobility and Public Works is the operating organisation of Antwerp International Airport.
Subject: Antwerp International Airport
Predicate: operatingOrganisation
Object: Flemish department of Mobility and Public Works

Triple: ['__subject__ Antwerp International Airport __predicate__ owner __object__ Flemish Region']
Text: The owner of Antwerp International Airport is the Flemish Region.
Subject: Antwerp International Airport
Predicate: owner
Object: Flemish Region

Triple: ['__subject__ Antwerp International Airport __predicate__ owner __object__ Flemish Region']
Text: Antwerp International Airport is owned by Flemish Region.
Subject: Antwerp International Airport
Predicate: owner
Object: Flemish Region

Triple: ['__subject__ Antwerp International Airport __predicate__ owner __object__ Flemish Region']
Text: Antwerp International Airport is owned by the Flemish Region.
Subject: Antwerp International Airport
Predicate: owner
Object: Flemish Region

Triple: ['__subject__ Antwerp International Airport __predicate__ runwayLength __object__ 1510.0']
Text: The runway length at Antwerp International airport is 1510.0.
Subject: Antwerp International Airport
Predicate: runwayLength
Object: 1510.0

Triple: ['__subject__ Antwerp International Airport __predicate__ runwayLength __object__ 1510.0']
Text: The runway at Antwerp International Airport is 1510 meters.
Subject: Antwerp International Airport
Predicate: runwayLength
Object: 1510.0

Triple: ['__subject__ Antwerp International Airport __predicate__ runwayLength __object__ 1510.0']
Text: The runway length of Antwerp International Airport is 1510.0.
Subject: Antwerp International Airport
Predicate: runwayLength
Object: 1510.0

Triple: ['__subject__ Antwerp International Airport __predicate__ runwayLength __object__ 600.0']
Text: The runway at Antwerp International airport is 600.0 in length.
Subject: Antwerp International Airport
Predicate: runwayLength
Object: 600.0

Triple: ['__subject__ Antwerp International Airport __predicate__ runwayLength __object__ 600.0']
Text: Antwerp International Airport has a runway length of 600.0.
Subject: Antwerp International Airport
Predicate: runwayLength
Object: 600.0

Triple: ['__subject__ Antwerp International Airport __predicate__ runwayLength __object__ 600.0']
Text: The runway length of Antwerp International Airport is 600.0.
Subject: Antwerp International Airport
Predicate: runwayLength
Object: 600.0

Triple: ['__subject__ Appleton, Wisconsin __predicate__ isPartOf __object__ Grand Chute, Wisconsin']
Text: Appleton, Wisconsin is part of Grand Chute, Wisconsin.
Subject: Appleton, Wisconsin
Predicate: isPartOf
Object: Grand Chute, Wisconsin

Triple: ['__subject__ Appleton, Wisconsin __predicate__ isPartOf __object__ Kimberly, Wisconsin']
Text: Appleton, Wisconsin is part of Kimberly, Wisconsin.
Subject: Appleton, Wisconsin
Predicate: isPartOf
Object: Kimberly, Wisconsin

Triple: ['__subject__ Appleton, Wisconsin __predicate__ isPartOf __object__ Little Chute, Wisconsin']
Text: Appleton, Wisconsin is part of little chute, Wisconsin.
Subject: Appleton, Wisconsin
Predicate: isPartOf
Object: Little Chute, Wisconsin

Triple: ['__subject__ Appleton, Wisconsin __predicate__ isPartOf __object__ Little Chute, Wisconsin']
Text: Appleton, Wisconsin, is part of Little Chute, Wisconsin.
Subject: Appleton, Wisconsin
Predicate: isPartOf
Object: Little Chute, Wisconsin

Triple: ['__subject__ Appleton, Wisconsin __predicate__ isPartOf __object__ Little Chute, Wisconsin']
Text: Little Chute, Wisconsin is part of Appleton, Wisconsin.
Subject: Appleton, Wisconsin
Predicate: isPartOf
Object: Little Chute, Wisconsin

Triple: ['__subject__ Appleton International Airport __predicate__ 1stRunwayLengthFeet __object__ 8002']
Text: Appleton International Airport is 1st 8002 runway length.
Subject: Appleton International Airport
Predicate: 1stRunwayLengthFeet
Object: 8002

Triple: ['__subject__ Appleton International Airport __predicate__ 1stRunwayLengthFeet __object__ 8002']
Text: The first runway of Appleton International Airport has a length of 8002 feet.
Subject: Appleton International Airport
Predicate: 1stRunwayLengthFeet
Object: 8002

Triple: ['__subject__ Appleton International Airport __predicate__ 1stRunwayLengthFeet __object__ 8002']
Text: The 1st runway length in feet of Appleton International Airport is 8002.
Subject: Appleton International Airport
Predicate: 1stRunwayLengthFeet
Object: 8002

Triple: ['__subject__ Appleton International Airport __predicate__ cityServed __object__ Appleton, Wisconsin']
Text: Appletone International Airport city served Appleton, Wisconsin.
Subject: Appleton International Airport
Predicate: cityServed
Object: Appleton, Wisconsin

Triple: ['__subject__ Appleton International Airport __predicate__ cityServed __object__ Appleton, Wisconsin']
Text: Appleton International Airport serves the city of Appleton, Wisconsin.
Subject: Appleton International Airport
Predicate: cityServed
Object: Appleton, Wisconsin

Triple: ['__subject__ Appleton International Airport __predicate__ cityServed __object__ Appleton, Wisconsin']
Text: Appleton, Wisconsin is a city which is served by Appleton International Airport.
Subject: Appleton International Airport
Predicate: cityServed
Object: Appleton, Wisconsin

Triple: ['__subject__ Appleton International Airport __predicate__ elevationAboveTheSeaLevel __object__ 280']
Text: Appleton International Airport elevation above the sea level in metres is 280.
Subject: Appleton International Airport
Predicate: elevationAboveTheSeaLevel
Object: 280

Triple: ['__subject__ Appleton International Airport __predicate__ elevationAboveTheSeaLevel __object__ 280']
Text: Appleton International Airport has an elevation of 280 metres above sea level.
Subject: Appleton International Airport
Predicate: elevationAboveTheSeaLevel
Object: 280

Triple: ['__subject__ Appleton International Airport __predicate__ elevationAboveTheSeaLevel __object__ 280']
Text: Appleton International Airport is elevated 280 metres above sea level.
Subject: Appleton International Airport
Predicate: elevationAboveTheSeaLevel
Object: 280

Triple: ['__subject__ Appleton International Airport __predicate__ location __object__ Greenville, Wisconsin']
Text: Appleton International Airport can be found in Greenville, Wisconsin.
Subject: Appleton International Airport
Predicate: location
Object: Greenville, Wisconsin

Triple: ['__subject__ Appleton International Airport __predicate__ location __object__ Greenville, Wisconsin']
Text: Appleton International airport is located in Greenville, Wisconsin.
Subject: Appleton International Airport
Predicate: location
Object: Greenville, Wisconsin

Triple: ['__subject__ Appleton International Airport __predicate__ location __object__ Greenville, Wisconsin']
Text: The Appleton International Airport is in Greenville, Wisconsin.
Subject: Appleton International Airport
Predicate: location
Object: Greenville, Wisconsin

Triple: ['__subject__ Appleton International Airport __predicate__ locationIdentifier __object__ ATW']
Text: The location identifier for Appleton International Airport is ATW.
Subject: Appleton International Airport
Predicate: locationIdentifier
Object: ATW

Triple: ['__subject__ Appleton International Airport __predicate__ locationIdentifier __object__ ATW']
Text: The Appleton International Airport's location id is "ATW".
Subject: Appleton International Airport
Predicate: locationIdentifier
Object: ATW

Triple: ['__subject__ Appleton International Airport __predicate__ locationIdentifier __object__ ATW']
Text: The location identifier of Appleton International Airport is ATW.
Subject: Appleton International Airport
Predicate: locationIdentifier
Object: ATW

Triple: ['__subject__ Appleton International Airport __predicate__ operatingOrganisation __object__ Outagamie County, Wisconsin']
Text: The operating organization for Appleton International Airport is in Outagamie County, Wisconsin.
Subject: Appleton International Airport
Predicate: operatingOrganisation
Object: Outagamie County, Wisconsin

Triple: ['__subject__ Appleton International Airport __predicate__ operatingOrganisation __object__ Outagamie County, Wisconsin']
Text: Outagamie County, Wisconsin is the operating organisation of Appleton International Airport.
Subject: Appleton International Airport
Predicate: operatingOrganisation
Object: Outagamie County, Wisconsin

Triple: ['__subject__ Appleton International Airport __predicate__ operatingOrganisation __object__ Outagamie County, Wisconsin']
Text: The operators of Appleton International Airport are in Outagamie County, Wisconsin.
Subject: Appleton International Airport
Predicate: operatingOrganisation
Object: Outagamie County, Wisconsin

Triple: ['__subject__ Appleton International Airport __predicate__ runwayLength __object__ 1982.0']
Text: The runway length of Appleton International Airport is 1,982.
Subject: Appleton International Airport
Predicate: runwayLength
Object: 1982.0

Triple: ['__subject__ Appleton International Airport __predicate__ runwayLength __object__ 1982.0']
Text: The runway length at Appleton International airport is 1982.0.
Subject: Appleton International Airport
Predicate: runwayLength
Object: 1982.0

Triple: ['__subject__ Appleton International Airport __predicate__ runwayLength __object__ 1982.0']
Text: The Appleton International Airport's runway length is 1982.
Subject: Appleton International Airport
Predicate: runwayLength
Object: 1982.0

Triple: ['__subject__ Appleton International Airport __predicate__ runwayName __object__ 12/30']
Text: The runway name of Appleton International Airport is 12/30.
Subject: Appleton International Airport
Predicate: runwayName
Object: 12/30

Triple: ['__subject__ Appleton International Airport __predicate__ runwayName __object__ 12/30']
Text: 12/30 is the runway name of Appleton International Airport.
Subject: Appleton International Airport
Predicate: runwayName
Object: 12/30

Triple: ['__subject__ Appleton International Airport __predicate__ runwayName __object__ 3/21']
Text: The runway name of Appleton International Airport is 3/21.
Subject: Appleton International Airport
Predicate: runwayName
Object: 3/21

Triple: ['__subject__ Appleton International Airport __predicate__ runwayName __object__ 3/21']
Text: 3/21 is the runway name of Appleton International Airport.
Subject: Appleton International Airport
Predicate: runwayName
Object: 3/21

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ 2ndRunwaySurfaceType __object__ Poaceae']
Text: Poaceae is the surface type of the second runway of Ardmore Airport, New Zealand.
Subject: Ardmore Airport (New Zealand)
Predicate: 2ndRunwaySurfaceType
Object: Poaceae

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ 2ndRunwaySurfaceType __object__ Poaceae']
Text: The 2nd runway at Ardmore Airport (New Zealand) is made of Poaceae.
Subject: Ardmore Airport (New Zealand)
Predicate: 2ndRunwaySurfaceType
Object: Poaceae

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwayLengthFeet __object__ 1960']
Text: The 3rd runway at Ardmore Airport, New Zealand is 1960 feet in length.
Subject: Ardmore Airport (New Zealand)
Predicate: 3rdRunwayLengthFeet
Object: 1960

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwayLengthFeet __object__ 1960']
Text: The Ardmore Airport in New Zealand's 3rd runway length in feet is 1960.
Subject: Ardmore Airport (New Zealand)
Predicate: 3rdRunwayLengthFeet
Object: 1960

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwayLengthFeet __object__ 1960']
Text: The 3rd runway at Ardmore Airport (New Zealand) is 1960 feet long.
Subject: Ardmore Airport (New Zealand)
Predicate: 3rdRunwayLengthFeet
Object: 1960

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae']
Text: Ardmore Airport (New Zealand)'s 3rd runway surface type is Poaceae.
Subject: Ardmore Airport (New Zealand)
Predicate: 3rdRunwaySurfaceType
Object: Poaceae

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ 3rdRunwaySurfaceType __object__ Poaceae']
Text: The 3rd runway at Ardmore Airport (New Zealand) is made of Poaceae.
Subject: Ardmore Airport (New Zealand)
Predicate: 3rdRunwaySurfaceType
Object: Poaceae

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ elevationAboveTheSeaLevel __object__ 34.0']
Text: The Ardmore Airport in New Zealand is 34 meters above sea level.
Subject: Ardmore Airport (New Zealand)
Predicate: elevationAboveTheSeaLevel
Object: 34.0

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ elevationAboveTheSeaLevel __object__ 34.0']
Text: Ardmore Airport, New Zealand is elevated 34.0 metres above sea level.
Subject: Ardmore Airport (New Zealand)
Predicate: elevationAboveTheSeaLevel
Object: 34.0

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ operatingOrganisation __object__ Civil Aviation Authority of New Zealand']
Text: The Civil Aviation Authority of New Zealand is the operating organisation for Ardmore Airport, New Zealand.
Subject: Ardmore Airport (New Zealand)
Predicate: operatingOrganisation
Object: Civil Aviation Authority of New Zealand

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ operatingOrganisation __object__ Civil Aviation Authority of New Zealand']
Text: Ardmore Airport in New Zeland is operated by the Civil Aviation Authority of New Zealand.
Subject: Ardmore Airport (New Zealand)
Predicate: operatingOrganisation
Object: Civil Aviation Authority of New Zealand

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ operatingOrganisation __object__ Civil Aviation Authority of New Zealand']
Text: Ardmore Airport (New Zealand) is operated by the Civil Aviation Authority of New Zealand.
Subject: Ardmore Airport (New Zealand)
Predicate: operatingOrganisation
Object: Civil Aviation Authority of New Zealand

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ runwayLength __object__ 1411.0']
Text: The runway length of Ardmore Airport in New Zealand is 1,411.
Subject: Ardmore Airport (New Zealand)
Predicate: runwayLength
Object: 1411.0

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ runwayLength __object__ 1411.0']
Text: The runway length at Ardmore airport, New Zealand is 1411.0.
Subject: Ardmore Airport (New Zealand)
Predicate: runwayLength
Object: 1411.0

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ runwayLength __object__ 1411.0']
Text: The Ardmore Airport of New Zealand's runway length is 1411.
Subject: Ardmore Airport (New Zealand)
Predicate: runwayLength
Object: 1411.0

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ runwayLength __object__ 597.0']
Text: Ardmore Airport (New Zealand) runway length is 597.0.
Subject: Ardmore Airport (New Zealand)
Predicate: runwayLength
Object: 597.0

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ runwayLength __object__ 597.0']
Text: The runway length of Ardmore Airport, New Zealand is 597.0.
Subject: Ardmore Airport (New Zealand)
Predicate: runwayLength
Object: 597.0

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ runwayLength __object__ 597.0']
Text: The runway length of Ardmore Airport (New Zealand) is 597.0.
Subject: Ardmore Airport (New Zealand)
Predicate: runwayLength
Object: 597.0

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ runwayName __object__ 03L/21R']
Text: 03L/21R is the runway name of Ardmore Airport in New Zealand.
Subject: Ardmore Airport (New Zealand)
Predicate: runwayName
Object: 03L/21R

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ runwayName __object__ 03L/21R']
Text: 03L/21R is the runway name of Ardmore Airport, New Zealand.
Subject: Ardmore Airport (New Zealand)
Predicate: runwayName
Object: 03L/21R

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ runwayName __object__ 03L/21R']
Text: The runway name at Ardmore Airport (New Zealand) is 03L/21R.
Subject: Ardmore Airport (New Zealand)
Predicate: runwayName
Object: 03L/21R

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ runwayName __object__ 03R/21L']
Text: The runway at Ardmore Airport in New Zealand is called "03R/21L".
Subject: Ardmore Airport (New Zealand)
Predicate: runwayName
Object: 03R/21L

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ runwayName __object__ 03R/21L']
Text: 03R/21L is a runway name at Ardmore Airport, New Zealand.
Subject: Ardmore Airport (New Zealand)
Predicate: runwayName
Object: 03R/21L

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ runwayName __object__ 03R/21L']
Text: Ardmore Airport (New Zealand)'s runway name is "03R/21L".
Subject: Ardmore Airport (New Zealand)
Predicate: runwayName
Object: 03R/21L

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ runwayName __object__ 07/25']
Text: Ardmore Airport (New Zealand) runway name is 07/25.
Subject: Ardmore Airport (New Zealand)
Predicate: runwayName
Object: 07/25

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ runwayName __object__ 07/25']
Text: 07/25 is the runway name of Ardmore Airport, New Zealand.
Subject: Ardmore Airport (New Zealand)
Predicate: runwayName
Object: 07/25

Triple: ['__subject__ Ardmore Airport (New Zealand) __predicate__ runwayName __object__ 07/25']
Text: The runway name of Ardmore Airport (New Zealand) is 07/25.
Subject: Ardmore Airport (New Zealand)
Predicate: runwayName
Object: 07/25

Triple: ['__subject__ Ashgabat International Airport __predicate__ 1stRunwayLengthFeet __object__ 12467']
Text: The length of the first runway at Ashgabat International Airport is 12467 feet.
Subject: Ashgabat International Airport
Predicate: 1stRunwayLengthFeet
Object: 12467

Triple: ['__subject__ Ashgabat International Airport __predicate__ 1stRunwayLengthFeet __object__ 12467']
Text: The 1st runway at Ashgabat International airport is 12467 feet in length.
Subject: Ashgabat International Airport
Predicate: 1stRunwayLengthFeet
Object: 12467

Triple: ['__subject__ Ashgabat International Airport __predicate__ 1stRunwayLengthFeet __object__ 12467']
Text: Ashgabat International Airport's 1st runway has a length of 12467 feet.
Subject: Ashgabat International Airport
Predicate: 1stRunwayLengthFeet
Object: 12467

Triple: ['__subject__ Ashgabat International Airport __predicate__ 3rdRunwayLengthFeet __object__ 2953']
Text: The Ashgabat International Airport's 3rd runway length in ft is 2953.
Subject: Ashgabat International Airport
Predicate: 3rdRunwayLengthFeet
Object: 2953

Triple: ['__subject__ Ashgabat International Airport __predicate__ 3rdRunwayLengthFeet __object__ 2953']
Text: The length of the 3rd runway at Ashgabat International Airport is 2953 feet.
Subject: Ashgabat International Airport
Predicate: 3rdRunwayLengthFeet
Object: 2953

Triple: ['__subject__ Ashgabat International Airport __predicate__ iataLocationIdentifier __object__ ASB']
Text: ASB is the IATA location identifier for Ashgabat International airport.
Subject: Ashgabat International Airport
Predicate: iataLocationIdentifier
Object: ASB

Triple: ['__subject__ Ashgabat International Airport __predicate__ iataLocationIdentifier __object__ ASB']
Text: The IATA Location Identifier of Ashgabat International Airport is ASB.
Subject: Ashgabat International Airport
Predicate: iataLocationIdentifier
Object: ASB

Triple: ['__subject__ Ashgabat International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 211']
Text: Ashgabat International Airport is 211 metres above sea level.
Subject: Ashgabat International Airport
Predicate: elevationAboveTheSeaLevelInMetres
Object: 211

Triple: ['__subject__ Ashgabat International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 211']
Text: Ashgabat International Airport is elevated 211 metres above sea level.
Subject: Ashgabat International Airport
Predicate: elevationAboveTheSeaLevelInMetres
Object: 211

Triple: ['__subject__ Ashgabat International Airport __predicate__ location __object__ Ashgabat']
Text: Ashgabat International Airport is located in Ashgabat.
Subject: Ashgabat International Airport
Predicate: location
Object: Ashgabat

Triple: ['__subject__ Ashgabat International Airport __predicate__ location __object__ Ashgabat']
Text: Ashgabat is the location of Ashgabat International Airport.
Subject: Ashgabat International Airport
Predicate: location
Object: Ashgabat

Triple: ['__subject__ Ashgabat International Airport __predicate__ operatingOrganisation __object__ Turkmenistan Airlines']
Text: The operating organization for Ashgabat International Airport is called Turkmenistan Airlines.
Subject: Ashgabat International Airport
Predicate: operatingOrganisation
Object: Turkmenistan Airlines

Triple: ['__subject__ Ashgabat International Airport __predicate__ operatingOrganisation __object__ Turkmenistan Airlines']
Text: Ashgabat International Airport is operated by Turkmenistan Airlines.
Subject: Ashgabat International Airport
Predicate: operatingOrganisation
Object: Turkmenistan Airlines

Triple: ['__subject__ Ashgabat International Airport __predicate__ runwayLength __object__ 2989.0']
Text: The runway length at Ashgabat International Airport is 2989.0 meters.
Subject: Ashgabat International Airport
Predicate: runwayLength
Object: 2989.0

Triple: ['__subject__ Ashgabat International Airport __predicate__ runwayLength __object__ 2989.0']
Text: The runway length at Ashgabat International airport is 2989.0.
Subject: Ashgabat International Airport
Predicate: runwayLength
Object: 2989.0

Triple: ['__subject__ Ashgabat International Airport __predicate__ runwayLength __object__ 2989.0']
Text: The average runway length at Ashgabat International Airport is 2989.0 m.
Subject: Ashgabat International Airport
Predicate: runwayLength
Object: 2989.0

Triple: ['__subject__ Ashgabat International Airport __predicate__ runwayLength __object__ 3800.0']
Text: The runway length at Ashgabat International airport is 3800.0.
Subject: Ashgabat International Airport
Predicate: runwayLength
Object: 3800.0

Triple: ['__subject__ Ashgabat International Airport __predicate__ runwayLength __object__ 3800.0']
Text: Ashgabat International Airport has a runway length of 3800.0.
Subject: Ashgabat International Airport
Predicate: runwayLength
Object: 3800.0

Triple: ['__subject__ Ashgabat International Airport __predicate__ runwayLength __object__ 3800.0']
Text: The runway length of Ashgabat International Airport is 3800.0.
Subject: Ashgabat International Airport
Predicate: runwayLength
Object: 3800.0

Triple: ['__subject__ Ashgabat International Airport __predicate__ runwayLength __object__ 900.0']
Text: The runway length at Ashgabat International Airport is 900.0.
Subject: Ashgabat International Airport
Predicate: runwayLength
Object: 900.0

Triple: ['__subject__ Ashgabat International Airport __predicate__ runwayLength __object__ 900.0']
Text: Ashgabat International Airport's runway is 900 meters long.
Subject: Ashgabat International Airport
Predicate: runwayLength
Object: 900.0

Triple: ['__subject__ Ashgabat International Airport __predicate__ runwayLength __object__ 900.0']
Text: The runway length of Ashgabat International Airport is 900.0.
Subject: Ashgabat International Airport
Predicate: runwayLength
Object: 900.0

Triple: ['__subject__ Ashgabat International Airport __predicate__ runwayName __object__ 12L/30R']
Text: 12L/30R is the runway name of Ashgabat International Airport.
Subject: Ashgabat International Airport
Predicate: runwayName
Object: 12L/30R

Triple: ['__subject__ Ashgabat International Airport __predicate__ runwayName __object__ 12L/30R']
Text: The runway name of Ashgabat International Airport is 12L/30R.
Subject: Ashgabat International Airport
Predicate: runwayName
Object: 12L/30R

Triple: ['__subject__ Ashgabat International Airport __predicate__ runwayName __object__ 12R/30L']
Text: 12R/30L is the runway name of the Ashgabat International Airport.
Subject: Ashgabat International Airport
Predicate: runwayName
Object: 12R/30L

Triple: ['__subject__ Ashgabat International Airport __predicate__ runwayName __object__ 12R/30L']
Text: Ashgabat International Airport has the runway name 12R/30L.
Subject: Ashgabat International Airport
Predicate: runwayName
Object: 12R/30L

Triple: ['__subject__ Ashgabat International Airport __predicate__ runwayName __object__ 12R/30L']
Text: Ashgabat International Airport has a runway named 12R/30L.
Subject: Ashgabat International Airport
Predicate: runwayName
Object: 12R/30L

Triple: ['__subject__ Athens __predicate__ country __object__ Greece']
Text: Athens is located in the country of Greece.
Subject: Athens
Predicate: country
Object: Greece

Triple: ['__subject__ Athens __predicate__ country __object__ Greece']
Text: Athens is a city in Greece.
Subject: Athens
Predicate: country
Object: Greece

Triple: ['__subject__ Athens International Airport __predicate__ cityServed __object__ Athens']
Text: The Athens International Airport serves the city of Athens.
Subject: Athens International Airport
Predicate: cityServed
Object: Athens

Triple: ['__subject__ Athens International Airport __predicate__ cityServed __object__ Athens']
Text: Athens International Airport serves the city of Athens.
Subject: Athens International Airport
Predicate: cityServed
Object: Athens

Triple: ['__subject__ Athens International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 94']
Text: Athens International Airport is 94 metres above sea level.
Subject: Athens International Airport
Predicate: elevationAboveTheSeaLevelInMetres
Object: 94

Triple: ['__subject__ Athens International Airport __predicate__ elevationAboveTheSeaLevelInMetres __object__ 94']
Text: The elevation above the sea level (in metres) of Athens International Airport is 94.
Subject: Athens International Airport
Predicate: elevationAboveTheSeaLevelInMetres
Object: 94

Triple: ['__subject__ Athens International Airport __predicate__ runwayLength __object__ 3800.0']
Text: The runway length at Athens International Airport is 3,800.
Subject: Athens International Airport
Predicate: runwayLength
Object: 3800.0

Triple: ['__subject__ Athens International Airport __predicate__ runwayLength __object__ 3800.0']
Text: The runway length of Athens International Airport is 3800.0.
Subject: Athens International Airport
Predicate: runwayLength
Object: 3800.0

Triple: ['__subject__ Athens International Airport __predicate__ runwayLength __object__ 4000.0']
Text: The runway length of Athens International Airport is 4000.0.
Subject: Athens International Airport
Predicate: runwayLength
Object: 4000.0

Triple: ['__subject__ Athens International Airport __predicate__ runwayLength __object__ 4000.0']
Text: Athens International Airport has a runway length of 4000.0.
Subject: Athens International Airport
Predicate: runwayLength
Object: 4000.0

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States']
Text: Atlantic City, New Jersey is in the U.S.A.
Subject: Atlantic City, New Jersey
Predicate: country
Object: United States

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States']
Text: Atlantic City, New Jersey is in the United States.
Subject: Atlantic City, New Jersey
Predicate: country
Object: United States

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ isPartOf __object__ New Jersey']
Text: Atlantic City, New Jersey is part of New Jersey.
Subject: Atlantic City, New Jersey
Predicate: isPartOf
Object: New Jersey

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ leader __object__ Don Guardian']
Text: The leader of Atlantic City, New Jersey is Don Guardian.
Subject: Atlantic City, New Jersey
Predicate: leader
Object: Don Guardian

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ leader __object__ Don Guardian']
Text: The leader's name of Atlantic City, New Jersey, is Don Guardian.
Subject: Atlantic City, New Jersey
Predicate: leader
Object: Don Guardian

Triple: ['__subject__ Atlantic City International Airport __predicate__ icaoLocationIdentifier __object__ KACY']
Text: Atlantic City International Airport's ICAO Location Identifier is KACY.
Subject: Atlantic City International Airport
Predicate: icaoLocationIdentifier
Object: KACY

Triple: ['__subject__ Atlantic City International Airport __predicate__ icaoLocationIdentifier __object__ KACY']
Text: KACY is the ICAO Location Identifier of Atlantic City International Airport.
Subject: Atlantic City International Airport
Predicate: icaoLocationIdentifier
Object: KACY

Triple: ['__subject__ Atlantic City International Airport __predicate__ cityServed __object__ Atlantic City, New Jersey']
Text: The Atlantic City International Airport serves Atlantic City, N.J.
Subject: Atlantic City International Airport
Predicate: cityServed
Object: Atlantic City, New Jersey

Triple: ['__subject__ Atlantic City International Airport __predicate__ cityServed __object__ Atlantic City, New Jersey']
Text: Atlantic City International Airport serves the city of Atlantic City, New Jersey.
Subject: Atlantic City International Airport
Predicate: cityServed
Object: Atlantic City, New Jersey

Triple: ['__subject__ Atlantic City International Airport __predicate__ elevationAboveTheSeaLevelInFeet __object__ 75']
Text: The elevation above sea level for Atlantic City International Airport is 75ft.
Subject: Atlantic City International Airport
Predicate: elevationAboveTheSeaLevelInFeet
Object: 75

Triple: ['__subject__ Atlantic City International Airport __predicate__ elevationAboveTheSeaLevelInFeet __object__ 75']
Text: The Atlantic City International Airport is 75 feet above sea level.
Subject: Atlantic City International Airport
Predicate: elevationAboveTheSeaLevelInFeet
Object: 75

Triple: ['__subject__ Atlantic City International Airport __predicate__ elevationAboveTheSeaLevelInFeet __object__ 75']
Text: Atlantic City International Airport has an elevation of 75 feet above sea level.
Subject: Atlantic City International Airport
Predicate: elevationAboveTheSeaLevelInFeet
Object: 75

Triple: ['__subject__ Atlantic City International Airport __predicate__ elevationAboveTheSeaLevel __object__ 23.0']
Text: The elevation above the sea level (in metres) of Atlantic City International Airport is 23.0.
Subject: Atlantic City International Airport
Predicate: elevationAboveTheSeaLevel
Object: 23.0

Triple: ['__subject__ Atlantic City International Airport __predicate__ location __object__ Egg Harbor Township, New Jersey']
Text: Atlantic City International Airport is in Egg Harbor Township, N.J.
Subject: Atlantic City International Airport
Predicate: location
Object: Egg Harbor Township, New Jersey

Triple: ['__subject__ Atlantic City International Airport __predicate__ location __object__ Egg Harbor Township, New Jersey']
Text: Atlantic City International Airport is located in Egg Harbor Township, New Jersey.
Subject: Atlantic City International Airport
Predicate: location
Object: Egg Harbor Township, New Jersey

Triple: ['__subject__ Atlantic City International Airport __predicate__ location __object__ Egg Harbor Township, New Jersey']
Text: Atlantic City International Airport is located at Egg Harbor Township, New Jersey.
Subject: Atlantic City International Airport
Predicate: location
Object: Egg Harbor Township, New Jersey

Triple: ['__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey']
Text: The Atlantic City International Airport is operated by the Port Authority of New York and New Jersey.
Subject: Atlantic City International Airport
Predicate: operatingOrganisation
Object: Port Authority of New York and New Jersey

Triple: ['__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey']
Text: The Port Authority of New York and New Jersey is the operating organisation of Atlantic City International airport.
Subject: Atlantic City International Airport
Predicate: operatingOrganisation
Object: Port Authority of New York and New Jersey

Triple: ['__subject__ Atlantic City International Airport __predicate__ operatingOrganisation __object__ Port Authority of New York and New Jersey']
Text: Atlantic City International Airport is operated by the Port Authority of New York and New Jersey.
Subject: Atlantic City International Airport
Predicate: operatingOrganisation
Object: Port Authority of New York and New Jersey

Triple: ['__subject__ Atlantic City International Airport __predicate__ runwayLength __object__ 1873.0']
Text: The runway length of Atlantic City International Airport is 1,873.
Subject: Atlantic City International Airport
Predicate: runwayLength
Object: 1873.0

Triple: ['__subject__ Atlantic City International Airport __predicate__ runwayLength __object__ 1873.0']
Text: The runway length of Atlantic City International Airport is 1873.
Subject: Atlantic City International Airport
Predicate: runwayLength
Object: 1873.0

Triple: ['__subject__ Atlantic City International Airport __predicate__ runwayLength __object__ 1873.0']
Text: The runway length of Atlantic City International Airport is 1873.0.
Subject: Atlantic City International Airport
Predicate: runwayLength
Object: 1873.0

Triple: ['__subject__ Atlantic City International Airport __predicate__ runwayLength __object__ 3048.0']
Text: The runway length of Atlantic City International Airport is 3048.0.
Subject: Atlantic City International Airport
Predicate: runwayLength
Object: 3048.0

Triple: ['__subject__ Atlantic City International Airport __predicate__ runwayName __object__ 4/22']
Text: Atlantic City International Airport runway name is 4/22.
Subject: Atlantic City International Airport
Predicate: runwayName
Object: 4/22

Triple: ['__subject__ Atlantic City International Airport __predicate__ runwayName __object__ 4/22']
Text: 4/22 is the runway name of Atlantic City International Airport.
Subject: Atlantic City International Airport
Predicate: runwayName
Object: 4/22

Triple: ['__subject__ Atlantic City International Airport __predicate__ runwayName __object__ 4/22']
Text: Atlantic City International Airport has the runway name 4/22.
Subject: Atlantic City International Airport
Predicate: runwayName
Object: 4/22

Triple: ['__subject__ Atlantic City International Airport __predicate__ runwaySurfaceType __object__ Asphalt/Concrete']
Text: The runway surface at Atlantic City International Airport is made from asphalt and concrete.
Subject: Atlantic City International Airport
Predicate: runwaySurfaceType
Object: Asphalt/Concrete

Triple: ['__subject__ Atlantic City International Airport __predicate__ runwaySurfaceType __object__ Asphalt/Concrete']
Text: The Atlantic City International Airport's runway surface is made of Asphalt and Concrete.
Subject: Atlantic City International Airport
Predicate: runwaySurfaceType
Object: Asphalt/Concrete

Triple: ['__subject__ Belgium __predicate__ capital __object__ City of Brussels']
Text: The capital of Belgium is Brussels.
Subject: Belgium
Predicate: capital
Object: City of Brussels

Triple: ['__subject__ Belgium __predicate__ capital __object__ City of Brussels']
Text: The capital city of Belgium is Brussels.
Subject: Belgium
Predicate: capital
Object: City of Brussels

Triple: ['__subject__ Belgium __predicate__ language __object__ French language']
Text: French is the spoken language in Belgium.
Subject: Belgium
Predicate: language
Object: French language

Triple: ['__subject__ Belgium __predicate__ language __object__ French language']
Text: The language of Belgium is French.
Subject: Belgium
Predicate: language
Object: French language

Triple: ['__subject__ Belgium __predicate__ language __object__ French language']
Text: French is one of the languages spoken in Belgium.
Subject: Belgium
Predicate: language
Object: French language

Triple: ['__subject__ Belgium __predicate__ leader __object__ Charles Michel']
Text: Belgium's leader is Charles Michel.
Subject: Belgium
Predicate: leader
Object: Charles Michel

Triple: ['__subject__ Belgium __predicate__ leader __object__ Charles Michel']
Text: The leader of Belgium is Charles Michel.
Subject: Belgium
Predicate: leader
Object: Charles Michel

Triple: ['__subject__ Belgium __predicate__ officialLanguage __object__ French language']
Text: French is the official language of Belgium.
Subject: Belgium
Predicate: officialLanguage
Object: French language

Triple: ['__subject__ Belgium __predicate__ officialLanguage __object__ French language']
Text: The official language of Belgium is French.
Subject: Belgium
Predicate: officialLanguage
Object: French language

Triple: ['__subject__ Belgium __predicate__ officialLanguage __object__ German language']
Text: German is the official language of Belgium.
Subject: Belgium
Predicate: officialLanguage
Object: German language

Triple: ['__subject__ Belgium __predicate__ officialLanguage __object__ German language']
Text: Belgium's official language is German.
Subject: Belgium
Predicate: officialLanguage
Object: German language

Triple: ['__subject__ Belgium __predicate__ officialLanguage __object__ German language']
Text: German is an official language of Belgium.
Subject: Belgium
Predicate: officialLanguage
Object: German language

Triple: ['__subject__ Civil Aviation Authority of New Zealand __predicate__ location __object__ Wellington']
Text: The Civil Aviation Authority of New Zealand is in Wellington.
Subject: Civil Aviation Authority of New Zealand
Predicate: location
Object: Wellington

Triple: ['__subject__ Civil Aviation Authority of New Zealand __predicate__ location __object__ Wellington']
Text: The Civil Aviation Authority of New Zealand is located in Wellington.
Subject: Civil Aviation Authority of New Zealand
Predicate: location
Object: Wellington

Triple: ['__subject__ Curitiba __predicate__ country __object__ Brazil']
Text: Curitiba is located in Brazil.
Subject: Curitiba
Predicate: country
Object: Brazil

Triple: ['__subject__ Curitiba __predicate__ country __object__ Brazil']
Text: Curitiba is in Brazil.
Subject: Curitiba
Predicate: country
Object: Brazil

Triple: ['__subject__ Curitiba __predicate__ isPartOf __object__ Paraná (state)']
Text: Curitiba is part of the State of Paraná.
Subject: Curitiba
Predicate: isPartOf
Object: Paraná (state)

Triple: ['__subject__ Curitiba __predicate__ isPartOf __object__ Paraná (state)']
Text: Curitiba is part of Parana state.
Subject: Curitiba
Predicate: isPartOf
Object: Paraná (state)

Triple: ['__subject__ Curitiba __predicate__ isPartOf __object__ Paraná (state)']
Text: Curitiba is part of the state of Parana.
Subject: Curitiba
Predicate: isPartOf
Object: Paraná (state)

Triple: ['__subject__ Curitiba __predicate__ leader __object__ Democratic Labour Party (Brazil)']
Text: Curitiba is led by the Democratic Labour Party (Brazil).
Subject: Curitiba
Predicate: leader
Object: Democratic Labour Party (Brazil)

Triple: ['__subject__ Denmark __predicate__ language __object__ Danish language']
Text: Denmark language is Danish language.
Subject: Denmark
Predicate: language
Object: Danish language

Triple: ['__subject__ Denmark __predicate__ language __object__ Danish language']
Text: Danish is the language of Denmark.
Subject: Denmark
Predicate: language
Object: Danish language

Triple: ['__subject__ Denmark __predicate__ language __object__ Danish language']
Text: The language of Denmark is Danish.
Subject: Denmark
Predicate: language
Object: Danish language

Triple: ['__subject__ Denmark __predicate__ language __object__ Faroese language']
Text: The Faroese language is spoken in Denmark.
Subject: Denmark
Predicate: language
Object: Faroese language

Triple: ['__subject__ Denmark __predicate__ language __object__ Faroese language']
Text: Denmark's language is Faroese.
Subject: Denmark
Predicate: language
Object: Faroese language

Triple: ['__subject__ Denmark __predicate__ language __object__ German language']
Text: German is the language spoken in Denmark.
Subject: Denmark
Predicate: language
Object: German language

Triple: ['__subject__ Denmark __predicate__ language __object__ German language']
Text: German is the language of Denmark.
Subject: Denmark
Predicate: language
Object: German language

Triple: ['__subject__ Denmark __predicate__ language __object__ German language']
Text: German is a language spoken in Denmark.
Subject: Denmark
Predicate: language
Object: German language

Triple: ['__subject__ Denmark __predicate__ language __object__ Greenlandic language']
Text: Greenlandic is the language spoken in Denmark.
Subject: Denmark
Predicate: language
Object: Greenlandic language

Triple: ['__subject__ Denmark __predicate__ language __object__ Greenlandic language']
Text: The Greenlandic language is spoken in Denmark.
Subject: Denmark
Predicate: language
Object: Greenlandic language

Triple: ['__subject__ Denmark __predicate__ language __object__ Greenlandic language']
Text: One of the languages of Denmark is Greenlandic.
Subject: Denmark
Predicate: language
Object: Greenlandic language

Triple: ['__subject__ Denmark __predicate__ leader __object__ Margrethe II of Denmark']
Text: Denmark's leader is Margrethe II of Denmark.
Subject: Denmark
Predicate: leader
Object: Margrethe II of Denmark

Triple: ['__subject__ Denmark __predicate__ leader __object__ Margrethe II of Denmark']
Text: Margrethe II of Denmark is the leader of Denmark.
Subject: Denmark
Predicate: leader
Object: Margrethe II of Denmark

Triple: ['__subject__ Denmark __predicate__ leader __object__ Margrethe II of Denmark']
Text: The Queen of Denmark is Margrethe II.
Subject: Denmark
Predicate: leader
Object: Margrethe II of Denmark

Triple: ['__subject__ ENAIRE __predicate__ city __object__ Madrid']
Text: ENAIRE is in the city of Madrid.
Subject: ENAIRE
Predicate: city
Object: Madrid

Triple: ['__subject__ ENAIRE __predicate__ city __object__ Madrid']
Text: ENAIRE is located in the city of Madrid.
Subject: ENAIRE
Predicate: city
Object: Madrid

Triple: ['__subject__ ENAIRE __predicate__ city __object__ Madrid']
Text: ENAIRE is located in Madrid.
Subject: ENAIRE
Predicate: city
Object: Madrid

Triple: ['__subject__ Egg Harbor Township, New Jersey __predicate__ country __object__ United States']
Text: Egg Harbor Township, New Jersey is in the United States.
Subject: Egg Harbor Township, New Jersey
Predicate: country
Object: United States

Triple: ['__subject__ Egg Harbor Township, New Jersey __predicate__ country __object__ United States']
Text: Egg Harbor Township is located in New Jersey, in the United States.
Subject: Egg Harbor Township, New Jersey
Predicate: country
Object: United States

Triple: ['__subject__ Egg Harbor Township, New Jersey __predicate__ isPartOf __object__ Atlantic County, New Jersey']
Text: Egg Harbor Township is a township in Atlantic County, New Jersey, United States.
Subject: Egg Harbor Township, New Jersey
Predicate: isPartOf
Object: Atlantic County, New Jersey

Triple: ['__subject__ Egg Harbor Township, New Jersey __predicate__ isPartOf __object__ Atlantic County, New Jersey']
Text: The Egg Harbor Township, New Jersey is a part of Atlantic County, New Jersey.
Subject: Egg Harbor Township, New Jersey
Predicate: isPartOf
Object: Atlantic County, New Jersey

Triple: ['__subject__ Egg Harbor Township, New Jersey __predicate__ isPartOf __object__ Atlantic County, New Jersey']
Text: Egg Harbor Township, New Jersey, is part of Atlantic County, New Jersey.
Subject: Egg Harbor Township, New Jersey
Predicate: isPartOf
Object: Atlantic County, New Jersey

Triple: ['__subject__ Egg Harbor Township, New Jersey __predicate__ isPartOf __object__ New Jersey']
Text: Egg Harbor Township, New Jersey is part of New Jersey.
Subject: Egg Harbor Township, New Jersey
Predicate: isPartOf
Object: New Jersey

Triple: ['__subject__ Egg Harbor Township, New Jersey __predicate__ isPartOf __object__ New Jersey']
Text: Egg Harbor Township is a part of New Jersey.
Subject: Egg Harbor Township, New Jersey
Predicate: isPartOf
Object: New Jersey

Triple: ['__subject__ Egg Harbor Township, New Jersey __predicate__ isPartOf __object__ New Jersey']
Text: Egg Harbor Township, New Jersey, is part of New Jersey.
Subject: Egg Harbor Township, New Jersey
Predicate: isPartOf
Object: New Jersey

Triple: ['__subject__ Flemish Government __predicate__ jurisdiction __object__ Flanders']
Text: Flemish Government jurisdiction is Flanders.
Subject: Flemish Government
Predicate: jurisdiction
Object: Flanders

Triple: ['__subject__ Flemish Government __predicate__ jurisdiction __object__ Flanders']
Text: Flanders is the jurisdiction of the Flemish Government.
Subject: Flemish Government
Predicate: jurisdiction
Object: Flanders

Triple: ['__subject__ Flemish Government __predicate__ jurisdiction __object__ Flanders']
Text: The Flemish Government has its jurisdiction in Flanders.
Subject: Flemish Government
Predicate: jurisdiction
Object: Flanders

Triple: ['__subject__ Flemish Government __predicate__ jurisdiction __object__ Flemish Region']
Text: Flemish Government jurisdiction is Flemish Region.
Subject: Flemish Government
Predicate: jurisdiction
Object: Flemish Region

Triple: ['__subject__ Flemish Government __predicate__ jurisdiction __object__ Flemish Region']
Text: The Flemish Government has jurisdiction of the Flemish region.
Subject: Flemish Government
Predicate: jurisdiction
Object: Flemish Region

Triple: ['__subject__ Flemish Government __predicate__ jurisdiction __object__ Flemish Region']
Text: The jurisdiction of the Flemish Government is the Flemish Region.
Subject: Flemish Government
Predicate: jurisdiction
Object: Flemish Region

Triple: ['__subject__ Flemish Region __predicate__ country __object__ Belgium']
Text: The Flemish region is in the country of Belgium.
Subject: Flemish Region
Predicate: country
Object: Belgium

Triple: ['__subject__ Greece __predicate__ demonym __object__ Greeks']
Text: Greece demonym is Greeks.
Subject: Greece
Predicate: demonym
Object: Greeks

Triple: ['__subject__ Greece __predicate__ demonym __object__ Greeks']
Text: The people of Greece are called Greeks.
Subject: Greece
Predicate: demonym
Object: Greeks

Triple: ['__subject__ Greece __predicate__ demonym __object__ Greeks']
Text: The demonym of the inhabitants of Greece is Greeks.
Subject: Greece
Predicate: demonym
Object: Greeks

Triple: ['__subject__ Greece __predicate__ leader __object__ Alexis Tsipras']
Text: Greece leader name is Alexis Tsipras.
Subject: Greece
Predicate: leader
Object: Alexis Tsipras

Triple: ['__subject__ Greece __predicate__ leader __object__ Alexis Tsipras']
Text: Alexis Tsipras is the name of the leader of Greece.
Subject: Greece
Predicate: leader
Object: Alexis Tsipras

Triple: ['__subject__ Greece __predicate__ leader __object__ Alexis Tsipras']
Text: The leader of Greece is Alexis Tsipras.
Subject: Greece
Predicate: leader
Object: Alexis Tsipras

Triple: ['__subject__ Greece __predicate__ leader __object__ Prokopis Pavlopoulos']
Text: Greece's leader name is Prokopis Pavlopoulos.
Subject: Greece
Predicate: leader
Object: Prokopis Pavlopoulos

Triple: ['__subject__ Greece __predicate__ leader __object__ Prokopis Pavlopoulos']
Text: Prokopis Pavlopoulos is the leader of Greece.
Subject: Greece
Predicate: leader
Object: Prokopis Pavlopoulos

Triple: ['__subject__ Greece __predicate__ leader __object__ Prokopis Pavlopoulos']
Text: Prokopis Pavlopoulos is the name of the Leader of Greece.
Subject: Greece
Predicate: leader
Object: Prokopis Pavlopoulos

Triple: ['__subject__ Greenville, Wisconsin __predicate__ isPartOf __object__ Clayton, Winnebago County, Wisconsin']
Text: Greenville, Wisconsin, is part of Clayton Winnebago County, Wisconsin.
Subject: Greenville, Wisconsin
Predicate: isPartOf
Object: Clayton, Winnebago County, Wisconsin

Triple: ['__subject__ Greenville, Wisconsin __predicate__ isPartOf __object__ Clayton, Winnebago County, Wisconsin']
Text: Greenville, Wisconsin is part of Clayton, Winnebago County, Wisconsin.
Subject: Greenville, Wisconsin
Predicate: isPartOf
Object: Clayton, Winnebago County, Wisconsin

Triple: ['__subject__ Greenville, Wisconsin __predicate__ isPartOf __object__ Dale, Wisconsin']
Text: Greenville, Wisconsin is part of Dale, Wisconsin.
Subject: Greenville, Wisconsin
Predicate: isPartOf
Object: Dale, Wisconsin

Triple: ['__subject__ Greenville, Wisconsin __predicate__ isPartOf __object__ Ellington, Wisconsin']
Text: Greenville, Wisconsin is part of Ellington, Wisconsin.
Subject: Greenville, Wisconsin
Predicate: isPartOf
Object: Ellington, Wisconsin

Triple: ['__subject__ Greenville, Wisconsin __predicate__ isPartOf __object__ Ellington, Wisconsin']
Text: Greenville, Wisconsin, is part of Ellington, Wisconsin.
Subject: Greenville, Wisconsin
Predicate: isPartOf
Object: Ellington, Wisconsin

Triple: ['__subject__ Greenville, Wisconsin __predicate__ isPartOf __object__ Menasha (town), Wisconsin']
Text: Greenville, Wisconsin is part of Menasha, Wisconsin.
Subject: Greenville, Wisconsin
Predicate: isPartOf
Object: Menasha (town), Wisconsin

Triple: ['__subject__ Greenville, Wisconsin __predicate__ isPartOf __object__ Menasha (town), Wisconsin']
Text: Greenville is part of the town of Menasha in Wisconsin.
Subject: Greenville, Wisconsin
Predicate: isPartOf
Object: Menasha (town), Wisconsin

Triple: ['__subject__ Greenville, Wisconsin __predicate__ isPartOf __object__ Menasha (town), Wisconsin']
Text: Greenville, Wisconsin is part of Menasha (town), Wisconsin.
Subject: Greenville, Wisconsin
Predicate: isPartOf
Object: Menasha (town), Wisconsin

Triple: ['__subject__ Harrietstown, New York __predicate__ country __object__ United States']
Text: Harrietstown, New York, is located in the United States.
Subject: Harrietstown, New York
Predicate: country
Object: United States

Triple: ['__subject__ Harrietstown, New York __predicate__ country __object__ United States']
Text: Harrietstown, New York is in the United States.
Subject: Harrietstown, New York
Predicate: country
Object: United States

Triple: ['__subject__ Harrietstown, New York __predicate__ isPartOf __object__ New York']
Text: Harrietstown, New York is part of New York.
Subject: Harrietstown, New York
Predicate: isPartOf
Object: New York

Triple: ['__subject__ Harrietstown, New York __predicate__ isPartOf __object__ New York']
Text: Harrietstown, New York, is part of New York.
Subject: Harrietstown, New York
Predicate: isPartOf
Object: New York

Triple: ['__subject__ Harrietstown, New York __predicate__ isPartOf __object__ New York']
Text: Harrietstown is part of New York.
Subject: Harrietstown, New York
Predicate: isPartOf
Object: New York

Triple: ['__subject__ India __predicate__ leader __object__ Narendra Modi']
Text: Narendra Modi is the leader of India.
Subject: India
Predicate: leader
Object: Narendra Modi

Triple: ['__subject__ India __predicate__ leader __object__ Narendra Modi']
Text: The leader of India is Narendra Modi.
Subject: India
Predicate: leader
Object: Narendra Modi

Triple: ['__subject__ India __predicate__ leader __object__ T. S. Thakur']
Text: One of the leaders of India is called T. S. Thakur.
Subject: India
Predicate: leader
Object: T. S. Thakur

Triple: ['__subject__ India __predicate__ leader __object__ T. S. Thakur']
Text: T S Thakur is a leader of India.
Subject: India
Predicate: leader
Object: T. S. Thakur

Triple: ['__subject__ India __predicate__ leader __object__ T. S. Thakur']
Text: The leader of India is T.S. Thakur.
Subject: India
Predicate: leader
Object: T. S. Thakur

Triple: ['__subject__ Indian Air Force __predicate__ aircraftHelicopter __object__ HAL Light Combat Helicopter']
Text: India's Air Force has an aircraft-capable helicopter known as the HAL Light Combat Helicopter.
Subject: Indian Air Force
Predicate: aircraftHelicopter
Object: HAL Light Combat Helicopter

Triple: ['__subject__ Indian Air Force __predicate__ aircraftHelicopter __object__ HAL Light Combat Helicopter']
Text: The HAL Light Combat Helicopter is an aircraft helicopter of the Indian Air Force.
Subject: Indian Air Force
Predicate: aircraftHelicopter
Object: HAL Light Combat Helicopter

Triple: ['__subject__ Indian Air Force __predicate__ aircraftHelicopter __object__ HAL Light Combat Helicopter']
Text: The HAL Light Combat Helicopter is a Helicopter used by the Indian Air Force.
Subject: Indian Air Force
Predicate: aircraftHelicopter
Object: HAL Light Combat Helicopter

Triple: ['__subject__ Indian Air Force __predicate__ transportAircraft __object__ Boeing C-17 Globemaster III']
Text: The Boeing C-17 Globemaster III is a transport aircraft in the Indian Air Force.
Subject: Indian Air Force
Predicate: transportAircraft
Object: Boeing C-17 Globemaster III

Triple: ['__subject__ Indian Air Force __predicate__ transportAircraft __object__ Boeing C-17 Globemaster III']
Text: The transport aircraft for the Indian Air Force is the Boeing C-17 Globemaster III.
Subject: Indian Air Force
Predicate: transportAircraft
Object: Boeing C-17 Globemaster III

Triple: ['__subject__ Infraero __predicate__ location __object__ Brasília']
Text: Infraero is in Brasilia.
Subject: Infraero
Predicate: location
Object: Brasília

Triple: ['__subject__ Infraero __predicate__ location __object__ Brasília']
Text: Infraero is located in Brasilia.
Subject: Infraero
Predicate: location
Object: Brasília

Triple: ['__subject__ Infraero __predicate__ location __object__ Brazil']
Text: Infraero location is in Brazil.
Subject: Infraero
Predicate: location
Object: Brazil

Triple: ['__subject__ Infraero __predicate__ location __object__ Brazil']
Text: Infraero is in Brazil.
Subject: Infraero
Predicate: location
Object: Brazil

Triple: ['__subject__ Infraero __predicate__ location __object__ Brazil']
Text: Infraero is located in Brazil.
Subject: Infraero
Predicate: location
Object: Brazil

Triple: ['__subject__ Iraq __predicate__ currency __object__ Iraqi dinar']
Text: The currency in Iraq is the Iraqi dinar.
Subject: Iraq
Predicate: currency
Object: Iraqi dinar

Triple: ['__subject__ Iraq __predicate__ currency __object__ Iraqi dinar']
Text: The currency of Iraq is the Iraqi dinar.
Subject: Iraq
Predicate: currency
Object: Iraqi dinar

Triple: ['__subject__ Iraq __predicate__ language __object__ Kurdish languages']
Text: The Kurdish languages are spoken in Iraq.
Subject: Iraq
Predicate: language
Object: Kurdish languages

Triple: ['__subject__ Iraq __predicate__ leader __object__ Fuad Masum']
Text: Iraq is led by Fuad Masum.
Subject: Iraq
Predicate: leader
Object: Fuad Masum

Triple: ['__subject__ Iraq __predicate__ leader __object__ Fuad Masum']
Text: Iraq's leader is Fuad Masum.
Subject: Iraq
Predicate: leader
Object: Fuad Masum

Triple: ['__subject__ Iraq __predicate__ leader __object__ Fuad Masum']
Text: The leader of Iraq is Fuad Masum.
Subject: Iraq
Predicate: leader
Object: Fuad Masum

Triple: ['__subject__ Iraq __predicate__ leader __object__ Haider al-Abadi']
Text: Iraq leader name is Haider Al-Abadi.
Subject: Iraq
Predicate: leader
Object: Haider al-Abadi

Triple: ['__subject__ Iraq __predicate__ leader __object__ Haider al-Abadi']
Text: Haider al-Abadi is the name of the leader of Iraq.
Subject: Iraq
Predicate: leader
Object: Haider al-Abadi

Triple: ['__subject__ Iraq __predicate__ leader __object__ Haider al-Abadi']
Text: The leader if Iraq is called Haider al-Abadi.
Subject: Iraq
Predicate: leader
Object: Haider al-Abadi

Triple: ['__subject__ Iraq __predicate__ officialLanguage __object__ Arabic']
Text: The official language of Iraq is Arabic.
Subject: Iraq
Predicate: officialLanguage
Object: Arabic

Triple: ['__subject__ Iraq __predicate__ officialLanguage __object__ Arabic']
Text: Arabic is the official language of Iraq.
Subject: Iraq
Predicate: officialLanguage
Object: Arabic

Triple: ['__subject__ Lahore __predicate__ country __object__ Pakistan']
Text: Lahore is in Pakistan.
Subject: Lahore
Predicate: country
Object: Pakistan

Triple: ['__subject__ Lahore __predicate__ country __object__ Pakistan']
Text: Lahore is located in Pakistan.
Subject: Lahore
Predicate: country
Object: Pakistan

Triple: ['__subject__ Lake Placid, New York __predicate__ country __object__ United States']
Text: Lake Placid, New York is located in the United States.
Subject: Lake Placid, New York
Predicate: country
Object: United States

Triple: ['__subject__ Lake Placid, New York __predicate__ isPartOf __object__ Essex County, New York']
Text: Lake Placid, New York is part of Essex County, New York.
Subject: Lake Placid, New York
Predicate: isPartOf
Object: Essex County, New York

Triple: ['__subject__ Lake Placid, New York __predicate__ isPartOf __object__ New York']
Text: Lake Placid, New York is part of New York.
Subject: Lake Placid, New York
Predicate: isPartOf
Object: New York

Triple: ['__subject__ Lake Placid, New York __predicate__ isPartOf __object__ New York']
Text: Lake Placid, New York, is part of New York.
Subject: Lake Placid, New York
Predicate: isPartOf
Object: New York

Triple: ['__subject__ Luanda __predicate__ country __object__ Angola']
Text: Luanda is in the country of Angola.
Subject: Luanda
Predicate: country
Object: Angola

Triple: ['__subject__ Luanda __predicate__ country __object__ Angola']
Text: Luanda is located in Angola.
Subject: Luanda
Predicate: country
Object: Angola

Triple: ['__subject__ Madrid __predicate__ isPartOf __object__ Community of Madrid']
Text: Madrid is part of the community of Madrid.
Subject: Madrid
Predicate: isPartOf
Object: Community of Madrid

Triple: ['__subject__ Madrid __predicate__ leaderParty __object__ Ahora Madrid']
Text: Ahora Madrid is the leading party of Madrid.
Subject: Madrid
Predicate: leaderParty
Object: Ahora Madrid

Triple: ['__subject__ Madrid __predicate__ leaderParty __object__ Ahora Madrid']
Text: The leader party in Madrid is Ahora Madrid.
Subject: Madrid
Predicate: leaderParty
Object: Ahora Madrid

Triple: ['__subject__ Maple Ridge Township, Alpena County, Michigan __predicate__ country __object__ United States']
Text: Maple Ridge Township, Alpena County Michigan is in the United States.
Subject: Maple Ridge Township, Alpena County, Michigan
Predicate: country
Object: United States

Triple: ['__subject__ Maple Ridge Township, Alpena County, Michigan __predicate__ country __object__ United States']
Text: The Maple Ridge Township, Alpena County, Michigan is in the U.S.
Subject: Maple Ridge Township, Alpena County, Michigan
Predicate: country
Object: United States

Triple: ['__subject__ Maple Ridge Township, Alpena County, Michigan __predicate__ country __object__ United States']
Text: Maple Ridge Township, Alpena County, Michigan is located in the United States.
Subject: Maple Ridge Township, Alpena County, Michigan
Predicate: country
Object: United States

Triple: ['__subject__ Pakistan __predicate__ leader __object__ Mamnoon Hussain']
Text: Pakistan's leader is Mamnoon Hussain.
Subject: Pakistan
Predicate: leader
Object: Mamnoon Hussain

Triple: ['__subject__ Pakistan __predicate__ leader __object__ Mamnoon Hussain']
Text: Mamnoon Hussain is the leader of Pakistan.
Subject: Pakistan
Predicate: leader
Object: Mamnoon Hussain

Triple: ['__subject__ Pakistan __predicate__ leader __object__ Mamnoon Hussain']
Text: Mamnoon Hussain is a leader of Pakistan.
Subject: Pakistan
Predicate: leader
Object: Mamnoon Hussain

Triple: ['__subject__ Pakistan __predicate__ leader __object__ Nawaz Sharif']
Text: Pakistan's leader is Nawaz Sharif.
Subject: Pakistan
Predicate: leader
Object: Nawaz Sharif

Triple: ['__subject__ Pakistan __predicate__ leader __object__ Nawaz Sharif']
Text: The leader of Pakistan is Nawaz Sharif.
Subject: Pakistan
Predicate: leader
Object: Nawaz Sharif

Triple: ['__subject__ Pakistan Civil Aviation Authority __predicate__ headquarter __object__ Jinnah International Airport']
Text: The Pakistan Civil Aviation Authority is headquartered at Jinnah International Airport.
Subject: Pakistan Civil Aviation Authority
Predicate: headquarter
Object: Jinnah International Airport

Triple: ['__subject__ Pakistan Civil Aviation Authority __predicate__ headquarter __object__ Jinnah International Airport']
Text: The Pakistan Civil Aviation Authority Headquarters is the Jinnah International Airport.
Subject: Pakistan Civil Aviation Authority
Predicate: headquarter
Object: Jinnah International Airport

Triple: ['__subject__ Pakistan Civil Aviation Authority __predicate__ headquarter __object__ Jinnah International Airport']
Text: The headquarters of the Pakistan Civil Aviation Authority are at Jinnah International Airport.
Subject: Pakistan Civil Aviation Authority
Predicate: headquarter
Object: Jinnah International Airport

Triple: ['__subject__ Pakistan Civil Aviation Authority __predicate__ location __object__ Jinnah International Airport']
Text: Pakistan Civil Aviation Authority's location is Jinnah International Airport.
Subject: Pakistan Civil Aviation Authority
Predicate: location
Object: Jinnah International Airport

Triple: ['__subject__ Pakistan Civil Aviation Authority __predicate__ location __object__ Jinnah International Airport']
Text: The Pakistan Civil Aviation Authority is in the Jinnah International Airport.
Subject: Pakistan Civil Aviation Authority
Predicate: location
Object: Jinnah International Airport

Triple: ['__subject__ Pakistan Civil Aviation Authority __predicate__ location __object__ Jinnah International Airport']
Text: The Pakistan Civil Aviation Authority is located at Jinnah International Airport.
Subject: Pakistan Civil Aviation Authority
Predicate: location
Object: Jinnah International Airport

Triple: ['__subject__ Paracuellos de Jarama __predicate__ country __object__ Spain']
Text: Paracuellos de Jarama is in Spain.
Subject: Paracuellos de Jarama
Predicate: country
Object: Spain

Triple: ['__subject__ Paracuellos de Jarama __predicate__ country __object__ Spain']
Text: Paracuellos de Jarama is located in Spain.
Subject: Paracuellos de Jarama
Predicate: country
Object: Spain

Triple: ['__subject__ Poaceae __predicate__ class __object__ Monocotyledon']
Text: Poaceae class is Monocotyledon.
Subject: Poaceae
Predicate: class
Object: Monocotyledon

Triple: ['__subject__ Poaceae __predicate__ class __object__ Monocotyledon']
Text: Poaceae is in the class Monocotyledon.
Subject: Poaceae
Predicate: class
Object: Monocotyledon

Triple: ['__subject__ Poaceae __predicate__ division __object__ Flowering plant']
Text: Poaceae belongs to the division of flowering plants.
Subject: Poaceae
Predicate: division
Object: Flowering plant

Triple: ['__subject__ Poaceae __predicate__ order __object__ Commelinids']
Text: Poaceae belongs to the order of Commelinids.
Subject: Poaceae
Predicate: order
Object: Commelinids

Triple: ['__subject__ Poaceae __predicate__ order __object__ Commelinids']
Text: Poaceae is the order of Commelinids.
Subject: Poaceae
Predicate: order
Object: Commelinids

Triple: ['__subject__ Poaceae __predicate__ order __object__ Poales']
Text: Poaceae is of the Poales order.
Subject: Poaceae
Predicate: order
Object: Poales

Triple: ['__subject__ Poaceae __predicate__ order __object__ Poales']
Text: Poaceae is of the order Poales.
Subject: Poaceae
Predicate: order
Object: Poales

Triple: ['__subject__ Poaceae __predicate__ order __object__ Poales']
Text: Poaceae is a member of the order of Poales.
Subject: Poaceae
Predicate: order
Object: Poales

Triple: ['__subject__ Port Authority of New York and New Jersey __predicate__ headquarter __object__ New York']
Text: Port Authority of New York and New Jersey's headquarter is New York.
Subject: Port Authority of New York and New Jersey
Predicate: headquarter
Object: New York

Triple: ['__subject__ Port Authority of New York and New Jersey __predicate__ headquarter __object__ New York']
Text: New York is the base of the Port Authority of New York and New Jersey.
Subject: Port Authority of New York and New Jersey
Predicate: headquarter
Object: New York

Triple: ['__subject__ Port Authority of New York and New Jersey __predicate__ headquarter __object__ New York']
Text: The Port Authority of New York and New Jersey has its headquarters in New York.
Subject: Port Authority of New York and New Jersey
Predicate: headquarter
Object: New York

Triple: ['__subject__ Port Authority of New York and New Jersey __predicate__ regionServed __object__ New York']
Text: The Port Authority of New York and New Jersey serves the New York region.
Subject: Port Authority of New York and New Jersey
Predicate: regionServed
Object: New York

Triple: ['__subject__ Port Authority of New York and New Jersey __predicate__ regionServed __object__ New York']
Text: The Port Authority of New York and New Jersey serves New York.
Subject: Port Authority of New York and New Jersey
Predicate: regionServed
Object: New York

Triple: ['__subject__ Punjab, Pakistan __predicate__ country __object__ Pakistan']
Text: Punjab is found in the country Pakistan.
Subject: Punjab, Pakistan
Predicate: country
Object: Pakistan

Triple: ['__subject__ Punjab, Pakistan __predicate__ country __object__ Pakistan']
Text: Punjab is in Pakistan.
Subject: Punjab, Pakistan
Predicate: country
Object: Pakistan

Triple: ['__subject__ Punjab, Pakistan __predicate__ leader __object__ Malik Muhammad Rafique Rajwana']
Text: Malik Muhammad Rafique Rajwana is a leader in the Punjab, Pakistan.
Subject: Punjab, Pakistan
Predicate: leader
Object: Malik Muhammad Rafique Rajwana

Triple: ['__subject__ Punjab, Pakistan __predicate__ leader __object__ Malik Muhammad Rafique Rajwana']
Text: Malik Muhammad Rafique Rajwana is the leader of Punjab, Pakistan.
Subject: Punjab, Pakistan
Predicate: leader
Object: Malik Muhammad Rafique Rajwana

Triple: ['__subject__ Punjab, Pakistan __predicate__ leader __object__ Malik Muhammad Rafique Rajwana']
Text: Punjab, Pakistan's leader is Malik Muhammad Rafique Rajwana.
Subject: Punjab, Pakistan
Predicate: leader
Object: Malik Muhammad Rafique Rajwana

Triple: ['__subject__ Punjab, Pakistan __predicate__ leader __object__ Shehbaz Sharif']
Text: The leader of Punjab, Pakistan is Shehbaz Sharif.
Subject: Punjab, Pakistan
Predicate: leader
Object: Shehbaz Sharif

Triple: ['__subject__ Punjab, Pakistan __predicate__ leaderTitle __object__ Provincial Assembly of the Punjab']
Text: The Punjab, Pakistan, is led by the Provincial Assembly of the Punjab.
Subject: Punjab, Pakistan
Predicate: leaderTitle
Object: Provincial Assembly of the Punjab

Triple: ['__subject__ Punjab, Pakistan __predicate__ leaderTitle __object__ Provincial Assembly of the Punjab']
Text: Punjab, Pakistan is led by the Provincial Assembly of the Punjab.
Subject: Punjab, Pakistan
Predicate: leaderTitle
Object: Provincial Assembly of the Punjab

Triple: ['__subject__ San Sebastián de los Reyes __predicate__ isPartOf __object__ Community of Madrid']
Text: San Sebastian de los Reyes is part of the Community of Madrid.
Subject: San Sebastián de los Reyes
Predicate: isPartOf
Object: Community of Madrid

Triple: ['__subject__ San Sebastián de los Reyes __predicate__ isPartOf __object__ Community of Madrid']
Text: San Sebastián de los Reyes is part of the Community of Madrid.
Subject: San Sebastián de los Reyes
Predicate: isPartOf
Object: Community of Madrid

Triple: ["__subject__ San Sebastián de los Reyes __predicate__ leaderParty __object__ People's Party (Spain)"]
Text: The People's Party is the lead party of San Sebastian de los Reyes, Spain.
Subject: San Sebastián de los Reyes
Predicate: leaderParty
Object: People's Party (Spain)

Triple: ['__subject__ Saranac Lake, New York __predicate__ country __object__ United States']
Text: Saranac Lake, New York is located in the U.S.
Subject: Saranac Lake, New York
Predicate: country
Object: United States

Triple: ['__subject__ Saranac Lake, New York __predicate__ country __object__ United States']
Text: Saranac Lake New York is located in the United States.
Subject: Saranac Lake, New York
Predicate: country
Object: United States

Triple: ['__subject__ Saranac Lake, New York __predicate__ country __object__ United States']
Text: Saranac Lake, New York is located in the United States.
Subject: Saranac Lake, New York
Predicate: country
Object: United States

Triple: ['__subject__ Saranac Lake, New York __predicate__ isPartOf __object__ Essex County, New York']
Text: Saranac Lake, New York is part of Essex County, New York.
Subject: Saranac Lake, New York
Predicate: isPartOf
Object: Essex County, New York

Triple: ['__subject__ Saranac Lake, New York __predicate__ isPartOf __object__ Harrietstown, New York']
Text: Saranac Lake, New York is part of Harrietstown, New York.
Subject: Saranac Lake, New York
Predicate: isPartOf
Object: Harrietstown, New York

Triple: ['__subject__ Saranac Lake, New York __predicate__ isPartOf __object__ Harrietstown, New York']
Text: Saranac Lake, New York, is part of Harrietstown, New York.
Subject: Saranac Lake, New York
Predicate: isPartOf
Object: Harrietstown, New York

Triple: ['__subject__ South Jersey Transportation Authority __predicate__ leader __object__ Stephen Dilts']
Text: South Jersey Transportation Authority's leader name is Stephen Dilts.
Subject: South Jersey Transportation Authority
Predicate: leader
Object: Stephen Dilts

Triple: ['__subject__ South Jersey Transportation Authority __predicate__ leader __object__ Stephen Dilts']
Text: Stephen Dilts is the head of the South Jersey Transportation Authority.
Subject: South Jersey Transportation Authority
Predicate: leader
Object: Stephen Dilts

Triple: ['__subject__ South Jersey Transportation Authority __predicate__ leader __object__ Stephen Dilts']
Text: Stephen Dilts is the leader of the South Jersey Transportation Authority.
Subject: South Jersey Transportation Authority
Predicate: leader
Object: Stephen Dilts

Triple: ['__subject__ São José dos Pinhais __predicate__ isPartOf __object__ Paraná (state)']
Text: São José dos Pinhais is part Of Paraná (state).
Subject: São José dos Pinhais
Predicate: isPartOf
Object: Paraná (state)

Triple: ['__subject__ São José dos Pinhais __predicate__ isPartOf __object__ Paraná (state)']
Text: São José dos Pinhais is part of the state of Paraná.
Subject: São José dos Pinhais
Predicate: isPartOf
Object: Paraná (state)

Triple: ['__subject__ São José dos Pinhais __predicate__ isPartOf __object__ Paraná (state)']
Text: Sao Jose dos Pinhais is part of Parana.
Subject: São José dos Pinhais
Predicate: isPartOf
Object: Paraná (state)

Triple: ['__subject__ São José dos Pinhais __predicate__ isPartOf __object__ South Region, Brazil']
Text: São José dos Pinhais is part of the south region of Brazil.
Subject: São José dos Pinhais
Predicate: isPartOf
Object: South Region, Brazil

Triple: ['__subject__ São José dos Pinhais __predicate__ isPartOf __object__ South Region, Brazil']
Text: Sao Jose dos Pinhais is part of the South Region, Brazil.
Subject: São José dos Pinhais
Predicate: isPartOf
Object: South Region, Brazil

Triple: ['__subject__ Texas __predicate__ capital __object__ Austin, Texas']
Text: Austin is the capital of Texas.
Subject: Texas
Predicate: capital
Object: Austin, Texas

Triple: ['__subject__ Texas __predicate__ capital __object__ Austin, Texas']
Text: The capital of Texas is Austin.
Subject: Texas
Predicate: capital
Object: Austin, Texas

Triple: ['__subject__ Texas __predicate__ country __object__ United States']
Text: Texas is in the United States.
Subject: Texas
Predicate: country
Object: United States

Triple: ['__subject__ Texas __predicate__ country __object__ United States']
Text: Texas is located in the United States.
Subject: Texas
Predicate: country
Object: United States

Triple: ['__subject__ Texas __predicate__ demonym __object__ Tejano']
Text: Texas demonym is Tejano.
Subject: Texas
Predicate: demonym
Object: Tejano

Triple: ['__subject__ Texas __predicate__ demonym __object__ Tejano']
Text: The inhabitants of Texas have the demonym of Tejano.
Subject: Texas
Predicate: demonym
Object: Tejano

Triple: ['__subject__ Texas __predicate__ demonym __object__ Tejano']
Text: A Tejano is a demonym term used in Texas.
Subject: Texas
Predicate: demonym
Object: Tejano

Triple: ['__subject__ Texas __predicate__ demonym __object__ Texan']
Text: The people of Texas are known as Texans.
Subject: Texas
Predicate: demonym
Object: Texan

Triple: ['__subject__ Texas __predicate__ demonym __object__ Texan']
Text: The inhabitants of Texas have the demonym Texan.
Subject: Texas
Predicate: demonym
Object: Texan

Triple: ['__subject__ Texas __predicate__ demonym __object__ Texan']
Text: The people of Texas are called Texans.
Subject: Texas
Predicate: demonym
Object: Texan

Triple: ['__subject__ Texas __predicate__ language __object__ English language']
Text: English is spoken in Texas.
Subject: Texas
Predicate: language
Object: English language

Triple: ['__subject__ Texas __predicate__ language __object__ English language']
Text: English is the language of Texas.
Subject: Texas
Predicate: language
Object: English language

Triple: ['__subject__ Texas __predicate__ language __object__ English language']
Text: The language spoken in Texas is English.
Subject: Texas
Predicate: language
Object: English language

Triple: ['__subject__ Texas __predicate__ language __object__ Spanish language']
Text: Spanish is spoken in Texas.
Subject: Texas
Predicate: language
Object: Spanish language

Triple: ['__subject__ Texas __predicate__ language __object__ Spanish language']
Text: Spanish is a language spoken in Texas.
Subject: Texas
Predicate: language
Object: Spanish language

Triple: ['__subject__ Tirstrup __predicate__ country __object__ Denmark']
Text: Tirstrup is located in the country of Denmark.
Subject: Tirstrup
Predicate: country
Object: Denmark

Triple: ['__subject__ Tirstrup __predicate__ country __object__ Denmark']
Text: Tirstrup is in the country of Denmark.
Subject: Tirstrup
Predicate: country
Object: Denmark

Triple: ['__subject__ Tirstrup __predicate__ country __object__ Denmark']
Text: Tirstrup is in Denmark.
Subject: Tirstrup
Predicate: country
Object: Denmark

Triple: ['__subject__ Tirstrup __predicate__ isPartOf __object__ Central Denmark Region']
Text: Tirstrup is part of the Central Denmark region.
Subject: Tirstrup
Predicate: isPartOf
Object: Central Denmark Region

Triple: ['__subject__ Tirstrup __predicate__ isPartOf __object__ Denmark']
Text: Tirstrup is part of Denmark.
Subject: Tirstrup
Predicate: isPartOf
Object: Denmark

Triple: ['__subject__ Turkmenistan Airlines __predicate__ headquarter __object__ Ashgabat']
Text: The headquarters of Turkmenistan Airlines are located in Ashgabat.
Subject: Turkmenistan Airlines
Predicate: headquarter
Object: Ashgabat

Triple: ['__subject__ Turkmenistan Airlines __predicate__ headquarter __object__ Ashgabat']
Text: The headquarters of Turkmenistan Airlines are in Ashgabat.
Subject: Turkmenistan Airlines
Predicate: headquarter
Object: Ashgabat

Triple: ['__subject__ Turkmenistan Airlines __predicate__ headquarter __object__ Turkmenistan']
Text: The headquarters of Turkmenistan Airlines are located in Turkmenistan.
Subject: Turkmenistan Airlines
Predicate: headquarter
Object: Turkmenistan

Triple: ['__subject__ Turkmenistan Airlines __predicate__ headquarter __object__ Turkmenistan']
Text: The headquarters of Turkmenistan Airlines are in Turkmenistan.
Subject: Turkmenistan Airlines
Predicate: headquarter
Object: Turkmenistan

Triple: ['__subject__ Turkmenistan Airlines __predicate__ hubAirport __object__ Ashgabat International Airport']
Text: The hub airport for Turkmenistan airlines is Ashgabat International airport.
Subject: Turkmenistan Airlines
Predicate: hubAirport
Object: Ashgabat International Airport

Triple: ['__subject__ Turkmenistan Airlines __predicate__ hubAirport __object__ Ashgabat International Airport']
Text: Turkmenistan Airlines utilizes the Ashgabat International Airport as its hub.
Subject: Turkmenistan Airlines
Predicate: hubAirport
Object: Ashgabat International Airport

Triple: ['__subject__ Turkmenistan Airlines __predicate__ hubAirport __object__ Turkmenabat Airport']
Text: The hub airport for Turkmenistan Airlines is Turkmenabat Airport.
Subject: Turkmenistan Airlines
Predicate: hubAirport
Object: Turkmenabat Airport

Triple: ['__subject__ Turkmenistan Airlines __predicate__ hubAirport __object__ Turkmenabat Airport']
Text: Turkmenabat airport is the hub for Turkmenistan airlines.
Subject: Turkmenistan Airlines
Predicate: hubAirport
Object: Turkmenabat Airport

Triple: ['__subject__ Turkmenistan Airlines __predicate__ hubAirport __object__ Turkmenbashi International Airport']
Text: The hub airport for Turkmenistan Airlines is Turkmenbashi International Airport.
Subject: Turkmenistan Airlines
Predicate: hubAirport
Object: Turkmenbashi International Airport

Triple: ['__subject__ Turkmenistan Airlines __predicate__ hubAirport __object__ Turkmenbashi International Airport']
Text: The hub Airport of Turkmenistan Airlines is Turkmenbashi International Airport.
Subject: Turkmenistan Airlines
Predicate: hubAirport
Object: Turkmenbashi International Airport

Triple: ['__subject__ United States Air Force __predicate__ aircraftFighter __object__ General Dynamics F-16 Fighting Falcon']
Text: United States Air FOrce aircraft fighter is General Dynamics F-16 Fighting Falcon.
Subject: United States Air Force
Predicate: aircraftFighter
Object: General Dynamics F-16 Fighting Falcon

Triple: ['__subject__ United States Air Force __predicate__ aircraftFighter __object__ General Dynamics F-16 Fighting Falcon']
Text: The General Dynamics F-16 Fighting Falcon is an aircraft fighter in the United States Air Force.
Subject: United States Air Force
Predicate: aircraftFighter
Object: General Dynamics F-16 Fighting Falcon

Triple: ['__subject__ United States Air Force __predicate__ aircraftFighter __object__ McDonnell Douglas F-15 Eagle']
Text: United States Air Force's aircraft fighter is called McDonnell Douglas F-15 Eagle.
Subject: United States Air Force
Predicate: aircraftFighter
Object: McDonnell Douglas F-15 Eagle

Triple: ['__subject__ United States Air Force __predicate__ aircraftFighter __object__ McDonnell Douglas F-15 Eagle']
Text: The McDonnell Douglas F-15 Eagle is an aircraft fighter in the U.S. Air Force.
Subject: United States Air Force
Predicate: aircraftFighter
Object: McDonnell Douglas F-15 Eagle

Triple: ['__subject__ United States Air Force __predicate__ aircraftFighter __object__ McDonnell Douglas F-15 Eagle']
Text: McDonnell Douglas F-15 Eagle was a Fighter Aircraft of the United States Air Force.
Subject: United States Air Force
Predicate: aircraftFighter
Object: McDonnell Douglas F-15 Eagle

Triple: ['__subject__ United States Air Force __predicate__ attackAircraft __object__ Lockheed AC-130']
Text: The Lockheed AC-130 can be found on USAF aircraft carriers.
Subject: United States Air Force
Predicate: attackAircraft
Object: Lockheed AC-130

Triple: ['__subject__ United States Air Force __predicate__ attackAircraft __object__ Lockheed AC-130']
Text: The Lockheed AC-130 is an attack aircraft of the United States Air Force.
Subject: United States Air Force
Predicate: attackAircraft
Object: Lockheed AC-130

Triple: ['__subject__ United States Air Force __predicate__ battle __object__ Invasion of Grenada']
Text: One of the noted United States Air Force battles was the Invasion of Grenada.
Subject: United States Air Force
Predicate: battle
Object: Invasion of Grenada

Triple: ['__subject__ United States Air Force __predicate__ battle __object__ Invasion of Grenada']
Text: The United States Air Force was involved in battles at the Invasion of Grenada.
Subject: United States Air Force
Predicate: battle
Object: Invasion of Grenada

Triple: ['__subject__ United States Air Force __predicate__ battle __object__ Invasion of Grenada']
Text: The United States Air Force battled in the Invasion of Grenada.
Subject: United States Air Force
Predicate: battle
Object: Invasion of Grenada

Triple: ['__subject__ United States Air Force __predicate__ battle __object__ Korean War']
Text: The United States Air Force fought battles in the Korean war.
Subject: United States Air Force
Predicate: battle
Object: Korean War

Triple: ['__subject__ United States Air Force __predicate__ battle __object__ Korean War']
Text: The United States Air Force has fought in the Korean War.
Subject: United States Air Force
Predicate: battle
Object: Korean War

Triple: ['__subject__ United States Air Force __predicate__ battle __object__ Operation Enduring Freedom']
Text: The Operation Enduring Freedom is one of the battles of the United States Air Force.
Subject: United States Air Force
Predicate: battle
Object: Operation Enduring Freedom

Triple: ['__subject__ United States Air Force __predicate__ battle __object__ Operation Enduring Freedom']
Text: Operation Enduring Freedom was a battle involving the United States Air Force.
Subject: United States Air Force
Predicate: battle
Object: Operation Enduring Freedom

Triple: ['__subject__ United States Air Force __predicate__ battle __object__ United States invasion of Panama']
Text: The USAF was involved in the Invasion of Panama.
Subject: United States Air Force
Predicate: battle
Object: United States invasion of Panama

Triple: ['__subject__ United States Air Force __predicate__ battle __object__ United States invasion of Panama']
Text: The United States invasion of Panama was a battle involving the United States Air Force.
Subject: United States Air Force
Predicate: battle
Object: United States invasion of Panama

Triple: ['__subject__ United States Air Force __predicate__ transportAircraft __object__ Lockheed C-130 Hercules']
Text: Lockheed C-130 Hercules is a transport aircraft in the United States Air Force.
Subject: United States Air Force
Predicate: transportAircraft
Object: Lockheed C-130 Hercules

Triple: ['__subject__ United States Air Force __predicate__ transportAircraft __object__ Lockheed C-130 Hercules']
Text: The transport aircraft for the United States Air Force is the Lockheed C-130 Hercules.
Subject: United States Air Force
Predicate: transportAircraft
Object: Lockheed C-130 Hercules

Triple: ['__subject__ Uttar Pradesh __predicate__ isPartOf __object__ Awadh']
Text: Uttar Pradesh is part of Awadh.
Subject: Uttar Pradesh
Predicate: isPartOf
Object: Awadh

Triple: ['__subject__ Uttar Pradesh __predicate__ isPartOf __object__ Bundelkhand']
Text: Uttar Pradesh is part of Bundelkhand.
Subject: Uttar Pradesh
Predicate: isPartOf
Object: Bundelkhand

Triple: ['__subject__ Uttar Pradesh __predicate__ leader __object__ Ram Naik']
Text: Ram Naik is the leader in Uttar Pradesh.
Subject: Uttar Pradesh
Predicate: leader
Object: Ram Naik

Triple: ['__subject__ Uttar Pradesh __predicate__ leader __object__ Ram Naik']
Text: The leader name of Uttar Pradesh is Ram Naik.
Subject: Uttar Pradesh
Predicate: leader
Object: Ram Naik

Triple: ['__subject__ Wilson Township, Alpena County, Michigan __predicate__ country __object__ United States']
Text: Wilson Township, in Alpena County, Michigan is in the U.S.A.
Subject: Wilson Township, Alpena County, Michigan
Predicate: country
Object: United States

Triple: ['__subject__ Wilson Township, Alpena County, Michigan __predicate__ country __object__ United States']
Text: Wilson Township, Alpena County, Michigan is in the United States.
Subject: Wilson Township, Alpena County, Michigan
Predicate: country
Object: United States

Triple: ['__subject__ Wilson Township, Alpena County, Michigan __predicate__ country __object__ United States']
Text: The Wilson Township, Alpena County, Michigan is in the United States.
Subject: Wilson Township, Alpena County, Michigan
Predicate: country
Object: United States

Triple: ['__subject__ Wilson Township, Alpena County, Michigan __predicate__ isPartOf __object__ United States']
Text: Wilson Township, Alpena County, Michigan is part of the United States.
Subject: Wilson Township, Alpena County, Michigan
Predicate: isPartOf
Object: United States

Triple: ['__subject__ Ícolo e Bengo __predicate__ country __object__ Angola']
Text: Ícolo e Bengo is in Angola.
Subject: Ícolo e Bengo
Predicate: country
Object: Angola

Triple: ['__subject__ Ícolo e Bengo __predicate__ country __object__ Angola']
Text: Ícolo e Bengo is located in Angola.
Subject: Ícolo e Bengo
Predicate: country
Object: Angola

Triple: ['__subject__ Ícolo e Bengo __predicate__ isPartOf __object__ Luanda Province']
Text: Ícolo e Bengo is in the Luanda Province.
Subject: Ícolo e Bengo
Predicate: isPartOf
Object: Luanda Province

Triple: ['__subject__ Ícolo e Bengo __predicate__ isPartOf __object__ Luanda Province']
Text: Ícolo e bengo is part of Luanda Province.
Subject: Ícolo e Bengo
Predicate: isPartOf
Object: Luanda Province

Triple: ['__subject__ Aaron Bertram __predicate__ associatedBand/associatedMusicalArtist __object__ Kids Imagine Nation']
Text: Aaron Bertram is an artist with the band Kids Imagine Nation.
Subject: Aaron Bertram
Predicate: associatedBand/associatedMusicalArtist
Object: Kids Imagine Nation

Triple: ['__subject__ Aaron Bertram __predicate__ associatedBand/associatedMusicalArtist __object__ Kids Imagine Nation']
Text: Aaron Bertram plays for the Kids Imagine Nation band.
Subject: Aaron Bertram
Predicate: associatedBand/associatedMusicalArtist
Object: Kids Imagine Nation

Triple: ['__subject__ Aaron Bertram __predicate__ associatedBand/associatedMusicalArtist __object__ Suburban Legends']
Text: Aaron Bertram plays for the Suburban Legends band.
Subject: Aaron Bertram
Predicate: associatedBand/associatedMusicalArtist
Object: Suburban Legends

Triple: ['__subject__ Aaron Bertram __predicate__ background __object__ non vocal instrumentalist']
Text: Aaron Bertram has a background with a non vocal instrument.
Subject: Aaron Bertram
Predicate: background
Object: non vocal instrumentalist

Triple: ['__subject__ Aaron Bertram __predicate__ background __object__ non vocal instrumentalist']
Text: Aaron Bertram is a non vocal instrumentalist.
Subject: Aaron Bertram
Predicate: background
Object: non vocal instrumentalist

Triple: ['__subject__ Aaron Bertram __predicate__ birthDate __object__ 1981-04-03']
Text: Aaron Bertram's birth date is 1981-04-03.
Subject: Aaron Bertram
Predicate: birthDate
Object: 1981-04-03

Triple: ['__subject__ Aaron Bertram __predicate__ birthDate __object__ 1981-04-03']
Text: Aaron Bertram was born April 3, 1981.
Subject: Aaron Bertram
Predicate: birthDate
Object: 1981-04-03

Triple: ['__subject__ Aaron Bertram __predicate__ birthDate __object__ 1981-04-03']
Text: Aaron Bertram was born on April 3, 1981.
Subject: Aaron Bertram
Predicate: birthDate
Object: 1981-04-03

Triple: ['__subject__ Aaron Bertram __predicate__ genre __object__ Ska punk']
Text: Aaron Bertram's musical genre is Ska punk.
Subject: Aaron Bertram
Predicate: genre
Object: Ska punk

Triple: ['__subject__ Aaron Bertram __predicate__ genre __object__ Ska punk']
Text: Aaron Bertram performs ska punk music.
Subject: Aaron Bertram
Predicate: genre
Object: Ska punk

Triple: ['__subject__ Aaron Deer __predicate__ associatedBand/associatedMusicalArtist __object__ John Wilkes Booze']
Text: Aaron Deer is a musician for the band John Wilkes Booze.
Subject: Aaron Deer
Predicate: associatedBand/associatedMusicalArtist
Object: John Wilkes Booze

Triple: ['__subject__ Aaron Deer __predicate__ associatedBand/associatedMusicalArtist __object__ Wee Giant']
Text: Aaron Deer is an artist for the band Wee Giant.
Subject: Aaron Deer
Predicate: associatedBand/associatedMusicalArtist
Object: Wee Giant

Triple: ['__subject__ Aaron Deer __predicate__ associatedBand/associatedMusicalArtist __object__ Wee Giant']
Text: Aaron Deer was part of the band Wee Giant.
Subject: Aaron Deer
Predicate: associatedBand/associatedMusicalArtist
Object: Wee Giant

Triple: ['__subject__ Aaron Deer __predicate__ background __object__ solo singer']
Text: Aaron Deer is a solo singer.
Subject: Aaron Deer
Predicate: background
Object: solo singer

Triple: ['__subject__ Aaron Deer __predicate__ background __object__ solo singer']
Text: Aaron Deer has a background as a solo singer.
Subject: Aaron Deer
Predicate: background
Object: solo singer

Triple: ['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock']
Text: The musical genre of Aaron Deer is indie rock.
Subject: Aaron Deer
Predicate: genre
Object: Indie rock

Triple: ['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock']
Text: Aaron Deer is a performer of the music genre Indie rock.
Subject: Aaron Deer
Predicate: genre
Object: Indie rock

Triple: ['__subject__ Aaron Deer __predicate__ genre __object__ Indie rock']
Text: Aaron Deer is an Indie rock musician.
Subject: Aaron Deer
Predicate: genre
Object: Indie rock

Triple: ['__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia']
Text: Aaron Deer performs Psychedelia music.
Subject: Aaron Deer
Predicate: genre
Object: Psychedelia

Triple: ['__subject__ Aaron Deer __predicate__ genre __object__ Psychedelia']
Text: Aaron Deer's genre is Psychedelia.
Subject: Aaron Deer
Predicate: genre
Object: Psychedelia

Triple: ['__subject__ Aaron Deer __predicate__ instrument __object__ Bass guitar']
Text: Aaron deer plays the bass guitar.
Subject: Aaron Deer
Predicate: instrument
Object: Bass guitar

Triple: ['__subject__ Aaron Deer __predicate__ instrument __object__ Guitar']
Text: Aaron Deer plays the guitar.
Subject: Aaron Deer
Predicate: instrument
Object: Guitar

Triple: ['__subject__ Aaron Deer __predicate__ instrument __object__ Guitar']
Text: Musician, Aaron Deer plays the guitar.
Subject: Aaron Deer
Predicate: instrument
Object: Guitar

Triple: ['__subject__ Aaron Deer __predicate__ instrument __object__ Keyboard instrument']
Text: Aaron Deer's instrument is the keyboard.
Subject: Aaron Deer
Predicate: instrument
Object: Keyboard instrument

Triple: ['__subject__ Aaron Deer __predicate__ instrument __object__ Keyboard instrument']
Text: Aaron Deer plays the keyboard.
Subject: Aaron Deer
Predicate: instrument
Object: Keyboard instrument

Triple: ['__subject__ Aaron Deer __predicate__ instrument __object__ Keyboard instrument']
Text: Aaron Deer played the Keyboard instrument.
Subject: Aaron Deer
Predicate: instrument
Object: Keyboard instrument

Triple: ['__subject__ Aaron Deer __predicate__ instrument __object__ Piano']
Text: Aaron Deer plays the piano.
Subject: Aaron Deer
Predicate: instrument
Object: Piano

Triple: ['__subject__ Aaron Deer __predicate__ instrument __object__ Piano']
Text: Aaron Deer's instrument is the piano.
Subject: Aaron Deer
Predicate: instrument
Object: Piano

Triple: ['__subject__ Aaron Deer __predicate__ instrument __object__ Singing']
Text: Aaron Deer is a singer.
Subject: Aaron Deer
Predicate: instrument
Object: Singing

Triple: ['__subject__ Aaron Deer __predicate__ origin __object__ Indiana']
Text: Aaron Deer comes from Indiana.
Subject: Aaron Deer
Predicate: origin
Object: Indiana

Triple: ['__subject__ Aaron Deer __predicate__ origin __object__ Indiana']
Text: Aaron Deer is from Indiana.
Subject: Aaron Deer
Predicate: origin
Object: Indiana

Triple: ['__subject__ Aaron Deer __predicate__ origin __object__ Indianapolis']
Text: Aaron Deer is from Indianapolis.
Subject: Aaron Deer
Predicate: origin
Object: Indianapolis

Triple: ['__subject__ Aaron Deer __predicate__ origin __object__ Indianapolis']
Text: Aaron Deer origin's Indianapolis.
Subject: Aaron Deer
Predicate: origin
Object: Indianapolis

Triple: ['__subject__ Aaron Deer __predicate__ origin __object__ United States']
Text: Aaron Deer was born in the United States.
Subject: Aaron Deer
Predicate: origin
Object: United States

Triple: ['__subject__ Aaron Deer __predicate__ origin __object__ United States']
Text: Aaron Deer is American.
Subject: Aaron Deer
Predicate: origin
Object: United States

Triple: ['__subject__ Aaron Deer __predicate__ origin __object__ United States']
Text: Aaron Deer is from the United States.
Subject: Aaron Deer
Predicate: origin
Object: United States

Triple: ['__subject__ Aaron Turner __predicate__ activeYearsStartYear __object__ 1995']
Text: Aaron Turner started performing in 1995.
Subject: Aaron Turner
Predicate: activeYearsStartYear
Object: 1995

Triple: ['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Greymachine']
Text: Aaron Turner is associated with the group Greymachine.
Subject: Aaron Turner
Predicate: associatedBand/associatedMusicalArtist
Object: Greymachine

Triple: ['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Greymachine']
Text: Aaron Turner played for the Greymachine band.
Subject: Aaron Turner
Predicate: associatedBand/associatedMusicalArtist
Object: Greymachine

Triple: ['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ House of Low Culture']
Text: Aaron Turner performed for House of Low Culture.
Subject: Aaron Turner
Predicate: associatedBand/associatedMusicalArtist
Object: House of Low Culture

Triple: ['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Isis (band)']
Text: Aaron Turner is an artist for the band Isis.
Subject: Aaron Turner
Predicate: associatedBand/associatedMusicalArtist
Object: Isis (band)

Triple: ['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Lotus Eaters (band)']
Text: Aaron Turner is a musician in the Lotus Eaters band.
Subject: Aaron Turner
Predicate: associatedBand/associatedMusicalArtist
Object: Lotus Eaters (band)

Triple: ['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Mamiffer']
Text: Aaron Turner performs for Mamiffer.
Subject: Aaron Turner
Predicate: associatedBand/associatedMusicalArtist
Object: Mamiffer

Triple: ['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Old Man Gloom']
Text: Aaron Turner played for Old Man Gloom.
Subject: Aaron Turner
Predicate: associatedBand/associatedMusicalArtist
Object: Old Man Gloom

Triple: ['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Sumac (band)']
Text: Aaron Turner performed with the band Sumac.
Subject: Aaron Turner
Predicate: associatedBand/associatedMusicalArtist
Object: Sumac (band)

Triple: ['__subject__ Aaron Turner __predicate__ associatedBand/associatedMusicalArtist __object__ Twilight (band)']
Text: Aaron Turner played with the band Twilight.
Subject: Aaron Turner
Predicate: associatedBand/associatedMusicalArtist
Object: Twilight (band)

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Ambient music']
Text: Aaron Turner performs ambient music.
Subject: Aaron Turner
Predicate: genre
Object: Ambient music

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Ambient music']
Text: Musician, Aaron Turner plays Ambient music.
Subject: Aaron Turner
Predicate: genre
Object: Ambient music

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Ambient music']
Text: Aaron Turner's genre is Ambient music.
Subject: Aaron Turner
Predicate: genre
Object: Ambient music

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Doom metal']
Text: Aaron Turner is an exponent of Doom metal.
Subject: Aaron Turner
Predicate: genre
Object: Doom metal

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Doom metal']
Text: Aaron Turner performs doom metal music.
Subject: Aaron Turner
Predicate: genre
Object: Doom metal

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Doom metal']
Text: The musical genre of Aaron Turner is Doom metal.
Subject: Aaron Turner
Predicate: genre
Object: Doom metal

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Drone music']
Text: Drone music is a genre of Aaron Turner.
Subject: Aaron Turner
Predicate: genre
Object: Drone music

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Drone music']
Text: Aaron Turner is part of the drone music genre.
Subject: Aaron Turner
Predicate: genre
Object: Drone music

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Drone music']
Text: Aaron Turner plays drone music.
Subject: Aaron Turner
Predicate: genre
Object: Drone music

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Electroacoustic music']
Text: Aaron Turner plays electroacoustic music.
Subject: Aaron Turner
Predicate: genre
Object: Electroacoustic music

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Electroacoustic music']
Text: Aaron Turner performs electroacoustic music.
Subject: Aaron Turner
Predicate: genre
Object: Electroacoustic music

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Post-metal']
Text: Aaron Turner's genre is post-metal.
Subject: Aaron Turner
Predicate: genre
Object: Post-metal

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Post-metal']
Text: Aaron Turner's music is Post-metal.
Subject: Aaron Turner
Predicate: genre
Object: Post-metal

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Post-metal']
Text: Aaron Turner is a performer of the musical genre Post metal.
Subject: Aaron Turner
Predicate: genre
Object: Post-metal

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Sludge metal']
Text: Aaron Turner is closely associated with the genre sludge metal.
Subject: Aaron Turner
Predicate: genre
Object: Sludge metal

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Sludge metal']
Text: Aaron Turner's musical genre is Sludge metal.
Subject: Aaron Turner
Predicate: genre
Object: Sludge metal

Triple: ['__subject__ Aaron Turner __predicate__ genre __object__ Sludge metal']
Text: Aaron Turner is an exponent of Sludge metal.
Subject: Aaron Turner
Predicate: genre
Object: Sludge metal

Triple: ['__subject__ Aaron Turner __predicate__ instrument __object__ Electric guitar']
Text: Aaron Turner plays the electric guitar.
Subject: Aaron Turner
Predicate: instrument
Object: Electric guitar

Triple: ['__subject__ Aaron Turner __predicate__ instrument __object__ Electric guitar']
Text: Aaron Turner plays electric guitar.
Subject: Aaron Turner
Predicate: instrument
Object: Electric guitar

Triple: ['__subject__ Aaron Turner __predicate__ instrument __object__ Singing']
Text: Aaron Turner sings for a living.
Subject: Aaron Turner
Predicate: instrument
Object: Singing

Triple: ['__subject__ Aaron Turner __predicate__ instrument __object__ Singing']
Text: Aaron Turner is a singer.
Subject: Aaron Turner
Predicate: instrument
Object: Singing

Triple: ['__subject__ Aaron Turner __predicate__ origin __object__ Massachusetts']
Text: Aaron Turner is from Massachusetts.
Subject: Aaron Turner
Predicate: origin
Object: Massachusetts

Triple: ['__subject__ Aaron Turner __predicate__ origin __object__ Massachusetts']
Text: Aaron Turner was born in Massachusetts.
Subject: Aaron Turner
Predicate: origin
Object: Massachusetts

Triple: ['__subject__ Aaron Turner __predicate__ origin __object__ Massachusetts']
Text: Aaron Turner is originally from Massachusetts.
Subject: Aaron Turner
Predicate: origin
Object: Massachusetts

Triple: ['__subject__ Aaron Turner __predicate__ origin __object__ United States']
Text: Aaron Turner was born in the United States.
Subject: Aaron Turner
Predicate: origin
Object: United States

Triple: ['__subject__ Aaron Turner __predicate__ origin __object__ United States']
Text: Aaron Turner came from the U.S.
Subject: Aaron Turner
Predicate: origin
Object: United States

Triple: ['__subject__ Aaron Turner __predicate__ origin __object__ United States']
Text: Aaron Turner's origin is the United States.
Subject: Aaron Turner
Predicate: origin
Object: United States

Triple: ['__subject__ Abradab __predicate__ activeYearsStartYear __object__ 1994']
Text: Abradab started performing in 1994.
Subject: Abradab
Predicate: activeYearsStartYear
Object: 1994

Triple: ['__subject__ Abradab __predicate__ associatedBand/associatedMusicalArtist __object__ Kaliber 44']
Text: Abradab is an artist for the band Kaliber 44.
Subject: Abradab
Predicate: associatedBand/associatedMusicalArtist
Object: Kaliber 44

Triple: ['__subject__ Abradab __predicate__ associatedBand/associatedMusicalArtist __object__ Kaliber 44']
Text: Abradab played with the band Kaliber 44.
Subject: Abradab
Predicate: associatedBand/associatedMusicalArtist
Object: Kaliber 44

Triple: ['__subject__ Abradab __predicate__ birthPlace __object__ Katowice']
Text: Abradab was born in Katowice.
Subject: Abradab
Predicate: birthPlace
Object: Katowice

Triple: ['__subject__ Abradab __predicate__ origin __object__ Katowice']
Text: The musician Abradab originates from Katowice.
Subject: Abradab
Predicate: origin
Object: Katowice

Triple: ['__subject__ Abradab __predicate__ origin __object__ Katowice']
Text: Abradab originated in Katowice.
Subject: Abradab
Predicate: origin
Object: Katowice

Triple: ['__subject__ Abradab __predicate__ origin __object__ Katowice']
Text: Abradab was born in Katowice.
Subject: Abradab
Predicate: origin
Object: Katowice

Triple: ['__subject__ Abradab __predicate__ origin __object__ Poland']
Text: Abradab originated from Poland.
Subject: Abradab
Predicate: origin
Object: Poland

Triple: ['__subject__ Abradab __predicate__ origin __object__ Poland']
Text: The origin of Abradab is Poland.
Subject: Abradab
Predicate: origin
Object: Poland

Triple: ['__subject__ Abradab __predicate__ origin __object__ Poland']
Text: Abradab is from Poland.
Subject: Abradab
Predicate: origin
Object: Poland

Triple: ['__subject__ Ace Wilder __predicate__ background __object__ solo singer']
Text: Ace Wilder has a background as a solo singer.
Subject: Ace Wilder
Predicate: background
Object: solo singer

Triple: ['__subject__ Ace Wilder __predicate__ background __object__ solo singer']
Text: Ace Wilder’s musical background is as a solo singer.
Subject: Ace Wilder
Predicate: background
Object: solo singer

Triple: ['__subject__ Ace Wilder __predicate__ background __object__ solo singer']
Text: Ace Wilder is a solo singer.
Subject: Ace Wilder
Predicate: background
Object: solo singer

Triple: ['__subject__ Ace Wilder __predicate__ birthPlace __object__ Stockholm']
Text: Ace Wilder was born in Stockholm.
Subject: Ace Wilder
Predicate: birthPlace
Object: Stockholm

Triple: ['__subject__ Ace Wilder __predicate__ birthPlace __object__ Sweden']
Text: Sweden is the birthplace of Ace Wilder.
Subject: Ace Wilder
Predicate: birthPlace
Object: Sweden

Triple: ['__subject__ Ace Wilder __predicate__ birthPlace __object__ Sweden']
Text: Ace Wilder was born in Sweden.
Subject: Ace Wilder
Predicate: birthPlace
Object: Sweden

Triple: ['__subject__ Ace Wilder __predicate__ birthPlace __object__ Sweden']
Text: Sweden is the birth place of Ace Wilder.
Subject: Ace Wilder
Predicate: birthPlace
Object: Sweden

Triple: ['__subject__ Ace Wilder __predicate__ birthYear __object__ 1982']
Text: Ace Wilder was born in 1982.
Subject: Ace Wilder
Predicate: birthYear
Object: 1982

Triple: ['__subject__ Ace Wilder __predicate__ genre __object__ Electropop']
Text: Ace Wilder performs electropop music.
Subject: Ace Wilder
Predicate: genre
Object: Electropop

Triple: ['__subject__ Ace Wilder __predicate__ genre __object__ Electropop']
Text: Ace Wilder's genre is Electropop.
Subject: Ace Wilder
Predicate: genre
Object: Electropop

Triple: ['__subject__ Ace Wilder __predicate__ genre __object__ Hip hop music']
Text: Ace Wilder is an exponent of Hip hop music.
Subject: Ace Wilder
Predicate: genre
Object: Hip hop music

Triple: ['__subject__ Ace Wilder __predicate__ genre __object__ Hip hop music']
Text: The musical genre of Ace Wilder is hip hop music.
Subject: Ace Wilder
Predicate: genre
Object: Hip hop music

Triple: ['__subject__ Ace Wilder __predicate__ genre __object__ Hip hop music']
Text: Ace Wilder's musical genre is Hip hop.
Subject: Ace Wilder
Predicate: genre
Object: Hip hop music

Triple: ['__subject__ Ace Wilder __predicate__ occupation __object__ Singing']
Text: Ace Wilder's occupation is a singer.
Subject: Ace Wilder
Predicate: occupation
Object: Singing

Triple: ['__subject__ Ace Wilder __predicate__ occupation __object__ Singing']
Text: Ace Wilder is a singer.
Subject: Ace Wilder
Predicate: occupation
Object: Singing

Triple: ['__subject__ Ace Wilder __predicate__ occupation __object__ Singing']
Text: Singing is Ace Wilder's occupation.
Subject: Ace Wilder
Predicate: occupation
Object: Singing

Triple: ['__subject__ Ace Wilder __predicate__ occupation __object__ Songwriter']
Text: Ace Wilder is a songwriter.
Subject: Ace Wilder
Predicate: occupation
Object: Songwriter

Triple: ['__subject__ Ace Wilder __predicate__ recordLabel __object__ Warner Music Group']
Text: The record label of Ace Wilder is Warner Music Group.
Subject: Ace Wilder
Predicate: recordLabel
Object: Warner Music Group

Triple: ['__subject__ Ace Wilder __predicate__ recordLabel __object__ Warner Music Group']
Text: Ace Wilder is signed to the record label Warner Music Group.
Subject: Ace Wilder
Predicate: recordLabel
Object: Warner Music Group

Triple: ['__subject__ Ace Wilder __predicate__ recordLabel __object__ Warner Music Group']
Text: Ace Wilder uses the record label Warner Music group.
Subject: Ace Wilder
Predicate: recordLabel
Object: Warner Music Group

Triple: ['__subject__ Agustín Barboza __predicate__ background __object__ solo singer']
Text: Agustin Barboza started out as a solo singer.
Subject: Agustín Barboza
Predicate: background
Object: solo singer

Triple: ['__subject__ Agustín Barboza __predicate__ background __object__ solo singer']
Text: Agustin Barboza's background is that of solo singer.
Subject: Agustín Barboza
Predicate: background
Object: solo singer

Triple: ['__subject__ Agustín Barboza __predicate__ background __object__ solo singer']
Text: Agustin Barboza has a background in solo singing.
Subject: Agustín Barboza
Predicate: background
Object: solo singer

Triple: ['__subject__ Agustín Barboza __predicate__ birthDate __object__ 1913-05-05']
Text: Agustin Barboza was born on the 5th May 1913.
Subject: Agustín Barboza
Predicate: birthDate
Object: 1913-05-05

Triple: ['__subject__ Agustín Barboza __predicate__ birthDate __object__ 1913-05-05']
Text: Agustín Barboza was born on the 5th May 1913.
Subject: Agustín Barboza
Predicate: birthDate
Object: 1913-05-05

Triple: ['__subject__ Agustín Barboza __predicate__ birthDate __object__ 1913-05-05']
Text: Agustin Barboza was born on March 5, 1913.
Subject: Agustín Barboza
Predicate: birthDate
Object: 1913-05-05

Triple: ['__subject__ Agustín Barboza __predicate__ birthPlace __object__ Asunción']
Text: Agustín Barboza was born in Asunción.
Subject: Agustín Barboza
Predicate: birthPlace
Object: Asunción

Triple: ['__subject__ Agustín Barboza __predicate__ birthPlace __object__ Asunción']
Text: The birth place of Agustin Barboza is Asuncion.
Subject: Agustín Barboza
Predicate: birthPlace
Object: Asunción

Triple: ['__subject__ Agustín Barboza __predicate__ birthPlace __object__ Asunción']
Text: Agustin Barboza was born in Asuncion.
Subject: Agustín Barboza
Predicate: birthPlace
Object: Asunción

Triple: ['__subject__ Agustín Barboza __predicate__ birthPlace __object__ Paraguay']
Text: The birth place of Agustin Barboza is Paraguay.
Subject: Agustín Barboza
Predicate: birthPlace
Object: Paraguay

Triple: ['__subject__ Agustín Barboza __predicate__ birthPlace __object__ Paraguay']
Text: Agustín Barboza was born in Paraguay.
Subject: Agustín Barboza
Predicate: birthPlace
Object: Paraguay

Triple: ['__subject__ Agustín Barboza __predicate__ birthPlace __object__ Paraguay']
Text: Agustin Barboza was born in Paraguay.
Subject: Agustín Barboza
Predicate: birthPlace
Object: Paraguay

Triple: ['__subject__ Agustín Barboza __predicate__ deathPlace __object__ Asunción']
Text: Agustin Barboza died in Asuncion.
Subject: Agustín Barboza
Predicate: deathPlace
Object: Asunción

Triple: ['__subject__ Agustín Barboza __predicate__ deathPlace __object__ Paraguay']
Text: The birth place of Agustin Barboza was Paraguay.
Subject: Agustín Barboza
Predicate: deathPlace
Object: Paraguay

Triple: ['__subject__ Agustín Barboza __predicate__ deathPlace __object__ Paraguay']
Text: Agustín Barboza died in Paraguay.
Subject: Agustín Barboza
Predicate: deathPlace
Object: Paraguay

Triple: ['__subject__ Ahmet Ertegun __predicate__ alternativeName __object__ A. Nugetre']
Text: The alternative name of Ahmet Ertegun is A. Nugetre.
Subject: Ahmet Ertegun
Predicate: alternativeName
Object: A. Nugetre

Triple: ['__subject__ Ahmet Ertegun __predicate__ alternativeName __object__ A. Nugetre']
Text: Ahmet Ertegun has the alternative name A. Nugetre.
Subject: Ahmet Ertegun
Predicate: alternativeName
Object: A. Nugetre

Triple: ['__subject__ Ahmet Ertegun __predicate__ alternativeName __object__ A. Nugetre']
Text: Ahmet Ertegun goes by the alternative name A. Nugetre.
Subject: Ahmet Ertegun
Predicate: alternativeName
Object: A. Nugetre

Triple: ['__subject__ Ahmet Ertegun __predicate__ background __object__ non performing personnel']
Text: Ahmet Ertegun started out as a non performing personnel.
Subject: Ahmet Ertegun
Predicate: background
Object: non performing personnel

Triple: ['__subject__ Ahmet Ertegun __predicate__ background __object__ non performing personnel']
Text: Ahmet Ertegun has a background as a non performing personnel.
Subject: Ahmet Ertegun
Predicate: background
Object: non performing personnel

Triple: ['__subject__ Ahmet Ertegun __predicate__ background __object__ non performing personnel']
Text: Ahmet Ertegun's background is non performing personnel.
Subject: Ahmet Ertegun
Predicate: background
Object: non performing personnel

Triple: ['__subject__ Ahmet Ertegun __predicate__ birthPlace __object__ Istanbul']
Text: Istanbul was the birthplace of Ahmet Ertegun.
Subject: Ahmet Ertegun
Predicate: birthPlace
Object: Istanbul

Triple: ['__subject__ Ahmet Ertegun __predicate__ birthPlace __object__ Istanbul']
Text: Ahmet Ertegun was born in Istanbul.
Subject: Ahmet Ertegun
Predicate: birthPlace
Object: Istanbul

Triple: ['__subject__ Ahmet Ertegun __predicate__ birthYear __object__ 1923']
Text: Ahmet Ertegun was born in 1923.
Subject: Ahmet Ertegun
Predicate: birthYear
Object: 1923

Triple: ['__subject__ Ahmet Ertegun __predicate__ birthYear __object__ 1923']
Text: Ahmet Ertegun was born 1923.
Subject: Ahmet Ertegun
Predicate: birthYear
Object: 1923

Triple: ['__subject__ Ahmet Ertegun __predicate__ deathPlace __object__ New York City']
Text: Ahmet Ertegun died in New York City.
Subject: Ahmet Ertegun
Predicate: deathPlace
Object: New York City

Triple: ['__subject__ Ahmet Ertegun __predicate__ deathPlace __object__ New York City']
Text: The death place of Ahmet Ertegun is New York City.
Subject: Ahmet Ertegun
Predicate: deathPlace
Object: New York City

Triple: ['__subject__ Ahmet Ertegun __predicate__ deathPlace __object__ United States']
Text: Ahmet Ertegun died in the United States.
Subject: Ahmet Ertegun
Predicate: deathPlace
Object: United States

Triple: ['__subject__ Ahmet Ertegun __predicate__ deathPlace __object__ United States']
Text: Ahmet Ertegun died in the U.S.
Subject: Ahmet Ertegun
Predicate: deathPlace
Object: United States

Triple: ['__subject__ Ahmet Ertegun __predicate__ genre __object__ Blues']
Text: The music genre for Ahmet Ertegun is blues.
Subject: Ahmet Ertegun
Predicate: genre
Object: Blues

Triple: ['__subject__ Ahmet Ertegun __predicate__ genre __object__ Blues']
Text: Ahmet Ertegun performs blues music.
Subject: Ahmet Ertegun
Predicate: genre
Object: Blues

Triple: ['__subject__ Ahmet Ertegun __predicate__ genre __object__ Blues']
Text: Ahmet Erteguns genre is The Blues.
Subject: Ahmet Ertegun
Predicate: genre
Object: Blues

Triple: ['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rhythm and blues']
Text: Ahmet Ertegun's genre is rhythm and blues.
Subject: Ahmet Ertegun
Predicate: genre
Object: Rhythm and blues

Triple: ['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rhythm and blues']
Text: The musical genre of Ahmet Ertegun is rhythm and blues.
Subject: Ahmet Ertegun
Predicate: genre
Object: Rhythm and blues

Triple: ['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rhythm and blues']
Text: Ahmet Ertegun music genre are Rhythm and Blues.
Subject: Ahmet Ertegun
Predicate: genre
Object: Rhythm and blues

Triple: ['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rock and roll']
Text: Ahmet Ertegun performs rock and roll music.
Subject: Ahmet Ertegun
Predicate: genre
Object: Rock and roll

Triple: ['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rock and roll']
Text: Ahmet Ertegun's genre is Rock and roll.
Subject: Ahmet Ertegun
Predicate: genre
Object: Rock and roll

Triple: ['__subject__ Ahmet Ertegun __predicate__ genre __object__ Rock and roll']
Text: Ahmet Ertegun plays rock and roll music.
Subject: Ahmet Ertegun
Predicate: genre
Object: Rock and roll

Triple: ['__subject__ Ahmet Ertegun __predicate__ origin __object__ United States']
Text: Ahmet Ertegun is from the United States.
Subject: Ahmet Ertegun
Predicate: origin
Object: United States

Triple: ['__subject__ Ahmet Ertegun __predicate__ origin __object__ Washington, D.C.']
Text: Ahmet Ertegun originates from Washington D.C.
Subject: Ahmet Ertegun
Predicate: origin
Object: Washington, D.C.

Triple: ['__subject__ Ahmet Ertegun __predicate__ origin __object__ Washington, D.C.']
Text: Ahmet Ertegun is originally from Washington, D.C.
Subject: Ahmet Ertegun
Predicate: origin
Object: Washington, D.C.

Triple: ['__subject__ Ahmet Ertegun __predicate__ origin __object__ Washington, D.C.']
Text: Washington D.C. is the origin of Ahmet Ertegun.
Subject: Ahmet Ertegun
Predicate: origin
Object: Washington, D.C.

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ activeYearsStartYear __object__ 1966']
Text: Al Anderson from NRBQ band started his career in 1966.
Subject: Al Anderson (NRBQ band)
Predicate: activeYearsStartYear
Object: 1966

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ activeYearsStartYear __object__ 1966']
Text: 1966 is the year when Al Aderson, from the band NRQB, became active.
Subject: Al Anderson (NRBQ band)
Predicate: activeYearsStartYear
Object: 1966

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ NRBQ']
Text: Al Anderson plays with the band NRBQ.
Subject: Al Anderson (NRBQ band)
Predicate: associatedBand/associatedMusicalArtist
Object: NRBQ

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ The Wildweeds']
Text: Al Anderson from the NRBQ band was a member of The Wildweeds.
Subject: Al Anderson (NRBQ band)
Predicate: associatedBand/associatedMusicalArtist
Object: The Wildweeds

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ associatedBand/associatedMusicalArtist __object__ The Wildweeds']
Text: Al Anderson (of the band NRBQ) played once with The Wildweeds.
Subject: Al Anderson (NRBQ band)
Predicate: associatedBand/associatedMusicalArtist
Object: The Wildweeds

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ birthDate __object__ 1947-03-13']
Text: Al Anderson was born on the 13/03/1947.
Subject: Al Anderson (NRBQ band)
Predicate: birthDate
Object: 1947-03-13

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ birthDate __object__ 1947-03-13']
Text: Al Anderson from NRBQ band was born on 1947-03-13.
Subject: Al Anderson (NRBQ band)
Predicate: birthDate
Object: 1947-03-13

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ Windsor, Connecticut, United States']
Text: Al Anderson, part of the band NRBQ, was born in Windsor, Connecticut, United States.
Subject: Al Anderson (NRBQ band)
Predicate: birthPlace
Object: Windsor, Connecticut, United States

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ Windsor, Connecticut, United States']
Text: Al Anderson (from NRBQ band) was born in Windsor, Connecticut, United States.
Subject: Al Anderson (NRBQ band)
Predicate: birthPlace
Object: Windsor, Connecticut, United States

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ Windsor, Connecticut, United States']
Text: Al Anderson of the NRBQ band was born in Windsor, Connecticut, United States.
Subject: Al Anderson (NRBQ band)
Predicate: birthPlace
Object: Windsor, Connecticut, United States

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ United States']
Text: Al Anderson, member of the band NRBQ, was born in the United States.
Subject: Al Anderson (NRBQ band)
Predicate: birthPlace
Object: United States

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ United States']
Text: Al Anderson, of the band NRBQ, was born in the United States.
Subject: Al Anderson (NRBQ band)
Predicate: birthPlace
Object: United States

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ United States']
Text: Al Anderson, from the band NRBQ, was born in the United States.
Subject: Al Anderson (NRBQ band)
Predicate: birthPlace
Object: United States

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ Windsor, Connecticut']
Text: Al Anderson of the NRBQ band was born in Windsor, Connecticut.
Subject: Al Anderson (NRBQ band)
Predicate: birthPlace
Object: Windsor, Connecticut

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ Windsor, Connecticut']
Text: Al Anderson, part of the NRBQ band, was born in Windsor, Connecticut.
Subject: Al Anderson (NRBQ band)
Predicate: birthPlace
Object: Windsor, Connecticut

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ birthPlace __object__ Windsor, Connecticut']
Text: Al Anderson, from the band NRBQ, was born in Windsor Connecticut.
Subject: Al Anderson (NRBQ band)
Predicate: birthPlace
Object: Windsor, Connecticut

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music']
Text: Al Anderson (NRBQ band) performs country music.
Subject: Al Anderson (NRBQ band)
Predicate: genre
Object: Country music

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music']
Text: The musical genre of Al Anderson of NRBQ is country music.
Subject: Al Anderson (NRBQ band)
Predicate: genre
Object: Country music

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Country music']
Text: Al Anderson of NRBQ plays country music.
Subject: Al Anderson (NRBQ band)
Predicate: genre
Object: Country music

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']
Text: Al Anderson, a member of the band NRBQ, performs rock music.
Subject: Al Anderson (NRBQ band)
Predicate: genre
Object: Rock music

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']
Text: The genre of Al Anderson is rock music.
Subject: Al Anderson (NRBQ band)
Predicate: genre
Object: Rock music

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ genre __object__ Rock music']
Text: Al Anderson is in NRBQ band and their genre is Rock music.
Subject: Al Anderson (NRBQ band)
Predicate: genre
Object: Rock music

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Guitar']
Text: Al Anderson plays the guitar for the band NRBQ.
Subject: Al Anderson (NRBQ band)
Predicate: instrument
Object: Guitar

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Guitar']
Text: Al Anderson plays the guitar in the NRBQ band.
Subject: Al Anderson (NRBQ band)
Predicate: instrument
Object: Guitar

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Guitar']
Text: AI Anderson from the band NRBQ plays the guitar.
Subject: Al Anderson (NRBQ band)
Predicate: instrument
Object: Guitar

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Singing']
Text: Al Anderson is a singer for the band NRBQ.
Subject: Al Anderson (NRBQ band)
Predicate: instrument
Object: Singing

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Singing']
Text: Al Anderson is a singer in the band NRBQ.
Subject: Al Anderson (NRBQ band)
Predicate: instrument
Object: Singing

Triple: ['__subject__ Al Anderson (NRBQ band) __predicate__ instrument __object__ Singing']
Text: Al Anderson from the band, NRBQ, is a singer.
Subject: Al Anderson (NRBQ band)
Predicate: instrument
Object: Singing

Triple: ['__subject__ Alan Frew __predicate__ activeYearsStartYear __object__ 1983']
Text: Alan Frew started performing in 1983.
Subject: Alan Frew
Predicate: activeYearsStartYear
Object: 1983

Triple: ['__subject__ Alan Frew __predicate__ background __object__ solo singer']
Text: Alan Frew's background is that of solo singer.
Subject: Alan Frew
Predicate: background
Object: solo singer

Triple: ['__subject__ Alan Frew __predicate__ background __object__ solo singer']
Text: Alan Frew is a solo singer.
Subject: Alan Frew
Predicate: background
Object: solo singer

Triple: ['__subject__ Alan Frew __predicate__ birthPlace __object__ Coatbridge']
Text: The birth place of Alan Frew is Coatbridge.
Subject: Alan Frew
Predicate: birthPlace
Object: Coatbridge

Triple: ['__subject__ Alan Frew __predicate__ birthPlace __object__ Coatbridge']
Text: Alan Frew was born in Coatbridge.
Subject: Alan Frew
Predicate: birthPlace
Object: Coatbridge

Triple: ['__subject__ Alan Frew __predicate__ birthPlace __object__ Scotland']
Text: Alan Frew was born in Scotland.
Subject: Alan Frew
Predicate: birthPlace
Object: Scotland

Triple: ['__subject__ Alan Frew __predicate__ birthPlace __object__ Scotland']
Text: Scotland is the birth place of Alan Frew.
Subject: Alan Frew
Predicate: birthPlace
Object: Scotland

Triple: ['__subject__ Alan Frew __predicate__ birthPlace __object__ Scotland']
Text: Scotland is the birthplace of Alan Frew.
Subject: Alan Frew
Predicate: birthPlace
Object: Scotland

Triple: ['__subject__ Alan Frew __predicate__ birthPlace __object__ United Kingdom']
Text: Alan Frew was born in the United Kingdom.
Subject: Alan Frew
Predicate: birthPlace
Object: United Kingdom

Triple: ['__subject__ Alan Frew __predicate__ birthPlace __object__ United Kingdom']
Text: Alan Frew was born in the U.K.
Subject: Alan Frew
Predicate: birthPlace
Object: United Kingdom

Triple: ['__subject__ Alan Frew __predicate__ birthYear __object__ 1956']
Text: Alan Frew was born in 1956.
Subject: Alan Frew
Predicate: birthYear
Object: 1956

Triple: ['__subject__ Alan Frew __predicate__ genre __object__ Alternative rock']
Text: Alan Frew performs alternative rock music.
Subject: Alan Frew
Predicate: genre
Object: Alternative rock

Triple: ['__subject__ Alan Frew __predicate__ genre __object__ Alternative rock']
Text: Alan Frew plays alternative rock music.
Subject: Alan Frew
Predicate: genre
Object: Alternative rock

Triple: ['__subject__ Alan Frew __predicate__ genre __object__ Alternative rock']
Text: Alan Frew's musical genre is Alternative rock.
Subject: Alan Frew
Predicate: genre
Object: Alternative rock

Triple: ['__subject__ Alan Frew __predicate__ occupation __object__ Musician']
Text: Alan Frew is a musician.
Subject: Alan Frew
Predicate: occupation
Object: Musician

Triple: ['__subject__ Alan Frew __predicate__ occupation __object__ Public speaking']
Text: Alan Frew is a public speaker.
Subject: Alan Frew
Predicate: occupation
Object: Public speaking

Triple: ['__subject__ Alan Frew __predicate__ occupation __object__ Public speaking']
Text: Alan Frew makes his living with public speaking.
Subject: Alan Frew
Predicate: occupation
Object: Public speaking

Triple: ['__subject__ Alan Frew __predicate__ origin __object__ Canada']
Text: Alan Frew comes from Canada.
Subject: Alan Frew
Predicate: origin
Object: Canada

Triple: ['__subject__ Alan Frew __predicate__ origin __object__ Canada']
Text: Alan Frew's origins are from Canada.
Subject: Alan Frew
Predicate: origin
Object: Canada

Triple: ['__subject__ Alan Frew __predicate__ origin __object__ Newmarket, Ontario']
Text: Alan Frew is from Newmarket, Ontario.
Subject: Alan Frew
Predicate: origin
Object: Newmarket, Ontario

Triple: ['__subject__ Alan Frew __predicate__ origin __object__ Newmarket, Ontario']
Text: Alan Frew comes from Newmarket, Ontario.
Subject: Alan Frew
Predicate: origin
Object: Newmarket, Ontario

Triple: ['__subject__ Alan Frew __predicate__ origin __object__ Newmarket, Ontario']
Text: Newmarket Ontario, is where Alan Frew is originally from.
Subject: Alan Frew
Predicate: origin
Object: Newmarket, Ontario

Triple: ['__subject__ Albennie Jones __predicate__ activeYearsEndYear __object__ 1950']
Text: Albennie Jones stopped performing in 1950.
Subject: Albennie Jones
Predicate: activeYearsEndYear
Object: 1950

Triple: ['__subject__ Albennie Jones __predicate__ activeYearsEndYear __object__ 1950']
Text: Albennie Jones ended his career in 1950.
Subject: Albennie Jones
Predicate: activeYearsEndYear
Object: 1950

Triple: ['__subject__ Albennie Jones __predicate__ activeYearsStartYear __object__ 1930']
Text: Albennie Jones began his musical career in 1930.
Subject: Albennie Jones
Predicate: activeYearsStartYear
Object: 1930

Triple: ['__subject__ Albennie Jones __predicate__ activeYearsStartYear __object__ 1930']
Text: Albennie Jones started being active in 1930.
Subject: Albennie Jones
Predicate: activeYearsStartYear
Object: 1930

Triple: ['__subject__ Albennie Jones __predicate__ background __object__ solo singer']
Text: Albennie Jones is a solo singer.
Subject: Albennie Jones
Predicate: background
Object: solo singer

Triple: ['__subject__ Albennie Jones __predicate__ background __object__ solo singer']
Text: Albennie Jones has a background as a solo singer.
Subject: Albennie Jones
Predicate: background
Object: solo singer

Triple: ['__subject__ Albennie Jones __predicate__ birthPlace __object__ United States']
Text: Albennie Jones was born in the United States.
Subject: Albennie Jones
Predicate: birthPlace
Object: United States

Triple: ['__subject__ Albennie Jones __predicate__ birthPlace __object__ United States']
Text: Albennie Jones was born in the U.S.A.
Subject: Albennie Jones
Predicate: birthPlace
Object: United States

Triple: ['__subject__ Albennie Jones __predicate__ birthYear __object__ 1914']
Text: Albennie Jones was born in 1914.
Subject: Albennie Jones
Predicate: birthYear
Object: 1914

Triple: ['__subject__ Albennie Jones __predicate__ birthYear __object__ 1914']
Text: Albennie Jones was born 1914.
Subject: Albennie Jones
Predicate: birthYear
Object: 1914

Triple: ['__subject__ Albennie Jones __predicate__ birthYear __object__ 1914']
Text: Albennie Jones year of birth was 1914.
Subject: Albennie Jones
Predicate: birthYear
Object: 1914

Triple: ['__subject__ Albennie Jones __predicate__ genre __object__ Blues']
Text: Albennie Jones played blues music.
Subject: Albennie Jones
Predicate: genre
Object: Blues

Triple: ['__subject__ Albennie Jones __predicate__ genre __object__ Blues']
Text: Albennie Jones plays the Blues.
Subject: Albennie Jones
Predicate: genre
Object: Blues

Triple: ['__subject__ Albennie Jones __predicate__ genre __object__ Blues']
Text: Albennie Jones plays blues music.
Subject: Albennie Jones
Predicate: genre
Object: Blues

Triple: ['__subject__ Albennie Jones __predicate__ genre __object__ Jazz']
Text: Albennie Jones is a jazz artist.
Subject: Albennie Jones
Predicate: genre
Object: Jazz

Triple: ['__subject__ Albennie Jones __predicate__ genre __object__ Jazz']
Text: Albennie Jones is a Jazz musician.
Subject: Albennie Jones
Predicate: genre
Object: Jazz

Triple: ['__subject__ Albennie Jones __predicate__ genre __object__ Jazz']
Text: Albennie Jones performs jazz music.
Subject: Albennie Jones
Predicate: genre
Object: Jazz

Triple: ['__subject__ Albennie Jones __predicate__ genre __object__ Rhythm and blues']
Text: Albennie Jones is a performer of rhythm and blues.
Subject: Albennie Jones
Predicate: genre
Object: Rhythm and blues

Triple: ['__subject__ Albennie Jones __predicate__ genre __object__ Rhythm and blues']
Text: The musical genre of Albennie Jones is rhythm and blues.
Subject: Albennie Jones
Predicate: genre
Object: Rhythm and blues

Triple: ['__subject__ Albennie Jones __predicate__ genre __object__ Rhythm and blues']
Text: Albennie Jones performs in the rhythm and blues genre.
Subject: Albennie Jones
Predicate: genre
Object: Rhythm and blues

Triple: ['__subject__ Aleksandra Kovač __predicate__ activeYearsStartYear __object__ 1990']
Text: Aleksandra Kovač began her musical career in 1990.
Subject: Aleksandra Kovač
Predicate: activeYearsStartYear
Object: 1990

Triple: ['__subject__ Aleksandra Kovač __predicate__ activeYearsStartYear __object__ 1990']
Text: Aleksandra Kovac became active in 1990.
Subject: Aleksandra Kovač
Predicate: activeYearsStartYear
Object: 1990

Triple: ['__subject__ Aleksandra Kovač __predicate__ associatedBand/associatedMusicalArtist __object__ Bebi Dol']
Text: Aleksandra Kovač is associated with the musical artist Bebi Dol.
Subject: Aleksandra Kovač
Predicate: associatedBand/associatedMusicalArtist
Object: Bebi Dol

Triple: ['__subject__ Aleksandra Kovač __predicate__ associatedBand/associatedMusicalArtist __object__ K2 (Kovač sisters duo)']
Text: Aleksandra Kovač is an artist for the band K2.
Subject: Aleksandra Kovač
Predicate: associatedBand/associatedMusicalArtist
Object: K2 (Kovač sisters duo)

Triple: ['__subject__ Aleksandra Kovač __predicate__ associatedBand/associatedMusicalArtist __object__ K2 (Kovač sisters duo)']
Text: Aleksandra Kovač is part of the K2 (Kovač sisters duo).
Subject: Aleksandra Kovač
Predicate: associatedBand/associatedMusicalArtist
Object: K2 (Kovač sisters duo)

Triple: ['__subject__ Aleksandra Kovač __predicate__ associatedBand/associatedMusicalArtist __object__ K2 (Kovač sisters duo)']
Text: Aleksandra Kovač is part of the band K2 (Kovac sisters duo).
Subject: Aleksandra Kovač
Predicate: associatedBand/associatedMusicalArtist
Object: K2 (Kovač sisters duo)

Triple: ['__subject__ Aleksandra Kovač __predicate__ associatedBand/associatedMusicalArtist __object__ Kristina Kovač']
Text: Aleksandra Kovac is musically involved with Kristina Kovac.
Subject: Aleksandra Kovač
Predicate: associatedBand/associatedMusicalArtist
Object: Kristina Kovač

Triple: ['__subject__ Aleksandra Kovač __predicate__ associatedBand/associatedMusicalArtist __object__ Kristina Kovač']
Text: Musical Artist, Aleksandra Kovač is associated with fellow musical artist Kristina Kovač.
Subject: Aleksandra Kovač
Predicate: associatedBand/associatedMusicalArtist
Object: Kristina Kovač

Triple: ['__subject__ Aleksandra Kovač __predicate__ associatedBand/associatedMusicalArtist __object__ Kristina Kovač']
Text: Aleksandra Kovač is associated with the musician Kristina Kovač.
Subject: Aleksandra Kovač
Predicate: associatedBand/associatedMusicalArtist
Object: Kristina Kovač

Triple: ['__subject__ Aleksandra Kovač __predicate__ birthPlace __object__ Belgrade']
Text: Aleksandra Kovac was born in Belgrade.
Subject: Aleksandra Kovač
Predicate: birthPlace
Object: Belgrade

Triple: ['__subject__ Aleksandra Kovač __predicate__ birthPlace __object__ Belgrade']
Text: The birthplace of Aleksandra Kovac is Belgrade.
Subject: Aleksandra Kovač
Predicate: birthPlace
Object: Belgrade

Triple: ['__subject__ Aleksandra Kovač __predicate__ birthPlace __object__ Belgrade']
Text: Aleksandra Kovač was born in Belgrade.
Subject: Aleksandra Kovač
Predicate: birthPlace
Object: Belgrade

Triple: ['__subject__ Aleksandra Kovač __predicate__ birthPlace __object__ Serbia']
Text: Aleksandra Kovac was born in Serbia.
Subject: Aleksandra Kovač
Predicate: birthPlace
Object: Serbia

Triple: ['__subject__ Aleksandra Kovač __predicate__ birthPlace __object__ Serbia']
Text: Aleksandra Kovač was born in Serbia.
Subject: Aleksandra Kovač
Predicate: birthPlace
Object: Serbia

Triple: ['__subject__ Aleksandra Kovač __predicate__ birthPlace __object__ Socialist Republic of Serbia']
Text: Aleksandra Kovač's place of birth was the Socialist Republic of Serbia.
Subject: Aleksandra Kovač
Predicate: birthPlace
Object: Socialist Republic of Serbia

Triple: ['__subject__ Aleksandra Kovač __predicate__ birthPlace __object__ Socialist Republic of Serbia']
Text: Aleksandra Kovac’s birth place is the Socialist Republic of Serbia.
Subject: Aleksandra Kovač
Predicate: birthPlace
Object: Socialist Republic of Serbia

Triple: ['__subject__ Aleksandra Kovač __predicate__ birthPlace __object__ Socialist Republic of Serbia']
Text: Aleksandra Kovač was born in the Socialist Republic of Serbia.
Subject: Aleksandra Kovač
Predicate: birthPlace
Object: Socialist Republic of Serbia

Triple: ['__subject__ Aleksandra Kovač __predicate__ birthYear __object__ 1972']
Text: Aleksandra Kovac was born in 1972.
Subject: Aleksandra Kovač
Predicate: birthYear
Object: 1972

Triple: ['__subject__ Aleksandra Kovač __predicate__ birthYear __object__ 1972']
Text: Aleksandra Kovač was born in 1972.
Subject: Aleksandra Kovač
Predicate: birthYear
Object: 1972

Triple: ['__subject__ Aleksandra Kovač __predicate__ genre __object__ Funk']
Text: Aleksandra Kovač performs funk music.
Subject: Aleksandra Kovač
Predicate: genre
Object: Funk

Triple: ['__subject__ Aleksandra Kovač __predicate__ genre __object__ Funk']
Text: Aleksandra Kovac is an exponent of Funk.
Subject: Aleksandra Kovač
Predicate: genre
Object: Funk

Triple: ['__subject__ Aleksandra Kovač __predicate__ genre __object__ Funk']
Text: Aleksandra Kovač genre of music is Funk.
Subject: Aleksandra Kovač
Predicate: genre
Object: Funk

Triple: ['__subject__ Aleksandra Kovač __predicate__ genre __object__ Pop music']
Text: The musical genre of Aleksandra Kovac is pop music.
Subject: Aleksandra Kovač
Predicate: genre
Object: Pop music

Triple: ['__subject__ Aleksandra Kovač __predicate__ genre __object__ Pop music']
Text: Aleksandra Kovač is a performer of pop music.
Subject: Aleksandra Kovač
Predicate: genre
Object: Pop music

Triple: ['__subject__ Aleksandra Kovač __predicate__ genre __object__ Pop music']
Text: Aleksandra Kovač's musical genre is Pop.
Subject: Aleksandra Kovač
Predicate: genre
Object: Pop music

Triple: ['__subject__ Alex Day __predicate__ activeYearsStartYear __object__ 2006']
Text: Alex Day became active in music in 2006.
Subject: Alex Day
Predicate: activeYearsStartYear
Object: 2006

Triple: ['__subject__ Alex Day __predicate__ activeYearsStartYear __object__ 2006']
Text: Alex Day started performing in 2006.
Subject: Alex Day
Predicate: activeYearsStartYear
Object: 2006

Triple: ['__subject__ Alex Day __predicate__ activeYearsStartYear __object__ 2006']
Text: Alex Day's active years in music began in 2006.
Subject: Alex Day
Predicate: activeYearsStartYear
Object: 2006

Triple: ['__subject__ Alex Day __predicate__ associatedBand/associatedMusicalArtist __object__ Chameleon Circuit (band)']
Text: Alex Day plays with the band Chameleon Circuit.
Subject: Alex Day
Predicate: associatedBand/associatedMusicalArtist
Object: Chameleon Circuit (band)

Triple: ['__subject__ Alex Day __predicate__ associatedBand/associatedMusicalArtist __object__ Charlie McDonnell']
Text: Alex Day is associated with the musical artist Charlie McDonnell.
Subject: Alex Day
Predicate: associatedBand/associatedMusicalArtist
Object: Charlie McDonnell

Triple: ['__subject__ Alex Day __predicate__ associatedBand/associatedMusicalArtist __object__ Charlie McDonnell']
Text: Alex Day is associated with the musical artist, Charlie McDonnell.
Subject: Alex Day
Predicate: associatedBand/associatedMusicalArtist
Object: Charlie McDonnell

Triple: ['__subject__ Alex Day __predicate__ background __object__ solo singer']
Text: Alex Day is a solo singer.
Subject: Alex Day
Predicate: background
Object: solo singer

Triple: ['__subject__ Alex Day __predicate__ background __object__ solo singer']
Text: Alex Day's background is that of solo singer.
Subject: Alex Day
Predicate: background
Object: solo singer

Triple: ['__subject__ Alex Day __predicate__ birthPlace __object__ Hornchurch']
Text: Alex Day was born in Hornchurch.
Subject: Alex Day
Predicate: birthPlace
Object: Hornchurch

Triple: ['__subject__ Alex Day __predicate__ birthPlace __object__ London Borough of Havering']
Text: Alex Day was born in the London Borough of Havering.
Subject: Alex Day
Predicate: birthPlace
Object: London Borough of Havering

Triple: ['__subject__ Alex Day __predicate__ birthPlace __object__ London Borough of Havering']
Text: Alex Day's place of birth was the London Borough of Havering.
Subject: Alex Day
Predicate: birthPlace
Object: London Borough of Havering

Triple: ['__subject__ Alex Day __predicate__ birthPlace __object__ United Kingdom']
Text: Alex Day was born in the United Kingdom.
Subject: Alex Day
Predicate: birthPlace
Object: United Kingdom

Triple: ['__subject__ Alex Day __predicate__ birthPlace __object__ United Kingdom']
Text: Alex Day was born in the U.K.
Subject: Alex Day
Predicate: birthPlace
Object: United Kingdom

Triple: ['__subject__ Alex Day __predicate__ genre __object__ Acoustic music']
Text: Acoustic music is Alex Day’s genre.
Subject: Alex Day
Predicate: genre
Object: Acoustic music

Triple: ['__subject__ Alex Day __predicate__ genre __object__ Acoustic music']
Text: Acoustic music is the genre of Alex Day.
Subject: Alex Day
Predicate: genre
Object: Acoustic music

Triple: ['__subject__ Alex Day __predicate__ genre __object__ Acoustic music']
Text: Alex Day's genre is Acoustic music.
Subject: Alex Day
Predicate: genre
Object: Acoustic music

Triple: ['__subject__ Alex Day __predicate__ genre __object__ Electronic music']
Text: Alex Day performs electronic music.
Subject: Alex Day
Predicate: genre
Object: Electronic music

Triple: ['__subject__ Alex Day __predicate__ genre __object__ Electronic music']
Text: Alex Day plays electronic music.
Subject: Alex Day
Predicate: genre
Object: Electronic music

Triple: ['__subject__ Alex Day __predicate__ genre __object__ Electronic music']
Text: Alex Day's musical genre is Electronic music.
Subject: Alex Day
Predicate: genre
Object: Electronic music

Triple: ['__subject__ Alex Day __predicate__ genre __object__ Folk music']
Text: Alex Day performs folk music.
Subject: Alex Day
Predicate: genre
Object: Folk music

Triple: ['__subject__ Alex Day __predicate__ genre __object__ Folk music']
Text: Alex Day's music genre is Folk music.
Subject: Alex Day
Predicate: genre
Object: Folk music

Triple: ['__subject__ Alex Day __predicate__ genre __object__ Folk music']
Text: Folk music is the genre of Alex Day.
Subject: Alex Day
Predicate: genre
Object: Folk music

Triple: ['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ England']
Text: Alfred Garth Jones was born in England.
Subject: Alfred Garth Jones
Predicate: birthPlace
Object: England

Triple: ['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ England']
Text: The birth place of Alfred Garth Jones is England.
Subject: Alfred Garth Jones
Predicate: birthPlace
Object: England

Triple: ['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester']
Text: Alfred Garth Jones was born in Manchester.
Subject: Alfred Garth Jones
Predicate: birthPlace
Object: Manchester

Triple: ['__subject__ Alfred Garth Jones __predicate__ birthPlace __object__ Manchester']
Text: The birthplace of Alfred Garth Jones is Manchester.
Subject: Alfred Garth Jones
Predicate: birthPlace
Object: Manchester

Triple: ['__subject__ Alfred Garth Jones __predicate__ birthYear __object__ 1872']
Text: Alfred Garth Jones was born in 1872.
Subject: Alfred Garth Jones
Predicate: birthYear
Object: 1872

Triple: ['__subject__ Alfred Garth Jones __predicate__ deathDate __object__ c. 1944']
Text: Alfred Garth Jones died in around 1944.
Subject: Alfred Garth Jones
Predicate: deathDate
Object: c. 1944

Triple: ['__subject__ Alfred Garth Jones __predicate__ deathDate __object__ c. 1944']
Text: Alfred Garth Jones sadly died circa 1944.
Subject: Alfred Garth Jones
Predicate: deathDate
Object: c. 1944

Triple: ['__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ Sidcup']
Text: Alfred Garth Jones died in Sidcup.
Subject: Alfred Garth Jones
Predicate: deathPlace
Object: Sidcup

Triple: ['__subject__ Alfred Garth Jones __predicate__ deathPlace __object__ Sidcup']
Text: The place of death for Alfred Garth Jones was Sidcup.
Subject: Alfred Garth Jones
Predicate: deathPlace
Object: Sidcup

Triple: ['__subject__ Alfred Garth Jones __predicate__ nationality __object__ United Kingdom']
Text: Alfred Garth Jones was born in the United Kingdom.
Subject: Alfred Garth Jones
Predicate: nationality
Object: United Kingdom

Triple: ['__subject__ Alfred Garth Jones __predicate__ nationality __object__ United Kingdom']
Text: Alfred Garth Jones comes from the U.K.
Subject: Alfred Garth Jones
Predicate: nationality
Object: United Kingdom

Triple: ['__subject__ Alfred Garth Jones __predicate__ nationality __object__ United Kingdom']
Text: Alfred Garth Jones is from the UK.
Subject: Alfred Garth Jones
Predicate: nationality
Object: United Kingdom

Triple: ['__subject__ Alfred Garth Jones __predicate__ professionalField __object__ Illustration']
Text: Alfred Garth Jones makes a living as an Illustrator.
Subject: Alfred Garth Jones
Predicate: professionalField
Object: Illustration

Triple: ['__subject__ Alfred Garth Jones __predicate__ professionalField __object__ Illustration']
Text: Alfred Garth Jones was a professional Illustrator.
Subject: Alfred Garth Jones
Predicate: professionalField
Object: Illustration

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ associatedBand/associatedMusicalArtist __object__ Ciro Pérez']
Text: Alfredo Zitarrosa is associated with the musical artist Ciro Pérez.
Subject: Alfredo Zitarrosa
Predicate: associatedBand/associatedMusicalArtist
Object: Ciro Pérez

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ associatedBand/associatedMusicalArtist __object__ Ciro Pérez']
Text: Alfredo Zitarrosa is associated with musician Ciro Pérez.
Subject: Alfredo Zitarrosa
Predicate: associatedBand/associatedMusicalArtist
Object: Ciro Pérez

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ associatedBand/associatedMusicalArtist __object__ Yamandú Palacios']
Text: Alfredo Zitarrosa is associated with Yamandú Palacios.
Subject: Alfredo Zitarrosa
Predicate: associatedBand/associatedMusicalArtist
Object: Yamandú Palacios

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ background __object__ solo singer']
Text: Alfredo Zitarrosa has a background as a solo singer.
Subject: Alfredo Zitarrosa
Predicate: background
Object: solo singer

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ background __object__ solo singer']
Text: Alfredo Zitarrosa started out as a solo singer.
Subject: Alfredo Zitarrosa
Predicate: background
Object: solo singer

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ background __object__ solo singer']
Text: Alfredo Zitarrosa background includes solo singing.
Subject: Alfredo Zitarrosa
Predicate: background
Object: solo singer

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ birthPlace __object__ Uruguay']
Text: Alfredo Zitarrosa was born in Uruguay.
Subject: Alfredo Zitarrosa
Predicate: birthPlace
Object: Uruguay

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ birthPlace __object__ Uruguay']
Text: Alfredo Zitarrosa's birth place was Uruguay.
Subject: Alfredo Zitarrosa
Predicate: birthPlace
Object: Uruguay

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ deathPlace __object__ Montevideo']
Text: Alfredo Zitarrosa died in Montevideo.
Subject: Alfredo Zitarrosa
Predicate: deathPlace
Object: Montevideo

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ deathPlace __object__ Montevideo']
Text: Alfredo Zitarrosa death place was in Montevideo.
Subject: Alfredo Zitarrosa
Predicate: deathPlace
Object: Montevideo

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ genre __object__ Candombe']
Text: Alfredo Zitarrosa's musical genre is Candombe.
Subject: Alfredo Zitarrosa
Predicate: genre
Object: Candombe

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ genre __object__ Candombe']
Text: The musical genre of Alfredo Zitarrosa is Candombe.
Subject: Alfredo Zitarrosa
Predicate: genre
Object: Candombe

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ genre __object__ Taquirari']
Text: The musical genre of Alfredo Zitarrosa is Taquirari.
Subject: Alfredo Zitarrosa
Predicate: genre
Object: Taquirari

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ genre __object__ Taquirari']
Text: Alfredo Zitarrosa is an exponent of Taquirari.
Subject: Alfredo Zitarrosa
Predicate: genre
Object: Taquirari

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ genre __object__ Taquirari']
Text: Alfredo Zitarrosa music genre is Taquirari.
Subject: Alfredo Zitarrosa
Predicate: genre
Object: Taquirari

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ genre __object__ Zamba (artform)']
Text: Alfredo Zitarrosa performs Zamba music.
Subject: Alfredo Zitarrosa
Predicate: genre
Object: Zamba (artform)

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ genre __object__ Zamba (artform)']
Text: Alfredo Zitarrosa's genre is Zamba which is considered an art form.
Subject: Alfredo Zitarrosa
Predicate: genre
Object: Zamba (artform)

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ recordLabel __object__ Odeon Records']
Text: Alfredo Zitarrosa is signed with the record label Odeon Records.
Subject: Alfredo Zitarrosa
Predicate: recordLabel
Object: Odeon Records

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ recordLabel __object__ Odeon Records']
Text: Alfredo Zitarrosa was signed to Odeon Records.
Subject: Alfredo Zitarrosa
Predicate: recordLabel
Object: Odeon Records

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ recordLabel __object__ Odeon Records']
Text: Alfredo Zitarrosa's recording label is Odeon Records.
Subject: Alfredo Zitarrosa
Predicate: recordLabel
Object: Odeon Records

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ recordLabel __object__ Orfeo (Uruguayan record label)']
Text: Alfredo Zitarrosa belongs to the Orfeo record label.
Subject: Alfredo Zitarrosa
Predicate: recordLabel
Object: Orfeo (Uruguayan record label)

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ recordLabel __object__ Orfeo (Uruguayan record label)']
Text: Alfredo Zitarrosa is signed to the Uruguayan record label Orfeo.
Subject: Alfredo Zitarrosa
Predicate: recordLabel
Object: Orfeo (Uruguayan record label)

Triple: ['__subject__ Alfredo Zitarrosa __predicate__ recordLabel __object__ Orfeo (Uruguayan record label)']
Text: The record label of Alfredo Zitarrosa is Orfeo (Uruguayan).
Subject: Alfredo Zitarrosa
Predicate: recordLabel
Object: Orfeo (Uruguayan record label)

Triple: ["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Bajik"]
Text: Alison O'Donnell is associated with Bajik.
Subject: Alison O'Donnell
Predicate: associatedBand/associatedMusicalArtist
Object: Bajik

Triple: ["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Bajik"]
Text: Alison O'Donnell was with the band Bajik.
Subject: Alison O'Donnell
Predicate: associatedBand/associatedMusicalArtist
Object: Bajik

Triple: ["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Flibbertigibbet"]
Text: Alison O'Donnell was a member of the Flibbertigibbet band.
Subject: Alison O'Donnell
Predicate: associatedBand/associatedMusicalArtist
Object: Flibbertigibbet

Triple: ["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Head South By Weaving"]
Text: Alison O'Donnell is musically associated with the band Head South By Weaving.
Subject: Alison O'Donnell
Predicate: associatedBand/associatedMusicalArtist
Object: Head South By Weaving

Triple: ["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Head South By Weaving"]
Text: Alison O'Donnell is associated with the band Head South By Weaving.
Subject: Alison O'Donnell
Predicate: associatedBand/associatedMusicalArtist
Object: Head South By Weaving

Triple: ["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Mellow Candle"]
Text: Alison O'Donnell is an artist for the band Mellow Candle.
Subject: Alison O'Donnell
Predicate: associatedBand/associatedMusicalArtist
Object: Mellow Candle

Triple: ["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Mellow Candle"]
Text: Alison O’Donnell was in the band Mellow Candle.
Subject: Alison O'Donnell
Predicate: associatedBand/associatedMusicalArtist
Object: Mellow Candle

Triple: ["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Plastik Mak"]
Text: Alison O'Donnell is associated with Plastik Mak.
Subject: Alison O'Donnell
Predicate: associatedBand/associatedMusicalArtist
Object: Plastik Mak

Triple: ["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ Plastik Mak"]
Text: Alison O'Donnell is a musician associated with the Plastik Mak.
Subject: Alison O'Donnell
Predicate: associatedBand/associatedMusicalArtist
Object: Plastik Mak

Triple: ["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ The Owl Service (band)"]
Text: Alison O'Donnell has collaborated with the band The Owl Service.
Subject: Alison O'Donnell
Predicate: associatedBand/associatedMusicalArtist
Object: The Owl Service (band)

Triple: ["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ The Owl Service (band)"]
Text: Alison O'Donnell is associated with the band The Owl Service.
Subject: Alison O'Donnell
Predicate: associatedBand/associatedMusicalArtist
Object: The Owl Service (band)

Triple: ["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ The Owl Service (band)"]
Text: Alison O'Donnell is associated with the band, The Owl Service.
Subject: Alison O'Donnell
Predicate: associatedBand/associatedMusicalArtist
Object: The Owl Service (band)

Triple: ["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ United Bible Studies"]
Text: Alison O'Donnell is a musician for the band United Bible Studies.
Subject: Alison O'Donnell
Predicate: associatedBand/associatedMusicalArtist
Object: United Bible Studies

Triple: ["__subject__ Alison O'Donnell __predicate__ associatedBand/associatedMusicalArtist __object__ United Bible Studies"]
Text: Alison O'Donnell performed for the band United Bible Studies.
Subject: Alison O'Donnell
Predicate: associatedBand/associatedMusicalArtist
Object: United Bible Studies

Triple: ["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk music"]
Text: Alison O'Donnell performs folk music.
Subject: Alison O'Donnell
Predicate: genre
Object: Folk music

Triple: ["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk music"]
Text: Folk music is the genre of Alison O'Donnell.
Subject: Alison O'Donnell
Predicate: genre
Object: Folk music

Triple: ["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk music of Ireland"]
Text: Folk music of Ireland is the genre performed by Alison O'Donnell.
Subject: Alison O'Donnell
Predicate: genre
Object: Folk music of Ireland

Triple: ["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk music of Ireland"]
Text: Alison O'Donnell's genre is folk music of Ireland.
Subject: Alison O'Donnell
Predicate: genre
Object: Folk music of Ireland

Triple: ["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk music of Ireland"]
Text: Alison O'Donnell played folk music of Ireland.
Subject: Alison O'Donnell
Predicate: genre
Object: Folk music of Ireland

Triple: ["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk rock"]
Text: Alison O'Donnell's genre is folk rock.
Subject: Alison O'Donnell
Predicate: genre
Object: Folk rock

Triple: ["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk rock"]
Text: Alison O'Donnell performs folk rock music.
Subject: Alison O'Donnell
Predicate: genre
Object: Folk rock

Triple: ["__subject__ Alison O'Donnell __predicate__ genre __object__ Folk rock"]
Text: Alison O'Donnell's musical genre is folk rock.
Subject: Alison O'Donnell
Predicate: genre
Object: Folk rock

Triple: ["__subject__ Alison O'Donnell __predicate__ genre __object__ Psychedelic folk"]
Text: Alison O'Donnell genre is Psychedelic folk.
Subject: Alison O'Donnell
Predicate: genre
Object: Psychedelic folk

Triple: ["__subject__ Alison O'Donnell __predicate__ genre __object__ Psychedelic folk"]
Text: Alison O'Donnell is a Psychedelic folk musician.
Subject: Alison O'Donnell
Predicate: genre
Object: Psychedelic folk

Triple: ["__subject__ Alison O'Donnell __predicate__ genre __object__ Psychedelic folk"]
Text: Alison O'Donnell's music genre is Psychedelic folk.
Subject: Alison O'Donnell
Predicate: genre
Object: Psychedelic folk

Triple: ["__subject__ Alison O'Donnell __predicate__ instrument __object__ Autoharp"]
Text: Alison O'Donnell can play the autoharp.
Subject: Alison O'Donnell
Predicate: instrument
Object: Autoharp

Triple: ["__subject__ Alison O'Donnell __predicate__ instrument __object__ Autoharp"]
Text: Alison O'Donnell plays the autoharp.
Subject: Alison O'Donnell
Predicate: instrument
Object: Autoharp

Triple: ["__subject__ Alison O'Donnell __predicate__ instrument __object__ Bodhrán"]
Text: Alison O'Donnell plays the bodhrán.
Subject: Alison O'Donnell
Predicate: instrument
Object: Bodhrán

Triple: ["__subject__ Alison O'Donnell __predicate__ instrument __object__ Bodhrán"]
Text: Alison O'Donnell plays the instrument called the bodhran.
Subject: Alison O'Donnell
Predicate: instrument
Object: Bodhrán

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Deram Records"]
Text: Alison O'Donnell is signed with the record label Deram Records.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Deram Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Deram Records"]
Text: Alison O'Donnell was once signed to Deram Records.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Deram Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Deram Records"]
Text: Alison O'Donnell's record label is Deram Records.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Deram Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Floating World Records"]
Text: The label Floating World Records signed Alison O'Donnell.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Floating World Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Floating World Records"]
Text: Alison O'Donnell's recording label is Floating World Records.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Floating World Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Floating World Records"]
Text: Alison O'Donnell is signed to the record label of Floating World Records.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Floating World Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Fruits de Mer Records"]
Text: Alison O'Donnell's record label is Fruits de Mer Records.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Fruits de Mer Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Fruits de Mer Records"]
Text: Alison O'Donnell was once signed to the record label Fruits de Mer Records.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Fruits de Mer Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Kissing Spell Records"]
Text: Alison O'Donnell is signed to Kissing Spell Records.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Kissing Spell Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Kissing Spell Records"]
Text: Alison O'Donnell is signed to the record label Kissing Spell Records.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Kissing Spell Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Kissing Spell Records"]
Text: Alison O'Donnell record label is Kissing Spell Records.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Kissing Spell Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Osmosys Records"]
Text: Alison O'Donnell is signed with Osmosys Records.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Osmosys Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Osmosys Records"]
Text: Osmosys Records is the recording label of Alison O'Donnell.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Osmosys Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Osmosys Records"]
Text: Alison O'Donnell is signed to the Osmosys Records label.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Osmosys Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Stanyan Records"]
Text: Alison O'Donnell is signed with the record label Stanyan Records.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Stanyan Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Stanyan Records"]
Text: Alison O'Donnell has been signed to the Stanyan Records label.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Stanyan Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Stanyan Records"]
Text: Alison O'Donnell's recording label is Stanyan Records.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Stanyan Records

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Static Caravan Recordings"]
Text: Alison O'Donnell's record label is Static Caravan Recordings.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Static Caravan Recordings

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Static Caravan Recordings"]
Text: Alison O'Donnell recorded on the record label, Static Caravan Recordings.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Static Caravan Recordings

Triple: ["__subject__ Alison O'Donnell __predicate__ recordLabel __object__ Static Caravan Recordings"]
Text: Alison O'Donnell is signed to the record label Static Caravan Recordings.
Subject: Alison O'Donnell
Predicate: recordLabel
Object: Static Caravan Recordings

Triple: ['__subject__ Allen Forrest __predicate__ activeYearsStartYear __object__ 2005']
Text: Allen Forrest started his career in 2005.
Subject: Allen Forrest
Predicate: activeYearsStartYear
Object: 2005

Triple: ['__subject__ Allen Forrest __predicate__ activeYearsStartYear __object__ 2005']
Text: Allen Forrest became active in 2005.
Subject: Allen Forrest
Predicate: activeYearsStartYear
Object: 2005

Triple: ['__subject__ Allen Forrest __predicate__ alternativeName __object__ Matchstik, Match, Allan, Forrester, Alan, Foster, Forest Matchstick, Matchstix, Allen Forrest']
Text: Allen Forrest has various alternative names such as Matchstik, Match, Allan, Forrester, Alan, Foster, Forest Matchstick, Matchstix, Allen Forrest.
Subject: Allen Forrest
Predicate: alternativeName
Object: Matchstik, Match, Allan, Forrester, Alan, Foster, Forest Matchstick, Matchstix, Allen Forrest

Triple: ['__subject__ Allen Forrest __predicate__ alternativeName __object__ Matchstik, Match, Allan, Forrester, Alan, Foster, Forest Matchstick, Matchstix, Allen Forrest']
Text: Allen Forrest has several alternative names such as Matchstik, Match, Allan, Forrester, Alan, Foster, Forest Matchstick, Matchstix, Allen Forrest.
Subject: Allen Forrest
Predicate: alternativeName
Object: Matchstik, Match, Allan, Forrester, Alan, Foster, Forest Matchstick, Matchstix, Allen Forrest

Triple: ['__subject__ Allen Forrest __predicate__ alternativeName __object__ Matchstik, Match, Allan, Forrester, Alan, Foster, Forest Matchstick, Matchstix, Allen Forrest']
Text: Allen Forrest is also known by Matchstik, Match, Allan, Forrester, Alan, Foster, Forest Matchstick, Matchstix and Allen Forrest.
Subject: Allen Forrest
Predicate: alternativeName
Object: Matchstik, Match, Allan, Forrester, Alan, Foster, Forest Matchstick, Matchstix, Allen Forrest

Triple: ['__subject__ Allen Forrest __predicate__ associatedBand/associatedMusicalArtist __object__ The Black Eyed Peas']
Text: Allen Forrest is associated with the band The Black Eyed Peas.
Subject: Allen Forrest
Predicate: associatedBand/associatedMusicalArtist
Object: The Black Eyed Peas

Triple: ['__subject__ Allen Forrest __predicate__ background __object__ solo singer']
Text: Allen Forrest is a solo singer.
Subject: Allen Forrest
Predicate: background
Object: solo singer

Triple: ['__subject__ Allen Forrest __predicate__ background __object__ solo singer']
Text: Allen Forrest was originally a solo singer.
Subject: Allen Forrest
Predicate: background
Object: solo singer

Triple: ['__subject__ Allen Forrest __predicate__ background __object__ solo singer']
Text: Allen Forrest has a background as a solo singer.
Subject: Allen Forrest
Predicate: background
Object: solo singer

Triple: ['__subject__ Allen Forrest __predicate__ birthPlace __object__ Fort Campbell, KY, raised in Dothan, AL']
Text: Allen Forrest was born in Fort Campbell, KY and was raised in Dothan, AL.
Subject: Allen Forrest
Predicate: birthPlace
Object: Fort Campbell, KY, raised in Dothan, AL

Triple: ['__subject__ Allen Forrest __predicate__ birthPlace __object__ Fort Campbell, KY, raised in Dothan, AL']
Text: Allen Forrest was born in Fort Campbell, KY and raised in Dothan, AL.
Subject: Allen Forrest
Predicate: birthPlace
Object: Fort Campbell, KY, raised in Dothan, AL

Triple: ['__subject__ Allen Forrest __predicate__ birthPlace __object__ Fort Campbell, KY, raised in Dothan, AL']
Text: Allen Forrest was born in Fort Campbell, Kentucky but was raised in Dothan, Alabama.
Subject: Allen Forrest
Predicate: birthPlace
Object: Fort Campbell, KY, raised in Dothan, AL

Triple: ['__subject__ Allen Forrest __predicate__ birthPlace __object__ Dothan, Alabama']
Text: Allen Forrest was born in Dothan, Alabama.
Subject: Allen Forrest
Predicate: birthPlace
Object: Dothan, Alabama

Triple: ['__subject__ Allen Forrest __predicate__ birthPlace __object__ Dothan, Alabama']
Text: Dothan, Alabama is the birth place of Allen Forrest.
Subject: Allen Forrest
Predicate: birthPlace
Object: Dothan, Alabama

Triple: ['__subject__ Allen Forrest __predicate__ birthPlace __object__ Fort Campbell']
Text: Allen Forrest was born in Fort Campbell.
Subject: Allen Forrest
Predicate: birthPlace
Object: Fort Campbell

Triple: ['__subject__ Allen Forrest __predicate__ birthPlace __object__ Fort Campbell']
Text: Fort Campbell is the birth place of Allen Forrest.
Subject: Allen Forrest
Predicate: birthPlace
Object: Fort Campbell

Triple: ['__subject__ Allen Forrest __predicate__ birthYear __object__ 1981']
Text: Allen Forrest was born in 1981.
Subject: Allen Forrest
Predicate: birthYear
Object: 1981

Triple: ['__subject__ Allen Forrest __predicate__ birthYear __object__ 1981']
Text: Allen Forrest was born in the year 1981.
Subject: Allen Forrest
Predicate: birthYear
Object: 1981

Triple: ['__subject__ Allen Forrest __predicate__ birthYear __object__ 1981']
Text: Allen Forrest was born 1981.
Subject: Allen Forrest
Predicate: birthYear
Object: 1981

Triple: ['__subject__ Allen Forrest __predicate__ genre __object__ Acoustic music']
Text: A music genre for Allen Forrest is acoustic.
Subject: Allen Forrest
Predicate: genre
Object: Acoustic music

Triple: ['__subject__ Allen Forrest __predicate__ genre __object__ Acoustic music']
Text: Allen Forrest performs acoustic music.
Subject: Allen Forrest
Predicate: genre
Object: Acoustic music

Triple: ['__subject__ Allen Forrest __predicate__ genre __object__ Acoustic music']
Text: Allen Forrest plays acoustic music.
Subject: Allen Forrest
Predicate: genre
Object: Acoustic music

Triple: ['__subject__ Allen Forrest __predicate__ genre __object__ Hip hop music']
Text: Allen Forrest performs hip hop music.
Subject: Allen Forrest
Predicate: genre
Object: Hip hop music

Triple: ['__subject__ Allen Forrest __predicate__ genre __object__ Hip hop music']
Text: Allen Forrest's genre is Hip Hop music.
Subject: Allen Forrest
Predicate: genre
Object: Hip hop music

Triple: ['__subject__ Allen Forrest __predicate__ genre __object__ Hip hop music']
Text: The musical genre of Allen Forrest is hip hop music.
Subject: Allen Forrest
Predicate: genre
Object: Hip hop music

Triple: ['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues']
Text: Allen Forrest performs rhythm and blues music.
Subject: Allen Forrest
Predicate: genre
Object: Rhythm and blues

Triple: ['__subject__ Allen Forrest __predicate__ genre __object__ Rhythm and blues']
Text: Allen Forrest's genre of music is Rhythm and Blues.
Subject: Allen Forrest
Predicate: genre
Object: Rhythm and blues

Triple: ['__subject__ Alligator Records __predicate__ genre __object__ Blues']
Text: Alligator Records main genre of music is the blues.
Subject: Alligator Records
Predicate: genre
Object: Blues

Triple: ['__subject__ Alligator Records __predicate__ genre __object__ Blues']
Text: Alligator Records are associated with the Blues.
Subject: Alligator Records
Predicate: genre
Object: Blues

Triple: ['__subject__ Alternative rock __predicate__ musicFusionGenre __object__ Nu metal']
Text: Nu metal is a music fusion genre of alternative rock.
Subject: Alternative rock
Predicate: musicFusionGenre
Object: Nu metal

Triple: ['__subject__ Alternative rock __predicate__ musicSubgenre __object__ Christian alternative rock']
Text: Alternative rock has the sub genre Christian alternative rock.
Subject: Alternative rock
Predicate: musicSubgenre
Object: Christian alternative rock

Triple: ['__subject__ Alternative rock __predicate__ musicSubgenre __object__ Christian alternative rock']
Text: Christian alternative rock is a music sub genre of alternative rock.
Subject: Alternative rock
Predicate: musicSubgenre
Object: Christian alternative rock

Triple: ['__subject__ Alternative rock __predicate__ musicSubgenre __object__ Christian alternative rock']
Text: Christian alternative rock is a subgenre of alternative rock.
Subject: Alternative rock
Predicate: musicSubgenre
Object: Christian alternative rock

Triple: ['__subject__ Alternative rock __predicate__ stylisticOrigin __object__ New wave music']
Text: Alternative rock originated from new wave music.
Subject: Alternative rock
Predicate: stylisticOrigin
Object: New wave music

Triple: ['__subject__ Alternative rock __predicate__ stylisticOrigin __object__ New wave music']
Text: Alternative rock has origins in New wave music.
Subject: Alternative rock
Predicate: stylisticOrigin
Object: New wave music

Triple: ['__subject__ Alternative rock __predicate__ stylisticOrigin __object__ Punk rock']
Text: Alternative rock has its stylistic origins in Punk rock.
Subject: Alternative rock
Predicate: stylisticOrigin
Object: Punk rock

Triple: ['__subject__ Alternative rock __predicate__ stylisticOrigin __object__ Punk rock']
Text: Alternative rock's stylistic origin is punk rock.
Subject: Alternative rock
Predicate: stylisticOrigin
Object: Punk rock

Triple: ['__subject__ Anders Osborne __predicate__ activeYearsStartYear __object__ 1989']
Text: Anders Osborne started performing in 1989.
Subject: Anders Osborne
Predicate: activeYearsStartYear
Object: 1989

Triple: ['__subject__ Anders Osborne __predicate__ activeYearsStartYear __object__ 1989']
Text: Anders Osborne's musical career began in 1989.
Subject: Anders Osborne
Predicate: activeYearsStartYear
Object: 1989

Triple: ['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Billy Iuso']
Text: Anders Osborne is associated with the musical artist Billy Iuso.
Subject: Anders Osborne
Predicate: associatedBand/associatedMusicalArtist
Object: Billy Iuso

Triple: ['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Galactic']
Text: Anders Osborne has worked with the band Galactic.
Subject: Anders Osborne
Predicate: associatedBand/associatedMusicalArtist
Object: Galactic

Triple: ['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Galactic']
Text: Anders Osborne is associated with the band, Galactic.
Subject: Anders Osborne
Predicate: associatedBand/associatedMusicalArtist
Object: Galactic

Triple: ['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Kirk Joseph']
Text: Anders Osborne has collaborated with Kirk Joseph.
Subject: Anders Osborne
Predicate: associatedBand/associatedMusicalArtist
Object: Kirk Joseph

Triple: ['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Kirk Joseph']
Text: Anders Osborne is associated with the musical artist Kirk Joseph.
Subject: Anders Osborne
Predicate: associatedBand/associatedMusicalArtist
Object: Kirk Joseph

Triple: ['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Phil Lesh and Friends']
Text: Anders Osborne is associated with Phil Lesh and Friends.
Subject: Anders Osborne
Predicate: associatedBand/associatedMusicalArtist
Object: Phil Lesh and Friends

Triple: ['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Tab Benoit']
Text: Anders Osborne has worked with Tab Benoit.
Subject: Anders Osborne
Predicate: associatedBand/associatedMusicalArtist
Object: Tab Benoit

Triple: ['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Tab Benoit']
Text: Anders Osborne is associated with Tab Benoit.
Subject: Anders Osborne
Predicate: associatedBand/associatedMusicalArtist
Object: Tab Benoit

Triple: ['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Theresa Andersson']
Text: Anders Osborne is associated with the musical artist Theresa Andersson.
Subject: Anders Osborne
Predicate: associatedBand/associatedMusicalArtist
Object: Theresa Andersson

Triple: ['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Voice of the Wetlands All-Stars']
Text: Anders Osborne is associated with Voice of the Wetlands All-Stars.
Subject: Anders Osborne
Predicate: associatedBand/associatedMusicalArtist
Object: Voice of the Wetlands All-Stars

Triple: ['__subject__ Anders Osborne __predicate__ associatedBand/associatedMusicalArtist __object__ Voice of the Wetlands All-Stars']
Text: Anders Osborne is associated with the band Voice of the Wetlands All-Stars.
Subject: Anders Osborne
Predicate: associatedBand/associatedMusicalArtist
Object: Voice of the Wetlands All-Stars

Triple: ['__subject__ Anders Osborne __predicate__ genre __object__ Blues']
Text: Anders Osborne's genre is Blues.
Subject: Anders Osborne
Predicate: genre
Object: Blues

Triple: ['__subject__ Anders Osborne __predicate__ genre __object__ Blues']
Text: Anders Osborne performs Blues music.
Subject: Anders Osborne
Predicate: genre
Object: Blues

Triple: ['__subject__ Anders Osborne __predicate__ genre __object__ Blues']
Text: Anders Osborne is a blues artist.
Subject: Anders Osborne
Predicate: genre
Object: Blues

Triple: ['__subject__ Anders Osborne __predicate__ genre __object__ Rock music']
Text: Anders Osborne's genre is rock music.
Subject: Anders Osborne
Predicate: genre
Object: Rock music

Triple: ['__subject__ Anders Osborne __predicate__ genre __object__ Rock music']
Text: Anders Osborne’s musical genre is rock music.
Subject: Anders Osborne
Predicate: genre
Object: Rock music

Triple: ['__subject__ Anders Osborne __predicate__ genre __object__ Rock music']
Text: Anders Osborne is an exponent of Rock music.
Subject: Anders Osborne
Predicate: genre
Object: Rock music

Triple: ['__subject__ Anders Osborne __predicate__ occupation __object__ Guitarist']
Text: Anders Osborne is a guitarist.
Subject: Anders Osborne
Predicate: occupation
Object: Guitarist

Triple: ['__subject__ Anders Osborne __predicate__ occupation __object__ Singing']
Text: Anders Osborne is a singer.
Subject: Anders Osborne
Predicate: occupation
Object: Singing

Triple: ['__subject__ Anders Osborne __predicate__ occupation __object__ Singing']
Text: Anders Osborne earns a living as a singer.
Subject: Anders Osborne
Predicate: occupation
Object: Singing

Triple: ['__subject__ Anders Osborne __predicate__ recordLabel __object__ Okeh Records']
Text: The record label of Anders Osborne is Okeh records.
Subject: Anders Osborne
Predicate: recordLabel
Object: Okeh Records

Triple: ['__subject__ Anders Osborne __predicate__ recordLabel __object__ Okeh Records']
Text: Anders Osborne's record label is Okeh Records.
Subject: Anders Osborne
Predicate: recordLabel
Object: Okeh Records

Triple: ['__subject__ Anders Osborne __predicate__ recordLabel __object__ Okeh Records']
Text: Anders Osborne is signed to the record label Okeh Records.
Subject: Anders Osborne
Predicate: recordLabel
Object: Okeh Records

Triple: ['__subject__ Anders Osborne __predicate__ recordLabel __object__ Rabadash Records']
Text: Anders Osborne is signed to the record label Rabadash Records.
Subject: Anders Osborne
Predicate: recordLabel
Object: Rabadash Records

Triple: ['__subject__ Anders Osborne __predicate__ recordLabel __object__ Rabadash Records']
Text: Anders Osborne is signed to the Rabadash Records label.
Subject: Anders Osborne
Predicate: recordLabel
Object: Rabadash Records

Triple: ['__subject__ Anders Osborne __predicate__ recordLabel __object__ Rabadash Records']
Text: Anders Osborne's record label is Rabadash Records.
Subject: Anders Osborne
Predicate: recordLabel
Object: Rabadash Records

Triple: ['__subject__ Andra (singer) __predicate__ activeYearsStartYear __object__ 2000']
Text: The singer called Andra became active in the year 2000.
Subject: Andra (singer)
Predicate: activeYearsStartYear
Object: 2000

Triple: ['__subject__ Andra (singer) __predicate__ activeYearsStartYear __object__ 2000']
Text: Andra began her singing career in 2000.
Subject: Andra (singer)
Predicate: activeYearsStartYear
Object: 2000

Triple: ['__subject__ Andra (singer) __predicate__ associatedBand/associatedMusicalArtist __object__ Andreea Bălan']
Text: Andra is a singer associated with Andreea Balan.
Subject: Andra (singer)
Predicate: associatedBand/associatedMusicalArtist
Object: Andreea Bălan

Triple: ['__subject__ Andra (singer) __predicate__ associatedBand/associatedMusicalArtist __object__ Andreea Bălan']
Text: The singer Andra is associated with Andreea Bălan.
Subject: Andra (singer)
Predicate: associatedBand/associatedMusicalArtist
Object: Andreea Bălan

Triple: ['__subject__ Andra (singer) __predicate__ associatedBand/associatedMusicalArtist __object__ CRBL']
Text: The singer Andra is associated with the band CRBL.
Subject: Andra (singer)
Predicate: associatedBand/associatedMusicalArtist
Object: CRBL

Triple: ['__subject__ Andra (singer) __predicate__ associatedBand/associatedMusicalArtist __object__ Marius Moga']
Text: Andra (singer) is associated with Marius Moga.
Subject: Andra (singer)
Predicate: associatedBand/associatedMusicalArtist
Object: Marius Moga

Triple: ['__subject__ Andra (singer) __predicate__ associatedBand/associatedMusicalArtist __object__ Marius Moga']
Text: Andra is a singer associated with musician Marius Moga.
Subject: Andra (singer)
Predicate: associatedBand/associatedMusicalArtist
Object: Marius Moga

Triple: ['__subject__ Andra (singer) __predicate__ associatedBand/associatedMusicalArtist __object__ Marius Moga']
Text: The singer Andra is associated with the musical artist Marius Moga.
Subject: Andra (singer)
Predicate: associatedBand/associatedMusicalArtist
Object: Marius Moga

Triple: ['__subject__ Andra (singer) __predicate__ associatedBand/associatedMusicalArtist __object__ Puya (singer)']
Text: Andra is a singer associated with the singer Puya.
Subject: Andra (singer)
Predicate: associatedBand/associatedMusicalArtist
Object: Puya (singer)

Triple: ['__subject__ Andra (singer) __predicate__ associatedBand/associatedMusicalArtist __object__ Puya (singer)']
Text: The singer Andra and the singer Puya are associated with each other.
Subject: Andra (singer)
Predicate: associatedBand/associatedMusicalArtist
Object: Puya (singer)

Triple: ['__subject__ Andra (singer) __predicate__ background __object__ solo singer']
Text: Andra began her career as a solo singer.
Subject: Andra (singer)
Predicate: background
Object: solo singer

Triple: ['__subject__ Andra (singer) __predicate__ background __object__ solo singer']
Text: Andra is a solo singer.
Subject: Andra (singer)
Predicate: background
Object: solo singer

Triple: ['__subject__ Andra (singer) __predicate__ background __object__ solo singer']
Text: The singer Andra is a solo singer.
Subject: Andra (singer)
Predicate: background
Object: solo singer

Triple: ['__subject__ Andra (singer) __predicate__ birthPlace __object__ Câmpia Turzii']
Text: The singer Andra's birth place is Câmpia Turzii.
Subject: Andra (singer)
Predicate: birthPlace
Object: Câmpia Turzii

Triple: ['__subject__ Andra (singer) __predicate__ birthPlace __object__ Câmpia Turzii']
Text: The singer Andra was born in Campia Turzii.
Subject: Andra (singer)
Predicate: birthPlace
Object: Câmpia Turzii

Triple: ['__subject__ Andra (singer) __predicate__ birthPlace __object__ Câmpia Turzii']
Text: Andra was born in Câmpia Turzii.
Subject: Andra (singer)
Predicate: birthPlace
Object: Câmpia Turzii

Triple: ['__subject__ Andra (singer) __predicate__ birthPlace __object__ Romania']
Text: The singer Andra was born in Romania.
Subject: Andra (singer)
Predicate: birthPlace
Object: Romania

Triple: ['__subject__ Andra (singer) __predicate__ birthYear __object__ 1986']
Text: Andra (singer) was born in 1986.
Subject: Andra (singer)
Predicate: birthYear
Object: 1986

Triple: ['__subject__ Andra (singer) __predicate__ birthYear __object__ 1986']
Text: The singer Andra was born in 1986.
Subject: Andra (singer)
Predicate: birthYear
Object: 1986

Triple: ['__subject__ Andra (singer) __predicate__ birthYear __object__ 1986']
Text: The singer called Andra was born in 1986.
Subject: Andra (singer)
Predicate: birthYear
Object: 1986

Triple: ['__subject__ Andra (singer) __predicate__ genre __object__ Dance-pop']
Text: The musical genre of the singer Andra is dance pop.
Subject: Andra (singer)
Predicate: genre
Object: Dance-pop

Triple: ['__subject__ Andra (singer) __predicate__ genre __object__ Dance-pop']
Text: Andra is a singer and her music genre is Dance-pop.
Subject: Andra (singer)
Predicate: genre
Object: Dance-pop

Triple: ['__subject__ Andra (singer) __predicate__ genre __object__ Dance-pop']
Text: Andra is a singer of Dance-pop music.
Subject: Andra (singer)
Predicate: genre
Object: Dance-pop

Triple: ['__subject__ Andra (singer) __predicate__ genre __object__ Pop music']
Text: Andra sings pop music.
Subject: Andra (singer)
Predicate: genre
Object: Pop music

Triple: ['__subject__ Andra (singer) __predicate__ genre __object__ Pop music']
Text: The genre of Andra (singer) is pop music.
Subject: Andra (singer)
Predicate: genre
Object: Pop music

Triple: ['__subject__ Andra (singer) __predicate__ genre __object__ Pop music']
Text: Andra is a singer with Pop music as her genre.
Subject: Andra (singer)
Predicate: genre
Object: Pop music

Triple: ['__subject__ Andra (singer) __predicate__ occupation __object__ singer, Reality television judge']
Text: Andra makes a living as a singer and a reality television judge.
Subject: Andra (singer)
Predicate: occupation
Object: singer, Reality television judge

Triple: ['__subject__ Andra (singer) __predicate__ occupation __object__ singer, Reality television judge']
Text: Andra's occupations have included singer and reality TV judge.
Subject: Andra (singer)
Predicate: occupation
Object: singer, Reality television judge

Triple: ['__subject__ Andra (singer) __predicate__ occupation __object__ singer, Reality television judge']
Text: Andra is a singer and Reality tv judge.
Subject: Andra (singer)
Predicate: occupation
Object: singer, Reality television judge

Triple: ['__subject__ Andra (singer) __predicate__ occupation __object__ Singing']
Text: Andra sings for a living.
Subject: Andra (singer)
Predicate: occupation
Object: Singing

Triple: ['__subject__ Andra (singer) __predicate__ occupation __object__ Singing']
Text: The singer Andra's occupation is singing.
Subject: Andra (singer)
Predicate: occupation
Object: Singing

Triple: ['__subject__ Andra (singer) __predicate__ occupation __object__ Singing']
Text: Andra has a career in singing.
Subject: Andra (singer)
Predicate: occupation
Object: Singing

Triple: ['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Armin Van Buuren, Bobina, Mark Sixma, Jonathan Mendelsohn, Christian Burns, Jwaydan, Alexander Popov, Jano, Alexandre Bergheau, Jonny Rose, Sylvia Tosun, Lira Yin, Alexandra Badoi']
Text: Andrew Rayel is associated with a number of musical artists, these include: Armin Van Buuren, Bobina, Mark Sixma, Jonathan Mendelsohn, Christian Burns, Jwaydan, Alexander Popov, Jano, Alexandre Bergheau, Jonny Rose, Sylvia Tosun, Lira Yin, and Alexandra Badoi.
Subject: Andrew Rayel
Predicate: associatedBand/associatedMusicalArtist
Object: Armin Van Buuren, Bobina, Mark Sixma, Jonathan Mendelsohn, Christian Burns, Jwaydan, Alexander Popov, Jano, Alexandre Bergheau, Jonny Rose, Sylvia Tosun, Lira Yin, Alexandra Badoi

Triple: ['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Armin Van Buuren, Bobina, Mark Sixma, Jonathan Mendelsohn, Christian Burns, Jwaydan, Alexander Popov, Jano, Alexandre Bergheau, Jonny Rose, Sylvia Tosun, Lira Yin, Alexandra Badoi']
Text: Andrew Rayel has been associated with the following musical artists: Armin Van Buuren, Bobina, Mark Sixma, Jonathan Mendelsohn, Christian Burns, Jwaydan, Alexander Popov, Jano, Alexandre Bergheau, Jonny Rose, Sylvia Tosun, Lira Yin and Alexandra Badoi.
Subject: Andrew Rayel
Predicate: associatedBand/associatedMusicalArtist
Object: Armin Van Buuren, Bobina, Mark Sixma, Jonathan Mendelsohn, Christian Burns, Jwaydan, Alexander Popov, Jano, Alexandre Bergheau, Jonny Rose, Sylvia Tosun, Lira Yin, Alexandra Badoi

Triple: ['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Armin Van Buuren, Bobina, Mark Sixma, Jonathan Mendelsohn, Christian Burns, Jwaydan, Alexander Popov, Jano, Alexandre Bergheau, Jonny Rose, Sylvia Tosun, Lira Yin, Alexandra Badoi']
Text: Andrew Rayel is associated with artists such as Armin van Buuren, Bobina, Mark Sixma, Jonathan Mendelsohn, Christian Burns, Jwaydan, Alexander Popov, Jano, Alexandre Bergheau, Jonny Rose, Sylvia Tosun, Lira Yin and Alexandra Badoi.
Subject: Andrew Rayel
Predicate: associatedBand/associatedMusicalArtist
Object: Armin Van Buuren, Bobina, Mark Sixma, Jonathan Mendelsohn, Christian Burns, Jwaydan, Alexander Popov, Jano, Alexandre Bergheau, Jonny Rose, Sylvia Tosun, Lira Yin, Alexandra Badoi

Triple: ['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Armin van Buuren']
Text: Andrew Rayel is associated with the musical artist Armin van Buuren.
Subject: Andrew Rayel
Predicate: associatedBand/associatedMusicalArtist
Object: Armin van Buuren

Triple: ['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Armin van Buuren']
Text: Andrew Rayel is associated with Armin van Buuren.
Subject: Andrew Rayel
Predicate: associatedBand/associatedMusicalArtist
Object: Armin van Buuren

Triple: ['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Bobina']
Text: Andrew Rayel is associated with the musical artist, Bobina.
Subject: Andrew Rayel
Predicate: associatedBand/associatedMusicalArtist
Object: Bobina

Triple: ['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Bobina']
Text: Andrew Rayel is associated with Bobina.
Subject: Andrew Rayel
Predicate: associatedBand/associatedMusicalArtist
Object: Bobina

Triple: ['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Jonathan Mendelsohn']
Text: Andrew Rayel is associated with the musical artist Jonathan Mendelsohn.
Subject: Andrew Rayel
Predicate: associatedBand/associatedMusicalArtist
Object: Jonathan Mendelsohn

Triple: ['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Mark Sixma']
Text: Andrew Rayel is associated with Mark Sixma.
Subject: Andrew Rayel
Predicate: associatedBand/associatedMusicalArtist
Object: Mark Sixma

Triple: ['__subject__ Andrew Rayel __predicate__ associatedBand/associatedMusicalArtist __object__ Mark Sixma']
Text: Musicians, Andrew Rayel and Mark Sixma, are associates.
Subject: Andrew Rayel
Predicate: associatedBand/associatedMusicalArtist
Object: Mark Sixma

Triple: ['__subject__ Andrew Rayel __predicate__ genre __object__ Trance music']
Text: The musical genre of Andrew Rayel is trance music.
Subject: Andrew Rayel
Predicate: genre
Object: Trance music

Triple: ['__subject__ Andrew Rayel __predicate__ genre __object__ Trance music']
Text: Andrew Rayel's musical genre is Trance.
Subject: Andrew Rayel
Predicate: genre
Object: Trance music

Triple: ['__subject__ Andrew Rayel __predicate__ genre __object__ Trance music']
Text: Andrew Rayel has performed the genre of Trance music.
Subject: Andrew Rayel
Predicate: genre
Object: Trance music

Triple: ['__subject__ Andrew Rayel __predicate__ instrument __object__ Piano']
Text: Andrew Rayel plays the piano.
Subject: Andrew Rayel
Predicate: instrument
Object: Piano

Triple: ['__subject__ Andrew Rayel __predicate__ instrument __object__ Piano']
Text: Andrew Rayel is a pianist.
Subject: Andrew Rayel
Predicate: instrument
Object: Piano

Triple: ['__subject__ Andrew Rayel __predicate__ instrument __object__ String instrument']
Text: Andrew Rayel was a string instrumentalist.
Subject: Andrew Rayel
Predicate: instrument
Object: String instrument

Triple: ['__subject__ Andrew Rayel __predicate__ instrument __object__ String instrument']
Text: Andrew Rayel plays a string instrument.
Subject: Andrew Rayel
Predicate: instrument
Object: String instrument

Triple: ['__subject__ Andrew White (musician) __predicate__ activeYearsStartYear __object__ 2003']
Text: Andrew White started his musical career in 2003.
Subject: Andrew White (musician)
Predicate: activeYearsStartYear
Object: 2003

Triple: ['__subject__ Andrew White (musician) __predicate__ associatedBand/associatedMusicalArtist __object__ Kaiser Chiefs']
Text: The band Kaiser Chiefs included the member Andrew White (musician).
Subject: Andrew White (musician)
Predicate: associatedBand/associatedMusicalArtist
Object: Kaiser Chiefs

Triple: ['__subject__ Andrew White (musician) __predicate__ associatedBand/associatedMusicalArtist __object__ Kaiser Chiefs']
Text: Andrew White plays for the band Kaiser Chiefs.
Subject: Andrew White (musician)
Predicate: associatedBand/associatedMusicalArtist
Object: Kaiser Chiefs

Triple: ['__subject__ Andrew White (musician) __predicate__ background __object__ non vocal instrumentalist']
Text: The musician Andrew White is a non-vocal instrumentalist.
Subject: Andrew White (musician)
Predicate: background
Object: non vocal instrumentalist

Triple: ['__subject__ Andrew White (musician) __predicate__ background __object__ non vocal instrumentalist']
Text: Andrew White is a non vocal instrumentalist.
Subject: Andrew White (musician)
Predicate: background
Object: non vocal instrumentalist

Triple: ['__subject__ Andrew White (musician) __predicate__ background __object__ non vocal instrumentalist']
Text: Andrew White is a musician that has a background with a non vocal instrument.
Subject: Andrew White (musician)
Predicate: background
Object: non vocal instrumentalist

Triple: ['__subject__ Andrew White (musician) __predicate__ recordLabel __object__ Fiction']
Text: The musician Andrew White was signed to the record label Fiction.
Subject: Andrew White (musician)
Predicate: recordLabel
Object: Fiction

Triple: ['__subject__ Andrew White (musician) __predicate__ recordLabel __object__ Fiction']
Text: Andrew White is a musician signed to the record label Fiction.
Subject: Andrew White (musician)
Predicate: recordLabel
Object: Fiction

Triple: ['__subject__ Andrew White (musician) __predicate__ recordLabel __object__ Fiction']
Text: The musician, Andrew White's record label is Fiction.
Subject: Andrew White (musician)
Predicate: recordLabel
Object: Fiction

Triple: ['__subject__ Andrew White (musician) __predicate__ recordLabel __object__ Polydor Records']
Text: Andrew White is a musician signed to Polydor Records.
Subject: Andrew White (musician)
Predicate: recordLabel
Object: Polydor Records

Triple: ['__subject__ Andrew White (musician) __predicate__ recordLabel __object__ Polydor Records']
Text: The record label of the musician Andrew White is Polydor Records.
Subject: Andrew White (musician)
Predicate: recordLabel
Object: Polydor Records

Triple: ['__subject__ Andrew White (musician) __predicate__ recordLabel __object__ Polydor Records']
Text: Andrew White is a musician signed to the record label Polydor Records.
Subject: Andrew White (musician)
Predicate: recordLabel
Object: Polydor Records

Triple: ['__subject__ Andrew White (musician) __predicate__ recordLabel __object__ Universal Records (defunct record label)']
Text: The musician Andrew White's record label is the (now defunct) Universal Records.
Subject: Andrew White (musician)
Predicate: recordLabel
Object: Universal Records (defunct record label)

Triple: ['__subject__ Andrew White (musician) __predicate__ recordLabel __object__ Universal Records (defunct record label)']
Text: The musician Andrew White's record label used to be Universal records which is now a defunct label.
Subject: Andrew White (musician)
Predicate: recordLabel
Object: Universal Records (defunct record label)

Triple: ['__subject__ Armin van Buuren __predicate__ genre __object__ House music']
Text: Armin van Buuren plays House music.
Subject: Armin van Buuren
Predicate: genre
Object: House music

Triple: ['__subject__ Armin van Buuren __predicate__ genre __object__ House music']
Text: Armin van Buuren's genre is House music.
Subject: Armin van Buuren
Predicate: genre
Object: House music

Triple: ['__subject__ Armin van Buuren __predicate__ genre __object__ House music']
Text: Armin van Buuren performs house music.
Subject: Armin van Buuren
Predicate: genre
Object: House music

Triple: ['__subject__ Black metal __predicate__ musicFusionGenre __object__ Death metal']
Text: Death metal is a musical fusion of black metal.
Subject: Black metal
Predicate: musicFusionGenre
Object: Death metal

Triple: ['__subject__ Canada __predicate__ language __object__ French language']
Text: The French language is spoken in Canada.
Subject: Canada
Predicate: language
Object: French language

Triple: ['__subject__ Canada __predicate__ language __object__ French language']
Text: In Canada one of the main languages spoken is French.
Subject: Canada
Predicate: language
Object: French language

Triple: ['__subject__ Canada __predicate__ officialLanguage __object__ French language']
Text: The official language of Canada is French.
Subject: Canada
Predicate: officialLanguage
Object: French language

Triple: ['__subject__ Canada __predicate__ officialLanguage __object__ French language']
Text: French is Canada's official language.
Subject: Canada
Predicate: officialLanguage
Object: French language

Triple: ['__subject__ Canada __predicate__ officialLanguage __object__ French language']
Text: French is an official language of Canada.
Subject: Canada
Predicate: officialLanguage
Object: French language

Triple: ['__subject__ Christian Burns __predicate__ genre __object__ House music']
Text: Christian Burns performs house music.
Subject: Christian Burns
Predicate: genre
Object: House music

Triple: ['__subject__ Christian Burns __predicate__ genre __object__ House music']
Text: The musical genre of Christian Burns is house music.
Subject: Christian Burns
Predicate: genre
Object: House music

Triple: ['__subject__ Christian Burns __predicate__ genre __object__ House music']
Text: Christian Burns is an exponent of House music.
Subject: Christian Burns
Predicate: genre
Object: House music

Triple: ['__subject__ Christian Burns __predicate__ genre __object__ Pop music']
Text: Christian Burns performs pop music.
Subject: Christian Burns
Predicate: genre
Object: Pop music

Triple: ['__subject__ Christian Burns __predicate__ genre __object__ Pop music']
Text: Christian Burns musical genre is pop music.
Subject: Christian Burns
Predicate: genre
Object: Pop music

Triple: ['__subject__ Christian Burns __predicate__ genre __object__ Pop music']
Text: Christian Burns is a pop music singer.
Subject: Christian Burns
Predicate: genre
Object: Pop music

Triple: ['__subject__ Country music __predicate__ instrument __object__ Banjo']
Text: The Banjo instrument is closely associated with country music.
Subject: Country music
Predicate: instrument
Object: Banjo

Triple: ['__subject__ Country music __predicate__ instrument __object__ Banjo']
Text: An instrument played in country music is the banjo.
Subject: Country music
Predicate: instrument
Object: Banjo

Triple: ['__subject__ Country music __predicate__ instrument __object__ Banjo']
Text: Banjo is an instrument for Country music.
Subject: Country music
Predicate: instrument
Object: Banjo

Triple: ['__subject__ Country music __predicate__ stylisticOrigin __object__ Blues']
Text: Country music originated from blues music.
Subject: Country music
Predicate: stylisticOrigin
Object: Blues

Triple: ['__subject__ Country music __predicate__ stylisticOrigin __object__ Blues']
Text: The stylistic origin of country music is blues.
Subject: Country music
Predicate: stylisticOrigin
Object: Blues

Triple: ['__subject__ Deram Records __predicate__ genre __object__ Pop music']
Text: Deram Records deal with the pop music genre.
Subject: Deram Records
Predicate: genre
Object: Pop music

Triple: ['__subject__ Deram Records __predicate__ genre __object__ Pop music']
Text: Deram Records produce Pop music.
Subject: Deram Records
Predicate: genre
Object: Pop music

Triple: ['__subject__ Deram Records __predicate__ genre __object__ Pop music']
Text: Deram Records is a pop music record label.
Subject: Deram Records
Predicate: genre
Object: Pop music

Triple: ['__subject__ Electropop __predicate__ stylisticOrigin __object__ Disco']
Text: The stylistic origin of electropop is disco.
Subject: Electropop
Predicate: stylisticOrigin
Object: Disco

Triple: ['__subject__ Electropop __predicate__ stylisticOrigin __object__ Disco']
Text: Electropop has its origins in Disco.
Subject: Electropop
Predicate: stylisticOrigin
Object: Disco

Triple: ['__subject__ Hip hop music __predicate__ derivative __object__ Drum and bass']
Text: Drum and bass is a derivative of Hip hop music.
Subject: Hip hop music
Predicate: derivative
Object: Drum and bass

Triple: ['__subject__ Hip hop music __predicate__ derivative __object__ Drum and bass']
Text: Drum and bass derives its sounds from hip hop music.
Subject: Hip hop music
Predicate: derivative
Object: Drum and bass

Triple: ['__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Disco']
Text: Hip hop music has its origins in Disco.
Subject: Hip hop music
Predicate: stylisticOrigin
Object: Disco

Triple: ['__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Disco']
Text: The stylistic origin of hip hop music is disco.
Subject: Hip hop music
Predicate: stylisticOrigin
Object: Disco

Triple: ['__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Jazz']
Text: Hip Hop music has its stylistic origins in Jazz.
Subject: Hip hop music
Predicate: stylisticOrigin
Object: Jazz

Triple: ['__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Jazz']
Text: Hip hop music's stylistic origin is Jazz.
Subject: Hip hop music
Predicate: stylisticOrigin
Object: Jazz

Triple: ['__subject__ Hip hop music __predicate__ stylisticOrigin __object__ Jazz']
Text: Hip hop music originated from jazz music.
Subject: Hip hop music
Predicate: stylisticOrigin
Object: Jazz

Triple: ['__subject__ Indie rock __predicate__ instrument __object__ Guitar']
Text: The guitar is played in indie rock music.
Subject: Indie rock
Predicate: instrument
Object: Guitar

Triple: ['__subject__ Indie rock __predicate__ instrument __object__ Guitar']
Text: The guitar is an instrument used in Indie rock.
Subject: Indie rock
Predicate: instrument
Object: Guitar

Triple: ['__subject__ Indie rock __predicate__ instrument __object__ Guitar']
Text: Indie rock genre has guitars in it.
Subject: Indie rock
Predicate: instrument
Object: Guitar

Triple: ['__subject__ Indie rock __predicate__ stylisticOrigin __object__ Garage rock']
Text: Indie rock has its stylistic origins in Garage rock.
Subject: Indie rock
Predicate: stylisticOrigin
Object: Garage rock

Triple: ['__subject__ Indie rock __predicate__ stylisticOrigin __object__ Garage rock']
Text: Indie Rock originated from garage rock music.
Subject: Indie rock
Predicate: stylisticOrigin
Object: Garage rock

Triple: ['__subject__ Jazz __predicate__ derivative __object__ Funk']
Text: Funk is a derivative of Jazz.
Subject: Jazz
Predicate: derivative
Object: Funk

Triple: ['__subject__ Jazz __predicate__ instrument __object__ Clarinet']
Text: The clarinet is used in Jazz music.
Subject: Jazz
Predicate: instrument
Object: Clarinet

Triple: ['__subject__ Jazz __predicate__ instrument __object__ Clarinet']
Text: The clarinet is a musical instrument used in jazz.
Subject: Jazz
Predicate: instrument
Object: Clarinet

Triple: ['__subject__ Jazz __predicate__ instrument __object__ Clarinet']
Text: The musical instrument clarinet is closely associated with jazz.
Subject: Jazz
Predicate: instrument
Object: Clarinet

Triple: ['__subject__ Jazz __predicate__ musicFusionGenre __object__ Afrobeat']
Text: Afrobeat is a fusion genre of Jazz.
Subject: Jazz
Predicate: musicFusionGenre
Object: Afrobeat

Triple: ['__subject__ Jazz __predicate__ musicFusionGenre __object__ Afrobeat']
Text: The musical genre Afrobeat is a fusion genre and contains elements of other genres such as Jazz.
Subject: Jazz
Predicate: musicFusionGenre
Object: Afrobeat

Triple: ['__subject__ Jazz __predicate__ stylisticOrigin __object__ Folk music']
Text: Jazz has its stylistic origins in folk music.
Subject: Jazz
Predicate: stylisticOrigin
Object: Folk music

Triple: ['__subject__ Jwaydan Moyine __predicate__ associatedBand/associatedMusicalArtist __object__ John Digweed']
Text: Jwaydan Moyine is associated with the musical artist John Digweed.
Subject: Jwaydan Moyine
Predicate: associatedBand/associatedMusicalArtist
Object: John Digweed

Triple: ['__subject__ Kill Rock Stars __predicate__ location __object__ Portland, Oregon']
Text: Kill Rock Stars is located in Portland, Oregon.
Subject: Kill Rock Stars
Predicate: location
Object: Portland, Oregon

Triple: ['__subject__ Kill Rock Stars __predicate__ location __object__ Portland, Oregon']
Text: Kill Rock Stars are located in Portland, Oregon.
Subject: Kill Rock Stars
Predicate: location
Object: Portland, Oregon

Triple: ['__subject__ London __predicate__ governingBody __object__ Greater London Authority']
Text: London is governed by the Greater London Authority.
Subject: London
Predicate: governingBody
Object: Greater London Authority

Triple: ['__subject__ London __predicate__ governingBody __object__ Greater London Authority']
Text: Greater London Authority is the governing body of London.
Subject: London
Predicate: governingBody
Object: Greater London Authority

Triple: ['__subject__ London __predicate__ governingBody __object__ Greater London Authority']
Text: The governing body in London is the Greater London Authority.
Subject: London
Predicate: governingBody
Object: Greater London Authority

Triple: ['__subject__ London __predicate__ leader __object__ Boris Johnson']
Text: Boris Johnson is a leader in London.
Subject: London
Predicate: leader
Object: Boris Johnson

Triple: ['__subject__ London __predicate__ leaderTitle __object__ European Parliament']
Text: The leader of London is the European Parliament.
Subject: London
Predicate: leaderTitle
Object: European Parliament

Triple: ['__subject__ London __predicate__ leaderTitle __object__ European Parliament']
Text: European Parliament is the leader of London.
Subject: London
Predicate: leaderTitle
Object: European Parliament

Triple: ['__subject__ London __predicate__ leaderTitle __object__ European Parliament']
Text: London's leader is the European Parliament.
Subject: London
Predicate: leaderTitle
Object: European Parliament

Triple: ['__subject__ London __predicate__ leaderTitle __object__ Parliament of the United Kingdom']
Text: The London government is known as the Parliament of the U.K.
Subject: London
Predicate: leaderTitle
Object: Parliament of the United Kingdom

Triple: ['__subject__ London __predicate__ leaderTitle __object__ Parliament of the United Kingdom']
Text: Parliament of the United Kingdom is the leader of London.
Subject: London
Predicate: leaderTitle
Object: Parliament of the United Kingdom

Triple: ['__subject__ London __predicate__ leaderTitle __object__ Parliament of the United Kingdom']
Text: London is led by the Parliament of the United Kingdom.
Subject: London
Predicate: leaderTitle
Object: Parliament of the United Kingdom

Triple: ['__subject__ Manchester __predicate__ leader __object__ Labour Party (UK)']
Text: The Labour Party (UK) is the leader of Manchester.
Subject: Manchester
Predicate: leader
Object: Labour Party (UK)

Triple: ['__subject__ Manchester __predicate__ leader __object__ Labour Party (UK)']
Text: The Labour Party is in the majority in Manchester.
Subject: Manchester
Predicate: leader
Object: Labour Party (UK)

Triple: ['__subject__ Montevideo __predicate__ country __object__ Uruguay']
Text: Montevideo is in the country of Uruguay.
Subject: Montevideo
Predicate: country
Object: Uruguay

Triple: ['__subject__ Montevideo __predicate__ country __object__ Uruguay']
Text: Montevideo is found in the country of Uruguay.
Subject: Montevideo
Predicate: country
Object: Uruguay

Triple: ['__subject__ Montevideo __predicate__ leader __object__ Daniel Martínez (politician)']
Text: The politician, Daniel Martinez, is Montevideo's leader.
Subject: Montevideo
Predicate: leader
Object: Daniel Martínez (politician)

Triple: ['__subject__ Montevideo __predicate__ leader __object__ Daniel Martínez (politician)']
Text: Daniel Martinez is a political leader in Montevideo.
Subject: Montevideo
Predicate: leader
Object: Daniel Martínez (politician)

Triple: ['__subject__ Montevideo __predicate__ leader __object__ Daniel Martínez (politician)']
Text: The leader of Montevideo is the politician Daniel Martínez.
Subject: Montevideo
Predicate: leader
Object: Daniel Martínez (politician)

Triple: ['__subject__ NRBQ __predicate__ genre __object__ Country music']
Text: The musical genre of the band NRBQ is country music.
Subject: NRBQ
Predicate: genre
Object: Country music

Triple: ['__subject__ NRBQ __predicate__ genre __object__ Country music']
Text: NRBQ are exponents of Country music.
Subject: NRBQ
Predicate: genre
Object: Country music

Triple: ['__subject__ NRBQ __predicate__ genre __object__ Country music']
Text: The band NRBQ's genre is Country Music.
Subject: NRBQ
Predicate: genre
Object: Country music

Triple: ['__subject__ Paraguay __predicate__ ethnicGroup __object__ Mestizo']
Text: Paraguay has a ethnic group called the Mestizo.
Subject: Paraguay
Predicate: ethnicGroup
Object: Mestizo

Triple: ['__subject__ Paraguay __predicate__ ethnicGroup __object__ Mestizo']
Text: Paraguay 's ethnic Group is called Mestizo.
Subject: Paraguay
Predicate: ethnicGroup
Object: Mestizo

Triple: ['__subject__ Paraguay __predicate__ ethnicGroup __object__ Mestizo']
Text: An ethnic group of Paraguay are the Mestizo people.
Subject: Paraguay
Predicate: ethnicGroup
Object: Mestizo

Triple: ['__subject__ Paraguay __predicate__ language __object__ Spanish language']
Text: The language is Paraguay is Spanish.
Subject: Paraguay
Predicate: language
Object: Spanish language

Triple: ['__subject__ Paraguay __predicate__ language __object__ Spanish language']
Text: Paraguay is where the Spanish language is spoken.
Subject: Paraguay
Predicate: language
Object: Spanish language

Triple: ['__subject__ Paraguay __predicate__ leader __object__ Juan Afara']
Text: The leader of Paraguay is called Juan Afara.
Subject: Paraguay
Predicate: leader
Object: Juan Afara

Triple: ['__subject__ Paraguay __predicate__ leader __object__ Juan Afara']
Text: The leader of Paraguay is Juan Afara.
Subject: Paraguay
Predicate: leader
Object: Juan Afara

Triple: ['__subject__ Paraguay __predicate__ leader __object__ Juan Afara']
Text: Juan Afara is the leader of Paraguay.
Subject: Paraguay
Predicate: leader
Object: Juan Afara

Triple: ['__subject__ Philips Records __predicate__ parentCompany __object__ Universal Music Group']
Text: Universal Music group is the parent company of Philips Records.
Subject: Philips Records
Predicate: parentCompany
Object: Universal Music Group

Triple: ['__subject__ Philips Records __predicate__ parentCompany __object__ Universal Music Group']
Text: The Universal Music Group is the parent company of Philips Records.
Subject: Philips Records
Predicate: parentCompany
Object: Universal Music Group

Triple: ['__subject__ Philips Records __predicate__ parentCompany __object__ Universal Music Group']
Text: Universal Music Group owns Philips Records.
Subject: Philips Records
Predicate: parentCompany
Object: Universal Music Group

Triple: ['__subject__ Poland __predicate__ ethnicGroup __object__ Kashubians']
Text: Kashubians are an ethnic group of Poland.
Subject: Poland
Predicate: ethnicGroup
Object: Kashubians

Triple: ['__subject__ Poland __predicate__ ethnicGroup __object__ Kashubians']
Text: An ethnic group of Poland is the Kashubians.
Subject: Poland
Predicate: ethnicGroup
Object: Kashubians

Triple: ['__subject__ Poland __predicate__ ethnicGroup __object__ Kashubians']
Text: Kashubians are an ethnic group in Poland.
Subject: Poland
Predicate: ethnicGroup
Object: Kashubians

Triple: ['__subject__ Pop music __predicate__ musicFusionGenre __object__ Disco']
Text: Disco music is a fusion genre of pop music.
Subject: Pop music
Predicate: musicFusionGenre
Object: Disco

Triple: ['__subject__ Pop music __predicate__ musicFusionGenre __object__ Disco']
Text: Disco is a genre of music that contain elements of other genres such as pop music and therefore can be considered a fusion genre.
Subject: Pop music
Predicate: musicFusionGenre
Object: Disco

Triple: ['__subject__ Post-metal __predicate__ instrument __object__ Cello']
Text: Post-metal music uses the cello.
Subject: Post-metal
Predicate: instrument
Object: Cello

Triple: ['__subject__ Post-metal __predicate__ instrument __object__ Cello']
Text: The post metal instrument is a Cello.
Subject: Post-metal
Predicate: instrument
Object: Cello

Triple: ['__subject__ Rhythm and blues __predicate__ derivative __object__ Disco']
Text: Disco is a derivative of rhythm and blues.
Subject: Rhythm and blues
Predicate: derivative
Object: Disco

Triple: ['__subject__ Rhythm and blues __predicate__ derivative __object__ Disco']
Text: Disco derives from rhythm and blues.
Subject: Rhythm and blues
Predicate: derivative
Object: Disco

Triple: ['__subject__ Rhythm and blues __predicate__ derivative __object__ Funk']
Text: Funk is a derivative of rhythm and blues.
Subject: Rhythm and blues
Predicate: derivative
Object: Funk

Triple: ['__subject__ Rhythm and blues __predicate__ stylisticOrigin __object__ Blues']
Text: Rhythm and blues music originated from the blues.
Subject: Rhythm and blues
Predicate: stylisticOrigin
Object: Blues

Triple: ['__subject__ Rhythm and blues __predicate__ stylisticOrigin __object__ Blues']
Text: Rhythm and blues originated from blues music.
Subject: Rhythm and blues
Predicate: stylisticOrigin
Object: Blues

Triple: ['__subject__ Rock and roll __predicate__ stylisticOrigin __object__ Country music']
Text: Rock and roll originated from country music.
Subject: Rock and roll
Predicate: stylisticOrigin
Object: Country music

Triple: ['__subject__ Rock and roll __predicate__ stylisticOrigin __object__ Country music']
Text: The stylistic origin of rock and roll is country music.
Subject: Rock and roll
Predicate: stylisticOrigin
Object: Country music

Triple: ['__subject__ Rock music __predicate__ musicFusionGenre __object__ Bhangra (music)']
Text: A musical fusion of rock music is bhangra music.
Subject: Rock music
Predicate: musicFusionGenre
Object: Bhangra (music)

Triple: ['__subject__ Rock music __predicate__ musicFusionGenre __object__ Bhangra (music)']
Text: The music Bhangra is part of the fusion genre, partly coming from Rock music.
Subject: Rock music
Predicate: musicFusionGenre
Object: Bhangra (music)

Triple: ['__subject__ Rock music __predicate__ stylisticOrigin __object__ Blues']
Text: Rock music originated from blues music.
Subject: Rock music
Predicate: stylisticOrigin
Object: Blues

Triple: ['__subject__ Rock music __predicate__ stylisticOrigin __object__ Blues']
Text: Rock music has its stylistic origins in the Blues.
Subject: Rock music
Predicate: stylisticOrigin
Object: Blues

Triple: ['__subject__ Rock music __predicate__ stylisticOrigin __object__ Blues']
Text: The Blues is a stylistic origin of rock music.
Subject: Rock music
Predicate: stylisticOrigin
Object: Blues

Triple: ['__subject__ Rock music __predicate__ stylisticOrigin __object__ Country music']
Text: Rock music originated from country music.
Subject: Rock music
Predicate: stylisticOrigin
Object: Country music

Triple: ['__subject__ Rock music __predicate__ stylisticOrigin __object__ Folk music']
Text: Rock music has its stylistic origins in folk music.
Subject: Rock music
Predicate: stylisticOrigin
Object: Folk music

Triple: ['__subject__ Rock music __predicate__ stylisticOrigin __object__ Folk music']
Text: Rock music stylistics originated from folk music.
Subject: Rock music
Predicate: stylisticOrigin
Object: Folk music

Triple: ['__subject__ Ska punk __predicate__ stylisticOrigin __object__ Punk rock']
Text: Ska punk originated from punk rock music.
Subject: Ska punk
Predicate: stylisticOrigin
Object: Punk rock

Triple: ['__subject__ Ska punk __predicate__ stylisticOrigin __object__ Punk rock']
Text: Ska punk music origins are punk rock.
Subject: Ska punk
Predicate: stylisticOrigin
Object: Punk rock

Triple: ['__subject__ Ska punk __predicate__ stylisticOrigin __object__ Punk rock']
Text: Ska Punk's stylistic origin is Punk rock.
Subject: Ska punk
Predicate: stylisticOrigin
Object: Punk rock

Triple: ['__subject__ Ska punk __predicate__ stylisticOrigin __object__ Ska']
Text: Ska punk originated from ska music.
Subject: Ska punk
Predicate: stylisticOrigin
Object: Ska

Triple: ['__subject__ Ska punk __predicate__ stylisticOrigin __object__ Ska']
Text: Ska punk has its origins in Ska.
Subject: Ska punk
Predicate: stylisticOrigin
Object: Ska

Triple: ['__subject__ Suburban Legends __predicate__ bandMember __object__ Brian Robertson (trombonist)']
Text: Brian Robertson plays the trombone in the band Suburban Legends.
Subject: Suburban Legends
Predicate: bandMember
Object: Brian Robertson (trombonist)

Triple: ['__subject__ Suburban Legends __predicate__ bandMember __object__ Brian Robertson (trombonist)']
Text: Brian Robertson, a trombonist, is a band member of Suburban Legends.
Subject: Suburban Legends
Predicate: bandMember
Object: Brian Robertson (trombonist)

Triple: ['__subject__ Suburban Legends __predicate__ bandMember __object__ Brian Robertson (trombonist)']
Text: A member of the band Suburban Legends is trombonist Brian Robertson.
Subject: Suburban Legends
Predicate: bandMember
Object: Brian Robertson (trombonist)

Triple: ['__subject__ Suburban Legends __predicate__ genre __object__ Pop music']
Text: Suburban Legends' genre is pop music.
Subject: Suburban Legends
Predicate: genre
Object: Pop music

Triple: ['__subject__ Suburban Legends __predicate__ genre __object__ Pop music']
Text: Suburban Legends perform pop music.
Subject: Suburban Legends
Predicate: genre
Object: Pop music

Triple: ['__subject__ Suburban Legends __predicate__ genre __object__ Pop music']
Text: The Suburban Legends is a pop music band.
Subject: Suburban Legends
Predicate: genre
Object: Pop music

Triple: ['__subject__ Suburban Legends __predicate__ genre __object__ Rock music']
Text: The band Suburban Legends' genre is Rock music.
Subject: Suburban Legends
Predicate: genre
Object: Rock music

Triple: ['__subject__ Suburban Legends __predicate__ genre __object__ Rock music']
Text: Suburban Legends performs rock music.
Subject: Suburban Legends
Predicate: genre
Object: Rock music

Triple: ['__subject__ Suburban Legends __predicate__ genre __object__ Rock music']
Text: The band Suburban Legends play rock music.
Subject: Suburban Legends
Predicate: genre
Object: Rock music

Triple: ['__subject__ Suburban Legends __predicate__ genre __object__ Ska']
Text: Suburban Legends performs Ska music.
Subject: Suburban Legends
Predicate: genre
Object: Ska

Triple: ['__subject__ Suburban Legends __predicate__ genre __object__ Ska']
Text: The Suburban Legends music genre is Ska.
Subject: Suburban Legends
Predicate: genre
Object: Ska

Triple: ['__subject__ Suburban Legends __predicate__ genre __object__ Ska']
Text: The genre of the band, Suburban Legends, is Ska.
Subject: Suburban Legends
Predicate: genre
Object: Ska

Triple: ['__subject__ Synthpop __predicate__ derivative __object__ House music']
Text: Synthpop is derived from house music.
Subject: Synthpop
Predicate: derivative
Object: House music

Triple: ['__subject__ Synthpop __predicate__ derivative __object__ House music']
Text: Synthpop is a musical derivative of house music.
Subject: Synthpop
Predicate: derivative
Object: House music

Triple: ['__subject__ Synthpop __predicate__ derivative __object__ House music']
Text: Synthpop is a form of House music.
Subject: Synthpop
Predicate: derivative
Object: House music

Triple: ['__subject__ Synthpop __predicate__ stylisticOrigin __object__ Disco']
Text: Synthpop originated from Disco.
Subject: Synthpop
Predicate: stylisticOrigin
Object: Disco

Triple: ['__subject__ Synthpop __predicate__ stylisticOrigin __object__ Disco']
Text: Synthpop is a derivative of disco music.
Subject: Synthpop
Predicate: stylisticOrigin
Object: Disco

Triple: ['__subject__ Synthpop __predicate__ stylisticOrigin __object__ New wave music']
Text: Synthpop is derived from New wave music.
Subject: Synthpop
Predicate: stylisticOrigin
Object: New wave music

Triple: ['__subject__ Synthpop __predicate__ stylisticOrigin __object__ New wave music']
Text: The stylistic origin of synthpop is new wave music.
Subject: Synthpop
Predicate: stylisticOrigin
Object: New wave music

Triple: ['__subject__ Synthpop __predicate__ stylisticOrigin __object__ New wave music']
Text: Synthpop has its stylistic origin in new wave music.
Subject: Synthpop
Predicate: stylisticOrigin
Object: New wave music

Triple: ['__subject__ Trance music __predicate__ stylisticOrigin __object__ House music']
Text: Trance music originated from house music.
Subject: Trance music
Predicate: stylisticOrigin
Object: House music

Triple: ['__subject__ Trance music __predicate__ stylisticOrigin __object__ House music']
Text: Trance music has its origins in House music.
Subject: Trance music
Predicate: stylisticOrigin
Object: House music

Triple: ['__subject__ Trance music __predicate__ stylisticOrigin __object__ Pop music']
Text: Trance music has its origins in Pop music.
Subject: Trance music
Predicate: stylisticOrigin
Object: Pop music

Triple: ['__subject__ Trance music __predicate__ stylisticOrigin __object__ Pop music']
Text: Trance music has its stylistic origins in pop music.
Subject: Trance music
Predicate: stylisticOrigin
Object: Pop music

Triple: ['__subject__ United Kingdom __predicate__ capital __object__ London']
Text: London is the capital of the United Kingdom.
Subject: United Kingdom
Predicate: capital
Object: London

Triple: ['__subject__ United Kingdom __predicate__ capital __object__ London']
Text: London is the capital of the U.K.
Subject: United Kingdom
Predicate: capital
Object: London

Triple: ['__subject__ United Kingdom __predicate__ leader __object__ Elizabeth II']
Text: The leader of the United Kingdom is Elizabeth II.
Subject: United Kingdom
Predicate: leader
Object: Elizabeth II

Triple: ['__subject__ United Kingdom __predicate__ leader __object__ Elizabeth II']
Text: Elizabeth II is the leader of the United Kingdom.
Subject: United Kingdom
Predicate: leader
Object: Elizabeth II

Triple: ['__subject__ United Kingdom __predicate__ leader __object__ Elizabeth II']
Text: The leader of the U.K. is Elizabeth II.
Subject: United Kingdom
Predicate: leader
Object: Elizabeth II

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: African Americans are an ethnic group in the United States.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: African Americans are an ethnic group in the U.S.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: African Americans are one of the ethnic groups in the United States.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ Uruguay __predicate__ anthem __object__ National Anthem of Uruguay']
Text: Uruguay’s national anthem is called the National Anthem of Uruguay.
Subject: Uruguay
Predicate: anthem
Object: National Anthem of Uruguay

Triple: ['__subject__ Uruguay __predicate__ currency __object__ Uruguayan peso']
Text: The Uruguayan currency is the Uruguayan peso.
Subject: Uruguay
Predicate: currency
Object: Uruguayan peso

Triple: ['__subject__ Uruguay __predicate__ currency __object__ Uruguayan peso']
Text: Uruguayan peso is the currency in Uruguay.
Subject: Uruguay
Predicate: currency
Object: Uruguayan peso

Triple: ['__subject__ Uruguay __predicate__ currency __object__ Uruguayan peso']
Text: The currency of Uruguay is the Uruguayan peso.
Subject: Uruguay
Predicate: currency
Object: Uruguayan peso

Triple: ['__subject__ Uruguay __predicate__ demonym __object__ Uruguayans']
Text: People in Uruguay are known as Uruguayans.
Subject: Uruguay
Predicate: demonym
Object: Uruguayans

Triple: ['__subject__ Uruguay __predicate__ demonym __object__ Uruguayans']
Text: The native citizens of Uruguay are called Uruguayans.
Subject: Uruguay
Predicate: demonym
Object: Uruguayans

Triple: ['__subject__ Uruguay __predicate__ demonym __object__ Uruguayans']
Text: Uruguayans is a demonym for Uruguay.
Subject: Uruguay
Predicate: demonym
Object: Uruguayans

Triple: ['__subject__ Uruguay __predicate__ language __object__ Spanish language']
Text: Spanish is spoken in Uruguay.
Subject: Uruguay
Predicate: language
Object: Spanish language

Triple: ['__subject__ Uruguay __predicate__ language __object__ Spanish language']
Text: Spanish language is spoken in Uruguay.
Subject: Uruguay
Predicate: language
Object: Spanish language

Triple: ['__subject__ Uruguay __predicate__ language __object__ Spanish language']
Text: In Uruguay the language is Spanish.
Subject: Uruguay
Predicate: language
Object: Spanish language

Triple: ['__subject__ Uruguay __predicate__ leader __object__ Raúl Fernando Sendic Rodríguez']
Text: Raúl Fernando Sendic Rodríguez is Uruguay's leader.
Subject: Uruguay
Predicate: leader
Object: Raúl Fernando Sendic Rodríguez

Triple: ['__subject__ Uruguay __predicate__ leader __object__ Raúl Fernando Sendic Rodríguez']
Text: Raúl Fernando Sendic Rodríguez is the leader of Uruguay.
Subject: Uruguay
Predicate: leader
Object: Raúl Fernando Sendic Rodríguez

Triple: ['__subject__ Uruguay __predicate__ leader __object__ Raúl Fernando Sendic Rodríguez']
Text: The leader of Uruguay is Raul Fernando Sendic Rodriguez.
Subject: Uruguay
Predicate: leader
Object: Raúl Fernando Sendic Rodríguez

Triple: ['__subject__ Uruguay __predicate__ leader __object__ Tabaré Vázquez']
Text: Uruguay's leader is Tabaré Vázquez.
Subject: Uruguay
Predicate: leader
Object: Tabaré Vázquez

Triple: ['__subject__ Uruguay __predicate__ leader __object__ Tabaré Vázquez']
Text: The leader of Uruguay is Tabare Vazquez.
Subject: Uruguay
Predicate: leader
Object: Tabaré Vázquez

Triple: ['__subject__ Uruguay __predicate__ leader __object__ Tabaré Vázquez']
Text: Tabaré Vázquez is the leader of Uruguay.
Subject: Uruguay
Predicate: leader
Object: Tabaré Vázquez

Triple: ['__subject__ Alan Bean __predicate__ almaMater __object__ UT Austin, B.S. 1955']
Text: The alma mater of Alan Bean is UT Austin. He graduated from it with a B.S. in 1955.
Subject: Alan Bean
Predicate: almaMater
Object: UT Austin, B.S. 1955

Triple: ['__subject__ Alan Bean __predicate__ almaMater __object__ UT Austin, B.S. 1955']
Text: Alan Bean graduated in 1955 from UT Austin with a B.S.
Subject: Alan Bean
Predicate: almaMater
Object: UT Austin, B.S. 1955

Triple: ['__subject__ Alan Bean __predicate__ almaMater __object__ UT Austin, B.S. 1955']
Text: Alan Bean graduated from UT Austin in 1955 with a B.S.
Subject: Alan Bean
Predicate: almaMater
Object: UT Austin, B.S. 1955

Triple: ['__subject__ Alan Bean __predicate__ almaMater __object__ UT Austin, B.S. 1955']
Text: Alan Bean graduated from UT Austin in 1955 with a Bachelor of Science degree.
Subject: Alan Bean
Predicate: almaMater
Object: UT Austin, B.S. 1955

Triple: ['__subject__ Alan Bean __predicate__ almaMater __object__ UT Austin, B.S. 1955']
Text: Alan Bean received a Bachelor of Science degree at the University of Texas at Austin in 1955.
Subject: Alan Bean
Predicate: almaMater
Object: UT Austin, B.S. 1955

Triple: ['__subject__ Alan Bean __predicate__ birthDate __object__ 1932-03-15']
Text: Alan Bean was born on the 15th of March 1932.
Subject: Alan Bean
Predicate: birthDate
Object: 1932-03-15

Triple: ['__subject__ Alan Bean __predicate__ birthDate __object__ 1932-03-15']
Text: Alan Bean was born on Mar 15, 1932.
Subject: Alan Bean
Predicate: birthDate
Object: 1932-03-15

Triple: ['__subject__ Alan Bean __predicate__ birthDate __object__ 1932-03-15']
Text: Alan Bean was born on March 15, 1932.
Subject: Alan Bean
Predicate: birthDate
Object: 1932-03-15

Triple: ['__subject__ Alan Bean __predicate__ birthName __object__ Alan LaVern Bean']
Text: Alan Bean's full name was "Alan LaVern Bean".
Subject: Alan Bean
Predicate: birthName
Object: Alan LaVern Bean

Triple: ['__subject__ Alan Bean __predicate__ birthName __object__ Alan LaVern Bean']
Text: Alan Bean was born Alan LaVern Bean.
Subject: Alan Bean
Predicate: birthName
Object: Alan LaVern Bean

Triple: ['__subject__ Alan Bean __predicate__ birthName __object__ Alan LaVern Bean']
Text: Alan Bean's birth name was Alan LaVern Bean.
Subject: Alan Bean
Predicate: birthName
Object: Alan LaVern Bean

Triple: ['__subject__ Alan Bean __predicate__ birthName __object__ Alan LaVern Bean']
Text: Alan Bean's birth name is Alan LaVern Bean.
Subject: Alan Bean
Predicate: birthName
Object: Alan LaVern Bean

Triple: ['__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']
Text: Alan Bean was born in Wheeler, Texas.
Subject: Alan Bean
Predicate: birthPlace
Object: Wheeler, Texas

Triple: ['__subject__ Alan Bean __predicate__ birthPlace __object__ Wheeler, Texas']
Text: Alan Bean's birthplace is Wheeler, Texas.
Subject: Alan Bean
Predicate: birthPlace
Object: Wheeler, Texas

Triple: ['__subject__ Alan Bean __predicate__ dateOfRetirement __object__ June 1981']
Text: Alan Bean retired on June 1981.
Subject: Alan Bean
Predicate: dateOfRetirement
Object: June 1981

Triple: ['__subject__ Alan Bean __predicate__ dateOfRetirement __object__ June 1981']
Text: Alan Bean retired in June of 1981.
Subject: Alan Bean
Predicate: dateOfRetirement
Object: June 1981

Triple: ['__subject__ Alan Bean __predicate__ dateOfRetirement __object__ June 1981']
Text: Alan Bean retired in June 1981.
Subject: Alan Bean
Predicate: dateOfRetirement
Object: June 1981

Triple: ['__subject__ Alan Bean __predicate__ dateOfRetirement __object__ June 1981']
Text: Alan Bean's retirement was in June 1981.
Subject: Alan Bean
Predicate: dateOfRetirement
Object: June 1981

Triple: ['__subject__ Alan Bean __predicate__ dateOfRetirement __object__ June 1981']
Text: Alan Bean retired in June, 1981.
Subject: Alan Bean
Predicate: dateOfRetirement
Object: June 1981

Triple: ['__subject__ Alan Bean __predicate__ occupation __object__ Test pilot']
Text: Alan Bean was a test pilot.
Subject: Alan Bean
Predicate: occupation
Object: Test pilot

Triple: ['__subject__ Alan Bean __predicate__ occupation __object__ Test pilot']
Text: Alan Bean served as a test pilot.
Subject: Alan Bean
Predicate: occupation
Object: Test pilot

Triple: ['__subject__ Alan Bean __predicate__ occupation __object__ Test pilot']
Text: Alan Bean performed as a test pilot.
Subject: Alan Bean
Predicate: occupation
Object: Test pilot

Triple: ['__subject__ Alan Bean __predicate__ occupation __object__ Test pilot']
Text: Alan Bean performs as a test pilot.
Subject: Alan Bean
Predicate: occupation
Object: Test pilot

Triple: ['__subject__ Alan Bean __predicate__ status __object__ Retired']
Text: Alan Bean is retired.
Subject: Alan Bean
Predicate: status
Object: Retired

Triple: ['__subject__ Alan Bean __predicate__ status __object__ Retired']
Text: Alan Bean has retired.
Subject: Alan Bean
Predicate: status
Object: Retired

Triple: ['__subject__ Alan Bean __predicate__ status __object__ Retired']
Text: Alan Bean is now retired.
Subject: Alan Bean
Predicate: status
Object: Retired

Triple: ['__subject__ Alan Bean __predicate__ timeInSpace __object__ 100305.0(minutes)']
Text: Alan Bean spent 100305.0 minutes in Space.
Subject: Alan Bean
Predicate: timeInSpace
Object: 100305.0(minutes)

Triple: ['__subject__ Alan Bean __predicate__ timeInSpace __object__ 100305.0(minutes)']
Text: Alan Bean spent 100305 minutes in space.
Subject: Alan Bean
Predicate: timeInSpace
Object: 100305.0(minutes)

Triple: ['__subject__ Alan Bean __predicate__ timeInSpace __object__ 100305.0(minutes)']
Text: 100305.0 minutes is the time Alan Bean spent in Space.
Subject: Alan Bean
Predicate: timeInSpace
Object: 100305.0(minutes)

Triple: ['__subject__ Alan Bean __predicate__ timeInSpace __object__ 100305.0(minutes)']
Text: Alan Bean was in space 100305 minutes.
Subject: Alan Bean
Predicate: timeInSpace
Object: 100305.0(minutes)

Triple: ['__subject__ Alan Bean __predicate__ timeInSpace __object__ 100305.0(minutes)']
Text: Alan Bean spent over 69 days in space, 100305 minutes to be exact!
Subject: Alan Bean
Predicate: timeInSpace
Object: 100305.0(minutes)

Triple: ['__subject__ Alan Bean __predicate__ timeInSpace __object__ 100305.0(minutes)']
Text: Alan Bean's time in space was 100305.0 minutes.
Subject: Alan Bean
Predicate: timeInSpace
Object: 100305.0(minutes)

Triple: ['__subject__ Alan Bean __predicate__ timeInSpace __object__ 100305.0(minutes)']
Text: Alan Bean spend a total of 100305 minutes in space.
Subject: Alan Bean
Predicate: timeInSpace
Object: 100305.0(minutes)

Triple: ['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12']
Text: Alan Bean was a part of the crew of Apollo 12.
Subject: Alan Bean
Predicate: mission
Object: Apollo 12

Triple: ['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12']
Text: Alan Bean served as a crew member of Apollo 12.
Subject: Alan Bean
Predicate: mission
Object: Apollo 12

Triple: ['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12']
Text: Alan Bean was a member of the Apollo 12 crew.
Subject: Alan Bean
Predicate: mission
Object: Apollo 12

Triple: ['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12']
Text: Alan Bean was a crew member aboard Apollo 12.
Subject: Alan Bean
Predicate: mission
Object: Apollo 12

Triple: ['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12']
Text: Alan Bean was on the crew of Apollo 12.
Subject: Alan Bean
Predicate: mission
Object: Apollo 12

Triple: ['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12']
Text: Alan Bean was a crew member of Apollo 12.
Subject: Alan Bean
Predicate: mission
Object: Apollo 12

Triple: ['__subject__ Alan Bean __predicate__ mission __object__ Apollo 12']
Text: Alan Bean was a crew member on the Apollo 12 flight mission.
Subject: Alan Bean
Predicate: mission
Object: Apollo 12

Triple: ['__subject__ Alan Bean __predicate__ selectedByNasa __object__ 1963']
Text: Alan Bean was selected by Nasa in 1963.
Subject: Alan Bean
Predicate: selectedByNasa
Object: 1963

Triple: ['__subject__ Alan Bean __predicate__ selectedByNasa __object__ 1963']
Text: Alan Bean was chosen by NASA in 1963.
Subject: Alan Bean
Predicate: selectedByNasa
Object: 1963

Triple: ['__subject__ Alan Bean __predicate__ selectedByNasa __object__ 1963']
Text: Alan Bean was hired by NASA in 1963.
Subject: Alan Bean
Predicate: selectedByNasa
Object: 1963

Triple: ['__subject__ Alan Shepard __predicate__ almaMater __object__ NWC, M.A. 1957']
Text: Alan Shepard graduated from NWC with an M.A. in 1957.
Subject: Alan Shepard
Predicate: almaMater
Object: NWC, M.A. 1957

Triple: ['__subject__ Alan Shepard __predicate__ almaMater __object__ NWC, M.A. 1957']
Text: Alan Shepard graduated from NWC in 1957 with an M.A.
Subject: Alan Shepard
Predicate: almaMater
Object: NWC, M.A. 1957

Triple: ['__subject__ Alan Shepard __predicate__ almaMater __object__ NWC, M.A. 1957']
Text: Alan Shepard went to school at NWC and graduated with an MA in 1957.
Subject: Alan Shepard
Predicate: almaMater
Object: NWC, M.A. 1957

Triple: ['__subject__ Alan Shepard __predicate__ almaMater __object__ NWC, M.A. 1957']
Text: Alan Shepard graduated from NWC with the master of arts degree in 1957.
Subject: Alan Shepard
Predicate: almaMater
Object: NWC, M.A. 1957

Triple: ['__subject__ Alan Shepard __predicate__ birthDate __object__ 1923-11-18']
Text: Alan Shepard was born November 18th, 1923.
Subject: Alan Shepard
Predicate: birthDate
Object: 1923-11-18

Triple: ['__subject__ Alan Shepard __predicate__ birthDate __object__ 1923-11-18']
Text: Alan Shepard was born on November 18, 1923.
Subject: Alan Shepard
Predicate: birthDate
Object: 1923-11-18

Triple: ['__subject__ Alan Shepard __predicate__ birthDate __object__ 1923-11-18']
Text: Alan Shepard was born on Nov 18, 1923.
Subject: Alan Shepard
Predicate: birthDate
Object: 1923-11-18

Triple: ['__subject__ Alan Shepard __predicate__ birthDate __object__ 1923-11-18']
Text: Alan Shepard was born on 1923-11-18.
Subject: Alan Shepard
Predicate: birthDate
Object: 1923-11-18

Triple: ['__subject__ Alan Shepard __predicate__ birthDate __object__ 1923-11-18']
Text: Alan Shepard was born on the 18th of November 1923.
Subject: Alan Shepard
Predicate: birthDate
Object: 1923-11-18

Triple: ['__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']
Text: Alan Shepard's birth place was New Hampshire.
Subject: Alan Shepard
Predicate: birthPlace
Object: New Hampshire

Triple: ['__subject__ Alan Shepard __predicate__ birthPlace __object__ New Hampshire']
Text: Alan Shepard was born in New Hampshire.
Subject: Alan Shepard
Predicate: birthPlace
Object: New Hampshire

Triple: ['__subject__ Alan Shepard __predicate__ dateOfRetirement __object__ 1974-08-01']
Text: Alan Shepard retired on 1974-08-01.
Subject: Alan Shepard
Predicate: dateOfRetirement
Object: 1974-08-01

Triple: ['__subject__ Alan Shepard __predicate__ dateOfRetirement __object__ 1974-08-01']
Text: Alan Shepard retired August 1st, 1974.
Subject: Alan Shepard
Predicate: dateOfRetirement
Object: 1974-08-01

Triple: ['__subject__ Alan Shepard __predicate__ dateOfRetirement __object__ 1974-08-01']
Text: Alan Shepard retired 1st of August 1974.
Subject: Alan Shepard
Predicate: dateOfRetirement
Object: 1974-08-01

Triple: ['__subject__ Alan Shepard __predicate__ dateOfRetirement __object__ 1974-08-01']
Text: Alan Shepard retired on August 1, 1974.
Subject: Alan Shepard
Predicate: dateOfRetirement
Object: 1974-08-01

Triple: ['__subject__ Alan Shepard __predicate__ dateOfRetirement __object__ 1974-08-01']
Text: Alan Shepard retired on Aug 1, 1974.
Subject: Alan Shepard
Predicate: dateOfRetirement
Object: 1974-08-01

Triple: ['__subject__ Alan Shepard __predicate__ dateOfRetirement __object__ 1974-08-01']
Text: Alan Shepard retired 1974-08-01.
Subject: Alan Shepard
Predicate: dateOfRetirement
Object: 1974-08-01

Triple: ['__subject__ Alan Shepard __predicate__ dateOfRetirement __object__ 1974-08-01']
Text: Alan Shepard retired on 1st August 1974.
Subject: Alan Shepard
Predicate: dateOfRetirement
Object: 1974-08-01

Triple: ['__subject__ Alan Shepard __predicate__ deathDate __object__ 1998-07-21']
Text: Alan Shepard died on the 21st of July, 1998.
Subject: Alan Shepard
Predicate: deathDate
Object: 1998-07-21

Triple: ['__subject__ Alan Shepard __predicate__ deathDate __object__ 1998-07-21']
Text: Alan Shepard died July 21st, 1998.
Subject: Alan Shepard
Predicate: deathDate
Object: 1998-07-21

Triple: ['__subject__ Alan Shepard __predicate__ deathDate __object__ 1998-07-21']
Text: Alan Shepard died on July 21, 1998.
Subject: Alan Shepard
Predicate: deathDate
Object: 1998-07-21

Triple: ['__subject__ Alan Shepard __predicate__ deathDate __object__ 1998-07-21']
Text: Alan Shepard died on 1998-07-21.
Subject: Alan Shepard
Predicate: deathDate
Object: 1998-07-21

Triple: ['__subject__ Alan Shepard __predicate__ deathDate __object__ 1998-07-21']
Text: Alan Shepard died 1998-07-21.
Subject: Alan Shepard
Predicate: deathDate
Object: 1998-07-21

Triple: ['__subject__ Alan Shepard __predicate__ nationality __object__ United States']
Text: The nationality of Alan Shepard is United States.
Subject: Alan Shepard
Predicate: nationality
Object: United States

Triple: ['__subject__ Alan Shepard __predicate__ nationality __object__ United States']
Text: Alan Shepard's nationality is the United States.
Subject: Alan Shepard
Predicate: nationality
Object: United States

Triple: ['__subject__ Alan Shepard __predicate__ nationality __object__ United States']
Text: Alan Shepard is an American.
Subject: Alan Shepard
Predicate: nationality
Object: United States

Triple: ['__subject__ Alan Shepard __predicate__ nationality __object__ United States']
Text: Alan Shepard is from the United States.
Subject: Alan Shepard
Predicate: nationality
Object: United States

Triple: ['__subject__ Alan Shepard __predicate__ nationality __object__ United States']
Text: Alan Shepard was from the United States.
Subject: Alan Shepard
Predicate: nationality
Object: United States

Triple: ['__subject__ Alan Shepard __predicate__ nationality __object__ United States']
Text: Alan Shepard was American.
Subject: Alan Shepard
Predicate: nationality
Object: United States

Triple: ['__subject__ Alan Shepard __predicate__ occupation __object__ Test pilot']
Text: Alan Shepard's occupation was a test pilot.
Subject: Alan Shepard
Predicate: occupation
Object: Test pilot

Triple: ['__subject__ Alan Shepard __predicate__ occupation __object__ Test pilot']
Text: Alan Shepard served as a Test pilot.
Subject: Alan Shepard
Predicate: occupation
Object: Test pilot

Triple: ['__subject__ Alan Shepard __predicate__ occupation __object__ Test pilot']
Text: Alan Shepard was a test pilot.
Subject: Alan Shepard
Predicate: occupation
Object: Test pilot

Triple: ['__subject__ Alan Shepard __predicate__ servedAsChiefOfTheAstronautOfficeIn __object__ 1963']
Text: Alan Shepard was the Chief of the Astronaut Office in 1963.
Subject: Alan Shepard
Predicate: servedAsChiefOfTheAstronautOfficeIn
Object: 1963

Triple: ['__subject__ Alan Shepard __predicate__ servedAsChiefOfTheAstronautOfficeIn __object__ 1963']
Text: Alan Shepard served as Chief of the Astronaut Office in 1963.
Subject: Alan Shepard
Predicate: servedAsChiefOfTheAstronautOfficeIn
Object: 1963

Triple: ['__subject__ Alan Shepard __predicate__ status __object__ Deceased']
Text: Alan Shepard is dead.
Subject: Alan Shepard
Predicate: status
Object: Deceased

Triple: ['__subject__ Alan Shepard __predicate__ status __object__ Deceased']
Text: Alan Shepard is deceased.
Subject: Alan Shepard
Predicate: status
Object: Deceased

Triple: ['__subject__ Alan Shepard __predicate__ timeInSpace __object__ 13017.0(minutes)']
Text: Alan Shepard's time in space amounted to 13017.0 minutes.
Subject: Alan Shepard
Predicate: timeInSpace
Object: 13017.0(minutes)

Triple: ['__subject__ Alan Shepard __predicate__ timeInSpace __object__ 13017.0(minutes)']
Text: Alan Shepard spent 13017 minutes in space.
Subject: Alan Shepard
Predicate: timeInSpace
Object: 13017.0(minutes)

Triple: ['__subject__ Alan Shepard __predicate__ timeInSpace __object__ 13017.0(minutes)']
Text: 13017,0 minutes is the time Alan Shepard spent in space.
Subject: Alan Shepard
Predicate: timeInSpace
Object: 13017.0(minutes)

Triple: ['__subject__ Alan Shepard __predicate__ timeInSpace __object__ 13017.0(minutes)']
Text: Alan Shepard was 13017 minutes in space.
Subject: Alan Shepard
Predicate: timeInSpace
Object: 13017.0(minutes)

Triple: ['__subject__ Alan Shepard __predicate__ timeInSpace __object__ 13017.0(minutes)']
Text: Alan Shepard spent just over 9 days in space.
Subject: Alan Shepard
Predicate: timeInSpace
Object: 13017.0(minutes)

Triple: ['__subject__ Alan Shepard __predicate__ timeInSpace __object__ 13017.0(minutes)']
Text: Alan Shepard's time in space is 13017 minutes.
Subject: Alan Shepard
Predicate: timeInSpace
Object: 13017.0(minutes)

Triple: ['__subject__ Alan Shepard __predicate__ timeInSpace __object__ 13017.0(minutes)']
Text: Alan Shepard spent 13017.0 minutes in space.
Subject: Alan Shepard
Predicate: timeInSpace
Object: 13017.0(minutes)

Triple: ['__subject__ Alan Shepard __predicate__ title __object__ Chief of the Astronaut Office']
Text: Alan Shepard was the Chief of the Astronaut Office.
Subject: Alan Shepard
Predicate: title
Object: Chief of the Astronaut Office

Triple: ['__subject__ Alan Shepard __predicate__ title __object__ Chief of the Astronaut Office']
Text: Alan Shepard served as the Chief of the Astronaut Office.
Subject: Alan Shepard
Predicate: title
Object: Chief of the Astronaut Office

Triple: ['__subject__ Alan Shepard __predicate__ title __object__ Chief of the Astronaut Office']
Text: Alan Shepard performed as the Chief of the Astronaut Office.
Subject: Alan Shepard
Predicate: title
Object: Chief of the Astronaut Office

Triple: ['__subject__ Alan Shepard __predicate__ mission __object__ Apollo 14']
Text: Alan Shepard was a crew member of Apollo 14.
Subject: Alan Shepard
Predicate: mission
Object: Apollo 14

Triple: ['__subject__ Alan Shepard __predicate__ mission __object__ Apollo 14']
Text: Alan Shepard served as a crew member of Apollo 14.
Subject: Alan Shepard
Predicate: mission
Object: Apollo 14

Triple: ['__subject__ Alan Shepard __predicate__ mission __object__ Apollo 14']
Text: Alan Shepard was a member of the Apollo 14 crew.
Subject: Alan Shepard
Predicate: mission
Object: Apollo 14

Triple: ['__subject__ Alan Shepard __predicate__ mission __object__ Apollo 14']
Text: Alan Shepard was a crew member aboard Apollo 14.
Subject: Alan Shepard
Predicate: mission
Object: Apollo 14

Triple: ['__subject__ Alan Shepard __predicate__ mission __object__ Apollo 14']
Text: Alan Shepard was on the crew of Apollo 14.
Subject: Alan Shepard
Predicate: mission
Object: Apollo 14

Triple: ['__subject__ Alan Shepard __predicate__ mission __object__ Apollo 14']
Text: Alan Shepard was a member of the crew of Apollo 14.
Subject: Alan Shepard
Predicate: mission
Object: Apollo 14

Triple: ['__subject__ Alan Shepard __predicate__ ribbonAward __object__ American Defense Service ribbon.svg']
Text: Alan Shepard was awarded the american defence service ribbon.
Subject: Alan Shepard
Predicate: ribbonAward
Object: American Defense Service ribbon.svg

Triple: ['__subject__ Alan Shepard __predicate__ ribbonAward __object__ American Defense Service ribbon.svg']
Text: Alan Shepard was awarded American Defense Service ribbon.
Subject: Alan Shepard
Predicate: ribbonAward
Object: American Defense Service ribbon.svg

Triple: ['__subject__ Alan Shepard __predicate__ ribbonAward __object__ American Defense Service ribbon.svg']
Text: Alan Shepard was awarded the American Defense Service Ribbon.
Subject: Alan Shepard
Predicate: ribbonAward
Object: American Defense Service ribbon.svg

Triple: ['__subject__ Alan Shepard __predicate__ ribbonAward __object__ American Defense Service ribbon.svg']
Text: Alan Shepard won the American Defense Service ribbon.
Subject: Alan Shepard
Predicate: ribbonAward
Object: American Defense Service ribbon.svg

Triple: ['__subject__ Alan Shepard __predicate__ ribbonAward __object__ American Defense Service ribbon.svg']
Text: Alan Shepard was awarded with the American Defense Service ribbon.
Subject: Alan Shepard
Predicate: ribbonAward
Object: American Defense Service ribbon.svg

Triple: ['__subject__ Alan Shepard __predicate__ selectedByNasa __object__ 1959']
Text: NASA selected Alan Shepard in 1959.
Subject: Alan Shepard
Predicate: selectedByNasa
Object: 1959

Triple: ['__subject__ Alan Shepard __predicate__ selectedByNasa __object__ 1959']
Text: In 1959, Alan Shepard was selected by NASA.
Subject: Alan Shepard
Predicate: selectedByNasa
Object: 1959

Triple: ['__subject__ Alan Shepard __predicate__ selectedByNasa __object__ 1959']
Text: Alan Shepard was selected by NASA in 1959.
Subject: Alan Shepard
Predicate: selectedByNasa
Object: 1959

Triple: ['__subject__ Alan Shepard __predicate__ selectedByNasa __object__ 1959']
Text: Alan Shepard was chosen by NASA in 1959.
Subject: Alan Shepard
Predicate: selectedByNasa
Object: 1959

Triple: ['__subject__ Alan Shepard __predicate__ selectedByNasa __object__ 1959']
Text: Alan Shepard was hired by NASA in 1959.
Subject: Alan Shepard
Predicate: selectedByNasa
Object: 1959

Triple: ['__subject__ Apollo 11 __predicate__ operator __object__ NASA']
Text: Apollo 11 was operated by NASA.
Subject: Apollo 11
Predicate: operator
Object: NASA

Triple: ['__subject__ Apollo 11 __predicate__ operator __object__ NASA']
Text: The Apollo 11 program was organized by NASA.
Subject: Apollo 11
Predicate: operator
Object: NASA

Triple: ['__subject__ Apollo 12 __predicate__ backupPilot __object__ Alfred Worden']
Text: Alfred Worden was a backup pilot of Apollo 12.
Subject: Apollo 12
Predicate: backupPilot
Object: Alfred Worden

Triple: ['__subject__ Apollo 12 __predicate__ backupPilot __object__ Alfred Worden']
Text: Apollo 12's backup pilot was Alfred Worden.
Subject: Apollo 12
Predicate: backupPilot
Object: Alfred Worden

Triple: ['__subject__ Apollo 12 __predicate__ backupPilot __object__ Alfred Worden']
Text: Alfred Worden was the backup pilot of Apollo 12.
Subject: Apollo 12
Predicate: backupPilot
Object: Alfred Worden

Triple: ['__subject__ Apollo 12 __predicate__ commander __object__ David Scott']
Text: Apollo 12 was commanded by David Scott.
Subject: Apollo 12
Predicate: commander
Object: David Scott

Triple: ['__subject__ Apollo 12 __predicate__ commander __object__ David Scott']
Text: David Scott was the commander of Apollo 12.
Subject: Apollo 12
Predicate: commander
Object: David Scott

Triple: ['__subject__ Apollo 12 __predicate__ operator __object__ NASA']
Text: The operator of Apollo 12 was NASA.
Subject: Apollo 12
Predicate: operator
Object: NASA

Triple: ['__subject__ Apollo 12 __predicate__ operator __object__ NASA']
Text: The Apollo 12 operator is NASA.
Subject: Apollo 12
Predicate: operator
Object: NASA

Triple: ['__subject__ Apollo 12 __predicate__ operator __object__ NASA']
Text: NASA operated Apollo 12.
Subject: Apollo 12
Predicate: operator
Object: NASA

Triple: ['__subject__ Apollo 12 __predicate__ operator __object__ NASA']
Text: The Apollo 12 mission was operated by NASA.
Subject: Apollo 12
Predicate: operator
Object: NASA

Triple: ['__subject__ Apollo 12 __predicate__ operator __object__ NASA']
Text: Apollo 12 is operated by NASA.
Subject: Apollo 12
Predicate: operator
Object: NASA

Triple: ['__subject__ Apollo 8 __predicate__ commander __object__ Frank Borman']
Text: Frank Borman was an Apollo 8 Commander.
Subject: Apollo 8
Predicate: commander
Object: Frank Borman

Triple: ['__subject__ Apollo 8 __predicate__ commander __object__ Frank Borman']
Text: Frank Borman was the Apollo 8 commander.
Subject: Apollo 8
Predicate: commander
Object: Frank Borman

Triple: ['__subject__ Apollo 8 __predicate__ commander __object__ Frank Borman']
Text: The Apollo 8 commander was Frank Borman.
Subject: Apollo 8
Predicate: commander
Object: Frank Borman

Triple: ['__subject__ Apollo 8 __predicate__ crewMembers __object__ Frank Borman']
Text: Frank Borman was a member of the crew on Apollo 8.
Subject: Apollo 8
Predicate: crewMembers
Object: Frank Borman

Triple: ['__subject__ Apollo 8 __predicate__ crewMembers __object__ Frank Borman']
Text: Frank Borman was a crew member of Apollo 8.
Subject: Apollo 8
Predicate: crewMembers
Object: Frank Borman

Triple: ['__subject__ Apollo 8 __predicate__ crewMembers __object__ Frank Borman']
Text: Apollo 8 crew members included Frank Borman.
Subject: Apollo 8
Predicate: crewMembers
Object: Frank Borman

Triple: ['__subject__ Apollo 8 __predicate__ crewMembers __object__ Frank Borman']
Text: Frank Borman was a crewman aboard Apollo 8.
Subject: Apollo 8
Predicate: crewMembers
Object: Frank Borman

Triple: ['__subject__ Apollo 8 __predicate__ crewMembers __object__ Frank Borman']
Text: Frank Borman was a crew member on Apollo 8.
Subject: Apollo 8
Predicate: crewMembers
Object: Frank Borman

Triple: ['__subject__ British Hong Kong __predicate__ representative __object__ Chris Patten']
Text: Chris Patten served as a representative of British Hong Kong.
Subject: British Hong Kong
Predicate: representative
Object: Chris Patten

Triple: ['__subject__ British Hong Kong __predicate__ representative __object__ Chris Patten']
Text: Chris Patten represented British Hong Kong.
Subject: British Hong Kong
Predicate: representative
Object: Chris Patten

Triple: ['__subject__ British Hong Kong __predicate__ representative __object__ Chris Patten']
Text: Chris Patten is a representative of British Hong Kong.
Subject: British Hong Kong
Predicate: representative
Object: Chris Patten

Triple: ['__subject__ British Hong Kong __predicate__ representative __object__ Chris Patten']
Text: The British Hong Kong representative is Chris Patten.
Subject: British Hong Kong
Predicate: representative
Object: Chris Patten

Triple: ['__subject__ Buzz Aldrin __predicate__ alternativeName __object__ Edwin E. Aldrin, Jr.']
Text: Edwin E. Aldrin, Jr. was commonly known as Buzz Aldrin.
Subject: Buzz Aldrin
Predicate: alternativeName
Object: Edwin E. Aldrin, Jr.

Triple: ['__subject__ Buzz Aldrin __predicate__ alternativeName __object__ Edwin E. Aldrin, Jr.']
Text: Buzz Aldrin's real name was Edwin E. Aldrin, Jr.
Subject: Buzz Aldrin
Predicate: alternativeName
Object: Edwin E. Aldrin, Jr.

Triple: ['__subject__ Buzz Aldrin __predicate__ alternativeName __object__ Edwin E. Aldrin, Jr.']
Text: Buzz Aldrin is also called Edwin E. Aldrin Jr.
Subject: Buzz Aldrin
Predicate: alternativeName
Object: Edwin E. Aldrin, Jr.

Triple: ['__subject__ Buzz Aldrin __predicate__ awards __object__ 20']
Text: The number of Buzz Aldrin's awards are 20.
Subject: Buzz Aldrin
Predicate: awards
Object: 20

Triple: ['__subject__ Buzz Aldrin __predicate__ awards __object__ 20']
Text: Buzz Aldrin won 20 awards.
Subject: Buzz Aldrin
Predicate: awards
Object: 20

Triple: ['__subject__ Buzz Aldrin __predicate__ awards __object__ 20']
Text: Buzz Aldrin received 20 awards.
Subject: Buzz Aldrin
Predicate: awards
Object: 20

Triple: ['__subject__ Buzz Aldrin __predicate__ awards __object__ 20']
Text: Buzz Aldrin has won 20 awards.
Subject: Buzz Aldrin
Predicate: awards
Object: 20

Triple: ['__subject__ Buzz Aldrin __predicate__ awards __object__ 20']
Text: Buzz Aldrin had 20 awards.
Subject: Buzz Aldrin
Predicate: awards
Object: 20

Triple: ['__subject__ Buzz Aldrin __predicate__ birthDate __object__ 1930-01-20']
Text: Buzz Aldrin's birth date was 1930 01 20.
Subject: Buzz Aldrin
Predicate: birthDate
Object: 1930-01-20

Triple: ['__subject__ Buzz Aldrin __predicate__ birthDate __object__ 1930-01-20']
Text: Buzz Aldrin was born January 20, 1930.
Subject: Buzz Aldrin
Predicate: birthDate
Object: 1930-01-20

Triple: ['__subject__ Buzz Aldrin __predicate__ birthDate __object__ 1930-01-20']
Text: Buzz Aldrin was born on 1930-01-20.
Subject: Buzz Aldrin
Predicate: birthDate
Object: 1930-01-20

Triple: ['__subject__ Buzz Aldrin __predicate__ birthDate __object__ 1930-01-20']
Text: Buzz Aldrin's birth date is January 20, 1930.
Subject: Buzz Aldrin
Predicate: birthDate
Object: 1930-01-20

Triple: ['__subject__ Buzz Aldrin __predicate__ birthDate __object__ 1930-01-20']
Text: Buzz Aldrin was born on January 20th, 1930.
Subject: Buzz Aldrin
Predicate: birthDate
Object: 1930-01-20

Triple: ['__subject__ Buzz Aldrin __predicate__ birthDate __object__ 1930-01-20']
Text: Buzz Aldrin was born on the 20th of January 1930.
Subject: Buzz Aldrin
Predicate: birthDate
Object: 1930-01-20

Triple: ['__subject__ Buzz Aldrin __predicate__ birthDate __object__ 1930-01-20']
Text: Buzz Aldrin was born on January 20,1930.
Subject: Buzz Aldrin
Predicate: birthDate
Object: 1930-01-20

Triple: ['__subject__ Buzz Aldrin __predicate__ birthName __object__ Edwin Eugene Aldrin Jr.']
Text: Buzz Aldrin's birth name is Edwin Eugene Aldrin Jr.
Subject: Buzz Aldrin
Predicate: birthName
Object: Edwin Eugene Aldrin Jr.

Triple: ['__subject__ Buzz Aldrin __predicate__ birthName __object__ Edwin Eugene Aldrin Jr.']
Text: Buzz Aldrin was born as Edwin Eugene Aldrin Jr.
Subject: Buzz Aldrin
Predicate: birthName
Object: Edwin Eugene Aldrin Jr.

Triple: ['__subject__ Buzz Aldrin __predicate__ birthName __object__ Edwin Eugene Aldrin Jr.']
Text: Buzz Aldrin was born Edwin Eugene Aldrin Jr.
Subject: Buzz Aldrin
Predicate: birthName
Object: Edwin Eugene Aldrin Jr.

Triple: ['__subject__ Buzz Aldrin __predicate__ birthName __object__ Edwin Eugene Aldrin Jr.']
Text: Buzz Aldrin's birth name was Edwin Eugene Aldrin Jr.
Subject: Buzz Aldrin
Predicate: birthName
Object: Edwin Eugene Aldrin Jr.

Triple: ['__subject__ Buzz Aldrin __predicate__ birthName __object__ Edwin Eugene Aldrin Jr.']
Text: Buzz Aldrin was born with the name Edwin Eugene Aldrin Jr.
Subject: Buzz Aldrin
Predicate: birthName
Object: Edwin Eugene Aldrin Jr.

Triple: ['__subject__ Buzz Aldrin __predicate__ birthPlace __object__ Glen Ridge, New Jersey']
Text: Buzz Aldrin was born in Glen Ridge, New Jersey.
Subject: Buzz Aldrin
Predicate: birthPlace
Object: Glen Ridge, New Jersey

Triple: ['__subject__ Buzz Aldrin __predicate__ birthPlace __object__ Glen Ridge, New Jersey']
Text: Buzz Aldrin was born in Glen Ridge New Jersey.
Subject: Buzz Aldrin
Predicate: birthPlace
Object: Glen Ridge, New Jersey

Triple: ['__subject__ Buzz Aldrin __predicate__ birthPlace __object__ Glen Ridge, New Jersey']
Text: Buzz Aldrin's birth place was Glen Ridge, New Jersey.
Subject: Buzz Aldrin
Predicate: birthPlace
Object: Glen Ridge, New Jersey

Triple: ['__subject__ Buzz Aldrin __predicate__ dateOfRetirement __object__ 1971-07-01']
Text: Buzz Aldrin retired on the 7th of January 1971.
Subject: Buzz Aldrin
Predicate: dateOfRetirement
Object: 1971-07-01

Triple: ['__subject__ Buzz Aldrin __predicate__ dateOfRetirement __object__ 1971-07-01']
Text: Buzz Aldrin date of retirement was 1971/07/01.
Subject: Buzz Aldrin
Predicate: dateOfRetirement
Object: 1971-07-01

Triple: ['__subject__ Buzz Aldrin __predicate__ dateOfRetirement __object__ 1971-07-01']
Text: Buzz Aldrin's retirement date is "1971-07-01".
Subject: Buzz Aldrin
Predicate: dateOfRetirement
Object: 1971-07-01

Triple: ['__subject__ Buzz Aldrin __predicate__ dateOfRetirement __object__ 1971-07-01']
Text: Buzz Aldrin retired on July 1st, 1971.
Subject: Buzz Aldrin
Predicate: dateOfRetirement
Object: 1971-07-01

Triple: ['__subject__ Buzz Aldrin __predicate__ dateOfRetirement __object__ 1971-07-01']
Text: Buzz Aldrin retired on July 1, 1971.
Subject: Buzz Aldrin
Predicate: dateOfRetirement
Object: 1971-07-01

Triple: ['__subject__ Buzz Aldrin __predicate__ dateOfRetirement __object__ 1971-07-01']
Text: Buzz Aldrin retired on the 1st of July 1971.
Subject: Buzz Aldrin
Predicate: dateOfRetirement
Object: 1971-07-01

Triple: ['__subject__ Buzz Aldrin __predicate__ dateOfRetirement __object__ 1971-07-01']
Text: Buzz Aldrin retired on 1971-07-01.
Subject: Buzz Aldrin
Predicate: dateOfRetirement
Object: 1971-07-01

Triple: ['__subject__ Buzz Aldrin __predicate__ dateOfRetirement __object__ 1971-07-01']
Text: Buzz Aldrin retired on Jul 1, 1971.
Subject: Buzz Aldrin
Predicate: dateOfRetirement
Object: 1971-07-01

Triple: ['__subject__ Buzz Aldrin __predicate__ occupation __object__ Fighter pilot']
Text: Buzz Aldrin was a fighter pilot.
Subject: Buzz Aldrin
Predicate: occupation
Object: Fighter pilot

Triple: ['__subject__ Buzz Aldrin __predicate__ occupation __object__ Fighter pilot']
Text: Buzz Aldrin served as a Fighter pilot.
Subject: Buzz Aldrin
Predicate: occupation
Object: Fighter pilot

Triple: ['__subject__ Buzz Aldrin __predicate__ occupation __object__ Fighter pilot']
Text: Buzz Aldrin's occupation was a fighter pilot.
Subject: Buzz Aldrin
Predicate: occupation
Object: Fighter pilot

Triple: ['__subject__ Buzz Aldrin __predicate__ occupation __object__ Fighter pilot']
Text: Buzz Aldrin performed as a fighter pilot.
Subject: Buzz Aldrin
Predicate: occupation
Object: Fighter pilot

Triple: ['__subject__ Buzz Aldrin __predicate__ status __object__ Retired']
Text: Buzz Aldrin is retired.
Subject: Buzz Aldrin
Predicate: status
Object: Retired

Triple: ['__subject__ Buzz Aldrin __predicate__ status __object__ Retired']
Text: Buzz Aldrin is now retired.
Subject: Buzz Aldrin
Predicate: status
Object: Retired

Triple: ['__subject__ Buzz Aldrin __predicate__ status __object__ Retired']
Text: Buzz Aldrin has retired.
Subject: Buzz Aldrin
Predicate: status
Object: Retired

Triple: ['__subject__ Buzz Aldrin __predicate__ timeInSpace __object__ 52.0(minutes)']
Text: Buzz Aldrin was in space for 52 minutes.
Subject: Buzz Aldrin
Predicate: timeInSpace
Object: 52.0(minutes)

Triple: ['__subject__ Buzz Aldrin __predicate__ timeInSpace __object__ 52.0(minutes)']
Text: Buzz Aldrin spent a total of 52.0 minutes in space.
Subject: Buzz Aldrin
Predicate: timeInSpace
Object: 52.0(minutes)

Triple: ['__subject__ Buzz Aldrin __predicate__ timeInSpace __object__ 52.0(minutes)']
Text: Buzz Aldrin spent 52.0 minutes in Space.
Subject: Buzz Aldrin
Predicate: timeInSpace
Object: 52.0(minutes)

Triple: ['__subject__ Buzz Aldrin __predicate__ timeInSpace __object__ 52.0(minutes)']
Text: Buzz Aldrin spent 52 minutes in space.
Subject: Buzz Aldrin
Predicate: timeInSpace
Object: 52.0(minutes)

Triple: ['__subject__ Buzz Aldrin __predicate__ timeInSpace __object__ 52.0(minutes)']
Text: Buzz Aldrin walked in space 52.0 minutes.
Subject: Buzz Aldrin
Predicate: timeInSpace
Object: 52.0(minutes)

Triple: ['__subject__ Buzz Aldrin __predicate__ ribbonAward __object__ Legion of Merit ribbon.svg']
Text: Buzz Aldrin was awarded the Legion of Merit ribbon.
Subject: Buzz Aldrin
Predicate: ribbonAward
Object: Legion of Merit ribbon.svg

Triple: ['__subject__ Buzz Aldrin __predicate__ ribbonAward __object__ Legion of Merit ribbon.svg']
Text: Buzz Aldrin was awarded with Legion of Merit ribbon.
Subject: Buzz Aldrin
Predicate: ribbonAward
Object: Legion of Merit ribbon.svg

Triple: ['__subject__ Buzz Aldrin __predicate__ ribbonAward __object__ Legion of Merit ribbon.svg']
Text: Buzz Aldrin won the Legion of Merit ribbon.
Subject: Buzz Aldrin
Predicate: ribbonAward
Object: Legion of Merit ribbon.svg

Triple: ['__subject__ Buzz Aldrin __predicate__ ribbonAward __object__ Legion of Merit ribbon.svg']
Text: Buzz Aldrin was awarded the "Legion of Merit" ribbon.
Subject: Buzz Aldrin
Predicate: ribbonAward
Object: Legion of Merit ribbon.svg

Triple: ['__subject__ Buzz Aldrin __predicate__ ribbonAward __object__ Legion of Merit ribbon.svg']
Text: Buzz Aldrin was awarded the 'Legion of Merit' ribbon.
Subject: Buzz Aldrin
Predicate: ribbonAward
Object: Legion of Merit ribbon.svg

Triple: ['__subject__ California __predicate__ fossil __object__ Smilodon']
Text: Smilodon is a fossil from California.
Subject: California
Predicate: fossil
Object: Smilodon

Triple: ['__subject__ California __predicate__ fossil __object__ Smilodon']
Text: California have fossils of the Smilodon.
Subject: California
Predicate: fossil
Object: Smilodon

Triple: ['__subject__ California __predicate__ fossil __object__ Smilodon']
Text: A Smilodon is a fossil from California.
Subject: California
Predicate: fossil
Object: Smilodon

Triple: ['__subject__ California __predicate__ fossil __object__ Smilodon']
Text: The Smilodon fossil was found in California.
Subject: California
Predicate: fossil
Object: Smilodon

Triple: ['__subject__ California __predicate__ senators __object__ Dianne Feinstein']
Text: The Senator representing California was Dianne Feinstein.
Subject: California
Predicate: senators
Object: Dianne Feinstein

Triple: ['__subject__ California __predicate__ senators __object__ Dianne Feinstein']
Text: One of California's senators is Dianne Feinstein.
Subject: California
Predicate: senators
Object: Dianne Feinstein

Triple: ['__subject__ California __predicate__ senators __object__ Dianne Feinstein']
Text: Dianne Feinstein is a senator in California.
Subject: California
Predicate: senators
Object: Dianne Feinstein

Triple: ['__subject__ California __predicate__ senators __object__ Dianne Feinstein']
Text: Dianne Feinstein is a senator in the State of California.
Subject: California
Predicate: senators
Object: Dianne Feinstein

Triple: ['__subject__ Dallas __predicate__ part __object__ Collin County, Texas']
Text: Dallas is in Collin County, Texas.
Subject: Dallas
Predicate: part
Object: Collin County, Texas

Triple: ['__subject__ Dallas __predicate__ part __object__ Collin County, Texas']
Text: Dallas is located in the Collin County in Texas.
Subject: Dallas
Predicate: part
Object: Collin County, Texas

Triple: ['__subject__ Dallas __predicate__ partsType __object__ List of counties in Texas']
Text: Dallas is a county in Texas.
Subject: Dallas
Predicate: partsType
Object: List of counties in Texas

Triple: ['__subject__ Distinguished Service Medal (United States Navy) __predicate__ higher __object__ Department of Commerce Gold Medal']
Text: The Distinguished service medal from the Navy is higher than the department of commerce gold medal.
Subject: Distinguished Service Medal (United States Navy)
Predicate: higher
Object: Department of Commerce Gold Medal

Triple: ['__subject__ Distinguished Service Medal (United States Navy) __predicate__ higher __object__ Department of Commerce Gold Medal']
Text: The Distinguished Service Medal of the United States Navy is higher than the Department of Commerce Gold Medal.
Subject: Distinguished Service Medal (United States Navy)
Predicate: higher
Object: Department of Commerce Gold Medal

Triple: ['__subject__ Distinguished Service Medal (United States Navy) __predicate__ higher __object__ Department of Commerce Gold Medal']
Text: Distinguished Service Medal from United States Navy ranks higher than Department of Commerce Gold Medal.
Subject: Distinguished Service Medal (United States Navy)
Predicate: higher
Object: Department of Commerce Gold Medal

Triple: ['__subject__ Elliot See __predicate__ almaMater __object__ University of Texas at Austin']
Text: Elliot See was a student at University of Texas at Austin.
Subject: Elliot See
Predicate: almaMater
Object: University of Texas at Austin

Triple: ['__subject__ Elliot See __predicate__ almaMater __object__ University of Texas at Austin']
Text: Elliot See attended the University of Texas at Austin.
Subject: Elliot See
Predicate: almaMater
Object: University of Texas at Austin

Triple: ['__subject__ Elliot See __predicate__ almaMater __object__ University of Texas at Austin']
Text: Elliot See graduated from the University of Texas at Austin.
Subject: Elliot See
Predicate: almaMater
Object: University of Texas at Austin

Triple: ['__subject__ Elliot See __predicate__ birthDate __object__ 1927-07-23']
Text: Elliot See was born on the 23rd of July 1927.
Subject: Elliot See
Predicate: birthDate
Object: 1927-07-23

Triple: ['__subject__ Elliot See __predicate__ birthDate __object__ 1927-07-23']
Text: Elliot See was born on July 23, 1927.
Subject: Elliot See
Predicate: birthDate
Object: 1927-07-23

Triple: ['__subject__ Elliot See __predicate__ birthDate __object__ 1927-07-23']
Text: Elliot See was born on July 23rd, 1927.
Subject: Elliot See
Predicate: birthDate
Object: 1927-07-23

Triple: ['__subject__ Elliot See __predicate__ birthDate __object__ 1927-07-23']
Text: Elliot See was born on 23rd July 1927.
Subject: Elliot See
Predicate: birthDate
Object: 1927-07-23

Triple: ['__subject__ Elliot See __predicate__ birthDate __object__ 1927-07-23']
Text: Elliot See was born on 07/23/1927.
Subject: Elliot See
Predicate: birthDate
Object: 1927-07-23

Triple: ['__subject__ Elliot See __predicate__ birthPlace __object__ Dallas']
Text: Elliot See was born in Dallas.
Subject: Elliot See
Predicate: birthPlace
Object: Dallas

Triple: ['__subject__ Elliot See __predicate__ nationality __object__ United States']
Text: The nationality of Elliot See is United States.
Subject: Elliot See
Predicate: nationality
Object: United States

Triple: ['__subject__ Elliot See __predicate__ nationality __object__ United States']
Text: Elliot See had a nationality that was of the United States.
Subject: Elliot See
Predicate: nationality
Object: United States

Triple: ['__subject__ Elliot See __predicate__ nationality __object__ United States']
Text: Elliot See is from the United States.
Subject: Elliot See
Predicate: nationality
Object: United States

Triple: ['__subject__ Elliot See __predicate__ nationality __object__ United States']
Text: Elliot See is a United States national.
Subject: Elliot See
Predicate: nationality
Object: United States

Triple: ['__subject__ Elliot See __predicate__ selectedByNasa __object__ 1962']
Text: NASA selected Elliot See in 1962.
Subject: Elliot See
Predicate: selectedByNasa
Object: 1962

Triple: ['__subject__ Elliot See __predicate__ selectedByNasa __object__ 1962']
Text: Elliot See joined NASA in 1962.
Subject: Elliot See
Predicate: selectedByNasa
Object: 1962

Triple: ['__subject__ Elliot See __predicate__ selectedByNasa __object__ 1962']
Text: Elliot See was selected by NASA in 1962.
Subject: Elliot See
Predicate: selectedByNasa
Object: 1962

Triple: ['__subject__ Elliot See __predicate__ selectedByNasa __object__ 1962']
Text: Elliot See started working for NASA in 1962.
Subject: Elliot See
Predicate: selectedByNasa
Object: 1962

Triple: ['__subject__ Elliot See __predicate__ selectedByNasa __object__ 1962']
Text: Elliot See was chosen by NASA in 1962.
Subject: Elliot See
Predicate: selectedByNasa
Object: 1962

Triple: ['__subject__ Glen Ridge, New Jersey __predicate__ isPartOf __object__ Essex County, New Jersey']
Text: Glen Ridge is in the Essex County in New Jersey.
Subject: Glen Ridge, New Jersey
Predicate: isPartOf
Object: Essex County, New Jersey

Triple: ['__subject__ Glen Ridge, New Jersey __predicate__ isPartOf __object__ Essex County, New Jersey']
Text: Glen Ridge is located in the Essex County in New Jersey.
Subject: Glen Ridge, New Jersey
Predicate: isPartOf
Object: Essex County, New Jersey

Triple: ['__subject__ Glen Ridge, New Jersey __predicate__ isPartOf __object__ Essex County, New Jersey']
Text: Glen Ridge, New Jersey is situated in the Essex County.
Subject: Glen Ridge, New Jersey
Predicate: isPartOf
Object: Essex County, New Jersey

Triple: ['__subject__ New Hampshire __predicate__ bird __object__ Purple finch']
Text: The purple finch is a native bird to New Hampshire.
Subject: New Hampshire
Predicate: bird
Object: Purple finch

Triple: ['__subject__ New Hampshire __predicate__ bird __object__ Purple finch']
Text: The Purple finch is a bird found in New Hampshire.
Subject: New Hampshire
Predicate: bird
Object: Purple finch

Triple: ['__subject__ New Hampshire __predicate__ bird __object__ Purple finch']
Text: The Purple Finch is a New Hampshire bird.
Subject: New Hampshire
Predicate: bird
Object: Purple finch

Triple: ['__subject__ New Hampshire __predicate__ bird __object__ Purple finch']
Text: The Purple Finch is a bird living in New Hampshire.
Subject: New Hampshire
Predicate: bird
Object: Purple finch

Triple: ['__subject__ New Hampshire __predicate__ bird __object__ Purple finch']
Text: The New Hampshire state bird is the purple finch.
Subject: New Hampshire
Predicate: bird
Object: Purple finch

Triple: ['__subject__ St. Louis __predicate__ isPartOf __object__ Kingdom of France']
Text: St. Louis was situated in the Kingdom of France.
Subject: St. Louis
Predicate: isPartOf
Object: Kingdom of France

Triple: ['__subject__ St. Louis __predicate__ isPartOf __object__ Kingdom of France']
Text: St. Louis was part of the Kingdom of France.
Subject: St. Louis
Predicate: isPartOf
Object: Kingdom of France

Triple: ['__subject__ St. Louis __predicate__ isPartOf __object__ Kingdom of France']
Text: St. Louis is part of the Kingdom of France.
Subject: St. Louis
Predicate: isPartOf
Object: Kingdom of France

Triple: ['__subject__ St. Louis __predicate__ isPartOf __object__ Kingdom of France']
Text: St. Louis was a part of the kingdom of France.
Subject: St. Louis
Predicate: isPartOf
Object: Kingdom of France

Triple: ['__subject__ St. Louis __predicate__ leader __object__ Francis G. Slay']
Text: The name of St Louis' leader is Francis G. Slay.
Subject: St. Louis
Predicate: leader
Object: Francis G. Slay

Triple: ['__subject__ St. Louis __predicate__ leader __object__ Francis G. Slay']
Text: Francis G Slay is the Mayor of St Louis.
Subject: St. Louis
Predicate: leader
Object: Francis G. Slay

Triple: ['__subject__ United States __predicate__ leader __object__ Joe Biden']
Text: Joe Biden is the United States leader.
Subject: United States
Predicate: leader
Object: Joe Biden

Triple: ['__subject__ United States __predicate__ leader __object__ Joe Biden']
Text: Joe Biden is a United States leader.
Subject: United States
Predicate: leader
Object: Joe Biden

Triple: ['__subject__ United States __predicate__ leader __object__ Joe Biden']
Text: Joe Biden was a representative of the United States.
Subject: United States
Predicate: leader
Object: Joe Biden

Triple: ['__subject__ United States __predicate__ leader __object__ Joe Biden']
Text: Joe Biden is a leader of the United States.
Subject: United States
Predicate: leader
Object: Joe Biden

Triple: ['__subject__ United States __predicate__ leader __object__ Joe Biden']
Text: The United States leader was called Joe Biden.
Subject: United States
Predicate: leader
Object: Joe Biden

Triple: ['__subject__ United States __predicate__ leader __object__ Joe Biden']
Text: Joe Biden served as United State's vice president.
Subject: United States
Predicate: leader
Object: Joe Biden

Triple: ['__subject__ University of Texas at Austin __predicate__ affiliation __object__ University of Texas System']
Text: University of Texas at Austin is affiliated with University of Texas System.
Subject: University of Texas at Austin
Predicate: affiliation
Object: University of Texas System

Triple: ['__subject__ University of Texas at Austin __predicate__ affiliation __object__ University of Texas System']
Text: The University of Texas, Austin, is affiliated with the University of Texas System.
Subject: University of Texas at Austin
Predicate: affiliation
Object: University of Texas System

Triple: ['__subject__ University of Texas at Austin __predicate__ affiliation __object__ University of Texas System']
Text: The university of Texas at Austin is affiliated to the university of Texas System.
Subject: University of Texas at Austin
Predicate: affiliation
Object: University of Texas System

Triple: ['__subject__ University of Texas at Austin __predicate__ competeIn __object__ Big 12 Conference']
Text: The University of Texas at Austin is competing in the Big 12 Conference.
Subject: University of Texas at Austin
Predicate: competeIn
Object: Big 12 Conference

Triple: ['__subject__ University of Texas at Austin __predicate__ competeIn __object__ Big 12 Conference']
Text: The University of Texas, Austin, will compete in the Big 12 Conference.
Subject: University of Texas at Austin
Predicate: competeIn
Object: Big 12 Conference

Triple: ['__subject__ University of Texas at Austin __predicate__ competeIn __object__ Big 12 Conference']
Text: The University of Texas at Austin competed in the Big 12 Conference.
Subject: University of Texas at Austin
Predicate: competeIn
Object: Big 12 Conference

Triple: ['__subject__ University of Texas at Austin __predicate__ president __object__ Gregory L. Fenves']
Text: Gregory L. Fenves is the President of University of Texas at Austin.
Subject: University of Texas at Austin
Predicate: president
Object: Gregory L. Fenves

Triple: ['__subject__ University of Texas at Austin __predicate__ president __object__ Gregory L. Fenves']
Text: Gregory L. Fenves is the appointed president of the University of Texas at Austin.
Subject: University of Texas at Austin
Predicate: president
Object: Gregory L. Fenves

Triple: ['__subject__ University of Texas at Austin __predicate__ president __object__ Gregory L. Fenves']
Text: Gregory L. Fenves was appointed as the president of the University of Texas at Austin.
Subject: University of Texas at Austin
Predicate: president
Object: Gregory L. Fenves

Triple: ['__subject__ William Anders __predicate__ almaMater __object__ AFIT, M.S. 1962']
Text: In 1962, William Anders received an M.S. from his alma mater AFIT.
Subject: William Anders
Predicate: almaMater
Object: AFIT, M.S. 1962

Triple: ['__subject__ William Anders __predicate__ almaMater __object__ AFIT, M.S. 1962']
Text: William Anders graduated, with an M.S., from AFIT in 1962.
Subject: William Anders
Predicate: almaMater
Object: AFIT, M.S. 1962

Triple: ['__subject__ William Anders __predicate__ almaMater __object__ AFIT, M.S. 1962']
Text: William Anders graduated from AFIT in 1962 with an M.S.
Subject: William Anders
Predicate: almaMater
Object: AFIT, M.S. 1962

Triple: ['__subject__ William Anders __predicate__ almaMater __object__ AFIT, M.S. 1962']
Text: William Anders graduated from AFIT, M.S. in 1962.
Subject: William Anders
Predicate: almaMater
Object: AFIT, M.S. 1962

Triple: ['__subject__ William Anders __predicate__ birthDate __object__ 1933-10-17']
Text: William Anders was born on October 17th, 1933.
Subject: William Anders
Predicate: birthDate
Object: 1933-10-17

Triple: ['__subject__ William Anders __predicate__ birthDate __object__ 1933-10-17']
Text: William Anders was born October 17th 1933.
Subject: William Anders
Predicate: birthDate
Object: 1933-10-17

Triple: ['__subject__ William Anders __predicate__ birthDate __object__ 1933-10-17']
Text: William Anders was born on October 17, 1933.
Subject: William Anders
Predicate: birthDate
Object: 1933-10-17

Triple: ['__subject__ William Anders __predicate__ birthDate __object__ 1933-10-17']
Text: William Anders was born 1933-10-17.
Subject: William Anders
Predicate: birthDate
Object: 1933-10-17

Triple: ['__subject__ William Anders __predicate__ birthDate __object__ 1933-10-17']
Text: William Anders was born on the 17th of October 1933.
Subject: William Anders
Predicate: birthDate
Object: 1933-10-17

Triple: ['__subject__ William Anders __predicate__ birthPlace __object__ British Hong Kong']
Text: William Anders was born in British Hong Kong.
Subject: William Anders
Predicate: birthPlace
Object: British Hong Kong

Triple: ['__subject__ William Anders __predicate__ dateOfRetirement __object__ 1969-09-01']
Text: William Anders retired on September 1st, 1969.
Subject: William Anders
Predicate: dateOfRetirement
Object: 1969-09-01

Triple: ['__subject__ William Anders __predicate__ dateOfRetirement __object__ 1969-09-01']
Text: William Anders retired Sept 1st 1969.
Subject: William Anders
Predicate: dateOfRetirement
Object: 1969-09-01

Triple: ['__subject__ William Anders __predicate__ dateOfRetirement __object__ 1969-09-01']
Text: William Anders retired on September 1, 1969.
Subject: William Anders
Predicate: dateOfRetirement
Object: 1969-09-01

Triple: ['__subject__ William Anders __predicate__ dateOfRetirement __object__ 1969-09-01']
Text: William Anders retired in 1969-09-01.
Subject: William Anders
Predicate: dateOfRetirement
Object: 1969-09-01

Triple: ['__subject__ William Anders __predicate__ dateOfRetirement __object__ 1969-09-01']
Text: William Anders retired 1969-09-01.
Subject: William Anders
Predicate: dateOfRetirement
Object: 1969-09-01

Triple: ['__subject__ William Anders __predicate__ dateOfRetirement __object__ 1969-09-01']
Text: William Anders retired on the 1st of September 1969.
Subject: William Anders
Predicate: dateOfRetirement
Object: 1969-09-01

Triple: ['__subject__ William Anders __predicate__ nationality __object__ United States']
Text: William Anders has a nationality that is of the United States.
Subject: William Anders
Predicate: nationality
Object: United States

Triple: ['__subject__ William Anders __predicate__ nationality __object__ United States']
Text: William Anders is an American.
Subject: William Anders
Predicate: nationality
Object: United States

Triple: ['__subject__ William Anders __predicate__ nationality __object__ United States']
Text: The nationality of William Anders is United States.
Subject: William Anders
Predicate: nationality
Object: United States

Triple: ['__subject__ William Anders __predicate__ nationality __object__ United States']
Text: William Anders is from the United States.
Subject: William Anders
Predicate: nationality
Object: United States

Triple: ['__subject__ William Anders __predicate__ nationality __object__ United States']
Text: William Anders was from the United STates.
Subject: William Anders
Predicate: nationality
Object: United States

Triple: ['__subject__ William Anders __predicate__ nationality __object__ United States']
Text: William Anders is a US national.
Subject: William Anders
Predicate: nationality
Object: United States

Triple: ['__subject__ William Anders __predicate__ occupation __object__ Fighter pilot']
Text: William Anders was a Fighter pilot.
Subject: William Anders
Predicate: occupation
Object: Fighter pilot

Triple: ['__subject__ William Anders __predicate__ occupation __object__ Fighter pilot']
Text: William Anders served as a Fighter pilot.
Subject: William Anders
Predicate: occupation
Object: Fighter pilot

Triple: ['__subject__ William Anders __predicate__ occupation __object__ Fighter pilot']
Text: William Anders is a fighter pilot.
Subject: William Anders
Predicate: occupation
Object: Fighter pilot

Triple: ['__subject__ William Anders __predicate__ servedAsChiefOfTheAstronautOfficeIn __object__ 1976']
Text: William Anders served as Chief of the Astronaut Office in 1976.
Subject: William Anders
Predicate: servedAsChiefOfTheAstronautOfficeIn
Object: 1976

Triple: ['__subject__ William Anders __predicate__ status __object__ Retired']
Text: William Anders is retired.
Subject: William Anders
Predicate: status
Object: Retired

Triple: ['__subject__ William Anders __predicate__ status __object__ Retired']
Text: William Anders is now retired.
Subject: William Anders
Predicate: status
Object: Retired

Triple: ['__subject__ William Anders __predicate__ status __object__ Retired']
Text: William Anders has retired.
Subject: William Anders
Predicate: status
Object: Retired

Triple: ['__subject__ William Anders __predicate__ timeInSpace __object__ 8820.0(minutes)']
Text: William anders spent 8820 minutes in space.
Subject: William Anders
Predicate: timeInSpace
Object: 8820.0(minutes)

Triple: ['__subject__ William Anders __predicate__ timeInSpace __object__ 8820.0(minutes)']
Text: William Anders spent 8820.0 minutes in space.
Subject: William Anders
Predicate: timeInSpace
Object: 8820.0(minutes)

Triple: ['__subject__ William Anders __predicate__ timeInSpace __object__ 8820.0(minutes)']
Text: William Anders' time in space has been 8820.0 minutes.
Subject: William Anders
Predicate: timeInSpace
Object: 8820.0(minutes)

Triple: ['__subject__ William Anders __predicate__ timeInSpace __object__ 8820.0(minutes)']
Text: William Anders walked in space 8820.0 minutes.
Subject: William Anders
Predicate: timeInSpace
Object: 8820.0(minutes)

Triple: ['__subject__ William Anders __predicate__ timeInSpace __object__ 8820.0(minutes)']
Text: William Anders' time in space is 8820.0 minutes.
Subject: William Anders
Predicate: timeInSpace
Object: 8820.0(minutes)

Triple: ['__subject__ William Anders __predicate__ title __object__ United States Ambassador to Norway']
Text: William Anders serves as Ambassador to Norway in the United States.
Subject: William Anders
Predicate: title
Object: United States Ambassador to Norway

Triple: ['__subject__ William Anders __predicate__ title __object__ United States Ambassador to Norway']
Text: William Anders official title is the United States Ambassador to Norway.
Subject: William Anders
Predicate: title
Object: United States Ambassador to Norway

Triple: ['__subject__ William Anders __predicate__ title __object__ United States Ambassador to Norway']
Text: United States's Ambassador to Norway is William Anders.
Subject: William Anders
Predicate: title
Object: United States Ambassador to Norway

Triple: ['__subject__ William Anders __predicate__ title __object__ United States Ambassador to Norway']
Text: William Anders is the US Ambassador to Norway.
Subject: William Anders
Predicate: title
Object: United States Ambassador to Norway

Triple: ['__subject__ William Anders __predicate__ title __object__ United States Ambassador to Norway']
Text: William Anders' title is the US Ambassador to Norway.
Subject: William Anders
Predicate: title
Object: United States Ambassador to Norway

Triple: ['__subject__ William Anders __predicate__ title __object__ United States Ambassador to Norway']
Text: William Anders' title is the United States Ambassador to Norway.
Subject: William Anders
Predicate: title
Object: United States Ambassador to Norway

Triple: ['__subject__ William Anders __predicate__ title __object__ United States Ambassador to Norway']
Text: William Anders is the United States Ambassador to Norway.
Subject: William Anders
Predicate: title
Object: United States Ambassador to Norway

Triple: ['__subject__ William Anders __predicate__ mission __object__ Apollo 8']
Text: William Anders served as a crew member on Apollo 8.
Subject: William Anders
Predicate: mission
Object: Apollo 8

Triple: ['__subject__ William Anders __predicate__ mission __object__ Apollo 8']
Text: William Anders served as a crew member of Apollo 8.
Subject: William Anders
Predicate: mission
Object: Apollo 8

Triple: ['__subject__ William Anders __predicate__ mission __object__ Apollo 8']
Text: William Anders crewed Apollo 8.
Subject: William Anders
Predicate: mission
Object: Apollo 8

Triple: ['__subject__ William Anders __predicate__ mission __object__ Apollo 8']
Text: William Anders was a crew member on Apollo 8.
Subject: William Anders
Predicate: mission
Object: Apollo 8

Triple: ['__subject__ William Anders __predicate__ mission __object__ Apollo 8']
Text: William Anders was a member of the Apollo 8 crew.
Subject: William Anders
Predicate: mission
Object: Apollo 8

Triple: ['__subject__ William Anders __predicate__ mission __object__ Apollo 8']
Text: William Anders was a member of Apollo 8's crew.
Subject: William Anders
Predicate: mission
Object: Apollo 8

Triple: ['__subject__ William Anders __predicate__ selectedByNasa __object__ 1963']
Text: William Anders was selected by NASA in 1963.
Subject: William Anders
Predicate: selectedByNasa
Object: 1963

Triple: ['__subject__ William Anders __predicate__ selectedByNasa __object__ 1963']
Text: William Anders joined NASA in 1963.
Subject: William Anders
Predicate: selectedByNasa
Object: 1963

Triple: ['__subject__ William Anders __predicate__ selectedByNasa __object__ 1963']
Text: William Anders was chosen by NASA in 1963.
Subject: William Anders
Predicate: selectedByNasa
Object: 1963

Triple: ['__subject__ A.C. Milan __predicate__ league __object__ Serie A']
Text: A.C. Milan play in Serie A.
Subject: A.C. Milan
Predicate: league
Object: Serie A

Triple: ['__subject__ A.C. Milan __predicate__ league __object__ Serie A']
Text: AC Milan is in Serie A league.
Subject: A.C. Milan
Predicate: league
Object: Serie A

Triple: ['__subject__ A.C. Milan __predicate__ manager __object__ Siniša Mihajlović']
Text: Siniša Mihajlović is the manager for A.C. Milan.
Subject: A.C. Milan
Predicate: manager
Object: Siniša Mihajlović

Triple: ['__subject__ A.C. Milan __predicate__ manager __object__ Siniša Mihajlović']
Text: Siniša Mihajlović is manager of A.C. Milan.
Subject: A.C. Milan
Predicate: manager
Object: Siniša Mihajlović

Triple: ['__subject__ A.C. Milan __predicate__ manager __object__ Siniša Mihajlović']
Text: Siniša Mihajlović is the manager of A. C. Milan.
Subject: A.C. Milan
Predicate: manager
Object: Siniša Mihajlović

Triple: ['__subject__ A.S. Roma __predicate__ league __object__ Serie A']
Text: A.S. Roma plays in the Serie A.
Subject: A.S. Roma
Predicate: league
Object: Serie A

Triple: ['__subject__ A.S. Roma __predicate__ league __object__ Serie A']
Text: A.S. Roma play in Serie A.
Subject: A.S. Roma
Predicate: league
Object: Serie A

Triple: ['__subject__ A.S. Roma __predicate__ league __object__ Serie A']
Text: A.S. Roma play in the Serie A league.
Subject: A.S. Roma
Predicate: league
Object: Serie A

Triple: ['__subject__ A.S. Roma __predicate__ position __object__ Serie A']
Text: A.S. Roma's position is the Serie A.
Subject: A.S. Roma
Predicate: position
Object: Serie A

Triple: ['__subject__ A.S. Roma __predicate__ position __object__ Serie A']
Text: A.S. Roma compete in Serie A.
Subject: A.S. Roma
Predicate: position
Object: Serie A

Triple: ['__subject__ A.S. Roma __predicate__ position __object__ Serie A']
Text: A.S. Roma is in Serie A.
Subject: A.S. Roma
Predicate: position
Object: Serie A

Triple: ['__subject__ AZ Alkmaar __predicate__ ground __object__ AFAS Stadion']
Text: AFAS Stadion is the ground of AZ Alkmaar.
Subject: AZ Alkmaar
Predicate: ground
Object: AFAS Stadion

Triple: ['__subject__ AZ Alkmaar __predicate__ ground __object__ AFAS Stadion']
Text: AZ Alkmaar's ground is AFAS Stadion.
Subject: AZ Alkmaar
Predicate: ground
Object: AFAS Stadion

Triple: ['__subject__ AZ Alkmaar __predicate__ ground __object__ AFAS Stadion']
Text: AZ Alkmaar play their home games at the AFAS Stadion.
Subject: AZ Alkmaar
Predicate: ground
Object: AFAS Stadion

Triple: ['__subject__ Aaron Boogaard __predicate__ birthDate __object__ 1986-08-11']
Text: Aaron Boogaard was born 11/08/1986.
Subject: Aaron Boogaard
Predicate: birthDate
Object: 1986-08-11

Triple: ['__subject__ Aaron Boogaard __predicate__ birthDate __object__ 1986-08-11']
Text: Aaron Boogaard was born in August 11th 1986.
Subject: Aaron Boogaard
Predicate: birthDate
Object: 1986-08-11

Triple: ['__subject__ Aaron Boogaard __predicate__ birthDate __object__ 1986-08-11']
Text: Aaron Boogaard was born on 11/08/1986.
Subject: Aaron Boogaard
Predicate: birthDate
Object: 1986-08-11

Triple: ['__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Regina, Saskatchewan']
Text: Aaron Boogaard's birthplace is Regina, Saskatchewan.
Subject: Aaron Boogaard
Predicate: birthPlace
Object: Regina, Saskatchewan

Triple: ['__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Regina, Saskatchewan']
Text: Aaron Boogaard was born in Regina, Saskatchewan.
Subject: Aaron Boogaard
Predicate: birthPlace
Object: Regina, Saskatchewan

Triple: ['__subject__ Aaron Boogaard __predicate__ birthPlace __object__ Saskatchewan']
Text: Aaron Boogaard was born in Saskatchewan.
Subject: Aaron Boogaard
Predicate: birthPlace
Object: Saskatchewan

Triple: ['__subject__ Aaron Boogaard __predicate__ birthYear __object__ 1986']
Text: Aaron Boogaard was born in 1986.
Subject: Aaron Boogaard
Predicate: birthYear
Object: 1986

Triple: ['__subject__ Aaron Boogaard __predicate__ club __object__ Wichita Thunder']
Text: Aaron Boogaard's club is Wichita Thunder.
Subject: Aaron Boogaard
Predicate: club
Object: Wichita Thunder

Triple: ['__subject__ Aaron Boogaard __predicate__ club __object__ Wichita Thunder']
Text: Aaron Boogaard played for the club Wichita Thunder.
Subject: Aaron Boogaard
Predicate: club
Object: Wichita Thunder

Triple: ['__subject__ Aaron Boogaard __predicate__ club __object__ Wichita Thunder']
Text: Aaron Boogaard plays for Wichita Thunder.
Subject: Aaron Boogaard
Predicate: club
Object: Wichita Thunder

Triple: ['__subject__ Aaron Boogaard __predicate__ draftTeam __object__ Minnesota Wild']
Text: Aaron Boogaard's draft team is Minnesota Wild.
Subject: Aaron Boogaard
Predicate: draftTeam
Object: Minnesota Wild

Triple: ['__subject__ Aaron Boogaard __predicate__ height __object__ 1.905']
Text: Aaron Boogaard is 1.905m high.
Subject: Aaron Boogaard
Predicate: height
Object: 1.905

Triple: ['__subject__ Aaron Boogaard __predicate__ height __object__ 1.905']
Text: Aaron Boogaard's height is 1.905 metres.
Subject: Aaron Boogaard
Predicate: height
Object: 1.905

Triple: ['__subject__ Aaron Boogaard __predicate__ height __object__ 1.905']
Text: Aaron Boogaard is 1.905 tall.
Subject: Aaron Boogaard
Predicate: height
Object: 1.905

Triple: ['__subject__ Aaron Hunt __predicate__ birthPlace __object__ Goslar']
Text: Aaron Hunt was born in Goslar.
Subject: Aaron Hunt
Predicate: birthPlace
Object: Goslar

Triple: ['__subject__ Aaron Hunt __predicate__ birthPlace __object__ Goslar']
Text: Aaron Hunt's birth place is Goslar.
Subject: Aaron Hunt
Predicate: birthPlace
Object: Goslar

Triple: ['__subject__ Aaron Hunt __predicate__ birthPlace __object__ West Germany']
Text: Aaron Hunt was born in West Germany.
Subject: Aaron Hunt
Predicate: birthPlace
Object: West Germany

Triple: ['__subject__ Aaron Hunt __predicate__ club __object__ Germany national under-21 football team']
Text: Aaron Hunt plays for the German National Under 21 football team.
Subject: Aaron Hunt
Predicate: club
Object: Germany national under-21 football team

Triple: ['__subject__ Aaron Hunt __predicate__ club __object__ Germany national under-21 football team']
Text: Aaron Hunt's club is the Germany national under-21 football team.
Subject: Aaron Hunt
Predicate: club
Object: Germany national under-21 football team

Triple: ['__subject__ Aaron Hunt __predicate__ club __object__ Germany national youth football team']
Text: Aaron Hunt played for the Germany national youth football team.
Subject: Aaron Hunt
Predicate: club
Object: Germany national youth football team

Triple: ['__subject__ Aaron Hunt __predicate__ club __object__ Germany national youth football team']
Text: Aaron Hunt plays for the Germany national youth football team.
Subject: Aaron Hunt
Predicate: club
Object: Germany national youth football team

Triple: ['__subject__ Aaron Hunt __predicate__ club __object__ Germany national youth football team']
Text: Aaron Hunt is in the German national youth football team.
Subject: Aaron Hunt
Predicate: club
Object: Germany national youth football team

Triple: ['__subject__ Aaron Hunt __predicate__ club __object__ Goslarer SC 08']
Text: Aaron Hunt plays for Goslarer SC 08.
Subject: Aaron Hunt
Predicate: club
Object: Goslarer SC 08

Triple: ['__subject__ Aaron Hunt __predicate__ club __object__ Goslarer SC 08']
Text: Aaron Hunt's club is Goslarer SC 08.
Subject: Aaron Hunt
Predicate: club
Object: Goslarer SC 08

Triple: ['__subject__ Aaron Hunt __predicate__ club __object__ Hamburger SV']
Text: Aaron Hunt plays for the club, Hamburger SV.
Subject: Aaron Hunt
Predicate: club
Object: Hamburger SV

Triple: ['__subject__ Aaron Hunt __predicate__ club __object__ Hamburger SV']
Text: Aaron Hunt has played for Hamburger SV.
Subject: Aaron Hunt
Predicate: club
Object: Hamburger SV

Triple: ['__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen II']
Text: Aaron Hunt plays for SV Werder Bremen II.
Subject: Aaron Hunt
Predicate: club
Object: SV Werder Bremen II

Triple: ['__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen II']
Text: Aaron Hunter played for SV Werder Bremen II.
Subject: Aaron Hunt
Predicate: club
Object: SV Werder Bremen II

Triple: ['__subject__ Aaron Hunt __predicate__ club __object__ SV Werder Bremen II']
Text: Aaron Hunt plays for the club SV Werder Bremen II.
Subject: Aaron Hunt
Predicate: club
Object: SV Werder Bremen II

Triple: ['__subject__ Aaron Hunt __predicate__ club __object__ VfL Wolfsburg']
Text: Aaron Hunt's club is VfL Wolfsburg.
Subject: Aaron Hunt
Predicate: club
Object: VfL Wolfsburg

Triple: ['__subject__ Aaron Hunt __predicate__ club __object__ VfL Wolfsburg']
Text: Aaron Hunt plays for Vfl Wolfsburg.
Subject: Aaron Hunt
Predicate: club
Object: VfL Wolfsburg

Triple: ['__subject__ Aaron Hunt __predicate__ youthclub __object__ Goslarer SC 08']
Text: Aaron Hunt played for the Goslarer SC 08 youth team.
Subject: Aaron Hunt
Predicate: youthclub
Object: Goslarer SC 08

Triple: ['__subject__ Aaron Hunt __predicate__ youthclub __object__ Goslarer SC 08']
Text: Aaron Hunt's youth club was Goslarer SC 08.
Subject: Aaron Hunt
Predicate: youthclub
Object: Goslarer SC 08

Triple: ['__subject__ Aaron Hunt __predicate__ youthclub __object__ SV Werder Bremen']
Text: Aaron Hunt's is in the youth club SV Werder Bremen.
Subject: Aaron Hunt
Predicate: youthclub
Object: SV Werder Bremen

Triple: ['__subject__ Aaron Hunt __predicate__ youthclub __object__ SV Werder Bremen']
Text: Aaron Hunt played for the SV Werder Bremen youth team.
Subject: Aaron Hunt
Predicate: youthclub
Object: SV Werder Bremen

Triple: ['__subject__ Aaron Hunt __predicate__ youthclub __object__ SV Werder Bremen']
Text: Aaron Hunt belongs to the youth club SV Werder Bremen.
Subject: Aaron Hunt
Predicate: youthclub
Object: SV Werder Bremen

Triple: ['__subject__ Abel Hernández __predicate__ birthPlace __object__ Pando, Uruguay']
Text: Abel Hernandez's birthplace is Pando, Uruguay.
Subject: Abel Hernández
Predicate: birthPlace
Object: Pando, Uruguay

Triple: ['__subject__ Abel Hernández __predicate__ birthPlace __object__ Pando, Uruguay']
Text: Abel Hernández was born in Pando, Uruguay.
Subject: Abel Hernández
Predicate: birthPlace
Object: Pando, Uruguay

Triple: ['__subject__ Abel Hernández __predicate__ birthPlace __object__ Pando, Uruguay']
Text: Abel Hernández's birth place is Pando, Uruguay.
Subject: Abel Hernández
Predicate: birthPlace
Object: Pando, Uruguay

Triple: ['__subject__ Abel Hernández __predicate__ birthPlace __object__ Uruguay']
Text: Abel Hernández was born in Uruguay.
Subject: Abel Hernández
Predicate: birthPlace
Object: Uruguay

Triple: ['__subject__ Abel Hernández __predicate__ birthPlace __object__ Uruguay']
Text: Abel Hernandez was born in Uruguay.
Subject: Abel Hernández
Predicate: birthPlace
Object: Uruguay

Triple: ['__subject__ Abel Hernández __predicate__ club __object__ Central Español']
Text: Abel Hernández's club is Central Español.
Subject: Abel Hernández
Predicate: club
Object: Central Español

Triple: ['__subject__ Abel Hernández __predicate__ club __object__ Central Español']
Text: Abel Hernández has played for Central Español.
Subject: Abel Hernández
Predicate: club
Object: Central Español

Triple: ['__subject__ Abel Hernández __predicate__ club __object__ Central Español']
Text: Abel Hernandez played for the Central Espanol club.
Subject: Abel Hernández
Predicate: club
Object: Central Español

Triple: ['__subject__ Abel Hernández __predicate__ club __object__ Hull City A.F.C.']
Text: Abel Hernández's club is Hull City A.F.C.
Subject: Abel Hernández
Predicate: club
Object: Hull City A.F.C.

Triple: ['__subject__ Abel Hernández __predicate__ club __object__ Hull City A.F.C.']
Text: Abel Hernández plays for Hull City A.F.C.
Subject: Abel Hernández
Predicate: club
Object: Hull City A.F.C.

Triple: ['__subject__ Abel Hernández __predicate__ club __object__ Hull City A.F.C.']
Text: Abel Hernandez plays for Hull City AFC.
Subject: Abel Hernández
Predicate: club
Object: Hull City A.F.C.

Triple: ['__subject__ Abel Hernández __predicate__ club __object__ Peñarol']
Text: Abel Hernandez's club is Penarol.
Subject: Abel Hernández
Predicate: club
Object: Peñarol

Triple: ['__subject__ Abel Hernández __predicate__ club __object__ Peñarol']
Text: Abel Hernandez played for Penarol.
Subject: Abel Hernández
Predicate: club
Object: Peñarol

Triple: ['__subject__ Abel Hernández __predicate__ club __object__ U.S. Città di Palermo']
Text: Abel Hernandez's club is US Citta di Palermo.
Subject: Abel Hernández
Predicate: club
Object: U.S. Città di Palermo

Triple: ['__subject__ Abel Hernández __predicate__ club __object__ U.S. Città di Palermo']
Text: Abel Hernández plays for the club, U.S. Città di Palermo.
Subject: Abel Hernández
Predicate: club
Object: U.S. Città di Palermo

Triple: ['__subject__ Abel Hernández __predicate__ club __object__ Uruguay national under-20 football team']
Text: Abel Hernandez's club is the Uruguay national under 20 football team.
Subject: Abel Hernández
Predicate: club
Object: Uruguay national under-20 football team

Triple: ['__subject__ Abel Hernández __predicate__ club __object__ Uruguay national under-20 football team']
Text: Abel Hernandez plays for the Uruguay national under-20 football team.
Subject: Abel Hernández
Predicate: club
Object: Uruguay national under-20 football team

Triple: ['__subject__ Abel Hernández __predicate__ club __object__ Uruguay national under-20 football team']
Text: Abel Hernández played for the Uruguay national under-20 football team.
Subject: Abel Hernández
Predicate: club
Object: Uruguay national under-20 football team

Triple: ['__subject__ Abel Hernández __predicate__ youthclub __object__ Central Español']
Text: Abel Hernández played youth football for Central Español.
Subject: Abel Hernández
Predicate: youthclub
Object: Central Español

Triple: ['__subject__ Abel Hernández __predicate__ youthclub __object__ Central Español']
Text: Abel Hernandez played youth football for Central Espanol.
Subject: Abel Hernández
Predicate: youthclub
Object: Central Español

Triple: ['__subject__ Abel Hernández __predicate__ youthclub __object__ Central Español']
Text: Abel Hernandez is a member of the Central Espanol youth team.
Subject: Abel Hernández
Predicate: youthclub
Object: Central Español

Triple: ['__subject__ Abel Hernández __predicate__ youthclub __object__ Peñarol']
Text: In his youth, Abel Hernández played for Peñarol.
Subject: Abel Hernández
Predicate: youthclub
Object: Peñarol

Triple: ['__subject__ Abel Hernández __predicate__ youthclub __object__ Peñarol']
Text: Abel Hernández was a member of youth club Peñarol.
Subject: Abel Hernández
Predicate: youthclub
Object: Peñarol

Triple: ['__subject__ Abel Hernández __predicate__ youthclub __object__ Peñarol']
Text: Abel Hernandez is a member of Penarol's youth club.
Subject: Abel Hernández
Predicate: youthclub
Object: Peñarol

Triple: ['__subject__ Abner (footballer) __predicate__ birthDate __object__ 1996-05-30']
Text: The footballer Abner was born on 30/05/1996.
Subject: Abner (footballer)
Predicate: birthDate
Object: 1996-05-30

Triple: ['__subject__ Abner (footballer) __predicate__ birthDate __object__ 1996-05-30']
Text: Abner the footballer, was born on May 30th 1996.
Subject: Abner (footballer)
Predicate: birthDate
Object: 1996-05-30

Triple: ['__subject__ Abner (footballer) __predicate__ birthDate __object__ 1996-05-30']
Text: Footballer, Abner was born 30th May 1996.
Subject: Abner (footballer)
Predicate: birthDate
Object: 1996-05-30

Triple: ['__subject__ Abner (footballer) __predicate__ birthPlace __object__ Londrina']
Text: Abner (a footballer) was born in Londrina.
Subject: Abner (footballer)
Predicate: birthPlace
Object: Londrina

Triple: ['__subject__ Abner (footballer) __predicate__ club __object__ Brazil national under-17 football team']
Text: The footballer Abner plays for the Brazilian national under 17 football team.
Subject: Abner (footballer)
Predicate: club
Object: Brazil national under-17 football team

Triple: ['__subject__ Abner (footballer) __predicate__ club __object__ Brazil national under-17 football team']
Text: Footballer, Abner's club is the Brazil national under-17 football team.
Subject: Abner (footballer)
Predicate: club
Object: Brazil national under-17 football team

Triple: ['__subject__ Abner (footballer) __predicate__ club __object__ Brazil national under-20 football team']
Text: The footballer Abner has represented the Brazil national under 20 team.
Subject: Abner (footballer)
Predicate: club
Object: Brazil national under-20 football team

Triple: ['__subject__ Abner (footballer) __predicate__ club __object__ Brazil national under-20 football team']
Text: The footballer Abner plays for the Brazilian national under 20 football team.
Subject: Abner (footballer)
Predicate: club
Object: Brazil national under-20 football team

Triple: ['__subject__ Abner (footballer) __predicate__ club __object__ Coritiba Foot Ball Club']
Text: Abner plays for the Coritiba Football Club.
Subject: Abner (footballer)
Predicate: club
Object: Coritiba Foot Ball Club

Triple: ['__subject__ Abner (footballer) __predicate__ club __object__ Coritiba Foot Ball Club']
Text: Abner is a footballer for the Coritiba Football club.
Subject: Abner (footballer)
Predicate: club
Object: Coritiba Foot Ball Club

Triple: ['__subject__ Abner (footballer) __predicate__ club __object__ Coritiba Foot Ball Club']
Text: The footballer Abner plays for Coritiba Football Club.
Subject: Abner (footballer)
Predicate: club
Object: Coritiba Foot Ball Club

Triple: ['__subject__ Abner (footballer) __predicate__ club __object__ Real Madrid Castilla']
Text: Footballer, Abner plays for the club, Real Madrid Castilla.
Subject: Abner (footballer)
Predicate: club
Object: Real Madrid Castilla

Triple: ['__subject__ Abner (footballer) __predicate__ club __object__ Real Madrid Castilla']
Text: Abner played for the football club Real Madrid Castilla.
Subject: Abner (footballer)
Predicate: club
Object: Real Madrid Castilla

Triple: ['__subject__ Abner (footballer) __predicate__ currentclub __object__ Real Madrid Castilla']
Text: Abner is a footballer with the Real Madrid Castilla club.
Subject: Abner (footballer)
Predicate: currentclub
Object: Real Madrid Castilla

Triple: ['__subject__ Abner (footballer) __predicate__ currentclub __object__ Real Madrid Castilla']
Text: Abner currently plays football for Real Madrid Castilla.
Subject: Abner (footballer)
Predicate: currentclub
Object: Real Madrid Castilla

Triple: ['__subject__ Abner (footballer) __predicate__ currentclub __object__ Real Madrid Castilla']
Text: Abner's current football club is Real Madrid Castilla.
Subject: Abner (footballer)
Predicate: currentclub
Object: Real Madrid Castilla

Triple: ['__subject__ Accrington Stanley F.C. __predicate__ ground __object__ Accrington']
Text: Accrington Stanley F.C.'s ground is Accrington.
Subject: Accrington Stanley F.C.
Predicate: ground
Object: Accrington

Triple: ['__subject__ Accrington Stanley F.C. __predicate__ ground __object__ Accrington']
Text: Accrington Stanley F.C. play in Accrington.
Subject: Accrington Stanley F.C.
Predicate: ground
Object: Accrington

Triple: ['__subject__ Accrington Stanley F.C. __predicate__ ground __object__ Accrington']
Text: Accrington Stanley F.C. played in Accrington.
Subject: Accrington Stanley F.C.
Predicate: ground
Object: Accrington

Triple: ['__subject__ Adam Maher __predicate__ club __object__ AZ Alkmaar']
Text: Adam Maher's club is AZ Alkmaar.
Subject: Adam Maher
Predicate: club
Object: AZ Alkmaar

Triple: ['__subject__ Adam Maher __predicate__ club __object__ AZ Alkmaar']
Text: Adam Maher is connected to the AZ Alkmaar club.
Subject: Adam Maher
Predicate: club
Object: AZ Alkmaar

Triple: ['__subject__ Adam Maher __predicate__ currentclub __object__ PSV Eindhoven']
Text: The current club that Adam Maher plays for is PSV Eindhoven.
Subject: Adam Maher
Predicate: currentclub
Object: PSV Eindhoven

Triple: ['__subject__ Adam Maher __predicate__ currentclub __object__ PSV Eindhoven']
Text: Adam Maher currently plays for PSV Eindhoven.
Subject: Adam Maher
Predicate: currentclub
Object: PSV Eindhoven

Triple: ['__subject__ Adam Maher __predicate__ currentclub __object__ PSV Eindhoven']
Text: The current club of Adam Maher is PSV Eindhoven.
Subject: Adam Maher
Predicate: currentclub
Object: PSV Eindhoven

Triple: ['__subject__ Adam McQuaid __predicate__ birthDate __object__ 1986-10-12']
Text: Adam McQuaid was born in October 12th 1986.
Subject: Adam McQuaid
Predicate: birthDate
Object: 1986-10-12

Triple: ['__subject__ Adam McQuaid __predicate__ birthDate __object__ 1986-10-12']
Text: Adam McQuaid's date of birth is 12/10/1986.
Subject: Adam McQuaid
Predicate: birthDate
Object: 1986-10-12

Triple: ['__subject__ Adam McQuaid __predicate__ birthDate __object__ 1986-10-12']
Text: Adam McQuaid was born on the 12th of October 1986.
Subject: Adam McQuaid
Predicate: birthDate
Object: 1986-10-12

Triple: ['__subject__ Adam McQuaid __predicate__ birthPlace __object__ Canada']
Text: Adam McQuaid was born in Canada.
Subject: Adam McQuaid
Predicate: birthPlace
Object: Canada

Triple: ['__subject__ Adam McQuaid __predicate__ birthPlace __object__ Prince Edward Island']
Text: Adam McQuaid was born on Prince Edward Island.
Subject: Adam McQuaid
Predicate: birthPlace
Object: Prince Edward Island

Triple: ['__subject__ Adam McQuaid __predicate__ birthPlace __object__ Prince Edward Island']
Text: Prince Edward Island is the birth place of Adam McQuaid.
Subject: Adam McQuaid
Predicate: birthPlace
Object: Prince Edward Island

Triple: ['__subject__ Adam McQuaid __predicate__ birthYear __object__ 1986']
Text: Adam McQuaid's year of birth is 1986.
Subject: Adam McQuaid
Predicate: birthYear
Object: 1986

Triple: ['__subject__ Adam McQuaid __predicate__ birthYear __object__ 1986']
Text: Adam McQuaid was born in 1986.
Subject: Adam McQuaid
Predicate: birthYear
Object: 1986

Triple: ['__subject__ Adam McQuaid __predicate__ club __object__ Boston Bruins']
Text: Adam McQuaid played for the club Boston Bruins.
Subject: Adam McQuaid
Predicate: club
Object: Boston Bruins

Triple: ['__subject__ Adam McQuaid __predicate__ club __object__ Boston Bruins']
Text: Adam McQuaid plays for the Boston Bruins.
Subject: Adam McQuaid
Predicate: club
Object: Boston Bruins

Triple: ['__subject__ Adam McQuaid __predicate__ club __object__ Boston Bruins']
Text: Adam McQuaid plays for Boston Bruins.
Subject: Adam McQuaid
Predicate: club
Object: Boston Bruins

Triple: ['__subject__ Adam McQuaid __predicate__ draftTeam __object__ Columbus Blue Jackets']
Text: Adam McQuaid's draft team was the Columbus Blue Jackets.
Subject: Adam McQuaid
Predicate: draftTeam
Object: Columbus Blue Jackets

Triple: ['__subject__ Adam McQuaid __predicate__ draftTeam __object__ Columbus Blue Jackets']
Text: Adam McQuaid's draft team is the Columbus Blue Jackets.
Subject: Adam McQuaid
Predicate: draftTeam
Object: Columbus Blue Jackets

Triple: ['__subject__ Adam McQuaid __predicate__ draftTeam __object__ Columbus Blue Jackets']
Text: Adam McQuaid was drafted to the Columbus Blue Jackets.
Subject: Adam McQuaid
Predicate: draftTeam
Object: Columbus Blue Jackets

Triple: ['__subject__ Adam McQuaid __predicate__ height __object__ 1.9558']
Text: Adam McQuaid's height is 1.9558.
Subject: Adam McQuaid
Predicate: height
Object: 1.9558

Triple: ['__subject__ Adam McQuaid __predicate__ height __object__ 1.9558']
Text: Adam McQuaid is 1.9558 m tall.
Subject: Adam McQuaid
Predicate: height
Object: 1.9558

Triple: ['__subject__ Adam McQuaid __predicate__ height __object__ 1.9558']
Text: Adam McQuaid's height is 1.9558 meters.
Subject: Adam McQuaid
Predicate: height
Object: 1.9558

Triple: ['__subject__ Adam McQuaid __predicate__ weight __object__ 94.8024 (kilograms)']
Text: Adam McQuaid weighs 94.8024 kilograms.
Subject: Adam McQuaid
Predicate: weight
Object: 94.8024 (kilograms)

Triple: ['__subject__ Adam McQuaid __predicate__ weight __object__ 94.8024 (kilograms)']
Text: Adam McQuaid's weight is 94.8024 kilograms.
Subject: Adam McQuaid
Predicate: weight
Object: 94.8024 (kilograms)

Triple: ['__subject__ Adam McQuaid __predicate__ weight __object__ 94.8024 (kilograms)']
Text: Adam McQuaid weighs 94.8024kg.
Subject: Adam McQuaid
Predicate: weight
Object: 94.8024 (kilograms)

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ birthDate __object__ 1976-07-01']
Text: Ahmad Kadhim Assad was born on the 01-07-1976.
Subject: Ahmad Kadhim Assad
Predicate: birthDate
Object: 1976-07-01

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ birthDate __object__ 1976-07-01']
Text: Ahmad Kadhim Assad was born on the 1st July 1976.
Subject: Ahmad Kadhim Assad
Predicate: birthDate
Object: 1976-07-01

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ birthDate __object__ 1976-07-01']
Text: Ahmad Kadhim Assad was born on 1st July 1976.
Subject: Ahmad Kadhim Assad
Predicate: birthDate
Object: 1976-07-01

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Jaish SC (Syria)']
Text: Ahmad Kadhim Assad plays for Al-Jaish SC in Syria.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al-Jaish SC (Syria)

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Jaish SC (Syria)']
Text: Ahmad Kadhim Assad plays for the Syrian club Al Jaish SC.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al-Jaish SC (Syria)

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Jaish SC (Syria)']
Text: Ahmad Kadhim Assad's club is Al-Jaish SC (Syria).
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al-Jaish SC (Syria)

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Naft']
Text: Ahmad Kadhim Assad is in the Al-Naft club.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al-Naft

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Naft']
Text: Ahmad Kadhim Assad's club is Al-Naft.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al-Naft

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Naft']
Text: Ahmad Kadhim Assad plays for Al-Naft.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al-Naft

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Quwa Al-Jawiya']
Text: Ahmad Kadhim Assad is in the Al-Quwa Al-Jawiya club.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al-Quwa Al-Jawiya

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Quwa Al-Jawiya']
Text: Ahmad Kadhim Assad played for the club Al-Quwa Al-Jawiya.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al-Quwa Al-Jawiya

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Quwa Al-Jawiya']
Text: Ahmad Kadhim Assad plays for Al-Quwa Al-Jawiya.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al-Quwa Al-Jawiya

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Talaba SC']
Text: Ahmad Kadhim Assad plays for Al Talaba SC.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al-Talaba SC

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Talaba SC']
Text: Ahmad Kadhim Assad plays for Al-Talaba SC.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al-Talaba SC

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Talaba SC']
Text: Ahmad Kadhim Assad is a member of Al Talaba SC.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al-Talaba SC

Triple: ["__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Zawra'a SC"]
Text: Ahmad Kadhim Assad's club is Al-Zawra'a SC.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al-Zawra'a SC

Triple: ["__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al-Zawra'a SC"]
Text: Ahmad Kadhim Assad plays for Al-Zawra'a SC.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al-Zawra'a SC

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al Shorta SC']
Text: Ahmad Kadhim Assad's club is Al Shorta SC.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al Shorta SC

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al Shorta SC']
Text: Ahmad Kadhim Assad plays for Al Shorta SC.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al Shorta SC

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Al Shorta SC']
Text: Ahmad Kadhim Assad played for the club Al Shorta SC.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Al Shorta SC

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Esteghlal Ahvaz F.C.']
Text: Ahmad Kadhim Assad played for Esteghlal Ahvaz F.C.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Esteghlal Ahvaz F.C.

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Esteghlal Ahvaz F.C.']
Text: Ahmad Kadhim Assad's club is Esteghlal Ahvaz F C.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Esteghlal Ahvaz F.C.

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Esteghlal Ahvaz F.C.']
Text: Ahmad Kadhim Assad is part of the Esteghlal Ahvaz F.C.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Esteghlal Ahvaz F.C.

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Steel Azin F.C.']
Text: Ahmad Kadhim Assad's club is Steel Azin F.C.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Steel Azin F.C.

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Steel Azin F.C.']
Text: Ahmad Kadhim Assad plays for Steel Azin F.C.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Steel Azin F.C.

Triple: ['__subject__ Ahmad Kadhim Assad __predicate__ club __object__ Steel Azin F.C.']
Text: Ahmad Kadhim Assad played for Steel Azin F.C.
Subject: Ahmad Kadhim Assad
Predicate: club
Object: Steel Azin F.C.

Triple: ['__subject__ Akeem Adams __predicate__ birthPlace __object__ Point Fortin, Trinidad and Tobago']
Text: Akeem Adams' birthplace was Point Fortin, Trinidad and Tobago.
Subject: Akeem Adams
Predicate: birthPlace
Object: Point Fortin, Trinidad and Tobago

Triple: ['__subject__ Akeem Adams __predicate__ birthPlace __object__ Point Fortin, Trinidad and Tobago']
Text: Akeem Adams was born in Point Fortin, Trinidad and Tobago.
Subject: Akeem Adams
Predicate: birthPlace
Object: Point Fortin, Trinidad and Tobago

Triple: ['__subject__ Akeem Adams __predicate__ birthPlace __object__ Point Fortin, Trinidad and Tobago']
Text: Akeem Adams was born in Point Fortin, in Trinidad and Tobago.
Subject: Akeem Adams
Predicate: birthPlace
Object: Point Fortin, Trinidad and Tobago

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ Central F.C.']
Text: Akeem Adams' club is Central FC.
Subject: Akeem Adams
Predicate: club
Object: Central F.C.

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ Central F.C.']
Text: Akeem Adams' club is Central F.C.
Subject: Akeem Adams
Predicate: club
Object: Central F.C.

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ Central F.C.']
Text: Akeem Adams plays for Central F.C.
Subject: Akeem Adams
Predicate: club
Object: Central F.C.

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC']
Text: Akeem Adams club is Ferencvarosi TC.
Subject: Akeem Adams
Predicate: club
Object: Ferencvárosi TC

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ Ferencvárosi TC']
Text: Akeem Adams plays for Ferencvarosi TC.
Subject: Akeem Adams
Predicate: club
Object: Ferencvárosi TC

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ T&TEC Sports Club']
Text: Akeem Adams plays for T&TEC Sports Club.
Subject: Akeem Adams
Predicate: club
Object: T&TEC Sports Club

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ T&TEC Sports Club']
Text: Akeem Adams plays for the T&TEC Sports Club.
Subject: Akeem Adams
Predicate: club
Object: T&TEC Sports Club

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ T&TEC Sports Club']
Text: Akeem Adams played for the club T&TEC Sports Club.
Subject: Akeem Adams
Predicate: club
Object: T&TEC Sports Club

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ Trinidad and Tobago national football team']
Text: Akeem Adams plays for the Trinidad and Tobago national football team.
Subject: Akeem Adams
Predicate: club
Object: Trinidad and Tobago national football team

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ Trinidad and Tobago national under-17 football team']
Text: Akeem Adams's club is the Trinidad and Tobago national under 17 football team.
Subject: Akeem Adams
Predicate: club
Object: Trinidad and Tobago national under-17 football team

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ Trinidad and Tobago national under-17 football team']
Text: Akeem Adams played for the Trinidad and Tobago national under-17 football team.
Subject: Akeem Adams
Predicate: club
Object: Trinidad and Tobago national under-17 football team

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ Trinidad and Tobago national under-17 football team']
Text: Akeem Adams once played for the Trinidad and Tobago national under-17 football team.
Subject: Akeem Adams
Predicate: club
Object: Trinidad and Tobago national under-17 football team

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ Trinidad and Tobago national under-20 football team']
Text: Akeem Adams played in the Trinidad and Tobago national under-20 football team.
Subject: Akeem Adams
Predicate: club
Object: Trinidad and Tobago national under-20 football team

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ Trinidad and Tobago national under-20 football team']
Text: Akeem Adams played football for the Trinidad and Tobago national under 20 team.
Subject: Akeem Adams
Predicate: club
Object: Trinidad and Tobago national under-20 football team

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ Trinidad and Tobago national under-20 football team']
Text: Akeem Adams plays for the Trinidad and Tobago national under-20 football team.
Subject: Akeem Adams
Predicate: club
Object: Trinidad and Tobago national under-20 football team

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ United Petrotrin F.C.']
Text: Akeem Adams played for United Petrotrin F.C.
Subject: Akeem Adams
Predicate: club
Object: United Petrotrin F.C.

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ United Petrotrin F.C.']
Text: Akeem Adams is a member of the United Petrotrin F.C. club.
Subject: Akeem Adams
Predicate: club
Object: United Petrotrin F.C.

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ W Connection F.C.']
Text: Akeem Adams is in the W Connection FC club.
Subject: Akeem Adams
Predicate: club
Object: W Connection F.C.

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ W Connection F.C.']
Text: Akeem Adams plays for W Connection F.C.
Subject: Akeem Adams
Predicate: club
Object: W Connection F.C.

Triple: ['__subject__ Akeem Adams __predicate__ club __object__ W Connection F.C.']
Text: Akeem Adams played for W Connection F.C.
Subject: Akeem Adams
Predicate: club
Object: W Connection F.C.

Triple: ['__subject__ Akeem Adams __predicate__ deathPlace __object__ Budapest']
Text: Budapest is the death place of Akeem Adams.
Subject: Akeem Adams
Predicate: deathPlace
Object: Budapest

Triple: ['__subject__ Akeem Adams __predicate__ deathPlace __object__ Budapest']
Text: Akeem Adams died in Budapest.
Subject: Akeem Adams
Predicate: deathPlace
Object: Budapest

Triple: ['__subject__ Akeem Ayers __predicate__ activeYearsStartYear __object__ 2011']
Text: Akeem Ayers started his career in 2011.
Subject: Akeem Ayers
Predicate: activeYearsStartYear
Object: 2011

Triple: ['__subject__ Akeem Ayers __predicate__ activeYearsStartYear __object__ 2011']
Text: Akeem Ayers has been active since 2011.
Subject: Akeem Ayers
Predicate: activeYearsStartYear
Object: 2011

Triple: ['__subject__ Akeem Ayers __predicate__ birthDate __object__ 1989-07-10']
Text: Akeem Ayers was born July 10th, 1989.
Subject: Akeem Ayers
Predicate: birthDate
Object: 1989-07-10

Triple: ['__subject__ Akeem Ayers __predicate__ birthDate __object__ 1989-07-10']
Text: Akeem Ayers was born on 10th July 1989.
Subject: Akeem Ayers
Predicate: birthDate
Object: 1989-07-10

Triple: ['__subject__ Akeem Ayers __predicate__ birthPlace __object__ Raleigh, North Carolina']
Text: Akeem Ayers birth place is Raleigh, North Carolina.
Subject: Akeem Ayers
Predicate: birthPlace
Object: Raleigh, North Carolina

Triple: ['__subject__ Akeem Ayers __predicate__ birthPlace __object__ Raleigh, North Carolina']
Text: Akeem Ayers was born in Raleigh, North Carolina.
Subject: Akeem Ayers
Predicate: birthPlace
Object: Raleigh, North Carolina

Triple: ['__subject__ Akeem Ayers __predicate__ birthPlace __object__ Raleigh, North Carolina']
Text: Akeem Ayers was born in Raleigh North Carolina.
Subject: Akeem Ayers
Predicate: birthPlace
Object: Raleigh, North Carolina

Triple: ['__subject__ Akeem Ayers __predicate__ birthYear __object__ 1989']
Text: Akeem Ayers was born in 1989.
Subject: Akeem Ayers
Predicate: birthYear
Object: 1989

Triple: ['__subject__ Akeem Ayers __predicate__ currentteam __object__ Los Angeles Rams']
Text: The current team of Akeem Ayers is the Los Angeles Rams.
Subject: Akeem Ayers
Predicate: currentteam
Object: Los Angeles Rams

Triple: ['__subject__ Akeem Ayers __predicate__ currentteam __object__ Los Angeles Rams']
Text: Akeem Ayers' current team is "Los Angeles Rams".
Subject: Akeem Ayers
Predicate: currentteam
Object: Los Angeles Rams

Triple: ['__subject__ Akeem Ayers __predicate__ debutTeam __object__ Tennessee Titans']
Text: Akeem Ayers made his debut for the Tennessee Titans.
Subject: Akeem Ayers
Predicate: debutTeam
Object: Tennessee Titans

Triple: ['__subject__ Akeem Ayers __predicate__ debutTeam __object__ Tennessee Titans']
Text: The debut team of Akeem Ayers was the Tennessee Titans.
Subject: Akeem Ayers
Predicate: debutTeam
Object: Tennessee Titans

Triple: ['__subject__ Akeem Ayers __predicate__ draftPick __object__ 39']
Text: Akeem Ayers was number 39 in the draft pick.
Subject: Akeem Ayers
Predicate: draftPick
Object: 39

Triple: ['__subject__ Akeem Ayers __predicate__ draftPick __object__ 39']
Text: Akeem Ayers draft pick is 39.
Subject: Akeem Ayers
Predicate: draftPick
Object: 39

Triple: ['__subject__ Akeem Ayers __predicate__ draftRound __object__ 2']
Text: Akeem Ayers was in draft round 2.
Subject: Akeem Ayers
Predicate: draftRound
Object: 2

Triple: ['__subject__ Akeem Ayers __predicate__ draftRound __object__ 2']
Text: Akeem Ayers' draft round was 2.
Subject: Akeem Ayers
Predicate: draftRound
Object: 2

Triple: ['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams']
Text: Akeem Ayers' former team was the Los Angeles Rams.
Subject: Akeem Ayers
Predicate: formerTeam
Object: Los Angeles Rams

Triple: ['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams']
Text: Akeem Ayers former team is the Los Angeles Rams.
Subject: Akeem Ayers
Predicate: formerTeam
Object: Los Angeles Rams

Triple: ['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Los Angeles Rams']
Text: Akeem Ayers used to play for Los Angeles Rams.
Subject: Akeem Ayers
Predicate: formerTeam
Object: Los Angeles Rams

Triple: ['__subject__ Akeem Ayers __predicate__ formerTeam __object__ New England Patriots']
Text: Akeem Ayers's former team is the New England Patriots.
Subject: Akeem Ayers
Predicate: formerTeam
Object: New England Patriots

Triple: ['__subject__ Akeem Ayers __predicate__ formerTeam __object__ New England Patriots']
Text: The New England Patriots are a former team of the player Akeem Ayers.
Subject: Akeem Ayers
Predicate: formerTeam
Object: New England Patriots

Triple: ['__subject__ Akeem Ayers __predicate__ formerTeam __object__ New England Patriots']
Text: The former team of Akeem Ayers was New England Patriots.
Subject: Akeem Ayers
Predicate: formerTeam
Object: New England Patriots

Triple: ['__subject__ Akeem Ayers __predicate__ formerTeam __object__ St. Louis Rams']
Text: Akeem Ayers used to play for the St. Louis Rams.
Subject: Akeem Ayers
Predicate: formerTeam
Object: St. Louis Rams

Triple: ['__subject__ Akeem Ayers __predicate__ formerTeam __object__ St. Louis Rams']
Text: St Louis Rams is the former team of Akeem Ayers.
Subject: Akeem Ayers
Predicate: formerTeam
Object: St. Louis Rams

Triple: ['__subject__ Akeem Ayers __predicate__ formerTeam __object__ St. Louis Rams']
Text: Akeem Ayers' former team is St. Louis Rams.
Subject: Akeem Ayers
Predicate: formerTeam
Object: St. Louis Rams

Triple: ['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Tennessee Titans']
Text: Akeem Ayers used to play for Tennessee Titans.
Subject: Akeem Ayers
Predicate: formerTeam
Object: Tennessee Titans

Triple: ['__subject__ Akeem Ayers __predicate__ formerTeam __object__ Tennessee Titans']
Text: Akeem Ayers' former team was Tennessee Titans.
Subject: Akeem Ayers
Predicate: formerTeam
Object: Tennessee Titans

Triple: ['__subject__ Akeem Dent __predicate__ birthDate __object__ 1987-09-27']
Text: Akeem Dent was born on 27/09/1987.
Subject: Akeem Dent
Predicate: birthDate
Object: 1987-09-27

Triple: ['__subject__ Akeem Dent __predicate__ birthDate __object__ 1987-09-27']
Text: Akeem Dent was born on the 27th September 1987.
Subject: Akeem Dent
Predicate: birthDate
Object: 1987-09-27

Triple: ['__subject__ Akeem Dent __predicate__ birthDate __object__ 1987-09-27']
Text: Akeem Dent's birthday is 09/27/1987.
Subject: Akeem Dent
Predicate: birthDate
Object: 1987-09-27

Triple: ['__subject__ Akeem Dent __predicate__ birthPlace __object__ Atlanta, Georgia']
Text: Akeem Dent's place of birth is Atlanta, Georgia.
Subject: Akeem Dent
Predicate: birthPlace
Object: Atlanta, Georgia

Triple: ['__subject__ Akeem Dent __predicate__ birthPlace __object__ Atlanta, Georgia']
Text: Akeem Dent was born in Atlanta Georgia.
Subject: Akeem Dent
Predicate: birthPlace
Object: Atlanta, Georgia

Triple: ['__subject__ Akeem Dent __predicate__ birthPlace __object__ Atlanta']
Text: Akeem Dent was born in Atlanta.
Subject: Akeem Dent
Predicate: birthPlace
Object: Atlanta

Triple: ['__subject__ Akeem Dent __predicate__ birthPlace __object__ Atlanta']
Text: Atlanta is the birth place of Akeem Dent.
Subject: Akeem Dent
Predicate: birthPlace
Object: Atlanta

Triple: ['__subject__ Akeem Dent __predicate__ birthYear __object__ 1987']
Text: Akeem Dent was born in the Year 1987.
Subject: Akeem Dent
Predicate: birthYear
Object: 1987

Triple: ['__subject__ Akeem Dent __predicate__ birthYear __object__ 1987']
Text: Akeem Dent was born in 1987.
Subject: Akeem Dent
Predicate: birthYear
Object: 1987

Triple: ['__subject__ Akeem Dent __predicate__ club __object__ Houston Texans']
Text: Akeem Dent's club is the Houston Texans.
Subject: Akeem Dent
Predicate: club
Object: Houston Texans

Triple: ['__subject__ Akeem Dent __predicate__ club __object__ Houston Texans']
Text: Akeem Dent plays for the Houston Texans club.
Subject: Akeem Dent
Predicate: club
Object: Houston Texans

Triple: ['__subject__ Akeem Dent __predicate__ debutTeam __object__ Atlanta Falcons']
Text: Akeem Dent's first team were the Atlanta Falcons.
Subject: Akeem Dent
Predicate: debutTeam
Object: Atlanta Falcons

Triple: ['__subject__ Akeem Dent __predicate__ debutTeam __object__ Atlanta Falcons']
Text: Akeem Dent debuted with the Atlanta Falcons.
Subject: Akeem Dent
Predicate: debutTeam
Object: Atlanta Falcons

Triple: ['__subject__ Akeem Dent __predicate__ debutTeam __object__ Atlanta Falcons']
Text: Akeem Dent's debut team was the Atlanta Falcons.
Subject: Akeem Dent
Predicate: debutTeam
Object: Atlanta Falcons

Triple: ['__subject__ Akeem Dent __predicate__ formerTeam __object__ Houston Texans']
Text: Akeem Dent used to play for Houston Texans.
Subject: Akeem Dent
Predicate: formerTeam
Object: Houston Texans

Triple: ['__subject__ Akeem Dent __predicate__ formerTeam __object__ Houston Texans']
Text: Akeem Dent's former team was the Houston Texans.
Subject: Akeem Dent
Predicate: formerTeam
Object: Houston Texans

Triple: ['__subject__ Akeem Dent __predicate__ playerNumber __object__ 50']
Text: Akeem Dent is a player number 50.
Subject: Akeem Dent
Predicate: playerNumber
Object: 50

Triple: ['__subject__ Akeem Dent __predicate__ playerNumber __object__ 50']
Text: Number "50" is Akeem Dent's player number.
Subject: Akeem Dent
Predicate: playerNumber
Object: 50

Triple: ['__subject__ Akeem Dent __predicate__ playerNumber __object__ 50']
Text: Akeem Dent's player Number is 50.
Subject: Akeem Dent
Predicate: playerNumber
Object: 50

Triple: ['__subject__ Akeem Dent __predicate__ position __object__ Linebacker']
Text: Akeem Dent's position is a linebacker.
Subject: Akeem Dent
Predicate: position
Object: Linebacker

Triple: ['__subject__ Akeem Dent __predicate__ position __object__ Linebacker']
Text: Akeem Dent is a linebacker.
Subject: Akeem Dent
Predicate: position
Object: Linebacker

Triple: ['__subject__ Akeem Dent __predicate__ position __object__ Linebacker']
Text: Akeem Dent's position is linebacker.
Subject: Akeem Dent
Predicate: position
Object: Linebacker

Triple: ['__subject__ Akeem Priestley __predicate__ birthPlace __object__ Jamaica']
Text: Akeem Priestley's birth place is Jamaica.
Subject: Akeem Priestley
Predicate: birthPlace
Object: Jamaica

Triple: ['__subject__ Akeem Priestley __predicate__ birthPlace __object__ Jamaica']
Text: Akeem Priestley was born in Jamaica.
Subject: Akeem Priestley
Predicate: birthPlace
Object: Jamaica

Triple: ['__subject__ Akeem Priestley __predicate__ birthPlace __object__ Kingston, Jamaica']
Text: Akeem Priestley's birth place was Kingston in Jamaica.
Subject: Akeem Priestley
Predicate: birthPlace
Object: Kingston, Jamaica

Triple: ['__subject__ Akeem Priestley __predicate__ birthPlace __object__ Kingston, Jamaica']
Text: Akeem Priestley was born in Kingston Jamaica.
Subject: Akeem Priestley
Predicate: birthPlace
Object: Kingston, Jamaica

Triple: ['__subject__ Akeem Priestley __predicate__ birthPlace __object__ Kingston, Jamaica']
Text: Akeem Priestley was born in Kingston, Jamaica.
Subject: Akeem Priestley
Predicate: birthPlace
Object: Kingston, Jamaica

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Antigua GFC']
Text: Akeem Priestley played for Antigua GFC.
Subject: Akeem Priestley
Predicate: club
Object: Antigua GFC

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Antigua GFC']
Text: Akeem Priestley plays for Antigua GFC.
Subject: Akeem Priestley
Predicate: club
Object: Antigua GFC

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Dayton Dutch Lions']
Text: Akeem Priestley's club is Dayton Dutch Lions.
Subject: Akeem Priestley
Predicate: club
Object: Dayton Dutch Lions

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Dayton Dutch Lions']
Text: Akeem Priestley plays for Dayton Dutch Lions.
Subject: Akeem Priestley
Predicate: club
Object: Dayton Dutch Lions

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.']
Text: Akeem Priestley's club is Harbour View FC.
Subject: Akeem Priestley
Predicate: club
Object: Harbour View F.C.

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.']
Text: Akeem Priestley is a player for the Harbour View F.C.
Subject: Akeem Priestley
Predicate: club
Object: Harbour View F.C.

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Harbour View F.C.']
Text: Akeem Priestley's club is Harbour View F.C.
Subject: Akeem Priestley
Predicate: club
Object: Harbour View F.C.

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Jacksonville Dolphins']
Text: Akeem Priestley plays for Jacksonville Dolphins.
Subject: Akeem Priestley
Predicate: club
Object: Jacksonville Dolphins

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Jacksonville Dolphins']
Text: Akeem Priestley is in the Jacksonville Dolphins club.
Subject: Akeem Priestley
Predicate: club
Object: Jacksonville Dolphins

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Jamaica national football team']
Text: Akeem Priestley represented the Jamaica national football team.
Subject: Akeem Priestley
Predicate: club
Object: Jamaica national football team

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Jamaica national football team']
Text: Akeem Priestley is playing for the Jamaican national football team.
Subject: Akeem Priestley
Predicate: club
Object: Jamaica national football team

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Jamaica national football team']
Text: Akeem Priestley plays for the Jamaica national football team.
Subject: Akeem Priestley
Predicate: club
Object: Jamaica national football team

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Orange County Blues FC']
Text: Akeem Priestley plays for Orange County Blues FC.
Subject: Akeem Priestley
Predicate: club
Object: Orange County Blues FC

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Orange County Blues FC']
Text: Akeem Priestley is connected to the Orange County Blues Football Club.
Subject: Akeem Priestley
Predicate: club
Object: Orange County Blues FC

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Orange County Blues FC']
Text: Akeem Priestley plays for the Orange County Blues FC.
Subject: Akeem Priestley
Predicate: club
Object: Orange County Blues FC

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ RoPS']
Text: Akeem Priestley’s club is RoPS.
Subject: Akeem Priestley
Predicate: club
Object: RoPS

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ RoPS']
Text: Akeem Priestley played for club RoPS.
Subject: Akeem Priestley
Predicate: club
Object: RoPS

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Sheikh Russel KC']
Text: Akeem Priestley played for Sheikh Russel KC.
Subject: Akeem Priestley
Predicate: club
Object: Sheikh Russel KC

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Sheikh Russel KC']
Text: Akeem Priestley plays for Sheikh Russel KC.
Subject: Akeem Priestley
Predicate: club
Object: Sheikh Russel KC

Triple: ['__subject__ Akeem Priestley __predicate__ club __object__ Sheikh Russel KC']
Text: Akeem Priestley played for the club Sheikh Russel KC.
Subject: Akeem Priestley
Predicate: club
Object: Sheikh Russel KC

Triple: ['__subject__ Akeem Priestley __predicate__ youthclub __object__ Connecticut Huskies']
Text: Akeem Priestley's youth club was the Connecticut Huskies.
Subject: Akeem Priestley
Predicate: youthclub
Object: Connecticut Huskies

Triple: ['__subject__ Akeem Priestley __predicate__ youthclub __object__ Connecticut Huskies']
Text: Akeem Priestley played for the youth club Connecticut Huskies.
Subject: Akeem Priestley
Predicate: youthclub
Object: Connecticut Huskies

Triple: ['__subject__ Akeem Priestley __predicate__ youthclub __object__ Connecticut Huskies']
Text: Akeem Priestley plays for the Connecticut Huskies youth team.
Subject: Akeem Priestley
Predicate: youthclub
Object: Connecticut Huskies

Triple: ['__subject__ Akeem Priestley __predicate__ youthclub __object__ Harbour View F.C.']
Text: Akeem Priestley's youth club was Harbour View F.C.
Subject: Akeem Priestley
Predicate: youthclub
Object: Harbour View F.C.

Triple: ['__subject__ Akeem Priestley __predicate__ youthclub __object__ Harbour View F.C.']
Text: Akeem Priestley is in the Harbour View FC youth club.
Subject: Akeem Priestley
Predicate: youthclub
Object: Harbour View F.C.

Triple: ['__subject__ Al-Khor Sports Club __predicate__ ground __object__ Al Khor']
Text: Al-Khor Sports Club is located in Al-Khor.
Subject: Al-Khor Sports Club
Predicate: ground
Object: Al Khor

Triple: ['__subject__ Al-Khor Sports Club __predicate__ ground __object__ Al Khor']
Text: Al-Khor sports club ground is in Al Khor.
Subject: Al-Khor Sports Club
Predicate: ground
Object: Al Khor

Triple: ['__subject__ Al-Khor Sports Club __predicate__ position __object__ Qatar Stars League']
Text: Al Khor Sports Club plays in the Qatar Stars League.
Subject: Al-Khor Sports Club
Predicate: position
Object: Qatar Stars League

Triple: ['__subject__ Al-Khor Sports Club __predicate__ position __object__ Qatar Stars League']
Text: Al-Khor Sports Club's position is in the Qatar Stars League.
Subject: Al-Khor Sports Club
Predicate: position
Object: Qatar Stars League

Triple: ['__subject__ Al-Wakrah Sport Club __predicate__ league __object__ Qatar Stars League']
Text: Al-Wakrah Sport Club is in the Qatar Stars League.
Subject: Al-Wakrah Sport Club
Predicate: league
Object: Qatar Stars League

Triple: ['__subject__ Al-Wakrah Sport Club __predicate__ league __object__ Qatar Stars League']
Text: The Al Wakrah Sport Club is in the Qatar Stars League.
Subject: Al-Wakrah Sport Club
Predicate: league
Object: Qatar Stars League

Triple: ['__subject__ Al-Wakrah Sport Club __predicate__ league __object__ Qatar Stars League']
Text: Al-Wakrah Sport Club play in the Qatar Stars League.
Subject: Al-Wakrah Sport Club
Predicate: league
Object: Qatar Stars League

Triple: ['__subject__ Al-Wakrah Sport Club __predicate__ position __object__ Qatar Stars League']
Text: Al-Wakrah Sport Club position is in the Qatar Stars League.
Subject: Al-Wakrah Sport Club
Predicate: position
Object: Qatar Stars League

Triple: ['__subject__ Al-Wakrah Sport Club __predicate__ position __object__ Qatar Stars League']
Text: Al-Wakrah sport club plays in the Qatar Stars League.
Subject: Al-Wakrah Sport Club
Predicate: position
Object: Qatar Stars League

Triple: ['__subject__ Al-Wakrah Sport Club __predicate__ position __object__ Qatar Stars League']
Text: Al Wakrah Sport Club play in the Qatar Stars league.
Subject: Al-Wakrah Sport Club
Predicate: position
Object: Qatar Stars League

Triple: ['__subject__ Al Kharaitiyat SC __predicate__ ground __object__ Al Khor']
Text: Al Kharaitiyat SC's ground is Al Khor.
Subject: Al Kharaitiyat SC
Predicate: ground
Object: Al Khor

Triple: ['__subject__ Al Kharaitiyat SC __predicate__ ground __object__ Al Khor']
Text: Al Kharaitiyat is located in Al Khor.
Subject: Al Kharaitiyat SC
Predicate: ground
Object: Al Khor

Triple: ['__subject__ Al Kharaitiyat SC __predicate__ ground __object__ Al Khor']
Text: Al Khor is the home ground of Al Kharaitiyat SC.
Subject: Al Kharaitiyat SC
Predicate: ground
Object: Al Khor

Triple: ['__subject__ Al Kharaitiyat SC __predicate__ league __object__ Qatar Stars League']
Text: The league that Al Kharaitiyat SC play in is the Qatar Stars League.
Subject: Al Kharaitiyat SC
Predicate: league
Object: Qatar Stars League

Triple: ['__subject__ Al Kharaitiyat SC __predicate__ league __object__ Qatar Stars League']
Text: Al Kharaitiyat SC play in the Qatar Stars League.
Subject: Al Kharaitiyat SC
Predicate: league
Object: Qatar Stars League

Triple: ['__subject__ Al Kharaitiyat SC __predicate__ league __object__ Qatar Stars League']
Text: Al Kharaitiyat SC is in the Qatar Stars League.
Subject: Al Kharaitiyat SC
Predicate: league
Object: Qatar Stars League

Triple: ['__subject__ Al Kharaitiyat SC __predicate__ manager __object__ Amar Osim']
Text: Amar Osim is the manager of Al Kharaitiyat SC.
Subject: Al Kharaitiyat SC
Predicate: manager
Object: Amar Osim

Triple: ['__subject__ Al Kharaitiyat SC __predicate__ manager __object__ Amar Osim']
Text: The manager of Al Kharaitiyat SC is Amar Osim.
Subject: Al Kharaitiyat SC
Predicate: manager
Object: Amar Osim

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ birthPlace __object__ Iraq']
Text: Iraq is the birth place of Alaa Abdul Zahra.
Subject: Alaa Abdul-Zahra
Predicate: birthPlace
Object: Iraq

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ birthPlace __object__ Iraq']
Text: Alaa Abdul Zahra was born in Iraq.
Subject: Alaa Abdul-Zahra
Predicate: birthPlace
Object: Iraq

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Khor Sports Club']
Text: Alaa Abdul-Zahra is in the Al-Khor Sports Club.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Al-Khor Sports Club

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Khor Sports Club']
Text: Alaa Abdul Zahra plays for Al-Khor Sports Club.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Al-Khor Sports Club

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Merrikh SC']
Text: Alaa Abdul Zahra has played for Al Merrikh SC.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Al-Merrikh SC

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Merrikh SC']
Text: Alaa Abdul-Zahra plays for Al-Merrikh SC.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Al-Merrikh SC

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Merrikh SC']
Text: Alaa Abdul Zahra plays for Al-Merrikh SC.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Al-Merrikh SC

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Wakrah Sport Club']
Text: Alaa Abdul-Zahra plays for the Al-Wakrah Sport Club.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Al-Wakrah Sport Club

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Wakrah Sport Club']
Text: Alaa Abdul-Zahra plays for Al-Wakrah Sport Club.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Al-Wakrah Sport Club

Triple: ["__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Zawra'a SC"]
Text: Alaa Abdul Zahra played for the club Al-Zawra'a SC.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Al-Zawra'a SC

Triple: ["__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Zawra'a SC"]
Text: Alaa Abdul-Zahra's club is Al-Zawra'a SC.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Al-Zawra'a SC

Triple: ["__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al-Zawra'a SC"]
Text: Alaa Abdul-Zahra played for Al-Zawra'a SC.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Al-Zawra'a SC

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Kharaitiyat SC']
Text: Alaa Abdul Zahra's club is AL Kharaitiyat SC.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Al Kharaitiyat SC

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Kharaitiyat SC']
Text: Alaa Abdul Zahra plays for Al Kharaitiyat SC.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Al Kharaitiyat SC

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Shorta SC']
Text: Alaa Abdul-Zahra's club is Al Shorta SC.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Al Shorta SC

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Al Shorta SC']
Text: Alaa Abdul Zahra plays for Al Shorta SC.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Al Shorta SC

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Duhok SC']
Text: Alaa Abdul-Zahra's club is Duhok SC.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Duhok SC

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Duhok SC']
Text: Alaa Abdul Zahra played for the club Duhok SC.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Duhok SC

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Duhok SC']
Text: Alaa Abdul Zahra played for Duhok SC.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Duhok SC

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Iraq national under-20 football team']
Text: Alaa Abdul Zahra plays for the Iraq national under 20 football team.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Iraq national under-20 football team

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Iraq national under-20 football team']
Text: Alaa Abdul-Zahra plays for the Iraq national under-20 football team.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Iraq national under-20 football team

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Iraq national under-23 football team']
Text: Alaa Abdul Zahra plays for the Iraq national under 23 football team.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Iraq national under-23 football team

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Iraq national under-23 football team']
Text: Alaa Abdul-Zahra plays for the Iraq national under-23 football team.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Iraq national under-23 football team

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Shabab Al-Ordon Club']
Text: Alaa Abdul-Zahra's club is Shabab Al-Ordon Club.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Shabab Al-Ordon Club

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Tractor Sazi F.C.']
Text: Alaa Abdul-Zahra's club is Tractor Sazi FC.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Tractor Sazi F.C.

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ club __object__ Tractor Sazi F.C.']
Text: Alaa Abdul Zahra played for the club Tractor Sazi F.C.
Subject: Alaa Abdul-Zahra
Predicate: club
Object: Tractor Sazi F.C.

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ position __object__ Forward (football)']
Text: Alaa Abdul Zahra's football position is Forward.
Subject: Alaa Abdul-Zahra
Predicate: position
Object: Forward (football)

Triple: ['__subject__ Alaa Abdul-Zahra __predicate__ position __object__ Forward (football)']
Text: The footballer Alaa Abdul Zahra is a forward.
Subject: Alaa Abdul-Zahra
Predicate: position
Object: Forward (football)

Triple: ['__subject__ Alan Martin (footballer) __predicate__ birthDate __object__ 1989-01-01']
Text: Alan Martin (footballer) was born on 01/01/1989.
Subject: Alan Martin (footballer)
Predicate: birthDate
Object: 1989-01-01

Triple: ['__subject__ Alan Martin (footballer) __predicate__ birthDate __object__ 1989-01-01']
Text: Footballer, Alan Martin was born on January 1st 1989.
Subject: Alan Martin (footballer)
Predicate: birthDate
Object: 1989-01-01

Triple: ['__subject__ Alan Martin (footballer) __predicate__ birthDate __object__ 1989-01-01']
Text: Alan Martin (footballer) was born on the 1st January 1989.
Subject: Alan Martin (footballer)
Predicate: birthDate
Object: 1989-01-01

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Aldershot Town F.C.']
Text: Alan Martin is a footballer for Aldershot Town FC.
Subject: Alan Martin (footballer)
Predicate: club
Object: Aldershot Town F.C.

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Aldershot Town F.C.']
Text: The footballer Alan Martin plays for Aldershot Town F.C.
Subject: Alan Martin (footballer)
Predicate: club
Object: Aldershot Town F.C.

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Ayr United F.C.']
Text: Alan Martin is a footballer for Ayr United FC.
Subject: Alan Martin (footballer)
Predicate: club
Object: Ayr United F.C.

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Ayr United F.C.']
Text: Alan Martin, the footballer, plays for the club, Ayr United F.C.
Subject: Alan Martin (footballer)
Predicate: club
Object: Ayr United F.C.

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Ayr United F.C.']
Text: The footballer Alan Martin plays for Ayr United F.C.
Subject: Alan Martin (footballer)
Predicate: club
Object: Ayr United F.C.

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Barrow A.F.C.']
Text: The footballer Alan Martin plays for Barrow AFC.
Subject: Alan Martin (footballer)
Predicate: club
Object: Barrow A.F.C.

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Barrow A.F.C.']
Text: Alan Martin plays football for Barrow A.F.C.
Subject: Alan Martin (footballer)
Predicate: club
Object: Barrow A.F.C.

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Clyde F.C.']
Text: Alan Martin is a footballer for the Clyde FC club.
Subject: Alan Martin (footballer)
Predicate: club
Object: Clyde F.C.

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Clyde F.C.']
Text: Alan Martin played football for Clyde F.C.
Subject: Alan Martin (footballer)
Predicate: club
Object: Clyde F.C.

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Leeds United F.C.']
Text: Alan Martin is a footballer for Leeds United FC.
Subject: Alan Martin (footballer)
Predicate: club
Object: Leeds United F.C.

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Leeds United F.C.']
Text: Alan Martin played football for Leeds United F.C.
Subject: Alan Martin (footballer)
Predicate: club
Object: Leeds United F.C.

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Leeds United F.C.']
Text: The footballer Alan Martin plays for Leeds United F.C.
Subject: Alan Martin (footballer)
Predicate: club
Object: Leeds United F.C.

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Motherwell F.C.']
Text: Alan Martin's football club is Motherwell FC.
Subject: Alan Martin (footballer)
Predicate: club
Object: Motherwell F.C.

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Motherwell F.C.']
Text: Alan Martin played football for Motherwell F.C.
Subject: Alan Martin (footballer)
Predicate: club
Object: Motherwell F.C.

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Motherwell F.C.']
Text: The footballer Alan Martin played for Motherwell Football Club.
Subject: Alan Martin (footballer)
Predicate: club
Object: Motherwell F.C.

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Scotland national under-21 football team']
Text: The footballer Alan Martin plays in the Scottish National under 21 football team.
Subject: Alan Martin (footballer)
Predicate: club
Object: Scotland national under-21 football team

Triple: ['__subject__ Alan Martin (footballer) __predicate__ club __object__ Scotland national under-21 football team']
Text: Footballer, Alan Martin played for the Scotland national under-21 football team.
Subject: Alan Martin (footballer)
Predicate: club
Object: Scotland national under-21 football team

Triple: ['__subject__ Alan Martin (footballer) __predicate__ height __object__ 185.42 (centimetres)']
Text: Footballer, Alan Martin is 185,42 centimetres tall.
Subject: Alan Martin (footballer)
Predicate: height
Object: 185.42 (centimetres)

Triple: ['__subject__ Alan Martin (footballer) __predicate__ height __object__ 185.42 (centimetres)']
Text: The footballer Alan Martin was 185.42 cm tall.
Subject: Alan Martin (footballer)
Predicate: height
Object: 185.42 (centimetres)

Triple: ['__subject__ Alan Martin (footballer) __predicate__ height __object__ 185.42 (centimetres)']
Text: Alan Martin (footballer) is 185.42 centimetres tall.
Subject: Alan Martin (footballer)
Predicate: height
Object: 185.42 (centimetres)

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ birthPlace __object__ Tampere, Finland']
Text: Aleksander Barkov Jr was born in Tampere, Finland.
Subject: Aleksander Barkov, Jr.
Predicate: birthPlace
Object: Tampere, Finland

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ birthPlace __object__ Tampere, Finland']
Text: Aleksander Barkov Jr . was born in Tampere, Finland.
Subject: Aleksander Barkov, Jr.
Predicate: birthPlace
Object: Tampere, Finland

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ birthPlace __object__ Tampere, Finland']
Text: Aleksander Barkov Junior was born in Tampere, Finland.
Subject: Aleksander Barkov, Jr.
Predicate: birthPlace
Object: Tampere, Finland

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ birthPlace __object__ Tampere']
Text: Aleksander Barkov, Jr. was born in Tampere.
Subject: Aleksander Barkov, Jr.
Predicate: birthPlace
Object: Tampere

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ birthPlace __object__ Tampere']
Text: Aleksander Barkov Jr was born in Tampere.
Subject: Aleksander Barkov, Jr.
Predicate: birthPlace
Object: Tampere

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ birthYear __object__ 1995']
Text: Aleksander Barkov, Jr. was born in 1995.
Subject: Aleksander Barkov, Jr.
Predicate: birthYear
Object: 1995

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ birthYear __object__ 1995']
Text: Aleksander Barkov Jr was born in 1995.
Subject: Aleksander Barkov, Jr.
Predicate: birthYear
Object: 1995

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ draftTeam __object__ Florida Panthers']
Text: Aleksander Barkov Jr's draft team is the Florida Panthers.
Subject: Aleksander Barkov, Jr.
Predicate: draftTeam
Object: Florida Panthers

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ draftTeam __object__ Florida Panthers']
Text: Aleksander Barkov Jr's draft team was the Florida Panthers.
Subject: Aleksander Barkov, Jr.
Predicate: draftTeam
Object: Florida Panthers

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ formerTeam __object__ Tappara']
Text: Aleksander Barkov Jr previously played for the team Tappara.
Subject: Aleksander Barkov, Jr.
Predicate: formerTeam
Object: Tappara

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ formerTeam __object__ Tappara']
Text: Tappara is the former team of Aleksander Barkov, Jr.
Subject: Aleksander Barkov, Jr.
Predicate: formerTeam
Object: Tappara

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ formerTeam __object__ Tappara']
Text: Aleksander Barkov, Jr's former team is Tappara.
Subject: Aleksander Barkov, Jr.
Predicate: formerTeam
Object: Tappara

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ position __object__ Centre (ice hockey)']
Text: Aleksander Barkov Jr's position in ice hockey is centre.
Subject: Aleksander Barkov, Jr.
Predicate: position
Object: Centre (ice hockey)

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ position __object__ Centre (ice hockey)']
Text: Aleksander Barkov Jr. is playing as a centre.
Subject: Aleksander Barkov, Jr.
Predicate: position
Object: Centre (ice hockey)

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ position __object__ Centre (ice hockey)']
Text: Ice Hockey player Aleksander Barkov Jr. plays as a Centre.
Subject: Aleksander Barkov, Jr.
Predicate: position
Object: Centre (ice hockey)

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ weight __object__ 96.1632 (kilograms)']
Text: Aleksander Barkov Jr's weight is 96.1632 kg.
Subject: Aleksander Barkov, Jr.
Predicate: weight
Object: 96.1632 (kilograms)

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ weight __object__ 96.1632 (kilograms)']
Text: Aleksander Barkov Jr weighs 96.1632 kilograms.
Subject: Aleksander Barkov, Jr.
Predicate: weight
Object: 96.1632 (kilograms)

Triple: ['__subject__ Aleksander Barkov, Jr. __predicate__ weight __object__ 96.1632 (kilograms)']
Text: Aleksander Barkov Jr's weight is 96.1632 kgs.
Subject: Aleksander Barkov, Jr.
Predicate: weight
Object: 96.1632 (kilograms)

Triple: ['__subject__ Aleksandr Chumakov __predicate__ birthPlace __object__ Moscow']
Text: Aleksandr Chumakov was born in Moscow.
Subject: Aleksandr Chumakov
Predicate: birthPlace
Object: Moscow

Triple: ['__subject__ Aleksandr Chumakov __predicate__ birthPlace __object__ Moscow']
Text: Aleksandr Chumakov's birth place is Moscow.
Subject: Aleksandr Chumakov
Predicate: birthPlace
Object: Moscow

Triple: ['__subject__ Aleksandr Chumakov __predicate__ birthPlace __object__ Moscow']
Text: Aleksandr Chumakov was born in Moscow, Russia.
Subject: Aleksandr Chumakov
Predicate: birthPlace
Object: Moscow

Triple: ['__subject__ Aleksandr Chumakov __predicate__ birthPlace __object__ Soviet Union']
Text: Aleksandr Chumakov was born in the Soviet Union.
Subject: Aleksandr Chumakov
Predicate: birthPlace
Object: Soviet Union

Triple: ['__subject__ Aleksandr Chumakov __predicate__ birthYear __object__ 1948']
Text: Aleksandr Chumakov was born in 1948.
Subject: Aleksandr Chumakov
Predicate: birthYear
Object: 1948

Triple: ['__subject__ Aleksandr Chumakov __predicate__ birthYear __object__ 1948']
Text: Aleksandr Chumakov was born in the year 1948.
Subject: Aleksandr Chumakov
Predicate: birthYear
Object: 1948

Triple: ['__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow']
Text: The club Aleksandr Chumakov plays for is FC Torpedo Moscow.
Subject: Aleksandr Chumakov
Predicate: club
Object: FC Torpedo Moscow

Triple: ['__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow']
Text: Aleksandr Chumakov's club was FC Torpedo Moscow.
Subject: Aleksandr Chumakov
Predicate: club
Object: FC Torpedo Moscow

Triple: ['__subject__ Aleksandr Chumakov __predicate__ club __object__ FC Torpedo Moscow']
Text: Aleksandr Chumakov has played for FC Torpedo Moscow.
Subject: Aleksandr Chumakov
Predicate: club
Object: FC Torpedo Moscow

Triple: ['__subject__ Aleksandr Chumakov __predicate__ club __object__ Soviet Union national football team']
Text: Aleksandr Chumakov plays for the Soviet Union national football team.
Subject: Aleksandr Chumakov
Predicate: club
Object: Soviet Union national football team

Triple: ['__subject__ Aleksandr Chumakov __predicate__ club __object__ Soviet Union national football team']
Text: Aleksandr Chumakov's club is the Soviet Union national football team.
Subject: Aleksandr Chumakov
Predicate: club
Object: Soviet Union national football team

Triple: ['__subject__ Aleksandr Chumakov __predicate__ club __object__ Soviet Union national football team']
Text: Aleksandr Chumakov was a member of the Soviet Union national football team.
Subject: Aleksandr Chumakov
Predicate: club
Object: Soviet Union national football team

Triple: ['__subject__ Aleksandr Chumakov __predicate__ deathPlace __object__ Moscow, Russia']
Text: Aleksandr Chumakov died in Moscow, in Russia.
Subject: Aleksandr Chumakov
Predicate: deathPlace
Object: Moscow, Russia

Triple: ['__subject__ Aleksandr Chumakov __predicate__ deathPlace __object__ Moscow, Russia']
Text: Aleksandr Chumakov died in Moscow, Russia.
Subject: Aleksandr Chumakov
Predicate: deathPlace
Object: Moscow, Russia

Triple: ['__subject__ Aleksandr Chumakov __predicate__ deathPlace __object__ Moscow']
Text: Aleksandr Chumakov died in Moscow.
Subject: Aleksandr Chumakov
Predicate: deathPlace
Object: Moscow

Triple: ['__subject__ Aleksandr Chumakov __predicate__ deathPlace __object__ Moscow']
Text: Aleksandr Chumakov passed away in Moscow.
Subject: Aleksandr Chumakov
Predicate: deathPlace
Object: Moscow

Triple: ['__subject__ Aleksandr Chumakov __predicate__ deathPlace __object__ Russia']
Text: Aleksandr Chumakov died in Russia.
Subject: Aleksandr Chumakov
Predicate: deathPlace
Object: Russia

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Alania Vladikavkaz']
Text: Aleksandr Prudnikov plays for FC Alania Vladikavkaz.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Alania Vladikavkaz

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Anzhi Makhachkala']
Text: Aleksandr Prudnikov plays for FC Anzhi Makhachkala.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Anzhi Makhachkala

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Anzhi Makhachkala']
Text: Aleksandr Prudnikov's club is FC Anzhi Makhachkala.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Anzhi Makhachkala

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Dynamo Moscow']
Text: Aleksandr Prudnikov's club is FC Dynamo Moscow.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Dynamo Moscow

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Dynamo Moscow']
Text: Aleksandr Prudnikov plays for FC Dynamo Moscow.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Dynamo Moscow

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Kuban Krasnodar']
Text: Aleksandr Prudnikov plays for FC Kuban Krasnodar.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Kuban Krasnodar

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Kuban Krasnodar']
Text: Aleksandr Prudnikov plays for the FC Kuban Krasnodar club.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Kuban Krasnodar

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Rubin Kazan']
Text: Aleksandr Prudnikov plays for FC Rubin Kazan.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Rubin Kazan

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Rubin Kazan']
Text: Aleksandr Prudnikov played for FC Rubin Kazan.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Rubin Kazan

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Spartak Moscow']
Text: Aleksandr Prudnikov's club is FC Spartak Moscow.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Spartak Moscow

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Spartak Moscow']
Text: Aleksandr Prudnikov played for FC Spartak Moscow.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Spartak Moscow

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Spartak Moscow']
Text: Aleksandr Prudnikov plays for FC Spartak Moscow.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Spartak Moscow

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Terek Grozny']
Text: Aleksandr Prudnikov plays for FC Terek Grozny.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Terek Grozny

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Terek Grozny']
Text: Aleksandr Prudnikov played for FC Terek Grozny.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Terek Grozny

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Terek Grozny']
Text: Aleksandr Prudnikov is in the FC Terek Grozny club.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Terek Grozny

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Tom Tomsk']
Text: Aleksandr Prudnikov plays for FC Tom Tomsk.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Tom Tomsk

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ FC Tom Tomsk']
Text: Aleksandr Prudnikov's club is FC Tom Tomsk.
Subject: Aleksandr Prudnikov
Predicate: club
Object: FC Tom Tomsk

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ Russia national football B team']
Text: Aleksandr Prudnikov plays for the Russia national football B team.
Subject: Aleksandr Prudnikov
Predicate: club
Object: Russia national football B team

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ Russia national football B team']
Text: Aleksandr Prudnikov has played for the Russia national football B team.
Subject: Aleksandr Prudnikov
Predicate: club
Object: Russia national football B team

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ Russia national football B team']
Text: Aleksandr Prudnikov belongs to the Russia National Football B Team.
Subject: Aleksandr Prudnikov
Predicate: club
Object: Russia national football B team

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ Russia national under-21 football team']
Text: Aleksandr Prudnikov played for the Russia national under 21 football team.
Subject: Aleksandr Prudnikov
Predicate: club
Object: Russia national under-21 football team

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ Russia national under-21 football team']
Text: Aleksandr Prudnikov played for the Russia national under-21 football team.
Subject: Aleksandr Prudnikov
Predicate: club
Object: Russia national under-21 football team

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ club __object__ Sparta Prague']
Text: Aleksandr Prudnikov's club is called Sparta Prague.
Subject: Aleksandr Prudnikov
Predicate: club
Object: Sparta Prague

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ currentclub __object__ FC Amkar Perm']
Text: Aleksandr Prudnikov's current club is FC Amkar Perm.
Subject: Aleksandr Prudnikov
Predicate: currentclub
Object: FC Amkar Perm

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ currentclub __object__ FC Amkar Perm']
Text: Aleksandr Prudnikov currently plays for FC Amkar Perm.
Subject: Aleksandr Prudnikov
Predicate: currentclub
Object: FC Amkar Perm

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ currentclub __object__ FC Amkar Perm']
Text: Aleksandr Prudnikov plays for FC Amkar Perm.
Subject: Aleksandr Prudnikov
Predicate: currentclub
Object: FC Amkar Perm

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ height __object__ 185.0 (centimetres)']
Text: Aleksandr Prudnikov is 185 cm tall.
Subject: Aleksandr Prudnikov
Predicate: height
Object: 185.0 (centimetres)

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ height __object__ 185.0 (centimetres)']
Text: Aleksandr Prudnikov's height is 185.0 (centimetres).
Subject: Aleksandr Prudnikov
Predicate: height
Object: 185.0 (centimetres)

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ height __object__ 185.0 (centimetres)']
Text: Aleksandr Prudnikov's height is 185 cm.
Subject: Aleksandr Prudnikov
Predicate: height
Object: 185.0 (centimetres)

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ youthclub __object__ FC Spartak Moscow']
Text: Aleksandr Prudnikov played for FC Spartak Moscow's youth team.
Subject: Aleksandr Prudnikov
Predicate: youthclub
Object: FC Spartak Moscow

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ youthclub __object__ FC Spartak Moscow']
Text: Aleksandr Prudnikov's youth football club was FC Spartak Moscow.
Subject: Aleksandr Prudnikov
Predicate: youthclub
Object: FC Spartak Moscow

Triple: ['__subject__ Aleksandr Prudnikov __predicate__ youthclub __object__ FC Spartak Moscow']
Text: Aleksandr Prudnikov is a member of the youth side of FC Spartak Moscow.
Subject: Aleksandr Prudnikov
Predicate: youthclub
Object: FC Spartak Moscow

Triple: ['__subject__ Aleksandre Guruli __predicate__ birthPlace __object__ Georgian Soviet Socialist Republic']
Text: Aleksandre Guruli was born in Georgia, in the Soviet Socialist Republic.
Subject: Aleksandre Guruli
Predicate: birthPlace
Object: Georgian Soviet Socialist Republic

Triple: ['__subject__ Aleksandre Guruli __predicate__ birthPlace __object__ Georgian Soviet Socialist Republic']
Text: Aleksandre Guruli was born in the Georgian Soviet Socialist Republic.
Subject: Aleksandre Guruli
Predicate: birthPlace
Object: Georgian Soviet Socialist Republic

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ AS Lyon-Duchère']
Text: Aleksandre Guruli played for the club AS Lyon-Duchère.
Subject: Aleksandre Guruli
Predicate: club
Object: AS Lyon-Duchère

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ AS Lyon-Duchère']
Text: Aleksandre Guruli plays for AS Lyon-Duchere.
Subject: Aleksandre Guruli
Predicate: club
Object: AS Lyon-Duchère

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ AS Lyon-Duchère']
Text: Aleksandre Guruli plays for the club AS Lyon-Duchère.
Subject: Aleksandre Guruli
Predicate: club
Object: AS Lyon-Duchère

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ AS Lyon-Duchère']
Text: Aleksandre Guruli club is AS Lyon-Duchere.
Subject: Aleksandre Guruli
Predicate: club
Object: AS Lyon-Duchère

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ AS Lyon-Duchère']
Text: Aleksandre Guruli plays for the AS Lyon-Duchere club.
Subject: Aleksandre Guruli
Predicate: club
Object: AS Lyon-Duchère

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ AZAL PFK']
Text: Aleksandre Guruli played for AZAL PFK.
Subject: Aleksandre Guruli
Predicate: club
Object: AZAL PFK

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ AZAL PFK']
Text: Aleksandre Guruli plays for AZAL PFK.
Subject: Aleksandre Guruli
Predicate: club
Object: AZAL PFK

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Dila Gori']
Text: Aleksandre Guruli's club is FC Dila Gori.
Subject: Aleksandre Guruli
Predicate: club
Object: FC Dila Gori

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Dila Gori']
Text: Aleksandre Guruli plays for FC Dila Gori.
Subject: Aleksandre Guruli
Predicate: club
Object: FC Dila Gori

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Dinamo Batumi']
Text: Aleksandre Guruli played for FC Dinamo Batumi.
Subject: Aleksandre Guruli
Predicate: club
Object: FC Dinamo Batumi

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Dinamo Batumi']
Text: Aleksandre Guruli plays for FC Dinamo Batumi.
Subject: Aleksandre Guruli
Predicate: club
Object: FC Dinamo Batumi

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Karpaty Lviv']
Text: Aleksandre Guruli played for FC Karpaty Lviv.
Subject: Aleksandre Guruli
Predicate: club
Object: FC Karpaty Lviv

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Karpaty Lviv']
Text: Aleksandre Guruli's club is FC Karpaty Lviv.
Subject: Aleksandre Guruli
Predicate: club
Object: FC Karpaty Lviv

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Karpaty Lviv']
Text: Aleksandre Guruli plays for FC Karpaty Lviv club.
Subject: Aleksandre Guruli
Predicate: club
Object: FC Karpaty Lviv

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Zestafoni']
Text: Aleksandre Guruli is in the FC Zestafoni club.
Subject: Aleksandre Guruli
Predicate: club
Object: FC Zestafoni

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Zestafoni']
Text: Aleksandre Guruli plays for FC Zestafoni.
Subject: Aleksandre Guruli
Predicate: club
Object: FC Zestafoni

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ FC Zestafoni']
Text: Aleksandre Guruli played for FC Zestafoni.
Subject: Aleksandre Guruli
Predicate: club
Object: FC Zestafoni

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ Georgia national football team']
Text: Aleksandre Guruli played for the Georgia national football team.
Subject: Aleksandre Guruli
Predicate: club
Object: Georgia national football team

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ Georgia national football team']
Text: Aleksandre Guruli is a member of the Georgia National Football team.
Subject: Aleksandre Guruli
Predicate: club
Object: Georgia national football team

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ Olympique Lyonnais']
Text: Aleksandre Guruli's club is Olympique Lyonnais.
Subject: Aleksandre Guruli
Predicate: club
Object: Olympique Lyonnais

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ Olympique Lyonnais']
Text: Aleksandre Guruli played for the Olympique Lyonnais club.
Subject: Aleksandre Guruli
Predicate: club
Object: Olympique Lyonnais

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ US Boulogne']
Text: Aleksandre Guruli's club is US Boulogne.
Subject: Aleksandre Guruli
Predicate: club
Object: US Boulogne

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ US Boulogne']
Text: Aleksandre Guruli played for US Boulogne.
Subject: Aleksandre Guruli
Predicate: club
Object: US Boulogne

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ US Boulogne']
Text: Aleksandre Guruli plays for US Boulogne.
Subject: Aleksandre Guruli
Predicate: club
Object: US Boulogne

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ US Lesquin']
Text: Aleksandre Guruli's club is US Lesquin.
Subject: Aleksandre Guruli
Predicate: club
Object: US Lesquin

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ US Lesquin']
Text: Aleksandre Guruli plays for US Lesquin.
Subject: Aleksandre Guruli
Predicate: club
Object: US Lesquin

Triple: ['__subject__ Aleksandre Guruli __predicate__ club __object__ US Lesquin']
Text: Aleksandre Guruli is in the US Lesquin Club.
Subject: Aleksandre Guruli
Predicate: club
Object: US Lesquin

Triple: ['__subject__ Aleksandre Guruli __predicate__ height __object__ 178.0 (centimetres)']
Text: Aleksandre Guruli's height is 178.0 centimetres.
Subject: Aleksandre Guruli
Predicate: height
Object: 178.0 (centimetres)

Triple: ['__subject__ Aleksandre Guruli __predicate__ height __object__ 178.0 (centimetres)']
Text: Aleksandre Guruli is 178.0 cm tall.
Subject: Aleksandre Guruli
Predicate: height
Object: 178.0 (centimetres)

Triple: ['__subject__ Alessio Romagnoli __predicate__ birthPlace __object__ Anzio']
Text: Alessio Romagnoli was born in Anzio.
Subject: Alessio Romagnoli
Predicate: birthPlace
Object: Anzio

Triple: ['__subject__ Alessio Romagnoli __predicate__ birthPlace __object__ Italy']
Text: Alessio Romagnoli was born in Italy.
Subject: Alessio Romagnoli
Predicate: birthPlace
Object: Italy

Triple: ['__subject__ Alessio Romagnoli __predicate__ club __object__ A.C. Milan']
Text: Alessio Romagnoli plays for A.C. Milan.
Subject: Alessio Romagnoli
Predicate: club
Object: A.C. Milan

Triple: ['__subject__ Alessio Romagnoli __predicate__ club __object__ A.C. Milan']
Text: Alessio Romagnoli plays for the club A.C. Milan.
Subject: Alessio Romagnoli
Predicate: club
Object: A.C. Milan

Triple: ['__subject__ Alessio Romagnoli __predicate__ club __object__ A.C. Milan']
Text: Alessio Romagnoli is a member of the A.C. Milan club.
Subject: Alessio Romagnoli
Predicate: club
Object: A.C. Milan

Triple: ['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-16 football team']
Text: Alessio Romagnoli played for the Italian national under 16 football team.
Subject: Alessio Romagnoli
Predicate: club
Object: Italy national under-16 football team

Triple: ['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-16 football team']
Text: Alessio Romagnoli played for the Italy national under-16 football team.
Subject: Alessio Romagnoli
Predicate: club
Object: Italy national under-16 football team

Triple: ['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-16 football team']
Text: Alessio Romagnoli is in the Italy national under 16's football team.
Subject: Alessio Romagnoli
Predicate: club
Object: Italy national under-16 football team

Triple: ['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-17 football team']
Text: Alessio Romagnoli is in the club Italy national under 17's.
Subject: Alessio Romagnoli
Predicate: club
Object: Italy national under-17 football team

Triple: ['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-17 football team']
Text: Alessio Romagnoli is a member of the Italian national under 17 football team.
Subject: Alessio Romagnoli
Predicate: club
Object: Italy national under-17 football team

Triple: ['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-17 football team']
Text: Alessio Romagnoli plays for the Italy national under-17 football team.
Subject: Alessio Romagnoli
Predicate: club
Object: Italy national under-17 football team

Triple: ['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-19 football team']
Text: Alessio Romagnoli's club is the Italy national under 19 football team.
Subject: Alessio Romagnoli
Predicate: club
Object: Italy national under-19 football team

Triple: ['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-19 football team']
Text: Alessio Romagnoli used to play for the Italy national under-19 football team.
Subject: Alessio Romagnoli
Predicate: club
Object: Italy national under-19 football team

Triple: ['__subject__ Alessio Romagnoli __predicate__ club __object__ Italy national under-19 football team']
Text: Alessio Romagnoli played for the Italian national under-19 football team.
Subject: Alessio Romagnoli
Predicate: club
Object: Italy national under-19 football team

Triple: ['__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']
Text: Alessio Romagnoli plays for the club U.C. Sampdoria.
Subject: Alessio Romagnoli
Predicate: club
Object: U.C. Sampdoria

Triple: ['__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']
Text: Alessio Romagnoli is connected to UC Sampdoria.
Subject: Alessio Romagnoli
Predicate: club
Object: U.C. Sampdoria

Triple: ['__subject__ Alessio Romagnoli __predicate__ club __object__ U.C. Sampdoria']
Text: Alessio Romagnoli has represented the club U.C. Sampdoria.
Subject: Alessio Romagnoli
Predicate: club
Object: U.C. Sampdoria

Triple: ['__subject__ Alessio Romagnoli __predicate__ currentclub __object__ A.C. Milan']
Text: Alessio Romagnoli's current club is AC Milan.
Subject: Alessio Romagnoli
Predicate: currentclub
Object: A.C. Milan

Triple: ['__subject__ Alessio Romagnoli __predicate__ currentclub __object__ A.C. Milan']
Text: Alessio Romagnoli's current club is A.C. Milan.
Subject: Alessio Romagnoli
Predicate: currentclub
Object: A.C. Milan

Triple: ['__subject__ Alessio Romagnoli __predicate__ currentclub __object__ A.C. Milan']
Text: Alessio Romagnoli is currently with A.C. Milan.
Subject: Alessio Romagnoli
Predicate: currentclub
Object: A.C. Milan

Triple: ['__subject__ Alessio Romagnoli __predicate__ position __object__ Defender (football)']
Text: Footballer Alessio Romagnoli plays as a Defender.
Subject: Alessio Romagnoli
Predicate: position
Object: Defender (football)

Triple: ['__subject__ Alessio Romagnoli __predicate__ position __object__ Defender (football)']
Text: Alessio Romagnoli's was one of the team's Defenders.
Subject: Alessio Romagnoli
Predicate: position
Object: Defender (football)

Triple: ['__subject__ Alex Plante __predicate__ birthDate __object__ 1989-05-09']
Text: Alex Plante was born on 1989-05-09.
Subject: Alex Plante
Predicate: birthDate
Object: 1989-05-09

Triple: ['__subject__ Alex Plante __predicate__ birthDate __object__ 1989-05-09']
Text: Alex Plante was born on May 9th 1989.
Subject: Alex Plante
Predicate: birthDate
Object: 1989-05-09

Triple: ['__subject__ Alex Plante __predicate__ birthDate __object__ 1989-05-09']
Text: Alex Plante was born on 09/05/1989.
Subject: Alex Plante
Predicate: birthDate
Object: 1989-05-09

Triple: ['__subject__ Alex Plante __predicate__ birthPlace __object__ Brandon, Manitoba']
Text: Alex Plante was born in Brandon, Manitoba.
Subject: Alex Plante
Predicate: birthPlace
Object: Brandon, Manitoba

Triple: ['__subject__ Alex Plante __predicate__ birthPlace __object__ Brandon, Manitoba']
Text: Alex Plante's birth place is Brandon, Manitoba.
Subject: Alex Plante
Predicate: birthPlace
Object: Brandon, Manitoba

Triple: ['__subject__ Alex Plante __predicate__ birthPlace __object__ Canada']
Text: Alex Plante was born in Canada.
Subject: Alex Plante
Predicate: birthPlace
Object: Canada

Triple: ['__subject__ Alex Plante __predicate__ birthYear __object__ 1989']
Text: Alex Plante was born in 1989.
Subject: Alex Plante
Predicate: birthYear
Object: 1989

Triple: ['__subject__ Alex Plante __predicate__ club __object__ Anyang Halla']
Text: Alex Plante has played for the club Anyang Halla.
Subject: Alex Plante
Predicate: club
Object: Anyang Halla

Triple: ['__subject__ Alex Plante __predicate__ club __object__ Anyang Halla']
Text: Alex Plante's club is called Anyang Halla.
Subject: Alex Plante
Predicate: club
Object: Anyang Halla

Triple: ['__subject__ Alex Tyus __predicate__ activeYearsStartYear __object__ 2011']
Text: Alex Tyus started playing in 2011.
Subject: Alex Tyus
Predicate: activeYearsStartYear
Object: 2011

Triple: ['__subject__ Alex Tyus __predicate__ activeYearsStartYear __object__ 2011']
Text: Alex Tyus began his active years in 2011.
Subject: Alex Tyus
Predicate: activeYearsStartYear
Object: 2011

Triple: ['__subject__ Alex Tyus __predicate__ activeYearsStartYear __object__ 2011']
Text: Alex Tyus started to play on the professional level in 2011.
Subject: Alex Tyus
Predicate: activeYearsStartYear
Object: 2011

Triple: ['__subject__ Alex Tyus __predicate__ birthDate __object__ 1988-01-08']
Text: Alex Tyus was born on the 8th January 1988.
Subject: Alex Tyus
Predicate: birthDate
Object: 1988-01-08

Triple: ['__subject__ Alex Tyus __predicate__ birthDate __object__ 1988-01-08']
Text: Alex Tyus was born on 8th January 1988.
Subject: Alex Tyus
Predicate: birthDate
Object: 1988-01-08

Triple: ['__subject__ Alex Tyus __predicate__ birthDate __object__ 1988-01-08']
Text: Alex Tyus' birth date is the 8th of January 1988.
Subject: Alex Tyus
Predicate: birthDate
Object: 1988-01-08

Triple: ['__subject__ Alex Tyus __predicate__ birthPlace __object__ St. Louis']
Text: Alex Tyus was born in St Louis.
Subject: Alex Tyus
Predicate: birthPlace
Object: St. Louis

Triple: ['__subject__ Alex Tyus __predicate__ birthPlace __object__ St. Louis']
Text: Alex Tyus was born in St. Louis.
Subject: Alex Tyus
Predicate: birthPlace
Object: St. Louis

Triple: ['__subject__ Alex Tyus __predicate__ club __object__ Anadolu Efes S.K.']
Text: Alex Tyus plays for Anadolu Efes S.K.
Subject: Alex Tyus
Predicate: club
Object: Anadolu Efes S.K.

Triple: ['__subject__ Alex Tyus __predicate__ club __object__ Anadolu Efes S.K.']
Text: Alex Tyus played for the club Anadolu Efes S.K.
Subject: Alex Tyus
Predicate: club
Object: Anadolu Efes S.K.

Triple: ['__subject__ Alex Tyus __predicate__ club __object__ Maccabi Ashdod B.C.']
Text: Alex Tyus's club is Maccabi Ashdod BC.
Subject: Alex Tyus
Predicate: club
Object: Maccabi Ashdod B.C.

Triple: ['__subject__ Alex Tyus __predicate__ club __object__ Maccabi Ashdod B.C.']
Text: Alex Tyus plays for Maccabi Ashdod B.C.
Subject: Alex Tyus
Predicate: club
Object: Maccabi Ashdod B.C.

Triple: ['__subject__ Alex Tyus __predicate__ club __object__ Maccabi Ashdod B.C.']
Text: Alex Tyus plays for the Maccabi Ashdod B.C.
Subject: Alex Tyus
Predicate: club
Object: Maccabi Ashdod B.C.

Triple: ['__subject__ Alex Tyus __predicate__ club __object__ Maccabi Tel Aviv B.C.']
Text: Alex Tyus plays for the club, Maccabi Tel Aviv B.C.
Subject: Alex Tyus
Predicate: club
Object: Maccabi Tel Aviv B.C.

Triple: ['__subject__ Alex Tyus __predicate__ club __object__ Maccabi Tel Aviv B.C.']
Text: Alex Tyus's club is Maccabi Tel Aviv BC.
Subject: Alex Tyus
Predicate: club
Object: Maccabi Tel Aviv B.C.

Triple: ['__subject__ Alex Tyus __predicate__ club __object__ Maccabi Tel Aviv B.C.']
Text: Alex Tyus played for Maccabi Tel Aviv B.C.
Subject: Alex Tyus
Predicate: club
Object: Maccabi Tel Aviv B.C.

Triple: ['__subject__ Alex Tyus __predicate__ club __object__ Pallacanestro Cantù']
Text: Alex Tyus' club is Pallacanestro Cantu.
Subject: Alex Tyus
Predicate: club
Object: Pallacanestro Cantù

Triple: ['__subject__ Alex Tyus __predicate__ club __object__ Pallacanestro Cantù']
Text: Alex Tyus belongs to the club, Pallacanestro Cantu.
Subject: Alex Tyus
Predicate: club
Object: Pallacanestro Cantù

Triple: ['__subject__ Alex Tyus __predicate__ club __object__ Pallacanestro Cantù']
Text: Alex Tyus plays for the club Pallacanestro Cantù.
Subject: Alex Tyus
Predicate: club
Object: Pallacanestro Cantù

Triple: ["__subject__ Alex Tyus __predicate__ college __object__ Florida Gators men's basketball"]
Text: Alex Tyus played for the college Florida Gators men's basketball team.
Subject: Alex Tyus
Predicate: college
Object: Florida Gators men's basketball

Triple: ["__subject__ Alex Tyus __predicate__ college __object__ Florida Gators men's basketball"]
Text: Alex Tyus played basketball for the Florida Gators at College.
Subject: Alex Tyus
Predicate: college
Object: Florida Gators men's basketball

Triple: ['__subject__ Alex Tyus __predicate__ draftYear __object__ 2011']
Text: Alex Tyus had been drafted in 2011.
Subject: Alex Tyus
Predicate: draftYear
Object: 2011

Triple: ['__subject__ Alex Tyus __predicate__ height __object__ 2.032']
Text: Alex Tyus is 2.032m tall.
Subject: Alex Tyus
Predicate: height
Object: 2.032

Triple: ['__subject__ Alex Tyus __predicate__ height __object__ 2.032']
Text: Alex Tyus is 2.032 metres tall.
Subject: Alex Tyus
Predicate: height
Object: 2.032

Triple: ['__subject__ Alex Tyus __predicate__ height __object__ 2.032']
Text: The height of Alex Tyus is 2.032.
Subject: Alex Tyus
Predicate: height
Object: 2.032

Triple: ['__subject__ Alex Tyus __predicate__ league __object__ Euroleague']
Text: Alex Tyus plays in the Euroleague.
Subject: Alex Tyus
Predicate: league
Object: Euroleague

Triple: ['__subject__ Alex Tyus __predicate__ league __object__ Euroleague']
Text: Alex Tyus is in the Euroleague.
Subject: Alex Tyus
Predicate: league
Object: Euroleague

Triple: ['__subject__ Alex Tyus __predicate__ weight __object__ 99.792 (kilograms)']
Text: Alex Tyus weighs 99.792 kg.
Subject: Alex Tyus
Predicate: weight
Object: 99.792 (kilograms)

Triple: ['__subject__ Alex Tyus __predicate__ weight __object__ 99.792 (kilograms)']
Text: Alex Tyus weighs 99.792 kilograms.
Subject: Alex Tyus
Predicate: weight
Object: 99.792 (kilograms)

Triple: ['__subject__ Alex Tyus __predicate__ weight __object__ 99.792 (kilograms)']
Text: Alex Tyus weighs 99.792 (kilograms).
Subject: Alex Tyus
Predicate: weight
Object: 99.792 (kilograms)

Triple: ['__subject__ Anadolu Efes S.K. __predicate__ coach __object__ Dušan Ivković']
Text: Dušan Ivković is the coach of Anadolu Efes S.K.
Subject: Anadolu Efes S.K.
Predicate: coach
Object: Dušan Ivković

Triple: ['__subject__ Atlanta Falcons __predicate__ coach __object__ Dan Quinn (American football)']
Text: Dan Quinn is the coach of the American football team the Atlanta Falcons.
Subject: Atlanta Falcons
Predicate: coach
Object: Dan Quinn (American football)

Triple: ['__subject__ Atlanta Falcons __predicate__ coach __object__ Dan Quinn (American football)']
Text: Dan Quinn, an American football coach, coaches the Atlanta Falcons.
Subject: Atlanta Falcons
Predicate: coach
Object: Dan Quinn (American football)

Triple: ['__subject__ Atlanta Falcons __predicate__ owner __object__ Arthur Blank']
Text: The owner of the Atlanta Falcons is Arthur Blank.
Subject: Atlanta Falcons
Predicate: owner
Object: Arthur Blank

Triple: ['__subject__ Atlanta Falcons __predicate__ owner __object__ Arthur Blank']
Text: Arthur Blank owns the Atlanta Falcons.
Subject: Atlanta Falcons
Predicate: owner
Object: Arthur Blank

Triple: ['__subject__ Boston Bruins __predicate__ city __object__ Boston']
Text: The Boston Bruins are from Boston.
Subject: Boston Bruins
Predicate: city
Object: Boston

Triple: ['__subject__ Boston Bruins __predicate__ city __object__ Boston']
Text: Boston Bruins are based in Boston.
Subject: Boston Bruins
Predicate: city
Object: Boston

Triple: ['__subject__ Boston Bruins __predicate__ city __object__ Boston']
Text: The Boston Bruins are based in the city of Boston.
Subject: Boston Bruins
Predicate: city
Object: Boston

Triple: ['__subject__ Brandon, Manitoba __predicate__ leader __object__ Conservative Party of Canada']
Text: The leader of Brandon, Manitoba is the Conservative Party of Canada.
Subject: Brandon, Manitoba
Predicate: leader
Object: Conservative Party of Canada

Triple: ['__subject__ Brandon, Manitoba __predicate__ leader __object__ Larry Maguire']
Text: The leader of Brandon Manitoba is Larry Maguire.
Subject: Brandon, Manitoba
Predicate: leader
Object: Larry Maguire

Triple: ['__subject__ Brandon, Manitoba __predicate__ leader __object__ Larry Maguire']
Text: Larry Maguire is the leader in Brandon, Manitoba.
Subject: Brandon, Manitoba
Predicate: leader
Object: Larry Maguire

Triple: ['__subject__ C.D. FAS __predicate__ league __object__ Salvadoran Primera División']
Text: CD FAS's league is the Salvadoran Primera Division.
Subject: C.D. FAS
Predicate: league
Object: Salvadoran Primera División

Triple: ['__subject__ C.D. FAS __predicate__ league __object__ Salvadoran Primera División']
Text: C.D. FAS play in the Salvadoran Primera Division.
Subject: C.D. FAS
Predicate: league
Object: Salvadoran Primera División

Triple: ['__subject__ C.D. FAS __predicate__ league __object__ Salvadoran Primera División']
Text: CD FAS plays in the Salvadoran Primera Division league.
Subject: C.D. FAS
Predicate: league
Object: Salvadoran Primera División

Triple: ['__subject__ C.D. FAS __predicate__ position __object__ Salvadoran Primera División']
Text: C.D. FAS play in the Salvadoran Primera Division.
Subject: C.D. FAS
Predicate: position
Object: Salvadoran Primera División

Triple: ['__subject__ C.D. FAS __predicate__ position __object__ Salvadoran Primera División']
Text: C.D. Fas is a member team of the Salvadoran Primera División.
Subject: C.D. FAS
Predicate: position
Object: Salvadoran Primera División

Triple: ['__subject__ Canada __predicate__ anthem __object__ O Canada']
Text: O Canada is the national anthem of Canada.
Subject: Canada
Predicate: anthem
Object: O Canada

Triple: ['__subject__ Canada __predicate__ anthem __object__ O Canada']
Text: The national anthem of Canada is O Canada.
Subject: Canada
Predicate: anthem
Object: O Canada

Triple: ['__subject__ Canada __predicate__ anthem __object__ O Canada']
Text: The anthem of Canada is O Canada.
Subject: Canada
Predicate: anthem
Object: O Canada

Triple: ['__subject__ Canada __predicate__ ethnicGroup __object__ Asian Canadians']
Text: Asian Canadians are one of the ethnic groups in Canada.
Subject: Canada
Predicate: ethnicGroup
Object: Asian Canadians

Triple: ['__subject__ Canada __predicate__ ethnicGroup __object__ Asian Canadians']
Text: Asian Canadians are an ethnic group in Canada.
Subject: Canada
Predicate: ethnicGroup
Object: Asian Canadians

Triple: ['__subject__ Canada __predicate__ ethnicGroup __object__ Black Canadians']
Text: Black Canadians are one of the ethnic groups of Canada.
Subject: Canada
Predicate: ethnicGroup
Object: Black Canadians

Triple: ['__subject__ Canada __predicate__ ethnicGroup __object__ Black Canadians']
Text: Canada has an ethnic group called Black Canadians.
Subject: Canada
Predicate: ethnicGroup
Object: Black Canadians

Triple: ['__subject__ Canada __predicate__ ethnicGroup __object__ Black Canadians']
Text: Canada's ethnic group are the Black Canadians.
Subject: Canada
Predicate: ethnicGroup
Object: Black Canadians

Triple: ['__subject__ Canada __predicate__ language __object__ French language']
Text: One of the languages in Canada is French.
Subject: Canada
Predicate: language
Object: French language

Triple: ['__subject__ Canada __predicate__ language __object__ French language']
Text: The French language is spoken in Canada.
Subject: Canada
Predicate: language
Object: French language

Triple: ['__subject__ Canada __predicate__ language __object__ French language']
Text: French is one of the spoken languages of Canada.
Subject: Canada
Predicate: language
Object: French language

Triple: ['__subject__ Canada __predicate__ leader __object__ Elizabeth II']
Text: The leader of Canada is Elizabeth II.
Subject: Canada
Predicate: leader
Object: Elizabeth II

Triple: ['__subject__ Canada __predicate__ leader __object__ Elizabeth II']
Text: Elizabeth II is the leader of Canada.
Subject: Canada
Predicate: leader
Object: Elizabeth II

Triple: ['__subject__ Central Español __predicate__ league __object__ Uruguayan Segunda División']
Text: Central Español play in the Uruguayan Segunda División.
Subject: Central Español
Predicate: league
Object: Uruguayan Segunda División

Triple: ['__subject__ Central Español __predicate__ league __object__ Uruguayan Segunda División']
Text: Central Español plays in the Uruguayan Segunda División.
Subject: Central Español
Predicate: league
Object: Uruguayan Segunda División

Triple: ['__subject__ Central Español __predicate__ league __object__ Uruguayan Segunda División']
Text: Central Español play in the Uruguayan Segunda División league.
Subject: Central Español
Predicate: league
Object: Uruguayan Segunda División

Triple: ['__subject__ Clyde F.C. __predicate__ ground __object__ Broadwood Stadium']
Text: Clyde F.C. play at the Broadwood Stadium.
Subject: Clyde F.C.
Predicate: ground
Object: Broadwood Stadium

Triple: ['__subject__ Clyde F.C. __predicate__ ground __object__ Broadwood Stadium']
Text: The Broadwood Stadium is the home ground of Clyde F.C.
Subject: Clyde F.C.
Predicate: ground
Object: Broadwood Stadium

Triple: ['__subject__ Clyde F.C. __predicate__ ground __object__ Broadwood Stadium']
Text: Clyde F.C. 's football ground is called Broadwood Stadium.
Subject: Clyde F.C.
Predicate: ground
Object: Broadwood Stadium

Triple: ['__subject__ Clyde F.C. __predicate__ manager __object__ Barry Ferguson']
Text: Barry Ferguson is the manager for Clyde F.C.
Subject: Clyde F.C.
Predicate: manager
Object: Barry Ferguson

Triple: ['__subject__ Clyde F.C. __predicate__ manager __object__ Barry Ferguson']
Text: Barry Ferguson is the manager of Clyde F.C.
Subject: Clyde F.C.
Predicate: manager
Object: Barry Ferguson

Triple: ['__subject__ Columbus Blue Jackets __predicate__ generalManager __object__ Jarmo Kekäläinen']
Text: Columbus Blue Jackets' general manager is Jarmo Kekalainen.
Subject: Columbus Blue Jackets
Predicate: generalManager
Object: Jarmo Kekäläinen

Triple: ['__subject__ Columbus Blue Jackets __predicate__ generalManager __object__ Jarmo Kekäläinen']
Text: The general Manager of Columbus Blue Jackets is Jarmo Kekalainen.
Subject: Columbus Blue Jackets
Predicate: generalManager
Object: Jarmo Kekäläinen

Triple: ['__subject__ Columbus Blue Jackets __predicate__ generalManager __object__ Jarmo Kekäläinen']
Text: Jarmo Kekalainen is the general manager of the Columbus Blue Jackets.
Subject: Columbus Blue Jackets
Predicate: generalManager
Object: Jarmo Kekäläinen

Triple: ['__subject__ Crewe Alexandra F.C. __predicate__ manager __object__ Steve Davis (footballer)']
Text: Footballer, Steve Davis, manages Crewe Alexandra F.C.
Subject: Crewe Alexandra F.C.
Predicate: manager
Object: Steve Davis (footballer)

Triple: ['__subject__ Crewe Alexandra F.C. __predicate__ manager __object__ Steve Davis (footballer)']
Text: The manager of Crewe Alexandra FC is the footballer Steve Davis.
Subject: Crewe Alexandra F.C.
Predicate: manager
Object: Steve Davis (footballer)

Triple: ['__subject__ Esteghlal Ahvaz F.C. __predicate__ manager __object__ Adnan Hamad']
Text: Adnan Hamad is the manager of Esteghlal Ahvaz F.C.
Subject: Esteghlal Ahvaz F.C.
Predicate: manager
Object: Adnan Hamad

Triple: ['__subject__ Esteghlal Ahvaz F.C. __predicate__ manager __object__ Adnan Hamad']
Text: Esteghlal Ahvaz F.C. manager is Adnan Hamad.
Subject: Esteghlal Ahvaz F.C.
Predicate: manager
Object: Adnan Hamad

Triple: ['__subject__ FC Amkar Perm __predicate__ manager __object__ Gadzhi Gadzhiyev']
Text: Gadzhi Gadzhiyev is the manager of FC Amkar Perm.
Subject: FC Amkar Perm
Predicate: manager
Object: Gadzhi Gadzhiyev

Triple: ['__subject__ FC Dinamo Batumi __predicate__ manager __object__ Levan Khomeriki']
Text: Levan Khomeriki is the manager of FC Dinamo Batumi.
Subject: FC Dinamo Batumi
Predicate: manager
Object: Levan Khomeriki

Triple: ['__subject__ FC Samtredia __predicate__ ground __object__ Erosi Manjgaladze Stadium']
Text: Erosi Manjgaladze Stadium is the ground of FC Samtredia.
Subject: FC Samtredia
Predicate: ground
Object: Erosi Manjgaladze Stadium

Triple: ['__subject__ FC Samtredia __predicate__ ground __object__ Erosi Manjgaladze Stadium']
Text: FC Samtredia play their home games at the Erosi Manjgaladze stadium.
Subject: FC Samtredia
Predicate: ground
Object: Erosi Manjgaladze Stadium

Triple: ['__subject__ FC Samtredia __predicate__ ground __object__ Erosi Manjgaladze Stadium']
Text: FC Samtredia's home ground is located in Erosi Manjgaladze Stadium.
Subject: FC Samtredia
Predicate: ground
Object: Erosi Manjgaladze Stadium

Triple: ['__subject__ FC Spartak Moscow __predicate__ chairman __object__ Sergey Rodionov']
Text: The chairman of FC Spartak Moscow is Sergey Rodionov.
Subject: FC Spartak Moscow
Predicate: chairman
Object: Sergey Rodionov

Triple: ['__subject__ FC Spartak Moscow __predicate__ chairman __object__ Sergey Rodionov']
Text: Sergey Rodionov is the chairman of FC Spartak Moscow.
Subject: FC Spartak Moscow
Predicate: chairman
Object: Sergey Rodionov

Triple: ['__subject__ FC Spartak Moscow __predicate__ ground __object__ Otkrytiye Arena']
Text: FC Spartak Moscow's grounds are the Otkrytiye Arena.
Subject: FC Spartak Moscow
Predicate: ground
Object: Otkrytiye Arena

Triple: ['__subject__ FC Spartak Moscow __predicate__ ground __object__ Otkrytiye Arena']
Text: FC Spartak Moscow play at the Otkrytiye Arena.
Subject: FC Spartak Moscow
Predicate: ground
Object: Otkrytiye Arena

Triple: ['__subject__ FC Spartak Moscow __predicate__ ground __object__ Otkrytiye Arena']
Text: Otkrytiye Arena is the home ground of FC Spartak Moscow.
Subject: FC Spartak Moscow
Predicate: ground
Object: Otkrytiye Arena

Triple: ['__subject__ FC Terek Grozny __predicate__ manager __object__ Rashid Rakhimov']
Text: FC Terek Grozny's manager is Rashid Rakhimov.
Subject: FC Terek Grozny
Predicate: manager
Object: Rashid Rakhimov

Triple: ['__subject__ FC Terek Grozny __predicate__ manager __object__ Rashid Rakhimov']
Text: Rashid Rakhimov is the manager of FC Terek Grozny.
Subject: FC Terek Grozny
Predicate: manager
Object: Rashid Rakhimov

Triple: ['__subject__ FC Torpedo Moscow __predicate__ chairman __object__ Aleksandr Tukmanov']
Text: The chairman of FC Torpedo Moscow is Aleksandr Tukmanov.
Subject: FC Torpedo Moscow
Predicate: chairman
Object: Aleksandr Tukmanov

Triple: ['__subject__ FC Torpedo Moscow __predicate__ chairman __object__ Aleksandr Tukmanov']
Text: Aleksandr Tukmanov is the chairman of FC Torpedo Moscow.
Subject: FC Torpedo Moscow
Predicate: chairman
Object: Aleksandr Tukmanov

Triple: ['__subject__ FC Torpedo Moscow __predicate__ season __object__ 2014–15 Russian Premier League']
Text: FC Torpedo Moscow played in the 2014-15 Russian Premier League.
Subject: FC Torpedo Moscow
Predicate: season
Object: 2014–15 Russian Premier League

Triple: ['__subject__ FC Torpedo Moscow __predicate__ season __object__ 2014–15 Russian Premier League']
Text: During the 2014-15 season FC Torpedo Moscow played in the Russian Premier League.
Subject: FC Torpedo Moscow
Predicate: season
Object: 2014–15 Russian Premier League

Triple: ['__subject__ FC Torpedo Moscow __predicate__ season __object__ 2014–15 Russian Premier League']
Text: FC Torpedo Moscow played the 2014–15 season in the Russian Premier League.
Subject: FC Torpedo Moscow
Predicate: season
Object: 2014–15 Russian Premier League

Triple: ['__subject__ Ferencvárosi TC __predicate__ manager __object__ Thomas Doll']
Text: Thomas Doll is the manager for Ferencvárosi TC.
Subject: Ferencvárosi TC
Predicate: manager
Object: Thomas Doll

Triple: ['__subject__ Ferencvárosi TC __predicate__ manager __object__ Thomas Doll']
Text: Thomas Doll is the manager of Ferencvárosi TC.
Subject: Ferencvárosi TC
Predicate: manager
Object: Thomas Doll

Triple: ['__subject__ Ferencvárosi TC __predicate__ manager __object__ Thomas Doll']
Text: The manager of Ferencvárosi TC is Thomas Doll.
Subject: Ferencvárosi TC
Predicate: manager
Object: Thomas Doll

Triple: ['__subject__ Finland __predicate__ currency __object__ Euro']
Text: The Euro is the currency in Finland.
Subject: Finland
Predicate: currency
Object: Euro

Triple: ['__subject__ Finland __predicate__ currency __object__ Euro']
Text: The currency in Finland is the Euro.
Subject: Finland
Predicate: currency
Object: Euro

Triple: ['__subject__ Finland __predicate__ currency __object__ Euro']
Text: The currency of Finland is the Euro.
Subject: Finland
Predicate: currency
Object: Euro

Triple: ['__subject__ Finland __predicate__ demonym __object__ Finns']
Text: Finns is a demonym of Finland.
Subject: Finland
Predicate: demonym
Object: Finns

Triple: ['__subject__ Finland __predicate__ demonym __object__ Finns']
Text: Finns live in Finland.
Subject: Finland
Predicate: demonym
Object: Finns

Triple: ['__subject__ Finland __predicate__ demonym __object__ Finns']
Text: The natives of Finland are known as Finns.
Subject: Finland
Predicate: demonym
Object: Finns

Triple: ['__subject__ Finland __predicate__ language __object__ Sami languages']
Text: The languages of Finland are Sami languages.
Subject: Finland
Predicate: language
Object: Sami languages

Triple: ['__subject__ Finland __predicate__ language __object__ Sami languages']
Text: Sami languages are one of the spoken languages in Finland.
Subject: Finland
Predicate: language
Object: Sami languages

Triple: ['__subject__ Finland __predicate__ language __object__ Sami languages']
Text: The Sami languages are spoken in Finland.
Subject: Finland
Predicate: language
Object: Sami languages

Triple: ['__subject__ Finland __predicate__ leader __object__ Sauli Niinistö']
Text: The leader in Finland is Sauli Niinisto.
Subject: Finland
Predicate: leader
Object: Sauli Niinistö

Triple: ['__subject__ Finland __predicate__ leader __object__ Sauli Niinistö']
Text: Sauli Niinisto is the leader of Finland.
Subject: Finland
Predicate: leader
Object: Sauli Niinistö

Triple: ['__subject__ Finland __predicate__ officialLanguage __object__ Finnish language']
Text: The official language in Finland is Finnish.
Subject: Finland
Predicate: officialLanguage
Object: Finnish language

Triple: ['__subject__ Finland __predicate__ officialLanguage __object__ Finnish language']
Text: The official language in Finland is the Finnish language.
Subject: Finland
Predicate: officialLanguage
Object: Finnish language

Triple: ['__subject__ Finland __predicate__ officialLanguage __object__ Finnish language']
Text: Finnish is the official language of Finland.
Subject: Finland
Predicate: officialLanguage
Object: Finnish language

Triple: ['__subject__ Hamburger SV __predicate__ league __object__ Bundesliga']
Text: Hamburger SV compete in the Bundesliga.
Subject: Hamburger SV
Predicate: league
Object: Bundesliga

Triple: ['__subject__ Hamburger SV __predicate__ league __object__ Bundesliga']
Text: Hamburger SV is a member of the Bundesliga.
Subject: Hamburger SV
Predicate: league
Object: Bundesliga

Triple: ['__subject__ Hamburger SV __predicate__ league __object__ Bundesliga']
Text: Hamburger SV is a club that belongs to the Bundesliga League.
Subject: Hamburger SV
Predicate: league
Object: Bundesliga

Triple: ['__subject__ Hamilton Academical F.C. __predicate__ ground __object__ Hamilton, South Lanarkshire']
Text: The ground of Hamilton Academical F.C. is located in Hamilton, South Lanarkshire.
Subject: Hamilton Academical F.C.
Predicate: ground
Object: Hamilton, South Lanarkshire

Triple: ['__subject__ Hamilton Academical F.C. __predicate__ ground __object__ Hamilton, South Lanarkshire']
Text: Hamilton Academical F.C. play in Hamilton, South Lanarkshire.
Subject: Hamilton Academical F.C.
Predicate: ground
Object: Hamilton, South Lanarkshire

Triple: ['__subject__ Hamilton Academical F.C. __predicate__ ground __object__ Hamilton, South Lanarkshire']
Text: The home of the Hamilton Academical F.C. is Hamilton, South Lanarkshire.
Subject: Hamilton Academical F.C.
Predicate: ground
Object: Hamilton, South Lanarkshire

Triple: ['__subject__ Hamilton Academical F.C. __predicate__ ground __object__ New Douglas Park']
Text: New Douglas Park is the home of Hamilton Academical F.C.
Subject: Hamilton Academical F.C.
Predicate: ground
Object: New Douglas Park

Triple: ['__subject__ Hamilton Academical F.C. __predicate__ ground __object__ New Douglas Park']
Text: Hamilton Academical FC plays at New Douglas Park.
Subject: Hamilton Academical F.C.
Predicate: ground
Object: New Douglas Park

Triple: ['__subject__ Hamilton Academical F.C. __predicate__ ground __object__ New Douglas Park']
Text: New Douglas Park is the ground for Hamilton Academical F.C.
Subject: Hamilton Academical F.C.
Predicate: ground
Object: New Douglas Park

Triple: ['__subject__ Houston Texans __predicate__ city __object__ Houston']
Text: The home of the Houston Texans is the city of Houston.
Subject: Houston Texans
Predicate: city
Object: Houston

Triple: ['__subject__ Houston Texans __predicate__ city __object__ Houston']
Text: Houston Texans are based in the city of Houston.
Subject: Houston Texans
Predicate: city
Object: Houston

Triple: ['__subject__ Houston Texans __predicate__ city __object__ Texas']
Text: Texas is the home of Houston Texans.
Subject: Houston Texans
Predicate: city
Object: Texas

Triple: ['__subject__ Houston Texans __predicate__ city __object__ Texas']
Text: The Houston Texans play in Texas.
Subject: Houston Texans
Predicate: city
Object: Texas

Triple: ['__subject__ Houston Texans __predicate__ owner __object__ Bob McNair']
Text: Bob McNair is the owner of the Houston Texans.
Subject: Houston Texans
Predicate: owner
Object: Bob McNair

Triple: ['__subject__ Houston Texans __predicate__ owner __object__ Bob McNair']
Text: Houston Texans is owned by Bob McNair.
Subject: Houston Texans
Predicate: owner
Object: Bob McNair

Triple: ['__subject__ Hull City A.F.C. __predicate__ manager __object__ Steve Bruce']
Text: Hull City AFC's manager is Steve Bruce.
Subject: Hull City A.F.C.
Predicate: manager
Object: Steve Bruce

Triple: ['__subject__ Hull City A.F.C. __predicate__ manager __object__ Steve Bruce']
Text: The manager of Hull City A.F.C. is Steve Bruce.
Subject: Hull City A.F.C.
Predicate: manager
Object: Steve Bruce

Triple: ['__subject__ Italy national under-17 football team __predicate__ coach __object__ Alessandro Dal Canto']
Text: Alessandro Dal Canto is the coach of the Italian national under-17 football team.
Subject: Italy national under-17 football team
Predicate: coach
Object: Alessandro Dal Canto

Triple: ['__subject__ Italy national under-17 football team __predicate__ coach __object__ Alessandro Dal Canto']
Text: Alessandro Dal Canto is the coach of the Italy national under-17 football team.
Subject: Italy national under-17 football team
Predicate: coach
Object: Alessandro Dal Canto

Triple: ['__subject__ Jacksonville Dolphins __predicate__ city __object__ Jacksonville, Florida']
Text: Jacksonville Dolphins play in Jacksonville, Florida.
Subject: Jacksonville Dolphins
Predicate: city
Object: Jacksonville, Florida

Triple: ['__subject__ Jacksonville Dolphins __predicate__ city __object__ Jacksonville, Florida']
Text: The Jacksonville Dolphins are based in the city of Jacksonville, Florida.
Subject: Jacksonville Dolphins
Predicate: city
Object: Jacksonville, Florida

Triple: ['__subject__ Jacksonville Dolphins __predicate__ stadium __object__ John Sessions Stadium']
Text: John Sessions Stadium is the home of the Jacksonville Dolphins.
Subject: Jacksonville Dolphins
Predicate: stadium
Object: John Sessions Stadium

Triple: ['__subject__ Jacksonville Dolphins __predicate__ stadium __object__ John Sessions Stadium']
Text: The Jacksonville Dolphins baseball field is John Sessions Stadium.
Subject: Jacksonville Dolphins
Predicate: stadium
Object: John Sessions Stadium

Triple: ['__subject__ Jacksonville Dolphins __predicate__ stadium __object__ John Sessions Stadium']
Text: The Jacksonville Dolphins baseball field is the John Sessions stadium.
Subject: Jacksonville Dolphins
Predicate: stadium
Object: John Sessions Stadium

Triple: ['__subject__ Jacksonville Dolphins __predicate__ stadium __object__ John Sessions Stadium']
Text: The Jacksonville Dolphins are based at the John Sessions Stadium.
Subject: Jacksonville Dolphins
Predicate: stadium
Object: John Sessions Stadium

Triple: ['__subject__ Jacksonville Dolphins __predicate__ stadium __object__ John Sessions Stadium']
Text: Jacksonville Dolphins play at the John Sessions Stadium.
Subject: Jacksonville Dolphins
Predicate: stadium
Object: John Sessions Stadium

Triple: ['__subject__ Jacksonville Dolphins __predicate__ stadium __object__ John Sessions Stadium']
Text: The John Sessions Stadium is where the Jacksonville Dolphins play their home games.
Subject: Jacksonville Dolphins
Predicate: stadium
Object: John Sessions Stadium

Triple: ['__subject__ Jacksonville Dolphins __predicate__ universityTeam __object__ Jacksonville University']
Text: The Jackson University team is known as the Jacksonville Dolphins.
Subject: Jacksonville Dolphins
Predicate: universityTeam
Object: Jacksonville University

Triple: ['__subject__ Jacksonville Dolphins __predicate__ universityTeam __object__ Jacksonville University']
Text: The Jacksonville Dolphins are the university team for Jacksonville University.
Subject: Jacksonville Dolphins
Predicate: universityTeam
Object: Jacksonville University

Triple: ['__subject__ Jacksonville Dolphins __predicate__ universityTeam __object__ Jacksonville University']
Text: The Jacksonville Dolphins team represent Jacksonville University.
Subject: Jacksonville Dolphins
Predicate: universityTeam
Object: Jacksonville University

Triple: ['__subject__ Jamaica __predicate__ leader __object__ Elizabeth II']
Text: Jamaica's leader is Elizabeth II.
Subject: Jamaica
Predicate: leader
Object: Elizabeth II

Triple: ['__subject__ Jamaica __predicate__ leader __object__ Elizabeth II']
Text: Elizabeth II is the leader of Jamaica.
Subject: Jamaica
Predicate: leader
Object: Elizabeth II

Triple: ['__subject__ Jamaica __predicate__ leader __object__ Elizabeth II']
Text: Elizabeth II is the queen of Jamaica.
Subject: Jamaica
Predicate: leader
Object: Elizabeth II

Triple: ['__subject__ Jamaica __predicate__ leader __object__ Patrick Allen (politician)']
Text: The leader of Jamaica is Patrick Allen.
Subject: Jamaica
Predicate: leader
Object: Patrick Allen (politician)

Triple: ['__subject__ Jamaica __predicate__ leader __object__ Patrick Allen (politician)']
Text: Patrick Allen is a political leader in Jamaica.
Subject: Jamaica
Predicate: leader
Object: Patrick Allen (politician)

Triple: ['__subject__ Los Angeles Rams __predicate__ city __object__ Los Angeles']
Text: Los Angeles Rams are based in LA.
Subject: Los Angeles Rams
Predicate: city
Object: Los Angeles

Triple: ['__subject__ Los Angeles Rams __predicate__ city __object__ Los Angeles']
Text: The Los Angeles Rams play in Los Angeles.
Subject: Los Angeles Rams
Predicate: city
Object: Los Angeles

Triple: ['__subject__ Los Angeles Rams __predicate__ city __object__ Los Angeles Memorial Coliseum']
Text: Los Angeles Rams play at the Los Angeles Memorial Coliseum.
Subject: Los Angeles Rams
Predicate: city
Object: Los Angeles Memorial Coliseum

Triple: ['__subject__ Los Angeles Rams __predicate__ city __object__ Los Angeles Memorial Coliseum']
Text: In their home city, the Los Angeles Rams, play at the Los Angeles Memorial Coliseum.
Subject: Los Angeles Rams
Predicate: city
Object: Los Angeles Memorial Coliseum

Triple: ['__subject__ Los Angeles Rams __predicate__ city __object__ Los Angeles Memorial Coliseum']
Text: Los Angeles Rams play their home matches at the Los Angeles Memorial Coliseum.
Subject: Los Angeles Rams
Predicate: city
Object: Los Angeles Memorial Coliseum

Triple: ['__subject__ Los Angeles Rams __predicate__ coach __object__ Jeff Fisher']
Text: The coach of the Los Angeles Rams is Jeff Fisher.
Subject: Los Angeles Rams
Predicate: coach
Object: Jeff Fisher

Triple: ['__subject__ Los Angeles Rams __predicate__ coach __object__ Jeff Fisher']
Text: The Los Angeles Rams coach is Jeff Fisher.
Subject: Los Angeles Rams
Predicate: coach
Object: Jeff Fisher

Triple: ['__subject__ Los Angeles Rams __predicate__ coach __object__ Jeff Fisher']
Text: Jeff Fisher is the coach for the Los Angeles Rams.
Subject: Los Angeles Rams
Predicate: coach
Object: Jeff Fisher

Triple: ['__subject__ Minnesota Wild __predicate__ generalManager __object__ Chuck Fletcher']
Text: Chuck Fletcher is the general manager of the Minnesota Wild.
Subject: Minnesota Wild
Predicate: generalManager
Object: Chuck Fletcher

Triple: ['__subject__ Minnesota Wild __predicate__ generalManager __object__ Chuck Fletcher']
Text: The general manager of Minnesota Wild is Chuck Fletcher.
Subject: Minnesota Wild
Predicate: generalManager
Object: Chuck Fletcher

Triple: ['__subject__ Minnesota Wild __predicate__ generalManager __object__ Chuck Fletcher']
Text: Minnesota Wild's general manager is Chuck Fletcher.
Subject: Minnesota Wild
Predicate: generalManager
Object: Chuck Fletcher

Triple: ['__subject__ Moscow __predicate__ leader __object__ Sergey Sobyanin']
Text: The leader in Moscow is Sergey Sobyanin.
Subject: Moscow
Predicate: leader
Object: Sergey Sobyanin

Triple: ['__subject__ Moscow __predicate__ leader __object__ Sergey Sobyanin']
Text: The leader of Moscow is Sergey Sobyanin.
Subject: Moscow
Predicate: leader
Object: Sergey Sobyanin

Triple: ['__subject__ National Hockey League __predicate__ mostChampions __object__ Montreal Canadiens']
Text: Montreal Canadiens have won the National Hockey League the most times.
Subject: National Hockey League
Predicate: mostChampions
Object: Montreal Canadiens

Triple: ['__subject__ National Hockey League __predicate__ mostChampions __object__ Montreal Canadiens']
Text: Montreal Canadiens have been the champions of the National Hockey League the most times.
Subject: National Hockey League
Predicate: mostChampions
Object: Montreal Canadiens

Triple: ['__subject__ National Hockey League __predicate__ mostChampions __object__ Montreal Canadiens']
Text: Montreal Canadiens won the most championships in the National Hockey League.
Subject: National Hockey League
Predicate: mostChampions
Object: Montreal Canadiens

Triple: ['__subject__ Olympique Lyonnais __predicate__ chairman __object__ Jean-Michel Aulas']
Text: Jean-Michel Aulas is the chairman of Olympique Lyonnais.
Subject: Olympique Lyonnais
Predicate: chairman
Object: Jean-Michel Aulas

Triple: ['__subject__ Orange County Blues FC __predicate__ manager __object__ Oliver Wyss']
Text: The manager of the Orange County Blues FC is Oliver Wyss.
Subject: Orange County Blues FC
Predicate: manager
Object: Oliver Wyss

Triple: ['__subject__ PSV Eindhoven __predicate__ manager __object__ Phillip Cocu']
Text: Phillip Cocu is the manager of PSV Eindhoven.
Subject: PSV Eindhoven
Predicate: manager
Object: Phillip Cocu

Triple: ['__subject__ Pallacanestro Cantù __predicate__ league __object__ Lega Basket Serie A']
Text: Pallacanestro Cantu is in the Lega Basket Serie A league.
Subject: Pallacanestro Cantù
Predicate: league
Object: Lega Basket Serie A

Triple: ['__subject__ Pallacanestro Cantù __predicate__ league __object__ Lega Basket Serie A']
Text: The league Pallacanestro Cantù play in is Lega Basket Serie A.
Subject: Pallacanestro Cantù
Predicate: league
Object: Lega Basket Serie A

Triple: ['__subject__ Pallacanestro Cantù __predicate__ league __object__ Lega Basket Serie A']
Text: Pallacanestro Cantú plays in the Lega Basket Serie A.
Subject: Pallacanestro Cantù
Predicate: league
Object: Lega Basket Serie A

Triple: ['__subject__ Peñarol __predicate__ league __object__ Uruguayan Primera División']
Text: Penarol plays in the Uruguayan Primera División.
Subject: Peñarol
Predicate: league
Object: Uruguayan Primera División

Triple: ['__subject__ Peñarol __predicate__ league __object__ Uruguayan Primera División']
Text: Peñarol play in the Uruguayan Primera División.
Subject: Peñarol
Predicate: league
Object: Uruguayan Primera División

Triple: ['__subject__ Peñarol __predicate__ league __object__ Uruguayan Primera División']
Text: The Uruguayan Primera División is the league that Peñarol play in.
Subject: Peñarol
Predicate: league
Object: Uruguayan Primera División

Triple: ['__subject__ Real Madrid Castilla __predicate__ manager __object__ Luis Miguel Ramis']
Text: Luis Miguel Ramis is the manager for Real Madrid Castilla.
Subject: Real Madrid Castilla
Predicate: manager
Object: Luis Miguel Ramis

Triple: ['__subject__ Real Madrid Castilla __predicate__ manager __object__ Luis Miguel Ramis']
Text: Luis Miguel Ramis was a manager of Real Madrid Castilla.
Subject: Real Madrid Castilla
Predicate: manager
Object: Luis Miguel Ramis

Triple: ['__subject__ Real Madrid Castilla __predicate__ manager __object__ Luis Miguel Ramis']
Text: Luis Miguel Ramis is the manager of Real Madrid Castilla.
Subject: Real Madrid Castilla
Predicate: manager
Object: Luis Miguel Ramis

Triple: ['__subject__ Regina, Saskatchewan __predicate__ leaderTitle __object__ Legislative Assembly of Saskatchewan']
Text: The Legislative Assembly of Saskatchewan governs Regina, Saskatchewan.
Subject: Regina, Saskatchewan
Predicate: leaderTitle
Object: Legislative Assembly of Saskatchewan

Triple: ['__subject__ RoPS __predicate__ league __object__ Veikkausliiga']
Text: RoPS plays in the Veikkausliiga.
Subject: RoPS
Predicate: league
Object: Veikkausliiga

Triple: ['__subject__ RoPS __predicate__ league __object__ Veikkausliiga']
Text: RoPS play in the Veikkausliiga league.
Subject: RoPS
Predicate: league
Object: Veikkausliiga

Triple: ['__subject__ Russia __predicate__ language __object__ Russian language']
Text: The language in Russia is Russian.
Subject: Russia
Predicate: language
Object: Russian language

Triple: ['__subject__ Russia __predicate__ language __object__ Russian language']
Text: The language spoken in Russia is Russian.
Subject: Russia
Predicate: language
Object: Russian language

Triple: ['__subject__ Russia __predicate__ language __object__ Russian language']
Text: The Russian language is spoken in Russia.
Subject: Russia
Predicate: language
Object: Russian language

Triple: ['__subject__ Russia __predicate__ leader __object__ Sergey Naryshkin']
Text: The Russian leader's name is Sergey Naryshkin.
Subject: Russia
Predicate: leader
Object: Sergey Naryshkin

Triple: ['__subject__ Russia __predicate__ leader __object__ Sergey Naryshkin']
Text: Sergey Naryshkin is a leader of Russia.
Subject: Russia
Predicate: leader
Object: Sergey Naryshkin

Triple: ['__subject__ Russia __predicate__ leader __object__ Sergey Naryshkin']
Text: Russia's leader is Sergey Naryshkin.
Subject: Russia
Predicate: leader
Object: Sergey Naryshkin

Triple: ['__subject__ Russia __predicate__ leader __object__ Valentina Matviyenko']
Text: Valentina Matviyenko is a leader in Russia.
Subject: Russia
Predicate: leader
Object: Valentina Matviyenko

Triple: ['__subject__ Russia __predicate__ leader __object__ Vladimir Putin']
Text: The leader of Russia is Vladimir Putin.
Subject: Russia
Predicate: leader
Object: Vladimir Putin

Triple: ['__subject__ Russia __predicate__ leader __object__ Vladimir Putin']
Text: Vladimir Putin is the leader of Russia.
Subject: Russia
Predicate: leader
Object: Vladimir Putin

Triple: ['__subject__ SV Werder Bremen __predicate__ league __object__ Bundesliga']
Text: SV Werder Bremen play in the Bundesliga.
Subject: SV Werder Bremen
Predicate: league
Object: Bundesliga

Triple: ['__subject__ SV Werder Bremen __predicate__ league __object__ Bundesliga']
Text: SV Werder Bremen plays in the Bundesliga.
Subject: SV Werder Bremen
Predicate: league
Object: Bundesliga

Triple: ['__subject__ SV Werder Bremen __predicate__ league __object__ Bundesliga']
Text: SV Werder Bremen is in the Bundesliga league.
Subject: SV Werder Bremen
Predicate: league
Object: Bundesliga

Triple: ['__subject__ SV Werder Bremen __predicate__ manager __object__ Viktor Skrypnyk']
Text: The manager of SV Werder Bremen is Viktor Skrypnyk.
Subject: SV Werder Bremen
Predicate: manager
Object: Viktor Skrypnyk

Triple: ['__subject__ SV Werder Bremen __predicate__ manager __object__ Viktor Skrypnyk']
Text: Viktor Skrypnyk is the manager of SV Werder Bremen.
Subject: SV Werder Bremen
Predicate: manager
Object: Viktor Skrypnyk

Triple: ['__subject__ SV Werder Bremen II __predicate__ league __object__ 3. Liga']
Text: SV Werder Bremen II play in the 3. Liga.
Subject: SV Werder Bremen II
Predicate: league
Object: 3. Liga

Triple: ['__subject__ SV Werder Bremen II __predicate__ league __object__ 3. Liga']
Text: The league SV Werder Bremen II play in is 3. Liga.
Subject: SV Werder Bremen II
Predicate: league
Object: 3. Liga

Triple: ['__subject__ SV Werder Bremen II __predicate__ league __object__ 3. Liga']
Text: SV Werder Bremen II is in the league 3 Liga.
Subject: SV Werder Bremen II
Predicate: league
Object: 3. Liga

Triple: ['__subject__ SV Werder Bremen II __predicate__ manager __object__ Alexander Nouri']
Text: The manager of SV Werder Bremen II is Alexander Nouri.
Subject: SV Werder Bremen II
Predicate: manager
Object: Alexander Nouri

Triple: ['__subject__ SV Werder Bremen II __predicate__ manager __object__ Alexander Nouri']
Text: Alexander Nouri is the manager of SV Werder Bremen II.
Subject: SV Werder Bremen II
Predicate: manager
Object: Alexander Nouri

Triple: ['__subject__ SV Werder Bremen II __predicate__ manager __object__ Alexander Nouri']
Text: Alexander Nouri manages SV Werder Bremen II.
Subject: SV Werder Bremen II
Predicate: manager
Object: Alexander Nouri

Triple: ['__subject__ Scotland national under-19 football team __predicate__ coach __object__ Scot Gemmill']
Text: Scot Gemmill is the coach of the Scottish national under 19 football team.
Subject: Scotland national under-19 football team
Predicate: coach
Object: Scot Gemmill

Triple: ['__subject__ Scotland national under-19 football team __predicate__ coach __object__ Scot Gemmill']
Text: Scot Gemmill is coach for the Scotland national under-19 football team.
Subject: Scotland national under-19 football team
Predicate: coach
Object: Scot Gemmill

Triple: ['__subject__ Scotland national under-21 football team __predicate__ coach __object__ Ricky Sbragia']
Text: Ricky Sbragia is the coach of the Scotland national under 21 football team.
Subject: Scotland national under-21 football team
Predicate: coach
Object: Ricky Sbragia

Triple: ['__subject__ Scotland national under-21 football team __predicate__ coach __object__ Ricky Sbragia']
Text: Ricky Sbragia coaches the Scotland national under-21 football team.
Subject: Scotland national under-21 football team
Predicate: coach
Object: Ricky Sbragia

Triple: ['__subject__ Scotland national under-21 football team __predicate__ coach __object__ Ricky Sbragia']
Text: The Scottish national under 21 football team coach is Ricky Sbragia.
Subject: Scotland national under-21 football team
Predicate: coach
Object: Ricky Sbragia

Triple: ['__subject__ Shabab Al-Ordon Club __predicate__ league __object__ Jordan Premier League']
Text: Shabab Al-Ordon Club is in the Jordan Premier League.
Subject: Shabab Al-Ordon Club
Predicate: league
Object: Jordan Premier League

Triple: ['__subject__ St. Louis __predicate__ isPartOf __object__ French First Republic']
Text: St Louis is part of the French First Republic.
Subject: St. Louis
Predicate: isPartOf
Object: French First Republic

Triple: ['__subject__ St. Louis __predicate__ isPartOf __object__ French First Republic']
Text: St. Louis is part of the French first republic.
Subject: St. Louis
Predicate: isPartOf
Object: French First Republic

Triple: ['__subject__ St. Louis __predicate__ isPartOf __object__ Greater St. Louis']
Text: St. Louis is a part of greater St. Louis.
Subject: St. Louis
Predicate: isPartOf
Object: Greater St. Louis

Triple: ['__subject__ St. Louis __predicate__ isPartOf __object__ Greater St. Louis']
Text: St Louis is part of Greater St Louis.
Subject: St. Louis
Predicate: isPartOf
Object: Greater St. Louis

Triple: ['__subject__ St. Louis __predicate__ isPartOf __object__ Kingdom of France']
Text: St. Louis is part of the Kingdom of France.
Subject: St. Louis
Predicate: isPartOf
Object: Kingdom of France

Triple: ['__subject__ St. Louis __predicate__ isPartOf __object__ Spain']
Text: St Louis is part of Spain.
Subject: St. Louis
Predicate: isPartOf
Object: Spain

Triple: ['__subject__ St. Louis __predicate__ isPartOf __object__ Spain']
Text: St. Louis is part of Spain.
Subject: St. Louis
Predicate: isPartOf
Object: Spain

Triple: ['__subject__ St. Louis __predicate__ leader __object__ Francis G. Slay']
Text: Francis G. Slay is the leader of St. Louis.
Subject: St. Louis
Predicate: leader
Object: Francis G. Slay

Triple: ['__subject__ St. Louis __predicate__ leader __object__ Francis G. Slay']
Text: Francis G Slay is the leader of St Louis.
Subject: St. Louis
Predicate: leader
Object: Francis G. Slay

Triple: ['__subject__ St. Louis Rams __predicate__ coach __object__ Jeff Fisher']
Text: Jeff Fisher is the coach of the St Louis Rams.
Subject: St. Louis Rams
Predicate: coach
Object: Jeff Fisher

Triple: ['__subject__ St. Louis Rams __predicate__ coach __object__ Jeff Fisher']
Text: Jeff Fisher is a coach for the St. Louis Rams.
Subject: St. Louis Rams
Predicate: coach
Object: Jeff Fisher

Triple: ['__subject__ St. Louis Rams __predicate__ coach __object__ Jeff Fisher']
Text: Jeff Fisher is a coach of the St. Louis Rams.
Subject: St. Louis Rams
Predicate: coach
Object: Jeff Fisher

Triple: ['__subject__ St. Louis Rams __predicate__ coach __object__ Joe Vitt']
Text: Joe Vitt is the coach for the St. Louis Rams.
Subject: St. Louis Rams
Predicate: coach
Object: Joe Vitt

Triple: ['__subject__ St. Louis Rams __predicate__ coach __object__ Joe Vitt']
Text: Joe Vitt is the coach of the St. Louis Rams.
Subject: St. Louis Rams
Predicate: coach
Object: Joe Vitt

Triple: ['__subject__ St. Louis Rams __predicate__ coach __object__ Joe Vitt']
Text: Joe Vitt is a coach of the St. Louis Rams.
Subject: St. Louis Rams
Predicate: coach
Object: Joe Vitt

Triple: ['__subject__ St. Louis Rams __predicate__ coach __object__ Steve Spagnuolo']
Text: Steve Spagnuolo is the coach of the St. Louis Rams.
Subject: St. Louis Rams
Predicate: coach
Object: Steve Spagnuolo

Triple: ['__subject__ St. Louis Rams __predicate__ coach __object__ Steve Spagnuolo']
Text: Steve Spagnuolo is the coach of St Louis Rams.
Subject: St. Louis Rams
Predicate: coach
Object: Steve Spagnuolo

Triple: ['__subject__ St. Louis Rams __predicate__ coach __object__ Steve Spagnuolo']
Text: The coach of St. Louis Rams is Steve Spagnuolo.
Subject: St. Louis Rams
Predicate: coach
Object: Steve Spagnuolo

Triple: ["__subject__ Steel Azin F.C. __predicate__ league __object__ Iran Football's 3rd Division"]
Text: Steel Azin F.C. play in Iran Football's 3rd Division.
Subject: Steel Azin F.C.
Predicate: league
Object: Iran Football's 3rd Division

Triple: ["__subject__ Steel Azin F.C. __predicate__ league __object__ Iran Football's 3rd Division"]
Text: Steel Azin FC is in Iran's Football 3rd Division.
Subject: Steel Azin F.C.
Predicate: league
Object: Iran Football's 3rd Division

Triple: ["__subject__ Steel Azin F.C. __predicate__ league __object__ Iran Football's 3rd Division"]
Text: The league Steel Azin F.C. play in is Iran Football's 3rd Division.
Subject: Steel Azin F.C.
Predicate: league
Object: Iran Football's 3rd Division

Triple: ['__subject__ Tennessee Titans __predicate__ coach __object__ Mike Mularkey']
Text: Mike Mularkey is the coach of the Tennessee Titans.
Subject: Tennessee Titans
Predicate: coach
Object: Mike Mularkey

Triple: ['__subject__ Tennessee Titans __predicate__ coach __object__ Mike Mularkey']
Text: Mike Mularkey is the coach for Tennessee Titans.
Subject: Tennessee Titans
Predicate: coach
Object: Mike Mularkey

Triple: ['__subject__ U.C. Sampdoria __predicate__ league __object__ Serie A']
Text: UC Sampdoria play in the Serie A league.
Subject: U.C. Sampdoria
Predicate: league
Object: Serie A

Triple: ['__subject__ U.C. Sampdoria __predicate__ league __object__ Serie A']
Text: U.C. Sampdoria is in the Serie A league.
Subject: U.C. Sampdoria
Predicate: league
Object: Serie A

Triple: ['__subject__ U.C. Sampdoria __predicate__ league __object__ Serie A']
Text: The league U.C. Sampdoria play in is Serie A.
Subject: U.C. Sampdoria
Predicate: league
Object: Serie A

Triple: ['__subject__ U.S. Città di Palermo __predicate__ league __object__ Serie A']
Text: The US Citta di Palermo are in the Serie A League.
Subject: U.S. Città di Palermo
Predicate: league
Object: Serie A

Triple: ['__subject__ U.S. Città di Palermo __predicate__ league __object__ Serie A']
Text: U.S. Città di Palermo play in the Serie A league.
Subject: U.S. Città di Palermo
Predicate: league
Object: Serie A

Triple: ['__subject__ U.S. Città di Palermo __predicate__ league __object__ Serie A']
Text: U.S. Citta di Palermo play in Serie A.
Subject: U.S. Città di Palermo
Predicate: league
Object: Serie A

Triple: ['__subject__ U.S. Città di Palermo __predicate__ manager __object__ Giuseppe Iachini']
Text: Giuseppe Iachini is the manager of U.S. Città di Palermo.
Subject: U.S. Città di Palermo
Predicate: manager
Object: Giuseppe Iachini

Triple: ['__subject__ U.S. Città di Palermo __predicate__ manager __object__ Giuseppe Iachini']
Text: The manager of U.S. Città di Palermo is Giuseppe Iachini.
Subject: U.S. Città di Palermo
Predicate: manager
Object: Giuseppe Iachini

Triple: ['__subject__ United Petrotrin F.C. __predicate__ ground __object__ Palo Seco']
Text: United Petrotrin FC's ground is Palo Seco.
Subject: United Petrotrin F.C.
Predicate: ground
Object: Palo Seco

Triple: ['__subject__ United Petrotrin F.C. __predicate__ ground __object__ Palo Seco']
Text: United Petrotrin F.C. play in Palo Seco.
Subject: United Petrotrin F.C.
Predicate: ground
Object: Palo Seco

Triple: ['__subject__ United Petrotrin F.C. __predicate__ ground __object__ Palo Seco']
Text: Palo Seco is the ground for United Petrotrin F.C.
Subject: United Petrotrin F.C.
Predicate: ground
Object: Palo Seco

Triple: ['__subject__ United Petrotrin F.C. __predicate__ ground __object__ Palo Seco Velodrome']
Text: The United Petrotrin F.C is playing in Palo Seco Velodrome.
Subject: United Petrotrin F.C.
Predicate: ground
Object: Palo Seco Velodrome

Triple: ['__subject__ United Petrotrin F.C. __predicate__ ground __object__ Palo Seco Velodrome']
Text: Palo Seco Velodrome is the ground of United Petrotrin F.C.
Subject: United Petrotrin F.C.
Predicate: ground
Object: Palo Seco Velodrome

Triple: ['__subject__ United Petrotrin F.C. __predicate__ ground __object__ Palo Seco Velodrome']
Text: United Petrotrin FC's ground is Palo Seco Velodrome.
Subject: United Petrotrin F.C.
Predicate: ground
Object: Palo Seco Velodrome

Triple: ['__subject__ VfL Wolfsburg __predicate__ league __object__ Bundesliga']
Text: The league Vfl Wolfsburg play in is Bundesliga.
Subject: VfL Wolfsburg
Predicate: league
Object: Bundesliga

Triple: ['__subject__ VfL Wolfsburg __predicate__ league __object__ Bundesliga']
Text: Vfl Wolfsburg play in the Bundesliga.
Subject: VfL Wolfsburg
Predicate: league
Object: Bundesliga

Triple: ['__subject__ VfL Wolfsburg __predicate__ manager __object__ Dieter Hecking']
Text: VfL Wolfsburg's manager is Dieter Hecking.
Subject: VfL Wolfsburg
Predicate: manager
Object: Dieter Hecking

Triple: ['__subject__ VfL Wolfsburg __predicate__ manager __object__ Dieter Hecking']
Text: Dieter Hecking is the manager of VfL Wolfsburg.
Subject: VfL Wolfsburg
Predicate: manager
Object: Dieter Hecking

Triple: ['__subject__ 103 Colmore Row __predicate__ architecturalStyle __object__ Brutalist architecture']
Text: The architecture style of 103 Colmore Row falls under Brutalist architecture.
Subject: 103 Colmore Row
Predicate: architecturalStyle
Object: Brutalist architecture

Triple: ['__subject__ 103 Colmore Row __predicate__ architecturalStyle __object__ Brutalist architecture']
Text: 103 Colmore Row is in the architectural style " Brutalist architecture".
Subject: 103 Colmore Row
Predicate: architecturalStyle
Object: Brutalist architecture

Triple: ['__subject__ 103 Colmore Row __predicate__ buildingStartDate __object__ 1973']
Text: 1973 was the start date for the building at 103 Colmore Row.
Subject: 103 Colmore Row
Predicate: buildingStartDate
Object: 1973

Triple: ['__subject__ 103 Colmore Row __predicate__ buildingStartDate __object__ 1973']
Text: The building of 103 Colmore Row began in 1973.
Subject: 103 Colmore Row
Predicate: buildingStartDate
Object: 1973

Triple: ['__subject__ 103 Colmore Row __predicate__ buildingStartDate __object__ 1973']
Text: 103 Colmore Row opened in 1973.
Subject: 103 Colmore Row
Predicate: buildingStartDate
Object: 1973

Triple: ['__subject__ 103 Colmore Row __predicate__ completionDate __object__ 1976']
Text: 103 Colmore Row was completed in 1976.
Subject: 103 Colmore Row
Predicate: completionDate
Object: 1976

Triple: ['__subject__ 103 Colmore Row __predicate__ completionDate __object__ 1976']
Text: The building of 103 Colmore Row was completed in 1976.
Subject: 103 Colmore Row
Predicate: completionDate
Object: 1976

Triple: ['__subject__ 103 Colmore Row __predicate__ floorCount __object__ 23']
Text: There are 23 floors at 103 Colmore Row.
Subject: 103 Colmore Row
Predicate: floorCount
Object: 23

Triple: ['__subject__ 103 Colmore Row __predicate__ floorCount __object__ 23']
Text: 103 Colmore Row has 23 floors.
Subject: 103 Colmore Row
Predicate: floorCount
Object: 23

Triple: ['__subject__ 103 Colmore Row __predicate__ location __object__ Colmore Row, Birmingham, England']
Text: 103 Colmore Row is located on Colmore Row, Birmingham, England.
Subject: 103 Colmore Row
Predicate: location
Object: Colmore Row, Birmingham, England

Triple: ['__subject__ 103 Colmore Row __predicate__ location __object__ Colmore Row, Birmingham, England']
Text: 103 Colmore Row is located in Colmore Row, Birmingham, England.
Subject: 103 Colmore Row
Predicate: location
Object: Colmore Row, Birmingham, England

Triple: ['__subject__ 103 Colmore Row __predicate__ location __object__ Colmore Row, Birmingham, England']
Text: 103 Colmore Row is in Birmingham, England.
Subject: 103 Colmore Row
Predicate: location
Object: Colmore Row, Birmingham, England

Triple: ['__subject__ 103 Colmore Row __predicate__ location __object__ Birmingham']
Text: 103 Colmore Row is located in Birmingham.
Subject: 103 Colmore Row
Predicate: location
Object: Birmingham

Triple: ['__subject__ 108 St Georges Terrace __predicate__ buildingStartDate __object__ 1981']
Text: The construction of 108 St Georges Terrace began in 1981.
Subject: 108 St Georges Terrace
Predicate: buildingStartDate
Object: 1981

Triple: ['__subject__ 108 St Georges Terrace __predicate__ buildingStartDate __object__ 1981']
Text: The building of 108 St. Georges Terrace was started in 1981.
Subject: 108 St Georges Terrace
Predicate: buildingStartDate
Object: 1981

Triple: ['__subject__ 108 St Georges Terrace __predicate__ completionDate __object__ 1988']
Text: 108 St Georges Terrace was completed in 1988.
Subject: 108 St Georges Terrace
Predicate: completionDate
Object: 1988

Triple: ['__subject__ 108 St Georges Terrace __predicate__ cost __object__ 120 million (Australian dollars)']
Text: 108 St Georges Terrace cost 120 million Australian dollars.
Subject: 108 St Georges Terrace
Predicate: cost
Object: 120 million (Australian dollars)

Triple: ['__subject__ 108 St Georges Terrace __predicate__ cost __object__ 120 million (Australian dollars)']
Text: 108 St Georges Terrace cost 120m Australian dollars.
Subject: 108 St Georges Terrace
Predicate: cost
Object: 120 million (Australian dollars)

Triple: ['__subject__ 108 St Georges Terrace __predicate__ cost __object__ 120 million (Australian dollars)']
Text: The cost of 108 St. Georges Terrace is 120 million AUD.
Subject: 108 St Georges Terrace
Predicate: cost
Object: 120 million (Australian dollars)

Triple: ['__subject__ 108 St Georges Terrace __predicate__ floorArea __object__ 39500.0 (square metres)']
Text: 108 St. Georges Terrace has a floor area of 39500.0 square metres.
Subject: 108 St Georges Terrace
Predicate: floorArea
Object: 39500.0 (square metres)

Triple: ['__subject__ 108 St Georges Terrace __predicate__ floorCount __object__ 50']
Text: 108 St Georges Terrace has a floor count of 50.
Subject: 108 St Georges Terrace
Predicate: floorCount
Object: 50

Triple: ['__subject__ 108 St Georges Terrace __predicate__ floorCount __object__ 50']
Text: There are 50 floors at 108 St Georges Terrace.
Subject: 108 St Georges Terrace
Predicate: floorCount
Object: 50

Triple: ['__subject__ 108 St Georges Terrace __predicate__ location __object__ Perth']
Text: The 108 St. Georges Terrace is located in Perth.
Subject: 108 St Georges Terrace
Predicate: location
Object: Perth

Triple: ['__subject__ 108 St Georges Terrace __predicate__ location __object__ Perth']
Text: 108 St. Georges Terrace is located in Perth.
Subject: 108 St Georges Terrace
Predicate: location
Object: Perth

Triple: ['__subject__ 11 Diagonal Street __predicate__ architect __object__ Helmut Jahn']
Text: The architect of 11 Diagonal Street is Helmut Jahn.
Subject: 11 Diagonal Street
Predicate: architect
Object: Helmut Jahn

Triple: ['__subject__ 11 Diagonal Street __predicate__ buildingStartDate __object__ 1978']
Text: The 11 Diagonal Street originated in 1978.
Subject: 11 Diagonal Street
Predicate: buildingStartDate
Object: 1978

Triple: ['__subject__ 11 Diagonal Street __predicate__ buildingStartDate __object__ 1978']
Text: 11 Diagonal Street was built in 1978.
Subject: 11 Diagonal Street
Predicate: buildingStartDate
Object: 1978

Triple: ['__subject__ 11 Diagonal Street __predicate__ buildingStartDate __object__ 1978']
Text: The building at 11 Diagonal Street was started to be erected in 1978.
Subject: 11 Diagonal Street
Predicate: buildingStartDate
Object: 1978

Triple: ['__subject__ 11 Diagonal Street __predicate__ floorArea __object__ 1200 (square metres)']
Text: 11 Diagonal Street has a floor area of 1200 square metres.
Subject: 11 Diagonal Street
Predicate: floorArea
Object: 1200 (square metres)

Triple: ['__subject__ 11 Diagonal Street __predicate__ floorCount __object__ 20']
Text: 11 Diagonal Street has 20 floors.
Subject: 11 Diagonal Street
Predicate: floorCount
Object: 20

Triple: ['__subject__ 11 Diagonal Street __predicate__ location __object__ Johannesburg']
Text: 11 Diagonal Street is in Johannesburg.
Subject: 11 Diagonal Street
Predicate: location
Object: Johannesburg

Triple: ['__subject__ 11 Diagonal Street __predicate__ location __object__ Johannesburg']
Text: 11 Diagonal Street is located in Johannesburg.
Subject: 11 Diagonal Street
Predicate: location
Object: Johannesburg

Triple: ['__subject__ 11 Diagonal Street __predicate__ owner __object__ Redefine Properties Limited']
Text: Redefine Properties Limited is the owner of 11 Diagonal Street.
Subject: 11 Diagonal Street
Predicate: owner
Object: Redefine Properties Limited

Triple: ['__subject__ 11 Diagonal Street __predicate__ owner __object__ Redefine Properties Limited']
Text: 11 Diagonal Street is owned by Redefine Properties Limited.
Subject: 11 Diagonal Street
Predicate: owner
Object: Redefine Properties Limited

Triple: ['__subject__ 11 Diagonal Street __predicate__ owner __object__ Redefine Properties Limited']
Text: Redefine Properties Limited owns 11 Diagonal Street.
Subject: 11 Diagonal Street
Predicate: owner
Object: Redefine Properties Limited

Triple: ['__subject__ 200 Public Square __predicate__ architect __object__ HOK (firm)']
Text: The architect of 200 Public Square is HOK.
Subject: 200 Public Square
Predicate: architect
Object: HOK (firm)

Triple: ['__subject__ 200 Public Square __predicate__ architect __object__ HOK (firm)']
Text: HOK (firm) were the architects of 200 Public Square.
Subject: 200 Public Square
Predicate: architect
Object: HOK (firm)

Triple: ['__subject__ 200 Public Square __predicate__ floorArea __object__ 111484 (square metres)']
Text: 200 Public Square has a floor area of 111484 square metres.
Subject: 200 Public Square
Predicate: floorArea
Object: 111484 (square metres)

Triple: ['__subject__ 200 Public Square __predicate__ floorArea __object__ 111484 (square metres)']
Text: 200 Public Square is 111484 square metres.
Subject: 200 Public Square
Predicate: floorArea
Object: 111484 (square metres)

Triple: ['__subject__ 200 Public Square __predicate__ floorCount __object__ 45']
Text: There are 45 floors at 200 Public Square.
Subject: 200 Public Square
Predicate: floorCount
Object: 45

Triple: ['__subject__ 200 Public Square __predicate__ floorCount __object__ 45']
Text: 200 Public Square has a floor count of 45.
Subject: 200 Public Square
Predicate: floorCount
Object: 45

Triple: ['__subject__ 200 Public Square __predicate__ location __object__ Cleveland, Ohio 44114']
Text: 200 Public Square is located in Cleveland, Ohio 44114.
Subject: 200 Public Square
Predicate: location
Object: Cleveland, Ohio 44114

Triple: ['__subject__ 200 Public Square __predicate__ location __object__ Cleveland, Ohio 44114']
Text: 200 Public Square is located in Cleveland Ohio 44114.
Subject: 200 Public Square
Predicate: location
Object: Cleveland, Ohio 44114

Triple: ['__subject__ 200 Public Square __predicate__ location __object__ United States']
Text: 200 Public Square is located in the United States.
Subject: 200 Public Square
Predicate: location
Object: United States

Triple: ['__subject__ 200 Public Square __predicate__ location __object__ Cleveland']
Text: 200 Public square is in Cleveland.
Subject: 200 Public Square
Predicate: location
Object: Cleveland

Triple: ['__subject__ 200 Public Square __predicate__ location __object__ Cleveland']
Text: 200 Public Square is located in Cleveland.
Subject: 200 Public Square
Predicate: location
Object: Cleveland

Triple: ['__subject__ 200 Public Square __predicate__ location __object__ Public Square, Cleveland']
Text: 200 Public Square is located at Public Square, Cleveland.
Subject: 200 Public Square
Predicate: location
Object: Public Square, Cleveland

Triple: ['__subject__ 200 Public Square __predicate__ location __object__ Public Square, Cleveland']
Text: 200 Public Square is located in Public Square, Cleveland.
Subject: 200 Public Square
Predicate: location
Object: Public Square, Cleveland

Triple: ['__subject__ 20 Fenchurch Street __predicate__ architect __object__ Rafael Viñoly']
Text: 20 Fenchurch Street was designed by the architect Rafael Viñoly.
Subject: 20 Fenchurch Street
Predicate: architect
Object: Rafael Viñoly

Triple: ['__subject__ 20 Fenchurch Street __predicate__ architect __object__ Rafael Viñoly']
Text: Rafael Viñoly designed 20 Fenchurch Street.
Subject: 20 Fenchurch Street
Predicate: architect
Object: Rafael Viñoly

Triple: ['__subject__ 20 Fenchurch Street __predicate__ completionDate __object__ April 2014']
Text: 20 Fenchurch Street was completed in April of 2014.
Subject: 20 Fenchurch Street
Predicate: completionDate
Object: April 2014

Triple: ['__subject__ 20 Fenchurch Street __predicate__ completionDate __object__ April 2014']
Text: 20 Fenchurch Street was completed in April 2014.
Subject: 20 Fenchurch Street
Predicate: completionDate
Object: April 2014

Triple: ['__subject__ 20 Fenchurch Street __predicate__ floorArea __object__ 62145.3 (square metres)']
Text: 20 Fenchurch Street has a floor area of 62145.3 square metres.
Subject: 20 Fenchurch Street
Predicate: floorArea
Object: 62145.3 (square metres)

Triple: ['__subject__ 20 Fenchurch Street __predicate__ floorCount __object__ 34']
Text: There are 34 floors at 20 Fenchurch Street.
Subject: 20 Fenchurch Street
Predicate: floorCount
Object: 34

Triple: ['__subject__ 20 Fenchurch Street __predicate__ floorCount __object__ 34']
Text: 20 Fenchurch Street has a floor count of 34.
Subject: 20 Fenchurch Street
Predicate: floorCount
Object: 34

Triple: ['__subject__ 20 Fenchurch Street __predicate__ location __object__ London']
Text: 20 Fenchurch Street is located in London.
Subject: 20 Fenchurch Street
Predicate: location
Object: London

Triple: ['__subject__ 250 Delaware Avenue __predicate__ buildingStartDate __object__ January, 2014']
Text: The construction of 250 Delaware Avenue began in January 2014.
Subject: 250 Delaware Avenue
Predicate: buildingStartDate
Object: January, 2014

Triple: ['__subject__ 250 Delaware Avenue __predicate__ buildingStartDate __object__ January, 2014']
Text: The start date of building 250 Delaware Avenue was January 2014.
Subject: 250 Delaware Avenue
Predicate: buildingStartDate
Object: January, 2014

Triple: ['__subject__ 250 Delaware Avenue __predicate__ buildingStartDate __object__ January, 2014']
Text: January 2014 is the building start date of 250 Delaware Avenue.
Subject: 250 Delaware Avenue
Predicate: buildingStartDate
Object: January, 2014

Triple: ['__subject__ 250 Delaware Avenue __predicate__ cost __object__ 110 million (dollars)']
Text: 250 Delaware Avenue cost 110 million dollars.
Subject: 250 Delaware Avenue
Predicate: cost
Object: 110 million (dollars)

Triple: ['__subject__ 250 Delaware Avenue __predicate__ cost __object__ 110 million (dollars)']
Text: The cost to build 250 Delaware Avenue is "110 million (dollars)".
Subject: 250 Delaware Avenue
Predicate: cost
Object: 110 million (dollars)

Triple: ['__subject__ 250 Delaware Avenue __predicate__ floorArea __object__ 30843.8 (square metres)']
Text: 250 Delaware Avenue has a floor area of 30843.8 square metres.
Subject: 250 Delaware Avenue
Predicate: floorArea
Object: 30843.8 (square metres)

Triple: ['__subject__ 250 Delaware Avenue __predicate__ floorArea __object__ 30843.8 (square metres)']
Text: 250 Delaware Avenue has a floor area of 30843.8 (square metres).
Subject: 250 Delaware Avenue
Predicate: floorArea
Object: 30843.8 (square metres)

Triple: ['__subject__ 250 Delaware Avenue __predicate__ floorArea __object__ 30843.8 (square metres)']
Text: 250 Delaware Avenue possesses a floor area of 30843.8 square metres.
Subject: 250 Delaware Avenue
Predicate: floorArea
Object: 30843.8 (square metres)

Triple: ['__subject__ 250 Delaware Avenue __predicate__ floorCount __object__ 12']
Text: 250 Delaware Avenue has 12 floors.
Subject: 250 Delaware Avenue
Predicate: floorCount
Object: 12

Triple: ['__subject__ 250 Delaware Avenue __predicate__ floorCount __object__ 12']
Text: There are a total of 12 floors in 250 Delaware Avenue.
Subject: 250 Delaware Avenue
Predicate: floorCount
Object: 12

Triple: ['__subject__ 250 Delaware Avenue __predicate__ floorCount __object__ 12']
Text: 250 Delaware Avenue has a floor count of 12.
Subject: 250 Delaware Avenue
Predicate: floorCount
Object: 12

Triple: ['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York']
Text: 250 Delaware Avenue is a location in Buffalo, New York.
Subject: 250 Delaware Avenue
Predicate: location
Object: Buffalo, New York

Triple: ['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York']
Text: 250 Delaware Avenue is located in Buffalo, New York.
Subject: 250 Delaware Avenue
Predicate: location
Object: Buffalo, New York

Triple: ['__subject__ 250 Delaware Avenue __predicate__ location __object__ Buffalo, New York']
Text: 250 Delaware Avenue is in Buffalo, New York.
Subject: 250 Delaware Avenue
Predicate: location
Object: Buffalo, New York

Triple: ['__subject__ 250 Delaware Avenue __predicate__ location __object__ United States']
Text: 250 Delaware Avenue is located in the United States.
Subject: 250 Delaware Avenue
Predicate: location
Object: United States

Triple: ['__subject__ 300 North LaSalle __predicate__ architect __object__ Pickard Chilton']
Text: Pickard Chilton is the architect of 300 North LaSalle.
Subject: 300 North LaSalle
Predicate: architect
Object: Pickard Chilton

Triple: ['__subject__ 300 North LaSalle __predicate__ architect __object__ Pickard Chilton']
Text: The architect of 300 North LaSalle is Pickard Chilton.
Subject: 300 North LaSalle
Predicate: architect
Object: Pickard Chilton

Triple: ['__subject__ 300 North LaSalle __predicate__ architect __object__ Pickard Chilton']
Text: The architect of 300 North LaSalle was Pickard Chilton.
Subject: 300 North LaSalle
Predicate: architect
Object: Pickard Chilton

Triple: ['__subject__ 300 North LaSalle __predicate__ completionDate __object__ 2009']
Text: 300 North LaSalle was completed in 2009.
Subject: 300 North LaSalle
Predicate: completionDate
Object: 2009

Triple: ['__subject__ 300 North LaSalle __predicate__ completionDate __object__ 2009']
Text: The building at 300 North LaSalle was completed in 2009.
Subject: 300 North LaSalle
Predicate: completionDate
Object: 2009

Triple: ['__subject__ 300 North LaSalle __predicate__ floorArea __object__ 120770.0 (square metres)']
Text: The floor area of 300 North LaSalle is 120770.0 square metres.
Subject: 300 North LaSalle
Predicate: floorArea
Object: 120770.0 (square metres)

Triple: ['__subject__ 300 North LaSalle __predicate__ location __object__ Illinois']
Text: 300 North LaSalle is in Illinois.
Subject: 300 North LaSalle
Predicate: location
Object: Illinois

Triple: ['__subject__ 320 South Boston Building __predicate__ completionDate __object__ 1929']
Text: The construction of 320 South Boston Building was completed in 1929.
Subject: 320 South Boston Building
Predicate: completionDate
Object: 1929

Triple: ['__subject__ 320 South Boston Building __predicate__ completionDate __object__ 1929']
Text: 320 South Boston was completed in 1929.
Subject: 320 South Boston Building
Predicate: completionDate
Object: 1929

Triple: ['__subject__ 320 South Boston Building __predicate__ completionDate __object__ 1929']
Text: 320 South Boston Building was completed in 1929.
Subject: 320 South Boston Building
Predicate: completionDate
Object: 1929

Triple: ['__subject__ 320 South Boston Building __predicate__ floorCount __object__ 22']
Text: There are 22 floors in 320 South Boston Building.
Subject: 320 South Boston Building
Predicate: floorCount
Object: 22

Triple: ['__subject__ 320 South Boston Building __predicate__ floorCount __object__ 22']
Text: The building at 320 South Boston Street has 22 floors.
Subject: 320 South Boston Building
Predicate: floorCount
Object: 22

Triple: ['__subject__ 320 South Boston Building __predicate__ formerName __object__ Exchange National Bank Building']
Text: 320 South Boston Building was formerly called the Exchange National Bank Building.
Subject: 320 South Boston Building
Predicate: formerName
Object: Exchange National Bank Building

Triple: ['__subject__ 320 South Boston Building __predicate__ formerName __object__ Exchange National Bank Building']
Text: The previous name of 320 South Boston Building was the Exchange National Bank Building.
Subject: 320 South Boston Building
Predicate: formerName
Object: Exchange National Bank Building

Triple: ['__subject__ 320 South Boston Building __predicate__ height __object__ 121.92 (metres)']
Text: The 320 South Boston Building is 121.92 metres high.
Subject: 320 South Boston Building
Predicate: height
Object: 121.92 (metres)

Triple: ['__subject__ 320 South Boston Building __predicate__ height __object__ 121.92 (metres)']
Text: The 320 South Boston Building has a height of 121.92 metres.
Subject: 320 South Boston Building
Predicate: height
Object: 121.92 (metres)

Triple: ['__subject__ 320 South Boston Building __predicate__ height __object__ 121.92 (metres)']
Text: 320 South Boston Building is 121.92 metres in height.
Subject: 320 South Boston Building
Predicate: height
Object: 121.92 (metres)

Triple: ['__subject__ 3Arena __predicate__ architect __object__ Populous (company)']
Text: The architect of 3Arena was the company Populous.
Subject: 3Arena
Predicate: architect
Object: Populous (company)

Triple: ['__subject__ 3Arena __predicate__ architect __object__ Populous (company)']
Text: The company Populous were the architects who designed the 3Arena.
Subject: 3Arena
Predicate: architect
Object: Populous (company)

Triple: ['__subject__ 3Arena __predicate__ buildingType __object__ Concert and events venue']
Text: The 3Arena is a concerts and events venue type building.
Subject: 3Arena
Predicate: buildingType
Object: Concert and events venue

Triple: ['__subject__ 3Arena __predicate__ buildingType __object__ Concert and events venue']
Text: The 3Arena hosts concerts and events.
Subject: 3Arena
Predicate: buildingType
Object: Concert and events venue

Triple: ['__subject__ 3Arena __predicate__ completionDate __object__ December 2008']
Text: The completion date of 3Arena is December 2008.
Subject: 3Arena
Predicate: completionDate
Object: December 2008

Triple: ['__subject__ 3Arena __predicate__ completionDate __object__ December 2008']
Text: The 3Arena was completed in December 2008.
Subject: 3Arena
Predicate: completionDate
Object: December 2008

Triple: ['__subject__ 3Arena __predicate__ height __object__ 28.0 (metres)']
Text: The height of 3Arena is 28 metres.
Subject: 3Arena
Predicate: height
Object: 28.0 (metres)

Triple: ['__subject__ 3Arena __predicate__ height __object__ 28.0 (metres)']
Text: The height of 3Arena is 28.0 metres.
Subject: 3Arena
Predicate: height
Object: 28.0 (metres)

Triple: ['__subject__ 3Arena __predicate__ height __object__ 28.0 (metres)']
Text: 3Arena is 28.0 metres high.
Subject: 3Arena
Predicate: height
Object: 28.0 (metres)

Triple: ['__subject__ 3Arena __predicate__ location __object__ North Wall Quay']
Text: The 3Arena is located at the North Wall Quay.
Subject: 3Arena
Predicate: location
Object: North Wall Quay

Triple: ['__subject__ 3Arena __predicate__ location __object__ North Wall Quay']
Text: The 3Arena is located on North Wall Quay.
Subject: 3Arena
Predicate: location
Object: North Wall Quay

Triple: ['__subject__ 3Arena __predicate__ location __object__ North Wall Quay']
Text: The 3Arena is located at "North Wall Quay".
Subject: 3Arena
Predicate: location
Object: North Wall Quay

Triple: ['__subject__ 3Arena __predicate__ location __object__ Dublin']
Text: The 3Arena is located in Dublin.
Subject: 3Arena
Predicate: location
Object: Dublin

Triple: ['__subject__ 3Arena __predicate__ location __object__ Dublin']
Text: 3Arena is located in Dublin.
Subject: 3Arena
Predicate: location
Object: Dublin

Triple: ['__subject__ 3Arena __predicate__ location __object__ Dublin']
Text: 3Arena is situated in Dublin.
Subject: 3Arena
Predicate: location
Object: Dublin

Triple: ['__subject__ 3Arena __predicate__ location __object__ North Wall, Dublin']
Text: 3Arena is located at North Wall, Dublin.
Subject: 3Arena
Predicate: location
Object: North Wall, Dublin

Triple: ['__subject__ 3Arena __predicate__ location __object__ North Wall, Dublin']
Text: The 3Arena is located at North Wall, Dublin.
Subject: 3Arena
Predicate: location
Object: North Wall, Dublin

Triple: ['__subject__ 3Arena __predicate__ owner __object__ Live Nation Entertainment']
Text: The owner of 3Arena is Live Nation Entertainment.
Subject: 3Arena
Predicate: owner
Object: Live Nation Entertainment

Triple: ['__subject__ 3Arena __predicate__ owner __object__ Live Nation Entertainment']
Text: 3Arena is owned by Live Nation Entertainment.
Subject: 3Arena
Predicate: owner
Object: Live Nation Entertainment

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ architect __object__ 3XN']
Text: 3XN was the architect of the AC Hotel Bella Sky Copenhagen.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: architect
Object: 3XN

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ architect __object__ 3XN']
Text: The AC Hotel Bella Sky in Copenhagen was designed by the architects of the 3XN firm.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: architect
Object: 3XN

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ architect __object__ 3XN']
Text: The architect of the AC Hotel Bella Sky, Copenhagen was 3XN.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: architect
Object: 3XN

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ developer __object__ Bella Center']
Text: The AC Hotel Bella Sky, Copenhagen was developed by the Bella Center.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: developer
Object: Bella Center

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ developer __object__ Bella Center']
Text: The developer of the AC Hotel Bella Sky in Copenhagen is Bella Center.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: developer
Object: Bella Center

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ developer __object__ Bella Center']
Text: Bella Center were developers of AC Hotel Bella Sky Copenhagen.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: developer
Object: Bella Center

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ floorCount __object__ 23']
Text: The AC Hotel Bella Sky Copenhagen has 23 floors.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: floorCount
Object: 23

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ floorCount __object__ 23']
Text: There are 23 floors in the AC Hotel Bella Sky Copenhagen.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: floorCount
Object: 23

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ floorCount __object__ 23']
Text: The Bella Sky hotel in Copenhagen has 23 floors.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: floorCount
Object: 23

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ location __object__ Copenhagen']
Text: The AC Hotel Bella Sky is in Copenhagen.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: location
Object: Copenhagen

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ location __object__ Copenhagen']
Text: AC Hotel Bella Sky Copenhagen is located in Copenhagen.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: location
Object: Copenhagen

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ location __object__ Copenhagen']
Text: The AC Hotel Bella Sky is located in Copenhagen.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: location
Object: Copenhagen

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ location __object__ Denmark']
Text: AC Hotel Bella Sky is in Copenhagen, Denmark.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: location
Object: Denmark

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ location __object__ Denmark']
Text: AC Hotel Bella Sky Copenhagen is located in Denmark.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: location
Object: Denmark

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ owner __object__ Bella Center']
Text: AC Hotel Bella Sky Copenhagen is owned by Bella Center.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: owner
Object: Bella Center

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ owner __object__ Bella Center']
Text: The owner of the AC Hotel Bella Sky Copenhagen is Bella Center.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: owner
Object: Bella Center

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ tenant __object__ Marriott International']
Text: Marriott International is the tenant of AC Hotel Bella Sky Copenhagen.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: tenant
Object: Marriott International

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ tenant __object__ Marriott International']
Text: The tenant of the AC Hotel Bella Sky Copenhagen is Marriott International.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: tenant
Object: Marriott International

Triple: ['__subject__ AC Hotel Bella Sky Copenhagen __predicate__ tenant __object__ Marriott International']
Text: The tenant of the AC Hotel Bella Sky Copenhagen is the Marriott International Hotel.
Subject: AC Hotel Bella Sky Copenhagen
Predicate: tenant
Object: Marriott International

Triple: ['__subject__ Adare __predicate__ isPartOf __object__ Munster']
Text: Adare is part of Munster.
Subject: Adare
Predicate: isPartOf
Object: Munster

Triple: ['__subject__ Adare Manor __predicate__ architect __object__ Augustus Pugin']
Text: The architect of Adare Manor is Augustus Pugin.
Subject: Adare Manor
Predicate: architect
Object: Augustus Pugin

Triple: ['__subject__ Adare Manor __predicate__ architect __object__ George Richard Pain']
Text: The architect of Adare Manor is George Richard Pain.
Subject: Adare Manor
Predicate: architect
Object: George Richard Pain

Triple: ['__subject__ Adare Manor __predicate__ architect __object__ George Richard Pain']
Text: Adare Manor's architect was George Richard Pain.
Subject: Adare Manor
Predicate: architect
Object: George Richard Pain

Triple: ['__subject__ Adare Manor __predicate__ architect __object__ George Richard Pain']
Text: The architect of Adare Manor was George Richard Pain.
Subject: Adare Manor
Predicate: architect
Object: George Richard Pain

Triple: ['__subject__ Adare Manor __predicate__ architect __object__ James Pain']
Text: The architect of Adare Manor was James Pain.
Subject: Adare Manor
Predicate: architect
Object: James Pain

Triple: ['__subject__ Adare Manor __predicate__ architect __object__ James Pain']
Text: James Pain was the architect of the Adare Manor.
Subject: Adare Manor
Predicate: architect
Object: James Pain

Triple: ['__subject__ Adare Manor __predicate__ architect __object__ Lewis Nockalls Cottingham']
Text: Adare Manor was designed by the architect Lewis Nockalls Cottingham.
Subject: Adare Manor
Predicate: architect
Object: Lewis Nockalls Cottingham

Triple: ['__subject__ Adare Manor __predicate__ architect __object__ Lewis Nockalls Cottingham']
Text: Lewis Nockalls Cottingham is the architect of Adare Manor.
Subject: Adare Manor
Predicate: architect
Object: Lewis Nockalls Cottingham

Triple: ['__subject__ Adare Manor __predicate__ architect __object__ Lewis Nockalls Cottingham']
Text: Lewis N. Cottingham is the architect of Adare Manor.
Subject: Adare Manor
Predicate: architect
Object: Lewis Nockalls Cottingham

Triple: ['__subject__ Adare Manor __predicate__ architect __object__ Philip Charles Hardwick']
Text: Philip Charles Hardwick was the architect of Adare Manor.
Subject: Adare Manor
Predicate: architect
Object: Philip Charles Hardwick

Triple: ['__subject__ Adare Manor __predicate__ architect __object__ Philip Charles Hardwick']
Text: Adare Manor's architect was Philip Charles Hardwick.
Subject: Adare Manor
Predicate: architect
Object: Philip Charles Hardwick

Triple: ['__subject__ Adare Manor __predicate__ architect __object__ Philip Charles Hardwick']
Text: The architect responsible for Adare Manor was Philip Charles Hardwick.
Subject: Adare Manor
Predicate: architect
Object: Philip Charles Hardwick

Triple: ['__subject__ Adare Manor __predicate__ completionDate __object__ 1862']
Text: The construction of Adare Manor was completed in 1862.
Subject: Adare Manor
Predicate: completionDate
Object: 1862

Triple: ['__subject__ Adare Manor __predicate__ completionDate __object__ 1862']
Text: Adare Manor was completed in 1862.
Subject: Adare Manor
Predicate: completionDate
Object: 1862

Triple: ['__subject__ Adare Manor __predicate__ completionDate __object__ 1862']
Text: The completion date of Adare Manor is 1862.
Subject: Adare Manor
Predicate: completionDate
Object: 1862

Triple: ['__subject__ Adare Manor __predicate__ location __object__ Adare']
Text: Adare Manor is located in Adare.
Subject: Adare Manor
Predicate: location
Object: Adare

Triple: ['__subject__ Adare Manor __predicate__ location __object__ County Limerick']
Text: Adare Manor is located in County Limerick.
Subject: Adare Manor
Predicate: location
Object: County Limerick

Triple: ['__subject__ Adare Manor __predicate__ location __object__ County Limerick']
Text: Adare Manor can be found in County Limerick.
Subject: Adare Manor
Predicate: location
Object: County Limerick

Triple: ['__subject__ Adare Manor __predicate__ owner __object__ J. P. McManus']
Text: J P McManus is the owner of Adare Manor.
Subject: Adare Manor
Predicate: owner
Object: J. P. McManus

Triple: ['__subject__ Adare Manor __predicate__ owner __object__ J. P. McManus']
Text: J.P. McManus is the owner of Adare Manor.
Subject: Adare Manor
Predicate: owner
Object: J. P. McManus

Triple: ['__subject__ Adare Manor __predicate__ owner __object__ J. P. McManus']
Text: JP McManus owns Adare Manor.
Subject: Adare Manor
Predicate: owner
Object: J. P. McManus

Triple: ['__subject__ Addis Ababa __predicate__ country __object__ Ethiopia']
Text: Addis Ababa is located in Ethiopia.
Subject: Addis Ababa
Predicate: country
Object: Ethiopia

Triple: ['__subject__ Addis Ababa __predicate__ country __object__ Ethiopia']
Text: Addis Ababa is in Ethiopia.
Subject: Addis Ababa
Predicate: country
Object: Ethiopia

Triple: ['__subject__ Addis Ababa __predicate__ isPartOf __object__ Addis Ababa Stadium']
Text: Addis Ababa Stadium is part of Addid Ababa.
Subject: Addis Ababa
Predicate: isPartOf
Object: Addis Ababa Stadium

Triple: ['__subject__ Addis Ababa __predicate__ isPartOf __object__ Addis Ababa Stadium']
Text: Addis Ababa Stadium is situated in Addis Ababa.
Subject: Addis Ababa
Predicate: isPartOf
Object: Addis Ababa Stadium

Triple: ['__subject__ Addis Ababa __predicate__ isPartOf __object__ Addis Ababa Stadium']
Text: The Addis Ababa Stadium is part of Addis Ababa.
Subject: Addis Ababa
Predicate: isPartOf
Object: Addis Ababa Stadium

Triple: ['__subject__ Addis Ababa City Hall __predicate__ buildingStartDate __object__ 1961']
Text: Building started on the Addis Ababa City Hall in 1961.
Subject: Addis Ababa City Hall
Predicate: buildingStartDate
Object: 1961

Triple: ['__subject__ Addis Ababa City Hall __predicate__ buildingStartDate __object__ 1961']
Text: The start date for building Addis Ababa City Hall was 1961.
Subject: Addis Ababa City Hall
Predicate: buildingStartDate
Object: 1961

Triple: ['__subject__ Addis Ababa City Hall __predicate__ buildingStartDate __object__ 1961']
Text: They started to build Addis Ababa City Hall in 1961.
Subject: Addis Ababa City Hall
Predicate: buildingStartDate
Object: 1961

Triple: ['__subject__ Addis Ababa City Hall __predicate__ buildingType __object__ Seat of local government']
Text: The Addis Ababa City Hall is the seat of the local government.
Subject: Addis Ababa City Hall
Predicate: buildingType
Object: Seat of local government

Triple: ['__subject__ Addis Ababa City Hall __predicate__ buildingType __object__ Seat of local government']
Text: Addis Ababa City Hall is the seat of Local Government.
Subject: Addis Ababa City Hall
Predicate: buildingType
Object: Seat of local government

Triple: ['__subject__ Addis Ababa City Hall __predicate__ completionDate __object__ 1964']
Text: Addis Ababa City Hall was completed in 1964.
Subject: Addis Ababa City Hall
Predicate: completionDate
Object: 1964

Triple: ['__subject__ Addis Ababa City Hall __predicate__ completionDate __object__ 1964']
Text: Addis Ababa City Hall's completion date was in 1964.
Subject: Addis Ababa City Hall
Predicate: completionDate
Object: 1964

Triple: ['__subject__ Addis Ababa City Hall __predicate__ completionDate __object__ 1964']
Text: Addis Ababa City Hall was finished in 1964.
Subject: Addis Ababa City Hall
Predicate: completionDate
Object: 1964

Triple: ['__subject__ Addis Ababa City Hall __predicate__ country __object__ Ethiopia']
Text: Addis Ababa City Hall is located in the country of Ethiopia.
Subject: Addis Ababa City Hall
Predicate: country
Object: Ethiopia

Triple: ['__subject__ Addis Ababa City Hall __predicate__ country __object__ Ethiopia']
Text: The Addis Ababa City Hall is in the country of Ethiopia.
Subject: Addis Ababa City Hall
Predicate: country
Object: Ethiopia

Triple: ['__subject__ Addis Ababa City Hall __predicate__ country __object__ Ethiopia']
Text: Addis Ababa City Hall is in Ethiopia.
Subject: Addis Ababa City Hall
Predicate: country
Object: Ethiopia

Triple: ['__subject__ Addis Ababa City Hall __predicate__ currentTenants __object__ Government of Addis Ababa']
Text: The Government of Addis Ababa is the current tenant of the Addis Ababa City Hall.
Subject: Addis Ababa City Hall
Predicate: currentTenants
Object: Government of Addis Ababa

Triple: ['__subject__ Addis Ababa City Hall __predicate__ currentTenants __object__ Government of Addis Ababa']
Text: The Government of Addis Ababa is the current tenants of the Addis Ababa city hall.
Subject: Addis Ababa City Hall
Predicate: currentTenants
Object: Government of Addis Ababa

Triple: ['__subject__ Addis Ababa City Hall __predicate__ currentTenants __object__ Government of Addis Ababa']
Text: The " Government of Addis Ababa" are the current tenants of Addis Ababa City Hall.
Subject: Addis Ababa City Hall
Predicate: currentTenants
Object: Government of Addis Ababa

Triple: ['__subject__ Addis Ababa City Hall __predicate__ floorArea __object__ 140000.0 (square metres)']
Text: The floor area of Addis Ababa City Hall is 140000.0 (square metres).
Subject: Addis Ababa City Hall
Predicate: floorArea
Object: 140000.0 (square metres)

Triple: ['__subject__ Addis Ababa City Hall __predicate__ floorArea __object__ 140000.0 (square metres)']
Text: Addis Ababa City Hall has a 140000.0 (square metres) floor area.
Subject: Addis Ababa City Hall
Predicate: floorArea
Object: 140000.0 (square metres)

Triple: ['__subject__ Addis Ababa City Hall __predicate__ floorArea __object__ 140000.0 (square metres)']
Text: Addis Ababa City Hall has a floor area of 140000.0 square metres.
Subject: Addis Ababa City Hall
Predicate: floorArea
Object: 140000.0 (square metres)

Triple: ['__subject__ Addis Ababa City Hall __predicate__ height __object__ 42 m']
Text: Addis Ababa City Hall has a height of 42 metres.
Subject: Addis Ababa City Hall
Predicate: height
Object: 42 m

Triple: ['__subject__ Addis Ababa City Hall __predicate__ height __object__ 42 m']
Text: Addis Ababa City Hall is 42 m high.
Subject: Addis Ababa City Hall
Predicate: height
Object: 42 m

Triple: ['__subject__ Addis Ababa City Hall __predicate__ location __object__ Addis Ababa']
Text: Addis Ababa City Hall is located in Addis Ababa.
Subject: Addis Ababa City Hall
Predicate: location
Object: Addis Ababa

Triple: ["__subject__ Adisham Hall __predicate__ address __object__ St. Benedict's Monastery, Adisham, Haputhale, Sri Lanka"]
Text: Adisham Hall is located on St. Benedict's Monastery, Adisham, Haputhale, Sri Lanka.
Subject: Adisham Hall
Predicate: address
Object: St. Benedict's Monastery, Adisham, Haputhale, Sri Lanka

Triple: ["__subject__ Adisham Hall __predicate__ address __object__ St. Benedict's Monastery, Adisham, Haputhale, Sri Lanka"]
Text: The address of Adisham Hall is St. Benedicts Monastery, Adisham, Haputhale, Sri Lanka.
Subject: Adisham Hall
Predicate: address
Object: St. Benedict's Monastery, Adisham, Haputhale, Sri Lanka

Triple: ["__subject__ Adisham Hall __predicate__ address __object__ St. Benedict's Monastery, Adisham, Haputhale, Sri Lanka"]
Text: The address of Adisham Hall is St Benedict's Monastery, Adisham, Haputhale, Sri Lanka.
Subject: Adisham Hall
Predicate: address
Object: St. Benedict's Monastery, Adisham, Haputhale, Sri Lanka

Triple: ['__subject__ Adisham Hall __predicate__ architecturalStyle __object__ Tudor and Jacabian']
Text: Adisham Halls Architectural style`is Tudor and Jacabian.
Subject: Adisham Hall
Predicate: architecturalStyle
Object: Tudor and Jacabian

Triple: ['__subject__ Adisham Hall __predicate__ architecturalStyle __object__ Tudor and Jacabian']
Text: The architecture style of Adisham Hall is Tudor and Jacabian.
Subject: Adisham Hall
Predicate: architecturalStyle
Object: Tudor and Jacabian

Triple: ['__subject__ Adisham Hall __predicate__ architecturalStyle __object__ Tudor and Jacabian']
Text: Adisham Hall is in the architectural style of "Tudor and Jacobean".
Subject: Adisham Hall
Predicate: architecturalStyle
Object: Tudor and Jacabian

Triple: ['__subject__ Adisham Hall __predicate__ architecturalStyle __object__ Tudor Revival architecture']
Text: Adisham Hall has the Tudor Revival architectural style.
Subject: Adisham Hall
Predicate: architecturalStyle
Object: Tudor Revival architecture

Triple: ['__subject__ Adisham Hall __predicate__ architecturalStyle __object__ Tudor Revival architecture']
Text: Adisham Hall has the architectural style 'Tudor Revival'.
Subject: Adisham Hall
Predicate: architecturalStyle
Object: Tudor Revival architecture

Triple: ['__subject__ Adisham Hall __predicate__ architecturalStyle __object__ Tudor Revival architecture']
Text: The Adisham Hall's style of architecture is Tudor Revival.
Subject: Adisham Hall
Predicate: architecturalStyle
Object: Tudor Revival architecture

Triple: ['__subject__ Adisham Hall __predicate__ buildingStartDate __object__ 1927']
Text: Construction of Adisham Hall began in 1927.
Subject: Adisham Hall
Predicate: buildingStartDate
Object: 1927

Triple: ['__subject__ Adisham Hall __predicate__ buildingStartDate __object__ 1927']
Text: Adisham Hall was begun to be built in 1927.
Subject: Adisham Hall
Predicate: buildingStartDate
Object: 1927

Triple: ['__subject__ Adisham Hall __predicate__ completionDate __object__ 1931']
Text: Adisham Hall was completed in 1931.
Subject: Adisham Hall
Predicate: completionDate
Object: 1931

Triple: ['__subject__ Adisham Hall __predicate__ completionDate __object__ 1931']
Text: The construction of Adisham Hall was completed in 1931.
Subject: Adisham Hall
Predicate: completionDate
Object: 1931

Triple: ['__subject__ Adisham Hall __predicate__ completionDate __object__ 1931']
Text: Adisham Hall was finished in 1931.
Subject: Adisham Hall
Predicate: completionDate
Object: 1931

Triple: ['__subject__ Adisham Hall __predicate__ country __object__ Sri Lanka']
Text: Adisham Hall is located in Sri Lanka.
Subject: Adisham Hall
Predicate: country
Object: Sri Lanka

Triple: ['__subject__ Adisham Hall __predicate__ country __object__ Sri Lanka']
Text: Adisham Hall is located in the country of Sri Lanka.
Subject: Adisham Hall
Predicate: country
Object: Sri Lanka

Triple: ['__subject__ Adisham Hall __predicate__ country __object__ Sri Lanka']
Text: Adisham Hall is in Sri Lanka.
Subject: Adisham Hall
Predicate: country
Object: Sri Lanka

Triple: ['__subject__ Adisham Hall __predicate__ location __object__ Haputale, Sri Lanka']
Text: Adisham Hall is located at Haputale, Sri Lanka.
Subject: Adisham Hall
Predicate: location
Object: Haputale, Sri Lanka

Triple: ['__subject__ Adisham Hall __predicate__ location __object__ Haputale, Sri Lanka']
Text: Adisham Hall is located in Haputale, Sri Lanka.
Subject: Adisham Hall
Predicate: location
Object: Haputale, Sri Lanka

Triple: ['__subject__ Adisham Hall __predicate__ location __object__ Haputale, Sri Lanka']
Text: Adisham Hall is in Haputale, Sri Lanka.
Subject: Adisham Hall
Predicate: location
Object: Haputale, Sri Lanka

Triple: ['__subject__ Adisham Hall __predicate__ location __object__ Sri Lanka']
Text: Adisham Hall is located in Sri Lanka.
Subject: Adisham Hall
Predicate: location
Object: Sri Lanka

Triple: ['__subject__ Adisham Hall __predicate__ location __object__ Sri Lanka']
Text: Adisham Hall is in Sri Lanka.
Subject: Adisham Hall
Predicate: location
Object: Sri Lanka

Triple: ['__subject__ Adisham Hall __predicate__ location __object__ Sri Lanka']
Text: Adisham Hall is situated in Sri Lanka.
Subject: Adisham Hall
Predicate: location
Object: Sri Lanka

Triple: ['__subject__ Ahmedabad __predicate__ country __object__ India']
Text: Ahmedabad is in India.
Subject: Ahmedabad
Predicate: country
Object: India

Triple: ['__subject__ Ahmedabad __predicate__ country __object__ India']
Text: Ahmedabad is located in India.
Subject: Ahmedabad
Predicate: country
Object: India

Triple: ['__subject__ Akita, Akita __predicate__ country __object__ Japan']
Text: Akita Akita is found in the country of Japan.
Subject: Akita, Akita
Predicate: country
Object: Japan

Triple: ['__subject__ Akita, Akita __predicate__ country __object__ Japan']
Text: Akita is located in Japan.
Subject: Akita, Akita
Predicate: country
Object: Japan

Triple: ['__subject__ Akita, Akita __predicate__ isPartOf __object__ Akita Prefecture']
Text: Akita, Akita is part of Akita Prefecture.
Subject: Akita, Akita
Predicate: isPartOf
Object: Akita Prefecture

Triple: ['__subject__ Akita Museum of Art __predicate__ address __object__ 1-4-2 Nakadori']
Text: The address of Akita Museum of Art is "1-4-2 Nakadori".
Subject: Akita Museum of Art
Predicate: address
Object: 1-4-2 Nakadori

Triple: ['__subject__ Akita Museum of Art __predicate__ address __object__ 1-4-2 Nakadori']
Text: The address of Akita Museum of Art is 142 Nakadori.
Subject: Akita Museum of Art
Predicate: address
Object: 1-4-2 Nakadori

Triple: ['__subject__ Akita Museum of Art __predicate__ architect __object__ Tadao Ando']
Text: Tadao Ando is the architect who designed the Akita Museum of Art.
Subject: Akita Museum of Art
Predicate: architect
Object: Tadao Ando

Triple: ['__subject__ Akita Museum of Art __predicate__ architect __object__ Tadao Ando']
Text: Tadao Ando is the architect of the Akita Museum of Art.
Subject: Akita Museum of Art
Predicate: architect
Object: Tadao Ando

Triple: ['__subject__ Akita Museum of Art __predicate__ architect __object__ Tadao Ando']
Text: Tadao Ando is the architect of Akita Museum of Art.
Subject: Akita Museum of Art
Predicate: architect
Object: Tadao Ando

Triple: ['__subject__ Akita Museum of Art __predicate__ floorArea __object__ 3746.66 (square metres)']
Text: The Akita Museum of Art has a floor area of 3746.66 (square metres).
Subject: Akita Museum of Art
Predicate: floorArea
Object: 3746.66 (square metres)

Triple: ['__subject__ Akita Museum of Art __predicate__ floorArea __object__ 3746.66 (square metres)']
Text: The floor area of the Akita Museum of Art is 3746.66 square metres.
Subject: Akita Museum of Art
Predicate: floorArea
Object: 3746.66 (square metres)

Triple: ['__subject__ Akita Museum of Art __predicate__ floorArea __object__ 3746.66 (square metres)']
Text: The Akita Museum of Art has a floor area of 3746.66 square metres.
Subject: Akita Museum of Art
Predicate: floorArea
Object: 3746.66 (square metres)

Triple: ['__subject__ Akita Museum of Art __predicate__ floorCount __object__ 3']
Text: The Akita Museum of Art has 3 floors.
Subject: Akita Museum of Art
Predicate: floorCount
Object: 3

Triple: ['__subject__ Akita Museum of Art __predicate__ floorCount __object__ 3']
Text: The Akita Museum of Art 3 floors.
Subject: Akita Museum of Art
Predicate: floorCount
Object: 3

Triple: ['__subject__ Akita Museum of Art __predicate__ location __object__ Akita, Akita']
Text: Akita Museum of Art is an art museum in the city of Akita.
Subject: Akita Museum of Art
Predicate: location
Object: Akita, Akita

Triple: ['__subject__ Akita Museum of Art __predicate__ location __object__ Akita, Akita']
Text: Akita Museum of Art is located in Akita, Akita.
Subject: Akita Museum of Art
Predicate: location
Object: Akita, Akita

Triple: ['__subject__ Akita Museum of Art __predicate__ location __object__ Akita, Akita']
Text: The Akita Museum of Art is located in Akita, Akita.
Subject: Akita Museum of Art
Predicate: location
Object: Akita, Akita

Triple: ['__subject__ Akita Museum of Art __predicate__ location __object__ Akita Prefecture']
Text: Akita Museum of Art is located in Akita Prefecture.
Subject: Akita Museum of Art
Predicate: location
Object: Akita Prefecture

Triple: ['__subject__ Akita Museum of Art __predicate__ location __object__ Akita Prefecture']
Text: The Akita Museum of Art is located in Akita Prefecture.
Subject: Akita Museum of Art
Predicate: location
Object: Akita Prefecture

Triple: ['__subject__ Akita Prefecture __predicate__ country __object__ Japan']
Text: The Akita Prefecture is located in Japan.
Subject: Akita Prefecture
Predicate: country
Object: Japan

Triple: ['__subject__ Akita Prefecture __predicate__ country __object__ Japan']
Text: The Akita Prefecture is part of the country of Japan.
Subject: Akita Prefecture
Predicate: country
Object: Japan

Triple: ['__subject__ Akita Prefecture __predicate__ country __object__ Japan']
Text: Akita Prefecture is located in Japan.
Subject: Akita Prefecture
Predicate: country
Object: Japan

Triple: ['__subject__ Alan B. Miller Hall __predicate__ address __object__ 101 Ukrop Way']
Text: The address of Alan B. Miller Hall is "101 Ukrop Way".
Subject: Alan B. Miller Hall
Predicate: address
Object: 101 Ukrop Way

Triple: ['__subject__ Alan B. Miller Hall __predicate__ address __object__ 101 Ukrop Way']
Text: The address of Alan B. Miller Hall is 101 Ukrop Way.
Subject: Alan B. Miller Hall
Predicate: address
Object: 101 Ukrop Way

Triple: ['__subject__ Alan B. Miller Hall __predicate__ architect __object__ Robert A. M. Stern']
Text: Robert A.M. Stern is the architect for Alan B. Miller Hall.
Subject: Alan B. Miller Hall
Predicate: architect
Object: Robert A. M. Stern

Triple: ['__subject__ Alan B. Miller Hall __predicate__ architect __object__ Robert A. M. Stern']
Text: The architect of Alan B Miller Hall is Robert A M Stern.
Subject: Alan B. Miller Hall
Predicate: architect
Object: Robert A. M. Stern

Triple: ['__subject__ Alan B. Miller Hall __predicate__ architect __object__ Robert A. M. Stern']
Text: Alan B. Miller Hall was designed by Robert A.M. Stern.
Subject: Alan B. Miller Hall
Predicate: architect
Object: Robert A. M. Stern

Triple: ['__subject__ Alan B. Miller Hall __predicate__ architecturalStyle __object__ Georgian architecture']
Text: The architectural style of the Alan B. Miller Hall is Georgian.
Subject: Alan B. Miller Hall
Predicate: architecturalStyle
Object: Georgian architecture

Triple: ['__subject__ Alan B. Miller Hall __predicate__ architecturalStyle __object__ Georgian architecture']
Text: The architectural style of the Alan B Miller Hall is Georgian.
Subject: Alan B. Miller Hall
Predicate: architecturalStyle
Object: Georgian architecture

Triple: ['__subject__ Alan B. Miller Hall __predicate__ architecturalStyle __object__ Georgian architecture']
Text: Alan B Miller Hall was built in the Georgian architecture style.
Subject: Alan B. Miller Hall
Predicate: architecturalStyle
Object: Georgian architecture

Triple: ['__subject__ Alan B. Miller Hall __predicate__ buildingStartDate __object__ 30 March 2007']
Text: Alan B. Miller Hall's building start date was in 30th March 2007.
Subject: Alan B. Miller Hall
Predicate: buildingStartDate
Object: 30 March 2007

Triple: ['__subject__ Alan B. Miller Hall __predicate__ buildingStartDate __object__ 30 March 2007']
Text: They started to build Alan B Miller Hall on 30 March, 2007.
Subject: Alan B. Miller Hall
Predicate: buildingStartDate
Object: 30 March 2007

Triple: ['__subject__ Alan B. Miller Hall __predicate__ completionDate __object__ 2009-06-01']
Text: Alan B. Miller Hall was completed on June 1st, 2009.
Subject: Alan B. Miller Hall
Predicate: completionDate
Object: 2009-06-01

Triple: ['__subject__ Alan B. Miller Hall __predicate__ completionDate __object__ 2009-06-01']
Text: Alan B. Miller Hall was completed on "1 June 2009".
Subject: Alan B. Miller Hall
Predicate: completionDate
Object: 2009-06-01

Triple: ['__subject__ Alan B. Miller Hall __predicate__ completionDate __object__ 2009-06-01']
Text: The Alan B. Miller Hall was completed on 1st June 2009.
Subject: Alan B. Miller Hall
Predicate: completionDate
Object: 2009-06-01

Triple: ['__subject__ Alan B. Miller Hall __predicate__ cost __object__ 75.0 million (dollars)']
Text: The Alan B Miller Hall cost 75 million dollars.
Subject: Alan B. Miller Hall
Predicate: cost
Object: 75.0 million (dollars)

Triple: ['__subject__ Alan B. Miller Hall __predicate__ cost __object__ 75.0 million (dollars)']
Text: Alan B. Miller Hall cost 75 million dollars.
Subject: Alan B. Miller Hall
Predicate: cost
Object: 75.0 million (dollars)

Triple: ['__subject__ Alan B. Miller Hall __predicate__ inaugurationDate __object__ 2009-10-02']
Text: Alan B. Miller Hall was inaugurated on 2009-10-02.
Subject: Alan B. Miller Hall
Predicate: inaugurationDate
Object: 2009-10-02

Triple: ['__subject__ Alan B. Miller Hall __predicate__ inaugurationDate __object__ 2009-10-02']
Text: Alan B. Miller Hall was inaugurated on "2009-10-02".
Subject: Alan B. Miller Hall
Predicate: inaugurationDate
Object: 2009-10-02

Triple: ['__subject__ Alan B. Miller Hall __predicate__ inaugurationDate __object__ 2009-10-02']
Text: The inauguration date of the Alan B. Miller Hall was 2nd October, 2009.
Subject: Alan B. Miller Hall
Predicate: inaugurationDate
Object: 2009-10-02

Triple: ['__subject__ Alan B. Miller Hall __predicate__ location __object__ Virginia']
Text: Alan B Miller Hall is located in Virginia.
Subject: Alan B. Miller Hall
Predicate: location
Object: Virginia

Triple: ['__subject__ Alan B. Miller Hall __predicate__ location __object__ Virginia']
Text: Alan B. Miller Hall is situated in Virginia.
Subject: Alan B. Miller Hall
Predicate: location
Object: Virginia

Triple: ['__subject__ Alan B. Miller Hall __predicate__ location __object__ Williamsburg, Virginia']
Text: The Alan B. Miller Hall is in Williamsburg, Virginia.
Subject: Alan B. Miller Hall
Predicate: location
Object: Williamsburg, Virginia

Triple: ['__subject__ Alan B. Miller Hall __predicate__ location __object__ Williamsburg, Virginia']
Text: The Alan B Miller Hall's location is Williamsburg, Virginia.
Subject: Alan B. Miller Hall
Predicate: location
Object: Williamsburg, Virginia

Triple: ['__subject__ Alan B. Miller Hall __predicate__ location __object__ Williamsburg, Virginia']
Text: The Alan B Miller Hall is located in Williamsburg, Virginia.
Subject: Alan B. Miller Hall
Predicate: location
Object: Williamsburg, Virginia

Triple: ['__subject__ Alan B. Miller Hall __predicate__ tenant __object__ Mason School of Business']
Text: Mason School of Business is a tenant of the Alan B. Miller Hall.
Subject: Alan B. Miller Hall
Predicate: tenant
Object: Mason School of Business

Triple: ['__subject__ Alfred Giles (architect) __predicate__ birthPlace __object__ England']
Text: The architect Alfred Giles was born in England.
Subject: Alfred Giles (architect)
Predicate: birthPlace
Object: England

Triple: ['__subject__ Alfred Giles (architect) __predicate__ birthPlace __object__ England']
Text: Architect, Alfred Giles was born in England.
Subject: Alfred Giles (architect)
Predicate: birthPlace
Object: England

Triple: ['__subject__ Alfred Giles (architect) __predicate__ deathPlace __object__ Kendall County, Texas']
Text: The architect Alfred Giles died in Kendall County, Texas.
Subject: Alfred Giles (architect)
Predicate: deathPlace
Object: Kendall County, Texas

Triple: ['__subject__ Alfred Giles (architect) __predicate__ deathPlace __object__ Kendall County, Texas']
Text: The architect Alfred Giles died in Kendall County Texas.
Subject: Alfred Giles (architect)
Predicate: deathPlace
Object: Kendall County, Texas

Triple: ['__subject__ Amdavad ni Gufa __predicate__ completionDate __object__ 1995']
Text: Amdavad ni Gufa was completed in 1995.
Subject: Amdavad ni Gufa
Predicate: completionDate
Object: 1995

Triple: ['__subject__ Amdavad ni Gufa __predicate__ country __object__ India']
Text: Amdavad ni Gufa is located in India.
Subject: Amdavad ni Gufa
Predicate: country
Object: India

Triple: ['__subject__ Amdavad ni Gufa __predicate__ location __object__ Ahmedabad']
Text: The location of Amdavad ni Gufa is Ahmedabad.
Subject: Amdavad ni Gufa
Predicate: location
Object: Ahmedabad

Triple: ['__subject__ Amdavad ni Gufa __predicate__ location __object__ Ahmedabad']
Text: Amdavad ni Gufa is located in Ahmedabad.
Subject: Amdavad ni Gufa
Predicate: location
Object: Ahmedabad

Triple: ['__subject__ Amdavad ni Gufa __predicate__ location __object__ Gujarat']
Text: Amdavad ni Gufa is located in Gujarat.
Subject: Amdavad ni Gufa
Predicate: location
Object: Gujarat

Triple: ['__subject__ Ampara Hospital __predicate__ bedCount __object__ 476']
Text: The bed count of Ampara Hospital is 476.
Subject: Ampara Hospital
Predicate: bedCount
Object: 476

Triple: ['__subject__ Ampara Hospital __predicate__ bedCount __object__ 476']
Text: Ampara Hospital has 476 beds.
Subject: Ampara Hospital
Predicate: bedCount
Object: 476

Triple: ['__subject__ Ampara Hospital __predicate__ location __object__ Ampara']
Text: The Ampara Hospital is in Ampara.
Subject: Ampara Hospital
Predicate: location
Object: Ampara

Triple: ['__subject__ Ampara Hospital __predicate__ location __object__ Ampara']
Text: Ampara Hospital is located in Ampara.
Subject: Ampara Hospital
Predicate: location
Object: Ampara

Triple: ['__subject__ Ampara Hospital __predicate__ region __object__ Ampara District']
Text: Ampara Hospital is located in the region of Ampara District.
Subject: Ampara Hospital
Predicate: region
Object: Ampara District

Triple: ['__subject__ Ampara Hospital __predicate__ region __object__ Ampara District']
Text: Ampara hospital is located in Ampara district.
Subject: Ampara Hospital
Predicate: region
Object: Ampara District

Triple: ['__subject__ Ampara Hospital __predicate__ state __object__ Eastern Province, Sri Lanka']
Text: Ampara Hospital is in Eastern Province, Sri Lanka.
Subject: Ampara Hospital
Predicate: state
Object: Eastern Province, Sri Lanka

Triple: ['__subject__ Ampara Hospital __predicate__ state __object__ Eastern Province, Sri Lanka']
Text: Ampara Hospital is in the Eastern Province, Sri Lanka.
Subject: Ampara Hospital
Predicate: state
Object: Eastern Province, Sri Lanka

Triple: ['__subject__ Ampara Hospital __predicate__ state __object__ Eastern Province, Sri Lanka']
Text: The Ampara Hospital is situated in the Eastern Province state of Sri Lanka.
Subject: Ampara Hospital
Predicate: state
Object: Eastern Province, Sri Lanka

Triple: ['__subject__ Ampara Hospital __predicate__ website __object__ <http://www.ghampara.gov.lk/>']
Text: Ampara Hospital has a website: http://www.ghampara.gov.lk/.
Subject: Ampara Hospital
Predicate: website
Object: <http://www.ghampara.gov.lk/>

Triple: ['__subject__ Asher and Mary Isabelle Richardson House __predicate__ architect __object__ Alfred Giles (architect)']
Text: Alfred Giles was the architect of Asher and Mary Isabelle Richardson House.
Subject: Asher and Mary Isabelle Richardson House
Predicate: architect
Object: Alfred Giles (architect)

Triple: ['__subject__ Asher and Mary Isabelle Richardson House __predicate__ architect __object__ Alfred Giles (architect)']
Text: Asher and Mary Isabelle Richardson House was designed by architect Alfred Giles.
Subject: Asher and Mary Isabelle Richardson House
Predicate: architect
Object: Alfred Giles (architect)

Triple: ['__subject__ Asher and Mary Isabelle Richardson House __predicate__ architect __object__ Alfred Giles (architect)']
Text: The architect of Asher and Mary Isabelle Richardson House was Alfred Giles.
Subject: Asher and Mary Isabelle Richardson House
Predicate: architect
Object: Alfred Giles (architect)

Triple: ['__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ Asherton, Texas']
Text: Asher and Mary Isabelle Richardson House is located in Asherton, Texas.
Subject: Asher and Mary Isabelle Richardson House
Predicate: location
Object: Asherton, Texas

Triple: ['__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ U.S. Route 83']
Text: Asher and Mary Isabelle Richardson House is located at U.S. Route 83.
Subject: Asher and Mary Isabelle Richardson House
Predicate: location
Object: U.S. Route 83

Triple: ['__subject__ Asher and Mary Isabelle Richardson House __predicate__ location __object__ U.S. Route 83']
Text: The Asher and Mary Isabelle Richardson House is located on U.S. Route 83.
Subject: Asher and Mary Isabelle Richardson House
Predicate: location
Object: U.S. Route 83

Triple: ['__subject__ Asher and Mary Isabelle Richardson House __predicate__ yearOfConstruction __object__ 1911']
Text: Asher and Mary Isabelle Richardson House was built in 1911.
Subject: Asher and Mary Isabelle Richardson House
Predicate: yearOfConstruction
Object: 1911

Triple: ['__subject__ Asher and Mary Isabelle Richardson House __predicate__ yearOfConstruction __object__ 1911']
Text: Asher and Mary Isabelle Richardson House was constructed in 1911.
Subject: Asher and Mary Isabelle Richardson House
Predicate: yearOfConstruction
Object: 1911

Triple: ['__subject__ Asherton, Texas __predicate__ country __object__ United States']
Text: Asherton Texas is in the United States.
Subject: Asherton, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Asherton, Texas __predicate__ country __object__ United States']
Text: Asherton is situated in Texas, United States.
Subject: Asherton, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Asherton, Texas __predicate__ country __object__ United States']
Text: Asherton, Texas is in the country of the United States.
Subject: Asherton, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Asherton, Texas __predicate__ isPartOf __object__ Dimmit County, Texas']
Text: Asherton, Texas is part of Dimmit County, Texas.
Subject: Asherton, Texas
Predicate: isPartOf
Object: Dimmit County, Texas

Triple: ['__subject__ Asherton, Texas __predicate__ isPartOf __object__ Dimmit County, Texas']
Text: Asherton is part of Dimmit County, Texas.
Subject: Asherton, Texas
Predicate: isPartOf
Object: Dimmit County, Texas

Triple: ['__subject__ Asherton, Texas __predicate__ isPartOf __object__ United States']
Text: Asherton, Texas is part of the United States.
Subject: Asherton, Texas
Predicate: isPartOf
Object: United States

Triple: ['__subject__ Asilomar Conference Grounds __predicate__ NationalRegisterOfHistoricPlacesReferenceNumber __object__ 87000823']
Text: Asilomar Conference Grounds has the reference number 87000823 in the National Register of Historic Places.
Subject: Asilomar Conference Grounds
Predicate: NationalRegisterOfHistoricPlacesReferenceNumber
Object: 87000823

Triple: ['__subject__ Asilomar Conference Grounds __predicate__ NationalRegisterOfHistoricPlacesReferenceNumber __object__ 87000823']
Text: The reference number in the National Register of Historic Places for Asilomar Conference Grounds is 87000823.
Subject: Asilomar Conference Grounds
Predicate: NationalRegisterOfHistoricPlacesReferenceNumber
Object: 87000823

Triple: ['__subject__ Asilomar Conference Grounds __predicate__ NationalRegisterOfHistoricPlacesReferenceNumber __object__ 87000823']
Text: "87000823" is Asilomar Conference Grounds' reference number in the National Register of Historic Places.
Subject: Asilomar Conference Grounds
Predicate: NationalRegisterOfHistoricPlacesReferenceNumber
Object: 87000823

Triple: ['__subject__ Asilomar Conference Grounds __predicate__ addedToTheNationalRegisterOfHistoricPlaces __object__ 1987-02-27']
Text: The Asilomar Conference Grounds were added to the National Register of Historic Places on 27 February 1987.
Subject: Asilomar Conference Grounds
Predicate: addedToTheNationalRegisterOfHistoricPlaces
Object: 1987-02-27

Triple: ['__subject__ Asilomar Conference Grounds __predicate__ addedToTheNationalRegisterOfHistoricPlaces __object__ 1987-02-27']
Text: Asilomar Conference Grounds was added to the National Register of Historic Places on February the 27nd 1987.
Subject: Asilomar Conference Grounds
Predicate: addedToTheNationalRegisterOfHistoricPlaces
Object: 1987-02-27

Triple: ['__subject__ Asilomar Conference Grounds __predicate__ architecturalStyle __object__ American Craftsman']
Text: The Asilomar Conference Grounds have the architectural style of American Craftsman.
Subject: Asilomar Conference Grounds
Predicate: architecturalStyle
Object: American Craftsman

Triple: ['__subject__ Asilomar Conference Grounds __predicate__ architecturalStyle __object__ Arts and Crafts movement']
Text: Asilomar Conference Grounds has the architectural style of the Arts and Crafts Movement.
Subject: Asilomar Conference Grounds
Predicate: architecturalStyle
Object: Arts and Crafts movement

Triple: ['__subject__ Asilomar Conference Grounds __predicate__ architecturalStyle __object__ Arts and Crafts movement']
Text: The Asilomar Conference Grounds has an Arts and Crafts movement style architecture.
Subject: Asilomar Conference Grounds
Predicate: architecturalStyle
Object: Arts and Crafts movement

Triple: ['__subject__ Asilomar Conference Grounds __predicate__ architecturalStyle __object__ Arts and Crafts movement']
Text: The Asilomar Conference Grounds are in the architectural style of the Arts and Crafts Movement.
Subject: Asilomar Conference Grounds
Predicate: architecturalStyle
Object: Arts and Crafts movement

Triple: ['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Asilomar Blvd., Pacific Grove, California']
Text: Asilomar Conference Grounds is located at Asilomar Blvd., Pacific Grove, California.
Subject: Asilomar Conference Grounds
Predicate: location
Object: Asilomar Blvd., Pacific Grove, California

Triple: ['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Asilomar Blvd., Pacific Grove, California']
Text: Asilomar Conference Grounds is located on Asilomar Blvd, Pacific Grove, California.
Subject: Asilomar Conference Grounds
Predicate: location
Object: Asilomar Blvd., Pacific Grove, California

Triple: ['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Asilomar Blvd., Pacific Grove, California']
Text: The location of Asilomar Conference Grounds is Asilomar Blvd., Pacific Grove, California.
Subject: Asilomar Conference Grounds
Predicate: location
Object: Asilomar Blvd., Pacific Grove, California

Triple: ['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Pacific Grove, California']
Text: The Asilomar Conference Grounds is located at Pacific Grove, California.
Subject: Asilomar Conference Grounds
Predicate: location
Object: Pacific Grove, California

Triple: ['__subject__ Asilomar Conference Grounds __predicate__ location __object__ Pacific Grove, California']
Text: Asilomar Conference Grounds are located in Pacific Grove, California.
Subject: Asilomar Conference Grounds
Predicate: location
Object: Pacific Grove, California

Triple: ['__subject__ Asser Levy Public Baths __predicate__ NationalRegisterOfHistoricPlacesReferenceNumber __object__ 80002709']
Text: Asser Levy Public Baths has the reference number 80002709 in the National Register of Historic Places.
Subject: Asser Levy Public Baths
Predicate: NationalRegisterOfHistoricPlacesReferenceNumber
Object: 80002709

Triple: ['__subject__ Asser Levy Public Baths __predicate__ NationalRegisterOfHistoricPlacesReferenceNumber __object__ 80002709']
Text: The Reference Number in the National Register of Historic Places of Asser Levy Public Baths is 80002709.
Subject: Asser Levy Public Baths
Predicate: NationalRegisterOfHistoricPlacesReferenceNumber
Object: 80002709

Triple: ['__subject__ Asser Levy Public Baths __predicate__ NationalRegisterOfHistoricPlacesReferenceNumber __object__ 80002709']
Text: Asser Levy Public Baths' reference number is 80002709 in the National Register of Historic Places.
Subject: Asser Levy Public Baths
Predicate: NationalRegisterOfHistoricPlacesReferenceNumber
Object: 80002709

Triple: ['__subject__ Asser Levy Public Baths __predicate__ addedToTheNationalRegisterOfHistoricPlaces __object__ 1980-04-23']
Text: Asser Levy Public Baths was added to the National Register of Historic Places on 1980-04-23.
Subject: Asser Levy Public Baths
Predicate: addedToTheNationalRegisterOfHistoricPlaces
Object: 1980-04-23

Triple: ['__subject__ Asser Levy Public Baths __predicate__ addedToTheNationalRegisterOfHistoricPlaces __object__ 1980-04-23']
Text: Asser Levy Public Baths was added to the National Register of Historic Places on "1980-04-23".
Subject: Asser Levy Public Baths
Predicate: addedToTheNationalRegisterOfHistoricPlaces
Object: 1980-04-23

Triple: ['__subject__ Asser Levy Public Baths __predicate__ addedToTheNationalRegisterOfHistoricPlaces __object__ 1980-04-23']
Text: Asser Levy Public Baths was added to the National Register of Historic Places on 23rd April 1980.
Subject: Asser Levy Public Baths
Predicate: addedToTheNationalRegisterOfHistoricPlaces
Object: 1980-04-23

Triple: ['__subject__ Asser Levy Public Baths __predicate__ architecturalStyle __object__ Romanesque Revival architecture']
Text: The Asser Levy Public Baths have the Romanesque Revival style of architecture.
Subject: Asser Levy Public Baths
Predicate: architecturalStyle
Object: Romanesque Revival architecture

Triple: ['__subject__ Asser Levy Public Baths __predicate__ architecturalStyle __object__ Romanesque Revival architecture']
Text: The Asser Levy Public Baths architectural style is that of Romanesque Revival.
Subject: Asser Levy Public Baths
Predicate: architecturalStyle
Object: Romanesque Revival architecture

Triple: ['__subject__ Asser Levy Public Baths __predicate__ architecturalStyle __object__ Romanesque Revival architecture']
Text: The Asser Levy Public Baths are in the architectural style of Romanesque Revival architecture.
Subject: Asser Levy Public Baths
Predicate: architecturalStyle
Object: Romanesque Revival architecture

Triple: ['__subject__ Asser Levy Public Baths __predicate__ location __object__ Asser Levy Place and East 23rd Street']
Text: The Asser Levy Public Baths is in Asser Levy Place and East 23rd Street.
Subject: Asser Levy Public Baths
Predicate: location
Object: Asser Levy Place and East 23rd Street

Triple: ['__subject__ Asser Levy Public Baths __predicate__ location __object__ Asser Levy Place and East 23rd Street']
Text: Asser Levy Public Baths are located on Asser Levy Place and East 23rd Street.
Subject: Asser Levy Public Baths
Predicate: location
Object: Asser Levy Place and East 23rd Street

Triple: ['__subject__ Asser Levy Public Baths __predicate__ location __object__ Asser Levy Place and East 23rd Street']
Text: The Asser Levy Public Baths are located in Asser Levy Place, East 23rd Street.
Subject: Asser Levy Public Baths
Predicate: location
Object: Asser Levy Place and East 23rd Street

Triple: ['__subject__ Asser Levy Public Baths __predicate__ location __object__ 23rd Street (Manhattan)']
Text: Asser Levy Public Baths is located at 23rd Street (Manhattan).
Subject: Asser Levy Public Baths
Predicate: location
Object: 23rd Street (Manhattan)

Triple: ['__subject__ Asser Levy Public Baths __predicate__ location __object__ 23rd Street (Manhattan)']
Text: Asser Levy Public Baths is located on 23rd Street, Manhattan.
Subject: Asser Levy Public Baths
Predicate: location
Object: 23rd Street (Manhattan)

Triple: ['__subject__ Asser Levy Public Baths __predicate__ location __object__ Avenue A (Manhattan)']
Text: Asser Levy Public Baths is located in Avenue A, Manhattan.
Subject: Asser Levy Public Baths
Predicate: location
Object: Avenue A (Manhattan)

Triple: ['__subject__ Asser Levy Public Baths __predicate__ location __object__ Manhattan']
Text: Asser Levy Public Baths is located in Manhattan.
Subject: Asser Levy Public Baths
Predicate: location
Object: Manhattan

Triple: ['__subject__ Augustus Pugin __predicate__ birthPlace __object__ Bloomsbury']
Text: The birth place of Augustus Pugin is Bloomsbury.
Subject: Augustus Pugin
Predicate: birthPlace
Object: Bloomsbury

Triple: ['__subject__ Augustus Pugin __predicate__ birthPlace __object__ Bloomsbury']
Text: Augustus Pugin's birthplace is Bloomsbury.
Subject: Augustus Pugin
Predicate: birthPlace
Object: Bloomsbury

Triple: ['__subject__ Augustus Pugin __predicate__ significantBuilding __object__ Palace of Westminster']
Text: One of the significant buildings designed by Augustus Pugin is the Palace Of Westminster.
Subject: Augustus Pugin
Predicate: significantBuilding
Object: Palace of Westminster

Triple: ['__subject__ Birmingham __predicate__ governingBody __object__ Birmingham City Council']
Text: Birmingham's governing body is Birmingham City Council.
Subject: Birmingham
Predicate: governingBody
Object: Birmingham City Council

Triple: ['__subject__ Birmingham __predicate__ governingBody __object__ Birmingham City Council']
Text: The Birmingham City Council is the governing body of Birmingham.
Subject: Birmingham
Predicate: governingBody
Object: Birmingham City Council

Triple: ['__subject__ Birmingham __predicate__ governingBody __object__ Birmingham City Council']
Text: The governing body of Birmingham is Birmingham City Council.
Subject: Birmingham
Predicate: governingBody
Object: Birmingham City Council

Triple: ['__subject__ Birmingham __predicate__ leader __object__ Andrew Mitchell']
Text: Andrew Mitchell is the leader of Birmingham.
Subject: Birmingham
Predicate: leader
Object: Andrew Mitchell

Triple: ['__subject__ Birmingham __predicate__ leader __object__ Andrew Mitchell']
Text: Birmingham's leader is Andrew Mitchell.
Subject: Birmingham
Predicate: leader
Object: Andrew Mitchell

Triple: ['__subject__ Birmingham __predicate__ leader __object__ Conservative Party (UK)']
Text: The leader of Birmingham is the Conservative Party (UK).
Subject: Birmingham
Predicate: leader
Object: Conservative Party (UK)

Triple: ['__subject__ Birmingham __predicate__ leader __object__ John Clancy (Labour politician)']
Text: Labour politician, John Clancy is the leader of Birmingham.
Subject: Birmingham
Predicate: leader
Object: John Clancy (Labour politician)

Triple: ['__subject__ Birmingham __predicate__ leader __object__ Khalid Mahmood (British politician)']
Text: Khalid Mahmood (British politician) is one of the leaders of Birmingham.
Subject: Birmingham
Predicate: leader
Object: Khalid Mahmood (British politician)

Triple: ['__subject__ Birmingham __predicate__ leader __object__ Labour Party (UK)']
Text: Birmingham Council is led by the Labour Party (UK).
Subject: Birmingham
Predicate: leader
Object: Labour Party (UK)

Triple: ['__subject__ Birmingham __predicate__ leader __object__ Labour Party (UK)']
Text: The Labour Party leads Birmingham.
Subject: Birmingham
Predicate: leader
Object: Labour Party (UK)

Triple: ['__subject__ Birmingham __predicate__ leader __object__ Liberal Democrats']
Text: The Liberal Democrats are the leaders of Birmingham.
Subject: Birmingham
Predicate: leader
Object: Liberal Democrats

Triple: ['__subject__ Birmingham __predicate__ leader __object__ Liberal Democrats']
Text: The leader of Birmingham are the Liberal Democrats.
Subject: Birmingham
Predicate: leader
Object: Liberal Democrats

Triple: ['__subject__ Birmingham __predicate__ leader __object__ Liberal Democrats']
Text: Liberal Democrats are leaders of Birmingham.
Subject: Birmingham
Predicate: leader
Object: Liberal Democrats

Triple: ['__subject__ Buffalo, New York __predicate__ isPartOf __object__ New York']
Text: Buffalo New York is part of New York.
Subject: Buffalo, New York
Predicate: isPartOf
Object: New York

Triple: ['__subject__ Chicago __predicate__ country __object__ United States']
Text: Chicago is located in the United States.
Subject: Chicago
Predicate: country
Object: United States

Triple: ['__subject__ Chicago __predicate__ country __object__ United States']
Text: Chicago is located in the U.S.
Subject: Chicago
Predicate: country
Object: United States

Triple: ['__subject__ Chicago __predicate__ country __object__ United States']
Text: Chicago is in the United States.
Subject: Chicago
Predicate: country
Object: United States

Triple: ['__subject__ Chicago __predicate__ isPartOf __object__ Cook County, Illinois']
Text: Chicago is part of Cook County, Illinois.
Subject: Chicago
Predicate: isPartOf
Object: Cook County, Illinois

Triple: ['__subject__ Chicago __predicate__ isPartOf __object__ Cook County, Illinois']
Text: Chicago is in Cook County, Illinois.
Subject: Chicago
Predicate: isPartOf
Object: Cook County, Illinois

Triple: ['__subject__ Chicago __predicate__ isPartOf __object__ Illinois']
Text: Chicago is part of Illinois.
Subject: Chicago
Predicate: isPartOf
Object: Illinois

Triple: ['__subject__ Chicago __predicate__ isPartOf __object__ Illinois']
Text: Chicago is part of the State of Illinois.
Subject: Chicago
Predicate: isPartOf
Object: Illinois

Triple: ['__subject__ Chicago __predicate__ isPartOf __object__ Illinois']
Text: The city of Chicago is part of the state of Illinois.
Subject: Chicago
Predicate: isPartOf
Object: Illinois

Triple: ['__subject__ Chicago __predicate__ leader __object__ Rahm Emanuel']
Text: Rahm Emanuel is a leader in Chicago.
Subject: Chicago
Predicate: leader
Object: Rahm Emanuel

Triple: ['__subject__ Chicago __predicate__ leader __object__ Rahm Emanuel']
Text: Chicago's leader is called Rahm Emanuel.
Subject: Chicago
Predicate: leader
Object: Rahm Emanuel

Triple: ['__subject__ Chicago __predicate__ leader __object__ Rahm Emanuel']
Text: Rahm Emanuel is the leader of Chicago.
Subject: Chicago
Predicate: leader
Object: Rahm Emanuel

Triple: ['__subject__ Chicago __predicate__ leader __object__ Susana Mendoza']
Text: Susana Mendoza is the leader of Chicago.
Subject: Chicago
Predicate: leader
Object: Susana Mendoza

Triple: ['__subject__ Chicago __predicate__ leader __object__ Susana Mendoza']
Text: The leader of Chicago is Susana Mendoza.
Subject: Chicago
Predicate: leader
Object: Susana Mendoza

Triple: ['__subject__ Chicago __predicate__ leader __object__ Susana Mendoza']
Text: Susana Mendoza is a leader in Chicago.
Subject: Chicago
Predicate: leader
Object: Susana Mendoza

Triple: ['__subject__ Cleveland __predicate__ country __object__ United States']
Text: Cleveland is located in the United States.
Subject: Cleveland
Predicate: country
Object: United States

Triple: ['__subject__ Cleveland __predicate__ country __object__ United States']
Text: Cleveland is in the United States.
Subject: Cleveland
Predicate: country
Object: United States

Triple: ['__subject__ Cleveland __predicate__ governingBody __object__ Cleveland City Council']
Text: Cleveland's governing body is Cleveland City Council.
Subject: Cleveland
Predicate: governingBody
Object: Cleveland City Council

Triple: ['__subject__ Cleveland __predicate__ governingBody __object__ Cleveland City Council']
Text: The Cleveland City Council is the governing body of Cleveland.
Subject: Cleveland
Predicate: governingBody
Object: Cleveland City Council

Triple: ['__subject__ Cleveland __predicate__ governingBody __object__ Cleveland City Council']
Text: The governing body of Cleveland is Cleveland City Council.
Subject: Cleveland
Predicate: governingBody
Object: Cleveland City Council

Triple: ['__subject__ Cleveland __predicate__ isPartOf __object__ Cuyahoga County, Ohio']
Text: Cleveland is part of Cuyahoga County, Ohio.
Subject: Cleveland
Predicate: isPartOf
Object: Cuyahoga County, Ohio

Triple: ['__subject__ Cleveland __predicate__ isPartOf __object__ Cuyahoga County, Ohio']
Text: Cleveland is part of the Cuyahoga County in Ohio.
Subject: Cleveland
Predicate: isPartOf
Object: Cuyahoga County, Ohio

Triple: ['__subject__ Cleveland __predicate__ isPartOf __object__ Ohio']
Text: Cleveland is located within Ohio.
Subject: Cleveland
Predicate: isPartOf
Object: Ohio

Triple: ['__subject__ Cleveland __predicate__ isPartOf __object__ Ohio']
Text: Cleveland is part of Ohio.
Subject: Cleveland
Predicate: isPartOf
Object: Ohio

Triple: ['__subject__ Cleveland __predicate__ leader __object__ Frank G. Jackson']
Text: Frank G Jackson is a leader in Cleveland.
Subject: Cleveland
Predicate: leader
Object: Frank G. Jackson

Triple: ['__subject__ Cleveland __predicate__ leader __object__ Frank G. Jackson']
Text: The leader in Cleveland is Frank G Jackson.
Subject: Cleveland
Predicate: leader
Object: Frank G. Jackson

Triple: ['__subject__ College of William & Mary __predicate__ chancellor __object__ Robert Gates']
Text: Robert Gates is the chancellor of the College of William & Mary.
Subject: College of William & Mary
Predicate: chancellor
Object: Robert Gates

Triple: ['__subject__ College of William & Mary __predicate__ chancellor __object__ Robert Gates']
Text: The Chancellor of the College of William and Mary is Robert Gates.
Subject: College of William & Mary
Predicate: chancellor
Object: Robert Gates

Triple: ['__subject__ College of William & Mary __predicate__ chancellor __object__ Robert Gates']
Text: Robert Gates served as chancellor of the College of William and Mary.
Subject: College of William & Mary
Predicate: chancellor
Object: Robert Gates

Triple: ['__subject__ County Limerick __predicate__ governmentType __object__ Limerick City and County Council']
Text: County Limerick is governed by the Limerick City and County Council.
Subject: County Limerick
Predicate: governmentType
Object: Limerick City and County Council

Triple: ['__subject__ County Limerick __predicate__ governmentType __object__ Limerick City and County Council']
Text: Limerick City and County Council governs County Limerick.
Subject: County Limerick
Predicate: governmentType
Object: Limerick City and County Council

Triple: ['__subject__ Denmark __predicate__ capital __object__ Copenhagen']
Text: Copenhagen is the capital of Denmark.
Subject: Denmark
Predicate: capital
Object: Copenhagen

Triple: ['__subject__ Denmark __predicate__ capital __object__ Copenhagen']
Text: The capital of Denmark is Copenhagen.
Subject: Denmark
Predicate: capital
Object: Copenhagen

Triple: ['__subject__ Denmark __predicate__ language __object__ Faroese language']
Text: The Faroese Language is spoken in Denmark.
Subject: Denmark
Predicate: language
Object: Faroese language

Triple: ['__subject__ Denmark __predicate__ language __object__ Faroese language']
Text: The language Faroese is spoken in Denmark.
Subject: Denmark
Predicate: language
Object: Faroese language

Triple: ['__subject__ Denmark __predicate__ language __object__ German language']
Text: One of the languages in Denmark is German.
Subject: Denmark
Predicate: language
Object: German language

Triple: ['__subject__ Denmark __predicate__ language __object__ German language']
Text: One of the languages used in Denmark is the German language.
Subject: Denmark
Predicate: language
Object: German language

Triple: ['__subject__ Denmark __predicate__ language __object__ Greenlandic language']
Text: Greenlandic is one of the languages of Denmark.
Subject: Denmark
Predicate: language
Object: Greenlandic language

Triple: ['__subject__ Denmark __predicate__ leader __object__ Lars Løkke Rasmussen']
Text: Lars Lokke Rasmussen is Denmark's leader.
Subject: Denmark
Predicate: leader
Object: Lars Løkke Rasmussen

Triple: ['__subject__ Denmark __predicate__ leader __object__ Lars Løkke Rasmussen']
Text: The leader of Denmark is Lars Løkke Rasmussen.
Subject: Denmark
Predicate: leader
Object: Lars Løkke Rasmussen

Triple: ['__subject__ Denmark __predicate__ leader __object__ Lars Løkke Rasmussen']
Text: Lars Løkke Rasmussen is the prime minister of Denmark.
Subject: Denmark
Predicate: leader
Object: Lars Løkke Rasmussen

Triple: ['__subject__ Denmark __predicate__ leader __object__ Margrethe II of Denmark']
Text: Margrethe II of Denmark is the leader of Denmark.
Subject: Denmark
Predicate: leader
Object: Margrethe II of Denmark

Triple: ['__subject__ Denmark __predicate__ leader __object__ Margrethe II of Denmark']
Text: Margrethe II of Denmark is the name of Denmark's leader.
Subject: Denmark
Predicate: leader
Object: Margrethe II of Denmark

Triple: ['__subject__ Dublin __predicate__ isPartOf __object__ Republic of Ireland']
Text: Dublin is part of the Republic of Ireland.
Subject: Dublin
Predicate: isPartOf
Object: Republic of Ireland

Triple: ['__subject__ Dublin __predicate__ isPartOf __object__ Republic of Ireland']
Text: Dublin is a part of the Republic of Ireland.
Subject: Dublin
Predicate: isPartOf
Object: Republic of Ireland

Triple: ['__subject__ Dublin __predicate__ leaderTitle __object__ Dáil Éireann']
Text: Dáil Éireann is a leader in Dublin.
Subject: Dublin
Predicate: leaderTitle
Object: Dáil Éireann

Triple: ['__subject__ Dublin __predicate__ leaderTitle __object__ European Parliament']
Text: Dublin is led by the European Parliament.
Subject: Dublin
Predicate: leaderTitle
Object: European Parliament

Triple: ['__subject__ Dublin __predicate__ leaderTitle __object__ European Parliament']
Text: European Parliament is the title of the leader of Dublin.
Subject: Dublin
Predicate: leaderTitle
Object: European Parliament

Triple: ['__subject__ Dublin __predicate__ leaderTitle __object__ European Parliament']
Text: The leader of the government in Dublin is the European Parliament.
Subject: Dublin
Predicate: leaderTitle
Object: European Parliament

Triple: ['__subject__ Eastern Province, Sri Lanka __predicate__ governingBody __object__ Eastern Provincial Council']
Text: The governing body of the Eastern Province Sri Lanka is the Eastern Provincial Council.
Subject: Eastern Province, Sri Lanka
Predicate: governingBody
Object: Eastern Provincial Council

Triple: ['__subject__ Eastern Province, Sri Lanka __predicate__ governingBody __object__ Eastern Provincial Council']
Text: Eastern Provincial Council is the governing body of Eastern Province in Sri Lanka.
Subject: Eastern Province, Sri Lanka
Predicate: governingBody
Object: Eastern Provincial Council

Triple: ['__subject__ Eastern Province, Sri Lanka __predicate__ governingBody __object__ Eastern Provincial Council']
Text: The Eastern Provincial Council is the governing body of Eastern Province, Sri Lanka.
Subject: Eastern Province, Sri Lanka
Predicate: governingBody
Object: Eastern Provincial Council

Triple: ['__subject__ Eastern Province, Sri Lanka __predicate__ leader __object__ Austin Fernando']
Text: The leader of the Eastern Province, Sri Lanka is Austin Fernando.
Subject: Eastern Province, Sri Lanka
Predicate: leader
Object: Austin Fernando

Triple: ['__subject__ Eastern Province, Sri Lanka __predicate__ leader __object__ Austin Fernando']
Text: Austin Fernando is the leader of the Eastern Province of Sri Lanka.
Subject: Eastern Province, Sri Lanka
Predicate: leader
Object: Austin Fernando

Triple: ['__subject__ Eastern Province, Sri Lanka __predicate__ leader __object__ Austin Fernando']
Text: Austin Fernando is the name of the leader in the Eastern Province of Sri Lanka.
Subject: Eastern Province, Sri Lanka
Predicate: leader
Object: Austin Fernando

Triple: ['__subject__ Ethiopia __predicate__ currency __object__ Ethiopian birr']
Text: Ethiopia's currency is the Ethiopian Birr.
Subject: Ethiopia
Predicate: currency
Object: Ethiopian birr

Triple: ['__subject__ Ethiopia __predicate__ currency __object__ Ethiopian birr']
Text: The Ethiopian birr is the money used in Ethiopia.
Subject: Ethiopia
Predicate: currency
Object: Ethiopian birr

Triple: ['__subject__ Ethiopia __predicate__ currency __object__ Ethiopian birr']
Text: The currency of Ethiopia is the Ethiopian birr.
Subject: Ethiopia
Predicate: currency
Object: Ethiopian birr

Triple: ['__subject__ Ethiopia __predicate__ language __object__ Amharic']
Text: Amharic is a language found in Ethiopia.
Subject: Ethiopia
Predicate: language
Object: Amharic

Triple: ['__subject__ Ethiopia __predicate__ language __object__ Amharic']
Text: The language spoken in Ethiopia is Amharic.
Subject: Ethiopia
Predicate: language
Object: Amharic

Triple: ['__subject__ Ethiopia __predicate__ language __object__ Amharic']
Text: Amharic is the language of Ethiopia.
Subject: Ethiopia
Predicate: language
Object: Amharic

Triple: ['__subject__ Ethiopia __predicate__ leader __object__ Hailemariam Desalegn']
Text: The leader of Ethiopia is Hailemariam Desalegn.
Subject: Ethiopia
Predicate: leader
Object: Hailemariam Desalegn

Triple: ['__subject__ Ethiopia __predicate__ leader __object__ Hailemariam Desalegn']
Text: Hailemariam Desalegn is the leader of Ethiopia.
Subject: Ethiopia
Predicate: leader
Object: Hailemariam Desalegn

Triple: ['__subject__ George Winkler __predicate__ country __object__ United States']
Text: George Winkler is from the United States.
Subject: George Winkler
Predicate: country
Object: United States

Triple: ['__subject__ George Winkler __predicate__ country __object__ United States']
Text: George Winkler is from the United States of America.
Subject: George Winkler
Predicate: country
Object: United States

Triple: ['__subject__ Gujarat __predicate__ leader __object__ Anandiben Patel']
Text: Anandiben Patel is the leader of Gujarat.
Subject: Gujarat
Predicate: leader
Object: Anandiben Patel

Triple: ['__subject__ Gujarat __predicate__ leader __object__ Anandiben Patel']
Text: Anandiben Patel was the leader of Gujarat.
Subject: Gujarat
Predicate: leader
Object: Anandiben Patel

Triple: ['__subject__ Gujarat __predicate__ leaderTitle __object__ Gujarat Legislative Assembly']
Text: Gujarat's leader is known as the Gujarat Legislative Assembly.
Subject: Gujarat
Predicate: leaderTitle
Object: Gujarat Legislative Assembly

Triple: ['__subject__ Illinois __predicate__ capital __object__ Springfield, Illinois']
Text: The capital of Illinois is Springfield, Illinois.
Subject: Illinois
Predicate: capital
Object: Springfield, Illinois

Triple: ['__subject__ Illinois __predicate__ capital __object__ Springfield, Illinois']
Text: The capital of Illinois is Springfield.
Subject: Illinois
Predicate: capital
Object: Springfield, Illinois

Triple: ['__subject__ Illinois __predicate__ country __object__ United States']
Text: Illinois is in the United States.
Subject: Illinois
Predicate: country
Object: United States

Triple: ['__subject__ Illinois __predicate__ country __object__ United States']
Text: Illinois state is in the United States.
Subject: Illinois
Predicate: country
Object: United States

Triple: ['__subject__ Illinois __predicate__ country __object__ United States']
Text: Illinois is situated in the United States.
Subject: Illinois
Predicate: country
Object: United States

Triple: ['__subject__ Illinois __predicate__ language __object__ English language']
Text: The English language is spoken in Illinois.
Subject: Illinois
Predicate: language
Object: English language

Triple: ['__subject__ Illinois __predicate__ language __object__ English language']
Text: The language of Illinois is the English language.
Subject: Illinois
Predicate: language
Object: English language

Triple: ['__subject__ India __predicate__ leader __object__ Narendra Modi']
Text: Narendra Modi leads India.
Subject: India
Predicate: leader
Object: Narendra Modi

Triple: ['__subject__ India __predicate__ leader __object__ Narendra Modi']
Text: The leader of India is Narendra Modi.
Subject: India
Predicate: leader
Object: Narendra Modi

Triple: ['__subject__ India __predicate__ leader __object__ Narendra Modi']
Text: Narendra Modi is the prime minister of India.
Subject: India
Predicate: leader
Object: Narendra Modi

Triple: ['__subject__ India __predicate__ leader __object__ T. S. Thakur']
Text: T S Thakur is a leader in India.
Subject: India
Predicate: leader
Object: T. S. Thakur

Triple: ['__subject__ India __predicate__ leader __object__ T. S. Thakur']
Text: The leader of India is called T S Thakur.
Subject: India
Predicate: leader
Object: T. S. Thakur

Triple: ['__subject__ India __predicate__ leader __object__ T. S. Thakur']
Text: T. S. Thakur was an Indian leader.
Subject: India
Predicate: leader
Object: T. S. Thakur

Triple: ['__subject__ Japan __predicate__ ethnicGroup __object__ Chinese people in Japan']
Text: There is an ethnic group of Chinese people in Japan.
Subject: Japan
Predicate: ethnicGroup
Object: Chinese people in Japan

Triple: ['__subject__ Japan __predicate__ ethnicGroup __object__ Chinese people in Japan']
Text: In Japan there is an ethnic group of Chinese people.
Subject: Japan
Predicate: ethnicGroup
Object: Chinese people in Japan

Triple: ['__subject__ Japan __predicate__ ethnicGroup __object__ Filipinos in Japan']
Text: One of the ethnic groups in Japan is the Filipinos.
Subject: Japan
Predicate: ethnicGroup
Object: Filipinos in Japan

Triple: ['__subject__ Japan __predicate__ ethnicGroup __object__ Japanese people']
Text: The main ethnic group in Japan is the Japanese.
Subject: Japan
Predicate: ethnicGroup
Object: Japanese people

Triple: ['__subject__ Japan __predicate__ ethnicGroup __object__ Koreans in Japan']
Text: Japan has an ethnic group called Koreans in Japan.
Subject: Japan
Predicate: ethnicGroup
Object: Koreans in Japan

Triple: ['__subject__ Japan __predicate__ ethnicGroup __object__ Koreans in Japan']
Text: Japan has an ethnic group of Koreans.
Subject: Japan
Predicate: ethnicGroup
Object: Koreans in Japan

Triple: ['__subject__ Japan __predicate__ ethnicGroup __object__ Vietnamese people in Japan']
Text: There is an ethnic group of Vietnamese people in Japan.
Subject: Japan
Predicate: ethnicGroup
Object: Vietnamese people in Japan

Triple: ['__subject__ Japan __predicate__ ethnicGroup __object__ Vietnamese people in Japan']
Text: Vietnamese people in Japan are an ethnic group from Japan.
Subject: Japan
Predicate: ethnicGroup
Object: Vietnamese people in Japan

Triple: ['__subject__ Japan __predicate__ leader __object__ Akihito']
Text: The leader of Japan is called Akihito.
Subject: Japan
Predicate: leader
Object: Akihito

Triple: ['__subject__ Japan __predicate__ leader __object__ Akihito']
Text: The leader of Japan is Akihito.
Subject: Japan
Predicate: leader
Object: Akihito

Triple: ['__subject__ Japan __predicate__ leader __object__ Akihito']
Text: The Emperor of Japan is Akihito.
Subject: Japan
Predicate: leader
Object: Akihito

Triple: ['__subject__ Japan __predicate__ leader __object__ Shinzō Abe']
Text: The leader of Japan is Shinzō Abe.
Subject: Japan
Predicate: leader
Object: Shinzō Abe

Triple: ['__subject__ Japan __predicate__ leader __object__ Shinzō Abe']
Text: Shinzo Abe is the leader of Japan.
Subject: Japan
Predicate: leader
Object: Shinzō Abe

Triple: ['__subject__ John Madin __predicate__ birthPlace __object__ Birmingham']
Text: John Madin was born in Birmingham.
Subject: John Madin
Predicate: birthPlace
Object: Birmingham

Triple: ['__subject__ John Madin __predicate__ origin __object__ Birmingham']
Text: Birmingham is the home town of John Madin.
Subject: John Madin
Predicate: origin
Object: Birmingham

Triple: ['__subject__ John Madin __predicate__ origin __object__ Birmingham']
Text: The hometown of John Madin is Birmingham.
Subject: John Madin
Predicate: origin
Object: Birmingham

Triple: ['__subject__ Julia Morgan __predicate__ birthPlace __object__ California']
Text: The birth place of Julia Morgan is California.
Subject: Julia Morgan
Predicate: birthPlace
Object: California

Triple: ['__subject__ Julia Morgan __predicate__ birthPlace __object__ California']
Text: Julia Morgan was born in California.
Subject: Julia Morgan
Predicate: birthPlace
Object: California

Triple: ['__subject__ Julia Morgan __predicate__ birthPlace __object__ San Francisco']
Text: Julia Morgan was born in San Francisco.
Subject: Julia Morgan
Predicate: birthPlace
Object: San Francisco

Triple: ['__subject__ Julia Morgan __predicate__ significantBuilding __object__ Asilomar State Beach']
Text: One of the significant buildings designed by Julia Morgan is the Asilomar State Beach.
Subject: Julia Morgan
Predicate: significantBuilding
Object: Asilomar State Beach

Triple: ['__subject__ Julia Morgan __predicate__ significantBuilding __object__ Chinatown, San Francisco']
Text: Julia Morgan designed significant buildings in Chinatown, San Francisco.
Subject: Julia Morgan
Predicate: significantBuilding
Object: Chinatown, San Francisco

Triple: ['__subject__ Julia Morgan __predicate__ significantBuilding __object__ Chinatown, San Francisco']
Text: Julia Morgan is the architect behind Chinatown in San Francisco.
Subject: Julia Morgan
Predicate: significantBuilding
Object: Chinatown, San Francisco

Triple: ['__subject__ Julia Morgan __predicate__ significantBuilding __object__ Riverside Art Museum']
Text: The Riverside Art Museum is one of Julia Morgan's significant buildings.
Subject: Julia Morgan
Predicate: significantBuilding
Object: Riverside Art Museum

Triple: ['__subject__ Julia Morgan __predicate__ significantProject __object__ Hearst Castle']
Text: Hearst Castle was a significant project of Julia Morgan.
Subject: Julia Morgan
Predicate: significantProject
Object: Hearst Castle

Triple: ['__subject__ Julia Morgan __predicate__ significantProject __object__ Hearst Castle']
Text: Julia Morgan was the architect of the landmark Hearst Castle.
Subject: Julia Morgan
Predicate: significantProject
Object: Hearst Castle

Triple: ['__subject__ Julia Morgan __predicate__ significantProject __object__ Hearst Castle']
Text: Hearst Castle was a significant project for Julia Morgan.
Subject: Julia Morgan
Predicate: significantProject
Object: Hearst Castle

Triple: ['__subject__ London __predicate__ leader __object__ Boris Johnson']
Text: Boris Johnson is the leader in London.
Subject: London
Predicate: leader
Object: Boris Johnson

Triple: ['__subject__ London __predicate__ leader __object__ Boris Johnson']
Text: The leader of London is called Boris Johnson.
Subject: London
Predicate: leader
Object: Boris Johnson

Triple: ['__subject__ London __predicate__ leaderTitle __object__ European Parliament']
Text: London is led via the European Parliament.
Subject: London
Predicate: leaderTitle
Object: European Parliament

Triple: ['__subject__ London __predicate__ leaderTitle __object__ Parliament of the United Kingdom']
Text: The Parliament of the United Kingdom is the leader of London.
Subject: London
Predicate: leaderTitle
Object: Parliament of the United Kingdom

Triple: ['__subject__ Manhattan __predicate__ leader __object__ Cyrus Vance, Jr.']
Text: The leader of Manhattan is Cyrus Vance Jr.
Subject: Manhattan
Predicate: leader
Object: Cyrus Vance, Jr.

Triple: ['__subject__ Manhattan __predicate__ leader __object__ Cyrus Vance, Jr.']
Text: Cyrus Vance Jr. is one of the leaders of Manhattan.
Subject: Manhattan
Predicate: leader
Object: Cyrus Vance, Jr.

Triple: ['__subject__ Manhattan __predicate__ leader __object__ Gale Brewer']
Text: The leader of Manhattan is Gale Brewer.
Subject: Manhattan
Predicate: leader
Object: Gale Brewer

Triple: ['__subject__ Manhattan __predicate__ leader __object__ Gale Brewer']
Text: Gale Brewer is the leader of Manhattan.
Subject: Manhattan
Predicate: leader
Object: Gale Brewer

Triple: ['__subject__ Marriott International __predicate__ foundationPlace __object__ Washington, D.C.']
Text: Marriott International was founded in Washington, D.C.
Subject: Marriott International
Predicate: foundationPlace
Object: Washington, D.C.

Triple: ['__subject__ Marriott International __predicate__ location __object__ Bethesda, Maryland']
Text: Marriott International is based in Bethesda, Maryland.
Subject: Marriott International
Predicate: location
Object: Bethesda, Maryland

Triple: ['__subject__ Marriott International __predicate__ location __object__ Bethesda, Maryland']
Text: Marriott International is located in Bethesda Maryland.
Subject: Marriott International
Predicate: location
Object: Bethesda, Maryland

Triple: ['__subject__ Marriott International __predicate__ location __object__ Bethesda, Maryland']
Text: The Marriott International is located in Bethesda, Maryland.
Subject: Marriott International
Predicate: location
Object: Bethesda, Maryland

Triple: ['__subject__ Mason School of Business __predicate__ country __object__ United States']
Text: The Mason School of Business is located in the United States.
Subject: Mason School of Business
Predicate: country
Object: United States

Triple: ['__subject__ New York City __predicate__ country __object__ United States']
Text: New York city is located in the U.S.
Subject: New York City
Predicate: country
Object: United States

Triple: ['__subject__ New York City __predicate__ country __object__ United States']
Text: New York City is in the United States.
Subject: New York City
Predicate: country
Object: United States

Triple: ['__subject__ New York City __predicate__ country __object__ United States']
Text: New York City is located in the United States.
Subject: New York City
Predicate: country
Object: United States

Triple: ['__subject__ New York City __predicate__ isPartOf __object__ Brooklyn']
Text: Brooklyn is part of New York City.
Subject: New York City
Predicate: isPartOf
Object: Brooklyn

Triple: ['__subject__ New York City __predicate__ isPartOf __object__ Brooklyn']
Text: Brooklyn is a part of New York City.
Subject: New York City
Predicate: isPartOf
Object: Brooklyn

Triple: ['__subject__ New York City __predicate__ isPartOf __object__ Manhattan']
Text: Manhattan is part of New York City.
Subject: New York City
Predicate: isPartOf
Object: Manhattan

Triple: ['__subject__ New York City __predicate__ isPartOf __object__ Manhattan']
Text: New York City is part of Manhattan.
Subject: New York City
Predicate: isPartOf
Object: Manhattan

Triple: ['__subject__ New York City __predicate__ isPartOf __object__ New York']
Text: New York City is part of New York.
Subject: New York City
Predicate: isPartOf
Object: New York

Triple: ['__subject__ Pacific Grove, California __predicate__ country __object__ United States']
Text: Pacific Grove, California is in the United States.
Subject: Pacific Grove, California
Predicate: country
Object: United States

Triple: ['__subject__ Pacific Grove, California __predicate__ country __object__ United States']
Text: Pacific Grove, California is located in the United States.
Subject: Pacific Grove, California
Predicate: country
Object: United States

Triple: ['__subject__ Perth __predicate__ country __object__ Australia']
Text: Perth is located in Australia.
Subject: Perth
Predicate: country
Object: Australia

Triple: ['__subject__ Perth __predicate__ country __object__ Australia']
Text: Perth is in Australia.
Subject: Perth
Predicate: country
Object: Australia

Triple: ['__subject__ Republic of Ireland __predicate__ currency __object__ Euro']
Text: The currency of the Republic of Ireland is the euro.
Subject: Republic of Ireland
Predicate: currency
Object: Euro

Triple: ['__subject__ Republic of Ireland __predicate__ currency __object__ Euro']
Text: The Republic of Ireland's currency is the Euro.
Subject: Republic of Ireland
Predicate: currency
Object: Euro

Triple: ['__subject__ Republic of Ireland __predicate__ demonym __object__ Irish people']
Text: Irish people are the inhabitants of the Republic of Ireland.
Subject: Republic of Ireland
Predicate: demonym
Object: Irish people

Triple: ['__subject__ Republic of Ireland __predicate__ demonym __object__ Irish people']
Text: Irish people inhabit the Republic of Ireland.
Subject: Republic of Ireland
Predicate: demonym
Object: Irish people

Triple: ['__subject__ Republic of Ireland __predicate__ demonym __object__ Irish people']
Text: The demonym of natives of the Republic of Ireland is Irish people.
Subject: Republic of Ireland
Predicate: demonym
Object: Irish people

Triple: ['__subject__ Republic of Ireland __predicate__ language __object__ Irish language']
Text: In the Republic of Ireland they speak Irish.
Subject: Republic of Ireland
Predicate: language
Object: Irish language

Triple: ['__subject__ Republic of Ireland __predicate__ language __object__ Irish language']
Text: Irish is one of the official language in the Republic of Ireland.
Subject: Republic of Ireland
Predicate: language
Object: Irish language

Triple: ['__subject__ Republic of Ireland __predicate__ language __object__ Irish language']
Text: Irish is the official language of the Republic of Ireland.
Subject: Republic of Ireland
Predicate: language
Object: Irish language

Triple: ['__subject__ Republic of Ireland __predicate__ leader __object__ Enda Kenny']
Text: The leader of the Republic of Ireland is Enda Kenny.
Subject: Republic of Ireland
Predicate: leader
Object: Enda Kenny

Triple: ['__subject__ South Africa __predicate__ demonym __object__ South Africa']
Text: People from South Africa can say they are from South Africa.
Subject: South Africa
Predicate: demonym
Object: South Africa

Triple: ['__subject__ South Africa __predicate__ ethnicGroup __object__ Asian South Africans']
Text: In South Africa there is an ethnic group of Asian South Africans.
Subject: South Africa
Predicate: ethnicGroup
Object: Asian South Africans

Triple: ['__subject__ South Africa __predicate__ ethnicGroup __object__ Asian South Africans']
Text: One of the ethnic groups within South Africa is Asian South Africans.
Subject: South Africa
Predicate: ethnicGroup
Object: Asian South Africans

Triple: ['__subject__ South Africa __predicate__ ethnicGroup __object__ Coloured']
Text: One of South Africa's ethnic groups are the Coloured.
Subject: South Africa
Predicate: ethnicGroup
Object: Coloured

Triple: ['__subject__ South Africa __predicate__ ethnicGroup __object__ Coloured']
Text: Coloured people are an ethnic group in South Africa.
Subject: South Africa
Predicate: ethnicGroup
Object: Coloured

Triple: ['__subject__ South Africa __predicate__ leader __object__ Cyril Ramaphosa']
Text: Cyril Ramaphosa is the leader of South Africa.
Subject: South Africa
Predicate: leader
Object: Cyril Ramaphosa

Triple: ['__subject__ South Africa __predicate__ leader __object__ Cyril Ramaphosa']
Text: Cyril Ramaphosa is one of the leaders of South Africa.
Subject: South Africa
Predicate: leader
Object: Cyril Ramaphosa

Triple: ['__subject__ South Africa __predicate__ leader __object__ Cyril Ramaphosa']
Text: The leader of South Africa is called Cyril Ramaphosa.
Subject: South Africa
Predicate: leader
Object: Cyril Ramaphosa

Triple: ['__subject__ South Africa __predicate__ leader __object__ Jacob Zuma']
Text: South Africa's leader is called Jacob Zuma.
Subject: South Africa
Predicate: leader
Object: Jacob Zuma

Triple: ['__subject__ South Africa __predicate__ leader __object__ Jacob Zuma']
Text: The leader of South Africa is Jacob Zuma.
Subject: South Africa
Predicate: leader
Object: Jacob Zuma

Triple: ['__subject__ South Africa __predicate__ leader __object__ Jacob Zuma']
Text: Jacob Zuma is a leader in South Africa.
Subject: South Africa
Predicate: leader
Object: Jacob Zuma

Triple: ['__subject__ Sri Lanka __predicate__ capital __object__ Sri Jayawardenepura Kotte']
Text: The capital of Sri Lanka is Sri Jayawardenepura Kotte.
Subject: Sri Lanka
Predicate: capital
Object: Sri Jayawardenepura Kotte

Triple: ['__subject__ Sri Lanka __predicate__ capital __object__ Sri Jayawardenepura Kotte']
Text: Sri Jayawardenepura Kotte is the capital of Sri Lanka.
Subject: Sri Lanka
Predicate: capital
Object: Sri Jayawardenepura Kotte

Triple: ['__subject__ Sri Lanka __predicate__ currency __object__ Sri Lankan rupee']
Text: Ski Lanka's currency is the Sri Lankan rupee.
Subject: Sri Lanka
Predicate: currency
Object: Sri Lankan rupee

Triple: ['__subject__ Sri Lanka __predicate__ currency __object__ Sri Lankan rupee']
Text: The currency of Sri Lanka is the Sri Lankan rupee.
Subject: Sri Lanka
Predicate: currency
Object: Sri Lankan rupee

Triple: ['__subject__ Sri Lanka __predicate__ language __object__ Tamil language']
Text: The language of Sri Lanka is the Tamil language.
Subject: Sri Lanka
Predicate: language
Object: Tamil language

Triple: ['__subject__ Sri Lanka __predicate__ leader __object__ Ranil Wickremesinghe']
Text: Ranil Wickremesinghe is a leader of Sri Lanka.
Subject: Sri Lanka
Predicate: leader
Object: Ranil Wickremesinghe

Triple: ['__subject__ Sri Lanka __predicate__ leader __object__ Ranil Wickremesinghe']
Text: Sri Lanka's leader is called Ranil Wickremesinghe.
Subject: Sri Lanka
Predicate: leader
Object: Ranil Wickremesinghe

Triple: ['__subject__ Sri Lanka __predicate__ leader __object__ Ranil Wickremesinghe']
Text: The leader of Sri Lanka is Ranil Wickremesinghe.
Subject: Sri Lanka
Predicate: leader
Object: Ranil Wickremesinghe

Triple: ['__subject__ United Kingdom __predicate__ currency __object__ Pound sterling']
Text: The United Kingdom's currency is Pound sterling.
Subject: United Kingdom
Predicate: currency
Object: Pound sterling

Triple: ['__subject__ United Kingdom __predicate__ currency __object__ Pound sterling']
Text: The currency of the United Kingdom is the Pound sterling.
Subject: United Kingdom
Predicate: currency
Object: Pound sterling

Triple: ['__subject__ United Kingdom __predicate__ demonym __object__ British people']
Text: The demonym for natives of the United kingdom is British people.
Subject: United Kingdom
Predicate: demonym
Object: British people

Triple: ['__subject__ United States __predicate__ capital __object__ Washington, D.C.']
Text: Washington DC is the capital of the United States.
Subject: United States
Predicate: capital
Object: Washington, D.C.

Triple: ['__subject__ United States __predicate__ capital __object__ Washington, D.C.']
Text: The capital of the United States is Washington D.C.
Subject: United States
Predicate: capital
Object: Washington, D.C.

Triple: ['__subject__ United States __predicate__ capital __object__ Washington, D.C.']
Text: Washington D.C. is the capital of the USA.
Subject: United States
Predicate: capital
Object: Washington, D.C.

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: One of the ethnic groups of the United States are the African Americans.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']
Text: An ethnic group of the United States is Asian Americans.
Subject: United States
Predicate: ethnicGroup
Object: Asian Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']
Text: Asian Americans are an ethnic group in the U.S.
Subject: United States
Predicate: ethnicGroup
Object: Asian Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']
Text: There is an ethnic group of Asian Americans in the United States.
Subject: United States
Predicate: ethnicGroup
Object: Asian Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ White Americans']
Text: One United States ethnic group is White Americans.
Subject: United States
Predicate: ethnicGroup
Object: White Americans

Triple: ['__subject__ United States __predicate__ language __object__ English language']
Text: English is the language of the U.S.
Subject: United States
Predicate: language
Object: English language

Triple: ['__subject__ United States __predicate__ language __object__ English language']
Text: English is the language in the United States.
Subject: United States
Predicate: language
Object: English language

Triple: ['__subject__ United States __predicate__ language __object__ English language']
Text: The English language is the language of the United States.
Subject: United States
Predicate: language
Object: English language

Triple: ['__subject__ United States __predicate__ leader __object__ Barack Obama']
Text: The leader of the United States was Barack Obama.
Subject: United States
Predicate: leader
Object: Barack Obama

Triple: ['__subject__ United States __predicate__ leader __object__ Barack Obama']
Text: Barack Obama is the leader of the U.S.
Subject: United States
Predicate: leader
Object: Barack Obama

Triple: ['__subject__ United States __predicate__ leader __object__ Barack Obama']
Text: Barack Obama is the leader of the United States.
Subject: United States
Predicate: leader
Object: Barack Obama

Triple: ['__subject__ United States __predicate__ leader __object__ Joe Biden']
Text: Joe Biden is a leader of the United States.
Subject: United States
Predicate: leader
Object: Joe Biden

Triple: ['__subject__ United States __predicate__ leader __object__ Joe Biden']
Text: The leader of the United States is Joe Biden.
Subject: United States
Predicate: leader
Object: Joe Biden

Triple: ['__subject__ United States __predicate__ leader __object__ Joe Biden']
Text: Joe Biden is a leader of the U.S.
Subject: United States
Predicate: leader
Object: Joe Biden

Triple: ['__subject__ United States __predicate__ leader __object__ John Roberts']
Text: The United States of America`s Chief Justice is John Roberts.
Subject: United States
Predicate: leader
Object: John Roberts

Triple: ['__subject__ United States __predicate__ leader __object__ John Roberts']
Text: John Roberts is a leader in the United States.
Subject: United States
Predicate: leader
Object: John Roberts

Triple: ['__subject__ United States __predicate__ leaderTitle __object__ President of the United States']
Text: The leader of the United States is known as the President of the United States.
Subject: United States
Predicate: leaderTitle
Object: President of the United States

Triple: ['__subject__ United States __predicate__ leaderTitle __object__ President of the United States']
Text: The title of the leader of the United States is President of the United States.
Subject: United States
Predicate: leaderTitle
Object: President of the United States

Triple: ['__subject__ United States __predicate__ leaderTitle __object__ President of the United States']
Text: The leader of the United States has the title President of the United States.
Subject: United States
Predicate: leaderTitle
Object: President of the United States

Triple: ['__subject__ Virginia __predicate__ country __object__ United States']
Text: Virginia is in the United States.
Subject: Virginia
Predicate: country
Object: United States

Triple: ['__subject__ (15788) 1993 SB __predicate__ apoapsis __object__ 7715100000.0 (kilometres)']
Text: The apoapsis for (15788) 1993 SB is 7715100000.0 (kilometres).
Subject: (15788) 1993 SB
Predicate: apoapsis
Object: 7715100000.0 (kilometres)

Triple: ['__subject__ (15788) 1993 SB __predicate__ apoapsis __object__ 7715100000.0 (kilometres)']
Text: 15788 1993 SB has an apoapsis of 7715100000 kilometres.
Subject: (15788) 1993 SB
Predicate: apoapsis
Object: 7715100000.0 (kilometres)

Triple: ['__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Alan Fitzsimmons']
Text: Alan Fitzsimmons was the discoverer of 15788 1993 SB.
Subject: (15788) 1993 SB
Predicate: discoverer
Object: Alan Fitzsimmons

Triple: ['__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Alan Fitzsimmons']
Text: (15788) 1993 SB was discovered by Alan Fitzsimmons.
Subject: (15788) 1993 SB
Predicate: discoverer
Object: Alan Fitzsimmons

Triple: ['__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Alan Fitzsimmons']
Text: 15788 1993 SB was discovered by Alan Fitzsimmons.
Subject: (15788) 1993 SB
Predicate: discoverer
Object: Alan Fitzsimmons

Triple: ["__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Donal O'Ceallaigh"]
Text: The discoverer of (15788) 1993 SB is Donal O'Ceallaigh.
Subject: (15788) 1993 SB
Predicate: discoverer
Object: Donal O'Ceallaigh

Triple: ["__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Donal O'Ceallaigh"]
Text: Donal O'Ceallaigh discovered (15788) 1993 SB.
Subject: (15788) 1993 SB
Predicate: discoverer
Object: Donal O'Ceallaigh

Triple: ["__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Donal O'Ceallaigh"]
Text: Donal O'Ceallaigh discovered 15788 1993 SB.
Subject: (15788) 1993 SB
Predicate: discoverer
Object: Donal O'Ceallaigh

Triple: ['__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Iwan P. Williams']
Text: Iwan P Williams discovered 15788 1993 SB.
Subject: (15788) 1993 SB
Predicate: discoverer
Object: Iwan P. Williams

Triple: ['__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Iwan P. Williams']
Text: (15788) 1993 SB was discovered by Iwan P Williams.
Subject: (15788) 1993 SB
Predicate: discoverer
Object: Iwan P. Williams

Triple: ['__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Roque de los Muchachos Observatory']
Text: 15788 1993 SB was discovered by Roque de los Muchachos Observatory.
Subject: (15788) 1993 SB
Predicate: discoverer
Object: Roque de los Muchachos Observatory

Triple: ['__subject__ (15788) 1993 SB __predicate__ discoverer __object__ Roque de los Muchachos Observatory']
Text: (15788) 1993 SB was discovered by Roque de los Muchachos Observatory.
Subject: (15788) 1993 SB
Predicate: discoverer
Object: Roque de los Muchachos Observatory

Triple: ['__subject__ (15788) 1993 SB __predicate__ epoch __object__ 2006-03-06']
Text: (15788) 1993 SB has an epoch date of March 6th 2006.
Subject: (15788) 1993 SB
Predicate: epoch
Object: 2006-03-06

Triple: ['__subject__ (15788) 1993 SB __predicate__ epoch __object__ 2006-03-06']
Text: (15788) 1993 SB's epoch is 6th March 2006.
Subject: (15788) 1993 SB
Predicate: epoch
Object: 2006-03-06

Triple: ['__subject__ (15788) 1993 SB __predicate__ orbitalPeriod __object__ 7729430000.0']
Text: (15788) 1993 SB has an orbital period of 7729430000.0.
Subject: (15788) 1993 SB
Predicate: orbitalPeriod
Object: 7729430000.0

Triple: ['__subject__ (15788) 1993 SB __predicate__ orbitalPeriod __object__ 7729430000.0']
Text: (15788) 1993 SB has an orbital periodd of 7729430000.0.
Subject: (15788) 1993 SB
Predicate: orbitalPeriod
Object: 7729430000.0

Triple: ['__subject__ (15788) 1993 SB __predicate__ orbitalPeriod __object__ 7729430000.0']
Text: 15788 1993 SB has an orbital period of 7729430000.
Subject: (15788) 1993 SB
Predicate: orbitalPeriod
Object: 7729430000.0

Triple: ['__subject__ (15788) 1993 SB __predicate__ periapsis __object__ 3997100000000.0']
Text: The periapsis of (15788) 1993 SB is 3997100000000.0.
Subject: (15788) 1993 SB
Predicate: periapsis
Object: 3997100000000.0

Triple: ['__subject__ (15788) 1993 SB __predicate__ periapsis __object__ 3997100000000.0']
Text: (15788) 1993 SB has a periapsis of 3997100000000.0.
Subject: (15788) 1993 SB
Predicate: periapsis
Object: 3997100000000.0

Triple: ['__subject__ (15788) 1993 SB __predicate__ periapsis __object__ 3997100000000.0']
Text: The celestial body known as (15788) 1993 SB has a periapsis of 3997100000000.
Subject: (15788) 1993 SB
Predicate: periapsis
Object: 3997100000000.0

Triple: ['__subject__ (19255) 1994 VK8 __predicate__ apoapsis __object__ 6603633000.0 (kilometres)']
Text: (19255) 1994 VK8 has an apoapsis of 6603633000.0 kilometres.
Subject: (19255) 1994 VK8
Predicate: apoapsis
Object: 6603633000.0 (kilometres)

Triple: ['__subject__ (19255) 1994 VK8 __predicate__ apoapsis __object__ 6603633000.0 (kilometres)']
Text: The apoapsis of (19255) 1994 VK8 is 6603633000.0 km.
Subject: (19255) 1994 VK8
Predicate: apoapsis
Object: 6603633000.0 (kilometres)

Triple: ['__subject__ (19255) 1994 VK8 __predicate__ averageSpeed __object__ 4.56 (kilometrePerSeconds)']
Text: The average speed of (19255) 1994 VK8 is 4.56 km per sec.
Subject: (19255) 1994 VK8
Predicate: averageSpeed
Object: 4.56 (kilometrePerSeconds)

Triple: ['__subject__ (19255) 1994 VK8 __predicate__ averageSpeed __object__ 4.56 (kilometrePerSeconds)']
Text: The average speed of (19255) 1994 VK8 is 4.56 km/s.
Subject: (19255) 1994 VK8
Predicate: averageSpeed
Object: 4.56 (kilometrePerSeconds)

Triple: ['__subject__ (19255) 1994 VK8 __predicate__ epoch __object__ 2006-12-31']
Text: The epoch of (19255) 1994 VK8 is on 31 December 2006.
Subject: (19255) 1994 VK8
Predicate: epoch
Object: 2006-12-31

Triple: ['__subject__ (19255) 1994 VK8 __predicate__ escapeVelocity __object__ 0.0925 (kilometrePerSeconds)']
Text: (19255) 1994 VK8 has an escape velocity of 0.0925 kilometres per second.
Subject: (19255) 1994 VK8
Predicate: escapeVelocity
Object: 0.0925 (kilometrePerSeconds)

Triple: ['__subject__ (19255) 1994 VK8 __predicate__ escapeVelocity __object__ 0.0925 (kilometrePerSeconds)']
Text: (19255) 1994 VK8 has an escape velocity of 0.0925 km/s.
Subject: (19255) 1994 VK8
Predicate: escapeVelocity
Object: 0.0925 (kilometrePerSeconds)

Triple: ['__subject__ (19255) 1994 VK8 __predicate__ mass __object__ 5.6 (kilograms)']
Text: 19255 1994 VK8 has a mass of 5.6 kgs.
Subject: (19255) 1994 VK8
Predicate: mass
Object: 5.6 (kilograms)

Triple: ['__subject__ (19255) 1994 VK8 __predicate__ mass __object__ 5.6 (kilograms)']
Text: (19255) 1994 VK8 has a mass of 5.6 kilograms.
Subject: (19255) 1994 VK8
Predicate: mass
Object: 5.6 (kilograms)

Triple: ['__subject__ (19255) 1994 VK8 __predicate__ mass __object__ 5.6 (kilograms)']
Text: 19255 1994 VK8 has a mass of 5.6kg.
Subject: (19255) 1994 VK8
Predicate: mass
Object: 5.6 (kilograms)

Triple: ['__subject__ (19255) 1994 VK8 __predicate__ orbitalPeriod __object__ 8788850000.0']
Text: (19255) 1994 VK8 has an orbital period of 8788850000.0.
Subject: (19255) 1994 VK8
Predicate: orbitalPeriod
Object: 8788850000.0

Triple: ['__subject__ (19255) 1994 VK8 __predicate__ periapsis __object__ 6155910000000.0']
Text: (19255) 1994 VK8 has a periapsis of 6155910000000.0.
Subject: (19255) 1994 VK8
Predicate: periapsis
Object: 6155910000000.0

Triple: ['__subject__ (19255) 1994 VK8 __predicate__ periapsis __object__ 6155910000000.0']
Text: The periapsis of (19255) 1994 VK8 is 6155910000000.0.
Subject: (19255) 1994 VK8
Predicate: periapsis
Object: 6155910000000.0

Triple: ['__subject__ (19255) 1994 VK8 __predicate__ temperature __object__ 43.0 (kelvins)']
Text: (19255) 1994 VK8 has a temperature of 43.0 kelvins.
Subject: (19255) 1994 VK8
Predicate: temperature
Object: 43.0 (kelvins)

Triple: ['__subject__ (19255) 1994 VK8 __predicate__ temperature __object__ 43.0 (kelvins)']
Text: The temperature of 19255 1994 VK8 is 43 kelvins.
Subject: (19255) 1994 VK8
Predicate: temperature
Object: 43.0 (kelvins)

Triple: ['__subject__ (29075) 1950 DA __predicate__ density __object__ 3.5 (kilograms)']
Text: (29075) 1950 DA has a density of 3.5 kilograms.
Subject: (29075) 1950 DA
Predicate: density
Object: 3.5 (kilograms)

Triple: ['__subject__ (29075) 1950 DA __predicate__ density __object__ 3.5 (kilograms)']
Text: (29075) 1950 DA has a density of 3.5 kgs.
Subject: (29075) 1950 DA
Predicate: density
Object: 3.5 (kilograms)

Triple: ['__subject__ (29075) 1950 DA __predicate__ density __object__ 3.5 (kilograms)']
Text: The density of 29075 1950 DA is 3.5 kilograms.
Subject: (29075) 1950 DA
Predicate: density
Object: 3.5 (kilograms)

Triple: ['__subject__ (29075) 1950 DA __predicate__ epoch __object__ 2011-Aug-27']
Text: (29075) 1950 DA has an epoch date of August 27th 2011.
Subject: (29075) 1950 DA
Predicate: epoch
Object: 2011-Aug-27

Triple: ['__subject__ (29075) 1950 DA __predicate__ epoch __object__ 2011-Aug-27']
Text: 29075 1950 DA has the epoch date of 27 August 2011.
Subject: (29075) 1950 DA
Predicate: epoch
Object: 2011-Aug-27

Triple: ['__subject__ (29075) 1950 DA __predicate__ epoch __object__ 2011-Aug-27']
Text: The epoch for (29075) 1950 DA is on the 27th of August 2011.
Subject: (29075) 1950 DA
Predicate: epoch
Object: 2011-Aug-27

Triple: ['__subject__ (29075) 1950 DA __predicate__ mass __object__ 4.0 (kilograms)']
Text: (29075) 1950 DA has a mass of 4.0 kilograms.
Subject: (29075) 1950 DA
Predicate: mass
Object: 4.0 (kilograms)

Triple: ['__subject__ (29075) 1950 DA __predicate__ mass __object__ 4.0 (kilograms)']
Text: 29075 1950 DA has a mass of 4.0 kgs.
Subject: (29075) 1950 DA
Predicate: mass
Object: 4.0 (kilograms)

Triple: ['__subject__ (29075) 1950 DA __predicate__ orbitalPeriod __object__ 69862200.0']
Text: (29075) 1950 DA has an orbital period of 69862200.0.
Subject: (29075) 1950 DA
Predicate: orbitalPeriod
Object: 69862200.0

Triple: ['__subject__ (29075) 1950 DA __predicate__ orbitalPeriod __object__ 69862200.0']
Text: The orbital period of (29075) 1950 DA is 69862200.0.
Subject: (29075) 1950 DA
Predicate: orbitalPeriod
Object: 69862200.0

Triple: ['__subject__ (29075) 1950 DA __predicate__ orbitalPeriod __object__ 69862200.0']
Text: The celestial body known as (29075) 1950 DA has an orbital period of 69862200.
Subject: (29075) 1950 DA
Predicate: orbitalPeriod
Object: 69862200.0

Triple: ['__subject__ (29075) 1950 DA __predicate__ periapsis __object__ 124950000000.0']
Text: (29075) 1950 DA has a periapsis of 124950000000.0.
Subject: (29075) 1950 DA
Predicate: periapsis
Object: 124950000000.0

Triple: ['__subject__ (29075) 1950 DA __predicate__ periapsis __object__ 124950000000.0']
Text: The periapsis for (29075) 1950 DA is 124950000000.0.
Subject: (29075) 1950 DA
Predicate: periapsis
Object: 124950000000.0

Triple: ['__subject__ (29075) 1950 DA __predicate__ rotationPeriod __object__ 7637.76']
Text: (29075) 1950 DA has a rotation period of 7637.76.
Subject: (29075) 1950 DA
Predicate: rotationPeriod
Object: 7637.76

Triple: ['__subject__ (29075) 1950 DA __predicate__ rotationPeriod __object__ 7637.76']
Text: The rotation period for 29075 1950 DA is 7637.76.
Subject: (29075) 1950 DA
Predicate: rotationPeriod
Object: 7637.76

Triple: ['__subject__ (410777) 2009 FD __predicate__ density __object__ 1890.0 (kilogramPerCubicMetres)']
Text: (410777) 2009 FD has a density of 1890.0 kilograms per cubic metres.
Subject: (410777) 2009 FD
Predicate: density
Object: 1890.0 (kilogramPerCubicMetres)

Triple: ['__subject__ (410777) 2009 FD __predicate__ density __object__ 1890.0 (kilogramPerCubicMetres)']
Text: The density of 410777 2009 FD is 1890.0 kg/cubic metres.
Subject: (410777) 2009 FD
Predicate: density
Object: 1890.0 (kilogramPerCubicMetres)

Triple: ['__subject__ (410777) 2009 FD __predicate__ density __object__ 1890.0 (kilogramPerCubicMetres)']
Text: The density of (410777) 2009 FD, is 1890.0 kilogram Per Cubic Metres.
Subject: (410777) 2009 FD
Predicate: density
Object: 1890.0 (kilogramPerCubicMetres)

Triple: ['__subject__ (410777) 2009 FD __predicate__ discoverer __object__ Spacewatch']
Text: 410777 2009 FD was discovered by Spacewatch.
Subject: (410777) 2009 FD
Predicate: discoverer
Object: Spacewatch

Triple: ['__subject__ (410777) 2009 FD __predicate__ discoverer __object__ Spacewatch']
Text: (410777) 2009 FD was discovered by Spacewatch.
Subject: (410777) 2009 FD
Predicate: discoverer
Object: Spacewatch

Triple: ['__subject__ (410777) 2009 FD __predicate__ discoverer __object__ Spacewatch']
Text: The discoverer of 410777 2009 FD is Spacewatch.
Subject: (410777) 2009 FD
Predicate: discoverer
Object: Spacewatch

Triple: ['__subject__ (410777) 2009 FD __predicate__ epoch __object__ 2015-06-27']
Text: The epoch date of 410777 2009 FD is 27 June 2015.
Subject: (410777) 2009 FD
Predicate: epoch
Object: 2015-06-27

Triple: ['__subject__ (410777) 2009 FD __predicate__ epoch __object__ 2015-06-27']
Text: (410777) 2009 FD has an epoch date of June 27th 2015.
Subject: (410777) 2009 FD
Predicate: epoch
Object: 2015-06-27

Triple: ['__subject__ (410777) 2009 FD __predicate__ mass __object__ 8.3 (kilograms)']
Text: 410777 2009 FD has a mass of 8.3 kgs.
Subject: (410777) 2009 FD
Predicate: mass
Object: 8.3 (kilograms)

Triple: ['__subject__ (410777) 2009 FD __predicate__ mass __object__ 8.3 (kilograms)']
Text: (410777) 2009 FD has a mass of 8.3 kilograms.
Subject: (410777) 2009 FD
Predicate: mass
Object: 8.3 (kilograms)

Triple: ['__subject__ (410777) 2009 FD __predicate__ mass __object__ 8.3 (kilograms)']
Text: The celestial body known as (410777) 2009 FD has a mass of 8.3kgs.
Subject: (410777) 2009 FD
Predicate: mass
Object: 8.3 (kilograms)

Triple: ['__subject__ (410777) 2009 FD __predicate__ maximumTemperature __object__ 362.0 (kelvins)']
Text: The maximum temperature of 410777 2009 FD is 362.0 kelvins.
Subject: (410777) 2009 FD
Predicate: maximumTemperature
Object: 362.0 (kelvins)

Triple: ['__subject__ (410777) 2009 FD __predicate__ maximumTemperature __object__ 362.0 (kelvins)']
Text: (410777) 2009 FD has a maximum temperature of 362.0 kelvins.
Subject: (410777) 2009 FD
Predicate: maximumTemperature
Object: 362.0 (kelvins)

Triple: ['__subject__ (410777) 2009 FD __predicate__ maximumTemperature __object__ 362.0 (kelvins)']
Text: The celestial body known as (410777) 2009 FD has a maximum temperature of 362 kelvins.
Subject: (410777) 2009 FD
Predicate: maximumTemperature
Object: 362.0 (kelvins)

Triple: ['__subject__ (410777) 2009 FD __predicate__ meanTemperature __object__ 258.0 (kelvins)']
Text: (410777) 2009 FD has a mean temperature of 258.0 kelvins.
Subject: (410777) 2009 FD
Predicate: meanTemperature
Object: 258.0 (kelvins)

Triple: ['__subject__ (410777) 2009 FD __predicate__ meanTemperature __object__ 258.0 (kelvins)']
Text: The mean temperature of (410777) 2009 FD is 258.0 kelvins.
Subject: (410777) 2009 FD
Predicate: meanTemperature
Object: 258.0 (kelvins)

Triple: ['__subject__ (410777) 2009 FD __predicate__ meanTemperature __object__ 258.0 (kelvins)']
Text: (410777) 2009 FD has a mean temperature of 258 Kelvins.
Subject: (410777) 2009 FD
Predicate: meanTemperature
Object: 258.0 (kelvins)

Triple: ['__subject__ (410777) 2009 FD __predicate__ minimumTemperature __object__ 211.0 (kelvins)']
Text: (410777) 2009 FD has a minimum temperature of 211.0 kelvins.
Subject: (410777) 2009 FD
Predicate: minimumTemperature
Object: 211.0 (kelvins)

Triple: ['__subject__ (410777) 2009 FD __predicate__ minimumTemperature __object__ 211.0 (kelvins)']
Text: The minimum temperature at (410777) 2009 FD is 211.0 kelvins.
Subject: (410777) 2009 FD
Predicate: minimumTemperature
Object: 211.0 (kelvins)

Triple: ['__subject__ (410777) 2009 FD __predicate__ orbitalPeriod __object__ 39447000.0']
Text: 410777 2009 FD has an orbital period of 39447000.0.
Subject: (410777) 2009 FD
Predicate: orbitalPeriod
Object: 39447000.0

Triple: ['__subject__ (410777) 2009 FD __predicate__ orbitalPeriod __object__ 39447000.0']
Text: (410777) 2009 FD has an orbital period of 39447000.0.
Subject: (410777) 2009 FD
Predicate: orbitalPeriod
Object: 39447000.0

Triple: ['__subject__ (410777) 2009 FD __predicate__ orbitalPeriod __object__ 39447000.0']
Text: The celestial body known as (410777) 2009 FD has an orbital period of 39447000.
Subject: (410777) 2009 FD
Predicate: orbitalPeriod
Object: 39447000.0

Triple: ['__subject__ (410777) 2009 FD __predicate__ periapsis __object__ 88234300000.0']
Text: (410777) 2009 FD has a periapsis of 88234300000.0.
Subject: (410777) 2009 FD
Predicate: periapsis
Object: 88234300000.0

Triple: ['__subject__ (410777) 2009 FD __predicate__ periapsis __object__ 88234300000.0']
Text: The periapsis of (410777) 2009 FD is 88234300000.0.
Subject: (410777) 2009 FD
Predicate: periapsis
Object: 88234300000.0

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ discoverer __object__ Lincoln Near-Earth Asteroid Research']
Text: (66063) 1998 RO1 was discovered by Lincoln Near-Earth Asteroid Research.
Subject: (66063) 1998 RO1
Predicate: discoverer
Object: Lincoln Near-Earth Asteroid Research

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ discoverer __object__ Lincoln Near-Earth Asteroid Research']
Text: The discoverer of (66063) 1998 RO1 is Lincoln Near-Earth Asteroid Research.
Subject: (66063) 1998 RO1
Predicate: discoverer
Object: Lincoln Near-Earth Asteroid Research

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ discoverer __object__ Lincoln Near-Earth Asteroid Research']
Text: The Lincoln Near-Earth Asteroid Research centre discovers the asteroid (66063) 1998 RO1.
Subject: (66063) 1998 RO1
Predicate: discoverer
Object: Lincoln Near-Earth Asteroid Research

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ escapeVelocity __object__ 0.0999 (kilometrePerSeconds)']
Text: (66063) 1998 RO1 has an escape velocity of 0.0999 kilometres per second.
Subject: (66063) 1998 RO1
Predicate: escapeVelocity
Object: 0.0999 (kilometrePerSeconds)

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ escapeVelocity __object__ 0.0999 (kilometrePerSeconds)']
Text: The escape velocity of (66063) 1998 RO1 is 0.0999 km/sec.
Subject: (66063) 1998 RO1
Predicate: escapeVelocity
Object: 0.0999 (kilometrePerSeconds)

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ escapeVelocity __object__ 0.0999 (kilometrePerSeconds)']
Text: (66063) 1998 RO1 has an escape velocity of 0.0999 km/s.
Subject: (66063) 1998 RO1
Predicate: escapeVelocity
Object: 0.0999 (kilometrePerSeconds)

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ formerName __object__ 1999 SN5']
Text: The former name of the asteroid (66063) 1998 RO1 was 1999 SN5.
Subject: (66063) 1998 RO1
Predicate: formerName
Object: 1999 SN5

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ formerName __object__ 1999 SN5']
Text: "1999 SN5" was the former name of (66063) 1998 RO1.
Subject: (66063) 1998 RO1
Predicate: formerName
Object: 1999 SN5

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ formerName __object__ 1999 SN5']
Text: The celestial body known as (66063) 1998 RO1 was formerly called 1999 SN5.
Subject: (66063) 1998 RO1
Predicate: formerName
Object: 1999 SN5

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ maximumTemperature __object__ 500.0 (kelvins)']
Text: The celestial body known as (66063) 1998 RO1 has a maximum temperature of 500 kelvins.
Subject: (66063) 1998 RO1
Predicate: maximumTemperature
Object: 500.0 (kelvins)

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ maximumTemperature __object__ 500.0 (kelvins)']
Text: The maximum temperature of (66063) 1998 RO1, is 500.0 kelvins.
Subject: (66063) 1998 RO1
Predicate: maximumTemperature
Object: 500.0 (kelvins)

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ maximumTemperature __object__ 500.0 (kelvins)']
Text: The (66063) 1998 RO1 Asteroids maximum temperature is 500.0 (kelvins).
Subject: (66063) 1998 RO1
Predicate: maximumTemperature
Object: 500.0 (kelvins)

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ meanTemperature __object__ 265.0 (kelvins)']
Text: (66063) 1998 RO1 has a mean temperature of 265 kelvins.
Subject: (66063) 1998 RO1
Predicate: meanTemperature
Object: 265.0 (kelvins)

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ meanTemperature __object__ 265.0 (kelvins)']
Text: The mean temperature of (66063) 1998 RO1 is 265.0 kelvins.
Subject: (66063) 1998 RO1
Predicate: meanTemperature
Object: 265.0 (kelvins)

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ minimumTemperature __object__ -71.0 (degreeCelsius)']
Text: (66063) 1998 RO1 has a minimum temperature of -71.0 degrees Celsius.
Subject: (66063) 1998 RO1
Predicate: minimumTemperature
Object: -71.0 (degreeCelsius)

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ minimumTemperature __object__ -71.0 (degreeCelsius)']
Text: The minimum temperature of (66063) 1998 RO1 is -71.0 deg celsius.
Subject: (66063) 1998 RO1
Predicate: minimumTemperature
Object: -71.0 (degreeCelsius)

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ minimumTemperature __object__ -71.0 (degreeCelsius)']
Text: 66063 1998 RO1 has a minimum temperature of -71.0 degrees Celsius.
Subject: (66063) 1998 RO1
Predicate: minimumTemperature
Object: -71.0 (degreeCelsius)

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ orbitalPeriod __object__ 360.29 (days)']
Text: 66063 1998 RO1 has an orbital period of 360.29 days.
Subject: (66063) 1998 RO1
Predicate: orbitalPeriod
Object: 360.29 (days)

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ orbitalPeriod __object__ 360.29 (days)']
Text: (66063) 1998 RO1 has an orbital period of 360.29 days.
Subject: (66063) 1998 RO1
Predicate: orbitalPeriod
Object: 360.29 (days)

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ periapsis __object__ 41498400000.0']
Text: (66063) 1998 RO1 has a periapsis measuring 41498400000.0.
Subject: (66063) 1998 RO1
Predicate: periapsis
Object: 41498400000.0

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ periapsis __object__ 41498400000.0']
Text: 66063 1998 RO1 has a periapsis of 41498400000.
Subject: (66063) 1998 RO1
Predicate: periapsis
Object: 41498400000.0

Triple: ['__subject__ (66063) 1998 RO1 __predicate__ periapsis __object__ 41498400000.0']
Text: The periapsis of the (66063) 1998 RO1 Asteroid is 41498400000.0 Gm.
Subject: (66063) 1998 RO1
Predicate: periapsis
Object: 41498400000.0

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)']
Text: (66391) 1999 KW4 has an apoapsis measurement of 162164091.8388 (kilometres).
Subject: (66391) 1999 KW4
Predicate: apoapsis
Object: 162164091.8388 (kilometres)

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)']
Text: (66391) 1999 KW4 has an apoapsis of 162164091.8388 kilometres.
Subject: (66391) 1999 KW4
Predicate: apoapsis
Object: 162164091.8388 (kilometres)

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ apoapsis __object__ 162164091.8388 (kilometres)']
Text: The celestial body known as (66391) 1999 KW4 has an apoapsis of 162164091.8388 km.
Subject: (66391) 1999 KW4
Predicate: apoapsis
Object: 162164091.8388 (kilometres)

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ averageSpeed __object__ 37.16 (kilometrePerSeconds)']
Text: The average speed of 66391 1999 KW4 is 37.16 km per sec.
Subject: (66391) 1999 KW4
Predicate: averageSpeed
Object: 37.16 (kilometrePerSeconds)

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ averageSpeed __object__ 37.16 (kilometrePerSeconds)']
Text: (66391) 1999 KW4 has an average speed of 37.16 kilometres per second.
Subject: (66391) 1999 KW4
Predicate: averageSpeed
Object: 37.16 (kilometrePerSeconds)

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ averageSpeed __object__ 37.16 (kilometrePerSeconds)']
Text: The average speed of (66391) 1999 KW4, is 37.16 km/s.
Subject: (66391) 1999 KW4
Predicate: averageSpeed
Object: 37.16 (kilometrePerSeconds)

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ density __object__ 2.0 (gramPerCubicCentimetres)']
Text: (66391) 1999 KW4 has a density of 2.0 gm per cu cm.
Subject: (66391) 1999 KW4
Predicate: density
Object: 2.0 (gramPerCubicCentimetres)

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ density __object__ 2.0 (gramPerCubicCentimetres)']
Text: (66391) 1999 KW4 has a density of 2.0 grams per cubic centimetre.
Subject: (66391) 1999 KW4
Predicate: density
Object: 2.0 (gramPerCubicCentimetres)

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ density __object__ 2.0 (gramPerCubicCentimetres)']
Text: (66391) 1999 KW4 has a density of 2.0 gram per cubic centimetres.
Subject: (66391) 1999 KW4
Predicate: density
Object: 2.0 (gramPerCubicCentimetres)

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ discoverer __object__ Lincoln Near-Earth Asteroid Research']
Text: (66391) 1999 KW4 was discovered by Lincoln Near-Earth Asteroid Research.
Subject: (66391) 1999 KW4
Predicate: discoverer
Object: Lincoln Near-Earth Asteroid Research

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ epoch __object__ 2004-07-14']
Text: (66391) 1999 KW4 has an epoch date of July 14th 2004.
Subject: (66391) 1999 KW4
Predicate: epoch
Object: 2004-07-14

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ epoch __object__ 2004-07-14']
Text: The epoch date for (66391) 1999 KW4 is 2004-07.14.
Subject: (66391) 1999 KW4
Predicate: epoch
Object: 2004-07-14

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ escapeVelocity __object__ 0']
Text: (66391) 1999 KW4 has an escape velocity of 0.
Subject: (66391) 1999 KW4
Predicate: escapeVelocity
Object: 0

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ escapeVelocity __object__ 0']
Text: The escape velocity of (66391) 1999 KW4 is 0.
Subject: (66391) 1999 KW4
Predicate: escapeVelocity
Object: 0

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ orbitalPeriod __object__ 16244700.0']
Text: (66391) 1999 KW4 has an orbital period of 16244700.0.
Subject: (66391) 1999 KW4
Predicate: orbitalPeriod
Object: 16244700.0

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ orbitalPeriod __object__ 16244700.0']
Text: The celestial body known as (66391) 1999 KW4 has an orbital period of 16244700.
Subject: (66391) 1999 KW4
Predicate: orbitalPeriod
Object: 16244700.0

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ orbitalPeriod __object__ 16244700.0']
Text: The asteroid called (66391) 1999 KW4 has an orbital period of 16244700.0.
Subject: (66391) 1999 KW4
Predicate: orbitalPeriod
Object: 16244700.0

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ rotationPeriod __object__ 9953.28']
Text: The rotation period of (66391) 1999 KW4 is 9953.28.
Subject: (66391) 1999 KW4
Predicate: rotationPeriod
Object: 9953.28

Triple: ['__subject__ (66391) 1999 KW4 __predicate__ rotationPeriod __object__ 9953.28']
Text: (66391) 1999 KW4 has a rotation period of 9953.28.
Subject: (66391) 1999 KW4
Predicate: rotationPeriod
Object: 9953.28

Triple: ['__subject__ 1000 Piazzia __predicate__ epoch __object__ 2015-06-27']
Text: The epoch of 1000 Piazzia is 2015-06-27.
Subject: 1000 Piazzia
Predicate: epoch
Object: 2015-06-27

Triple: ['__subject__ 1000 Piazzia __predicate__ formerName __object__ 1923 NZ1951 OB']
Text: The former name of 1000 Piazzia is "1923 NZ1951 OB".
Subject: 1000 Piazzia
Predicate: formerName
Object: 1923 NZ1951 OB

Triple: ['__subject__ 1000 Piazzia __predicate__ formerName __object__ 1923 NZ1951 OB']
Text: 1000 Piazzia was formerly called "1923 NZ1951 OB".
Subject: 1000 Piazzia
Predicate: formerName
Object: 1923 NZ1951 OB

Triple: ['__subject__ 1000 Piazzia __predicate__ formerName __object__ 1923 NZ1951 OB']
Text: 1923 NZ1951OB was the former name of 1000 Piazzia.
Subject: 1000 Piazzia
Predicate: formerName
Object: 1923 NZ1951 OB

Triple: ['__subject__ 1000 Piazzia __predicate__ formerName __object__ 1967 ED']
Text: The celestial body known as 1000 Piazzia was formerly known as 1967 ED.
Subject: 1000 Piazzia
Predicate: formerName
Object: 1967 ED

Triple: ['__subject__ 1000 Piazzia __predicate__ formerName __object__ 1967 ED']
Text: 1000 Piazzia was formerly known as "1967 ED".
Subject: 1000 Piazzia
Predicate: formerName
Object: 1967 ED

Triple: ['__subject__ 1000 Piazzia __predicate__ formerName __object__ 1967 ED']
Text: 1967 ED was the former name of 1000 Piazzia.
Subject: 1000 Piazzia
Predicate: formerName
Object: 1967 ED

Triple: ['__subject__ 1000 Piazzia __predicate__ mass __object__ 1.1 (kilograms)']
Text: 1000 Piazzia has the mass of 1.1 kilograms.
Subject: 1000 Piazzia
Predicate: mass
Object: 1.1 (kilograms)

Triple: ['__subject__ 1000 Piazzia __predicate__ mass __object__ 1.1 (kilograms)']
Text: The celestial body known as 1000 Piazzia has a mass of 1.1kg.
Subject: 1000 Piazzia
Predicate: mass
Object: 1.1 (kilograms)

Triple: ['__subject__ 1000 Piazzia __predicate__ mass __object__ 1.1 (kilograms)']
Text: The mass of 1000 Piazzia is 1.1 kg.
Subject: 1000 Piazzia
Predicate: mass
Object: 1.1 (kilograms)

Triple: ['__subject__ 1000 Piazzia __predicate__ orbitalPeriod __object__ 488160.0']
Text: 1000 Piazzia has an orbital period of 488160.0.
Subject: 1000 Piazzia
Predicate: orbitalPeriod
Object: 488160.0

Triple: ['__subject__ 1000 Piazzia __predicate__ orbitalPeriod __object__ 488160.0']
Text: The celestial body known as 1000 Piazzia has an orbital period of 488160.
Subject: 1000 Piazzia
Predicate: orbitalPeriod
Object: 488160.0

Triple: ['__subject__ 1000 Piazzia __predicate__ orbitalPeriod __object__ 488160.0']
Text: The dark asteroid called 1000 Piazzia has an orbital period of 488160.0.
Subject: 1000 Piazzia
Predicate: orbitalPeriod
Object: 488160.0

Triple: ['__subject__ 1000 Piazzia __predicate__ periapsis __object__ 352497000000.0']
Text: The periapsis of 1000 Piazzia is 352497000000.0.
Subject: 1000 Piazzia
Predicate: periapsis
Object: 352497000000.0

Triple: ['__subject__ 1000 Piazzia __predicate__ periapsis __object__ 352497000000.0']
Text: 1000 Piazzia has a periapsis of 352497000000.0.
Subject: 1000 Piazzia
Predicate: periapsis
Object: 352497000000.0

Triple: ['__subject__ 1000 Piazzia __predicate__ periapsis __object__ 352497000000.0']
Text: The dark asteroid 1000 Piazzia has a periapsis is 352497000000.0.
Subject: 1000 Piazzia
Predicate: periapsis
Object: 352497000000.0

Triple: ['__subject__ 1001 Gaussia __predicate__ absoluteMagnitude __object__ 9.7']
Text: 1001 Gaussia has an absolute magnitude of 9.7.
Subject: 1001 Gaussia
Predicate: absoluteMagnitude
Object: 9.7

Triple: ['__subject__ 1001 Gaussia __predicate__ absoluteMagnitude __object__ 9.7']
Text: The celestial body known as 1001 Gaussia has an absolute magnitude of 9.7.
Subject: 1001 Gaussia
Predicate: absoluteMagnitude
Object: 9.7

Triple: ['__subject__ 1001 Gaussia __predicate__ discoverer __object__ Sergey Belyavsky']
Text: Sergey Belyavsky discovered 1001 Gaussia.
Subject: 1001 Gaussia
Predicate: discoverer
Object: Sergey Belyavsky

Triple: ['__subject__ 1001 Gaussia __predicate__ discoverer __object__ Sergey Belyavsky']
Text: 1001 Gaussia was discovered by Sergey Belyavsky.
Subject: 1001 Gaussia
Predicate: discoverer
Object: Sergey Belyavsky

Triple: ['__subject__ 1001 Gaussia __predicate__ epoch __object__ 2015-06-27']
Text: 1001 Gaussia's epoch date is 2015-06-27.
Subject: 1001 Gaussia
Predicate: epoch
Object: 2015-06-27

Triple: ['__subject__ 1001 Gaussia __predicate__ epoch __object__ 2015-06-27']
Text: The epoch of 1001 Gaussia is on 31 July 2016.
Subject: 1001 Gaussia
Predicate: epoch
Object: 2015-06-27

Triple: ['__subject__ 1001 Gaussia __predicate__ formerName __object__ A911 MD']
Text: A911 MD is the former name of 1001 Gaussia.
Subject: 1001 Gaussia
Predicate: formerName
Object: A911 MD

Triple: ['__subject__ 1001 Gaussia __predicate__ formerName __object__ A911 MD']
Text: The celestial body known as 1001 Gaussia was formerly called A911 MD.
Subject: 1001 Gaussia
Predicate: formerName
Object: A911 MD

Triple: ['__subject__ 1001 Gaussia __predicate__ formerName __object__ A911 MD']
Text: The former name of the asteroid 1001 Gaussia was A911 MD.
Subject: 1001 Gaussia
Predicate: formerName
Object: A911 MD

Triple: ['__subject__ 1001 Gaussia __predicate__ meanTemperature __object__ 154.0 (kelvins)']
Text: The celestial body known as 1001 Gaussia has a mean temperature of 154 kelvins.
Subject: 1001 Gaussia
Predicate: meanTemperature
Object: 154.0 (kelvins)

Triple: ['__subject__ 1001 Gaussia __predicate__ meanTemperature __object__ 154.0 (kelvins)']
Text: 1001 Gaussia has a mean temperature of 154.0 kelvins.
Subject: 1001 Gaussia
Predicate: meanTemperature
Object: 154.0 (kelvins)

Triple: ['__subject__ 1001 Gaussia __predicate__ meanTemperature __object__ 154.0 (kelvins)']
Text: The mean temperature at 1001 Gaussia is 154.0 (kelvins).
Subject: 1001 Gaussia
Predicate: meanTemperature
Object: 154.0 (kelvins)

Triple: ['__subject__ 1001 Gaussia __predicate__ orbitalPeriod __object__ 5.75 (days)']
Text: 1001 Gaussia has an orbital period of 5.75 days.
Subject: 1001 Gaussia
Predicate: orbitalPeriod
Object: 5.75 (days)

Triple: ['__subject__ 1001 Gaussia __predicate__ orbitalPeriod __object__ 5.75 (days)']
Text: The orbital Period of 1001 Gaussia is 5.75 days.
Subject: 1001 Gaussia
Predicate: orbitalPeriod
Object: 5.75 (days)

Triple: ['__subject__ 1001 Gaussia __predicate__ periapsis __object__ 419113394.55312 (kilometres)']
Text: The periapsis of 1001 Gaussia is 419113394.55312 (kilometres).
Subject: 1001 Gaussia
Predicate: periapsis
Object: 419113394.55312 (kilometres)

Triple: ['__subject__ 1001 Gaussia __predicate__ periapsis __object__ 419113394.55312 (kilometres)']
Text: 1001 Gaussia has a periapsis of 419113394.55312 kilometres.
Subject: 1001 Gaussia
Predicate: periapsis
Object: 419113394.55312 (kilometres)

Triple: ['__subject__ 1001 Gaussia __predicate__ rotationPeriod __object__ 33012.0']
Text: 1001 Gaussia has a rotation period of 33012.0.
Subject: 1001 Gaussia
Predicate: rotationPeriod
Object: 33012.0

Triple: ['__subject__ 1001 Gaussia __predicate__ rotationPeriod __object__ 33012.0']
Text: The rotation period for 1001 Gaussia is 33012.0.
Subject: 1001 Gaussia
Predicate: rotationPeriod
Object: 33012.0

Triple: ['__subject__ 101 Helena __predicate__ absoluteMagnitude __object__ 8.33']
Text: 101 Helena has an absolute magnitude of 8.33.
Subject: 101 Helena
Predicate: absoluteMagnitude
Object: 8.33

Triple: ['__subject__ 101 Helena __predicate__ absoluteMagnitude __object__ 8.33']
Text: The absolute magnitude of 101 Helena is 8.33.
Subject: 101 Helena
Predicate: absoluteMagnitude
Object: 8.33

Triple: ['__subject__ 101 Helena __predicate__ absoluteMagnitude __object__ 8.33']
Text: 101 Helena’s absolute magnitude is 8.33.
Subject: 101 Helena
Predicate: absoluteMagnitude
Object: 8.33

Triple: ['__subject__ 101 Helena __predicate__ averageSpeed __object__ 18.44 (kilometrePerSeconds)']
Text: 101 Helena has an average speed of 18.44 km per secs.
Subject: 101 Helena
Predicate: averageSpeed
Object: 18.44 (kilometrePerSeconds)

Triple: ['__subject__ 101 Helena __predicate__ averageSpeed __object__ 18.44 (kilometrePerSeconds)']
Text: 101 Helena has an average speed of 18.44 kilometres per second.
Subject: 101 Helena
Predicate: averageSpeed
Object: 18.44 (kilometrePerSeconds)

Triple: ['__subject__ 101 Helena __predicate__ averageSpeed __object__ 18.44 (kilometrePerSeconds)']
Text: The average speed of 101 Helena is 18.44 km per sec.
Subject: 101 Helena
Predicate: averageSpeed
Object: 18.44 (kilometrePerSeconds)

Triple: ['__subject__ 101 Helena __predicate__ density __object__ 2.0 (gramPerCubicCentimetres)']
Text: 101 Helena has a density of 2.0 grams per cubic centimetres.
Subject: 101 Helena
Predicate: density
Object: 2.0 (gramPerCubicCentimetres)

Triple: ['__subject__ 101 Helena __predicate__ density __object__ 2.0 (gramPerCubicCentimetres)']
Text: The density of 101 Helena is 2.0 gram per cubic cm.
Subject: 101 Helena
Predicate: density
Object: 2.0 (gramPerCubicCentimetres)

Triple: ['__subject__ 101 Helena __predicate__ density __object__ 2.0 (gramPerCubicCentimetres)']
Text: 101 Helena has a density of 2.0 gram per Cubic centimeters.
Subject: 101 Helena
Predicate: density
Object: 2.0 (gramPerCubicCentimetres)

Triple: ['__subject__ 101 Helena __predicate__ discovered __object__ 1868-08-15']
Text: 101 Helena was discovered on August 15th 1868.
Subject: 101 Helena
Predicate: discovered
Object: 1868-08-15

Triple: ['__subject__ 101 Helena __predicate__ discovered __object__ 1868-08-15']
Text: 101 Helena was discovered on 15 August 1868.
Subject: 101 Helena
Predicate: discovered
Object: 1868-08-15

Triple: ['__subject__ 101 Helena __predicate__ discoverer __object__ James Craig Watson']
Text: 101 Helena was discovered by James Craig Watson.
Subject: 101 Helena
Predicate: discoverer
Object: James Craig Watson

Triple: ['__subject__ 101 Helena __predicate__ discoverer __object__ James Craig Watson']
Text: The discoverer of 101 Helena is James Craig Watson.
Subject: 101 Helena
Predicate: discoverer
Object: James Craig Watson

Triple: ['__subject__ 101 Helena __predicate__ escapeVelocity __object__ 0.0348 (kilometrePerSeconds)']
Text: 101 Helena has an escape velocity of 0.0348 km/s.
Subject: 101 Helena
Predicate: escapeVelocity
Object: 0.0348 (kilometrePerSeconds)

Triple: ['__subject__ 101 Helena __predicate__ escapeVelocity __object__ 0.0348 (kilometrePerSeconds)']
Text: 101 Helena has an escape velocity of 0.0348 kilometres per second.
Subject: 101 Helena
Predicate: escapeVelocity
Object: 0.0348 (kilometrePerSeconds)

Triple: ['__subject__ 101 Helena __predicate__ escapeVelocity __object__ 0.0348 (kilometrePerSeconds)']
Text: The escape velocity of 101 Helena is 0.0348 km per sec.
Subject: 101 Helena
Predicate: escapeVelocity
Object: 0.0348 (kilometrePerSeconds)

Triple: ['__subject__ 101 Helena __predicate__ periapsis __object__ 331683000.0 (kilometres)']
Text: 101 Helena has a periapsis of 331683000.0 kilometres.
Subject: 101 Helena
Predicate: periapsis
Object: 331683000.0 (kilometres)

Triple: ['__subject__ 101 Helena __predicate__ periapsis __object__ 331683000.0 (kilometres)']
Text: The periapsis of 101 Helena is 331683000.0 (kilometres).
Subject: 101 Helena
Predicate: periapsis
Object: 331683000.0 (kilometres)

Triple: ['__subject__ 101 Helena __predicate__ periapsis __object__ 331683000.0 (kilometres)']
Text: 101 Helena has a periapsis of 331683000.0 Kilometers.
Subject: 101 Helena
Predicate: periapsis
Object: 331683000.0 (kilometres)

Triple: ['__subject__ 101 Helena __predicate__ temperature __object__ 173.0 (kelvins)']
Text: The temperature of 101 Helena is 173 kelvins.
Subject: 101 Helena
Predicate: temperature
Object: 173.0 (kelvins)

Triple: ['__subject__ 101 Helena __predicate__ temperature __object__ 173.0 (kelvins)']
Text: 101 Helena's average temperature is 173.0 kelvins.
Subject: 101 Helena
Predicate: temperature
Object: 173.0 (kelvins)

Triple: ['__subject__ 101 Helena __predicate__ temperature __object__ 173.0 (kelvins)']
Text: 173.0 kelvins is the temperature of 101 Helena.
Subject: 101 Helena
Predicate: temperature
Object: 173.0 (kelvins)

Triple: ['__subject__ 1036 Ganymed __predicate__ apoapsis __object__ 611961000.0 (kilometres)']
Text: 1036 Ganymed has an apoapsis of 611961000.0 kilometres.
Subject: 1036 Ganymed
Predicate: apoapsis
Object: 611961000.0 (kilometres)

Triple: ['__subject__ 1036 Ganymed __predicate__ apoapsis __object__ 611961000.0 (kilometres)']
Text: The apoapsis measurement of 1036 Ganymed is 611961000.0 (kilometres).
Subject: 1036 Ganymed
Predicate: apoapsis
Object: 611961000.0 (kilometres)

Triple: ['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade']
Text: 1036 Ganymed was discovered by Walter Baade.
Subject: 1036 Ganymed
Predicate: discoverer
Object: Walter Baade

Triple: ['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade']
Text: Walter Baade discovered 1036 Ganymed.
Subject: 1036 Ganymed
Predicate: discoverer
Object: Walter Baade

Triple: ['__subject__ 1036 Ganymed __predicate__ discoverer __object__ Walter Baade']
Text: Walter Baade, was the one to discover, 1036 Ganymed.
Subject: 1036 Ganymed
Predicate: discoverer
Object: Walter Baade

Triple: ['__subject__ 1036 Ganymed __predicate__ epoch __object__ 2004-10-22']
Text: 1036 Ganymed has an epoch date of October 22nd 2004.
Subject: 1036 Ganymed
Predicate: epoch
Object: 2004-10-22

Triple: ['__subject__ 1036 Ganymed __predicate__ epoch __object__ 2004-10-22']
Text: The 1036 Ganymed epoch is 2004-10-22.
Subject: 1036 Ganymed
Predicate: epoch
Object: 2004-10-22

Triple: ['__subject__ 1036 Ganymed __predicate__ epoch __object__ 2004-10-22']
Text: The asteroid called 1036 Ganymed has an epoch date of 22nd October 2004.
Subject: 1036 Ganymed
Predicate: epoch
Object: 2004-10-22

Triple: ['__subject__ 1036 Ganymed __predicate__ orbitalPeriod __object__ 374976.0 (seconds)']
Text: 1036 Ganymed has an orbital period of 374976.0 seconds.
Subject: 1036 Ganymed
Predicate: orbitalPeriod
Object: 374976.0 (seconds)

Triple: ['__subject__ 1036 Ganymed __predicate__ orbitalPeriod __object__ 374976.0 (seconds)']
Text: The orbital period of 1036 Ganymed is 374976 seconds.
Subject: 1036 Ganymed
Predicate: orbitalPeriod
Object: 374976.0 (seconds)

Triple: ['__subject__ 1036 Ganymed __predicate__ periapsis __object__ 184434000000.0']
Text: 1036 Ganymed has a periapsis of 184434000000.0.
Subject: 1036 Ganymed
Predicate: periapsis
Object: 184434000000.0

Triple: ['__subject__ 1036 Ganymed __predicate__ periapsis __object__ 184434000000.0']
Text: The asteroid called 1036 Ganymed has a periapsis of 184434000000.0.
Subject: 1036 Ganymed
Predicate: periapsis
Object: 184434000000.0

Triple: ['__subject__ 1036 Ganymed __predicate__ periapsis __object__ 184434000000.0']
Text: The periapsis of 1036 Ganymed is 184434000000.
Subject: 1036 Ganymed
Predicate: periapsis
Object: 184434000000.0

Triple: ['__subject__ 1036 Ganymed __predicate__ rotationPeriod __object__ 37116.0']
Text: 1036 Ganymed has a rotation period of 37116.0.
Subject: 1036 Ganymed
Predicate: rotationPeriod
Object: 37116.0

Triple: ['__subject__ 1036 Ganymed __predicate__ rotationPeriod __object__ 37116.0']
Text: 1036 Ganymed has a rotational period of 37116.0.
Subject: 1036 Ganymed
Predicate: rotationPeriod
Object: 37116.0

Triple: ['__subject__ 1036 Ganymed __predicate__ rotationPeriod __object__ 37116.0']
Text: The rotation period for 1036 Ganymed is 37116.0.
Subject: 1036 Ganymed
Predicate: rotationPeriod
Object: 37116.0

Triple: ['__subject__ 103 Hera __predicate__ apoapsis __object__ 437170000.0 (kilometres)']
Text: 103 Hera has an apoapsis of 437170000.0 (kilometres).
Subject: 103 Hera
Predicate: apoapsis
Object: 437170000.0 (kilometres)

Triple: ['__subject__ 103 Hera __predicate__ apoapsis __object__ 437170000.0 (kilometres)']
Text: 103 Hera has an apoapsis of 437170000.0 kilometres.
Subject: 103 Hera
Predicate: apoapsis
Object: 437170000.0 (kilometres)

Triple: ['__subject__ 103 Hera __predicate__ averageSpeed __object__ 18.09 (kilometrePerSeconds)']
Text: 103 Hera has an average speed of 18.09 kilometres per second.
Subject: 103 Hera
Predicate: averageSpeed
Object: 18.09 (kilometrePerSeconds)

Triple: ['__subject__ 103 Hera __predicate__ averageSpeed __object__ 18.09 (kilometrePerSeconds)']
Text: 103 Hera has an average speed of 18.09 km/s.
Subject: 103 Hera
Predicate: averageSpeed
Object: 18.09 (kilometrePerSeconds)

Triple: ['__subject__ 103 Hera __predicate__ averageSpeed __object__ 18.09 (kilometrePerSeconds)']
Text: The average speed of 103 Hera is 18.09 km per sec.
Subject: 103 Hera
Predicate: averageSpeed
Object: 18.09 (kilometrePerSeconds)

Triple: ['__subject__ 103 Hera __predicate__ discovered __object__ 1868-09-07']
Text: 103 Hera was discovered on 7 September 1868.
Subject: 103 Hera
Predicate: discovered
Object: 1868-09-07

Triple: ['__subject__ 103 Hera __predicate__ discovered __object__ 1868-09-07']
Text: 103 Hera was discovered on September 7th 1868.
Subject: 103 Hera
Predicate: discovered
Object: 1868-09-07

Triple: ['__subject__ 103 Hera __predicate__ discovered __object__ 1868-09-07']
Text: 103 Hera was discovered on the 7th of September 1868.
Subject: 103 Hera
Predicate: discovered
Object: 1868-09-07

Triple: ['__subject__ 103 Hera __predicate__ discoverer __object__ James Craig Watson']
Text: 103 Hera was discovered by James Craig Watson.
Subject: 103 Hera
Predicate: discoverer
Object: James Craig Watson

Triple: ['__subject__ 103 Hera __predicate__ discoverer __object__ James Craig Watson']
Text: James Craig Watson discovered 103 Hera.
Subject: 103 Hera
Predicate: discoverer
Object: James Craig Watson

Triple: ['__subject__ 103 Hera __predicate__ discoverer __object__ James Craig Watson']
Text: James Craig Watson was the discoverer of 103 Hera.
Subject: 103 Hera
Predicate: discoverer
Object: James Craig Watson

Triple: ['__subject__ 103 Hera __predicate__ epoch __object__ 2011-08-27']
Text: 103 Hera has the epoch of 27 August 2011.
Subject: 103 Hera
Predicate: epoch
Object: 2011-08-27

Triple: ['__subject__ 103 Hera __predicate__ epoch __object__ 2011-08-27']
Text: 103 Hera has an epoch date of August 27th 2011.
Subject: 103 Hera
Predicate: epoch
Object: 2011-08-27

Triple: ['__subject__ 103 Hera __predicate__ epoch __object__ 2011-08-27']
Text: The epoch of 103 Hera is on the 31st of July 2016.
Subject: 103 Hera
Predicate: epoch
Object: 2011-08-27

Triple: ['__subject__ 103 Hera __predicate__ escapeVelocity __object__ 0.0482 (kilometrePerSeconds)']
Text: 103 Hera has the escape velocity of 0.0482 km per sec.
Subject: 103 Hera
Predicate: escapeVelocity
Object: 0.0482 (kilometrePerSeconds)

Triple: ['__subject__ 103 Hera __predicate__ escapeVelocity __object__ 0.0482 (kilometrePerSeconds)']
Text: 103 Hera has an escape velocity of 0.0482 kilometres per second.
Subject: 103 Hera
Predicate: escapeVelocity
Object: 0.0482 (kilometrePerSeconds)

Triple: ['__subject__ 103 Hera __predicate__ escapeVelocity __object__ 0.0482 (kilometrePerSeconds)']
Text: The celestial body known as 103 Hera has an escape velocity of 0.0482 k.p.s.
Subject: 103 Hera
Predicate: escapeVelocity
Object: 0.0482 (kilometrePerSeconds)

Triple: ['__subject__ 103 Hera __predicate__ orbitalPeriod __object__ 1622.213 (days)']
Text: 103 Hera has an orbital period of 1622.213 days.
Subject: 103 Hera
Predicate: orbitalPeriod
Object: 1622.213 (days)

Triple: ['__subject__ 103 Hera __predicate__ orbitalPeriod __object__ 1622.213 (days)']
Text: The orbital period of 103 Hera is 1622.213 days.
Subject: 103 Hera
Predicate: orbitalPeriod
Object: 1622.213 (days)

Triple: ['__subject__ 103 Hera __predicate__ periapsis __object__ 371240000.0 (kilometres)']
Text: 103 Hera has a periapsis measurement of 371240000.0 (kilometres).
Subject: 103 Hera
Predicate: periapsis
Object: 371240000.0 (kilometres)

Triple: ['__subject__ 103 Hera __predicate__ periapsis __object__ 371240000.0 (kilometres)']
Text: 103 Hera has a periapsis of 371240000.0 kilometres.
Subject: 103 Hera
Predicate: periapsis
Object: 371240000.0 (kilometres)

Triple: ['__subject__ 103 Hera __predicate__ rotationPeriod __object__ 85466.9']
Text: 103 Hera has a rotation period of 85466.9.
Subject: 103 Hera
Predicate: rotationPeriod
Object: 85466.9

Triple: ['__subject__ 103 Hera __predicate__ rotationPeriod __object__ 85466.9']
Text: The rotation period of 103 Hera is 85466.9.
Subject: 103 Hera
Predicate: rotationPeriod
Object: 85466.9

Triple: ['__subject__ 103 Hera __predicate__ temperature __object__ 170.0 (kelvins)']
Text: The celestial body known as 103 Hera has a temperature of 170 kelvins.
Subject: 103 Hera
Predicate: temperature
Object: 170.0 (kelvins)

Triple: ['__subject__ 103 Hera __predicate__ temperature __object__ 170.0 (kelvins)']
Text: 103 Hera has a temperature of 170.0 kelvins.
Subject: 103 Hera
Predicate: temperature
Object: 170.0 (kelvins)

Triple: ['__subject__ 103 Hera __predicate__ temperature __object__ 170.0 (kelvins)']
Text: The temperature of 103 Hera is 170.0 (kelvins).
Subject: 103 Hera
Predicate: temperature
Object: 170.0 (kelvins)

Triple: ['__subject__ 107 Camilla __predicate__ apoapsis __object__ 560937000.0 (kilometres)']
Text: 107 Camilla has an apoapsis of 560937000.0 kilometres.
Subject: 107 Camilla
Predicate: apoapsis
Object: 560937000.0 (kilometres)

Triple: ['__subject__ 107 Camilla __predicate__ apoapsis __object__ 560937000.0 (kilometres)']
Text: 107 Camilla has an apoapsis of 560937000.0 km.
Subject: 107 Camilla
Predicate: apoapsis
Object: 560937000.0 (kilometres)

Triple: ['__subject__ 107 Camilla __predicate__ discovered __object__ 1868-11-17']
Text: 107 Camilla was discovered on 17 November 1868.
Subject: 107 Camilla
Predicate: discovered
Object: 1868-11-17

Triple: ['__subject__ 107 Camilla __predicate__ discovered __object__ 1868-11-17']
Text: 107 Camilla was discovered on November 17th 1868.
Subject: 107 Camilla
Predicate: discovered
Object: 1868-11-17

Triple: ['__subject__ 107 Camilla __predicate__ discovered __object__ 2001-03-01']
Text: 107 Camilla was discovered on 1 March 2001.
Subject: 107 Camilla
Predicate: discovered
Object: 2001-03-01

Triple: ['__subject__ 107 Camilla __predicate__ discovered __object__ 2001-03-01']
Text: 107 Camilla was discovered on March 1st 2001.
Subject: 107 Camilla
Predicate: discovered
Object: 2001-03-01

Triple: ['__subject__ 107 Camilla __predicate__ discovered __object__ 2001-03-01']
Text: The asteroid 107 Camilla was discovered on the 01st March 2001.
Subject: 107 Camilla
Predicate: discovered
Object: 2001-03-01

Triple: ['__subject__ 107 Camilla __predicate__ discoverer __object__ B. Zellner']
Text: B Zellner discovered 107 Camilla.
Subject: 107 Camilla
Predicate: discoverer
Object: B. Zellner

Triple: ['__subject__ 107 Camilla __predicate__ discoverer __object__ B. Zellner']
Text: B. Zellner was the discoverer of 107 Camilla.
Subject: 107 Camilla
Predicate: discoverer
Object: B. Zellner

Triple: ['__subject__ 107 Camilla __predicate__ discoverer __object__ B. Zellner']
Text: B. Zellner discovered 107 Camilla.
Subject: 107 Camilla
Predicate: discoverer
Object: B. Zellner

Triple: ['__subject__ 107 Camilla __predicate__ discoverer __object__ C. Woods']
Text: C Woods discovered 107 Camilla.
Subject: 107 Camilla
Predicate: discoverer
Object: C. Woods

Triple: ['__subject__ 107 Camilla __predicate__ discoverer __object__ C. Woods']
Text: 107 Camilla was discovered by C. Woods.
Subject: 107 Camilla
Predicate: discoverer
Object: C. Woods

Triple: ['__subject__ 107 Camilla __predicate__ discoverer __object__ E. Wells']
Text: The discoverer of 107 Camilla was E. Wells.
Subject: 107 Camilla
Predicate: discoverer
Object: E. Wells

Triple: ['__subject__ 107 Camilla __predicate__ discoverer __object__ E. Wells']
Text: 107 Camilla was discovered by E. Wells.
Subject: 107 Camilla
Predicate: discoverer
Object: E. Wells

Triple: ['__subject__ 107 Camilla __predicate__ discoverer __object__ E. Wells']
Text: E Wells discovered 107 Camilla.
Subject: 107 Camilla
Predicate: discoverer
Object: E. Wells

Triple: ['__subject__ 107 Camilla __predicate__ discoverer __object__ M. Gaffey']
Text: 107 Camilla was discovered by M Gaffey.
Subject: 107 Camilla
Predicate: discoverer
Object: M. Gaffey

Triple: ['__subject__ 107 Camilla __predicate__ discoverer __object__ M. Gaffey']
Text: M. Gaffey discovered 107 Camilla.
Subject: 107 Camilla
Predicate: discoverer
Object: M. Gaffey

Triple: ['__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31']
Text: 107 Camilla has an epoch date of December 31st 2006.
Subject: 107 Camilla
Predicate: epoch
Object: 2006-12-31

Triple: ['__subject__ 107 Camilla __predicate__ epoch __object__ 2006-12-31']
Text: 107 Camilla has the epoch 31 December 2006.
Subject: 107 Camilla
Predicate: epoch
Object: 2006-12-31

Triple: ['__subject__ 107 Camilla __predicate__ orbitalPeriod __object__ 2368.05 (days)']
Text: 2368.05 days is the orbital period of 107 Camilla.
Subject: 107 Camilla
Predicate: orbitalPeriod
Object: 2368.05 (days)

Triple: ['__subject__ 107 Camilla __predicate__ orbitalPeriod __object__ 2368.05 (days)']
Text: 107 Camilla has an orbital period of 2368.05 days.
Subject: 107 Camilla
Predicate: orbitalPeriod
Object: 2368.05 (days)

Triple: ['__subject__ 107 Camilla __predicate__ periapsis __object__ 479343000.0 (kilometres)']
Text: The periapsis of 107 Camilla is 479343000.0 (kilometres).
Subject: 107 Camilla
Predicate: periapsis
Object: 479343000.0 (kilometres)

Triple: ['__subject__ 107 Camilla __predicate__ periapsis __object__ 479343000.0 (kilometres)']
Text: 107 Camilla has a periapsis of 479343000.0 kilometres.
Subject: 107 Camilla
Predicate: periapsis
Object: 479343000.0 (kilometres)

Triple: ['__subject__ 1089 Tama __predicate__ apoapsis __object__ 373513000.0 (kilometres)']
Text: 1089 Tama has an apoapsis of 373513000.0 kilometres.
Subject: 1089 Tama
Predicate: apoapsis
Object: 373513000.0 (kilometres)

Triple: ['__subject__ 1089 Tama __predicate__ apoapsis __object__ 373513000.0 (kilometres)']
Text: The apoapsis for 1089 Tama is 373513000.0 (kilometres).
Subject: 1089 Tama
Predicate: apoapsis
Object: 373513000.0 (kilometres)

Triple: ['__subject__ 1089 Tama __predicate__ averageSpeed __object__ 19.94 (kilometrePerSeconds)']
Text: 1089 Tama has an average speed of 19.94 kilometres per second.
Subject: 1089 Tama
Predicate: averageSpeed
Object: 19.94 (kilometrePerSeconds)

Triple: ['__subject__ 1089 Tama __predicate__ averageSpeed __object__ 19.94 (kilometrePerSeconds)']
Text: The average speed of 1089 Tama is 19.94 km per sec.
Subject: 1089 Tama
Predicate: averageSpeed
Object: 19.94 (kilometrePerSeconds)

Triple: ['__subject__ 1089 Tama __predicate__ averageSpeed __object__ 19.94 (kilometrePerSeconds)']
Text: 1089 Tama has an average speed of 19.94 kilometers per second.
Subject: 1089 Tama
Predicate: averageSpeed
Object: 19.94 (kilometrePerSeconds)

Triple: ['__subject__ 1089 Tama __predicate__ epoch __object__ 2005-11-26']
Text: The epoch date of 1089 Tama is 26 November 2005.
Subject: 1089 Tama
Predicate: epoch
Object: 2005-11-26

Triple: ['__subject__ 1089 Tama __predicate__ epoch __object__ 2005-11-26']
Text: The epoch of 1089 Tama is 2005-11-26.
Subject: 1089 Tama
Predicate: epoch
Object: 2005-11-26

Triple: ['__subject__ 1089 Tama __predicate__ formerName __object__ 1930 ST; 1952 HE4']
Text: The former name of 1089 Tama is "1930 ST; 1952 HE4".
Subject: 1089 Tama
Predicate: formerName
Object: 1930 ST; 1952 HE4

Triple: ['__subject__ 1089 Tama __predicate__ formerName __object__ A919 HA; 1927 WB;']
Text: 1089 Tama was formerly known as A919 HA; 1927 WB.
Subject: 1089 Tama
Predicate: formerName
Object: A919 HA; 1927 WB;

Triple: ['__subject__ 1089 Tama __predicate__ formerName __object__ A919 HA; 1927 WB;']
Text: The former name of 1089 Tama is "A919 HA; 1927 WB;".
Subject: 1089 Tama
Predicate: formerName
Object: A919 HA; 1927 WB;

Triple: ['__subject__ 1089 Tama __predicate__ periapsis __object__ 288749000000.0']
Text: 1089 Tama has a periapsis of 288749000000.0.
Subject: 1089 Tama
Predicate: periapsis
Object: 288749000000.0

Triple: ['__subject__ 1089 Tama __predicate__ rotationPeriod __object__ 17.28']
Text: The rotation period for 1089 Tama is 17.28.
Subject: 1089 Tama
Predicate: rotationPeriod
Object: 17.28

Triple: ['__subject__ 1089 Tama __predicate__ rotationPeriod __object__ 17.28']
Text: 1089 Tama has a rotation period of 17.28.
Subject: 1089 Tama
Predicate: rotationPeriod
Object: 17.28

Triple: ['__subject__ 1089 Tama __predicate__ temperature __object__ 179.0 (kelvins)']
Text: 1089 Tama has a temperature of 179.0 kelvins.
Subject: 1089 Tama
Predicate: temperature
Object: 179.0 (kelvins)

Triple: ['__subject__ 1089 Tama __predicate__ temperature __object__ 179.0 (kelvins)']
Text: 1089 Tama has the temperature of 179.0 kelvins.
Subject: 1089 Tama
Predicate: temperature
Object: 179.0 (kelvins)

Triple: ['__subject__ 1089 Tama __predicate__ temperature __object__ 179.0 (kelvins)']
Text: The temperature of 1089 Tama is 179.0 (kelvins).
Subject: 1089 Tama
Predicate: temperature
Object: 179.0 (kelvins)

Triple: ['__subject__ 1097 Vicia __predicate__ apoapsis __object__ 511592000.0 (kilometres)']
Text: 1097 Vicia has an apoapsis of 511592000.0 kilometres.
Subject: 1097 Vicia
Predicate: apoapsis
Object: 511592000.0 (kilometres)

Triple: ['__subject__ 1097 Vicia __predicate__ apoapsis __object__ 511592000.0 (kilometres)']
Text: The apoapsis of 1097 Vicia is 511592000.0 km.
Subject: 1097 Vicia
Predicate: apoapsis
Object: 511592000.0 (kilometres)

Triple: ['__subject__ 1097 Vicia __predicate__ escapeVelocity __object__ 0.0112 (kilometrePerSeconds)']
Text: 1097 Vicia has an escape velocity of 0.0112 kilometres per second.
Subject: 1097 Vicia
Predicate: escapeVelocity
Object: 0.0112 (kilometrePerSeconds)

Triple: ['__subject__ 1097 Vicia __predicate__ escapeVelocity __object__ 0.0112 (kilometrePerSeconds)']
Text: The escape velocity of 1097 Vicia is 0.0112 km per sec.
Subject: 1097 Vicia
Predicate: escapeVelocity
Object: 0.0112 (kilometrePerSeconds)

Triple: ['__subject__ 1097 Vicia __predicate__ formerName __object__ 1928 PC']
Text: 1097 Vicia was formerly known as "1928 PC".
Subject: 1097 Vicia
Predicate: formerName
Object: 1928 PC

Triple: ['__subject__ 1097 Vicia __predicate__ formerName __object__ 1928 PC']
Text: The former name of 1097 Vicia is "1928 PC".
Subject: 1097 Vicia
Predicate: formerName
Object: 1928 PC

Triple: ['__subject__ 1097 Vicia __predicate__ formerName __object__ 1928 PC']
Text: 1928 PC was the former name of 1097 Vicia.
Subject: 1097 Vicia
Predicate: formerName
Object: 1928 PC

Triple: ['__subject__ 1097 Vicia __predicate__ mass __object__ 9.8 (kilograms)']
Text: 1097 Vicia has a mass of 9.8 kgs.
Subject: 1097 Vicia
Predicate: mass
Object: 9.8 (kilograms)

Triple: ['__subject__ 1097 Vicia __predicate__ mass __object__ 9.8 (kilograms)']
Text: The celestial body known as 1097 Vicia has a mass of 9.8kg.
Subject: 1097 Vicia
Predicate: mass
Object: 9.8 (kilograms)

Triple: ['__subject__ 1097 Vicia __predicate__ orbitalPeriod __object__ 135589000.0']
Text: 1097 Vicia has an orbital period of 135589000.0.
Subject: 1097 Vicia
Predicate: orbitalPeriod
Object: 135589000.0

Triple: ['__subject__ 1097 Vicia __predicate__ orbitalPeriod __object__ 135589000.0']
Text: The orbital period of 1097 Vicia, is 135589000.0.
Subject: 1097 Vicia
Predicate: orbitalPeriod
Object: 135589000.0

Triple: ['__subject__ 1097 Vicia __predicate__ orbitalPeriod __object__ 135589000.0']
Text: The orbital period for 1097 Vicia is 135589000.0.
Subject: 1097 Vicia
Predicate: orbitalPeriod
Object: 135589000.0

Triple: ['__subject__ 1097 Vicia __predicate__ periapsis __object__ 279142000000.0']
Text: 1097 Vicia has a periapsis of 279142000000.0.
Subject: 1097 Vicia
Predicate: periapsis
Object: 279142000000.0

Triple: ['__subject__ 1097 Vicia __predicate__ periapsis __object__ 279142000000.0']
Text: 1097 Vicia has a periapsis of 279142000000.
Subject: 1097 Vicia
Predicate: periapsis
Object: 279142000000.0

Triple: ['__subject__ 1097 Vicia __predicate__ periapsis __object__ 279142000000.0']
Text: 1097 Vicia has a periapsis measurement of 279142000000.0.
Subject: 1097 Vicia
Predicate: periapsis
Object: 279142000000.0

Triple: ['__subject__ 1097 Vicia __predicate__ temperature __object__ 171.0 (kelvins)']
Text: 1097 Vicia has a temperature of 171.0 kelvins.
Subject: 1097 Vicia
Predicate: temperature
Object: 171.0 (kelvins)

Triple: ['__subject__ 1097 Vicia __predicate__ temperature __object__ 171.0 (kelvins)']
Text: The temperature of 1097 Vicia is 171.0 (kelvins).
Subject: 1097 Vicia
Predicate: temperature
Object: 171.0 (kelvins)

Triple: ['__subject__ 1097 Vicia __predicate__ temperature __object__ 171.0 (kelvins)']
Text: The celestial body known as 1097 Vicia has a temperature of 171 kelvins.
Subject: 1097 Vicia
Predicate: temperature
Object: 171.0 (kelvins)

Triple: ['__subject__ 1099 Figneria __predicate__ apoapsis __object__ 605718000.0 (kilometres)']
Text: 1099 Figneria has an apoapsis of 605718000.0 kilometres.
Subject: 1099 Figneria
Predicate: apoapsis
Object: 605718000.0 (kilometres)

Triple: ['__subject__ 1099 Figneria __predicate__ apoapsis __object__ 605718000.0 (kilometres)']
Text: The apoapsis of 1099 Figneria is 605718000.0 kms.
Subject: 1099 Figneria
Predicate: apoapsis
Object: 605718000.0 (kilometres)

Triple: ['__subject__ 1099 Figneria __predicate__ apoapsis __object__ 605718000.0 (kilometres)']
Text: 1099 Figneria has an apoapsis of 605718000 kilometres.
Subject: 1099 Figneria
Predicate: apoapsis
Object: 605718000.0 (kilometres)

Triple: ['__subject__ 1099 Figneria __predicate__ averageSpeed __object__ 16.37 (kilometrePerSeconds)']
Text: The average speed of 1099 Figneria is 16.37 km per sec.
Subject: 1099 Figneria
Predicate: averageSpeed
Object: 16.37 (kilometrePerSeconds)

Triple: ['__subject__ 1099 Figneria __predicate__ averageSpeed __object__ 16.37 (kilometrePerSeconds)']
Text: 1099 Figneria travels at an average speed of 16.37 kilometres per second.
Subject: 1099 Figneria
Predicate: averageSpeed
Object: 16.37 (kilometrePerSeconds)

Triple: ['__subject__ 1099 Figneria __predicate__ epoch __object__ 2006-12-31']
Text: The epoch date for 1099 Figneria is 31 December 2006.
Subject: 1099 Figneria
Predicate: epoch
Object: 2006-12-31

Triple: ['__subject__ 1099 Figneria __predicate__ epoch __object__ 2006-12-31']
Text: 1099 Figneria has an epoch date of December 31st 2006.
Subject: 1099 Figneria
Predicate: epoch
Object: 2006-12-31

Triple: ['__subject__ 1099 Figneria __predicate__ formerName __object__ 1928 RQ']
Text: The former name of 1099 Figneria is 1928 RQ.
Subject: 1099 Figneria
Predicate: formerName
Object: 1928 RQ

Triple: ['__subject__ 1099 Figneria __predicate__ formerName __object__ 1928 RQ']
Text: 1099 Figneria was formerly known as "1928 RQ".
Subject: 1099 Figneria
Predicate: formerName
Object: 1928 RQ

Triple: ['__subject__ 1099 Figneria __predicate__ formerName __object__ 1928 RQ']
Text: 1099 Figneria was formerly known as 1928 RQ.
Subject: 1099 Figneria
Predicate: formerName
Object: 1928 RQ

Triple: ['__subject__ 1099 Figneria __predicate__ orbitalPeriod __object__ 179942000.0']
Text: 1099 Figneria has an orbital period of 179942000.0.
Subject: 1099 Figneria
Predicate: orbitalPeriod
Object: 179942000.0

Triple: ['__subject__ 1099 Figneria __predicate__ orbitalPeriod __object__ 179942000.0']
Text: The orbital period of 1099 Figneria is 179942000.0.
Subject: 1099 Figneria
Predicate: orbitalPeriod
Object: 179942000.0

Triple: ['__subject__ 1099 Figneria __predicate__ orbitalPeriod __object__ 179942000.0']
Text: The orbital period for 1099 Figneria, is 179942000.0.
Subject: 1099 Figneria
Predicate: orbitalPeriod
Object: 179942000.0

Triple: ['__subject__ 1099 Figneria __predicate__ periapsis __object__ 349206000000.0']
Text: 1099 Figneria has a periapsis measurement of 349206000000.0.
Subject: 1099 Figneria
Predicate: periapsis
Object: 349206000000.0

Triple: ['__subject__ 1099 Figneria __predicate__ periapsis __object__ 349206000000.0']
Text: 349206000000 is the periapsis of 1099 Figneria.
Subject: 1099 Figneria
Predicate: periapsis
Object: 349206000000.0

Triple: ['__subject__ 1099 Figneria __predicate__ periapsis __object__ 349206000000.0']
Text: The periapsis of 1099 Figneria is 349206000000.0.
Subject: 1099 Figneria
Predicate: periapsis
Object: 349206000000.0

Triple: ['__subject__ 1099 Figneria __predicate__ temperature __object__ 156.0 (kelvins)']
Text: 1099 Figneria has a temperature of 156.0 kelvins.
Subject: 1099 Figneria
Predicate: temperature
Object: 156.0 (kelvins)

Triple: ['__subject__ 1099 Figneria __predicate__ temperature __object__ 156.0 (kelvins)']
Text: The celestial body known as 1099 Figneria has a temperature of 156 kelvins.
Subject: 1099 Figneria
Predicate: temperature
Object: 156.0 (kelvins)

Triple: ['__subject__ 109 Felicitas __predicate__ apoapsis __object__ 523329000.0 (kilometres)']
Text: 109 Felicitas has an apoapsis of 523329000.0 kilometres.
Subject: 109 Felicitas
Predicate: apoapsis
Object: 523329000.0 (kilometres)

Triple: ['__subject__ 109 Felicitas __predicate__ apoapsis __object__ 523329000.0 (kilometres)']
Text: The apoapsis for 109 Felicitas is 523329000.0 (kilometres).
Subject: 109 Felicitas
Predicate: apoapsis
Object: 523329000.0 (kilometres)

Triple: ['__subject__ 109 Felicitas __predicate__ apoapsis __object__ 523329000.0 (kilometres)']
Text: 109 Felicitas has an apoapsis of 523329000 kilometres.
Subject: 109 Felicitas
Predicate: apoapsis
Object: 523329000.0 (kilometres)

Triple: ['__subject__ 109 Felicitas __predicate__ averageSpeed __object__ 17.73 (kilometrePerSeconds)']
Text: 109 Felicitas has an average speed of 17.73 kilometres per second.
Subject: 109 Felicitas
Predicate: averageSpeed
Object: 17.73 (kilometrePerSeconds)

Triple: ['__subject__ 109 Felicitas __predicate__ averageSpeed __object__ 17.73 (kilometrePerSeconds)']
Text: 109 Felicitas travels at an average speed of 17.73 km/s.
Subject: 109 Felicitas
Predicate: averageSpeed
Object: 17.73 (kilometrePerSeconds)

Triple: ['__subject__ 109 Felicitas __predicate__ epoch __object__ 2006-12-31']
Text: The epoch date of 109 Felicitas is 31 December 2006.
Subject: 109 Felicitas
Predicate: epoch
Object: 2006-12-31

Triple: ['__subject__ 109 Felicitas __predicate__ epoch __object__ 2006-12-31']
Text: 109 Felicitas has an epoch date of December 31st 2006.
Subject: 109 Felicitas
Predicate: epoch
Object: 2006-12-31

Triple: ['__subject__ 109 Felicitas __predicate__ escapeVelocity __object__ 0.0473 (kilometrePerSeconds)']
Text: 109 Felicitas has an escape velocity of 0.0473 kilometres per second.
Subject: 109 Felicitas
Predicate: escapeVelocity
Object: 0.0473 (kilometrePerSeconds)

Triple: ['__subject__ 109 Felicitas __predicate__ escapeVelocity __object__ 0.0473 (kilometrePerSeconds)']
Text: 109 Felicitas has an escape velocity of 0.0473 km per sec.
Subject: 109 Felicitas
Predicate: escapeVelocity
Object: 0.0473 (kilometrePerSeconds)

Triple: ['__subject__ 109 Felicitas __predicate__ mass __object__ 7.5 (kilograms)']
Text: 109 Felicitas has a mass of 7.5 kilograms.
Subject: 109 Felicitas
Predicate: mass
Object: 7.5 (kilograms)

Triple: ['__subject__ 109 Felicitas __predicate__ mass __object__ 7.5 (kilograms)']
Text: 109 Felicitas has a mass of 7.5kgs.
Subject: 109 Felicitas
Predicate: mass
Object: 7.5 (kilograms)

Triple: ['__subject__ 109 Felicitas __predicate__ mass __object__ 7.5 (kilograms)']
Text: 109 Felicitas has 7.5 kg of mass.
Subject: 109 Felicitas
Predicate: mass
Object: 7.5 (kilograms)

Triple: ['__subject__ 109 Felicitas __predicate__ orbitalPeriod __object__ 139705000.0']
Text: The orbital period of 109 Felicitas is 139705000.0.
Subject: 109 Felicitas
Predicate: orbitalPeriod
Object: 139705000.0

Triple: ['__subject__ 109 Felicitas __predicate__ orbitalPeriod __object__ 139705000.0']
Text: 109 Felicitas has an orbital period of 139705000.0.
Subject: 109 Felicitas
Predicate: orbitalPeriod
Object: 139705000.0

Triple: ['__subject__ 109 Felicitas __predicate__ rotationPeriod __object__ 47487.6']
Text: The celestial body known as 109 Felicitas has a rotation period of 47487.6.
Subject: 109 Felicitas
Predicate: rotationPeriod
Object: 47487.6

Triple: ['__subject__ 109 Felicitas __predicate__ rotationPeriod __object__ 47487.6']
Text: 109 Felicitas has a rotational period of 47487.6.
Subject: 109 Felicitas
Predicate: rotationPeriod
Object: 47487.6

Triple: ['__subject__ 10 Hygiea __predicate__ apoapsis __object__ 523951582.33968 (kilometres)']
Text: 10 Hygiea has an apoapsis of 523951582.33968 kilometres.
Subject: 10 Hygiea
Predicate: apoapsis
Object: 523951582.33968 (kilometres)

Triple: ['__subject__ 10 Hygiea __predicate__ apoapsis __object__ 523951582.33968 (kilometres)']
Text: 10 Hygiea has an apoapsis of 523951582.33968 (kilometres).
Subject: 10 Hygiea
Predicate: apoapsis
Object: 523951582.33968 (kilometres)

Triple: ['__subject__ 10 Hygiea __predicate__ apoapsis __object__ 523951582.33968 (kilometres)']
Text: The asteroid called 10 Hygiea, has an apoapsis of 523951582.33968 kilometres.
Subject: 10 Hygiea
Predicate: apoapsis
Object: 523951582.33968 (kilometres)

Triple: ['__subject__ 10 Hygiea __predicate__ discoverer __object__ Annibale de Gasparis']
Text: Annibale de Gasparis discovered 10 Hygiea.
Subject: 10 Hygiea
Predicate: discoverer
Object: Annibale de Gasparis

Triple: ['__subject__ 10 Hygiea __predicate__ epoch __object__ 2015-06-27']
Text: 10 Hygiea has an epoch date of June 27th 2015.
Subject: 10 Hygiea
Predicate: epoch
Object: 2015-06-27

Triple: ['__subject__ 10 Hygiea __predicate__ epoch __object__ 2015-06-27']
Text: The asteroid called 10 Hygiea has an epoch date of 27th June 2015.
Subject: 10 Hygiea
Predicate: epoch
Object: 2015-06-27

Triple: ['__subject__ 10 Hygiea __predicate__ escapeVelocity __object__ 0.21 (kilometrePerSeconds)']
Text: 10 Hygiea has an escape velocity of 0.21 kilometres per second.
Subject: 10 Hygiea
Predicate: escapeVelocity
Object: 0.21 (kilometrePerSeconds)

Triple: ['__subject__ 10 Hygiea __predicate__ escapeVelocity __object__ 0.21 (kilometrePerSeconds)']
Text: 10 Hygiea has an escape velocity of 0.21 km per secs.
Subject: 10 Hygiea
Predicate: escapeVelocity
Object: 0.21 (kilometrePerSeconds)

Triple: ['__subject__ 10 Hygiea __predicate__ escapeVelocity __object__ 0.21 (kilometrePerSeconds)']
Text: The escape velocity of 10 Hygiea is 0.21 km per sec.
Subject: 10 Hygiea
Predicate: escapeVelocity
Object: 0.21 (kilometrePerSeconds)

Triple: ['__subject__ 10 Hygiea __predicate__ formerName __object__ A900 GA']
Text: The former name of 10 Hygiea was A900 GA.
Subject: 10 Hygiea
Predicate: formerName
Object: A900 GA

Triple: ['__subject__ 10 Hygiea __predicate__ formerName __object__ A900 GA']
Text: 10 Hygiea was formerly known as "A900 GA".
Subject: 10 Hygiea
Predicate: formerName
Object: A900 GA

Triple: ['__subject__ 10 Hygiea __predicate__ formerName __object__ A900 GA']
Text: A900 GA was the former name of 10 Hygiea.
Subject: 10 Hygiea
Predicate: formerName
Object: A900 GA

Triple: ['__subject__ 10 Hygiea __predicate__ periapsis __object__ 416136000000.0']
Text: The periapsis measurement of 10 Hygiea is 416136000000.0.
Subject: 10 Hygiea
Predicate: periapsis
Object: 416136000000.0

Triple: ['__subject__ 10 Hygiea __predicate__ periapsis __object__ 416136000000.0']
Text: 10 Hygiea has a periapsis of 416136000000.0.
Subject: 10 Hygiea
Predicate: periapsis
Object: 416136000000.0

Triple: ['__subject__ 10 Hygiea __predicate__ rotationPeriod __object__ 198803.0']
Text: 10 Hygiea has a rotation period of 198803.0.
Subject: 10 Hygiea
Predicate: rotationPeriod
Object: 198803.0

Triple: ['__subject__ 10 Hygiea __predicate__ rotationPeriod __object__ 198803.0']
Text: The rotation period of 10 Hygiea is 198803.0.
Subject: 10 Hygiea
Predicate: rotationPeriod
Object: 198803.0

Triple: ['__subject__ 10 Hygiea __predicate__ surfaceArea __object__ 837080.744 (squareKilometres)']
Text: 10 Hygiea has a surface area of 837080.744 square kilometres.
Subject: 10 Hygiea
Predicate: surfaceArea
Object: 837080.744 (squareKilometres)

Triple: ['__subject__ 10 Hygiea __predicate__ surfaceArea __object__ 837080.744 (squareKilometres)']
Text: The celestial body known as 10 Hygiea has a surface area of 837080.744 square km.
Subject: 10 Hygiea
Predicate: surfaceArea
Object: 837080.744 (squareKilometres)

Triple: ['__subject__ 10 Hygiea __predicate__ temperature __object__ 164.0 (kelvins)']
Text: 10 Hygiea has a temperature of 164.0 kelvins.
Subject: 10 Hygiea
Predicate: temperature
Object: 164.0 (kelvins)

Triple: ['__subject__ 10 Hygiea __predicate__ temperature __object__ 164.0 (kelvins)']
Text: The temperature of 10 Hygiea is 164.0 kelvins.
Subject: 10 Hygiea
Predicate: temperature
Object: 164.0 (kelvins)

Triple: ['__subject__ 10 Hygiea __predicate__ temperature __object__ 164.0 (kelvins)']
Text: 10 Hygiea has a temperature of 164 Kelvins.
Subject: 10 Hygiea
Predicate: temperature
Object: 164.0 (kelvins)

Triple: ['__subject__ 1101 Clematis __predicate__ apoapsis __object__ 520906000.0 (kilometres)']
Text: 1101 Clematis has an apoapsis of 520906000.0 kilometres.
Subject: 1101 Clematis
Predicate: apoapsis
Object: 520906000.0 (kilometres)

Triple: ['__subject__ 1101 Clematis __predicate__ apoapsis __object__ 520906000.0 (kilometres)']
Text: The apoapsis for 1101 Clematis is 520906000.0 (kilometres).
Subject: 1101 Clematis
Predicate: apoapsis
Object: 520906000.0 (kilometres)

Triple: ['__subject__ 1101 Clematis __predicate__ apoapsis __object__ 520906000.0 (kilometres)']
Text: 1101 Clematis has an apoapsis of 520906000.0 Kilometers.
Subject: 1101 Clematis
Predicate: apoapsis
Object: 520906000.0 (kilometres)

Triple: ['__subject__ 1101 Clematis __predicate__ averageSpeed __object__ 16.54 (kilometrePerSeconds)']
Text: 1101 Clematis has the average speed of 16.54 km/s.
Subject: 1101 Clematis
Predicate: averageSpeed
Object: 16.54 (kilometrePerSeconds)

Triple: ['__subject__ 1101 Clematis __predicate__ averageSpeed __object__ 16.54 (kilometrePerSeconds)']
Text: The celestial body known as 1101 Clematis has an average speed of 16.54 k.p.s.
Subject: 1101 Clematis
Predicate: averageSpeed
Object: 16.54 (kilometrePerSeconds)

Triple: ['__subject__ 1101 Clematis __predicate__ averageSpeed __object__ 16.54 (kilometrePerSeconds)']
Text: The minor planet called 1101 Clematis has an average speed of 16.54 kilometres per second.
Subject: 1101 Clematis
Predicate: averageSpeed
Object: 16.54 (kilometrePerSeconds)

Triple: ['__subject__ 1101 Clematis __predicate__ epoch __object__ 2006-12-31']
Text: 1101 Clematis has an epoch date of December 31st 2006.
Subject: 1101 Clematis
Predicate: epoch
Object: 2006-12-31

Triple: ['__subject__ 1101 Clematis __predicate__ epoch __object__ 2006-12-31']
Text: The epoch of 1101 Clematis is 31 December 2006.
Subject: 1101 Clematis
Predicate: epoch
Object: 2006-12-31

Triple: ['__subject__ 1101 Clematis __predicate__ epoch __object__ 2006-12-31']
Text: The epoch of 1101 Clematis is on the 31st of July 2016.
Subject: 1101 Clematis
Predicate: epoch
Object: 2006-12-31

Triple: ['__subject__ 1101 Clematis __predicate__ escapeVelocity __object__ 0.02 (kilometrePerSeconds)']
Text: The escape velocity of 1101 Clematis is 0.02 km/sec.
Subject: 1101 Clematis
Predicate: escapeVelocity
Object: 0.02 (kilometrePerSeconds)

Triple: ['__subject__ 1101 Clematis __predicate__ escapeVelocity __object__ 0.02 (kilometrePerSeconds)']
Text: 1101 Clematis has an escape velocity of 0.02 kilometres per second.
Subject: 1101 Clematis
Predicate: escapeVelocity
Object: 0.02 (kilometrePerSeconds)

Triple: ['__subject__ 1101 Clematis __predicate__ escapeVelocity __object__ 0.02 (kilometrePerSeconds)']
Text: The celestial body known as 1101 Clematis has an escape velocity of 0.02 k.p.s.
Subject: 1101 Clematis
Predicate: escapeVelocity
Object: 0.02 (kilometrePerSeconds)

Triple: ['__subject__ 1101 Clematis __predicate__ formerName __object__ 1928 SJ']
Text: 1928 SJ was the former name of 1101 Clematis.
Subject: 1101 Clematis
Predicate: formerName
Object: 1928 SJ

Triple: ['__subject__ 1101 Clematis __predicate__ formerName __object__ 1928 SJ']
Text: "1928 SJ" is the former name of 1101 Clematis.
Subject: 1101 Clematis
Predicate: formerName
Object: 1928 SJ

Triple: ['__subject__ 1101 Clematis __predicate__ formerName __object__ 1928 SJ']
Text: The former name of 1101 Clematis is "1928 SJ".
Subject: 1101 Clematis
Predicate: formerName
Object: 1928 SJ

Triple: ['__subject__ 1101 Clematis __predicate__ mass __object__ 5.7 (kilograms)']
Text: 1101 Clematis has a mass of 5.7 kgs.
Subject: 1101 Clematis
Predicate: mass
Object: 5.7 (kilograms)

Triple: ['__subject__ 1101 Clematis __predicate__ mass __object__ 5.7 (kilograms)']
Text: 1101 Clematis has a mass of 5.7 kilograms.
Subject: 1101 Clematis
Predicate: mass
Object: 5.7 (kilograms)

Triple: ['__subject__ 1101 Clematis __predicate__ orbitalPeriod __object__ 183309000.0']
Text: 1101 Clematis has an orbital period of 183309000.0.
Subject: 1101 Clematis
Predicate: orbitalPeriod
Object: 183309000.0

Triple: ['__subject__ 1101 Clematis __predicate__ orbitalPeriod __object__ 183309000.0']
Text: The orbital period for 1101 Clematis is 183309000.0.
Subject: 1101 Clematis
Predicate: orbitalPeriod
Object: 183309000.0

Triple: ['__subject__ 1101 Clematis __predicate__ temperature __object__ 155.0 (kelvins)']
Text: 1101 Clematis has a temperature of 155 kelvins.
Subject: 1101 Clematis
Predicate: temperature
Object: 155.0 (kelvins)

Triple: ['__subject__ 1101 Clematis __predicate__ temperature __object__ 155.0 (kelvins)']
Text: 1101 Clematis has a temperature of 155.0 kelvins.
Subject: 1101 Clematis
Predicate: temperature
Object: 155.0 (kelvins)

Triple: ['__subject__ 1101 Clematis __predicate__ temperature __object__ 155.0 (kelvins)']
Text: The celestial body known as 1101 Clematis has a temperature of 155 kelvins.
Subject: 1101 Clematis
Predicate: temperature
Object: 155.0 (kelvins)

Triple: ['__subject__ 110 Lydia __predicate__ apoapsis __object__ 440756000.0 (kilometres)']
Text: 110 Lydia has an apoapsis of 440756000.0 kilometres.
Subject: 110 Lydia
Predicate: apoapsis
Object: 440756000.0 (kilometres)

Triple: ['__subject__ 110 Lydia __predicate__ apoapsis __object__ 440756000.0 (kilometres)']
Text: The apoapsis for 110 Lydia is 440756000.0 (kilometres).
Subject: 110 Lydia
Predicate: apoapsis
Object: 440756000.0 (kilometres)

Triple: ['__subject__ 110 Lydia __predicate__ averageSpeed __object__ 17.99 (kilometrePerSeconds)']
Text: 110 Lydia travels at an average speed of 17.99 kilometres per second.
Subject: 110 Lydia
Predicate: averageSpeed
Object: 17.99 (kilometrePerSeconds)

Triple: ['__subject__ 110 Lydia __predicate__ averageSpeed __object__ 17.99 (kilometrePerSeconds)']
Text: The average speed of 110 Lydia is 17.99 km/sec.
Subject: 110 Lydia
Predicate: averageSpeed
Object: 17.99 (kilometrePerSeconds)

Triple: ['__subject__ 110 Lydia __predicate__ averageSpeed __object__ 17.99 (kilometrePerSeconds)']
Text: 110 Lydia travels at an average speed of 17.99 kmps.
Subject: 110 Lydia
Predicate: averageSpeed
Object: 17.99 (kilometrePerSeconds)

Triple: ['__subject__ 110 Lydia __predicate__ discoverer __object__ Alphonse Borrelly']
Text: The celestial body known as 110 Lydia was discovered by Alphonse Borrelly.
Subject: 110 Lydia
Predicate: discoverer
Object: Alphonse Borrelly

Triple: ['__subject__ 110 Lydia __predicate__ discoverer __object__ Alphonse Borrelly']
Text: Alphonse Borrelly was the discoverer of 110 Lydia.
Subject: 110 Lydia
Predicate: discoverer
Object: Alphonse Borrelly

Triple: ['__subject__ 110 Lydia __predicate__ escapeVelocity __object__ 0.0455 (kilometrePerSeconds)']
Text: 110 Lydia has an escape velocity of 0.0455 kilometres per second.
Subject: 110 Lydia
Predicate: escapeVelocity
Object: 0.0455 (kilometrePerSeconds)

Triple: ['__subject__ 110 Lydia __predicate__ escapeVelocity __object__ 0.0455 (kilometrePerSeconds)']
Text: 110 Lydia has an escape velocity of 0.0455 km/s.
Subject: 110 Lydia
Predicate: escapeVelocity
Object: 0.0455 (kilometrePerSeconds)

Triple: ['__subject__ 110 Lydia __predicate__ mass __object__ 6.7 (kilograms)']
Text: 110 Lydia has a mass of 6.7 kilograms.
Subject: 110 Lydia
Predicate: mass
Object: 6.7 (kilograms)

Triple: ['__subject__ 110 Lydia __predicate__ mass __object__ 6.7 (kilograms)']
Text: The mass of 110 Lydia is 6.7 kg.
Subject: 110 Lydia
Predicate: mass
Object: 6.7 (kilograms)

Triple: ['__subject__ 110 Lydia __predicate__ orbitalPeriod __object__ 142603000.0']
Text: The orbital period for 110 Lydia is 142603000.0.
Subject: 110 Lydia
Predicate: orbitalPeriod
Object: 142603000.0

Triple: ['__subject__ 110 Lydia __predicate__ orbitalPeriod __object__ 142603000.0']
Text: 110 Lydia has an orbital period of 142603000.0.
Subject: 110 Lydia
Predicate: orbitalPeriod
Object: 142603000.0

Triple: ['__subject__ 110 Lydia __predicate__ orbitalPeriod __object__ 142603000.0']
Text: The celestial body known as 110 Lydia has an orbital period of 142603000.
Subject: 110 Lydia
Predicate: orbitalPeriod
Object: 142603000.0

Triple: ['__subject__ 110 Lydia __predicate__ rotationPeriod __object__ 39332.9']
Text: 110 Lydia has a rotation period of 39332.9.
Subject: 110 Lydia
Predicate: rotationPeriod
Object: 39332.9

Triple: ['__subject__ 110 Lydia __predicate__ rotationPeriod __object__ 39332.9']
Text: 110 Lydia has a rotational period of 39332.9.
Subject: 110 Lydia
Predicate: rotationPeriod
Object: 39332.9

Triple: ['__subject__ 110 Lydia __predicate__ temperature __object__ 168.0 (kelvins)']
Text: 110 Lydia has a temperature of 168 kelvins.
Subject: 110 Lydia
Predicate: temperature
Object: 168.0 (kelvins)

Triple: ['__subject__ 110 Lydia __predicate__ temperature __object__ 168.0 (kelvins)']
Text: 110 Lydia has a temperature of 168.0 kelvins.
Subject: 110 Lydia
Predicate: temperature
Object: 168.0 (kelvins)

Triple: ['__subject__ 110 Lydia __predicate__ temperature __object__ 168.0 (kelvins)']
Text: The asteroid 110 Lydia has a temperature of 168.0 kelvins.
Subject: 110 Lydia
Predicate: temperature
Object: 168.0 (kelvins)

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)']
Text: The apoapsis for 11264 Claudiomaccone is 475426000.0 (kilometres).
Subject: 11264 Claudiomaccone
Predicate: apoapsis
Object: 475426000.0 (kilometres)

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)']
Text: 11264 Claudiomaccone has an apoapsis of 475426000.0 kilometres.
Subject: 11264 Claudiomaccone
Predicate: apoapsis
Object: 475426000.0 (kilometres)

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ apoapsis __object__ 475426000.0 (kilometres)']
Text: 11264 Claudiomaccone has an apoapsis of 475426000 kilometres.
Subject: 11264 Claudiomaccone
Predicate: apoapsis
Object: 475426000.0 (kilometres)

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ averageSpeed __object__ 18.29 (kilometrePerSeconds)']
Text: 11264 Claudiomaccone has an average speed of 18.29 kilometres per second.
Subject: 11264 Claudiomaccone
Predicate: averageSpeed
Object: 18.29 (kilometrePerSeconds)

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ averageSpeed __object__ 18.29 (kilometrePerSeconds)']
Text: The celestial body known as 11264 Claudiomaccone has an average speed of 18.29km/s.
Subject: 11264 Claudiomaccone
Predicate: averageSpeed
Object: 18.29 (kilometrePerSeconds)

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ averageSpeed __object__ 18.29 (kilometrePerSeconds)']
Text: The asteroid called 11264 Claudiomaccone has an average speed of 18.29 kilometres per second.
Subject: 11264 Claudiomaccone
Predicate: averageSpeed
Object: 18.29 (kilometrePerSeconds)

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ discoverer __object__ Nikolai Chernykh']
Text: 11264 Claudiomaccone was discovered by Nikolai Chernykh.
Subject: 11264 Claudiomaccone
Predicate: discoverer
Object: Nikolai Chernykh

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ discoverer __object__ Nikolai Chernykh']
Text: Nikolai Chernykh was the discoverer of 11264 Claudiomaccone.
Subject: 11264 Claudiomaccone
Predicate: discoverer
Object: Nikolai Chernykh

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ discoverer __object__ Nikolai Chernykh']
Text: Nikolai Chernykh discovered 11264 Claudiomaccone.
Subject: 11264 Claudiomaccone
Predicate: discoverer
Object: Nikolai Chernykh

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ epoch __object__ 2005-11-26']
Text: 11264 Claudiomaccone has the epoch date of 26 November 2005.
Subject: 11264 Claudiomaccone
Predicate: epoch
Object: 2005-11-26

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ epoch __object__ 2005-11-26']
Text: 11264 Claudiomaccone has an epoch date of November 26th 2005.
Subject: 11264 Claudiomaccone
Predicate: epoch
Object: 2005-11-26

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ orbitalPeriod __object__ 1513.722 (days)']
Text: 11264 Claudiomaccone has an orbital period of 1513.722 days.
Subject: 11264 Claudiomaccone
Predicate: orbitalPeriod
Object: 1513.722 (days)

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ orbitalPeriod __object__ 1513.722 (days)']
Text: The orbital period for 11264 Claudiomaccone is 1513.722 days.
Subject: 11264 Claudiomaccone
Predicate: orbitalPeriod
Object: 1513.722 (days)

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ orbitalPeriod __object__ 1513.722 (days)']
Text: 11264 Claudiomaccone's orbital period is 1513.722 days.
Subject: 11264 Claudiomaccone
Predicate: orbitalPeriod
Object: 1513.722 (days)

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ periapsis __object__ 296521000.0 (kilometres)']
Text: 11264 Claudiomaccone has a periapsis of 296521000.0 (kilometres).
Subject: 11264 Claudiomaccone
Predicate: periapsis
Object: 296521000.0 (kilometres)

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ periapsis __object__ 296521000.0 (kilometres)']
Text: The periapsis of 11264 Claudiomaccone is at 296521000.0 kilometres.
Subject: 11264 Claudiomaccone
Predicate: periapsis
Object: 296521000.0 (kilometres)

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ periapsis __object__ 296521000.0 (kilometres)']
Text: 11264 Claudiomaccone has a periapsis of 296521000.0 kilometres.
Subject: 11264 Claudiomaccone
Predicate: periapsis
Object: 296521000.0 (kilometres)

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ rotationPeriod __object__ 11473.9']
Text: The rotation period for 11264 Claudiomaccone is 11473.9.
Subject: 11264 Claudiomaccone
Predicate: rotationPeriod
Object: 11473.9

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ rotationPeriod __object__ 11473.9']
Text: The celestial body known as 11264 Claudiomaccone has a rotation period of 11473.9.
Subject: 11264 Claudiomaccone
Predicate: rotationPeriod
Object: 11473.9

Triple: ['__subject__ 11264 Claudiomaccone __predicate__ rotationPeriod __object__ 11473.9']
Text: 11264 Claudiomaccone has a rotation period of 11473.9.
Subject: 11264 Claudiomaccone
Predicate: rotationPeriod
Object: 11473.9

Triple: ['__subject__ James Craig Watson __predicate__ deathCause __object__ Peritonitis']
Text: James Craig Watson died of peritonitis.
Subject: James Craig Watson
Predicate: deathCause
Object: Peritonitis

Triple: ['__subject__ James Craig Watson __predicate__ deathCause __object__ Peritonitis']
Text: James Craig Watson died from peritonitis.
Subject: James Craig Watson
Predicate: deathCause
Object: Peritonitis

Triple: ['__subject__ James Craig Watson __predicate__ deathPlace __object__ Madison, Wisconsin']
Text: James Craig Watson died in Madison, Wisconsin.
Subject: James Craig Watson
Predicate: deathPlace
Object: Madison, Wisconsin

Triple: ['__subject__ James Craig Watson __predicate__ nationality __object__ Canada']
Text: James Craig Watson is a Canadian national.
Subject: James Craig Watson
Predicate: nationality
Object: Canada

Triple: ['__subject__ James Craig Watson __predicate__ nationality __object__ Canada']
Text: The nationality of James Craig Watson is canadian.
Subject: James Craig Watson
Predicate: nationality
Object: Canada

Triple: ['__subject__ James Craig Watson __predicate__ stateOfOrigin __object__ Canada']
Text: James Craig Watson has his origins in Canada.
Subject: James Craig Watson
Predicate: stateOfOrigin
Object: Canada

Triple: ['__subject__ James Craig Watson __predicate__ stateOfOrigin __object__ Canada']
Text: James Craig Watson originates from Canada.
Subject: James Craig Watson
Predicate: stateOfOrigin
Object: Canada

Triple: ['__subject__ N. R. Pogson __predicate__ deathPlace __object__ Chennai']
Text: N R Pogson died in Chennai.
Subject: N. R. Pogson
Predicate: deathPlace
Object: Chennai

Triple: ['__subject__ N. R. Pogson __predicate__ deathPlace __object__ Chennai']
Text: N. R. Pogson died in Chennai.
Subject: N. R. Pogson
Predicate: deathPlace
Object: Chennai

Triple: ['__subject__ Walter Baade __predicate__ almaMater __object__ University of Göttingen']
Text: Walter Baade's alma mater was the University of Gottingen.
Subject: Walter Baade
Predicate: almaMater
Object: University of Göttingen

Triple: ['__subject__ Walter Baade __predicate__ almaMater __object__ University of Göttingen']
Text: Walter baade graduated from University of Gottingen.
Subject: Walter Baade
Predicate: almaMater
Object: University of Göttingen

Triple: ['__subject__ Walter Baade __predicate__ almaMater __object__ University of Göttingen']
Text: The university of Gottingen was where Walter Baade studied.
Subject: Walter Baade
Predicate: almaMater
Object: University of Göttingen

Triple: ['__subject__ Walter Baade __predicate__ birthPlace __object__ German Empire']
Text: Walter Baade was born in the German Empire.
Subject: Walter Baade
Predicate: birthPlace
Object: German Empire

Triple: ['__subject__ Walter Baade __predicate__ birthPlace __object__ German Empire']
Text: The German empire was the birthplace of Walter Baade.
Subject: Walter Baade
Predicate: birthPlace
Object: German Empire

Triple: ['__subject__ Walter Baade __predicate__ birthPlace __object__ Preußisch Oldendorf']
Text: Preußisch Oldendorf was the birthplace of Walter Baade.
Subject: Walter Baade
Predicate: birthPlace
Object: Preußisch Oldendorf

Triple: ['__subject__ Walter Baade __predicate__ birthPlace __object__ Preußisch Oldendorf']
Text: Walter Baade was born in Preußisch Oldendorf.
Subject: Walter Baade
Predicate: birthPlace
Object: Preußisch Oldendorf

Triple: ['__subject__ Walter Baade __predicate__ birthPlace __object__ Preußisch Oldendorf']
Text: Walter Baade was born in Preussisch Oldendorf.
Subject: Walter Baade
Predicate: birthPlace
Object: Preußisch Oldendorf

Triple: ['__subject__ Walter Baade __predicate__ deathPlace __object__ Göttingen']
Text: Walter Baade died in Gottingen.
Subject: Walter Baade
Predicate: deathPlace
Object: Göttingen

Triple: ['__subject__ Walter Baade __predicate__ deathPlace __object__ Göttingen']
Text: Walter Baade died in Göttingen.
Subject: Walter Baade
Predicate: deathPlace
Object: Göttingen

Triple: ['__subject__ Walter Baade __predicate__ deathPlace __object__ West Germany']
Text: Walter Baade died in West Germany.
Subject: Walter Baade
Predicate: deathPlace
Object: West Germany

Triple: ['__subject__ Walter Baade __predicate__ doctoralStudent __object__ Allan Sandage']
Text: Allan Sandage was a doctoral student of Walter Baade.
Subject: Walter Baade
Predicate: doctoralStudent
Object: Allan Sandage

Triple: ['__subject__ Walter Baade __predicate__ doctoralStudent __object__ Halton Arp']
Text: Halton Arp was a doctoral student of Walter Baade.
Subject: Walter Baade
Predicate: doctoralStudent
Object: Halton Arp

Triple: ['__subject__ Walter Baade __predicate__ doctoralStudent __object__ Halton Arp']
Text: Walter Baade's doctoral student was Halton Arp.
Subject: Walter Baade
Predicate: doctoralStudent
Object: Halton Arp

Triple: ['__subject__ Walter Baade __predicate__ nationality __object__ Germany']
Text: Walter Baade is a German national.
Subject: Walter Baade
Predicate: nationality
Object: Germany

Triple: ['__subject__ Walter Baade __predicate__ nationality __object__ Germany']
Text: Walter Baade was a German national.
Subject: Walter Baade
Predicate: nationality
Object: Germany

Triple: ['__subject__ Abilene, Texas __predicate__ areaOfWater __object__ 14.2 (square kilometres)']
Text: There are 14.2 square kilometers of water in Abilene, Texas.
Subject: Abilene, Texas
Predicate: areaOfWater
Object: 14.2 (square kilometres)

Triple: ['__subject__ Abilene, Texas __predicate__ areaOfWater __object__ 14.2 (square kilometres)']
Text: Abilene, Texas has a water area of 14.2 square kilometres.
Subject: Abilene, Texas
Predicate: areaOfWater
Object: 14.2 (square kilometres)

Triple: ['__subject__ Abilene, Texas __predicate__ areaOfWater __object__ 14.2 (square kilometres)']
Text: Abilene, Texas has an area of water that is 14.2 square kilometres.
Subject: Abilene, Texas
Predicate: areaOfWater
Object: 14.2 (square kilometres)

Triple: ['__subject__ Abilene, Texas __predicate__ areaTotal __object__ 286.5 (square kilometres)']
Text: Abilene (Texas) has a total area of 286.5 square kilometres.
Subject: Abilene, Texas
Predicate: areaTotal
Object: 286.5 (square kilometres)

Triple: ['__subject__ Abilene, Texas __predicate__ areaTotal __object__ 286.5 (square kilometres)']
Text: Abilene in Texas has a total area of 286.5 SqK.
Subject: Abilene, Texas
Predicate: areaTotal
Object: 286.5 (square kilometres)

Triple: ['__subject__ Abilene, Texas __predicate__ areaTotal __object__ 286.5 (square kilometres)']
Text: Abilene, Texas has a total area of 286.5 sq km.
Subject: Abilene, Texas
Predicate: areaTotal
Object: 286.5 (square kilometres)

Triple: ['__subject__ Abilene, Texas __predicate__ country __object__ United States']
Text: Abilene is in Texas, in the United States.
Subject: Abilene, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Abilene, Texas __predicate__ country __object__ United States']
Text: Abilene, Texas is located in the United States.
Subject: Abilene, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Abilene, Texas __predicate__ country __object__ United States']
Text: Abilene, Texas is located within the United States.
Subject: Abilene, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Abilene, Texas __predicate__ elevationAboveTheSeaLevel __object__ 524.0']
Text: Abilene Texas is 524m above sea level.
Subject: Abilene, Texas
Predicate: elevationAboveTheSeaLevel
Object: 524.0

Triple: ['__subject__ Abilene, Texas __predicate__ elevationAboveTheSeaLevel __object__ 524.0']
Text: Abilene, Texas is 524.0 above sea level.
Subject: Abilene, Texas
Predicate: elevationAboveTheSeaLevel
Object: 524.0

Triple: ['__subject__ Abilene, Texas __predicate__ elevationAboveTheSeaLevel __object__ 524.0']
Text: Abilene, Texas is situated at 524.0 above sea level.
Subject: Abilene, Texas
Predicate: elevationAboveTheSeaLevel
Object: 524.0

Triple: ['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Jones County, Texas']
Text: Abilene is part of Jones County in Texas.
Subject: Abilene, Texas
Predicate: isPartOf
Object: Jones County, Texas

Triple: ['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Jones County, Texas']
Text: Abilene is part of Jones County, Texas.
Subject: Abilene, Texas
Predicate: isPartOf
Object: Jones County, Texas

Triple: ['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Taylor County, Texas']
Text: Abilene is part of Taylor County in Texas.
Subject: Abilene, Texas
Predicate: isPartOf
Object: Taylor County, Texas

Triple: ['__subject__ Abilene, Texas __predicate__ isPartOf __object__ Taylor County, Texas']
Text: Abilene, Texas is located in Taylor County, Texas.
Subject: Abilene, Texas
Predicate: isPartOf
Object: Taylor County, Texas

Triple: ['__subject__ Abilene, Texas __predicate__ populationDensity __object__ 429.9 (inhabitants per square kilometre)']
Text: The total population density of Abilene, Texas is 429.9 inhabitants per sq km.
Subject: Abilene, Texas
Predicate: populationDensity
Object: 429.9 (inhabitants per square kilometre)

Triple: ['__subject__ Abilene, Texas __predicate__ populationDensity __object__ 429.9 (inhabitants per square kilometre)']
Text: Abilene, Texas has a population density of 429.9 inhabitants per square kilometre.
Subject: Abilene, Texas
Predicate: populationDensity
Object: 429.9 (inhabitants per square kilometre)

Triple: ['__subject__ Abilene, Texas __predicate__ populationDensity __object__ 429.9 (inhabitants per square kilometre)']
Text: Abilene, Texas, has a population density of 429.9 (inhabitants per square kilometre).
Subject: Abilene, Texas
Predicate: populationDensity
Object: 429.9 (inhabitants per square kilometre)

Triple: ['__subject__ Adams Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Adams Township is in Madison County, in Indiana, in the United States.
Subject: Adams Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Adams Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Adams Township, Madison County, Indiana is in the United States.
Subject: Adams Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Adams Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Adams Township, Madison County, Indiana is located within the United States.
Subject: Adams Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Akron, Ohio __predicate__ areaCode __object__ 234, 330']
Text: The area codes in Akron, Ohio are 234 and 330.
Subject: Akron, Ohio
Predicate: areaCode
Object: 234, 330

Triple: ['__subject__ Akron, Ohio __predicate__ areaOfWater __object__ 0.88 (square kilometres)']
Text: Akron in Ohio has .88 square kilometres of water.
Subject: Akron, Ohio
Predicate: areaOfWater
Object: 0.88 (square kilometres)

Triple: ['__subject__ Akron, Ohio __predicate__ areaOfWater __object__ 0.88 (square kilometres)']
Text: The area of water with Akron, Ohio, is .88 sq. km.
Subject: Akron, Ohio
Predicate: areaOfWater
Object: 0.88 (square kilometres)

Triple: ['__subject__ Akron, Ohio __predicate__ areaOfWater __object__ 0.88 (square kilometres)']
Text: There is 0.88 square km of water in Akron, Ohio.
Subject: Akron, Ohio
Predicate: areaOfWater
Object: 0.88 (square kilometres)

Triple: ['__subject__ Akron, Ohio __predicate__ areaTotal __object__ 161.54 (square kilometres)']
Text: Akron, Ohio has a total area of 161.54 square kilometres.
Subject: Akron, Ohio
Predicate: areaTotal
Object: 161.54 (square kilometres)

Triple: ['__subject__ Akron, Ohio __predicate__ areaTotal __object__ 161.54 (square kilometres)']
Text: The total area of Akron Ohio is 161.54 Sq Km.
Subject: Akron, Ohio
Predicate: areaTotal
Object: 161.54 (square kilometres)

Triple: ['__subject__ Akron, Ohio __predicate__ areaTotal __object__ 161.54 (square kilometres)']
Text: The total area of Akron, Ohio is 161.54 square kilometres.
Subject: Akron, Ohio
Predicate: areaTotal
Object: 161.54 (square kilometres)

Triple: ['__subject__ Akron, Ohio __predicate__ country __object__ United States']
Text: Akron, Ohio is located in the U.S.
Subject: Akron, Ohio
Predicate: country
Object: United States

Triple: ['__subject__ Akron, Ohio __predicate__ country __object__ United States']
Text: Akron, Ohio is located within the United States.
Subject: Akron, Ohio
Predicate: country
Object: United States

Triple: ['__subject__ Akron, Ohio __predicate__ country __object__ United States']
Text: The country of Akron, Ohio, is United States.
Subject: Akron, Ohio
Predicate: country
Object: United States

Triple: ['__subject__ Akron, Ohio __predicate__ elevationAboveTheSeaLevel __object__ 306.0']
Text: Akron, Ohio is at a height of 306.0 above sea level.
Subject: Akron, Ohio
Predicate: elevationAboveTheSeaLevel
Object: 306.0

Triple: ['__subject__ Akron, Ohio __predicate__ isPartOf __object__ Summit County, Ohio']
Text: Akron is in Summit County, Ohio.
Subject: Akron, Ohio
Predicate: isPartOf
Object: Summit County, Ohio

Triple: ['__subject__ Akron, Ohio __predicate__ isPartOf __object__ Summit County, Ohio']
Text: Akron is a part of Summit County, Ohio.
Subject: Akron, Ohio
Predicate: isPartOf
Object: Summit County, Ohio

Triple: ['__subject__ Akron, Ohio __predicate__ isPartOf __object__ Summit County, Ohio']
Text: Akron is located within Summit County, Ohio.
Subject: Akron, Ohio
Predicate: isPartOf
Object: Summit County, Ohio

Triple: ['__subject__ Akron, Ohio __predicate__ isPartOf __object__ United States']
Text: Akron Ohio is part of the U.S.
Subject: Akron, Ohio
Predicate: isPartOf
Object: United States

Triple: ['__subject__ Akron, Ohio __predicate__ isPartOf __object__ United States']
Text: Akron, Ohio is part of the United States.
Subject: Akron, Ohio
Predicate: isPartOf
Object: United States

Triple: ['__subject__ Akron, Ohio __predicate__ leaderTitle __object__ Mayor']
Text: Mayor is the title of the leader of Akron, Ohio.
Subject: Akron, Ohio
Predicate: leaderTitle
Object: Mayor

Triple: ['__subject__ Akron, Ohio __predicate__ leaderTitle __object__ Mayor']
Text: The leader of Akron, Ohio is the Mayor.
Subject: Akron, Ohio
Predicate: leaderTitle
Object: Mayor

Triple: ['__subject__ Akron, Ohio __predicate__ leaderTitle __object__ Mayor']
Text: The leader in Akron, Ohio is the Mayor.
Subject: Akron, Ohio
Predicate: leaderTitle
Object: Mayor

Triple: ['__subject__ Akron, Ohio __predicate__ populationDensity __object__ 1239.3 (inhabitants per square kilometre)']
Text: The population density, of Akron (Ohio), is 1239.3 inhabitants per square kilometre.
Subject: Akron, Ohio
Predicate: populationDensity
Object: 1239.3 (inhabitants per square kilometre)

Triple: ['__subject__ Akron, Ohio __predicate__ populationDensity __object__ 1239.3 (inhabitants per square kilometre)']
Text: The population density of Akron, Ohio is 1239.3 inhabitants per square km.
Subject: Akron, Ohio
Predicate: populationDensity
Object: 1239.3 (inhabitants per square kilometre)

Triple: ['__subject__ Alabama __predicate__ country __object__ United States']
Text: Alabama is in the United States.
Subject: Alabama
Predicate: country
Object: United States

Triple: ['__subject__ Alabama __predicate__ country __object__ United States']
Text: Alabama is located within the United States.
Subject: Alabama
Predicate: country
Object: United States

Triple: ['__subject__ Albany, Georgia __predicate__ areaTotal __object__ 144.7 (square kilometres)']
Text: The total area, of Albany (Georgia), is 144.7 square kilometres.
Subject: Albany, Georgia
Predicate: areaTotal
Object: 144.7 (square kilometres)

Triple: ['__subject__ Albany, Georgia __predicate__ areaTotal __object__ 144.7 (square kilometres)']
Text: Albany, Georgia has a total area of 144.7 SqKm.
Subject: Albany, Georgia
Predicate: areaTotal
Object: 144.7 (square kilometres)

Triple: ['__subject__ Albany, Georgia __predicate__ areaTotal __object__ 144.7 (square kilometres)']
Text: The total area of Albany, Georgia is 144.7 square kilometres.
Subject: Albany, Georgia
Predicate: areaTotal
Object: 144.7 (square kilometres)

Triple: ['__subject__ Albany, Georgia __predicate__ country __object__ United States']
Text: Albany, Georgia is in the United States.
Subject: Albany, Georgia
Predicate: country
Object: United States

Triple: ['__subject__ Albany, Georgia __predicate__ country __object__ United States']
Text: Albany is in Georgia in the United States.
Subject: Albany, Georgia
Predicate: country
Object: United States

Triple: ['__subject__ Albany, Georgia __predicate__ country __object__ United States']
Text: Albany, Georgia, is within the United States.
Subject: Albany, Georgia
Predicate: country
Object: United States

Triple: ['__subject__ Albany, Georgia __predicate__ elevationAboveTheSeaLevel __object__ 62.0']
Text: Albany, Georgia is located at 62.0 above sea level.
Subject: Albany, Georgia
Predicate: elevationAboveTheSeaLevel
Object: 62.0

Triple: ['__subject__ Albany, Georgia __predicate__ elevationAboveTheSeaLevel __object__ 62.0']
Text: The elevation above the sea level in Albany, Georgia, is 62.0.
Subject: Albany, Georgia
Predicate: elevationAboveTheSeaLevel
Object: 62.0

Triple: ['__subject__ Albany, Georgia __predicate__ isPartOf __object__ Dougherty County, Georgia']
Text: Albany is a city in Dougherty County, Georgia.
Subject: Albany, Georgia
Predicate: isPartOf
Object: Dougherty County, Georgia

Triple: ['__subject__ Albany, Georgia __predicate__ isPartOf __object__ Dougherty County, Georgia']
Text: Albany is part of Dougherty County in Georgia.
Subject: Albany, Georgia
Predicate: isPartOf
Object: Dougherty County, Georgia

Triple: ['__subject__ Albany, Georgia __predicate__ isPartOf __object__ Dougherty County, Georgia']
Text: Albany is located in Dougherty County, Georgia.
Subject: Albany, Georgia
Predicate: isPartOf
Object: Dougherty County, Georgia

Triple: ['__subject__ Albany, Georgia __predicate__ isPartOf __object__ Georgia (U.S. state)']
Text: Albany is part of the U.S. State of Georgia.
Subject: Albany, Georgia
Predicate: isPartOf
Object: Georgia (U.S. state)

Triple: ['__subject__ Albany, Georgia __predicate__ isPartOf __object__ Georgia (U.S. state)']
Text: Albany is located in the US state of Georgia.
Subject: Albany, Georgia
Predicate: isPartOf
Object: Georgia (U.S. state)

Triple: ['__subject__ Albany, Georgia __predicate__ isPartOf __object__ Georgia (U.S. state)']
Text: Albany is part of the state of Georgia.
Subject: Albany, Georgia
Predicate: isPartOf
Object: Georgia (U.S. state)

Triple: ['__subject__ Albany, Georgia __predicate__ isPartOf __object__ United States']
Text: Albany, Georgia is in the United States.
Subject: Albany, Georgia
Predicate: isPartOf
Object: United States

Triple: ['__subject__ Albany, Georgia __predicate__ isPartOf __object__ United States']
Text: Albany is in Georgia which is a part of the United States.
Subject: Albany, Georgia
Predicate: isPartOf
Object: United States

Triple: ['__subject__ Albany, Georgia __predicate__ isPartOf __object__ United States']
Text: Albany, Georgia, is in the United States.
Subject: Albany, Georgia
Predicate: isPartOf
Object: United States

Triple: ['__subject__ Albany, Georgia __predicate__ populationDensity __object__ 535.0 (inhabitants per square kilometre)']
Text: Albany in Georgia, has a population density of 535.0 inhabitants per square kilometre.
Subject: Albany, Georgia
Predicate: populationDensity
Object: 535.0 (inhabitants per square kilometre)

Triple: ['__subject__ Albany, Georgia __predicate__ populationDensity __object__ 535.0 (inhabitants per square kilometre)']
Text: Albany in Georgia has a population density of 535 people per square kilometer.
Subject: Albany, Georgia
Predicate: populationDensity
Object: 535.0 (inhabitants per square kilometre)

Triple: ['__subject__ Albany, Georgia __predicate__ populationDensity __object__ 535.0 (inhabitants per square kilometre)']
Text: The population density of Albany, Georgia is 535.0 inhabitants per square kilometre.
Subject: Albany, Georgia
Predicate: populationDensity
Object: 535.0 (inhabitants per square kilometre)

Triple: ['__subject__ Albany, Oregon __predicate__ areaCode __object__ 541, 458']
Text: Albany, Oregon has area codes 541 and 458.
Subject: Albany, Oregon
Predicate: areaCode
Object: 541, 458

Triple: ['__subject__ Albany, Oregon __predicate__ areaCode __object__ 541, 458']
Text: The area codes for Albany, Oregon are 541 and 458.
Subject: Albany, Oregon
Predicate: areaCode
Object: 541, 458

Triple: ['__subject__ Albany, Oregon __predicate__ areaOfWater __object__ 0.54 (square kilometres)']
Text: There is .54 square kilometers of water in Albany, Oregon.
Subject: Albany, Oregon
Predicate: areaOfWater
Object: 0.54 (square kilometres)

Triple: ['__subject__ Albany, Oregon __predicate__ areaOfWater __object__ 0.54 (square kilometres)']
Text: Albany, Oregon has a water area of 0,54 square kilometres.
Subject: Albany, Oregon
Predicate: areaOfWater
Object: 0.54 (square kilometres)

Triple: ['__subject__ Albany, Oregon __predicate__ areaOfWater __object__ 0.54 (square kilometres)']
Text: The area of water in Albany, Oregon, is 0.54 (square kilometres).
Subject: Albany, Oregon
Predicate: areaOfWater
Object: 0.54 (square kilometres)

Triple: ['__subject__ Albany, Oregon __predicate__ elevationAboveTheSeaLevel __object__ 64.008']
Text: Albany, Oregon is 64,008 above sea level.
Subject: Albany, Oregon
Predicate: elevationAboveTheSeaLevel
Object: 64.008

Triple: ['__subject__ Albany, Oregon __predicate__ elevationAboveTheSeaLevel __object__ 64.008']
Text: Albany, Oregon is located at 64.008 above sea level.
Subject: Albany, Oregon
Predicate: elevationAboveTheSeaLevel
Object: 64.008

Triple: ['__subject__ Albany, Oregon __predicate__ isPartOf __object__ Benton County, Oregon']
Text: Albany is part of Benton County in Oregon.
Subject: Albany, Oregon
Predicate: isPartOf
Object: Benton County, Oregon

Triple: ['__subject__ Albany, Oregon __predicate__ isPartOf __object__ Benton County, Oregon']
Text: The city of Albany is part of Benton County, Oregon.
Subject: Albany, Oregon
Predicate: isPartOf
Object: Benton County, Oregon

Triple: ['__subject__ Albany, Oregon __predicate__ isPartOf __object__ Linn County, Oregon']
Text: Albany is a city in Linn County, Oregon.
Subject: Albany, Oregon
Predicate: isPartOf
Object: Linn County, Oregon

Triple: ['__subject__ Albany, Oregon __predicate__ isPartOf __object__ Linn County, Oregon']
Text: Albany, Oregon falls under Linn County Oregon.
Subject: Albany, Oregon
Predicate: isPartOf
Object: Linn County, Oregon

Triple: ['__subject__ Albany, Oregon __predicate__ isPartOf __object__ Linn County, Oregon']
Text: Albany is part of Linn County, Oregon.
Subject: Albany, Oregon
Predicate: isPartOf
Object: Linn County, Oregon

Triple: ['__subject__ Albany, Oregon __predicate__ isPartOf __object__ Oregon']
Text: Albany is a city in Oregon.
Subject: Albany, Oregon
Predicate: isPartOf
Object: Oregon

Triple: ['__subject__ Albany, Oregon __predicate__ isPartOf __object__ Oregon']
Text: Albany is part of Oregon.
Subject: Albany, Oregon
Predicate: isPartOf
Object: Oregon

Triple: ['__subject__ Albany, Oregon __predicate__ populationDensity __object__ 1104.1 (inhabitants per square kilometre)']
Text: The population density of Albany, in Oregon, is 1104.1 inhabitants per square kilometre.
Subject: Albany, Oregon
Predicate: populationDensity
Object: 1104.1 (inhabitants per square kilometre)

Triple: ['__subject__ Albany, Oregon __predicate__ populationDensity __object__ 1104.1 (inhabitants per square kilometre)']
Text: Albany is located in Oregon, where the population density is 1104.1 inhabitants per square kilometre.
Subject: Albany, Oregon
Predicate: populationDensity
Object: 1104.1 (inhabitants per square kilometre)

Triple: ['__subject__ Albany, Oregon __predicate__ populationDensity __object__ 1104.1 (inhabitants per square kilometre)']
Text: The population density for Albany, Oregon is 1104.1 inhabitants per sq km.
Subject: Albany, Oregon
Predicate: populationDensity
Object: 1104.1 (inhabitants per square kilometre)

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ areaCode __object__ 505, 575']
Text: Albuquerque, New Mexico has area codes 505 and 575.
Subject: Albuquerque, New Mexico
Predicate: areaCode
Object: 505, 575

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ areaCode __object__ 505, 575']
Text: The area codes in Albuquerque, New Mexico are 505 and 575.
Subject: Albuquerque, New Mexico
Predicate: areaCode
Object: 505, 575

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ areaOfLand __object__ 486.2 (square kilometres)']
Text: The land area, of Albuquerque (New Mexico), is 486.2 square kilometres.
Subject: Albuquerque, New Mexico
Predicate: areaOfLand
Object: 486.2 (square kilometres)

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ areaOfLand __object__ 486.2 (square kilometres)']
Text: Albuquerque, N.M. has an area of land of 486.2 square kilometers.
Subject: Albuquerque, New Mexico
Predicate: areaOfLand
Object: 486.2 (square kilometres)

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ areaTotal __object__ 490.9 (square kilometres)']
Text: Albuquerque, in New Mexico, has a total are of 490.9 square kilometres.
Subject: Albuquerque, New Mexico
Predicate: areaTotal
Object: 490.9 (square kilometres)

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ areaTotal __object__ 490.9 (square kilometres)']
Text: The total area of Albuquerque, New Mexico is 490.9 square kilometres.
Subject: Albuquerque, New Mexico
Predicate: areaTotal
Object: 490.9 (square kilometres)

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']
Text: Albuquerque is in New Mexico, in the United States.
Subject: Albuquerque, New Mexico
Predicate: country
Object: United States

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']
Text: Albuquerque, New Mexico is in the United States.
Subject: Albuquerque, New Mexico
Predicate: country
Object: United States

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ country __object__ United States']
Text: Albuquerque, New Mexico, is within the United States.
Subject: Albuquerque, New Mexico
Predicate: country
Object: United States

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ isPartOf __object__ Bernalillo County, New Mexico']
Text: Albuquerque, New Mexico is part of Bernalillo County, New Mexico.
Subject: Albuquerque, New Mexico
Predicate: isPartOf
Object: Bernalillo County, New Mexico

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ isPartOf __object__ Bernalillo County, New Mexico']
Text: Albuquerque is part of Bernalillo County, New Mexico.
Subject: Albuquerque, New Mexico
Predicate: isPartOf
Object: Bernalillo County, New Mexico

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ isPartOf __object__ Bernalillo County, New Mexico']
Text: Albuquerque, New Mexico, is part of Bernalillo County.
Subject: Albuquerque, New Mexico
Predicate: isPartOf
Object: Bernalillo County, New Mexico

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ isPartOf __object__ New Mexico']
Text: Albuquerque is in New Mexico.
Subject: Albuquerque, New Mexico
Predicate: isPartOf
Object: New Mexico

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ isPartOf __object__ New Mexico']
Text: Albuquerque is part of New Mexico.
Subject: Albuquerque, New Mexico
Predicate: isPartOf
Object: New Mexico

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ leader __object__ Richard J. Berry']
Text: The leader, of Albuquerque (New Mexico), is Richard J. Berry.
Subject: Albuquerque, New Mexico
Predicate: leader
Object: Richard J. Berry

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ leader __object__ Richard J. Berry']
Text: Richard J. Berry is the leader of Albuquerque, New Mexico.
Subject: Albuquerque, New Mexico
Predicate: leader
Object: Richard J. Berry

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ leader __object__ Richard J. Berry']
Text: The leader of Albuquerque in New Mexico is Richard J Berry.
Subject: Albuquerque, New Mexico
Predicate: leader
Object: Richard J. Berry

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ Mayor of Albuquerque']
Text: The leader of Albuquerque (New Mexico) is called the Mayor of Albuquerque.
Subject: Albuquerque, New Mexico
Predicate: leaderTitle
Object: Mayor of Albuquerque

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ Mayor of Albuquerque']
Text: The leader of Albuquerque, New Mexico has the title of Mayor of Albuquerque.
Subject: Albuquerque, New Mexico
Predicate: leaderTitle
Object: Mayor of Albuquerque

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ Mayor of Albuquerque']
Text: Albuquerque in New Mexico is led by the Mayor of Albuquerque.
Subject: Albuquerque, New Mexico
Predicate: leaderTitle
Object: Mayor of Albuquerque

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ United States House of Representatives']
Text: In Albuquerque (New Mexico), the leader is called, the United States House of Representatives.
Subject: Albuquerque, New Mexico
Predicate: leaderTitle
Object: United States House of Representatives

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ United States House of Representatives']
Text: The leader for Albuquerque in New Mexico is the United States House of Representatives.
Subject: Albuquerque, New Mexico
Predicate: leaderTitle
Object: United States House of Representatives

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ leaderTitle __object__ United States House of Representatives']
Text: The leader of Albuquerque, New Mexico is the United States House of Representatives.
Subject: Albuquerque, New Mexico
Predicate: leaderTitle
Object: United States House of Representatives

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ populationDensity __object__ 1142.3 (inhabitants per square kilometre)']
Text: Albuquerque, in New Mexico, has a population density of 1142,3 inhabitants per square kilometre.
Subject: Albuquerque, New Mexico
Predicate: populationDensity
Object: 1142.3 (inhabitants per square kilometre)

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ populationDensity __object__ 1142.3 (inhabitants per square kilometre)']
Text: There are 1142.3 people per square kilometers in Albuquerque, N.M.
Subject: Albuquerque, New Mexico
Predicate: populationDensity
Object: 1142.3 (inhabitants per square kilometre)

Triple: ['__subject__ Albuquerque, New Mexico __predicate__ populationDensity __object__ 1142.3 (inhabitants per square kilometre)']
Text: The population density of Albuquerque in New Mexico is 1142.3 inhabitants per sq km.
Subject: Albuquerque, New Mexico
Predicate: populationDensity
Object: 1142.3 (inhabitants per square kilometre)

Triple: ['__subject__ Albuquerque City Council __predicate__ leader __object__ Richard J. Berry']
Text: Albuquerque City Council is led by Richard J. Berry.
Subject: Albuquerque City Council
Predicate: leader
Object: Richard J. Berry

Triple: ['__subject__ Albuquerque City Council __predicate__ leader __object__ Richard J. Berry']
Text: The leader of the Albuquerque City Council is Richard J. Berry.
Subject: Albuquerque City Council
Predicate: leader
Object: Richard J. Berry

Triple: ['__subject__ Albuquerque City Council __predicate__ leader __object__ Richard J. Berry']
Text: Richard J Berry is the leader of Albuquerque City Council.
Subject: Albuquerque City Council
Predicate: leader
Object: Richard J. Berry

Triple: ['__subject__ Alexandria, Indiana __predicate__ areaCode __object__ 765']
Text: The area code for Alexandria, Indiana is 765.
Subject: Alexandria, Indiana
Predicate: areaCode
Object: 765

Triple: ['__subject__ Alexandria, Indiana __predicate__ areaCode __object__ 765']
Text: The area code of Alexandria, Indiana is 765.
Subject: Alexandria, Indiana
Predicate: areaCode
Object: 765

Triple: ['__subject__ Alexandria, Indiana __predicate__ areaTotal __object__ 6.81 (square kilometres)']
Text: Alexandria, in Indiana, has a total area of 6,81 square kilometres.
Subject: Alexandria, Indiana
Predicate: areaTotal
Object: 6.81 (square kilometres)

Triple: ['__subject__ Alexandria, Indiana __predicate__ areaTotal __object__ 6.81 (square kilometres)']
Text: Alexandria in Indiana occupies 6.81 square kilometers.
Subject: Alexandria, Indiana
Predicate: areaTotal
Object: 6.81 (square kilometres)

Triple: ['__subject__ Alexandria, Indiana __predicate__ areaTotal __object__ 6.81 (square kilometres)']
Text: The total area of Alexandria, Indiana is 6.81 square kilometres.
Subject: Alexandria, Indiana
Predicate: areaTotal
Object: 6.81 (square kilometres)

Triple: ['__subject__ Alexandria, Indiana __predicate__ elevationAboveTheSeaLevel __object__ 265.0']
Text: Alexandria, Indiana is 265m above sea level.
Subject: Alexandria, Indiana
Predicate: elevationAboveTheSeaLevel
Object: 265.0

Triple: ['__subject__ Alexandria, Indiana __predicate__ elevationAboveTheSeaLevel __object__ 265.0']
Text: Alexandria, Indiana is located at 265.0 above sea level.
Subject: Alexandria, Indiana
Predicate: elevationAboveTheSeaLevel
Object: 265.0

Triple: ['__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Indiana']
Text: Alexandria is part of Indiana.
Subject: Alexandria, Indiana
Predicate: isPartOf
Object: Indiana

Triple: ['__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Indiana']
Text: Alexandria is located in Indiana.
Subject: Alexandria, Indiana
Predicate: isPartOf
Object: Indiana

Triple: ['__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Indiana']
Text: Alexandria is part of the state of Indiana.
Subject: Alexandria, Indiana
Predicate: isPartOf
Object: Indiana

Triple: ['__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Madison County, Indiana']
Text: Alexandria is part of Madison County, Indiana.
Subject: Alexandria, Indiana
Predicate: isPartOf
Object: Madison County, Indiana

Triple: ['__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Madison County, Indiana']
Text: Alexandria, Indiana, is part of Madison County.
Subject: Alexandria, Indiana
Predicate: isPartOf
Object: Madison County, Indiana

Triple: ['__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Madison County, Indiana']
Text: Alexandria, Indiana is part of Madison County Indiana.
Subject: Alexandria, Indiana
Predicate: isPartOf
Object: Madison County, Indiana

Triple: ['__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Monroe Township, Madison County, Indiana']
Text: Alexandria is part of the Monroe Township which is in Madison County, in Indiana.
Subject: Alexandria, Indiana
Predicate: isPartOf
Object: Monroe Township, Madison County, Indiana

Triple: ['__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Monroe Township, Madison County, Indiana']
Text: Alexandria, Indiana is part of Monroe Township, in Madison County.
Subject: Alexandria, Indiana
Predicate: isPartOf
Object: Monroe Township, Madison County, Indiana

Triple: ['__subject__ Alexandria, Indiana __predicate__ isPartOf __object__ Monroe Township, Madison County, Indiana']
Text: Alexandria is part of Monroe township, Madison County, Indiana.
Subject: Alexandria, Indiana
Predicate: isPartOf
Object: Monroe Township, Madison County, Indiana

Triple: ['__subject__ Alexandria, Indiana __predicate__ populationDensity __object__ 755.3 (inhabitants per square kilometre)']
Text: Alexandria, Indiana has a population density of 755.3 inhabitants per square kilometre.
Subject: Alexandria, Indiana
Predicate: populationDensity
Object: 755.3 (inhabitants per square kilometre)

Triple: ['__subject__ Alexandria, Indiana __predicate__ populationDensity __object__ 755.3 (inhabitants per square kilometre)']
Text: The population density of Alexandria, Indiana is 755.3 inhabitants per sq km.
Subject: Alexandria, Indiana
Predicate: populationDensity
Object: 755.3 (inhabitants per square kilometre)

Triple: ['__subject__ Alexandria, Indiana __predicate__ populationDensity __object__ 755.3 (inhabitants per square kilometre)']
Text: The population density of Alexandria, Indiana, is 755.3 (inhabitants per square kilometer).
Subject: Alexandria, Indiana
Predicate: populationDensity
Object: 755.3 (inhabitants per square kilometre)

Triple: ['__subject__ Alpharetta, Georgia __predicate__ areaCode __object__ 770, 404, 678']
Text: Alpharetta, Georgia has area codes 770, 404, and 678.
Subject: Alpharetta, Georgia
Predicate: areaCode
Object: 770, 404, 678

Triple: ['__subject__ Alpharetta, Georgia __predicate__ areaCode __object__ 770, 404, 678']
Text: The area codes for Alpharetta, Georgia are 770, 404 and 678.
Subject: Alpharetta, Georgia
Predicate: areaCode
Object: 770, 404, 678

Triple: ['__subject__ Alpharetta, Georgia __predicate__ areaOfWater __object__ 1.0 (square kilometres)']
Text: Alpharetta, Georgia has an area of water 1.0 sq km.
Subject: Alpharetta, Georgia
Predicate: areaOfWater
Object: 1.0 (square kilometres)

Triple: ['__subject__ Alpharetta, Georgia __predicate__ areaOfWater __object__ 1.0 (square kilometres)']
Text: Alpharetta, Georgia has a total area of water of 1.0 sq km.
Subject: Alpharetta, Georgia
Predicate: areaOfWater
Object: 1.0 (square kilometres)

Triple: ['__subject__ Alpharetta, Georgia __predicate__ areaOfWater __object__ 1.0 (square kilometres)']
Text: The area of water in Alpharetta, Georgia, is 1.0 (square kilometres).
Subject: Alpharetta, Georgia
Predicate: areaOfWater
Object: 1.0 (square kilometres)

Triple: ['__subject__ Alpharetta, Georgia __predicate__ areaTotal __object__ 55.4 (square kilometres)']
Text: The total area of Alpharetta, Georgia is 55.4 SqKm.
Subject: Alpharetta, Georgia
Predicate: areaTotal
Object: 55.4 (square kilometres)

Triple: ['__subject__ Alpharetta, Georgia __predicate__ areaTotal __object__ 55.4 (square kilometres)']
Text: The area of Alpharetta, Georgia is 55.4 square kilometres.
Subject: Alpharetta, Georgia
Predicate: areaTotal
Object: 55.4 (square kilometres)

Triple: ['__subject__ Alpharetta, Georgia __predicate__ areaTotal __object__ 55.4 (square kilometres)']
Text: Alpharetta in Georgia has a total area of 55.4 square kilometres.
Subject: Alpharetta, Georgia
Predicate: areaTotal
Object: 55.4 (square kilometres)

Triple: ['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States']
Text: Alpharetta, is in Georgia, in the United States.
Subject: Alpharetta, Georgia
Predicate: country
Object: United States

Triple: ['__subject__ Alpharetta, Georgia __predicate__ country __object__ United States']
Text: Alpharetta, Georgia is located within the United States.
Subject: Alpharetta, Georgia
Predicate: country
Object: United States

Triple: ['__subject__ Alpharetta, Georgia __predicate__ elevationAboveTheSeaLevel __object__ 346.0']
Text: Alpharetta, Georgia is elevated 346.0 above sea level.
Subject: Alpharetta, Georgia
Predicate: elevationAboveTheSeaLevel
Object: 346.0

Triple: ['__subject__ Alpharetta, Georgia __predicate__ elevationAboveTheSeaLevel __object__ 346.0']
Text: Alpharetta, Georgia is located at 346.0 above sea level.
Subject: Alpharetta, Georgia
Predicate: elevationAboveTheSeaLevel
Object: 346.0

Triple: ['__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Fulton County, Georgia']
Text: Alpharetta, is part of Fulton County, in Georgia.
Subject: Alpharetta, Georgia
Predicate: isPartOf
Object: Fulton County, Georgia

Triple: ['__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Fulton County, Georgia']
Text: Fulton County is the location of Alpharetta, Georgia.
Subject: Alpharetta, Georgia
Predicate: isPartOf
Object: Fulton County, Georgia

Triple: ['__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Fulton County, Georgia']
Text: Alpharetta is part of Fulton County in Georgia.
Subject: Alpharetta, Georgia
Predicate: isPartOf
Object: Fulton County, Georgia

Triple: ['__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Georgia (U.S. state)']
Text: Alpharetta is part of the U.S. state, Georgia.
Subject: Alpharetta, Georgia
Predicate: isPartOf
Object: Georgia (U.S. state)

Triple: ['__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Georgia (U.S. state)']
Text: Alpharetta is part of the state of Georgia in the United States.
Subject: Alpharetta, Georgia
Predicate: isPartOf
Object: Georgia (U.S. state)

Triple: ['__subject__ Alpharetta, Georgia __predicate__ isPartOf __object__ Georgia (U.S. state)']
Text: Alpharetta is part of Georgia (U.S state).
Subject: Alpharetta, Georgia
Predicate: isPartOf
Object: Georgia (U.S. state)

Triple: ['__subject__ Alpharetta, Georgia __predicate__ populationDensity __object__ 992.6 (inhabitants per square kilometre)']
Text: There are 992.6 people per square kilometres in Alpharetta, Georgia.
Subject: Alpharetta, Georgia
Predicate: populationDensity
Object: 992.6 (inhabitants per square kilometre)

Triple: ['__subject__ Alpharetta, Georgia __predicate__ populationDensity __object__ 992.6 (inhabitants per square kilometre)']
Text: Alpharetta, Georgia has a population density of 992.6 inhabitants per square kilometre.
Subject: Alpharetta, Georgia
Predicate: populationDensity
Object: 992.6 (inhabitants per square kilometre)

Triple: ['__subject__ Alpharetta, Georgia __predicate__ populationDensity __object__ 992.6 (inhabitants per square kilometre)']
Text: The population density in Alpharetta, Georgia is 992.6 inhabitants per sq km.
Subject: Alpharetta, Georgia
Predicate: populationDensity
Object: 992.6 (inhabitants per square kilometre)

Triple: ['__subject__ Amarillo, Texas __predicate__ areaCode __object__ 806']
Text: The area code for Amarillo, Texas is 806.
Subject: Amarillo, Texas
Predicate: areaCode
Object: 806

Triple: ['__subject__ Amarillo, Texas __predicate__ areaCode __object__ 806']
Text: 806 is the area code for Amarillo, Texas.
Subject: Amarillo, Texas
Predicate: areaCode
Object: 806

Triple: ['__subject__ Amarillo, Texas __predicate__ elevationAboveTheSeaLevel __object__ 1099.0']
Text: Amarillo Texas is elevated 1099.0 above sea level.
Subject: Amarillo, Texas
Predicate: elevationAboveTheSeaLevel
Object: 1099.0

Triple: ['__subject__ Amarillo, Texas __predicate__ elevationAboveTheSeaLevel __object__ 1099.0']
Text: Amarillo, Texas is 1099 metres above sea level.
Subject: Amarillo, Texas
Predicate: elevationAboveTheSeaLevel
Object: 1099.0

Triple: ['__subject__ Amarillo, Texas __predicate__ isPartOf __object__ Texas']
Text: Amarillo is a city in Texas.
Subject: Amarillo, Texas
Predicate: isPartOf
Object: Texas

Triple: ['__subject__ Amarillo, Texas __predicate__ isPartOf __object__ Texas']
Text: Amarillo is part of Texas.
Subject: Amarillo, Texas
Predicate: isPartOf
Object: Texas

Triple: ['__subject__ Amarillo, Texas __predicate__ populationDensity __object__ 746.0 (inhabitants per square kilometre)']
Text: Amarillo, Texas has a population density of 746 inhabitants per square kilometre.
Subject: Amarillo, Texas
Predicate: populationDensity
Object: 746.0 (inhabitants per square kilometre)

Triple: ['__subject__ Amarillo, Texas __predicate__ populationDensity __object__ 746.0 (inhabitants per square kilometre)']
Text: 746 people per square kilometre inhabit Amarillo, Texas.
Subject: Amarillo, Texas
Predicate: populationDensity
Object: 746.0 (inhabitants per square kilometre)

Triple: ['__subject__ Amarillo, Texas __predicate__ populationDensity __object__ 746.0 (inhabitants per square kilometre)']
Text: Amarillo Texas has a population density of 746.0 inhabitants per square kilometre.
Subject: Amarillo, Texas
Predicate: populationDensity
Object: 746.0 (inhabitants per square kilometre)

Triple: ['__subject__ Anaheim, California __predicate__ utcOffset __object__ - 7']
Text: Anaheim, California has a UTC offset of - 7.
Subject: Anaheim, California
Predicate: utcOffset
Object: - 7

Triple: ['__subject__ Anaheim, California __predicate__ utcOffset __object__ - 7']
Text: Anaheim, CA has a UTC offset of minus 7.
Subject: Anaheim, California
Predicate: utcOffset
Object: - 7

Triple: ['__subject__ Anaheim, California __predicate__ utcOffset __object__ - 7']
Text: Anaheim, California has an UTC offset of -7.
Subject: Anaheim, California
Predicate: utcOffset
Object: - 7

Triple: ['__subject__ Anaheim, California __predicate__ utcOffset __object__ -8']
Text: Anaheim, in California, has a UTC offset of -8.
Subject: Anaheim, California
Predicate: utcOffset
Object: -8

Triple: ['__subject__ Anaheim, California __predicate__ utcOffset __object__ -8']
Text: The UTC offset for Anaheim, California is -8.
Subject: Anaheim, California
Predicate: utcOffset
Object: -8

Triple: ['__subject__ Anaheim, California __predicate__ areaCode __object__ 657, 714']
Text: 657 and 714 are area codes for Anaheim, CA.
Subject: Anaheim, California
Predicate: areaCode
Object: 657, 714

Triple: ['__subject__ Anaheim, California __predicate__ areaCode __object__ 657, 714']
Text: Anaheim in California has the area code: 657, 714.
Subject: Anaheim, California
Predicate: areaCode
Object: 657, 714

Triple: ['__subject__ Anaheim, California __predicate__ areaOfWater __object__ 25.2 (square kilometres)']
Text: The area of water, in Anaheim (California), is 25.2 square kilometres.
Subject: Anaheim, California
Predicate: areaOfWater
Object: 25.2 (square kilometres)

Triple: ['__subject__ Anaheim, California __predicate__ areaOfWater __object__ 25.2 (square kilometres)']
Text: Anaheim, CA has 25.2 square kilometres of water.
Subject: Anaheim, California
Predicate: areaOfWater
Object: 25.2 (square kilometres)

Triple: ['__subject__ Anaheim, California __predicate__ areaOfWater __object__ 25.2 (square kilometres)']
Text: The total area of water in Anaheim, California is 25.2 square kilometres.
Subject: Anaheim, California
Predicate: areaOfWater
Object: 25.2 (square kilometres)

Triple: ['__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']
Text: Anaheim, California has a total area of 131.6 square kilometres.
Subject: Anaheim, California
Predicate: areaTotal
Object: 131.6 (square kilometres)

Triple: ['__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']
Text: The total area of Anaheim California is 131.6 sq km.
Subject: Anaheim, California
Predicate: areaTotal
Object: 131.6 (square kilometres)

Triple: ['__subject__ Anaheim, California __predicate__ areaTotal __object__ 131.6 (square kilometres)']
Text: The total area for Anaheim California is 131.6 square kilometres.
Subject: Anaheim, California
Predicate: areaTotal
Object: 131.6 (square kilometres)

Triple: ['__subject__ Anaheim, California __predicate__ country __object__ United States']
Text: Anaheim, California is in the U.S.
Subject: Anaheim, California
Predicate: country
Object: United States

Triple: ['__subject__ Anaheim, California __predicate__ country __object__ United States']
Text: Anaheim is in California in the U.S.
Subject: Anaheim, California
Predicate: country
Object: United States

Triple: ['__subject__ Anaheim, California __predicate__ country __object__ United States']
Text: Anaheim, California is located within the United States.
Subject: Anaheim, California
Predicate: country
Object: United States

Triple: ['__subject__ Anaheim, California __predicate__ elevationAboveTheSeaLevel __object__ 48.0']
Text: Anaheim in California has an elevation of 48.0m above sea level.
Subject: Anaheim, California
Predicate: elevationAboveTheSeaLevel
Object: 48.0

Triple: ['__subject__ Anaheim, California __predicate__ elevationAboveTheSeaLevel __object__ 48.0']
Text: Anaheim, California elevation is 48.0 above the sea level.
Subject: Anaheim, California
Predicate: elevationAboveTheSeaLevel
Object: 48.0

Triple: ['__subject__ Anaheim, California __predicate__ elevationAboveTheSeaLevel __object__ 48.0']
Text: Anaheim, California is situated at 48.0 above sea level.
Subject: Anaheim, California
Predicate: elevationAboveTheSeaLevel
Object: 48.0

Triple: ['__subject__ Anaheim, California __predicate__ isPartOf __object__ California']
Text: Anaheim is part of California.
Subject: Anaheim, California
Predicate: isPartOf
Object: California

Triple: ['__subject__ Anaheim, California __predicate__ isPartOf __object__ Orange County, California']
Text: Anaheim is a city in Orange County which is part of California.
Subject: Anaheim, California
Predicate: isPartOf
Object: Orange County, California

Triple: ['__subject__ Anaheim, California __predicate__ isPartOf __object__ Orange County, California']
Text: Anaheim is in Orange County, CA.
Subject: Anaheim, California
Predicate: isPartOf
Object: Orange County, California

Triple: ['__subject__ Anaheim, California __predicate__ isPartOf __object__ Orange County, California']
Text: Anaheim, California is part of Orange County, California.
Subject: Anaheim, California
Predicate: isPartOf
Object: Orange County, California

Triple: ['__subject__ Anaheim, California __predicate__ leader __object__ Tom Tait']
Text: Tom Tait is a leader in Anaheim, California.
Subject: Anaheim, California
Predicate: leader
Object: Tom Tait

Triple: ['__subject__ Anaheim, California __predicate__ leader __object__ Tom Tait']
Text: Tom Tait is the leader of Anaheim, California.
Subject: Anaheim, California
Predicate: leader
Object: Tom Tait

Triple: ['__subject__ Anaheim, California __predicate__ leader __object__ Tom Tait']
Text: The leader of Anaheim, California, is Tom Tait.
Subject: Anaheim, California
Predicate: leader
Object: Tom Tait

Triple: ['__subject__ Anaheim, California __predicate__ leaderTitle __object__ California State Assembly']
Text: Anaheim, California is led by the California State Assembly.
Subject: Anaheim, California
Predicate: leaderTitle
Object: California State Assembly

Triple: ['__subject__ Anaheim, California __predicate__ leaderTitle __object__ California State Senate']
Text: The California State Senate leads Anaheim, California.
Subject: Anaheim, California
Predicate: leaderTitle
Object: California State Senate

Triple: ['__subject__ Anaheim, California __predicate__ leaderTitle __object__ United States House of Representatives']
Text: The United States House of Representatives leads Anaheim, California.
Subject: Anaheim, California
Predicate: leaderTitle
Object: United States House of Representatives

Triple: ['__subject__ Anaheim, California __predicate__ populationTotal __object__ 336265']
Text: Anaheim, CA has 336265 people inhabiting it.
Subject: Anaheim, California
Predicate: populationTotal
Object: 336265

Triple: ['__subject__ Anaheim, California __predicate__ populationTotal __object__ 336265']
Text: The total population of Anaheim California is 336265.
Subject: Anaheim, California
Predicate: populationTotal
Object: 336265

Triple: ['__subject__ Anaheim, California __predicate__ populationTotal __object__ 336265']
Text: Anaheim, California has a population of 336265.
Subject: Anaheim, California
Predicate: populationTotal
Object: 336265

Triple: ['__subject__ Anderson, Indiana __predicate__ areaCode __object__ 765']
Text: The area code of Anderson, in Indiana, is 765.
Subject: Anderson, Indiana
Predicate: areaCode
Object: 765

Triple: ['__subject__ Anderson, Indiana __predicate__ areaCode __object__ 765']
Text: The area code of Anderson, Indiana is 765.
Subject: Anderson, Indiana
Predicate: areaCode
Object: 765

Triple: ['__subject__ Anderson, Indiana __predicate__ areaCode __object__ 765']
Text: The area code of Anderson, Indiana, is 765.
Subject: Anderson, Indiana
Predicate: areaCode
Object: 765

Triple: ['__subject__ Anderson, Indiana __predicate__ areaTotal __object__ 107.43 (square kilometres)']
Text: Anderson, Indiana has an area of 107.43 square kilometres.
Subject: Anderson, Indiana
Predicate: areaTotal
Object: 107.43 (square kilometres)

Triple: ['__subject__ Anderson, Indiana __predicate__ areaTotal __object__ 107.43 (square kilometres)']
Text: Anderson is located in Indiana, whose total area is 107.43 square kilometres.
Subject: Anderson, Indiana
Predicate: areaTotal
Object: 107.43 (square kilometres)

Triple: ['__subject__ Anderson, Indiana __predicate__ areaTotal __object__ 107.43 (square kilometres)']
Text: The total area of Anderson, Indiana is 107.43 square kilometres.
Subject: Anderson, Indiana
Predicate: areaTotal
Object: 107.43 (square kilometres)

Triple: ['__subject__ Anderson, Indiana __predicate__ elevationAboveTheSeaLevel __object__ 268.0']
Text: Anderson Indiana has an elevation of 268.0 above sea level.
Subject: Anderson, Indiana
Predicate: elevationAboveTheSeaLevel
Object: 268.0

Triple: ['__subject__ Anderson, Indiana __predicate__ elevationAboveTheSeaLevel __object__ 268.0']
Text: Anderson, Indiana is located at 268.0 above sea level.
Subject: Anderson, Indiana
Predicate: elevationAboveTheSeaLevel
Object: 268.0

Triple: ['__subject__ Anderson, Indiana __predicate__ elevationAboveTheSeaLevel __object__ 268.0']
Text: The elevation above the sea level for Anderson, Indiana, is 268.0.
Subject: Anderson, Indiana
Predicate: elevationAboveTheSeaLevel
Object: 268.0

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Adams Township, Madison County, Indiana']
Text: Anderson is part of Adams Township, Madison County, Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Adams Township, Madison County, Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Adams Township, Madison County, Indiana']
Text: Anderson is located within Adams Township, Madison County, Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Adams Township, Madison County, Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Anderson Township, Madison County, Indiana']
Text: Anderson, Indiana is part of Anderson Township, Madison County, Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Anderson Township, Madison County, Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Anderson Township, Madison County, Indiana']
Text: Anderson is part of Anderson Township, Madison County, Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Anderson Township, Madison County, Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Anderson Township, Madison County, Indiana']
Text: Anderson, Indiana, is part of the Anderson Township, Madison County in Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Anderson Township, Madison County, Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Fall Creek Township, Madison County, Indiana']
Text: Anderson, Indiana is part of Fall Creek Township, Madison County, Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Fall Creek Township, Madison County, Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Fall Creek Township, Madison County, Indiana']
Text: Anderson, Indiana, is part of Fall Creek Township, Madison County Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Fall Creek Township, Madison County, Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Fall Creek Township, Madison County, Indiana']
Text: Anderson, Indiana, is part of Fall Creek Township, Madison County, Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Fall Creek Township, Madison County, Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Indiana']
Text: Anderson is a city in Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Indiana']
Text: Anderson is part of Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Indiana']
Text: The city of Anderson is part of Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Lafayette Township, Madison County, Indiana']
Text: Anderson, Indiana is part of Lafayette Township, Madison County, Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Lafayette Township, Madison County, Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Lafayette Township, Madison County, Indiana']
Text: Anderson is part of Lafayette Township, Madison County, Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Lafayette Township, Madison County, Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Madison County, Indiana']
Text: Anderson in Madison County is in Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Madison County, Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Madison County, Indiana']
Text: Anderson is located in Madison County, Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Madison County, Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Madison County, Indiana']
Text: Anderson is part of Madison County, Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Madison County, Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Union Township, Madison County, Indiana']
Text: Anderson, Indiana is part of the Union Township, Madison County.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Union Township, Madison County, Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ isPartOf __object__ Union Township, Madison County, Indiana']
Text: Anderson is part of Union Township, Madison County, Indiana.
Subject: Anderson, Indiana
Predicate: isPartOf
Object: Union Township, Madison County, Indiana

Triple: ['__subject__ Anderson, Indiana __predicate__ leader __object__ Democratic Party (United States)']
Text: Anderson, Indiana is led by the Democratic Party of the US.
Subject: Anderson, Indiana
Predicate: leader
Object: Democratic Party (United States)

Triple: ['__subject__ Anderson, Indiana __predicate__ populationDensity __object__ 523.9 (inhabitants per square kilometre)']
Text: Anderson, Indiana has 523.9 people per square kilometer.
Subject: Anderson, Indiana
Predicate: populationDensity
Object: 523.9 (inhabitants per square kilometre)

Triple: ['__subject__ Anderson, Indiana __predicate__ populationDensity __object__ 523.9 (inhabitants per square kilometre)']
Text: The population density of Anderson, Indiana is 523.9 inhabitants per square kilometre.
Subject: Anderson, Indiana
Predicate: populationDensity
Object: 523.9 (inhabitants per square kilometre)

Triple: ['__subject__ Anderson, Indiana __predicate__ populationDensity __object__ 523.9 (inhabitants per square kilometre)']
Text: The population density of Anderson, Indiana, is 523.9 (inhabitants per square kilometre).
Subject: Anderson, Indiana
Predicate: populationDensity
Object: 523.9 (inhabitants per square kilometre)

Triple: ['__subject__ Anderson Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Anderson, Township of Madison County, Indiana is in the Country of United States.
Subject: Anderson Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Anderson Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Anderson Township, Madison County, Indiana is located within the United States.
Subject: Anderson Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Anderson Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: The country of Anderson Township, Madison County, Indiana, is United States.
Subject: Anderson Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Angola, Indiana __predicate__ areaTotal __object__ 16.55 (square kilometres)']
Text: Angola, in Indiana, has a total area of 16.55 square kilometres.
Subject: Angola, Indiana
Predicate: areaTotal
Object: 16.55 (square kilometres)

Triple: ['__subject__ Angola, Indiana __predicate__ areaTotal __object__ 16.55 (square kilometres)']
Text: The total area of Angola, Indiana, is 16.55 square kilometres.
Subject: Angola, Indiana
Predicate: areaTotal
Object: 16.55 (square kilometres)

Triple: ['__subject__ Angola, Indiana __predicate__ country __object__ United States']
Text: Angola, Indiana is in the United States.
Subject: Angola, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Angola, Indiana __predicate__ country __object__ United States']
Text: Angola, Indiana is in the U.S.
Subject: Angola, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Angola, Indiana __predicate__ country __object__ United States']
Text: Angola, Indiana is located in the United States.
Subject: Angola, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Angola, Indiana __predicate__ isPartOf __object__ Indiana']
Text: Angola is a city in Indiana.
Subject: Angola, Indiana
Predicate: isPartOf
Object: Indiana

Triple: ['__subject__ Angola, Indiana __predicate__ isPartOf __object__ Indiana']
Text: Angola is part of the state of Indiana.
Subject: Angola, Indiana
Predicate: isPartOf
Object: Indiana

Triple: ['__subject__ Angola, Indiana __predicate__ isPartOf __object__ Steuben County, Indiana']
Text: Angola, Indiana is part of Steuben County, Indiana.
Subject: Angola, Indiana
Predicate: isPartOf
Object: Steuben County, Indiana

Triple: ['__subject__ Angola, Indiana __predicate__ isPartOf __object__ Steuben County, Indiana']
Text: Angola, Indiana, is part of Steuben County.
Subject: Angola, Indiana
Predicate: isPartOf
Object: Steuben County, Indiana

Triple: ['__subject__ Angola, Indiana __predicate__ isPartOf __object__ Steuben County, Indiana']
Text: Angola, Indiana is in Steuben County.
Subject: Angola, Indiana
Predicate: isPartOf
Object: Steuben County, Indiana

Triple: ['__subject__ Angola, Indiana __predicate__ isPartOf __object__ United States']
Text: Angola is part of Indiana which is in the United States.
Subject: Angola, Indiana
Predicate: isPartOf
Object: United States

Triple: ['__subject__ Angola, Indiana __predicate__ isPartOf __object__ United States']
Text: Angola, Indiana is part of the U.S.
Subject: Angola, Indiana
Predicate: isPartOf
Object: United States

Triple: ['__subject__ Angola, Indiana __predicate__ isPartOf __object__ United States']
Text: Angola in Indiana is part of the United States.
Subject: Angola, Indiana
Predicate: isPartOf
Object: United States

Triple: ['__subject__ Angola, Indiana __predicate__ populationDensity __object__ 524.5 (inhabitants per square kilometre)']
Text: The population density of Angola, Indiana, is 524.5 (inhabitants per square kilometre).
Subject: Angola, Indiana
Predicate: populationDensity
Object: 524.5 (inhabitants per square kilometre)

Triple: ['__subject__ Angola, Indiana __predicate__ populationDensity __object__ 524.5 (inhabitants per square kilometre)']
Text: The population density of Angola, Indiana is 524.5 inhabitants per sq km.
Subject: Angola, Indiana
Predicate: populationDensity
Object: 524.5 (inhabitants per square kilometre)

Triple: ['__subject__ Angola, Indiana __predicate__ populationDensity __object__ 524.5 (inhabitants per square kilometre)']
Text: The population density in Angola, Indiana, is 524.5 (inhabitants per square kilometre).
Subject: Angola, Indiana
Predicate: populationDensity
Object: 524.5 (inhabitants per square kilometre)

Triple: ['__subject__ Ann Arbor, Michigan __predicate__ areaCode __object__ 734']
Text: The area code for Ann Arbor Michigan is 734.
Subject: Ann Arbor, Michigan
Predicate: areaCode
Object: 734

Triple: ['__subject__ Ann Arbor, Michigan __predicate__ areaCode __object__ 734']
Text: 734 is the area code for Ann Arbor, Michigan.
Subject: Ann Arbor, Michigan
Predicate: areaCode
Object: 734

Triple: ['__subject__ Ann Arbor, Michigan __predicate__ areaTotal __object__ 74.33 (square kilometres)']
Text: Ann Arbor, Michigan has a total area of 74.33 square kilometres.
Subject: Ann Arbor, Michigan
Predicate: areaTotal
Object: 74.33 (square kilometres)

Triple: ['__subject__ Ann Arbor, Michigan __predicate__ areaTotal __object__ 74.33 (square kilometres)']
Text: Ann Arbor (Michigan), has a total area of 74.33 square kilometres.
Subject: Ann Arbor, Michigan
Predicate: areaTotal
Object: 74.33 (square kilometres)

Triple: ['__subject__ Ann Arbor, Michigan __predicate__ areaTotal __object__ 74.33 (square kilometres)']
Text: Ann Arbor in Michigan has a total area of 74.33 square kilometres.
Subject: Ann Arbor, Michigan
Predicate: areaTotal
Object: 74.33 (square kilometres)

Triple: ['__subject__ Ann Arbor, Michigan __predicate__ isPartOf __object__ Michigan']
Text: Ann Arbor is in Michigan.
Subject: Ann Arbor, Michigan
Predicate: isPartOf
Object: Michigan

Triple: ['__subject__ Ann Arbor, Michigan __predicate__ isPartOf __object__ Michigan']
Text: Ann Arbor is part of Michigan.
Subject: Ann Arbor, Michigan
Predicate: isPartOf
Object: Michigan

Triple: ['__subject__ Ann Arbor, Michigan __predicate__ isPartOf __object__ Washtenaw County, Michigan']
Text: Ann Arbor is part of Washtenaw County in Michigan.
Subject: Ann Arbor, Michigan
Predicate: isPartOf
Object: Washtenaw County, Michigan

Triple: ['__subject__ Ann Arbor, Michigan __predicate__ isPartOf __object__ Washtenaw County, Michigan']
Text: Ann Arbor, Michigan is part of Washtenaw County.
Subject: Ann Arbor, Michigan
Predicate: isPartOf
Object: Washtenaw County, Michigan

Triple: ['__subject__ Ann Arbor, Michigan __predicate__ leader __object__ Christopher Taylor (politician)']
Text: Christopher Taylor, politician, leads Ann Arbor, Michigan.
Subject: Ann Arbor, Michigan
Predicate: leader
Object: Christopher Taylor (politician)

Triple: ['__subject__ Ann Arbor, Michigan __predicate__ leader __object__ Christopher Taylor (politician)']
Text: Ann Arbor, Michigan is led by the politician Christopher Taylor.
Subject: Ann Arbor, Michigan
Predicate: leader
Object: Christopher Taylor (politician)

Triple: ['__subject__ Ann Arbor, Michigan __predicate__ leaderTitle __object__ City Manager']
Text: The city manager is the leader of Ann Arbor, Michigan.
Subject: Ann Arbor, Michigan
Predicate: leaderTitle
Object: City Manager

Triple: ['__subject__ Ann Arbor, Michigan __predicate__ leaderTitle __object__ City Manager']
Text: The title of the leader of Ann Arbor in Michigan is the City Manager.
Subject: Ann Arbor, Michigan
Predicate: leaderTitle
Object: City Manager

Triple: ['__subject__ Ann Arbor, Michigan __predicate__ leaderTitle __object__ City Manager']
Text: City Manager is the leader title in Ann Arbor, Michigan.
Subject: Ann Arbor, Michigan
Predicate: leaderTitle
Object: City Manager

Triple: ['__subject__ Antioch, California __predicate__ utcOffset __object__ -7']
Text: Antioch, California has a UTC offset of - 7.
Subject: Antioch, California
Predicate: utcOffset
Object: -7

Triple: ['__subject__ Antioch, California __predicate__ utcOffset __object__ -7']
Text: Antioch, California time zone offset is -7.
Subject: Antioch, California
Predicate: utcOffset
Object: -7

Triple: ['__subject__ Antioch, California __predicate__ utcOffset __object__ -7']
Text: The UTC offset for Antioch California is -7.
Subject: Antioch, California
Predicate: utcOffset
Object: -7

Triple: ['__subject__ Antioch, California __predicate__ utcOffset __object__ -8']
Text: Antioch in California has a UTC offset of -8.
Subject: Antioch, California
Predicate: utcOffset
Object: -8

Triple: ['__subject__ Antioch, California __predicate__ utcOffset __object__ -8']
Text: The UTC offset for Antioch, California is -8.
Subject: Antioch, California
Predicate: utcOffset
Object: -8

Triple: ['__subject__ Antioch, California __predicate__ utcOffset __object__ -8']
Text: The UTC offset in Antioch, California, is -8.
Subject: Antioch, California
Predicate: utcOffset
Object: -8

Triple: ['__subject__ Antioch, California __predicate__ areaTotal __object__ 75.324 (square kilometres)']
Text: The total area of Antioch, California is 75.324 square km.
Subject: Antioch, California
Predicate: areaTotal
Object: 75.324 (square kilometres)

Triple: ['__subject__ Antioch, California __predicate__ areaTotal __object__ 75.324 (square kilometres)']
Text: Antioch, California has a total area of 75.324 square km.
Subject: Antioch, California
Predicate: areaTotal
Object: 75.324 (square kilometres)

Triple: ['__subject__ Antioch, California __predicate__ areaTotal __object__ 75.324 (square kilometres)']
Text: The total area in Antioch, California is 75.324 (square kilometres).
Subject: Antioch, California
Predicate: areaTotal
Object: 75.324 (square kilometres)

Triple: ['__subject__ Antioch, California __predicate__ isPartOf __object__ California']
Text: Antioch is part of California.
Subject: Antioch, California
Predicate: isPartOf
Object: California

Triple: ['__subject__ Antioch, California __predicate__ isPartOf __object__ California']
Text: The city of Antioch is located within California.
Subject: Antioch, California
Predicate: isPartOf
Object: California

Triple: ['__subject__ Antioch, California __predicate__ leaderTitle __object__ Mayor']
Text: The mayor is the leader of Antioch, California.
Subject: Antioch, California
Predicate: leaderTitle
Object: Mayor

Triple: ['__subject__ Antioch, California __predicate__ leaderTitle __object__ Mayor']
Text: Mayor, is the title for the leader of Antioch, in California.
Subject: Antioch, California
Predicate: leaderTitle
Object: Mayor

Triple: ['__subject__ Antioch, California __predicate__ leaderTitle __object__ Mayor']
Text: The Mayor leads Antioch, California.
Subject: Antioch, California
Predicate: leaderTitle
Object: Mayor

Triple: ['__subject__ Antioch, California __predicate__ leaderTitle __object__ United States House of Representatives']
Text: The United States House of Representatives is the leader of Antioch, California.
Subject: Antioch, California
Predicate: leaderTitle
Object: United States House of Representatives

Triple: ['__subject__ Antioch, California __predicate__ leaderTitle __object__ United States House of Representatives']
Text: Antioch, California is led by the United States House of Representatives.
Subject: Antioch, California
Predicate: leaderTitle
Object: United States House of Representatives

Triple: ['__subject__ Antioch, California __predicate__ leaderTitle __object__ United States House of Representatives']
Text: The leader title of Antioch, California, is United States House of Representatives.
Subject: Antioch, California
Predicate: leaderTitle
Object: United States House of Representatives

Triple: ['__subject__ Antioch, California __predicate__ populationTotal __object__ 102372']
Text: The population of Antioch California is 102372.
Subject: Antioch, California
Predicate: populationTotal
Object: 102372

Triple: ['__subject__ Antioch, California __predicate__ populationTotal __object__ 102372']
Text: The total population of Antioch, California is 102372.
Subject: Antioch, California
Predicate: populationTotal
Object: 102372

Triple: ['__subject__ Antioch, California __predicate__ populationTotal __object__ 102372']
Text: The population of Antioch, California is 102372.
Subject: Antioch, California
Predicate: populationTotal
Object: 102372

Triple: ['__subject__ Antioch, California __predicate__ postalCode __object__ 94509, 94531']
Text: Antioch, California has postal codes 94509 and 94531.
Subject: Antioch, California
Predicate: postalCode
Object: 94509, 94531

Triple: ['__subject__ Antioch, California __predicate__ postalCode __object__ 94509, 94531']
Text: Antioch California has the postal codes 94509 and 94531.
Subject: Antioch, California
Predicate: postalCode
Object: 94509, 94531

Triple: ['__subject__ Antioch, California __predicate__ postalCode __object__ 94509, 94531']
Text: 94509 and 94531 are postal codes for Antioch, CA.
Subject: Antioch, California
Predicate: postalCode
Object: 94509, 94531

Triple: ['__subject__ Arlington, Texas __predicate__ areaCode __object__ 682, 817, 214, 469, 972']
Text: Area codes for Arlington, Texas are: 682, 817, 214, 469 and 972.
Subject: Arlington, Texas
Predicate: areaCode
Object: 682, 817, 214, 469, 972

Triple: ['__subject__ Arlington, Texas __predicate__ areaCode __object__ 682, 817, 214, 469, 972']
Text: The area codes for Arlington, Texas are 682, 817, 214, 469 and 972.
Subject: Arlington, Texas
Predicate: areaCode
Object: 682, 817, 214, 469, 972

Triple: ['__subject__ Arlington, Texas __predicate__ areaCode __object__ 682, 817, 214, 469, 972']
Text: The area codes for Arlington, Texas are 682, 817, 214, 469, 972.
Subject: Arlington, Texas
Predicate: areaCode
Object: 682, 817, 214, 469, 972

Triple: ['__subject__ Arlington, Texas __predicate__ areaOfWater __object__ 82.8 (square kilometres)']
Text: Arlington, Texas has a water area of 82.8 square kilometres.
Subject: Arlington, Texas
Predicate: areaOfWater
Object: 82.8 (square kilometres)

Triple: ['__subject__ Arlington, Texas __predicate__ areaOfWater __object__ 82.8 (square kilometres)']
Text: The area of water within Arlington Texas is 82.8 sq km.
Subject: Arlington, Texas
Predicate: areaOfWater
Object: 82.8 (square kilometres)

Triple: ['__subject__ Arlington, Texas __predicate__ areaTotal __object__ 258.2 (square kilometres)']
Text: The total area of Arlington (Texas) is 258.2 square kilometres.
Subject: Arlington, Texas
Predicate: areaTotal
Object: 258.2 (square kilometres)

Triple: ['__subject__ Arlington, Texas __predicate__ areaTotal __object__ 258.2 (square kilometres)']
Text: Arlington Texas has an area of 258.2 SqK.
Subject: Arlington, Texas
Predicate: areaTotal
Object: 258.2 (square kilometres)

Triple: ['__subject__ Arlington, Texas __predicate__ areaTotal __object__ 258.2 (square kilometres)']
Text: The total area of Arlington in Texas is 258.2 square kilometres.
Subject: Arlington, Texas
Predicate: areaTotal
Object: 258.2 (square kilometres)

Triple: ['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Tarrant County, Texas']
Text: Arlington is part of Tarrant County in Texas.
Subject: Arlington, Texas
Predicate: isPartOf
Object: Tarrant County, Texas

Triple: ['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Tarrant County, Texas']
Text: Arlington, Tarrant County, is in Texas.
Subject: Arlington, Texas
Predicate: isPartOf
Object: Tarrant County, Texas

Triple: ['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Tarrant County, Texas']
Text: Arlington is part of Tarrant County, Texas.
Subject: Arlington, Texas
Predicate: isPartOf
Object: Tarrant County, Texas

Triple: ['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Texas']
Text: Arlington is part of Texas.
Subject: Arlington, Texas
Predicate: isPartOf
Object: Texas

Triple: ['__subject__ Arlington, Texas __predicate__ isPartOf __object__ Texas']
Text: Arlington is part of the state of Texas.
Subject: Arlington, Texas
Predicate: isPartOf
Object: Texas

Triple: ['__subject__ Atlanta __predicate__ areaCode __object__ 404']
Text: Atlanta has the area code of 404.
Subject: Atlanta
Predicate: areaCode
Object: 404

Triple: ['__subject__ Atlanta __predicate__ areaCode __object__ 404']
Text: Atlanta has an area code of 404.
Subject: Atlanta
Predicate: areaCode
Object: 404

Triple: ['__subject__ Atlanta __predicate__ areaCode __object__ 404']
Text: The area code for Atlanta is 404.
Subject: Atlanta
Predicate: areaCode
Object: 404

Triple: ['__subject__ Atlanta __predicate__ areaCode __object__ 404, 678, 470']
Text: The area codes in Atlanta are 404, 678, and 470.
Subject: Atlanta
Predicate: areaCode
Object: 404, 678, 470

Triple: ['__subject__ Atlanta __predicate__ areaCode __object__ 404, 678, 470']
Text: The area codes for Atlanta are 404, 678 and 470.
Subject: Atlanta
Predicate: areaCode
Object: 404, 678, 470

Triple: ['__subject__ Atlanta __predicate__ areaCode __object__ 404, 678, 470']
Text: Atlanta has the area codes 404, 678, and 470.
Subject: Atlanta
Predicate: areaCode
Object: 404, 678, 470

Triple: ['__subject__ Atlanta __predicate__ areaOfLand __object__ 344.9 (square kilometres)']
Text: Atlanta covers 344.9 square kilometres.
Subject: Atlanta
Predicate: areaOfLand
Object: 344.9 (square kilometres)

Triple: ['__subject__ Atlanta __predicate__ areaOfLand __object__ 344.9 (square kilometres)']
Text: Atlanta covers an area of 344.9 (square kilometres).
Subject: Atlanta
Predicate: areaOfLand
Object: 344.9 (square kilometres)

Triple: ['__subject__ Atlanta __predicate__ areaTotal __object__ 347.1 (square kilometres)']
Text: The total area of Atlanta is 347.1 SqKm.
Subject: Atlanta
Predicate: areaTotal
Object: 347.1 (square kilometres)

Triple: ['__subject__ Atlanta __predicate__ areaTotal __object__ 347.1 (square kilometres)']
Text: The total area of Atlanta is 347.1 square kilometres.
Subject: Atlanta
Predicate: areaTotal
Object: 347.1 (square kilometres)

Triple: ['__subject__ Atlanta __predicate__ areaTotal __object__ 347.1 (square kilometres)']
Text: The total area of Atlanta is 347.1 (square kilometres).
Subject: Atlanta
Predicate: areaTotal
Object: 347.1 (square kilometres)

Triple: ['__subject__ Atlanta __predicate__ country __object__ United States']
Text: Atlanta is in the United States.
Subject: Atlanta
Predicate: country
Object: United States

Triple: ['__subject__ Atlanta __predicate__ country __object__ United States']
Text: Atlanta is in the U.S.
Subject: Atlanta
Predicate: country
Object: United States

Triple: ['__subject__ Atlanta __predicate__ isPartOf __object__ Georgia']
Text: Atlanta is part of Georgia.
Subject: Atlanta
Predicate: isPartOf
Object: Georgia

Triple: ['__subject__ Atlanta __predicate__ isPartOf __object__ DeKalb County, Georgia']
Text: Most of Atlanta is part of DeKalb County in Georgia.
Subject: Atlanta
Predicate: isPartOf
Object: DeKalb County, Georgia

Triple: ['__subject__ Atlanta __predicate__ isPartOf __object__ DeKalb County, Georgia']
Text: Atlanta is part of DeKalb County in Georgia.
Subject: Atlanta
Predicate: isPartOf
Object: DeKalb County, Georgia

Triple: ['__subject__ Atlanta __predicate__ isPartOf __object__ Fulton County, Georgia']
Text: Atlanta is a part of Fulton County in Georgia.
Subject: Atlanta
Predicate: isPartOf
Object: Fulton County, Georgia

Triple: ['__subject__ Atlanta __predicate__ isPartOf __object__ Fulton County, Georgia']
Text: Atlanta is part of Fulton County in Georgia.
Subject: Atlanta
Predicate: isPartOf
Object: Fulton County, Georgia

Triple: ['__subject__ Atlanta __predicate__ isPartOf __object__ Fulton County, Georgia']
Text: Atlanta is part of Fulton County, Georgia.
Subject: Atlanta
Predicate: isPartOf
Object: Fulton County, Georgia

Triple: ['__subject__ Atlanta __predicate__ isPartOf __object__ Georgia (U.S. state)']
Text: Atlanta, is a part of the U.S. state, Georgia.
Subject: Atlanta
Predicate: isPartOf
Object: Georgia (U.S. state)

Triple: ['__subject__ Atlanta __predicate__ isPartOf __object__ Georgia (U.S. state)']
Text: Atlanta is part of Georgia in the U.S.
Subject: Atlanta
Predicate: isPartOf
Object: Georgia (U.S. state)

Triple: ['__subject__ Atlanta __predicate__ isPartOf __object__ Georgia (U.S. state)']
Text: Atlanta is located within the US state of Georgia.
Subject: Atlanta
Predicate: isPartOf
Object: Georgia (U.S. state)

Triple: ['__subject__ Atlanta __predicate__ leader __object__ Atlanta City Council']
Text: The leader of Atlanta is the Atlanta City Council.
Subject: Atlanta
Predicate: leader
Object: Atlanta City Council

Triple: ['__subject__ Atlanta __predicate__ leader __object__ Atlanta City Council']
Text: Atlanta is led by Atlanta City Council.
Subject: Atlanta
Predicate: leader
Object: Atlanta City Council

Triple: ['__subject__ Atlanta __predicate__ populationDensity __object__ 1299.0 (inhabitants per square kilometre)']
Text: Atlanta has a population density of 1299 inhabitants per square kilometre.
Subject: Atlanta
Predicate: populationDensity
Object: 1299.0 (inhabitants per square kilometre)

Triple: ['__subject__ Atlanta __predicate__ populationDensity __object__ 1299.0 (inhabitants per square kilometre)']
Text: The population density of Atlanta is 1299.0 inhabitants per square kilometre.
Subject: Atlanta
Predicate: populationDensity
Object: 1299.0 (inhabitants per square kilometre)

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ areaCode __object__ 609']
Text: The area code in Atlantic City (New Jersey) is 609.
Subject: Atlantic City, New Jersey
Predicate: areaCode
Object: 609

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ areaCode __object__ 609']
Text: 609 is the area code of Atlantic City, N.J.
Subject: Atlantic City, New Jersey
Predicate: areaCode
Object: 609

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ areaCode __object__ 609']
Text: The area code of Atlantic City, New Jersey, is 609.
Subject: Atlantic City, New Jersey
Predicate: areaCode
Object: 609

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States']
Text: Atlantic City, New Jersey is in the United States.
Subject: Atlantic City, New Jersey
Predicate: country
Object: United States

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States']
Text: Atlantic City is in new Jersey, in the United States.
Subject: Atlantic City, New Jersey
Predicate: country
Object: United States

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ country __object__ United States']
Text: Atlantic City, New Jersey, is within the United States.
Subject: Atlantic City, New Jersey
Predicate: country
Object: United States

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ isPartOf __object__ Atlantic County, New Jersey']
Text: Atlantic City is part of Atlantic County, New Jersey.
Subject: Atlantic City, New Jersey
Predicate: isPartOf
Object: Atlantic County, New Jersey

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ isPartOf __object__ Atlantic County, New Jersey']
Text: Atlantic City, New Jersey is in Atlantic County, New Jersey.
Subject: Atlantic City, New Jersey
Predicate: isPartOf
Object: Atlantic County, New Jersey

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ leader __object__ Don Guardian']
Text: Don Guardian is the leader of Atlantic City (New Jersey).
Subject: Atlantic City, New Jersey
Predicate: leader
Object: Don Guardian

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ leader __object__ Don Guardian']
Text: The leader of Atlantic City, New Jersey is Don Guardian.
Subject: Atlantic City, New Jersey
Predicate: leader
Object: Don Guardian

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ leader __object__ Don Guardian']
Text: The leader in Atlantic City, New Jersey is Don Guardian.
Subject: Atlantic City, New Jersey
Predicate: leader
Object: Don Guardian

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ leaderTitle __object__ Clerk (municipal official)']
Text: The leader's title in Atlantic City (New Jersey) is Clerk, which is a municipal official.
Subject: Atlantic City, New Jersey
Predicate: leaderTitle
Object: Clerk (municipal official)

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ leaderTitle __object__ Clerk (municipal official)']
Text: A Clerk (municipal official) is the leader of Atlantic City, N.J.
Subject: Atlantic City, New Jersey
Predicate: leaderTitle
Object: Clerk (municipal official)

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ leaderTitle __object__ Clerk (municipal official)']
Text: The municipal official titled the Clerk leads Atlantic City, New Jersey.
Subject: Atlantic City, New Jersey
Predicate: leaderTitle
Object: Clerk (municipal official)

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ leaderTitle __object__ Mayors of Atlantic City, New Jersey']
Text: "Mayor" is the title of the leader in Atlantic City, New Jersey.
Subject: Atlantic City, New Jersey
Predicate: leaderTitle
Object: Mayors of Atlantic City, New Jersey

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ leaderTitle __object__ Mayors of Atlantic City, New Jersey']
Text: The municipal leader of Atlantic City, New Jersey is known as the Mayor.
Subject: Atlantic City, New Jersey
Predicate: leaderTitle
Object: Mayors of Atlantic City, New Jersey

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ populationDensity __object__ 1421.2 (inhabitants per square kilometre)']
Text: Atlantic City, in New Jersey, has a population density of 1421.2 inhabitants per square kilometre.
Subject: Atlantic City, New Jersey
Predicate: populationDensity
Object: 1421.2 (inhabitants per square kilometre)

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ populationDensity __object__ 1421.2 (inhabitants per square kilometre)']
Text: Atlantic City, New Jersey, has a population of 1421.2 inhabitants per square kilometre.
Subject: Atlantic City, New Jersey
Predicate: populationDensity
Object: 1421.2 (inhabitants per square kilometre)

Triple: ['__subject__ Atlantic City, New Jersey __predicate__ populationDensity __object__ 1421.2 (inhabitants per square kilometre)']
Text: The population density of Atlantic City, New Jersey is 1421.2 inhabitants per square kilometre.
Subject: Atlantic City, New Jersey
Predicate: populationDensity
Object: 1421.2 (inhabitants per square kilometre)

Triple: ['__subject__ Attica, Indiana __predicate__ areaTotal __object__ 4.14 (square kilometres)']
Text: Attica in Indiana, has a total area of 4.14 square kilometres.
Subject: Attica, Indiana
Predicate: areaTotal
Object: 4.14 (square kilometres)

Triple: ['__subject__ Attica, Indiana __predicate__ areaTotal __object__ 4.14 (square kilometres)']
Text: The area of Attica Indiana is 4.14 SqKm.
Subject: Attica, Indiana
Predicate: areaTotal
Object: 4.14 (square kilometres)

Triple: ['__subject__ Attica, Indiana __predicate__ areaTotal __object__ 4.14 (square kilometres)']
Text: Attica, Indiana has a total area of 4.14 sq km.
Subject: Attica, Indiana
Predicate: areaTotal
Object: 4.14 (square kilometres)

Triple: ['__subject__ Attica, Indiana __predicate__ country __object__ United States']
Text: Attica, Indiana is in the U.S.
Subject: Attica, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Attica, Indiana __predicate__ country __object__ United States']
Text: Attica, Indiana, is part of the United States.
Subject: Attica, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Attica, Indiana __predicate__ country __object__ United States']
Text: Attica, Indiana is in the United States.
Subject: Attica, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Attica, Indiana __predicate__ isPartOf __object__ Indiana']
Text: Attica is part of Indiana.
Subject: Attica, Indiana
Predicate: isPartOf
Object: Indiana

Triple: ['__subject__ Attica, Indiana __predicate__ isPartOf __object__ Indiana']
Text: Attica is part of the state of Indiana.
Subject: Attica, Indiana
Predicate: isPartOf
Object: Indiana

Triple: ['__subject__ Attica, Indiana __predicate__ isPartOf __object__ Logan Township, Fountain County, Indiana']
Text: Attica, Indiana is part of Logan Township, Fountain County, Indiana.
Subject: Attica, Indiana
Predicate: isPartOf
Object: Logan Township, Fountain County, Indiana

Triple: ['__subject__ Attica, Indiana __predicate__ isPartOf __object__ Logan Township, Fountain County, Indiana']
Text: Attica is a city in Logan Township which is a part of Fountain County in Indiana.
Subject: Attica, Indiana
Predicate: isPartOf
Object: Logan Township, Fountain County, Indiana

Triple: ['__subject__ Attica, Indiana __predicate__ isPartOf __object__ Logan Township, Fountain County, Indiana']
Text: Attica is part of Logan Township, Fountain County, Indiana.
Subject: Attica, Indiana
Predicate: isPartOf
Object: Logan Township, Fountain County, Indiana

Triple: ['__subject__ Attica, Indiana __predicate__ isPartOf __object__ United States']
Text: Attica, Indiana is part of the U.S.
Subject: Attica, Indiana
Predicate: isPartOf
Object: United States

Triple: ['__subject__ Attica, Indiana __predicate__ isPartOf __object__ United States']
Text: Attica, Indiana is part of the United States.
Subject: Attica, Indiana
Predicate: isPartOf
Object: United States

Triple: ['__subject__ Attica, Indiana __predicate__ populationDensity __object__ 783.1 (inhabitants per square kilometre)']
Text: The population density, of Attica (Indiana), is 783.1 inhabitants per square kilometre.
Subject: Attica, Indiana
Predicate: populationDensity
Object: 783.1 (inhabitants per square kilometre)

Triple: ['__subject__ Attica, Indiana __predicate__ populationDensity __object__ 783.1 (inhabitants per square kilometre)']
Text: The population density of Attica, Indiana, is 783.1 inhabitants per sq km.
Subject: Attica, Indiana
Predicate: populationDensity
Object: 783.1 (inhabitants per square kilometre)

Triple: ['__subject__ Attica, Indiana __predicate__ populationDensity __object__ 783.1 (inhabitants per square kilometre)']
Text: The population density of Attica Indiana is 783.1 (inhabitants per square kilometre).
Subject: Attica, Indiana
Predicate: populationDensity
Object: 783.1 (inhabitants per square kilometre)

Triple: ['__subject__ Auburn, Alabama __predicate__ areaCode __object__ 334']
Text: Auburn, Alabama, has the area code, 334.
Subject: Auburn, Alabama
Predicate: areaCode
Object: 334

Triple: ['__subject__ Auburn, Alabama __predicate__ areaCode __object__ 334']
Text: The area code for Auburn, Alabama is 334.
Subject: Auburn, Alabama
Predicate: areaCode
Object: 334

Triple: ['__subject__ Auburn, Alabama __predicate__ areaOfWater __object__ 1.7 (square kilometres)']
Text: 1.7 square kilometres is the area of water in Auburn, Alabama.
Subject: Auburn, Alabama
Predicate: areaOfWater
Object: 1.7 (square kilometres)

Triple: ['__subject__ Auburn, Alabama __predicate__ areaOfWater __object__ 1.7 (square kilometres)']
Text: Auburn, Alabama has an area of water that is 1.7 km.
Subject: Auburn, Alabama
Predicate: areaOfWater
Object: 1.7 (square kilometres)

Triple: ['__subject__ Auburn, Alabama __predicate__ areaOfWater __object__ 1.7 (square kilometres)']
Text: There is a total area of 1.7 square kilometres of water in Auburn, Alabama.
Subject: Auburn, Alabama
Predicate: areaOfWater
Object: 1.7 (square kilometres)

Triple: ['__subject__ Auburn, Alabama __predicate__ areaTotal __object__ 140.8 (square kilometres)']
Text: The total area of the city Auburn, in Alabama, is 140.8 square kilometres.
Subject: Auburn, Alabama
Predicate: areaTotal
Object: 140.8 (square kilometres)

Triple: ['__subject__ Auburn, Alabama __predicate__ areaTotal __object__ 140.8 (square kilometres)']
Text: The total area of Auburn, Alabama is 140.8 Sq Km.
Subject: Auburn, Alabama
Predicate: areaTotal
Object: 140.8 (square kilometres)

Triple: ['__subject__ Auburn, Alabama __predicate__ areaTotal __object__ 140.8 (square kilometres)']
Text: The total area of Auburn, Alabama is 140.8 square kilometres.
Subject: Auburn, Alabama
Predicate: areaTotal
Object: 140.8 (square kilometres)

Triple: ['__subject__ Auburn, Alabama __predicate__ country __object__ United States']
Text: Auburn, Alabama is in the United States.
Subject: Auburn, Alabama
Predicate: country
Object: United States

Triple: ['__subject__ Auburn, Alabama __predicate__ country __object__ United States']
Text: Auburn Alabama is in the United States.
Subject: Auburn, Alabama
Predicate: country
Object: United States

Triple: ['__subject__ Auburn, Alabama __predicate__ country __object__ United States']
Text: Auburn, Alabama is located in the United States.
Subject: Auburn, Alabama
Predicate: country
Object: United States

Triple: ['__subject__ Auburn, Alabama __predicate__ elevationAboveTheSeaLevel __object__ 214.0']
Text: Auburn Alabama has an elevation above sea level of 214.
Subject: Auburn, Alabama
Predicate: elevationAboveTheSeaLevel
Object: 214.0

Triple: ['__subject__ Auburn, Alabama __predicate__ elevationAboveTheSeaLevel __object__ 214.0']
Text: Auburn, Alabama is located at 214.0 above sea level.
Subject: Auburn, Alabama
Predicate: elevationAboveTheSeaLevel
Object: 214.0

Triple: ['__subject__ Auburn, Alabama __predicate__ populationDensity __object__ 368.65 (inhabitants per square kilometre)']
Text: Population density in Auburn, Alabama is 368.65 inhabitants per square kilometre.
Subject: Auburn, Alabama
Predicate: populationDensity
Object: 368.65 (inhabitants per square kilometre)

Triple: ['__subject__ Auburn, Alabama __predicate__ populationDensity __object__ 368.65 (inhabitants per square kilometre)']
Text: Auburn, Alabama has a population density of 368.65 inhabitants per sq km.
Subject: Auburn, Alabama
Predicate: populationDensity
Object: 368.65 (inhabitants per square kilometre)

Triple: ['__subject__ Auburn, Alabama __predicate__ populationDensity __object__ 368.65 (inhabitants per square kilometre)']
Text: The population density of the city, Auburn in Alabama is 368.65 (inhabitants per square kilometre).
Subject: Auburn, Alabama
Predicate: populationDensity
Object: 368.65 (inhabitants per square kilometre)

Triple: ['__subject__ Auburn, Washington __predicate__ country __object__ United States']
Text: Auburn, Washington is in the U.S.
Subject: Auburn, Washington
Predicate: country
Object: United States

Triple: ['__subject__ Auburn, Washington __predicate__ country __object__ United States']
Text: Auburn, Washington is located within the United States.
Subject: Auburn, Washington
Predicate: country
Object: United States

Triple: ['__subject__ Auburn, Washington __predicate__ isPartOf __object__ King County, Washington']
Text: King County is the location of Auburn, Washington.
Subject: Auburn, Washington
Predicate: isPartOf
Object: King County, Washington

Triple: ['__subject__ Auburn, Washington __predicate__ isPartOf __object__ King County, Washington']
Text: Auburn is part of King County in Washington.
Subject: Auburn, Washington
Predicate: isPartOf
Object: King County, Washington

Triple: ['__subject__ Auburn, Washington __predicate__ isPartOf __object__ King County, Washington']
Text: Auburn is part of King County, Washington.
Subject: Auburn, Washington
Predicate: isPartOf
Object: King County, Washington

Triple: ['__subject__ Auburn, Washington __predicate__ isPartOf __object__ Pierce County, Washington']
Text: Auburn is in Pierce County, Washington.
Subject: Auburn, Washington
Predicate: isPartOf
Object: Pierce County, Washington

Triple: ['__subject__ Auburn, Washington __predicate__ isPartOf __object__ Pierce County, Washington']
Text: Auburn forms part of Pierce County, Washington.
Subject: Auburn, Washington
Predicate: isPartOf
Object: Pierce County, Washington

Triple: ['__subject__ Auburn, Washington __predicate__ isPartOf __object__ Pierce County, Washington']
Text: Auburn is part of Pierce County, Washington.
Subject: Auburn, Washington
Predicate: isPartOf
Object: Pierce County, Washington

Triple: ['__subject__ Auburn, Washington __predicate__ isPartOf __object__ United States']
Text: Auburn, Washington is part of the U.S.
Subject: Auburn, Washington
Predicate: isPartOf
Object: United States

Triple: ['__subject__ Auburn, Washington __predicate__ isPartOf __object__ United States']
Text: Auburn, Washington is part of the United States.
Subject: Auburn, Washington
Predicate: isPartOf
Object: United States

Triple: ['__subject__ Auburn, Washington __predicate__ isPartOf __object__ Washington (state)']
Text: Auburn is part of Washington state.
Subject: Auburn, Washington
Predicate: isPartOf
Object: Washington (state)

Triple: ['__subject__ Auburn, Washington __predicate__ isPartOf __object__ Washington (state)']
Text: Auburn is located within the state of Washington.
Subject: Auburn, Washington
Predicate: isPartOf
Object: Washington (state)

Triple: ['__subject__ Auburn, Washington __predicate__ isPartOf __object__ Washington (state)']
Text: Auburn is part of Washington (state).
Subject: Auburn, Washington
Predicate: isPartOf
Object: Washington (state)

Triple: ['__subject__ Auburn, Washington __predicate__ leaderTitle __object__ Mayor']
Text: Mayor is the title of the leader of Auburn, in Washington.
Subject: Auburn, Washington
Predicate: leaderTitle
Object: Mayor

Triple: ['__subject__ Auburn, Washington __predicate__ leaderTitle __object__ Mayor']
Text: The Mayor is the leader in Auburn, Washington.
Subject: Auburn, Washington
Predicate: leaderTitle
Object: Mayor

Triple: ['__subject__ Auburn, Washington __predicate__ leaderTitle __object__ Mayor']
Text: The title of the leader in Auburn, Washington is the Mayor.
Subject: Auburn, Washington
Predicate: leaderTitle
Object: Mayor

Triple: ['__subject__ Auburn, Washington __predicate__ populationDensity __object__ 914.8 (inhabitants per square kilometre)']
Text: Auburn, Washington has a population density of 914.8 inhabitants per square kilometre.
Subject: Auburn, Washington
Predicate: populationDensity
Object: 914.8 (inhabitants per square kilometre)

Triple: ['__subject__ Auburn, Washington __predicate__ populationDensity __object__ 914.8 (inhabitants per square kilometre)']
Text: The population density, of Auburn (Washington), is 914.8 inhabitants per square kilometre.
Subject: Auburn, Washington
Predicate: populationDensity
Object: 914.8 (inhabitants per square kilometre)

Triple: ['__subject__ Auburn, Washington __predicate__ populationDensity __object__ 914.8 (inhabitants per square kilometre)']
Text: The population density of Auburn, Washington, is 914.8 inhabitants per sq km.
Subject: Auburn, Washington
Predicate: populationDensity
Object: 914.8 (inhabitants per square kilometre)

Triple: ['__subject__ Austin, Texas __predicate__ areaCode __object__ 512']
Text: The area code of Austin (Texas), is 512.
Subject: Austin, Texas
Predicate: areaCode
Object: 512

Triple: ['__subject__ Austin, Texas __predicate__ areaCode __object__ 512']
Text: The area code for Austin, Texas is 512.
Subject: Austin, Texas
Predicate: areaCode
Object: 512

Triple: ['__subject__ Austin, Texas __predicate__ areaCode __object__ 512']
Text: The area code of Austin, Texas, is 512.
Subject: Austin, Texas
Predicate: areaCode
Object: 512

Triple: ['__subject__ Austin, Texas __predicate__ areaCode __object__ 512, 737']
Text: The ares codes of Austin (Texas) are 512 and 737.
Subject: Austin, Texas
Predicate: areaCode
Object: 512, 737

Triple: ['__subject__ Austin, Texas __predicate__ areaOfLand __object__ 686.0 (square kilometres)']
Text: Austin, Texas has a land area of 686 square kilometres.
Subject: Austin, Texas
Predicate: areaOfLand
Object: 686.0 (square kilometres)

Triple: ['__subject__ Austin, Texas __predicate__ areaOfLand __object__ 686.0 (square kilometres)']
Text: Austin, Texas has a area of land that measures 686.0 (square kilometers).
Subject: Austin, Texas
Predicate: areaOfLand
Object: 686.0 (square kilometres)

Triple: ['__subject__ Austin, Texas __predicate__ areaOfLand __object__ 686.0 (square kilometres)']
Text: Austin, Texas covers 686.0 square kilometres of land.
Subject: Austin, Texas
Predicate: areaOfLand
Object: 686.0 (square kilometres)

Triple: ['__subject__ Austin, Texas __predicate__ areaTotal __object__ 703.95 (square kilometres)']
Text: The area of Austin, Texas is 703.95 (square kilometres).
Subject: Austin, Texas
Predicate: areaTotal
Object: 703.95 (square kilometres)

Triple: ['__subject__ Austin, Texas __predicate__ areaTotal __object__ 703.95 (square kilometres)']
Text: Austin, Texas has a total area of 703.95 square kilometres.
Subject: Austin, Texas
Predicate: areaTotal
Object: 703.95 (square kilometres)

Triple: ['__subject__ Austin, Texas __predicate__ country __object__ United States']
Text: Austin, Texas is in the United States.
Subject: Austin, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Austin, Texas __predicate__ country __object__ United States']
Text: Austin, Texas is located within the country of the United States.
Subject: Austin, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Austin, Texas __predicate__ country __object__ United States']
Text: The country of Austin, Texas, is United States.
Subject: Austin, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Austin, Texas __predicate__ isPartOf __object__ Hays County, Texas']
Text: Austin is in Hays County, Texas.
Subject: Austin, Texas
Predicate: isPartOf
Object: Hays County, Texas

Triple: ['__subject__ Austin, Texas __predicate__ isPartOf __object__ Hays County, Texas']
Text: Austin is a part of Hays County in Texas.
Subject: Austin, Texas
Predicate: isPartOf
Object: Hays County, Texas

Triple: ['__subject__ Austin, Texas __predicate__ isPartOf __object__ Hays County, Texas']
Text: Austin, Texas, is part of Hays County Texas.
Subject: Austin, Texas
Predicate: isPartOf
Object: Hays County, Texas

Triple: ['__subject__ Austin, Texas __predicate__ isPartOf __object__ Travis County, Texas']
Text: Austin is part of Travis County, in Texas.
Subject: Austin, Texas
Predicate: isPartOf
Object: Travis County, Texas

Triple: ['__subject__ Austin, Texas __predicate__ isPartOf __object__ Travis County, Texas']
Text: Austin is located in Travis County, Texas.
Subject: Austin, Texas
Predicate: isPartOf
Object: Travis County, Texas

Triple: ['__subject__ Austin, Texas __predicate__ isPartOf __object__ Travis County, Texas']
Text: Austin is part of Travis County, Texas.
Subject: Austin, Texas
Predicate: isPartOf
Object: Travis County, Texas

Triple: ['__subject__ Austin, Texas __predicate__ isPartOf __object__ Williamson County, Texas']
Text: Austin is part of Williamson County, in Texas.
Subject: Austin, Texas
Predicate: isPartOf
Object: Williamson County, Texas

Triple: ['__subject__ Austin, Texas __predicate__ isPartOf __object__ Williamson County, Texas']
Text: Austin Texas is part of Williamson County.
Subject: Austin, Texas
Predicate: isPartOf
Object: Williamson County, Texas

Triple: ['__subject__ Austin, Texas __predicate__ isPartOf __object__ Williamson County, Texas']
Text: Austin is part of Williamson County, Texas.
Subject: Austin, Texas
Predicate: isPartOf
Object: Williamson County, Texas

Triple: ['__subject__ Austin, Texas __predicate__ leaderTitle __object__ City Manager']
Text: The city manager is the leader of Austin, Texas.
Subject: Austin, Texas
Predicate: leaderTitle
Object: City Manager

Triple: ['__subject__ Austin, Texas __predicate__ leaderTitle __object__ City Manager']
Text: The City Manager leads Austin, Texas.
Subject: Austin, Texas
Predicate: leaderTitle
Object: City Manager

Triple: ['__subject__ Austin, Texas __predicate__ leaderTitle __object__ Mayor']
Text: The leader in Austin Texas is the Mayor.
Subject: Austin, Texas
Predicate: leaderTitle
Object: Mayor

Triple: ['__subject__ Austin, Texas __predicate__ leaderTitle __object__ Mayor']
Text: The leader of Austin, Texas is called the Mayor.
Subject: Austin, Texas
Predicate: leaderTitle
Object: Mayor

Triple: ['__subject__ Austin, Texas __predicate__ leaderTitle __object__ Mayor']
Text: Austin Texas is led by a Mayor.
Subject: Austin, Texas
Predicate: leaderTitle
Object: Mayor

Triple: ['__subject__ Austin, Texas __predicate__ populationDensity __object__ 1296.65 (inhabitants per square kilometre)']
Text: The population density, of Austin (Texas), is 1296.65 inhabitants per square kilometre.
Subject: Austin, Texas
Predicate: populationDensity
Object: 1296.65 (inhabitants per square kilometre)

Triple: ['__subject__ Austin, Texas __predicate__ populationDensity __object__ 1296.65 (inhabitants per square kilometre)']
Text: Austin in Texas has a population of 1296.65 people per square kilometer.
Subject: Austin, Texas
Predicate: populationDensity
Object: 1296.65 (inhabitants per square kilometre)

Triple: ['__subject__ Austin, Texas __predicate__ populationDensity __object__ 1296.65 (inhabitants per square kilometre)']
Text: The population density of Austin, Texas, is 1296.65 inhabitants per sq km.
Subject: Austin, Texas
Predicate: populationDensity
Object: 1296.65 (inhabitants per square kilometre)

Triple: ['__subject__ Benton County, Oregon __predicate__ largestCity __object__ Corvallis, Oregon']
Text: Corvallis is the largest city in Benton County, Oregon.
Subject: Benton County, Oregon
Predicate: largestCity
Object: Corvallis, Oregon

Triple: ['__subject__ Benton County, Oregon __predicate__ largestCity __object__ Corvallis, Oregon']
Text: The largest city in Benton County, Oregon, is Corvallis, Oregon.
Subject: Benton County, Oregon
Predicate: largestCity
Object: Corvallis, Oregon

Triple: ['__subject__ Benton County, Oregon __predicate__ largestCity __object__ Corvallis, Oregon']
Text: The largest city in Benton County Oregon is Corvallis.
Subject: Benton County, Oregon
Predicate: largestCity
Object: Corvallis, Oregon

Triple: ['__subject__ California __predicate__ language __object__ Chinese language']
Text: Chinese is one of the languages spoken in California.
Subject: California
Predicate: language
Object: Chinese language

Triple: ['__subject__ California __predicate__ language __object__ Chinese language']
Text: Some parts of California speak Chinese.
Subject: California
Predicate: language
Object: Chinese language

Triple: ['__subject__ California __predicate__ language __object__ Chinese language']
Text: The Chinese language is spoken in California.
Subject: California
Predicate: language
Object: Chinese language

Triple: ['__subject__ California __predicate__ language __object__ English language']
Text: The English language is spoken in California.
Subject: California
Predicate: language
Object: English language

Triple: ['__subject__ California __predicate__ language __object__ English language']
Text: English is spoken in California.
Subject: California
Predicate: language
Object: English language

Triple: ['__subject__ California __predicate__ language __object__ Vietnamese language']
Text: Vietnamese is a language spoken in California.
Subject: California
Predicate: language
Object: Vietnamese language

Triple: ['__subject__ California __predicate__ language __object__ Vietnamese language']
Text: One of the languages spoken in California is Vietnamese.
Subject: California
Predicate: language
Object: Vietnamese language

Triple: ['__subject__ California __predicate__ language __object__ Vietnamese language']
Text: Vietnamese is one of the languages being spoken in California.
Subject: California
Predicate: language
Object: Vietnamese language

Triple: ['__subject__ California State Assembly __predicate__ isPartOf __object__ California State Legislature']
Text: The California State Assembly is part of the California State Legislature.
Subject: California State Assembly
Predicate: isPartOf
Object: California State Legislature

Triple: ['__subject__ California State Assembly __predicate__ location __object__ California State Capitol']
Text: The California State Assembly is located in the California State Capitol.
Subject: California State Assembly
Predicate: location
Object: California State Capitol

Triple: ['__subject__ California State Assembly __predicate__ location __object__ California State Capitol']
Text: The California State Assembly is in the California State Capitol.
Subject: California State Assembly
Predicate: location
Object: California State Capitol

Triple: ['__subject__ California State Assembly __predicate__ location __object__ California State Capitol']
Text: The California State Assembly is located at the California State Capitol.
Subject: California State Assembly
Predicate: location
Object: California State Capitol

Triple: ['__subject__ California State Senate __predicate__ isPartOf __object__ California State Legislature']
Text: The California State Senate is part of the California State Legislature.
Subject: California State Senate
Predicate: isPartOf
Object: California State Legislature

Triple: ['__subject__ California State Senate __predicate__ isPartOf __object__ California State Legislature']
Text: The senate in California is part of the California State Legislature.
Subject: California State Senate
Predicate: isPartOf
Object: California State Legislature

Triple: ['__subject__ California State Senate __predicate__ location __object__ California State Capitol']
Text: The California State Senate is located at the California State Capitol.
Subject: California State Senate
Predicate: location
Object: California State Capitol

Triple: ['__subject__ California State Senate __predicate__ location __object__ California State Capitol']
Text: The California State Senate is located in the California State Capitol.
Subject: California State Senate
Predicate: location
Object: California State Capitol

Triple: ['__subject__ Contra Costa County, California __predicate__ isPartOf __object__ San Francisco Bay Area']
Text: Contra Costa County is part of the San Francisco Bay area, in California.
Subject: Contra Costa County, California
Predicate: isPartOf
Object: San Francisco Bay Area

Triple: ['__subject__ Contra Costa County, California __predicate__ isPartOf __object__ San Francisco Bay Area']
Text: Contra Costa County in California is part of the San Francisco Bay Area.
Subject: Contra Costa County, California
Predicate: isPartOf
Object: San Francisco Bay Area

Triple: ['__subject__ DeKalb County, Georgia __predicate__ country __object__ United States']
Text: DeKalb County, Georgia, is located in the United States.
Subject: DeKalb County, Georgia
Predicate: country
Object: United States

Triple: ['__subject__ DeKalb County, Georgia __predicate__ country __object__ United States']
Text: DeKalb County, Georgia is located within the United States.
Subject: DeKalb County, Georgia
Predicate: country
Object: United States

Triple: ['__subject__ DeKalb County, Georgia __predicate__ country __object__ United States']
Text: DeKalb County, Georgia is in the United States.
Subject: DeKalb County, Georgia
Predicate: country
Object: United States

Triple: ['__subject__ Democratic Party (United States) __predicate__ chairperson __object__ Debbie Wasserman Schultz']
Text: The chair of the Democratic Party in the United States is Debbie Wasserman Schultz.
Subject: Democratic Party (United States)
Predicate: chairperson
Object: Debbie Wasserman Schultz

Triple: ['__subject__ Democratic Party (United States) __predicate__ headquarter __object__ South Capitol Street']
Text: The Democratic Party of the U.S. headquarters on South Capitol Street.
Subject: Democratic Party (United States)
Predicate: headquarter
Object: South Capitol Street

Triple: ['__subject__ Democratic Party (United States) __predicate__ headquarter __object__ South Capitol Street']
Text: The headquarters of the Democratic Party (United States) is at South Capitol Street.
Subject: Democratic Party (United States)
Predicate: headquarter
Object: South Capitol Street

Triple: ['__subject__ Democratic Party (United States) __predicate__ headquarter __object__ Washington, D.C.']
Text: The Democratic Party headquarters are in Washington, D.C.
Subject: Democratic Party (United States)
Predicate: headquarter
Object: Washington, D.C.

Triple: ['__subject__ Democratic Party (United States) __predicate__ headquarter __object__ Washington, D.C.']
Text: The Democratic Party (U.S.) is headquartered in Washington, D.C.
Subject: Democratic Party (United States)
Predicate: headquarter
Object: Washington, D.C.

Triple: ['__subject__ Fall Creek Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Fall Creek Township, Madison County, Indiana is located in the U.S.
Subject: Fall Creek Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Fall Creek Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Fall Creek Township, Madison County, Indiana is within the United States.
Subject: Fall Creek Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Fall Creek Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Fall Creek Township, Madison County, Indiana is in the country United States.
Subject: Fall Creek Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Fountain County, Indiana __predicate__ country __object__ United States']
Text: Fountain County is in Indiana, in the United States.
Subject: Fountain County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Fountain County, Indiana __predicate__ country __object__ United States']
Text: Fountain County is in Indiana in the U.S.
Subject: Fountain County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Fountain County, Indiana __predicate__ country __object__ United States']
Text: Fountain County, Indiana is located within the United States.
Subject: Fountain County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Fountain County, Indiana __predicate__ countySeat __object__ Covington, Indiana']
Text: Covington is the County seat of Fountain County, in Indiana.
Subject: Fountain County, Indiana
Predicate: countySeat
Object: Covington, Indiana

Triple: ['__subject__ Fountain County, Indiana __predicate__ countySeat __object__ Covington, Indiana']
Text: Covington is the county seat of Fountain County, Indiana.
Subject: Fountain County, Indiana
Predicate: countySeat
Object: Covington, Indiana

Triple: ['__subject__ Fulton County, Georgia __predicate__ countySeat __object__ Atlanta']
Text: Atlanta is the county seat of Fulton County, Georgia.
Subject: Fulton County, Georgia
Predicate: countySeat
Object: Atlanta

Triple: ['__subject__ Georgia (U.S. state) __predicate__ capital __object__ Atlanta']
Text: The capital of Georgia is Atlanta.
Subject: Georgia (U.S. state)
Predicate: capital
Object: Atlanta

Triple: ['__subject__ Georgia (U.S. state) __predicate__ capital __object__ Atlanta']
Text: Atlanta is the capital of the U.S. state of Georgia.
Subject: Georgia (U.S. state)
Predicate: capital
Object: Atlanta

Triple: ['__subject__ Georgia (U.S. state) __predicate__ capital __object__ Atlanta']
Text: Atlanta is the capital of Georgia, United States.
Subject: Georgia (U.S. state)
Predicate: capital
Object: Atlanta

Triple: ['__subject__ Hays County, Texas __predicate__ countySeat __object__ San Marcos, Texas']
Text: San Marcos is the county seat of Hays County, Texas.
Subject: Hays County, Texas
Predicate: countySeat
Object: San Marcos, Texas

Triple: ['__subject__ Hays County, Texas __predicate__ countySeat __object__ San Marcos, Texas']
Text: Hays County Texas county seat is San Marcos Texas.
Subject: Hays County, Texas
Predicate: countySeat
Object: San Marcos, Texas

Triple: ['__subject__ Hays County, Texas __predicate__ largestCity __object__ San Marcos, Texas']
Text: The largest city in Hays County, Texas is San Marcos.
Subject: Hays County, Texas
Predicate: largestCity
Object: San Marcos, Texas

Triple: ['__subject__ Hays County, Texas __predicate__ largestCity __object__ San Marcos, Texas']
Text: San Marcos is the largest city in Hays County, Texas.
Subject: Hays County, Texas
Predicate: largestCity
Object: San Marcos, Texas

Triple: ['__subject__ Indiana __predicate__ country __object__ United States']
Text: Indiana is the United States.
Subject: Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Indiana __predicate__ country __object__ United States']
Text: Indiana is in the U.S.
Subject: Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Indiana __predicate__ country __object__ United States']
Text: Indiana is located within the United States.
Subject: Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Indiana __predicate__ language __object__ English Americans']
Text: In Indiana, the language spoken is American English.
Subject: Indiana
Predicate: language
Object: English Americans

Triple: ['__subject__ Indiana __predicate__ language __object__ English Americans']
Text: The language in Indiana is American English.
Subject: Indiana
Predicate: language
Object: English Americans

Triple: ['__subject__ Jones County, Texas __predicate__ country __object__ United States']
Text: Jones County, Texas is in the United States.
Subject: Jones County, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Jones County, Texas __predicate__ country __object__ United States']
Text: Jones County, Texas is within the United States.
Subject: Jones County, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Jones County, Texas __predicate__ country __object__ United States']
Text: Jones County, Texas is located in the United States.
Subject: Jones County, Texas
Predicate: country
Object: United States

Triple: ['__subject__ King County, Washington __predicate__ country __object__ United States']
Text: King County Washington is in the U.S.
Subject: King County, Washington
Predicate: country
Object: United States

Triple: ['__subject__ King County, Washington __predicate__ country __object__ United States']
Text: King County, Washington is located in the United States.
Subject: King County, Washington
Predicate: country
Object: United States

Triple: ['__subject__ King County, Washington __predicate__ country __object__ United States']
Text: King County, Washington is located within the United States.
Subject: King County, Washington
Predicate: country
Object: United States

Triple: ['__subject__ King County, Washington __predicate__ largestCity __object__ Seattle']
Text: Seattle is the largest city in King County, in Washington.
Subject: King County, Washington
Predicate: largestCity
Object: Seattle

Triple: ['__subject__ King County, Washington __predicate__ largestCity __object__ Seattle']
Text: Seattle is the largest city in King County Washington.
Subject: King County, Washington
Predicate: largestCity
Object: Seattle

Triple: ['__subject__ King County, Washington __predicate__ largestCity __object__ Seattle']
Text: Seattle is the largest city in King County, Washington.
Subject: King County, Washington
Predicate: largestCity
Object: Seattle

Triple: ['__subject__ Lafayette Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Lafayette Township, Madison County, Indiana is part of the United States.
Subject: Lafayette Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Lafayette Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Lafayette Township, Madison County, Indiana is situated within the United States.
Subject: Lafayette Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Lee County, Alabama __predicate__ country __object__ United States']
Text: Lee County in Alabama is in the U.S.
Subject: Lee County, Alabama
Predicate: country
Object: United States

Triple: ['__subject__ Lee County, Alabama __predicate__ country __object__ United States']
Text: Lee County, Alabama, is within the United States.
Subject: Lee County, Alabama
Predicate: country
Object: United States

Triple: ['__subject__ Lee County, Alabama __predicate__ country __object__ United States']
Text: Lee County in Alabama is located within the United States.
Subject: Lee County, Alabama
Predicate: country
Object: United States

Triple: ['__subject__ Lee County, Alabama __predicate__ countySeat __object__ Opelika, Alabama']
Text: Opelika is the county seat of Lee County, Alabama.
Subject: Lee County, Alabama
Predicate: countySeat
Object: Opelika, Alabama

Triple: ['__subject__ Linn County, Oregon __predicate__ largestCity __object__ Albany, Oregon']
Text: Albany is the largest city in Linn County, Oregon.
Subject: Linn County, Oregon
Predicate: largestCity
Object: Albany, Oregon

Triple: ['__subject__ Linn County, Oregon __predicate__ largestCity __object__ Albany, Oregon']
Text: Albany is the largest city in Linn county which is in Oregon.
Subject: Linn County, Oregon
Predicate: largestCity
Object: Albany, Oregon

Triple: ['__subject__ Linn County, Oregon __predicate__ largestCity __object__ Albany, Oregon']
Text: The largest city in Linn County, Oregon, is Albany.
Subject: Linn County, Oregon
Predicate: largestCity
Object: Albany, Oregon

Triple: ['__subject__ Madison County, Indiana __predicate__ country __object__ United States']
Text: Madison County is in Indiana, which is in the United States.
Subject: Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Madison County, Indiana __predicate__ country __object__ United States']
Text: Madison County, Indiana is in the country of the United States.
Subject: Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Madison County, Indiana __predicate__ country __object__ United States']
Text: Madison County, Indiana, is located in the United States.
Subject: Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Madison County, Indiana __predicate__ largestCity __object__ Anderson, Indiana']
Text: Anderson is the largest city in Madison County, Indiana.
Subject: Madison County, Indiana
Predicate: largestCity
Object: Anderson, Indiana

Triple: ['__subject__ Madison County, Indiana __predicate__ largestCity __object__ Anderson, Indiana']
Text: Anderson is the largest city of Madison County, Indiana.
Subject: Madison County, Indiana
Predicate: largestCity
Object: Anderson, Indiana

Triple: ['__subject__ Michigan __predicate__ capital __object__ Lansing, Michigan']
Text: Lansing is the capital of Michigan.
Subject: Michigan
Predicate: capital
Object: Lansing, Michigan

Triple: ['__subject__ Michigan __predicate__ capital __object__ Lansing, Michigan']
Text: The capital of Michigan is Lansing.
Subject: Michigan
Predicate: capital
Object: Lansing, Michigan

Triple: ['__subject__ Michigan __predicate__ language __object__ Arabic']
Text: Arabic is a language found in Michigan.
Subject: Michigan
Predicate: language
Object: Arabic

Triple: ['__subject__ Michigan __predicate__ language __object__ Arabic']
Text: Arabic is spoken in Michigan.
Subject: Michigan
Predicate: language
Object: Arabic

Triple: ['__subject__ Michigan __predicate__ language __object__ Arabic']
Text: The language used in Michigan is Arabic.
Subject: Michigan
Predicate: language
Object: Arabic

Triple: ['__subject__ Michigan __predicate__ language __object__ English language']
Text: The English language is spoken in Michigan.
Subject: Michigan
Predicate: language
Object: English language

Triple: ['__subject__ Michigan __predicate__ language __object__ English language']
Text: English is the language spoken in Michigan.
Subject: Michigan
Predicate: language
Object: English language

Triple: ['__subject__ Michigan __predicate__ language __object__ Spanish language']
Text: Spanish is one of the languages spoken in Michigan.
Subject: Michigan
Predicate: language
Object: Spanish language

Triple: ['__subject__ Michigan __predicate__ language __object__ Spanish language']
Text: Spanish is a language spoken in Michigan.
Subject: Michigan
Predicate: language
Object: Spanish language

Triple: ['__subject__ Michigan __predicate__ language __object__ Spanish language']
Text: The Spanish language is spoken in Michigan.
Subject: Michigan
Predicate: language
Object: Spanish language

Triple: ['__subject__ Monroe Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Monroe Township, Madison County, Indiana is in the U.S.
Subject: Monroe Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Monroe Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Monroe Township, Madison County, Indiana is situated within the United States.
Subject: Monroe Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Monroe Township, Madison County, Indiana __predicate__ isPartOf __object__ Indiana']
Text: Monroe Township is in Madison County which is a part of Indiana.
Subject: Monroe Township, Madison County, Indiana
Predicate: isPartOf
Object: Indiana

Triple: ['__subject__ Monroe Township, Madison County, Indiana __predicate__ isPartOf __object__ Indiana']
Text: Monroe Township, Madison County is in Indiana.
Subject: Monroe Township, Madison County, Indiana
Predicate: isPartOf
Object: Indiana

Triple: ['__subject__ Monroe Township, Madison County, Indiana __predicate__ isPartOf __object__ Madison County, Indiana']
Text: Monroe Township is part of Madison County in Indiana.
Subject: Monroe Township, Madison County, Indiana
Predicate: isPartOf
Object: Madison County, Indiana

Triple: ['__subject__ Monroe Township, Madison County, Indiana __predicate__ isPartOf __object__ Madison County, Indiana']
Text: Monroe Township is a part of Madison County in Indiana.
Subject: Monroe Township, Madison County, Indiana
Predicate: isPartOf
Object: Madison County, Indiana

Triple: ['__subject__ Monroe Township, Madison County, Indiana __predicate__ isPartOf __object__ Madison County, Indiana']
Text: Monroe Township is part of Madison County, Indiana.
Subject: Monroe Township, Madison County, Indiana
Predicate: isPartOf
Object: Madison County, Indiana

Triple: ['__subject__ New Jersey __predicate__ country __object__ United States']
Text: New Jersey is in the United States.
Subject: New Jersey
Predicate: country
Object: United States

Triple: ['__subject__ New Jersey __predicate__ country __object__ United States']
Text: New Jersey is located within the United States.
Subject: New Jersey
Predicate: country
Object: United States

Triple: ['__subject__ New Jersey __predicate__ largestCity __object__ Newark, New Jersey']
Text: Newark is the largest city of New Jersey.
Subject: New Jersey
Predicate: largestCity
Object: Newark, New Jersey

Triple: ['__subject__ New Jersey __predicate__ largestCity __object__ Newark, New Jersey']
Text: The largest city in New Jersey is Newark.
Subject: New Jersey
Predicate: largestCity
Object: Newark, New Jersey

Triple: ['__subject__ New Mexico __predicate__ language __object__ Navajo language']
Text: The Navajo language, is one of the languages spoken in New Mexico.
Subject: New Mexico
Predicate: language
Object: Navajo language

Triple: ['__subject__ New Mexico __predicate__ language __object__ Navajo language']
Text: The Navajo language is spoken in New Mexico.
Subject: New Mexico
Predicate: language
Object: Navajo language

Triple: ['__subject__ New Mexico __predicate__ language __object__ Navajo language']
Text: Navajo is a language in New Mexico.
Subject: New Mexico
Predicate: language
Object: Navajo language

Triple: ['__subject__ New Mexico House of Representatives __predicate__ leader __object__ Don Tripp']
Text: The leader of New Mexico's House of Representatives is Don Tripp.
Subject: New Mexico House of Representatives
Predicate: leader
Object: Don Tripp

Triple: ['__subject__ New Mexico House of Representatives __predicate__ leader __object__ Don Tripp']
Text: Don Tripp leads the New Mexico House of representatives.
Subject: New Mexico House of Representatives
Predicate: leader
Object: Don Tripp

Triple: ['__subject__ New Mexico Senate __predicate__ leader __object__ John Sánchez']
Text: John Sánchez, is one of the leaders, in the New Mexico Senate.
Subject: New Mexico Senate
Predicate: leader
Object: John Sánchez

Triple: ['__subject__ New Mexico Senate __predicate__ leader __object__ John Sánchez']
Text: John Sanchez is the Senate leader of New Mexico.
Subject: New Mexico Senate
Predicate: leader
Object: John Sánchez

Triple: ['__subject__ Orange County, California __predicate__ isPartOf __object__ Greater Los Angeles Area']
Text: Orange County, California is part of the Greater Los Angeles area.
Subject: Orange County, California
Predicate: isPartOf
Object: Greater Los Angeles Area

Triple: ['__subject__ Orange County, California __predicate__ isPartOf __object__ Greater Los Angeles Area']
Text: Orange County, is part of the greater Los Angeles area, in California.
Subject: Orange County, California
Predicate: isPartOf
Object: Greater Los Angeles Area

Triple: ['__subject__ Orange County, California __predicate__ isPartOf __object__ Greater Los Angeles Area']
Text: Orange County in California is part of the Greater Los Angeles area.
Subject: Orange County, California
Predicate: isPartOf
Object: Greater Los Angeles Area

Triple: ['__subject__ Oregon __predicate__ capital __object__ Salem, Oregon']
Text: Salem is the capital of Oregon.
Subject: Oregon
Predicate: capital
Object: Salem, Oregon

Triple: ['__subject__ Pierce County, Washington __predicate__ country __object__ United States']
Text: Pierce County, Washington is in the United States.
Subject: Pierce County, Washington
Predicate: country
Object: United States

Triple: ['__subject__ Pierce County, Washington __predicate__ country __object__ United States']
Text: Pierce County, Washington is located within the United States.
Subject: Pierce County, Washington
Predicate: country
Object: United States

Triple: ['__subject__ Pierce County, Washington __predicate__ country __object__ United States']
Text: The country of Pierce County, Washington, is United States.
Subject: Pierce County, Washington
Predicate: country
Object: United States

Triple: ['__subject__ Pierce County, Washington __predicate__ largestCity __object__ Tacoma, Washington']
Text: Pierce County is the largest city in Tacoma, Washington.
Subject: Pierce County, Washington
Predicate: largestCity
Object: Tacoma, Washington

Triple: ['__subject__ Pierce County, Washington __predicate__ largestCity __object__ Tacoma, Washington']
Text: Tacoma, Washington, is the largest city in Pierce County.
Subject: Pierce County, Washington
Predicate: largestCity
Object: Tacoma, Washington

Triple: ['__subject__ Potter County, Texas __predicate__ country __object__ United States']
Text: Potter County is in Texas, in the United States.
Subject: Potter County, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Potter County, Texas __predicate__ country __object__ United States']
Text: Potter County, Texas is in the US.
Subject: Potter County, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Potter County, Texas __predicate__ country __object__ United States']
Text: Potter County, Texas is located within the United States.
Subject: Potter County, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Potter County, Texas __predicate__ countySeat __object__ Amarillo, Texas']
Text: Amarillo is the county seat of Potter County which is in Texas.
Subject: Potter County, Texas
Predicate: countySeat
Object: Amarillo, Texas

Triple: ['__subject__ Potter County, Texas __predicate__ countySeat __object__ Amarillo, Texas']
Text: Amarillo is the county seat for Potter County, Texas.
Subject: Potter County, Texas
Predicate: countySeat
Object: Amarillo, Texas

Triple: ['__subject__ Randall County, Texas __predicate__ country __object__ United States']
Text: Randall County is in Texas, in the United States.
Subject: Randall County, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Randall County, Texas __predicate__ country __object__ United States']
Text: Randall County is located in Texas, United States.
Subject: Randall County, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Randall County, Texas __predicate__ country __object__ United States']
Text: Randall County in Texas is located within the United States.
Subject: Randall County, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Randall County, Texas __predicate__ countySeat __object__ Canyon, Texas']
Text: Canyon, is the county seat of Randall County, which is in Texas.
Subject: Randall County, Texas
Predicate: countySeat
Object: Canyon, Texas

Triple: ['__subject__ Randall County, Texas __predicate__ countySeat __object__ Canyon, Texas']
Text: Randall County is a county located in Texas with the county seat being Canyon.
Subject: Randall County, Texas
Predicate: countySeat
Object: Canyon, Texas

Triple: ['__subject__ Richland Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Richland Township is in Madison County, Indiana, U.S.
Subject: Richland Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Richland Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Richland Township, in Madison County, Indiana is in the United States.
Subject: Richland Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Richland Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Richland Township, Madison County, Indiana is located within the United States.
Subject: Richland Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Tarrant County, Texas __predicate__ countySeat __object__ Fort Worth, Texas']
Text: The county seat of Tarrant County in Texas is Fort Worth.
Subject: Tarrant County, Texas
Predicate: countySeat
Object: Fort Worth, Texas

Triple: ['__subject__ Tarrant County, Texas __predicate__ countySeat __object__ Fort Worth, Texas']
Text: The county seat of Tarrant County is Fort Worth in Texas.
Subject: Tarrant County, Texas
Predicate: countySeat
Object: Fort Worth, Texas

Triple: ['__subject__ Taylor County, Texas __predicate__ country __object__ United States']
Text: Taylor County is in Texas, in the United States.
Subject: Taylor County, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Taylor County, Texas __predicate__ country __object__ United States']
Text: Taylor County, Texas is in the US.
Subject: Taylor County, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Taylor County, Texas __predicate__ country __object__ United States']
Text: Taylor County, Texas is located within the United States.
Subject: Taylor County, Texas
Predicate: country
Object: United States

Triple: ['__subject__ Taylor County, Texas __predicate__ largestCity __object__ Abilene, Texas']
Text: Abilene is the largest city, in Taylor County, Texas.
Subject: Taylor County, Texas
Predicate: largestCity
Object: Abilene, Texas

Triple: ['__subject__ Taylor County, Texas __predicate__ largestCity __object__ Abilene, Texas']
Text: Abilene is the largest city in Taylor County, Texas.
Subject: Taylor County, Texas
Predicate: largestCity
Object: Abilene, Texas

Triple: ['__subject__ Texas __predicate__ capital __object__ Austin, Texas']
Text: Austin is the capital city of Texas.
Subject: Texas
Predicate: capital
Object: Austin, Texas

Triple: ['__subject__ Texas __predicate__ capital __object__ Austin, Texas']
Text: Austin is the capital of Texas.
Subject: Texas
Predicate: capital
Object: Austin, Texas

Triple: ['__subject__ Texas __predicate__ country __object__ United States']
Text: Texas is in the United States.
Subject: Texas
Predicate: country
Object: United States

Triple: ['__subject__ Texas __predicate__ country __object__ United States']
Text: Texas is in the U.S.
Subject: Texas
Predicate: country
Object: United States

Triple: ['__subject__ Texas __predicate__ country __object__ United States']
Text: Texas is located in the United States.
Subject: Texas
Predicate: country
Object: United States

Triple: ['__subject__ Texas __predicate__ language __object__ English language']
Text: English is a language spoken in Texas.
Subject: Texas
Predicate: language
Object: English language

Triple: ['__subject__ Texas __predicate__ language __object__ English language']
Text: English is spoken in Texas.
Subject: Texas
Predicate: language
Object: English language

Triple: ['__subject__ Texas __predicate__ language __object__ Spanish language']
Text: Spanish is a language spoken in Texas.
Subject: Texas
Predicate: language
Object: Spanish language

Triple: ['__subject__ Texas __predicate__ language __object__ Spanish language']
Text: One of the languages spoken in Texas is Spanish.
Subject: Texas
Predicate: language
Object: Spanish language

Triple: ['__subject__ Texas __predicate__ language __object__ Spanish language']
Text: Spanish is spoken in Texas.
Subject: Texas
Predicate: language
Object: Spanish language

Triple: ['__subject__ Texas __predicate__ largestCity __object__ Houston']
Text: Houston is the largest city in Texas.
Subject: Texas
Predicate: largestCity
Object: Houston

Triple: ['__subject__ Travis County, Texas __predicate__ countySeat __object__ Austin, Texas']
Text: Austin is the county seat of Travis County, in Texas.
Subject: Travis County, Texas
Predicate: countySeat
Object: Austin, Texas

Triple: ['__subject__ Travis County, Texas __predicate__ countySeat __object__ Austin, Texas']
Text: The County Seat for Travis County is in Austin, Texas.
Subject: Travis County, Texas
Predicate: countySeat
Object: Austin, Texas

Triple: ['__subject__ Travis County, Texas __predicate__ largestCity __object__ Austin, Texas']
Text: Austin is the largest city in Travis County, Texas.
Subject: Travis County, Texas
Predicate: largestCity
Object: Austin, Texas

Triple: ['__subject__ Travis County, Texas __predicate__ largestCity __object__ Austin, Texas']
Text: Austin, Texas is the largest city in Travis County, Texas.
Subject: Travis County, Texas
Predicate: largestCity
Object: Austin, Texas

Triple: ['__subject__ Travis County, Texas __predicate__ largestCity __object__ Austin, Texas']
Text: The largest city in Travis County, Texas, is Austin.
Subject: Travis County, Texas
Predicate: largestCity
Object: Austin, Texas

Triple: ['__subject__ Union Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Union Township is in Madison County, which is in Indiana, in the United States.
Subject: Union Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ Union Township, Madison County, Indiana __predicate__ country __object__ United States']
Text: Union Township, Madison County, Indiana is located within the United States.
Subject: Union Township, Madison County, Indiana
Predicate: country
Object: United States

Triple: ['__subject__ United States __predicate__ capital __object__ Washington, D.C.']
Text: The capital of the U.S. is Washington, D.C.
Subject: United States
Predicate: capital
Object: Washington, D.C.

Triple: ['__subject__ United States __predicate__ capital __object__ Washington, D.C.']
Text: Washington, D.C. is the capital of the U.S.
Subject: United States
Predicate: capital
Object: Washington, D.C.

Triple: ['__subject__ United States __predicate__ capital __object__ Washington, D.C.']
Text: The capital of the United States is Washington DC.
Subject: United States
Predicate: capital
Object: Washington, D.C.

Triple: ['__subject__ United States __predicate__ demonym __object__ Americans']
Text: Americans live in the U.S.
Subject: United States
Predicate: demonym
Object: Americans

Triple: ['__subject__ United States __predicate__ demonym __object__ Americans']
Text: Americans are the people occupying the U.S.
Subject: United States
Predicate: demonym
Object: Americans

Triple: ['__subject__ United States __predicate__ demonym __object__ Americans']
Text: The inhabitants of the United States are known as Americans.
Subject: United States
Predicate: demonym
Object: Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: African Americans are an ethnic group in the United States.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: African Americans are an ethnic group within the United States.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: One of the ethnic groups in the United States are the African Americans.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']
Text: One of the ethnic groups in the United States, is Asian Americans.
Subject: United States
Predicate: ethnicGroup
Object: Asian Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']
Text: Asian Americans are an ethnic group in the U.S.
Subject: United States
Predicate: ethnicGroup
Object: Asian Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']
Text: The Asian Americans are an ethnic group of the United States.
Subject: United States
Predicate: ethnicGroup
Object: Asian Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']
Text: Native Americans are one of the ethnic groups in the United States of America.
Subject: United States
Predicate: ethnicGroup
Object: Native Americans in the United States

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']
Text: The Native Americans are an ethnic group within the United States.
Subject: United States
Predicate: ethnicGroup
Object: Native Americans in the United States

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ White Americans']
Text: White Americans are an ethnic group in the United States.
Subject: United States
Predicate: ethnicGroup
Object: White Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ White Americans']
Text: White Americans are an ethnic group within the United States.
Subject: United States
Predicate: ethnicGroup
Object: White Americans

Triple: ['__subject__ United States __predicate__ language __object__ English language']
Text: English is the language spoken in the United States.
Subject: United States
Predicate: language
Object: English language

Triple: ['__subject__ United States __predicate__ language __object__ English language']
Text: English is the language of the United States.
Subject: United States
Predicate: language
Object: English language

Triple: ['__subject__ United States __predicate__ largestCity __object__ New York City']
Text: The biggest city in the U.S. is New York City.
Subject: United States
Predicate: largestCity
Object: New York City

Triple: ['__subject__ United States __predicate__ largestCity __object__ New York City']
Text: New York City is the largest city of the United States.
Subject: United States
Predicate: largestCity
Object: New York City

Triple: ['__subject__ United States __predicate__ largestCity __object__ New York City']
Text: The largest city in United States is New York City.
Subject: United States
Predicate: largestCity
Object: New York City

Triple: ['__subject__ United States __predicate__ leaderTitle __object__ President of the United States']
Text: The president is the leader of the United States.
Subject: United States
Predicate: leaderTitle
Object: President of the United States

Triple: ['__subject__ United States __predicate__ leaderTitle __object__ President of the United States']
Text: The leader of the United States is called the President of the United States.
Subject: United States
Predicate: leaderTitle
Object: President of the United States

Triple: ['__subject__ United States House of Representatives __predicate__ isPartOf __object__ United States Congress']
Text: The United States House of Representatives is part of the United States Congress.
Subject: United States House of Representatives
Predicate: isPartOf
Object: United States Congress

Triple: ['__subject__ United States House of Representatives __predicate__ isPartOf __object__ United States Congress']
Text: The House of Representatives forms part of the United States Congress.
Subject: United States House of Representatives
Predicate: isPartOf
Object: United States Congress

Triple: ['__subject__ United States House of Representatives __predicate__ isPartOf __object__ United States Congress']
Text: United States House of Representatives is part of United States Congress.
Subject: United States House of Representatives
Predicate: isPartOf
Object: United States Congress

Triple: ['__subject__ United States House of Representatives __predicate__ location __object__ United States']
Text: The United States house of Representatives is in the Unites States.
Subject: United States House of Representatives
Predicate: location
Object: United States

Triple: ['__subject__ United States House of Representatives __predicate__ location __object__ United States']
Text: The United States House of Representatives is located within the United States.
Subject: United States House of Representatives
Predicate: location
Object: United States

Triple: ['__subject__ United States House of Representatives __predicate__ location __object__ Washington, D.C.']
Text: The U.S. House of Reps is located in Washington, D.C.
Subject: United States House of Representatives
Predicate: location
Object: Washington, D.C.

Triple: ['__subject__ United States House of Representatives __predicate__ location __object__ Washington, D.C.']
Text: The United States House of Representatives is located in Washington D.C.
Subject: United States House of Representatives
Predicate: location
Object: Washington, D.C.

Triple: ['__subject__ United States House of Representatives __predicate__ location __object__ Washington, D.C.']
Text: United States House of Representatives is located in Washington DC.
Subject: United States House of Representatives
Predicate: location
Object: Washington, D.C.

Triple: ['__subject__ Washington (state) __predicate__ capital __object__ Olympia, Washington']
Text: Olympia is the capital of Washington.
Subject: Washington (state)
Predicate: capital
Object: Olympia, Washington

Triple: ['__subject__ Washington (state) __predicate__ capital __object__ Olympia, Washington']
Text: The Washington state capital is Olympia.
Subject: Washington (state)
Predicate: capital
Object: Olympia, Washington

Triple: ['__subject__ Washington (state) __predicate__ capital __object__ Olympia, Washington']
Text: Olympia is the capital of Washington (state).
Subject: Washington (state)
Predicate: capital
Object: Olympia, Washington

Triple: ['__subject__ Washington (state) __predicate__ country __object__ United States']
Text: Washington state is located within the United States.
Subject: Washington (state)
Predicate: country
Object: United States

Triple: ['__subject__ Washington (state) __predicate__ country __object__ United States']
Text: Washington is a state is United States.
Subject: Washington (state)
Predicate: country
Object: United States

Triple: ['__subject__ Washington (state) __predicate__ largestCity __object__ Seattle']
Text: Seattle is the largest city in Washington State.
Subject: Washington (state)
Predicate: largestCity
Object: Seattle

Triple: ['__subject__ Washington (state) __predicate__ largestCity __object__ Seattle']
Text: The largest city of Washington state is Seattle.
Subject: Washington (state)
Predicate: largestCity
Object: Seattle

Triple: ['__subject__ Washtenaw County, Michigan __predicate__ country __object__ United States']
Text: Washtenaw County, Michigan is in the United States.
Subject: Washtenaw County, Michigan
Predicate: country
Object: United States

Triple: ['__subject__ Washtenaw County, Michigan __predicate__ country __object__ United States']
Text: Washtenaw County in Michigan is located within the United States.
Subject: Washtenaw County, Michigan
Predicate: country
Object: United States

Triple: ['__subject__ Williamson County, Texas __predicate__ countySeat __object__ Georgetown, Texas']
Text: Georgetown is the county seat of Williamson County, Texas.
Subject: Williamson County, Texas
Predicate: countySeat
Object: Georgetown, Texas

Triple: ['__subject__ Williamson County, Texas __predicate__ largestCity __object__ Round Rock, Texas']
Text: Round Rock is the largest city in Williamson County, Texas.
Subject: Williamson County, Texas
Predicate: largestCity
Object: Round Rock, Texas

Triple: ['__subject__ Williamson County, Texas __predicate__ largestCity __object__ Round Rock, Texas']
Text: The largest city of Williamson County, Texas is Round Rock.
Subject: Williamson County, Texas
Predicate: largestCity
Object: Round Rock, Texas

Triple: ['__subject__ Airman (comicsCharacter) __predicate__ alternativeName __object__ Drake Stevens']
Text: "Drake Stevens" is known as the comic character Airman.
Subject: Airman (comicsCharacter)
Predicate: alternativeName
Object: Drake Stevens

Triple: ['__subject__ Airman (comicsCharacter) __predicate__ alternativeName __object__ Drake Stevens']
Text: Airman's alternative name is Drake Stevens.
Subject: Airman (comicsCharacter)
Predicate: alternativeName
Object: Drake Stevens

Triple: ['__subject__ Airman (comicsCharacter) __predicate__ alternativeName __object__ Drake Stevens']
Text: The alternative name of Airman (comics character) is "Drake Stevens".
Subject: Airman (comicsCharacter)
Predicate: alternativeName
Object: Drake Stevens

Triple: ['__subject__ Airman (comicsCharacter) __predicate__ creator __object__ George Kapitan']
Text: The creator of Airman, (comics character) is George Kapitan.
Subject: Airman (comicsCharacter)
Predicate: creator
Object: George Kapitan

Triple: ['__subject__ Airman (comicsCharacter) __predicate__ creator __object__ George Kapitan']
Text: The creator of Airman (comics character) is George Kapitan.
Subject: Airman (comicsCharacter)
Predicate: creator
Object: George Kapitan

Triple: ['__subject__ Airman (comicsCharacter) __predicate__ creator __object__ George Kapitan']
Text: George Kapitan created the comic character Airman.
Subject: Airman (comicsCharacter)
Predicate: creator
Object: George Kapitan

Triple: ['__subject__ Airman (comicsCharacter) __predicate__ creator __object__ Harry Sahle']
Text: The comic character, Airman, was created by Harry Sahle.
Subject: Airman (comicsCharacter)
Predicate: creator
Object: Harry Sahle

Triple: ['__subject__ Airman (comicsCharacter) __predicate__ creator __object__ Harry Sahle']
Text: The creator of Airman (comics character) is Harry Sahle.
Subject: Airman (comicsCharacter)
Predicate: creator
Object: Harry Sahle

Triple: ['__subject__ Airman (comicsCharacter) __predicate__ creator __object__ Harry Sahle']
Text: The comic book character Airman was created by Harry Sahle.
Subject: Airman (comicsCharacter)
Predicate: creator
Object: Harry Sahle

Triple: ['__subject__ Amazing-Man (comicsCharacter) __predicate__ alternativeName __object__ John Aman']
Text: John Aman, is the alternative name for the comic character, Amazing-Man.
Subject: Amazing-Man (comicsCharacter)
Predicate: alternativeName
Object: John Aman

Triple: ['__subject__ Amazing-Man (comicsCharacter) __predicate__ alternativeName __object__ John Aman']
Text: The comic book character Amazing-Man's alter ego is John Aman.
Subject: Amazing-Man (comicsCharacter)
Predicate: alternativeName
Object: John Aman

Triple: ['__subject__ Amazing-Man (comicsCharacter) __predicate__ alternativeName __object__ John Aman']
Text: John Aman is also known as Amazing-Man in the comics genre.
Subject: Amazing-Man (comicsCharacter)
Predicate: alternativeName
Object: John Aman

Triple: ['__subject__ Amazing-Man (comicsCharacter) __predicate__ creator __object__ Bill Everett']
Text: Bill Everett is the creator of the comic character, Amazing-Man.
Subject: Amazing-Man (comicsCharacter)
Predicate: creator
Object: Bill Everett

Triple: ['__subject__ Amazing-Man (comicsCharacter) __predicate__ creator __object__ Bill Everett']
Text: The comic book character Amazing-Man was created by Bill Everett.
Subject: Amazing-Man (comicsCharacter)
Predicate: creator
Object: Bill Everett

Triple: ['__subject__ Amazing-Man (comicsCharacter) __predicate__ creator __object__ Bill Everett']
Text: The comic character Amazing Man was created by Bill Everett.
Subject: Amazing-Man (comicsCharacter)
Predicate: creator
Object: Bill Everett

Triple: ["__subject__ April O'Neil __predicate__ creator __object__ Peter Laird"]
Text: The character, April O'Neil, was created by Peter Laird.
Subject: April O'Neil
Predicate: creator
Object: Peter Laird

Triple: ["__subject__ April O'Neil __predicate__ creator __object__ Peter Laird"]
Text: April O'Neil was created by Peter Laird.
Subject: April O'Neil
Predicate: creator
Object: Peter Laird

Triple: ["__subject__ April O'Neil __predicate__ creator __object__ Peter Laird"]
Text: The creator of April O'Neil is Peter Laird.
Subject: April O'Neil
Predicate: creator
Object: Peter Laird

Triple: ["__subject__ Arion (comicsCharacter) __predicate__ alternativeName __object__ Ahri'ahn"]
Text: The comic character, Arion, is also known by he name Ahri'ahn.
Subject: Arion (comicsCharacter)
Predicate: alternativeName
Object: Ahri'ahn

Triple: ["__subject__ Arion (comicsCharacter) __predicate__ alternativeName __object__ Ahri'ahn"]
Text: The comic book character Arion is also known as Ahri'ahn.
Subject: Arion (comicsCharacter)
Predicate: alternativeName
Object: Ahri'ahn

Triple: ["__subject__ Arion (comicsCharacter) __predicate__ alternativeName __object__ Ahri'ahn"]
Text: The comic character Arion is also known as Ahri'ahn.
Subject: Arion (comicsCharacter)
Predicate: alternativeName
Object: Ahri'ahn

Triple: ['__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Jan Duursema']
Text: The comic character, Arion, was created by Jan Duursema.
Subject: Arion (comicsCharacter)
Predicate: creator
Object: Jan Duursema

Triple: ['__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Jan Duursema']
Text: The comic book character Arion was created by Jan Duursema.
Subject: Arion (comicsCharacter)
Predicate: creator
Object: Jan Duursema

Triple: ['__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Paul Kupperberg']
Text: Paul Kupperberg is the creator of the comic character, Arion.
Subject: Arion (comicsCharacter)
Predicate: creator
Object: Paul Kupperberg

Triple: ['__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Paul Kupperberg']
Text: The comic book character Arion was created by Paul Kupperberg.
Subject: Arion (comicsCharacter)
Predicate: creator
Object: Paul Kupperberg

Triple: ['__subject__ Arion (comicsCharacter) __predicate__ creator __object__ Paul Kupperberg']
Text: The comic character Arion was created by Paul Kupperberg.
Subject: Arion (comicsCharacter)
Predicate: creator
Object: Paul Kupperberg

Triple: ['__subject__ Asterix (comicsCharacter) __predicate__ alternativeName __object__ Astérix']
Text: The alternative name of Asterix (comics character) is "Astérix".
Subject: Asterix (comicsCharacter)
Predicate: alternativeName
Object: Astérix

Triple: ['__subject__ Asterix (comicsCharacter) __predicate__ alternativeName __object__ Astérix']
Text: The comic character Asterix is also known as Astérix.
Subject: Asterix (comicsCharacter)
Predicate: alternativeName
Object: Astérix

Triple: ['__subject__ Asterix (comicsCharacter) __predicate__ alternativeName __object__ Astérix']
Text: The comic character Asterix is sometimes called "Astérix".
Subject: Asterix (comicsCharacter)
Predicate: alternativeName
Object: Astérix

Triple: ['__subject__ Asterix (comicsCharacter) __predicate__ creator __object__ Albert Uderzo']
Text: Albert Uderzo is the creator of the comic character, Asterix.
Subject: Asterix (comicsCharacter)
Predicate: creator
Object: Albert Uderzo

Triple: ['__subject__ Asterix (comicsCharacter) __predicate__ creator __object__ Albert Uderzo']
Text: The comic book character Asterix was created by Albert Uderzo.
Subject: Asterix (comicsCharacter)
Predicate: creator
Object: Albert Uderzo

Triple: ['__subject__ Asterix (comicsCharacter) __predicate__ creator __object__ Albert Uderzo']
Text: The comic strip character Asterix was created by Albert Uderzo.
Subject: Asterix (comicsCharacter)
Predicate: creator
Object: Albert Uderzo

Triple: ['__subject__ Aurakles __predicate__ alternativeName __object__ Aurakles']
Text: Aurakles is also known as ''Aurakles''.
Subject: Aurakles
Predicate: alternativeName
Object: Aurakles

Triple: ['__subject__ Aurakles __predicate__ alternativeName __object__ Aurakles']
Text: An alternative name for Aurakles is Aurakles.
Subject: Aurakles
Predicate: alternativeName
Object: Aurakles

Triple: ['__subject__ Aurakles __predicate__ alternativeName __object__ Aurakles']
Text: Aurakles alternative name is also Aurakles.
Subject: Aurakles
Predicate: alternativeName
Object: Aurakles

Triple: ['__subject__ Aurakles __predicate__ creator __object__ Dick Dillin']
Text: Dick Dillin is the creator of Aurakles.
Subject: Aurakles
Predicate: creator
Object: Dick Dillin

Triple: ['__subject__ Aurakles __predicate__ creator __object__ Dick Dillin']
Text: The comic book character Aurakles was created by Dick Dillin.
Subject: Aurakles
Predicate: creator
Object: Dick Dillin

Triple: ['__subject__ Aurakles __predicate__ creator __object__ Dick Dillin']
Text: Aurakles is a fictional character created by Dick Dillin.
Subject: Aurakles
Predicate: creator
Object: Dick Dillin

Triple: ['__subject__ Aurakles __predicate__ creator __object__ Len Wein']
Text: The character, Aurakles, was created by Len Wein.
Subject: Aurakles
Predicate: creator
Object: Len Wein

Triple: ['__subject__ Aurakles __predicate__ creator __object__ Len Wein']
Text: Aurakles was created by Len Wein.
Subject: Aurakles
Predicate: creator
Object: Len Wein

Triple: ['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Karl Kesel']
Text: The creator of Auron (comics character) is Karl Kesel.
Subject: Auron (comicsCharacter)
Predicate: creator
Object: Karl Kesel

Triple: ['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Karl Kesel']
Text: The comic book character Auron was created by Karl Kesel.
Subject: Auron (comicsCharacter)
Predicate: creator
Object: Karl Kesel

Triple: ['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Karl Kesel']
Text: Karl Kesel is the creator of the comic character, Auron.
Subject: Auron (comicsCharacter)
Predicate: creator
Object: Karl Kesel

Triple: ['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Walt Simonson']
Text: The comic character, Auron, was created by Walt Simonson.
Subject: Auron (comicsCharacter)
Predicate: creator
Object: Walt Simonson

Triple: ['__subject__ Auron (comicsCharacter) __predicate__ creator __object__ Walt Simonson']
Text: Auron was created by Walt Simonson.
Subject: Auron (comicsCharacter)
Predicate: creator
Object: Walt Simonson

Triple: ['__subject__ Auron (comicsCharacter) __predicate__ fullName __object__ Lambien']
Text: The full name of Auron (comics character) is "Lambien".
Subject: Auron (comicsCharacter)
Predicate: fullName
Object: Lambien

Triple: ['__subject__ Auron (comicsCharacter) __predicate__ fullName __object__ Lambien']
Text: The comic character Auron's full name is Lambien.
Subject: Auron (comicsCharacter)
Predicate: fullName
Object: Lambien

Triple: ['__subject__ Auron (comicsCharacter) __predicate__ fullName __object__ Lambien']
Text: The comic character, Auron's full name is Lambien.
Subject: Auron (comicsCharacter)
Predicate: fullName
Object: Lambien

Triple: ['__subject__ BBC __predicate__ foundedBy __object__ John Reith, 1st Baron Reith']
Text: BBC was founded by John Reith 1st Baron Reith.
Subject: BBC
Predicate: foundedBy
Object: John Reith, 1st Baron Reith

Triple: ['__subject__ BBC __predicate__ foundedBy __object__ John Reith, 1st Baron Reith']
Text: The BBC was founded by John Reith, 1st Baron Reith.
Subject: BBC
Predicate: foundedBy
Object: John Reith, 1st Baron Reith

Triple: ['__subject__ BBC __predicate__ foundedBy __object__ John Reith, 1st Baron Reith']
Text: 1st Baron, John Reith was the founder of the BBC.
Subject: BBC
Predicate: foundedBy
Object: John Reith, 1st Baron Reith

Triple: ['__subject__ BBC __predicate__ keyPerson __object__ Rona Fairhead']
Text: Rona Fairhead is the key person for BBC.
Subject: BBC
Predicate: keyPerson
Object: Rona Fairhead

Triple: ['__subject__ BBC __predicate__ keyPerson __object__ Rona Fairhead']
Text: Rona Fairhead was a key person at the BBC.
Subject: BBC
Predicate: keyPerson
Object: Rona Fairhead

Triple: ['__subject__ BBC __predicate__ keyPerson __object__ Rona Fairhead']
Text: The key person for BBC is Rona Fairhead.
Subject: BBC
Predicate: keyPerson
Object: Rona Fairhead

Triple: ['__subject__ BBC __predicate__ keyPerson __object__ Tony Hall, Baron Hall of Birkenhead']
Text: A key person at the BBC is Baron Hall of Birkenhead, Tony Hall.
Subject: BBC
Predicate: keyPerson
Object: Tony Hall, Baron Hall of Birkenhead

Triple: ['__subject__ BBC __predicate__ keyPerson __object__ Tony Hall, Baron Hall of Birkenhead']
Text: A key person at the BBC is Tony Hall, Baron Hall of Birkenhead.
Subject: BBC
Predicate: keyPerson
Object: Tony Hall, Baron Hall of Birkenhead

Triple: ['__subject__ BBC __predicate__ keyPerson __object__ Tony Hall, Baron Hall of Birkenhead']
Text: Tony Hall, the Baron Hall of Birkenhead, is a key person with the BBC.
Subject: BBC
Predicate: keyPerson
Object: Tony Hall, Baron Hall of Birkenhead

Triple: ['__subject__ BBC __predicate__ city __object__ Broadcasting House']
Text: The location of the BBC is the Broadcasting House in London.
Subject: BBC
Predicate: city
Object: Broadcasting House

Triple: ['__subject__ BBC __predicate__ city __object__ Broadcasting House']
Text: The BBC headquarters is called Broadcasting House.
Subject: BBC
Predicate: city
Object: Broadcasting House

Triple: ['__subject__ BBC __predicate__ city __object__ Broadcasting House']
Text: Broadcasting House is the home of the BBC which is based in London.
Subject: BBC
Predicate: city
Object: Broadcasting House

Triple: ['__subject__ BBC __predicate__ city __object__ London']
Text: BBC is located in London.
Subject: BBC
Predicate: city
Object: London

Triple: ['__subject__ BBC __predicate__ city __object__ London']
Text: The BBC location city is London.
Subject: BBC
Predicate: city
Object: London

Triple: ['__subject__ BBC __predicate__ city __object__ London']
Text: The BBC is located in London.
Subject: BBC
Predicate: city
Object: London

Triple: ['__subject__ BBC __predicate__ product __object__ BBC Radio']
Text: One of the products of BBC is BBC radio.
Subject: BBC
Predicate: product
Object: BBC Radio

Triple: ['__subject__ BBC __predicate__ product __object__ BBC Radio']
Text: BBC radio is one of the products of the BBC.
Subject: BBC
Predicate: product
Object: BBC Radio

Triple: ['__subject__ BBC __predicate__ product __object__ BBC Radio']
Text: The BBC produces BBC Radio.
Subject: BBC
Predicate: product
Object: BBC Radio

Triple: ['__subject__ Balder (comicsCharacter) __predicate__ alternativeName __object__ Balder Odinson']
Text: An alternative name for the comic character Balder is Balder Odinson.
Subject: Balder (comicsCharacter)
Predicate: alternativeName
Object: Balder Odinson

Triple: ['__subject__ Balder (comicsCharacter) __predicate__ alternativeName __object__ Balder Odinson']
Text: Balder Odinson is also known by the name Balder.
Subject: Balder (comicsCharacter)
Predicate: alternativeName
Object: Balder Odinson

Triple: ['__subject__ Balder (comicsCharacter) __predicate__ alternativeName __object__ Balder Odinson']
Text: The comic character, Balder's alternative name, is Balder Odinson.
Subject: Balder (comicsCharacter)
Predicate: alternativeName
Object: Balder Odinson

Triple: ['__subject__ Balder (comicsCharacter) __predicate__ creator __object__ Stan Lee']
Text: Stan Lee created the comic character Balder.
Subject: Balder (comicsCharacter)
Predicate: creator
Object: Stan Lee

Triple: ['__subject__ Balder (comicsCharacter) __predicate__ creator __object__ Stan Lee']
Text: The comic character, Balder, was created by Stan Lee.
Subject: Balder (comicsCharacter)
Predicate: creator
Object: Stan Lee

Triple: ['__subject__ Balder (comicsCharacter) __predicate__ creator __object__ Stan Lee']
Text: The comic character Balder was created by Stan Lee.
Subject: Balder (comicsCharacter)
Predicate: creator
Object: Stan Lee

Triple: ['__subject__ Ballistic (comicsCharacter) __predicate__ alternativeName __object__ Kelvin Mao']
Text: The comic character, Ballistic, has the alternative name, Kelvin Mao.
Subject: Ballistic (comicsCharacter)
Predicate: alternativeName
Object: Kelvin Mao

Triple: ['__subject__ Ballistic (comicsCharacter) __predicate__ alternativeName __object__ Kelvin Mao']
Text: Ballistic is a fictional comic superhero who is sometimes known as Kelvin Mao.
Subject: Ballistic (comicsCharacter)
Predicate: alternativeName
Object: Kelvin Mao

Triple: ['__subject__ Ballistic (comicsCharacter) __predicate__ creator __object__ Michael Manley']
Text: The comic character Ballistic was created by Michael Manley.
Subject: Ballistic (comicsCharacter)
Predicate: creator
Object: Michael Manley

Triple: ['__subject__ Ballistic (comicsCharacter) __predicate__ creator __object__ Michael Manley']
Text: The comic book character Ballistic was created by Michael Manley.
Subject: Ballistic (comicsCharacter)
Predicate: creator
Object: Michael Manley

Triple: ['__subject__ Ballistic (comicsCharacter) __predicate__ creator __object__ Doug Moench']
Text: The comic character Ballistic was created by Doug Moench.
Subject: Ballistic (comicsCharacter)
Predicate: creator
Object: Doug Moench

Triple: ['__subject__ Ballistic (comicsCharacter) __predicate__ creator __object__ Doug Moench']
Text: Doug Moench was the creator of the comic character Ballistic.
Subject: Ballistic (comicsCharacter)
Predicate: creator
Object: Doug Moench

Triple: ['__subject__ Ballistic (comicsCharacter) __predicate__ creator __object__ Doug Moench']
Text: Doug Moench created the comic character Ballistic.
Subject: Ballistic (comicsCharacter)
Predicate: creator
Object: Doug Moench

Triple: ['__subject__ Bananaman __predicate__ creator __object__ John Geering']
Text: John Geering is the creator of Bananaman.
Subject: Bananaman
Predicate: creator
Object: John Geering

Triple: ['__subject__ Bananaman __predicate__ creator __object__ John Geering']
Text: The TV character Bananaman was created by John Geering.
Subject: Bananaman
Predicate: creator
Object: John Geering

Triple: ['__subject__ Bananaman __predicate__ creator __object__ John Geering']
Text: The fictional comic superhero Bananaman was created by John Geering.
Subject: Bananaman
Predicate: creator
Object: John Geering

Triple: ['__subject__ Bananaman __predicate__ creator __object__ Steve Bright']
Text: Steve Bright is the creator of Bananaman.
Subject: Bananaman
Predicate: creator
Object: Steve Bright

Triple: ['__subject__ Bananaman __predicate__ creator __object__ Steve Bright']
Text: Bananaman was created by Steve Bright.
Subject: Bananaman
Predicate: creator
Object: Steve Bright

Triple: ['__subject__ Bananaman __predicate__ creator __object__ Steve Bright']
Text: The creator of Bananaman is Steve Bright.
Subject: Bananaman
Predicate: creator
Object: Steve Bright

Triple: ['__subject__ Bananaman __predicate__ lastAired __object__ 1986-04-15']
Text: Bananaman last aired on April 15th 1986.
Subject: Bananaman
Predicate: lastAired
Object: 1986-04-15

Triple: ['__subject__ Bananaman __predicate__ lastAired __object__ 1986-04-15']
Text: Bananaman last aired on 15th April 1986.
Subject: Bananaman
Predicate: lastAired
Object: 1986-04-15

Triple: ['__subject__ Bananaman __predicate__ starring __object__ Graeme Garden']
Text: Graeme Garden stars in Bananaman.
Subject: Bananaman
Predicate: starring
Object: Graeme Garden

Triple: ['__subject__ Bananaman __predicate__ starring __object__ Graeme Garden']
Text: Bananaman stars Graeme Garden.
Subject: Bananaman
Predicate: starring
Object: Graeme Garden

Triple: ['__subject__ Bananaman __predicate__ starring __object__ Jill Shilling']
Text: Jill Shilling stared in Bananaman.
Subject: Bananaman
Predicate: starring
Object: Jill Shilling

Triple: ['__subject__ Bananaman __predicate__ starring __object__ Jill Shilling']
Text: Jill Shilling starred in Bananaman.
Subject: Bananaman
Predicate: starring
Object: Jill Shilling

Triple: ['__subject__ Bananaman __predicate__ starring __object__ Tim Brooke-Taylor']
Text: Tim Brooke-Taylor starred in Bananaman.
Subject: Bananaman
Predicate: starring
Object: Tim Brooke-Taylor

Triple: ['__subject__ Baymax __predicate__ creator __object__ Duncan Rouleau']
Text: Baymax was created by Duncan Rouleau.
Subject: Baymax
Predicate: creator
Object: Duncan Rouleau

Triple: ['__subject__ Baymax __predicate__ creator __object__ Duncan Rouleau']
Text: Duncan Rouleau created Baymax.
Subject: Baymax
Predicate: creator
Object: Duncan Rouleau

Triple: ['__subject__ Baymax __predicate__ creator __object__ Steven T. Seagle']
Text: Steven T. Seagle is the creator of Baymax.
Subject: Baymax
Predicate: creator
Object: Steven T. Seagle

Triple: ['__subject__ Baymax __predicate__ creator __object__ Steven T. Seagle']
Text: The creator of Baymax is Steven T. Seagle.
Subject: Baymax
Predicate: creator
Object: Steven T. Seagle

Triple: ['__subject__ Baymax __predicate__ creator __object__ Steven T. Seagle']
Text: Baymax was created by Steven T. Seagle.
Subject: Baymax
Predicate: creator
Object: Steven T. Seagle

Triple: ['__subject__ Baymax __predicate__ firstAppearanceInFilm __object__ Big Hero 6 (film)']
Text: Big Hero 6 was Baymax's first film appearance.
Subject: Baymax
Predicate: firstAppearanceInFilm
Object: Big Hero 6 (film)

Triple: ['__subject__ Baymax __predicate__ firstAppearanceInFilm __object__ Big Hero 6 (film)']
Text: The first appearance in a film for the character Baymax was Big Hero 6.
Subject: Baymax
Predicate: firstAppearanceInFilm
Object: Big Hero 6 (film)

Triple: ['__subject__ Baymax __predicate__ firstAppearanceInFilm __object__ Big Hero 6 (film)']
Text: Baymax first appeared in the film Big Hero 6.
Subject: Baymax
Predicate: firstAppearanceInFilm
Object: Big Hero 6 (film)

Triple: ['__subject__ Baymax __predicate__ voice __object__ Scott Adsit']
Text: Scott Adsit does the voice for Baymax.
Subject: Baymax
Predicate: voice
Object: Scott Adsit

Triple: ['__subject__ Baymax __predicate__ voice __object__ Scott Adsit']
Text: Scott Adsit provides the voice for the character Baymax.
Subject: Baymax
Predicate: voice
Object: Scott Adsit

Triple: ['__subject__ Baymax __predicate__ voice __object__ Scott Adsit']
Text: The character Baymax is voiced by Scott Adsit.
Subject: Baymax
Predicate: voice
Object: Scott Adsit

Triple: ['__subject__ Ben Urich __predicate__ creator __object__ Gene Colan']
Text: Gene Colan created Ben Urich.
Subject: Ben Urich
Predicate: creator
Object: Gene Colan

Triple: ['__subject__ Ben Urich __predicate__ creator __object__ Gene Colan']
Text: Ben Urich was created by Gene Colan.
Subject: Ben Urich
Predicate: creator
Object: Gene Colan

Triple: ['__subject__ Ben Urich __predicate__ creator __object__ Gene Colan']
Text: The character Ben Urich was created by Gene Colan.
Subject: Ben Urich
Predicate: creator
Object: Gene Colan

Triple: ['__subject__ Ben Urich __predicate__ creator __object__ Roger McKenzie (comic book writer)']
Text: The comic book writer, Roger McKenzie, is the creator of Ben Urich.
Subject: Ben Urich
Predicate: creator
Object: Roger McKenzie (comic book writer)

Triple: ['__subject__ Ben Urich __predicate__ creator __object__ Roger McKenzie (comic book writer)']
Text: Ben Urich was created by the comic book writer Roger McKenzie.
Subject: Ben Urich
Predicate: creator
Object: Roger McKenzie (comic book writer)

Triple: ['__subject__ Ben Urich __predicate__ creator __object__ Roger McKenzie (comic book writer)']
Text: The Comic book character Ben Urich was created by Roger McKenzie.
Subject: Ben Urich
Predicate: creator
Object: Roger McKenzie (comic book writer)

Triple: ['__subject__ Bianca Castafiore __predicate__ creator __object__ Hergé']
Text: Hergé was the creator of the character Bianca Castafiore.
Subject: Bianca Castafiore
Predicate: creator
Object: Hergé

Triple: ['__subject__ Bibbo Bibbowski __predicate__ creator __object__ Marv Wolfman']
Text: Marv Wolfman was the creator of Bibbo Bibbowski.
Subject: Bibbo Bibbowski
Predicate: creator
Object: Marv Wolfman

Triple: ['__subject__ Bibbo Bibbowski __predicate__ creator __object__ Marv Wolfman']
Text: Bibbo Bibbowski was created by Marv Wolfman.
Subject: Bibbo Bibbowski
Predicate: creator
Object: Marv Wolfman

Triple: ['__subject__ Big Hero 6 (film) __predicate__ distributor __object__ Walt Disney Studios Motion Pictures']
Text: Walt Disney Studios Motion Pictures is the distributor of the film Big Hero 6.
Subject: Big Hero 6 (film)
Predicate: distributor
Object: Walt Disney Studios Motion Pictures

Triple: ['__subject__ Big Hero 6 (film) __predicate__ distributor __object__ Walt Disney Studios Motion Pictures']
Text: The distributor of Big Hero 6 (film) is Walt Disney Studios Motion Pictures.
Subject: Big Hero 6 (film)
Predicate: distributor
Object: Walt Disney Studios Motion Pictures

Triple: ['__subject__ Big Hero 6 (film) __predicate__ distributor __object__ Walt Disney Studios Motion Pictures']
Text: Big Hero 6 was a film distributed by Walt Disney Studios Motion Pictures.
Subject: Big Hero 6 (film)
Predicate: distributor
Object: Walt Disney Studios Motion Pictures

Triple: ['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Alan Tudyk']
Text: Alan Tudyk stars in the film, Big Hero 6.
Subject: Big Hero 6 (film)
Predicate: starring
Object: Alan Tudyk

Triple: ['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Alan Tudyk']
Text: The film, Big Hero 6, starred Alan Tudyk.
Subject: Big Hero 6 (film)
Predicate: starring
Object: Alan Tudyk

Triple: ['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Damon Wayans, Jr.']
Text: The film Big Hero 6 stars actor Damon Wayans Jr.
Subject: Big Hero 6 (film)
Predicate: starring
Object: Damon Wayans, Jr.

Triple: ['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Damon Wayans, Jr.']
Text: The film Big Hero 6 stars Damon Wayans, Jr.
Subject: Big Hero 6 (film)
Predicate: starring
Object: Damon Wayans, Jr.

Triple: ['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Jamie Chung']
Text: The film Big Hero 6 starred Jamie Chung.
Subject: Big Hero 6 (film)
Predicate: starring
Object: Jamie Chung

Triple: ['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Jamie Chung']
Text: The film Big Hero 6, stars Jamie Chung.
Subject: Big Hero 6 (film)
Predicate: starring
Object: Jamie Chung

Triple: ['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Jamie Chung']
Text: Jamie Chung starred in the film Big Hero 6.
Subject: Big Hero 6 (film)
Predicate: starring
Object: Jamie Chung

Triple: ['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Maya Rudolph']
Text: Big Hero 6 stars Maya Rudolph.
Subject: Big Hero 6 (film)
Predicate: starring
Object: Maya Rudolph

Triple: ['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Maya Rudolph']
Text: The starring of Big Hero 6 (film) is Maya Rudolph.
Subject: Big Hero 6 (film)
Predicate: starring
Object: Maya Rudolph

Triple: ['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Maya Rudolph']
Text: Maya Rudolph was one of the stars, in the film Big Hero 6.
Subject: Big Hero 6 (film)
Predicate: starring
Object: Maya Rudolph

Triple: ['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Ryan Potter']
Text: The film, Big Hero 6, stars Ryan Potter.
Subject: Big Hero 6 (film)
Predicate: starring
Object: Ryan Potter

Triple: ['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Ryan Potter']
Text: Ryan Potter starred in the film Big Hero 6.
Subject: Big Hero 6 (film)
Predicate: starring
Object: Ryan Potter

Triple: ['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Ryan Potter']
Text: Big Hero 6 stars Ryan Potter.
Subject: Big Hero 6 (film)
Predicate: starring
Object: Ryan Potter

Triple: ['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Scott Adsit']
Text: The film, Big hero 6, stars Scott Adsit.
Subject: Big Hero 6 (film)
Predicate: starring
Object: Scott Adsit

Triple: ['__subject__ Big Hero 6 (film) __predicate__ starring __object__ Scott Adsit']
Text: Scott Adsit starred in the film Big Hero 6.
Subject: Big Hero 6 (film)
Predicate: starring
Object: Scott Adsit

Triple: ['__subject__ Bill Oddie __predicate__ birthPlace __object__ Rochdale']
Text: Bill Oddie was born in Rochdale.
Subject: Bill Oddie
Predicate: birthPlace
Object: Rochdale

Triple: ['__subject__ Black Pirate __predicate__ creator __object__ Sheldon Moldoff']
Text: Sheldon Moldoff is the creator of Black Pirate.
Subject: Black Pirate
Predicate: creator
Object: Sheldon Moldoff

Triple: ['__subject__ Black Pirate __predicate__ creator __object__ Sheldon Moldoff']
Text: Sheldon Moldoff created the Black Pirate.
Subject: Black Pirate
Predicate: creator
Object: Sheldon Moldoff

Triple: ['__subject__ Black Pirate __predicate__ creator __object__ Sheldon Moldoff']
Text: The Black Pirate was created by Sheldon Moldoff.
Subject: Black Pirate
Predicate: creator
Object: Sheldon Moldoff

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ alternativeName __object__ Mark Desmond']
Text: "Mark Desmond" is also known as the comic character Blockbuster.
Subject: Blockbuster (comicsCharacter)
Predicate: alternativeName
Object: Mark Desmond

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ alternativeName __object__ Mark Desmond']
Text: The comic character, Blockbuster, has the alternative name, Mark Desmond.
Subject: Blockbuster (comicsCharacter)
Predicate: alternativeName
Object: Mark Desmond

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ alternativeName __object__ Mark Desmond']
Text: The comic character Blockbuster is also known as Mark Desmond.
Subject: Blockbuster (comicsCharacter)
Predicate: alternativeName
Object: Mark Desmond

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ alternativeName __object__ Roland Desmond']
Text: The comic character Blockbuster is also known as Roland Desmond.
Subject: Blockbuster (comicsCharacter)
Predicate: alternativeName
Object: Roland Desmond

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ alternativeName __object__ Roland Desmond']
Text: The comic book character Blockbuster's alter ego is Roland Desmond.
Subject: Blockbuster (comicsCharacter)
Predicate: alternativeName
Object: Roland Desmond

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ alternativeName __object__ Roland Desmond']
Text: The comic character, Blockbuster's alternative name is Roland Desmond.
Subject: Blockbuster (comicsCharacter)
Predicate: alternativeName
Object: Roland Desmond

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Carmine Infantino']
Text: The comic character, Blockbuster, was created by Carmine Infantino.
Subject: Blockbuster (comicsCharacter)
Predicate: creator
Object: Carmine Infantino

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Carmine Infantino']
Text: The creator of Blockbuster (comics character) is Carmine Infantino.
Subject: Blockbuster (comicsCharacter)
Predicate: creator
Object: Carmine Infantino

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Carmine Infantino']
Text: The comic character Blockbuster was created by Carmine Infantino.
Subject: Blockbuster (comicsCharacter)
Predicate: creator
Object: Carmine Infantino

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Gardner Fox']
Text: The comic character, Blockbuster, was created by Gardner Fox.
Subject: Blockbuster (comicsCharacter)
Predicate: creator
Object: Gardner Fox

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Gardner Fox']
Text: The creator of Blockbuster (comics character) is Gardner Fox.
Subject: Blockbuster (comicsCharacter)
Predicate: creator
Object: Gardner Fox

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Gardner Fox']
Text: The comic book character Blockbuster was created by Gardner Fox.
Subject: Blockbuster (comicsCharacter)
Predicate: creator
Object: Gardner Fox

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Roger Stern']
Text: Roger Stern is the creator of the comic character, Blockbuster.
Subject: Blockbuster (comicsCharacter)
Predicate: creator
Object: Roger Stern

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Roger Stern']
Text: The comic character Blockbuster was created by Roger Stern.
Subject: Blockbuster (comicsCharacter)
Predicate: creator
Object: Roger Stern

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Roger Stern']
Text: The comic book character Blockbuster was created by Roger Stern.
Subject: Blockbuster (comicsCharacter)
Predicate: creator
Object: Roger Stern

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Tom Lyle']
Text: The comic character, Blockbuster, was created by Tom Lyle.
Subject: Blockbuster (comicsCharacter)
Predicate: creator
Object: Tom Lyle

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Tom Lyle']
Text: The creator of Blockbuster (comics character) is Tom Lyle.
Subject: Blockbuster (comicsCharacter)
Predicate: creator
Object: Tom Lyle

Triple: ['__subject__ Blockbuster (comicsCharacter) __predicate__ creator __object__ Tom Lyle']
Text: The comic character Blockbuster was created by Tom Lyle.
Subject: Blockbuster (comicsCharacter)
Predicate: creator
Object: Tom Lyle

Triple: ['__subject__ Bolt (comicsCharacter) __predicate__ alternativeName __object__ Larry Bolatinsky']
Text: An alternative name for the comic character Bolt is Larry Bolatinsky.
Subject: Bolt (comicsCharacter)
Predicate: alternativeName
Object: Larry Bolatinsky

Triple: ['__subject__ Bolt (comicsCharacter) __predicate__ alternativeName __object__ Larry Bolatinsky']
Text: Larry Bolatinsky is the alternative name for the comic character, Bolt.
Subject: Bolt (comicsCharacter)
Predicate: alternativeName
Object: Larry Bolatinsky

Triple: ['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Ernie Colón']
Text: Bolt is created by Ernie Colon.
Subject: Bolt (comicsCharacter)
Predicate: creator
Object: Ernie Colón

Triple: ['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Ernie Colón']
Text: Ernie Colón was one of the creators of the comic character Bolt.
Subject: Bolt (comicsCharacter)
Predicate: creator
Object: Ernie Colón

Triple: ['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Ernie Colón']
Text: The comic character Bolt was created by Ernie Colon.
Subject: Bolt (comicsCharacter)
Predicate: creator
Object: Ernie Colón

Triple: ['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Gary Cohn (comics)']
Text: The comic character, Bolt, was created by comic book writer Gary Cohn.
Subject: Bolt (comicsCharacter)
Predicate: creator
Object: Gary Cohn (comics)

Triple: ['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Gary Cohn (comics)']
Text: The creator of Bolt (comics character) is Gary Cohn.
Subject: Bolt (comicsCharacter)
Predicate: creator
Object: Gary Cohn (comics)

Triple: ['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Gary Cohn (comics)']
Text: The comic character Bolt was created by Gary Cohn.
Subject: Bolt (comicsCharacter)
Predicate: creator
Object: Gary Cohn (comics)

Triple: ['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Paris Cullins']
Text: The creator of Bolt (comics character) is Paris Cullins.
Subject: Bolt (comicsCharacter)
Predicate: creator
Object: Paris Cullins

Triple: ['__subject__ Bolt (comicsCharacter) __predicate__ creator __object__ Paris Cullins']
Text: The comic character Bolt, was created by Paris Cullins.
Subject: Bolt (comicsCharacter)
Predicate: creator
Object: Paris Cullins

Triple: ['__subject__ Bozo the Iron Man __predicate__ creator __object__ George Brenner']
Text: Bozo the Iron Man was created by George Brenner.
Subject: Bozo the Iron Man
Predicate: creator
Object: George Brenner

Triple: ['__subject__ Bozo the Iron Man __predicate__ creator __object__ George Brenner']
Text: George Brenner is the creator of Bozo the Iron Man.
Subject: Bozo the Iron Man
Predicate: creator
Object: George Brenner

Triple: ['__subject__ Bozo the Iron Man __predicate__ creator __object__ George Brenner']
Text: Bozo, the Iron Man was created by George Brenner.
Subject: Bozo the Iron Man
Predicate: creator
Object: George Brenner

Triple: ['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ alternativeName __object__ Dane Whitman']
Text: Dane Whitman is the alternative name for the comic character, Dane Whitman Black Knight.
Subject: Dane Whitman Black Knight (comicsCharacter)
Predicate: alternativeName
Object: Dane Whitman

Triple: ['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ alternativeName __object__ Dane Whitman']
Text: The comic character Dane Whitman Black Knight is also known as simply Dane Whitman.
Subject: Dane Whitman Black Knight (comicsCharacter)
Predicate: alternativeName
Object: Dane Whitman

Triple: ['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ John Buscema']
Text: Dane Whitman, alter ego Black Knight, was created by John Buscema.
Subject: Dane Whitman Black Knight (comicsCharacter)
Predicate: creator
Object: John Buscema

Triple: ['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ John Buscema']
Text: Dane Whitman, a.k.a. Black Knight, was created by John Buscema in the comics genre.
Subject: Dane Whitman Black Knight (comicsCharacter)
Predicate: creator
Object: John Buscema

Triple: ['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ John Buscema']
Text: Dane Whitman from the Black Knight was created by John Buscema.
Subject: Dane Whitman Black Knight (comicsCharacter)
Predicate: creator
Object: John Buscema

Triple: ['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ Roy Thomas']
Text: The comic character, Dane Whitman Black Knight was created by Roy Thomas.
Subject: Dane Whitman Black Knight (comicsCharacter)
Predicate: creator
Object: Roy Thomas

Triple: ['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ Roy Thomas']
Text: Dane Whitman Black Knight is a comic character created by Roy Thomas.
Subject: Dane Whitman Black Knight (comicsCharacter)
Predicate: creator
Object: Roy Thomas

Triple: ['__subject__ Dane Whitman Black Knight (comicsCharacter) __predicate__ creator __object__ Roy Thomas']
Text: The comic book character Dane Whitman, alter ego Black Knight, was created by Roy Thomas.
Subject: Dane Whitman Black Knight (comicsCharacter)
Predicate: creator
Object: Roy Thomas

Triple: ['__subject__ Dick Dillin __predicate__ nationality __object__ United States']
Text: Dick Dillin is from the United States.
Subject: Dick Dillin
Predicate: nationality
Object: United States

Triple: ['__subject__ Dick Dillin __predicate__ nationality __object__ United States']
Text: The nationality of Dick Dillin is United States.
Subject: Dick Dillin
Predicate: nationality
Object: United States

Triple: ['__subject__ Doug Moench __predicate__ award __object__ Eagle Award (comics)']
Text: Doug Moench won the Eagle Award (comics).
Subject: Doug Moench
Predicate: award
Object: Eagle Award (comics)

Triple: ['__subject__ Doug Moench __predicate__ award __object__ Eagle Award (comics)']
Text: Doug Moench has won an Eagle Award.
Subject: Doug Moench
Predicate: award
Object: Eagle Award (comics)

Triple: ['__subject__ Doug Moench __predicate__ award __object__ Eagle Award (comics)']
Text: Doug Moench received the Eagle Award in the comics field.
Subject: Doug Moench
Predicate: award
Object: Eagle Award (comics)

Triple: ['__subject__ Doug Moench __predicate__ award __object__ Inkpot Award']
Text: Doug Moench won the Inkpot Award.
Subject: Doug Moench
Predicate: award
Object: Inkpot Award

Triple: ['__subject__ Duncan Rouleau __predicate__ nationality __object__ Americans']
Text: The nationality of Duncan Rouleau is American.
Subject: Duncan Rouleau
Predicate: nationality
Object: Americans

Triple: ['__subject__ Duncan Rouleau __predicate__ nationality __object__ Americans']
Text: Duncan Rouleau is American.
Subject: Duncan Rouleau
Predicate: nationality
Object: Americans

Triple: ['__subject__ Duncan Rouleau __predicate__ nationality __object__ Americans']
Text: Duncan Rouleau is an American.
Subject: Duncan Rouleau
Predicate: nationality
Object: Americans

Triple: ['__subject__ Ernie Colón __predicate__ nationality __object__ Puerto Ricans']
Text: Ernie Colón is a national of Puerto Rico so he is considered Puerto Rican.
Subject: Ernie Colón
Predicate: nationality
Object: Puerto Ricans

Triple: ['__subject__ Ernie Colón __predicate__ nationality __object__ Puerto Ricans']
Text: Ernie Colon is a Puerto Rican national.
Subject: Ernie Colón
Predicate: nationality
Object: Puerto Ricans

Triple: ['__subject__ Gene Colan __predicate__ award __object__ Eisner Award']
Text: Gene Colan has been awarded the Eisner Award.
Subject: Gene Colan
Predicate: award
Object: Eisner Award

Triple: ['__subject__ Gene Colan __predicate__ award __object__ Eisner Award']
Text: Gene Colan won the Eisner Award.
Subject: Gene Colan
Predicate: award
Object: Eisner Award

Triple: ['__subject__ Gene Colan __predicate__ nationality __object__ Americans']
Text: Gene Colan is an American.
Subject: Gene Colan
Predicate: nationality
Object: Americans

Triple: ['__subject__ Gene Colan __predicate__ nationality __object__ Americans']
Text: Gene Colan's nationality is American.
Subject: Gene Colan
Predicate: nationality
Object: Americans

Triple: ['__subject__ Graeme Garden __predicate__ birthPlace __object__ Aberdeen']
Text: Graeme Garden was born in Aberdeen.
Subject: Graeme Garden
Predicate: birthPlace
Object: Aberdeen

Triple: ['__subject__ Graeme Garden __predicate__ birthPlace __object__ Aberdeen']
Text: The birth place of Graeme Garden is Aberdeen.
Subject: Graeme Garden
Predicate: birthPlace
Object: Aberdeen

Triple: ['__subject__ Jack Kirby __predicate__ nationality __object__ Americans']
Text: Jack Kirby is an American.
Subject: Jack Kirby
Predicate: nationality
Object: Americans

Triple: ['__subject__ Jack Kirby __predicate__ nationality __object__ Americans']
Text: Jack Kirby's nationality is American.
Subject: Jack Kirby
Predicate: nationality
Object: Americans

Triple: ['__subject__ Jack Kirby __predicate__ nationality __object__ Americans']
Text: Jack Kirby was an American.
Subject: Jack Kirby
Predicate: nationality
Object: Americans

Triple: ['__subject__ Jan Duursema __predicate__ award __object__ Eisner Award']
Text: Jan Duursema has won the Eisner Award.
Subject: Jan Duursema
Predicate: award
Object: Eisner Award

Triple: ['__subject__ Jerry Ordway __predicate__ nationality __object__ Americans']
Text: Jerry Ordway's nationality is American.
Subject: Jerry Ordway
Predicate: nationality
Object: Americans

Triple: ['__subject__ Jerry Ordway __predicate__ nationality __object__ Americans']
Text: Jerry Ordway is American.
Subject: Jerry Ordway
Predicate: nationality
Object: Americans

Triple: ['__subject__ John Buscema __predicate__ award __object__ Academy of Comic Book Arts']
Text: John Buscema was awarded an award by the Academy of Comic Book Arts.
Subject: John Buscema
Predicate: award
Object: Academy of Comic Book Arts

Triple: ['__subject__ John Buscema __predicate__ award __object__ Academy of Comic Book Arts']
Text: John Buscema has been awarded by the Academy of Comic Book Arts.
Subject: John Buscema
Predicate: award
Object: Academy of Comic Book Arts

Triple: ['__subject__ John Buscema __predicate__ award __object__ Academy of Comic Book Arts']
Text: John Buscema won an award at the Academy of Comic Book Arts.
Subject: John Buscema
Predicate: award
Object: Academy of Comic Book Arts

Triple: ['__subject__ John Buscema __predicate__ award __object__ Alley Award']
Text: John Buscema won the Alley Award.
Subject: John Buscema
Predicate: award
Object: Alley Award

Triple: ['__subject__ John Buscema __predicate__ award __object__ Inkpot Award']
Text: John Buscema won the Inkpot Award.
Subject: John Buscema
Predicate: award
Object: Inkpot Award

Triple: ['__subject__ John Buscema __predicate__ award __object__ Inkpot Award']
Text: John Buscema has won the Inkpot Award.
Subject: John Buscema
Predicate: award
Object: Inkpot Award

Triple: ['__subject__ John Buscema __predicate__ nationality __object__ Americans']
Text: American was the nationality of John Buscema.
Subject: John Buscema
Predicate: nationality
Object: Americans

Triple: ['__subject__ John Buscema __predicate__ nationality __object__ Americans']
Text: John Buscema is an American.
Subject: John Buscema
Predicate: nationality
Object: Americans

Triple: ['__subject__ John Buscema __predicate__ nationality __object__ Americans']
Text: John Buscema's nationality is American.
Subject: John Buscema
Predicate: nationality
Object: Americans

Triple: ['__subject__ Len Wein __predicate__ award __object__ Academy of Comic Book Arts']
Text: Len Wein collected an award from the Academy of Comic Book Arts.
Subject: Len Wein
Predicate: award
Object: Academy of Comic Book Arts

Triple: ['__subject__ Len Wein __predicate__ award __object__ Academy of Comic Book Arts']
Text: Len Wein has won awards from the Academy of Comic Book Arts.
Subject: Len Wein
Predicate: award
Object: Academy of Comic Book Arts

Triple: ['__subject__ Len Wein __predicate__ award __object__ Inkpot Award']
Text: Len Wein won the Inkpot Award.
Subject: Len Wein
Predicate: award
Object: Inkpot Award

Triple: ['__subject__ Len Wein __predicate__ award __object__ Inkpot Award']
Text: Len Wein is an Inkpot Award winner.
Subject: Len Wein
Predicate: award
Object: Inkpot Award

Triple: ['__subject__ Marv Wolfman __predicate__ award __object__ Academy of Comic Book Arts']
Text: Marv Wolfman won an award at the Academy of Comic Book Arts.
Subject: Marv Wolfman
Predicate: award
Object: Academy of Comic Book Arts

Triple: ['__subject__ Marv Wolfman __predicate__ award __object__ Inkpot Award']
Text: Marv Wolfman won the Inkpot Award.
Subject: Marv Wolfman
Predicate: award
Object: Inkpot Award

Triple: ['__subject__ Marv Wolfman __predicate__ award __object__ Inkpot Award']
Text: Marv Wolfman was awarded the Inkpot Award.
Subject: Marv Wolfman
Predicate: award
Object: Inkpot Award

Triple: ['__subject__ Paris Cullins __predicate__ nationality __object__ United States']
Text: Paris Cullins is a United States national.
Subject: Paris Cullins
Predicate: nationality
Object: United States

Triple: ['__subject__ Paris Cullins __predicate__ nationality __object__ United States']
Text: The nationality of Paris Cullins is United States.
Subject: Paris Cullins
Predicate: nationality
Object: United States

Triple: ['__subject__ René Goscinny __predicate__ nationality __object__ French people']
Text: Rene Goscinny is a French national.
Subject: René Goscinny
Predicate: nationality
Object: French people

Triple: ['__subject__ René Goscinny __predicate__ nationality __object__ French people']
Text: The nationality of René Goscinny is French.
Subject: René Goscinny
Predicate: nationality
Object: French people

Triple: ['__subject__ Roger McKenzie (comic book writer) __predicate__ nationality __object__ United States']
Text: The comic book writer, Roger McKenzie, is a United States national.
Subject: Roger McKenzie (comic book writer)
Predicate: nationality
Object: United States

Triple: ['__subject__ Roger McKenzie (comic book writer) __predicate__ nationality __object__ United States']
Text: The comic book writer, Roger McKenzie is an American.
Subject: Roger McKenzie (comic book writer)
Predicate: nationality
Object: United States

Triple: ['__subject__ Roy Thomas __predicate__ award __object__ Academy of Comic Book Arts']
Text: Roy Thomas was an award winner at the Academy of Comic Book Arts.
Subject: Roy Thomas
Predicate: award
Object: Academy of Comic Book Arts

Triple: ['__subject__ Roy Thomas __predicate__ award __object__ Academy of Comic Book Arts']
Text: Roy Thomas received an award from the Academy of Comic Book Arts.
Subject: Roy Thomas
Predicate: award
Object: Academy of Comic Book Arts

Triple: ['__subject__ Roy Thomas __predicate__ award __object__ Academy of Comic Book Arts']
Text: Roy Thomas won an award from the Academy of Comic Book Arts.
Subject: Roy Thomas
Predicate: award
Object: Academy of Comic Book Arts

Triple: ['__subject__ Roy Thomas __predicate__ award __object__ Alley Award']
Text: Roy Thomas was awarded the Alley Award.
Subject: Roy Thomas
Predicate: award
Object: Alley Award

Triple: ['__subject__ Roy Thomas __predicate__ award __object__ Alley Award']
Text: Roy Thomas won the Alley Award.
Subject: Roy Thomas
Predicate: award
Object: Alley Award

Triple: ['__subject__ Sheldon Moldoff __predicate__ award __object__ Inkpot Award']
Text: Sheldon Moldoff won the Inkpot Award.
Subject: Sheldon Moldoff
Predicate: award
Object: Inkpot Award

Triple: ['__subject__ Sheldon Moldoff __predicate__ award __object__ Inkpot Award']
Text: Sheldon Moldoff has won the Inkpot Award.
Subject: Sheldon Moldoff
Predicate: award
Object: Inkpot Award

Triple: ['__subject__ Sheldon Moldoff __predicate__ nationality __object__ Americans']
Text: Sheldon Moldoff was an American national.
Subject: Sheldon Moldoff
Predicate: nationality
Object: Americans

Triple: ['__subject__ Sheldon Moldoff __predicate__ nationality __object__ Americans']
Text: Sheldon Moldoff is an American.
Subject: Sheldon Moldoff
Predicate: nationality
Object: Americans

Triple: ['__subject__ The Arrow (comicsCharacter) __predicate__ alternativeName __object__ Ralph Payne']
Text: The Arrow is otherwise known as Ralph Payne.
Subject: The Arrow (comicsCharacter)
Predicate: alternativeName
Object: Ralph Payne

Triple: ['__subject__ The Arrow (comicsCharacter) __predicate__ alternativeName __object__ Ralph Payne']
Text: The alternative name for the comic character, the Arrow, is Ralph Payne.
Subject: The Arrow (comicsCharacter)
Predicate: alternativeName
Object: Ralph Payne

Triple: ['__subject__ The Arrow (comicsCharacter) __predicate__ alternativeName __object__ Rick Parker']
Text: Rick Parker, is the alternative name for the comic character, the Arrow.
Subject: The Arrow (comicsCharacter)
Predicate: alternativeName
Object: Rick Parker

Triple: ['__subject__ The Arrow (comicsCharacter) __predicate__ alternativeName __object__ Rick Parker']
Text: The alternative name for The Arrow (comics character) is "Rick Parker".
Subject: The Arrow (comicsCharacter)
Predicate: alternativeName
Object: Rick Parker

Triple: ['__subject__ The Arrow (comicsCharacter) __predicate__ alternativeName __object__ Rick Parker']
Text: The comic book character The Arrow's alter ego is Rick Parker.
Subject: The Arrow (comicsCharacter)
Predicate: alternativeName
Object: Rick Parker

Triple: ['__subject__ The Arrow (comicsCharacter) __predicate__ creator __object__ Paul Gustavson']
Text: Paul Gustavson created The Arrow.
Subject: The Arrow (comicsCharacter)
Predicate: creator
Object: Paul Gustavson

Triple: ['__subject__ The Arrow (comicsCharacter) __predicate__ creator __object__ Paul Gustavson']
Text: The comic character, The Arrow, was created by Paul Gustavson.
Subject: The Arrow (comicsCharacter)
Predicate: creator
Object: Paul Gustavson

Triple: ['__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ Buxton']
Text: Tim Brooke-Taylor was born in Buxton.
Subject: Tim Brooke-Taylor
Predicate: birthPlace
Object: Buxton

Triple: ['__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ Buxton']
Text: Buxton is the birthplace of Tim Brooke-Taylor.
Subject: Tim Brooke-Taylor
Predicate: birthPlace
Object: Buxton

Triple: ['__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ Derbyshire']
Text: Tim Brooke-Taylor was born in Derbyshire.
Subject: Tim Brooke-Taylor
Predicate: birthPlace
Object: Derbyshire

Triple: ['__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ Derbyshire']
Text: The birth place of Tim Brooke-Taylor is Derbyshire.
Subject: Tim Brooke-Taylor
Predicate: birthPlace
Object: Derbyshire

Triple: ['__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ England']
Text: Tim Brooke-Taylor was born in England.
Subject: Tim Brooke-Taylor
Predicate: birthPlace
Object: England

Triple: ['__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ England']
Text: England is the birth place of Tim Brooke-Taylor.
Subject: Tim Brooke-Taylor
Predicate: birthPlace
Object: England

Triple: ['__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ United Kingdom']
Text: Tim Brooke-Taylor's birth place is the United Kingdom.
Subject: Tim Brooke-Taylor
Predicate: birthPlace
Object: United Kingdom

Triple: ['__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ United Kingdom']
Text: Tim Brooke-Taylor was born in the UK.
Subject: Tim Brooke-Taylor
Predicate: birthPlace
Object: United Kingdom

Triple: ['__subject__ Tim Brooke-Taylor __predicate__ birthPlace __object__ United Kingdom']
Text: The birth place of Tim Brooke-Taylor is United Kingdom.
Subject: Tim Brooke-Taylor
Predicate: birthPlace
Object: United Kingdom

Triple: ['__subject__ AmeriGas __predicate__ country __object__ United States']
Text: AmeriGas works in the country of the United States.
Subject: AmeriGas
Predicate: country
Object: United States

Triple: ['__subject__ AmeriGas __predicate__ country __object__ United States']
Text: AmeriGas's home country is the United States.
Subject: AmeriGas
Predicate: country
Object: United States

Triple: ['__subject__ AmeriGas __predicate__ country __object__ United States']
Text: AmeriGas is working in the United States.
Subject: AmeriGas
Predicate: country
Object: United States

Triple: ['__subject__ AmeriGas __predicate__ country __object__ United States']
Text: AmeriGas is located in the country of the United States.
Subject: AmeriGas
Predicate: country
Object: United States

Triple: ['__subject__ AmeriGas __predicate__ foundingDate __object__ 1959-01-01']
Text: AmeriGas was founded on 01-01-1959.
Subject: AmeriGas
Predicate: foundingDate
Object: 1959-01-01

Triple: ['__subject__ AmeriGas __predicate__ foundingDate __object__ 1959-01-01']
Text: AmeriGas was founded on January 1, 1959.
Subject: AmeriGas
Predicate: foundingDate
Object: 1959-01-01

Triple: ['__subject__ AmeriGas __predicate__ foundingDate __object__ 1959-01-01']
Text: AmeriGas was founded on 1959-01-01.
Subject: AmeriGas
Predicate: foundingDate
Object: 1959-01-01

Triple: ['__subject__ AmeriGas __predicate__ industry __object__ Energy industry']
Text: AmeriGas is in the energy industry.
Subject: AmeriGas
Predicate: industry
Object: Energy industry

Triple: ['__subject__ AmeriGas __predicate__ industry __object__ Energy industry']
Text: AmeriGas is a company in the energy industry.
Subject: AmeriGas
Predicate: industry
Object: Energy industry

Triple: ['__subject__ AmeriGas __predicate__ industry __object__ Energy industry']
Text: AmeriGas's industry is classified as the energy industry.
Subject: AmeriGas
Predicate: industry
Object: Energy industry

Triple: ['__subject__ AmeriGas __predicate__ city __object__ King of Prussia, Pennsylvania']
Text: AmeriGas is located in King of Prussia, Pennsylvania.
Subject: AmeriGas
Predicate: city
Object: King of Prussia, Pennsylvania

Triple: ['__subject__ AmeriGas __predicate__ city __object__ King of Prussia, Pennsylvania']
Text: AmeriGas's location is the city of King of Prussia, Pennsylvania.
Subject: AmeriGas
Predicate: city
Object: King of Prussia, Pennsylvania

Triple: ['__subject__ AmeriGas __predicate__ netIncome __object__ 211200000']
Text: The net income of AmeriGas is 211200000.
Subject: AmeriGas
Predicate: netIncome
Object: 211200000

Triple: ['__subject__ AmeriGas __predicate__ netIncome __object__ 211200000']
Text: AmeriGas has a net income of $211,200,000.
Subject: AmeriGas
Predicate: netIncome
Object: 211200000

Triple: ['__subject__ AmeriGas __predicate__ netIncome __object__ 211200000']
Text: AmeriGas earns 211200000 of net income.
Subject: AmeriGas
Predicate: netIncome
Object: 211200000

Triple: ['__subject__ AmeriGas __predicate__ netIncome __object__ 211200000']
Text: AmeriGas has a net income of 211200000.
Subject: AmeriGas
Predicate: netIncome
Object: 211200000

Triple: ['__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000']
Text: AmeriGas has an operating income of $380,700,000.
Subject: AmeriGas
Predicate: operatingIncome
Object: 380700000

Triple: ['__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000']
Text: The operating income earned by AmeriGas is 380700000.
Subject: AmeriGas
Predicate: operatingIncome
Object: 380700000

Triple: ['__subject__ AmeriGas __predicate__ operatingIncome __object__ 380700000']
Text: The operating income of AmeriGas is 380700000.
Subject: AmeriGas
Predicate: operatingIncome
Object: 380700000

Triple: ['__subject__ AmeriGas __predicate__ regionServed __object__ United States']
Text: AmeriGas provides its services in the United States.
Subject: AmeriGas
Predicate: regionServed
Object: United States

Triple: ['__subject__ AmeriGas __predicate__ regionServed __object__ United States']
Text: AmeriGas serves all regions of the United States.
Subject: AmeriGas
Predicate: regionServed
Object: United States

Triple: ['__subject__ AmeriGas __predicate__ regionServed __object__ United States']
Text: AmeriGas serves the United States.
Subject: AmeriGas
Predicate: regionServed
Object: United States

Triple: ['__subject__ Brazil __predicate__ areaTotal __object__ 8514837.14  (square kilometres)']
Text: The total area of Brazil is 8514837.14 square kilometres.
Subject: Brazil
Predicate: areaTotal
Object: 8514837.14  (square kilometres)

Triple: ['__subject__ Brazil __predicate__ areaTotal __object__ 8514837.14  (square kilometres)']
Text: Brazil has a total area of 8514837.14 square kilometres.
Subject: Brazil
Predicate: areaTotal
Object: 8514837.14  (square kilometres)

Triple: ['__subject__ Brazil __predicate__ areaTotal __object__ 8514837.14  (square kilometres)']
Text: The total area of Brazil is 8514837.14 (square kilometres).
Subject: Brazil
Predicate: areaTotal
Object: 8514837.14  (square kilometres)

Triple: ['__subject__ Brazil __predicate__ areaTotal __object__ 8514837.14  (square kilometres)']
Text: Brazil has a total area of 8514837.14 (square kilometers).
Subject: Brazil
Predicate: areaTotal
Object: 8514837.14  (square kilometres)

Triple: ['__subject__ Brazil __predicate__ leader __object__ Michel Temer']
Text: Michel Temer is the leader of Brazil.
Subject: Brazil
Predicate: leader
Object: Michel Temer

Triple: ['__subject__ Brazil __predicate__ leader __object__ Michel Temer']
Text: The leader of Brazil is named Michel Temer.
Subject: Brazil
Predicate: leader
Object: Michel Temer

Triple: ['__subject__ Brazil __predicate__ leader __object__ Michel Temer']
Text: Michel Temer was the president of Brazil.
Subject: Brazil
Predicate: leader
Object: Michel Temer

Triple: ['__subject__ Brazil __predicate__ leader __object__ Michel Temer']
Text: The name of the leader of Brazil is Michel Temer.
Subject: Brazil
Predicate: leader
Object: Michel Temer

Triple: ['__subject__ Brazil __predicate__ leaderTitle __object__ President of the Supreme Federal Court']
Text: Brazil's leader has the title of President of the Supreme Federal Court.
Subject: Brazil
Predicate: leaderTitle
Object: President of the Supreme Federal Court

Triple: ['__subject__ Brazil __predicate__ leaderTitle __object__ President of the Supreme Federal Court']
Text: President of the Supreme Federal Court is one of the leaders in Brazil.
Subject: Brazil
Predicate: leaderTitle
Object: President of the Supreme Federal Court

Triple: ['__subject__ Brazil __predicate__ leaderTitle __object__ President of the Supreme Federal Court']
Text: President of the Supreme Federal Court is a leader title in Brazil.
Subject: Brazil
Predicate: leaderTitle
Object: President of the Supreme Federal Court

Triple: ['__subject__ Brazil __predicate__ leaderTitle __object__ President of the Supreme Federal Court']
Text: One of the leaders in Brazil has the title of President of the Supreme Federal Court.
Subject: Brazil
Predicate: leaderTitle
Object: President of the Supreme Federal Court

Triple: ['__subject__ Brazil __predicate__ populationDensity __object__ 23.8']
Text: Brazil has a population density of 23.8.
Subject: Brazil
Predicate: populationDensity
Object: 23.8

Triple: ['__subject__ Brazil __predicate__ populationDensity __object__ 23.8']
Text: The population density of Brazil is 23.8 per square kilometer.
Subject: Brazil
Predicate: populationDensity
Object: 23.8

Triple: ['__subject__ Brazil __predicate__ populationDensity __object__ 23.8']
Text: The population density in Brazil is 23.8.
Subject: Brazil
Predicate: populationDensity
Object: 23.8

Triple: ['__subject__ Brazil __predicate__ populationDensity __object__ 23.8']
Text: The population density of Brazil is 23.8.
Subject: Brazil
Predicate: populationDensity
Object: 23.8

Triple: ['__subject__ Chinabank __predicate__ foundationPlace __object__ Insular Government of the Philippine Islands']
Text: Chinabank was founded in the Insular Government of the Philippine Islands.
Subject: Chinabank
Predicate: foundationPlace
Object: Insular Government of the Philippine Islands

Triple: ['__subject__ Chinabank __predicate__ foundationPlace __object__ Insular Government of the Philippine Islands']
Text: Chinabank's foundation place is the Insular Government of the Philippine Islands.
Subject: Chinabank
Predicate: foundationPlace
Object: Insular Government of the Philippine Islands

Triple: ['__subject__ Chinabank __predicate__ foundationPlace __object__ Insular Government of the Philippine Islands']
Text: Chinabank's founding place was the Insular Government of the Philippine Islands.
Subject: Chinabank
Predicate: foundationPlace
Object: Insular Government of the Philippine Islands

Triple: ['__subject__ Chinabank __predicate__ foundationPlace __object__ Manila']
Text: Manila is Chinabank’s founding place.
Subject: Chinabank
Predicate: foundationPlace
Object: Manila

Triple: ['__subject__ Chinabank __predicate__ foundationPlace __object__ Manila']
Text: Manila is the founding place of Chinabank.
Subject: Chinabank
Predicate: foundationPlace
Object: Manila

Triple: ['__subject__ Chinabank __predicate__ foundationPlace __object__ Manila']
Text: Chinabank was founded in Manila.
Subject: Chinabank
Predicate: foundationPlace
Object: Manila

Triple: ['__subject__ Chinabank __predicate__ foundingDate __object__ 1920-08-16']
Text: Chinabank was founded on 08-16-1920.
Subject: Chinabank
Predicate: foundingDate
Object: 1920-08-16

Triple: ['__subject__ Chinabank __predicate__ foundingDate __object__ 1920-08-16']
Text: Chinabank was founded on 1920-08-16.
Subject: Chinabank
Predicate: foundingDate
Object: 1920-08-16

Triple: ['__subject__ Chinabank __predicate__ foundingDate __object__ 1920-08-16']
Text: Chinabank was founded on the 16th of August, 1920.
Subject: Chinabank
Predicate: foundingDate
Object: 1920-08-16

Triple: ['__subject__ Chinabank __predicate__ foundingDate __object__ 1920-08-16']
Text: Chinabank was founded on 08/16/1920.
Subject: Chinabank
Predicate: foundingDate
Object: 1920-08-16

Triple: ['__subject__ Chinabank __predicate__ numberOfEmployees __object__ 5594']
Text: Chinabank has 5594 employees.
Subject: Chinabank
Predicate: numberOfEmployees
Object: 5594

Triple: ['__subject__ Chinabank __predicate__ numberOfEmployees __object__ 5594']
Text: The number of employees working at Chinabank is 5594.
Subject: Chinabank
Predicate: numberOfEmployees
Object: 5594

Triple: ['__subject__ Chinabank __predicate__ numberOfEmployees __object__ 5594']
Text: Chinabank has 5594 workers.
Subject: Chinabank
Predicate: numberOfEmployees
Object: 5594

Triple: ['__subject__ Chinabank __predicate__ numberOfEmployees __object__ 5594']
Text: Chinabank employs 5,594 employees.
Subject: Chinabank
Predicate: numberOfEmployees
Object: 5594

Triple: ['__subject__ Chinabank __predicate__ numberOfLocations __object__ 295']
Text: Chinabank has 295 locations.
Subject: Chinabank
Predicate: numberOfLocations
Object: 295

Triple: ['__subject__ Chinabank __predicate__ numberOfLocations __object__ 295']
Text: Chinabank has 295 branches.
Subject: Chinabank
Predicate: numberOfLocations
Object: 295

Triple: ['__subject__ Chinabank __predicate__ numberOfLocations __object__ 295']
Text: Chinabank has 295 banking centers.
Subject: Chinabank
Predicate: numberOfLocations
Object: 295

Triple: ['__subject__ Chinabank __predicate__ service __object__ Banking']
Text: Chinabank offers banking service.
Subject: Chinabank
Predicate: service
Object: Banking

Triple: ['__subject__ Chinabank __predicate__ service __object__ Banking']
Text: Chinabank's service is banking.
Subject: Chinabank
Predicate: service
Object: Banking

Triple: ['__subject__ Chinabank __predicate__ service __object__ Banking']
Text: Chinabank provides banking services to customers.
Subject: Chinabank
Predicate: service
Object: Banking

Triple: ['__subject__ Chinabank __predicate__ service __object__ Banking']
Text: Chinabank is a company that offers Banking services.
Subject: Chinabank
Predicate: service
Object: Banking

Triple: ['__subject__ Chinabank __predicate__ type __object__ Public company']
Text: Chinabank is a publicly traded company.
Subject: Chinabank
Predicate: type
Object: Public company

Triple: ['__subject__ Chinabank __predicate__ type __object__ Public company']
Text: Chinabank is a public company.
Subject: Chinabank
Predicate: type
Object: Public company

Triple: ['__subject__ Felipe Gozon __predicate__ alternativeName __object__ Atty. Felipe L. Gozon, FLG']
Text: Felipe Gozon is also known by Attorney Felipe L. Gozon, FLG.
Subject: Felipe Gozon
Predicate: alternativeName
Object: Atty. Felipe L. Gozon, FLG

Triple: ['__subject__ Felipe Gozon __predicate__ alternativeName __object__ Atty. Felipe L. Gozon, FLG']
Text: Felipe Gozon's alternative name is Atty. Felipe L. Gozon, FLG.
Subject: Felipe Gozon
Predicate: alternativeName
Object: Atty. Felipe L. Gozon, FLG

Triple: ['__subject__ Felipe Gozon __predicate__ alternativeName __object__ Atty. Felipe L. Gozon, FLG']
Text: Felipe Gozon is also known as Atty. Felipe L. Gozon, FLG.
Subject: Felipe Gozon
Predicate: alternativeName
Object: Atty. Felipe L. Gozon, FLG

Triple: ['__subject__ Felipe Gozon __predicate__ birthDate __object__ 1939-12-08']
Text: Felipe Gozon's birthdate is 1939-12-08.
Subject: Felipe Gozon
Predicate: birthDate
Object: 1939-12-08

Triple: ['__subject__ Felipe Gozon __predicate__ birthDate __object__ 1939-12-08']
Text: Felipe Gozon was born on December 8, 1939.
Subject: Felipe Gozon
Predicate: birthDate
Object: 1939-12-08

Triple: ['__subject__ Felipe Gozon __predicate__ birthDate __object__ 1939-12-08']
Text: Felipe Gozon was born December 8, 1939.
Subject: Felipe Gozon
Predicate: birthDate
Object: 1939-12-08

Triple: ['__subject__ GMA Network (company) __predicate__ keyPerson __object__ Felipe Gozon']
Text: GMA Network is a company and its key person is Felipe Gozon.
Subject: GMA Network (company)
Predicate: keyPerson
Object: Felipe Gozon

Triple: ['__subject__ GMA Network (company) __predicate__ keyPerson __object__ Felipe Gozon']
Text: Felipe Gozon is a key person in the GMA Network company.
Subject: GMA Network (company)
Predicate: keyPerson
Object: Felipe Gozon

Triple: ['__subject__ GMA Network (company) __predicate__ keyPerson __object__ Felipe Gozon']
Text: GMA Network’s boss is Felipe Gozon.
Subject: GMA Network (company)
Predicate: keyPerson
Object: Felipe Gozon

Triple: ['__subject__ GMA Network (company) __predicate__ keyPerson __object__ Felipe Gozon']
Text: Felipe Gozon is the key person of GMA Network.
Subject: GMA Network (company)
Predicate: keyPerson
Object: Felipe Gozon

Triple: ['__subject__ GMA Network (company) __predicate__ city __object__ Diliman']
Text: GMA Network is a company located in the city of Diliman.
Subject: GMA Network (company)
Predicate: city
Object: Diliman

Triple: ['__subject__ GMA Network (company) __predicate__ city __object__ Diliman']
Text: GMA Network is a company based in Diliman.
Subject: GMA Network (company)
Predicate: city
Object: Diliman

Triple: ['__subject__ GMA Network (company) __predicate__ city __object__ Diliman']
Text: GMA Network is located in Diliman.
Subject: GMA Network (company)
Predicate: city
Object: Diliman

Triple: ['__subject__ GMA Network Center __predicate__ cost __object__ 46000000']
Text: The GMA Network Center costs 46000000.
Subject: GMA Network Center
Predicate: cost
Object: 46000000

Triple: ['__subject__ GMA Network Center __predicate__ cost __object__ 46000000']
Text: GMA Network Center costs $46,000,000.
Subject: GMA Network Center
Predicate: cost
Object: 46000000

Triple: ['__subject__ GMA Network Center __predicate__ cost __object__ 46000000']
Text: GMA Network Center costs 46,000,000.
Subject: GMA Network Center
Predicate: cost
Object: 46000000

Triple: ['__subject__ GMA Network Center __predicate__ cost __object__ 46000000']
Text: The GMA Network Center is worth $46,000,000.
Subject: GMA Network Center
Predicate: cost
Object: 46000000

Triple: ['__subject__ GMA New Media __predicate__ foundingDate __object__ 2000-01-01']
Text: GMA New Media was founded on 01/01/2000.
Subject: GMA New Media
Predicate: foundingDate
Object: 2000-01-01

Triple: ['__subject__ GMA New Media __predicate__ foundingDate __object__ 2000-01-01']
Text: GMA New Media was founded on 01-01-2000.
Subject: GMA New Media
Predicate: foundingDate
Object: 2000-01-01

Triple: ['__subject__ GMA New Media __predicate__ foundingDate __object__ 2000-01-01']
Text: GMA New Media was founded on January 1, 2000.
Subject: GMA New Media
Predicate: foundingDate
Object: 2000-01-01

Triple: ['__subject__ GMA New Media __predicate__ foundingDate __object__ 2000-01-01']
Text: The founding date of GMA New Media is 01-01-2000.
Subject: GMA New Media
Predicate: foundingDate
Object: 2000-01-01

Triple: ['__subject__ GMA New Media __predicate__ industry __object__ Entertainment']
Text: GMA New Media offers applications in the entertainment industry.
Subject: GMA New Media
Predicate: industry
Object: Entertainment

Triple: ['__subject__ GMA New Media __predicate__ industry __object__ Entertainment']
Text: GMA New Media is an entertainment industry.
Subject: GMA New Media
Predicate: industry
Object: Entertainment

Triple: ['__subject__ GMA New Media __predicate__ industry __object__ Entertainment']
Text: GMA New Media is in the entertainment industry.
Subject: GMA New Media
Predicate: industry
Object: Entertainment

Triple: ['__subject__ GMA New Media __predicate__ industry __object__ Mass Media']
Text: GMA New Media is in the mass media industry.
Subject: GMA New Media
Predicate: industry
Object: Mass Media

Triple: ['__subject__ GMA New Media __predicate__ industry __object__ Mass Media']
Text: GMA New Media is a mass media industry.
Subject: GMA New Media
Predicate: industry
Object: Mass Media

Triple: ['__subject__ GMA New Media __predicate__ industry __object__ Mass Media']
Text: GMA New Media's industry is mass media.
Subject: GMA New Media
Predicate: industry
Object: Mass Media

Triple: ['__subject__ GMA New Media __predicate__ location __object__ Philippines']
Text: GMA New Media is located in the Philippines.
Subject: GMA New Media
Predicate: location
Object: Philippines

Triple: ['__subject__ GMA New Media __predicate__ location __object__ Quezon City']
Text: GMA New Media is located in the city of Quezon.
Subject: GMA New Media
Predicate: location
Object: Quezon City

Triple: ['__subject__ GMA New Media __predicate__ location __object__ Quezon City']
Text: GMA New Media is located in Quezon City.
Subject: GMA New Media
Predicate: location
Object: Quezon City

Triple: ['__subject__ GMA New Media __predicate__ location __object__ Quezon City']
Text: GMA New Media headquarters are located in Quezon City.
Subject: GMA New Media
Predicate: location
Object: Quezon City

Triple: ['__subject__ GMA New Media __predicate__ location __object__ Quezon City']
Text: The location of GMA New Media is Quezon City.
Subject: GMA New Media
Predicate: location
Object: Quezon City

Triple: ['__subject__ GMA New Media __predicate__ product __object__ Mobile Applications']
Text: GMA New Media makes mobile apps.
Subject: GMA New Media
Predicate: product
Object: Mobile Applications

Triple: ['__subject__ GMA New Media __predicate__ product __object__ Mobile Applications']
Text: GMA New Media makes mobile applications.
Subject: GMA New Media
Predicate: product
Object: Mobile Applications

Triple: ['__subject__ GMA New Media __predicate__ product __object__ Mobile Applications']
Text: GMA New Media is a company that offers products such as mobile applications.
Subject: GMA New Media
Predicate: product
Object: Mobile Applications

Triple: ['__subject__ GMA New Media __predicate__ product __object__ Mobile Applications']
Text: GMA New Media produces mobile applications.
Subject: GMA New Media
Predicate: product
Object: Mobile Applications

Triple: ['__subject__ GMA New Media __predicate__ subsidiary __object__ Digify, Inc.']
Text: Digify Inc. is a subsidiary of GMA New Media.
Subject: GMA New Media
Predicate: subsidiary
Object: Digify, Inc.

Triple: ['__subject__ GMA New Media __predicate__ subsidiary __object__ Digify, Inc.']
Text: Digify Inc is a subsidiary of GMA New Media.
Subject: GMA New Media
Predicate: subsidiary
Object: Digify, Inc.

Triple: ['__subject__ GMA New Media __predicate__ subsidiary __object__ Digify, Inc.']
Text: GMA New Media’s subsidiary is Digify, Inc.
Subject: GMA New Media
Predicate: subsidiary
Object: Digify, Inc.

Triple: ['__subject__ GMA New Media __predicate__ subsidiary __object__ Digify, Inc.']
Text: Digify, Inc. is a subsidiary of GMA New Media.
Subject: GMA New Media
Predicate: subsidiary
Object: Digify, Inc.

Triple: ['__subject__ GMA New Media __predicate__ subsidiary __object__ Philippine Entertainment Portal']
Text: Philippine Entertainment Portal, Inc is a subsidiary of GMA New Media.
Subject: GMA New Media
Predicate: subsidiary
Object: Philippine Entertainment Portal

Triple: ['__subject__ GMA New Media __predicate__ subsidiary __object__ Philippine Entertainment Portal']
Text: GMA New Media's subsidiary is Philippine Entertainment Portal.
Subject: GMA New Media
Predicate: subsidiary
Object: Philippine Entertainment Portal

Triple: ['__subject__ GMA New Media __predicate__ subsidiary __object__ Philippine Entertainment Portal']
Text: Philippine Entertainment Portal is a subsidiary of GMA New Media.
Subject: GMA New Media
Predicate: subsidiary
Object: Philippine Entertainment Portal

Triple: ['__subject__ Hypermarcas __predicate__ foundingDate __object__ 2001-01-01']
Text: Hypermarcas is the company founded on January 1, 2001.
Subject: Hypermarcas
Predicate: foundingDate
Object: 2001-01-01

Triple: ['__subject__ Hypermarcas __predicate__ foundingDate __object__ 2001-01-01']
Text: Hypermarcas was founded on January 1, 2001.
Subject: Hypermarcas
Predicate: foundingDate
Object: 2001-01-01

Triple: ['__subject__ Hypermarcas __predicate__ foundingDate __object__ 2001-01-01']
Text: Hypermarcas was founded on 2001-01-01.
Subject: Hypermarcas
Predicate: foundingDate
Object: 2001-01-01

Triple: ['__subject__ Hypermarcas __predicate__ industry __object__ Pharmaceuticals']
Text: Hypermarcas is in the pharmaceuticals industry.
Subject: Hypermarcas
Predicate: industry
Object: Pharmaceuticals

Triple: ['__subject__ Hypermarcas __predicate__ industry __object__ Pharmaceuticals']
Text: Hypermarcas is a pharmaceutical company.
Subject: Hypermarcas
Predicate: industry
Object: Pharmaceuticals

Triple: ['__subject__ Hypermarcas __predicate__ industry __object__ Pharmaceuticals']
Text: Hypermarcas is in the pharmaceutical industry.
Subject: Hypermarcas
Predicate: industry
Object: Pharmaceuticals

Triple: ['__subject__ Hypermarcas __predicate__ location __object__ Brazil']
Text: Hypermarcas is located in Brazil.
Subject: Hypermarcas
Predicate: location
Object: Brazil

Triple: ['__subject__ Hypermarcas __predicate__ location __object__ São Paulo']
Text: Hypermarcas is located in São Paulo.
Subject: Hypermarcas
Predicate: location
Object: São Paulo

Triple: ['__subject__ Hypermarcas __predicate__ location __object__ São Paulo']
Text: Hypermarcas is located in Sao Paulo.
Subject: Hypermarcas
Predicate: location
Object: São Paulo

Triple: ['__subject__ Hypermarcas __predicate__ netIncome __object__ 108600000']
Text: Hypermarcas has a net income of 108,600,000.
Subject: Hypermarcas
Predicate: netIncome
Object: 108600000

Triple: ['__subject__ Hypermarcas __predicate__ netIncome __object__ 108600000']
Text: Hypermarcas had a net income of $108,600,000.
Subject: Hypermarcas
Predicate: netIncome
Object: 108600000

Triple: ['__subject__ Hypermarcas __predicate__ netIncome __object__ 108600000']
Text: The net income of Hypermarcas is 108,600,000.
Subject: Hypermarcas
Predicate: netIncome
Object: 108600000

Triple: ['__subject__ Hypermarcas __predicate__ product __object__ Cosmetics']
Text: Hypermarcas produces cosmetics.
Subject: Hypermarcas
Predicate: product
Object: Cosmetics

Triple: ['__subject__ Hypermarcas __predicate__ product __object__ Cosmetics']
Text: Hypermarcas also sells cosmetics.
Subject: Hypermarcas
Predicate: product
Object: Cosmetics

Triple: ['__subject__ Hypermarcas __predicate__ product __object__ Cosmetics']
Text: Hypermarcas also makes cosmetics products.
Subject: Hypermarcas
Predicate: product
Object: Cosmetics

Triple: ['__subject__ Hypermarcas __predicate__ product __object__ Cosmetics']
Text: Hypermarcas makes cosmetic products.
Subject: Hypermarcas
Predicate: product
Object: Cosmetics

Triple: ['__subject__ Hypermarcas __predicate__ product __object__ Healthcare']
Text: Hypermarcas sells healthcare products.
Subject: Hypermarcas
Predicate: product
Object: Healthcare

Triple: ['__subject__ Hypermarcas __predicate__ product __object__ Healthcare']
Text: Hypermarcas makes healthcare products.
Subject: Hypermarcas
Predicate: product
Object: Healthcare

Triple: ['__subject__ Hypermarcas __predicate__ product __object__ Healthcare']
Text: Hypermarcas produces healthcare products.
Subject: Hypermarcas
Predicate: product
Object: Healthcare

Triple: ['__subject__ Hypermarcas __predicate__ subsidiary __object__ Mantecorp']
Text: Hypermarcas has a subsidiary called Mantecorp.
Subject: Hypermarcas
Predicate: subsidiary
Object: Mantecorp

Triple: ['__subject__ Hypermarcas __predicate__ subsidiary __object__ Mantecorp']
Text: Mantecorp is a subsidiary of Hypermarcas.
Subject: Hypermarcas
Predicate: subsidiary
Object: Mantecorp

Triple: ['__subject__ Hypermarcas __predicate__ type __object__ S.A. (corporation)']
Text: Hypermarcas is a type of S.A (corporation).
Subject: Hypermarcas
Predicate: type
Object: S.A. (corporation)

Triple: ['__subject__ Hypermarcas __predicate__ type __object__ S.A. (corporation)']
Text: Hypermarcas is an S.A. corporation.
Subject: Hypermarcas
Predicate: type
Object: S.A. (corporation)

Triple: ['__subject__ Hypermarcas __predicate__ type __object__ S.A. (corporation)']
Text: Hypermarcas is a type of S.A. corporation.
Subject: Hypermarcas
Predicate: type
Object: S.A. (corporation)

Triple: ['__subject__ Hypermarcas __predicate__ type __object__ S.A. (corporation)']
Text: Hypermarcas is an S.A. company.
Subject: Hypermarcas
Predicate: type
Object: S.A. (corporation)

Triple: ['__subject__ Insular Government of the Philippine Islands __predicate__ foundingDate __object__ 1901-07-01']
Text: The Insular Government of the Philippine Islands was founded on 1901-07-01.
Subject: Insular Government of the Philippine Islands
Predicate: foundingDate
Object: 1901-07-01

Triple: ['__subject__ Insular Government of the Philippine Islands __predicate__ foundingDate __object__ 1901-07-01']
Text: The Insular Government of the Philippine Islands was established on July 1, 1901.
Subject: Insular Government of the Philippine Islands
Predicate: foundingDate
Object: 1901-07-01

Triple: ['__subject__ Insular Government of the Philippine Islands __predicate__ foundingDate __object__ 1901-07-01']
Text: The founding date of the Insular Government of the Philippine Islands was 07-01-1901.
Subject: Insular Government of the Philippine Islands
Predicate: foundingDate
Object: 1901-07-01

Triple: ['__subject__ Insular Government of the Philippine Islands __predicate__ foundingDate __object__ 1901-07-01']
Text: The Insular Government of the Philippine Islands was founded on July 1, 1901.
Subject: Insular Government of the Philippine Islands
Predicate: foundingDate
Object: 1901-07-01

Triple: ['__subject__ Ireland __predicate__ location __object__ Europe']
Text: Ireland is located in Europe.
Subject: Ireland
Predicate: location
Object: Europe

Triple: ['__subject__ Ireland __predicate__ location __object__ Europe']
Text: Ireland is a country in Europe.
Subject: Ireland
Predicate: location
Object: Europe

Triple: ['__subject__ King of Prussia, Pennsylvania __predicate__ timeZone __object__ North American Eastern Time Zone']
Text: King of Prussia, Pennsylvania is in the North American Eastern time zone.
Subject: King of Prussia, Pennsylvania
Predicate: timeZone
Object: North American Eastern Time Zone

Triple: ['__subject__ King of Prussia, Pennsylvania __predicate__ timeZone __object__ North American Eastern Time Zone']
Text: The time zone for King of Prussia, Pennsylvania is the North American Eastern Time Zone.
Subject: King of Prussia, Pennsylvania
Predicate: timeZone
Object: North American Eastern Time Zone

Triple: ['__subject__ King of Prussia, Pennsylvania __predicate__ timeZone __object__ North American Eastern Time Zone']
Text: King of Prussia, Pennsylvania is in the North American Eastern Time Zone.
Subject: King of Prussia, Pennsylvania
Predicate: timeZone
Object: North American Eastern Time Zone

Triple: ['__subject__ King of Prussia, Pennsylvania __predicate__ type __object__ Census-designated place']
Text: King of Prussia, Pennsylvania is a census-designated place.
Subject: King of Prussia, Pennsylvania
Predicate: type
Object: Census-designated place

Triple: ['__subject__ King of Prussia, Pennsylvania __predicate__ type __object__ Census-designated place']
Text: King of Prussia in Pennsylvania is a census-designated place.
Subject: King of Prussia, Pennsylvania
Predicate: type
Object: Census-designated place

Triple: ['__subject__ La Crosse, Wisconsin __predicate__ isPartOf __object__ Wisconsin']
Text: La Crosse is located in Wisconsin.
Subject: La Crosse, Wisconsin
Predicate: isPartOf
Object: Wisconsin

Triple: ['__subject__ La Crosse, Wisconsin __predicate__ isPartOf __object__ Wisconsin']
Text: La Crosse Wisconsin is part of Wisconsin.
Subject: La Crosse, Wisconsin
Predicate: isPartOf
Object: Wisconsin

Triple: ['__subject__ La Crosse, Wisconsin __predicate__ isPartOf __object__ Wisconsin']
Text: La Crosse is a city in the U.S. state of Wisconsin.
Subject: La Crosse, Wisconsin
Predicate: isPartOf
Object: Wisconsin

Triple: ['__subject__ La Crosse, Wisconsin __predicate__ isPartOf __object__ Wisconsin']
Text: La Crosse is part of Wisconsin.
Subject: La Crosse, Wisconsin
Predicate: isPartOf
Object: Wisconsin

Triple: ['__subject__ Manila __predicate__ leaderTitle __object__ City Council']
Text: Manila is led by the City Council.
Subject: Manila
Predicate: leaderTitle
Object: City Council

Triple: ['__subject__ Manila __predicate__ leaderTitle __object__ City Council']
Text: Manila is ruled by the City Council.
Subject: Manila
Predicate: leaderTitle
Object: City Council

Triple: ['__subject__ Manila __predicate__ leaderTitle __object__ City Council']
Text: Manila is governed by the City Council.
Subject: Manila
Predicate: leaderTitle
Object: City Council

Triple: ['__subject__ Manila __predicate__ type __object__ Capital city']
Text: Manila is the capital.
Subject: Manila
Predicate: type
Object: Capital city

Triple: ['__subject__ Manila __predicate__ type __object__ Capital city']
Text: Manila is the capital city.
Subject: Manila
Predicate: type
Object: Capital city

Triple: ['__subject__ Manila __predicate__ type __object__ Capital city']
Text: Manila is a capital city.
Subject: Manila
Predicate: type
Object: Capital city

Triple: ['__subject__ Philippine Entertainment Portal __predicate__ parentCompany __object__ Summit Media']
Text: Philippine Entertainment Portal's parent company is Summit Media.
Subject: Philippine Entertainment Portal
Predicate: parentCompany
Object: Summit Media

Triple: ['__subject__ Philippine Entertainment Portal __predicate__ parentCompany __object__ Summit Media']
Text: Philippine Entertainment Portal is a subsidiary of the Summit Media company.
Subject: Philippine Entertainment Portal
Predicate: parentCompany
Object: Summit Media

Triple: ['__subject__ Philippine Entertainment Portal __predicate__ parentCompany __object__ Summit Media']
Text: Summit Media is the parent company of Philippine Entertainment Portal.
Subject: Philippine Entertainment Portal
Predicate: parentCompany
Object: Summit Media

Triple: ['__subject__ Philippines __predicate__ capital __object__ Manila']
Text: Manila is the capital city of the Philippines.
Subject: Philippines
Predicate: capital
Object: Manila

Triple: ['__subject__ Philippines __predicate__ capital __object__ Manila']
Text: Manila is the capital of the Philippines.
Subject: Philippines
Predicate: capital
Object: Manila

Triple: ['__subject__ Philippines __predicate__ capital __object__ Manila']
Text: The capital of the Philippines is Manila.
Subject: Philippines
Predicate: capital
Object: Manila

Triple: ['__subject__ Philippines __predicate__ foundingDate __object__ 1898-06-12']
Text: The Philippines were founded on 12/06/1898.
Subject: Philippines
Predicate: foundingDate
Object: 1898-06-12

Triple: ['__subject__ Philippines __predicate__ foundingDate __object__ 1898-06-12']
Text: The Philippines were founded on 1898-06-12.
Subject: Philippines
Predicate: foundingDate
Object: 1898-06-12

Triple: ['__subject__ Philippines __predicate__ foundingDate __object__ 1898-06-12']
Text: The founding date of the Philippines was 6-12-1898.
Subject: Philippines
Predicate: foundingDate
Object: 1898-06-12

Triple: ['__subject__ Philippines __predicate__ leader __object__ Aquilino Pimentel III']
Text: Aquilino Pimentel III is the leader of Philippines.
Subject: Philippines
Predicate: leader
Object: Aquilino Pimentel III

Triple: ['__subject__ Philippines __predicate__ leader __object__ Aquilino Pimentel III']
Text: The leader of the Philippines is Aquilino Pimentel III.
Subject: Philippines
Predicate: leader
Object: Aquilino Pimentel III

Triple: ['__subject__ Philippines __predicate__ leader __object__ Aquilino Pimentel III']
Text: Aquilino Pimentel III is a Filipino leader.
Subject: Philippines
Predicate: leader
Object: Aquilino Pimentel III

Triple: ['__subject__ Philippines __predicate__ leader __object__ Maria Lourdes Sereno']
Text: Maria Lourdes Sereno is the leader of the Philippines.
Subject: Philippines
Predicate: leader
Object: Maria Lourdes Sereno

Triple: ['__subject__ Philippines __predicate__ leader __object__ Maria Lourdes Sereno']
Text: Filipina leader's name: Maria Lourdes Sereno.
Subject: Philippines
Predicate: leader
Object: Maria Lourdes Sereno

Triple: ['__subject__ Philippines __predicate__ leader __object__ Maria Lourdes Sereno']
Text: The leader of the Philippines is Maria Lourdes Sereno.
Subject: Philippines
Predicate: leader
Object: Maria Lourdes Sereno

Triple: ['__subject__ Philippines __predicate__ leader __object__ Maria Lourdes Sereno']
Text: Maria Lourdes Sereno is a Filipina leader.
Subject: Philippines
Predicate: leader
Object: Maria Lourdes Sereno

Triple: ['__subject__ Philippines __predicate__ leader __object__ Pantaleon Alvarez']
Text: The name of the leader of the Philippines is Pantaleon Alvarez.
Subject: Philippines
Predicate: leader
Object: Pantaleon Alvarez

Triple: ['__subject__ Philippines __predicate__ leader __object__ Pantaleon Alvarez']
Text: Pantaleon Alvarez is a political leader in the Philippines.
Subject: Philippines
Predicate: leader
Object: Pantaleon Alvarez

Triple: ['__subject__ Philippines __predicate__ leader __object__ Pantaleon Alvarez']
Text: Pantaleon Alvarez is a Filipino leader.
Subject: Philippines
Predicate: leader
Object: Pantaleon Alvarez

Triple: ['__subject__ Philippines __predicate__ leader __object__ Pantaleon Alvarez']
Text: The leader of the Philippines is Pantaleon Alvarez.
Subject: Philippines
Predicate: leader
Object: Pantaleon Alvarez

Triple: ['__subject__ Philippines __predicate__ leaderTitle __object__ President']
Text: The President is the leader title of the Philippines.
Subject: Philippines
Predicate: leaderTitle
Object: President

Triple: ['__subject__ Philippines __predicate__ leaderTitle __object__ President']
Text: The leader of the Philippines has the title of President.
Subject: Philippines
Predicate: leaderTitle
Object: President

Triple: ['__subject__ Philippines __predicate__ leaderTitle __object__ President']
Text: The title of the leader of the Philippines is president.
Subject: Philippines
Predicate: leaderTitle
Object: President

Triple: ['__subject__ Philippines __predicate__ motto __object__ Maka-Diyos, Maka-Tao, Makakalikasan at Makabansa']
Text: The motto of the Philippines is Maka-Diyos, Maka-Tao, Makakalikasan at Makabansa.
Subject: Philippines
Predicate: motto
Object: Maka-Diyos, Maka-Tao, Makakalikasan at Makabansa

Triple: ['__subject__ Philippines __predicate__ motto __object__ Maka-Diyos, Maka-Tao, Makakalikasan at Makabansa']
Text: "Maka-Diyos, Maka-Tao, Makakalikasan at Makabansa" is a motto of the Philippines.
Subject: Philippines
Predicate: motto
Object: Maka-Diyos, Maka-Tao, Makakalikasan at Makabansa

Triple: ['__subject__ Philippines __predicate__ motto __object__ Maka-Diyos, Maka-Tao, Makakalikasan at Makabansa']
Text: The motto of the Philippines is "Maka-Diyos, Maka-Tao, Makakalikasan at Makabansa".
Subject: Philippines
Predicate: motto
Object: Maka-Diyos, Maka-Tao, Makakalikasan at Makabansa

Triple: ['__subject__ Philippines __predicate__ officialLanguage __object__ Filipino language']
Text: Filipino language is the official language in the Philippines.
Subject: Philippines
Predicate: officialLanguage
Object: Filipino language

Triple: ['__subject__ Philippines __predicate__ officialLanguage __object__ Filipino language']
Text: The official language of the Philippines is Filipino.
Subject: Philippines
Predicate: officialLanguage
Object: Filipino language

Triple: ['__subject__ Philippines __predicate__ officialLanguage __object__ Filipino language']
Text: The official language of the Philippines is the Filipino language.
Subject: Philippines
Predicate: officialLanguage
Object: Filipino language

Triple: ['__subject__ Philippines __predicate__ officialLanguage __object__ Filipino language']
Text: Filipino Language is the official language of the Philippines.
Subject: Philippines
Predicate: officialLanguage
Object: Filipino language

Triple: ['__subject__ Philippines __predicate__ officialLanguage __object__ Filipino language']
Text: The official language of the Philippines is Filipino language.
Subject: Philippines
Predicate: officialLanguage
Object: Filipino language

Triple: ['__subject__ Philippines __predicate__ officialLanguage __object__ Philippine English']
Text: Philippine English is the official language of the Philippines.
Subject: Philippines
Predicate: officialLanguage
Object: Philippine English

Triple: ['__subject__ Philippines __predicate__ officialLanguage __object__ Philippine English']
Text: The official language of the Philippines is Philippine English.
Subject: Philippines
Predicate: officialLanguage
Object: Philippine English

Triple: ['__subject__ Philippines __predicate__ timeZone __object__ Philippine Standard Time']
Text: The time zone used by the Philippines is Philippine Standard time.
Subject: Philippines
Predicate: timeZone
Object: Philippine Standard Time

Triple: ['__subject__ Philippines __predicate__ timeZone __object__ Philippine Standard Time']
Text: The Philippines' time zone is Philippine Standard Time.
Subject: Philippines
Predicate: timeZone
Object: Philippine Standard Time

Triple: ['__subject__ Philippines __predicate__ timeZone __object__ Philippine Standard Time']
Text: The Philippines is in the Philippine Standard Time Zone.
Subject: Philippines
Predicate: timeZone
Object: Philippine Standard Time

Triple: ['__subject__ Philippines __predicate__ timeZone __object__ Philippine Standard Time']
Text: The time zone for the Philippines is Philippine Standard Time.
Subject: Philippines
Predicate: timeZone
Object: Philippine Standard Time

Triple: ['__subject__ Quezon City __predicate__ areaTotal __object__ 165.33']
Text: Quezon City has a total area of 165.33.
Subject: Quezon City
Predicate: areaTotal
Object: 165.33

Triple: ['__subject__ Quezon City __predicate__ areaTotal __object__ 165.33']
Text: The total area of Quezon City is 165.33.
Subject: Quezon City
Predicate: areaTotal
Object: 165.33

Triple: ['__subject__ Quezon City __predicate__ leaderParty __object__ Liberal Party (Philippines)']
Text: The leader party of Quezon City is the Liberal Party.
Subject: Quezon City
Predicate: leaderParty
Object: Liberal Party (Philippines)

Triple: ['__subject__ Quezon City __predicate__ leaderParty __object__ Liberal Party (Philippines)']
Text: The leader party for Quezon City is the Liberal Party (Philippines).
Subject: Quezon City
Predicate: leaderParty
Object: Liberal Party (Philippines)

Triple: ['__subject__ Quezon City __predicate__ leaderParty __object__ Liberal Party (Philippines)']
Text: The leader Party of Quezon City is the Liberal Party of the Philippines.
Subject: Quezon City
Predicate: leaderParty
Object: Liberal Party (Philippines)

Triple: ['__subject__ Quezon City __predicate__ leaderParty __object__ Liberal Party (Philippines)']
Text: The leader party of Quezon City in the Philippines is the Liberal Party.
Subject: Quezon City
Predicate: leaderParty
Object: Liberal Party (Philippines)

Triple: ['__subject__ Quezon City __predicate__ type __object__ Cities of the Philippines']
Text: Quezon City is one of the cities in the Philippines.
Subject: Quezon City
Predicate: type
Object: Cities of the Philippines

Triple: ['__subject__ Quezon City __predicate__ type __object__ Cities of the Philippines']
Text: Quezon City is a city in the Philippines.
Subject: Quezon City
Predicate: type
Object: Cities of the Philippines

Triple: ['__subject__ Quezon City __predicate__ type __object__ Cities of the Philippines']
Text: Quezon City is one of the cities of the Philippines.
Subject: Quezon City
Predicate: type
Object: Cities of the Philippines

Triple: ['__subject__ Swords, Dublin __predicate__ areaUrban __object__ 11.35']
Text: Swords, Dublin has an urban area of 11.35 square kilometres.
Subject: Swords, Dublin
Predicate: areaUrban
Object: 11.35

Triple: ['__subject__ Swords, Dublin __predicate__ areaUrban __object__ 11.35']
Text: The urban area of Swords Dublin is 11.35.
Subject: Swords, Dublin
Predicate: areaUrban
Object: 11.35

Triple: ['__subject__ Swords, Dublin __predicate__ areaUrban __object__ 11.35']
Text: The urban area of Swords, Dublin is 11.35.
Subject: Swords, Dublin
Predicate: areaUrban
Object: 11.35

Triple: ['__subject__ Swords, Dublin __predicate__ areaUrban __object__ 11.35']
Text: The urban area of the city of Swords, Dublin is 11.35.
Subject: Swords, Dublin
Predicate: areaUrban
Object: 11.35

Triple: ['__subject__ Swords, Dublin __predicate__ isPartOf __object__ Leinster']
Text: Swords, Dublin is part of Leinster.
Subject: Swords, Dublin
Predicate: isPartOf
Object: Leinster

Triple: ['__subject__ Swords, Dublin __predicate__ part __object__ Donabate']
Text: Donabate is part of Swords, Dublin.
Subject: Swords, Dublin
Predicate: part
Object: Donabate

Triple: ['__subject__ Swords, Dublin __predicate__ part __object__ Kinsealy']
Text: Kinsealy is a part of Swords.
Subject: Swords, Dublin
Predicate: part
Object: Kinsealy

Triple: ['__subject__ Swords, Dublin __predicate__ part __object__ Kinsealy']
Text: Kinsealy is a part of Swords, Dublin.
Subject: Swords, Dublin
Predicate: part
Object: Kinsealy

Triple: ['__subject__ Swords, Dublin __predicate__ part __object__ Kinsealy']
Text: Kinsealy is part of Swords, Dublin.
Subject: Swords, Dublin
Predicate: part
Object: Kinsealy

Triple: ['__subject__ Trane __predicate__ foundationPlace __object__ La Crosse, Wisconsin']
Text: The foundation place of Trane is La Crosse, Wisconsin.
Subject: Trane
Predicate: foundationPlace
Object: La Crosse, Wisconsin

Triple: ['__subject__ Trane __predicate__ foundationPlace __object__ La Crosse, Wisconsin']
Text: Trane was founded in La Crosse, Wisconsin.
Subject: Trane
Predicate: foundationPlace
Object: La Crosse, Wisconsin

Triple: ['__subject__ Trane __predicate__ foundingDate __object__ 1913-01-01']
Text: Trane was founded on 01-01-1913.
Subject: Trane
Predicate: foundingDate
Object: 1913-01-01

Triple: ['__subject__ Trane __predicate__ foundingDate __object__ 1913-01-01']
Text: The founding date of Trane is 1913-01-01.
Subject: Trane
Predicate: foundingDate
Object: 1913-01-01

Triple: ['__subject__ Trane __predicate__ foundingDate __object__ 1913-01-01']
Text: Trane was founded on 1913-01-01.
Subject: Trane
Predicate: foundingDate
Object: 1913-01-01

Triple: ['__subject__ Trane __predicate__ foundingDate __object__ 1913-01-01']
Text: Trane was founded on January 1, 1913.
Subject: Trane
Predicate: foundingDate
Object: 1913-01-01

Triple: ['__subject__ Trane __predicate__ foundingDate __object__ 1913-01-01']
Text: Trane was founded on January 1st 1913.
Subject: Trane
Predicate: foundingDate
Object: 1913-01-01

Triple: ['__subject__ Trane __predicate__ industry __object__ Building materials']
Text: The Trane industry is building materials.
Subject: Trane
Predicate: industry
Object: Building materials

Triple: ['__subject__ Trane __predicate__ industry __object__ Building materials']
Text: Trane is in the building materials industry.
Subject: Trane
Predicate: industry
Object: Building materials

Triple: ['__subject__ Trane __predicate__ industry __object__ Building materials']
Text: Trane's industry is building materials.
Subject: Trane
Predicate: industry
Object: Building materials

Triple: ['__subject__ Trane __predicate__ industry __object__ Building materials']
Text: Trane produces building materials.
Subject: Trane
Predicate: industry
Object: Building materials

Triple: ['__subject__ Trane __predicate__ netIncome __object__ 556300000']
Text: Trane has a net income of $556,300,000.
Subject: Trane
Predicate: netIncome
Object: 556300000

Triple: ['__subject__ Trane __predicate__ netIncome __object__ 556300000']
Text: Trane has a net income of about $556 million.
Subject: Trane
Predicate: netIncome
Object: 556300000

Triple: ['__subject__ Trane __predicate__ netIncome __object__ 556300000']
Text: The net income of Trane is $556,300,000.
Subject: Trane
Predicate: netIncome
Object: 556300000

Triple: ['__subject__ Trane __predicate__ numberOfEmployees __object__ 29000']
Text: The number of employees in Trane is 29,000.
Subject: Trane
Predicate: numberOfEmployees
Object: 29000

Triple: ['__subject__ Trane __predicate__ numberOfEmployees __object__ 29000']
Text: There are 29000 people employed by Trane.
Subject: Trane
Predicate: numberOfEmployees
Object: 29000

Triple: ['__subject__ Trane __predicate__ numberOfEmployees __object__ 29000']
Text: The number of employees at Trane is 29,000.
Subject: Trane
Predicate: numberOfEmployees
Object: 29000

Triple: ['__subject__ Trane __predicate__ numberOfEmployees __object__ 29000']
Text: Trane has 29,000 employees.
Subject: Trane
Predicate: numberOfEmployees
Object: 29000

Triple: ['__subject__ Trane __predicate__ product __object__ Building Management System']
Text: Trane makes building management systems.
Subject: Trane
Predicate: product
Object: Building Management System

Triple: ['__subject__ Trane __predicate__ product __object__ Building Management System']
Text: Trane produces building management systems.
Subject: Trane
Predicate: product
Object: Building Management System

Triple: ['__subject__ Trane __predicate__ product __object__ Building Management System']
Text: Trane manufactures building management systems.
Subject: Trane
Predicate: product
Object: Building Management System

Triple: ['__subject__ Trane __predicate__ product __object__ HVAC']
Text: Trane manufactures HVAC.
Subject: Trane
Predicate: product
Object: HVAC

Triple: ['__subject__ Trane __predicate__ product __object__ HVAC']
Text: One of Trane’s products is HVAC.
Subject: Trane
Predicate: product
Object: HVAC

Triple: ['__subject__ Trane __predicate__ product __object__ HVAC']
Text: Trane produces HVAC.
Subject: Trane
Predicate: product
Object: HVAC

Triple: ['__subject__ Trane __predicate__ product __object__ HVAC']
Text: HVAC is one of Trane's products.
Subject: Trane
Predicate: product
Object: HVAC

Triple: ['__subject__ Trane __predicate__ product __object__ HVAC']
Text: Trane produces HVAC products.
Subject: Trane
Predicate: product
Object: HVAC

Triple: ['__subject__ Trane __predicate__ revenue __object__ 10264000000']
Text: The revenue of Trane is 10264000000.
Subject: Trane
Predicate: revenue
Object: 10264000000

Triple: ['__subject__ Trane __predicate__ revenue __object__ 10264000000']
Text: Trane has a revenue of $10,264,000,000.
Subject: Trane
Predicate: revenue
Object: 10264000000

Triple: ['__subject__ Trane __predicate__ revenue __object__ 10264000000']
Text: The revenue of Trane is $10,264,000,000.
Subject: Trane
Predicate: revenue
Object: 10264000000

Triple: ['__subject__ Trane __predicate__ type __object__ Subsidiary']
Text: Trane is a subsidiary company.
Subject: Trane
Predicate: type
Object: Subsidiary

Triple: ['__subject__ Trane __predicate__ type __object__ Subsidiary']
Text: Trane is a subsidiary.
Subject: Trane
Predicate: type
Object: Subsidiary

Triple: ['__subject__ Trane __predicate__ type __object__ Subsidiary']
Text: The Trane company is a subsidiary.
Subject: Trane
Predicate: type
Object: Subsidiary

Triple: ['__subject__ United States __predicate__ areaTotal __object__ 9833516.63  (square kilometres)']
Text: The United States covers a total area of 9833516.63 (square kilometres).
Subject: United States
Predicate: areaTotal
Object: 9833516.63  (square kilometres)

Triple: ['__subject__ United States __predicate__ areaTotal __object__ 9833516.63  (square kilometres)']
Text: The total area of the United States is 9833516.63 (square kilometres).
Subject: United States
Predicate: areaTotal
Object: 9833516.63  (square kilometres)

Triple: ['__subject__ United States __predicate__ areaTotal __object__ 9833516.63  (square kilometres)']
Text: The total area of the United States is 9,833,516.63 square kilometers.
Subject: United States
Predicate: areaTotal
Object: 9833516.63  (square kilometres)

Triple: ['__subject__ United States __predicate__ areaTotal __object__ 9833516.63  (square kilometres)']
Text: The total area of the United States is 9833516.63 in square kilometres.
Subject: United States
Predicate: areaTotal
Object: 9833516.63  (square kilometres)

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African-American']
Text: African-American is an ethnic grouping in the United States.
Subject: United States
Predicate: ethnicGroup
Object: African-American

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African-American']
Text: One ethnic group in the United States is African-American.
Subject: United States
Predicate: ethnicGroup
Object: African-American

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African-American']
Text: African-American is an ethnic group in the United States.
Subject: United States
Predicate: ethnicGroup
Object: African-American

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Native American']
Text: Native-American is a United States ethnic grouping.
Subject: United States
Predicate: ethnicGroup
Object: Native American

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Native American']
Text: Native American is one of the ethnic groups in the United States.
Subject: United States
Predicate: ethnicGroup
Object: Native American

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Native American']
Text: One ethnic group in the United States is Native American.
Subject: United States
Predicate: ethnicGroup
Object: Native American

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Native American']
Text: Native Americans are an ethnic group in the United States.
Subject: United States
Predicate: ethnicGroup
Object: Native American

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Native American']
Text: Native American is a United States ethnic group.
Subject: United States
Predicate: ethnicGroup
Object: Native American

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ White American']
Text: White-American is an ethnic grouping in the United States.
Subject: United States
Predicate: ethnicGroup
Object: White American

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ White American']
Text: One of the ethnic groups of the United States is White Americans.
Subject: United States
Predicate: ethnicGroup
Object: White American

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ White American']
Text: White American is one of the ethnic groups in the United States.
Subject: United States
Predicate: ethnicGroup
Object: White American

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ White American']
Text: One ethnic group in the United States is White American.
Subject: United States
Predicate: ethnicGroup
Object: White American

Triple: ['__subject__ United States __predicate__ foundingDate __object__ 1776-07-04']
Text: The United States was founded on July 4, 1776.
Subject: United States
Predicate: foundingDate
Object: 1776-07-04

Triple: ['__subject__ United States __predicate__ foundingDate __object__ 1776-07-04']
Text: The United States was founded on 07-04-1776.
Subject: United States
Predicate: foundingDate
Object: 1776-07-04

Triple: ['__subject__ United States __predicate__ foundingDate __object__ 1776-07-04']
Text: The founding date of the United States was 1776-07-04.
Subject: United States
Predicate: foundingDate
Object: 1776-07-04

Triple: ['__subject__ United States __predicate__ governmentType __object__ Federalism']
Text: The type of government in the United States is federalism.
Subject: United States
Predicate: governmentType
Object: Federalism

Triple: ['__subject__ United States __predicate__ governmentType __object__ Federalism']
Text: Federalism is the type of government in the United States.
Subject: United States
Predicate: governmentType
Object: Federalism

Triple: ['__subject__ United States __predicate__ governmentType __object__ Federalism']
Text: The United States has a Federalism government type.
Subject: United States
Predicate: governmentType
Object: Federalism

Triple: ['__subject__ United States __predicate__ governmentType __object__ Federalism']
Text: The United States operates a federal government system.
Subject: United States
Predicate: governmentType
Object: Federalism

Triple: ['__subject__ United States __predicate__ leader __object__ Paul Ryan']
Text: Paul Ryan is the leader of the United States.
Subject: United States
Predicate: leader
Object: Paul Ryan

Triple: ['__subject__ United States __predicate__ leader __object__ Paul Ryan']
Text: One of the leaders of the United States is named Paul Ryan.
Subject: United States
Predicate: leader
Object: Paul Ryan

Triple: ['__subject__ United States __predicate__ leader __object__ Paul Ryan']
Text: Paul Ryan is the name of one of the government leaders in the United States.
Subject: United States
Predicate: leader
Object: Paul Ryan

Triple: ['__subject__ United States __predicate__ leaderTitle __object__ Vice President']
Text: Vice President is a United States leadership title.
Subject: United States
Predicate: leaderTitle
Object: Vice President

Triple: ['__subject__ United States __predicate__ leaderTitle __object__ Vice President']
Text: One of the leaders of the United States has the title of Vice President.
Subject: United States
Predicate: leaderTitle
Object: Vice President

Triple: ['__subject__ United States __predicate__ leaderTitle __object__ Vice President']
Text: Vice President is one of the titles of government leaders in the United States.
Subject: United States
Predicate: leaderTitle
Object: Vice President

Triple: ['__subject__ United States __predicate__ percentageOfAreaWater __object__ 6.97']
Text: The total area of the United States covered by water is 6.97 percent.
Subject: United States
Predicate: percentageOfAreaWater
Object: 6.97

Triple: ['__subject__ United States __predicate__ percentageOfAreaWater __object__ 6.97']
Text: 6.97 percent of the area of the United States is water.
Subject: United States
Predicate: percentageOfAreaWater
Object: 6.97

Triple: ['__subject__ United States __predicate__ percentageOfAreaWater __object__ 6.97']
Text: The percentage of the United States covered by water is 6.97%.
Subject: United States
Predicate: percentageOfAreaWater
Object: 6.97

Triple: ['__subject__ Ajoblanco __predicate__ country __object__ Spain']
Text: Ajoblanco originates from the country of Spain.
Subject: Ajoblanco
Predicate: country
Object: Spain

Triple: ['__subject__ Ajoblanco __predicate__ country __object__ Spain']
Text: Ajoblanco is from Spain.
Subject: Ajoblanco
Predicate: country
Object: Spain

Triple: ['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond']
Text: Ajoblanco has almond as one of its ingredients.
Subject: Ajoblanco
Predicate: ingredient
Object: Almond

Triple: ['__subject__ Ajoblanco __predicate__ ingredient __object__ Almond']
Text: Almond is an ingredient in ajoblanco.
Subject: Ajoblanco
Predicate: ingredient
Object: Almond

Triple: ['__subject__ Ajoblanco __predicate__ ingredient __object__ Bread']
Text: Bread is an ingredient of Ajoblanco.
Subject: Ajoblanco
Predicate: ingredient
Object: Bread

Triple: ['__subject__ Ajoblanco __predicate__ ingredient __object__ Garlic']
Text: An ingredient of Ajoblanco is garlic.
Subject: Ajoblanco
Predicate: ingredient
Object: Garlic

Triple: ['__subject__ Ajoblanco __predicate__ ingredient __object__ Garlic']
Text: Garlic is an ingredient used in Ajoblanco.
Subject: Ajoblanco
Predicate: ingredient
Object: Garlic

Triple: ['__subject__ Ajoblanco __predicate__ ingredient __object__ Olive oil']
Text: Olive oil is an ingredient in Ajoblanco.
Subject: Ajoblanco
Predicate: ingredient
Object: Olive oil

Triple: ['__subject__ Ajoblanco __predicate__ ingredient __object__ Water']
Text: Ajoblanco contains water.
Subject: Ajoblanco
Predicate: ingredient
Object: Water

Triple: ['__subject__ Ajoblanco __predicate__ ingredient __object__ Water']
Text: Water is an ingredient in Ajoblanco.
Subject: Ajoblanco
Predicate: ingredient
Object: Water

Triple: ['__subject__ Ajoblanco __predicate__ region __object__ Andalusia']
Text: Ajoblanco is a food found in Andalusia.
Subject: Ajoblanco
Predicate: region
Object: Andalusia

Triple: ['__subject__ Ajoblanco __predicate__ region __object__ Andalusia']
Text: Ajoblanco is from the Andalusia region.
Subject: Ajoblanco
Predicate: region
Object: Andalusia

Triple: ['__subject__ Ajoblanco __predicate__ region __object__ Andalusia']
Text: Ajoblanco is from Andalusia.
Subject: Ajoblanco
Predicate: region
Object: Andalusia

Triple: ['__subject__ Almond __predicate__ division __object__ Flowering plant']
Text: Almond is classed as a flowering plant.
Subject: Almond
Predicate: division
Object: Flowering plant

Triple: ['__subject__ Almond __predicate__ division __object__ Flowering plant']
Text: Almonds are in the division of flowering plants.
Subject: Almond
Predicate: division
Object: Flowering plant

Triple: ['__subject__ Almond __predicate__ family __object__ Rosaceae']
Text: Almond is part of the Rosaceae family.
Subject: Almond
Predicate: family
Object: Rosaceae

Triple: ['__subject__ Almond __predicate__ family __object__ Rosaceae']
Text: Almonds are from the Rosaceae family.
Subject: Almond
Predicate: family
Object: Rosaceae

Triple: ['__subject__ Almond __predicate__ order __object__ Rosales']
Text: Almond is one of the members of the Rosales order.
Subject: Almond
Predicate: order
Object: Rosales

Triple: ['__subject__ Almond __predicate__ order __object__ Rosids']
Text: Almond is part of the order of Rosids.
Subject: Almond
Predicate: order
Object: Rosids

Triple: ['__subject__ Almond __predicate__ order __object__ Rosids']
Text: Almonds are from the order Rosids.
Subject: Almond
Predicate: order
Object: Rosids

Triple: ['__subject__ Amatriciana sauce __predicate__ country __object__ Italy']
Text: Italy is the country Amatriciana sauce comes from.
Subject: Amatriciana sauce
Predicate: country
Object: Italy

Triple: ['__subject__ Amatriciana sauce __predicate__ country __object__ Italy']
Text: Amatriciana sauce is a traditional Italian sauce.
Subject: Amatriciana sauce
Predicate: country
Object: Italy

Triple: ['__subject__ Amatriciana sauce __predicate__ country __object__ Italy']
Text: Amatriciana sauce can be found in Italy.
Subject: Amatriciana sauce
Predicate: country
Object: Italy

Triple: ['__subject__ Amatriciana sauce __predicate__ course __object__ Italian meal structure']
Text: Amatriciana sauce can be found in an Italian meal.
Subject: Amatriciana sauce
Predicate: course
Object: Italian meal structure

Triple: ['__subject__ Amatriciana sauce __predicate__ dishVariation __object__ Onion, garlic, black pepper, chili']
Text: A variation of Amatriciana sauce includes onion, garlic, black pepper, and chili.
Subject: Amatriciana sauce
Predicate: dishVariation
Object: Onion, garlic, black pepper, chili

Triple: ['__subject__ Amatriciana sauce __predicate__ dishVariation __object__ Onion, garlic, black pepper, chili']
Text: A variation of Amatriciana sauce contains onion, garlic, black pepper, chili.
Subject: Amatriciana sauce
Predicate: dishVariation
Object: Onion, garlic, black pepper, chili

Triple: ['__subject__ Amatriciana sauce __predicate__ dishVariation __object__ Garlic']
Text: Amatriciana sauce can be varied by adding garlic.
Subject: Amatriciana sauce
Predicate: dishVariation
Object: Garlic

Triple: ['__subject__ Amatriciana sauce __predicate__ dishVariation __object__ Garlic']
Text: One variation of Amatriciana sauce uses garlic as part of its dish.
Subject: Amatriciana sauce
Predicate: dishVariation
Object: Garlic

Triple: ['__subject__ Amatriciana sauce __predicate__ dishVariation __object__ Onion']
Text: Onion is one variation of ingredients in Amatriciana sauce.
Subject: Amatriciana sauce
Predicate: dishVariation
Object: Onion

Triple: ['__subject__ Amatriciana sauce __predicate__ ingredient __object__ Guanciale']
Text: Guanciale is an ingredient of Amatriciana sauce.
Subject: Amatriciana sauce
Predicate: ingredient
Object: Guanciale

Triple: ['__subject__ Amatriciana sauce __predicate__ ingredient __object__ Guanciale']
Text: Guanciale is an ingredient used in the preparation of Amatriciana sauce.
Subject: Amatriciana sauce
Predicate: ingredient
Object: Guanciale

Triple: ['__subject__ Amatriciana sauce __predicate__ ingredient __object__ Guanciale']
Text: Guanciale is an ingredient in Amatriciana sauce.
Subject: Amatriciana sauce
Predicate: ingredient
Object: Guanciale

Triple: ['__subject__ Amatriciana sauce __predicate__ ingredient __object__ Olive oil']
Text: Olive oil is one ingredient in Amatriciana sauce.
Subject: Amatriciana sauce
Predicate: ingredient
Object: Olive oil

Triple: ['__subject__ Amatriciana sauce __predicate__ ingredient __object__ Olive oil']
Text: Olive oil is an ingredient of Amatriciana sauce.
Subject: Amatriciana sauce
Predicate: ingredient
Object: Olive oil

Triple: ['__subject__ Amatriciana sauce __predicate__ ingredient __object__ Tomato']
Text: Amatriciana sauce has tomato as one of its ingredients.
Subject: Amatriciana sauce
Predicate: ingredient
Object: Tomato

Triple: ['__subject__ Amatriciana sauce __predicate__ ingredient __object__ Tomato']
Text: Tomato is an ingredient in Amatriciana sauce.
Subject: Amatriciana sauce
Predicate: ingredient
Object: Tomato

Triple: ['__subject__ Amatriciana sauce __predicate__ ingredient __object__ Tomato']
Text: Tomato is an ingredient of Amatriciana sauce.
Subject: Amatriciana sauce
Predicate: ingredient
Object: Tomato

Triple: ['__subject__ Amatriciana sauce __predicate__ mainIngredient __object__ Tomatoes, guanciale, cheese, olive oil']
Text: Tomatoes, guanciale, cheese, olive oil are the main ingredients of Amatriciana sauce.
Subject: Amatriciana sauce
Predicate: mainIngredient
Object: Tomatoes, guanciale, cheese, olive oil

Triple: ['__subject__ Amatriciana sauce __predicate__ region __object__ Lazio']
Text: Amatriciana sauce comes from the region of Lazio.
Subject: Amatriciana sauce
Predicate: region
Object: Lazio

Triple: ['__subject__ Amatriciana sauce __predicate__ region __object__ Lazio']
Text: Amatriciana is a sauce from Lazio.
Subject: Amatriciana sauce
Predicate: region
Object: Lazio

Triple: ['__subject__ Amatriciana sauce __predicate__ region __object__ Lazio']
Text: Amatriciana sauce is from the Lazio region.
Subject: Amatriciana sauce
Predicate: region
Object: Lazio

Triple: ['__subject__ Andalusia __predicate__ leader __object__ Susana Díaz']
Text: Susana Diaz is a leader of Andalusia.
Subject: Andalusia
Predicate: leader
Object: Susana Díaz

Triple: ['__subject__ Andalusia __predicate__ leader __object__ Susana Díaz']
Text: Susana Diaz is the leader of Andalusia.
Subject: Andalusia
Predicate: leader
Object: Susana Díaz

Triple: ['__subject__ Antioquia Department __predicate__ country __object__ Colombia']
Text: The Antioquia Department is found in Colombia.
Subject: Antioquia Department
Predicate: country
Object: Colombia

Triple: ['__subject__ Antioquia Department __predicate__ country __object__ Colombia']
Text: The Antioquia Department can be found in the country of Colombia.
Subject: Antioquia Department
Predicate: country
Object: Colombia

Triple: ['__subject__ Arem-arem __predicate__ country __object__ Indonesia']
Text: Arem-arem is a food found in Indonesia.
Subject: Arem-arem
Predicate: country
Object: Indonesia

Triple: ['__subject__ Arem-arem __predicate__ country __object__ Indonesia']
Text: Arem arem originates from the country of Indonesia.
Subject: Arem-arem
Predicate: country
Object: Indonesia

Triple: ['__subject__ Arem-arem __predicate__ country __object__ Indonesia']
Text: The country of Indonesia commonly serves Arem-arem.
Subject: Arem-arem
Predicate: country
Object: Indonesia

Triple: ['__subject__ Arem-arem __predicate__ course __object__ Main course']
Text: Arem-arem can be served as a main course.
Subject: Arem-arem
Predicate: course
Object: Main course

Triple: ['__subject__ Arem-arem __predicate__ course __object__ Main course']
Text: Arem arem is a main course.
Subject: Arem-arem
Predicate: course
Object: Main course

Triple: ['__subject__ Arem-arem __predicate__ dishVariation __object__ Lemper']
Text: Lemper is a dish variation of Arem-Arem.
Subject: Arem-arem
Predicate: dishVariation
Object: Lemper

Triple: ['__subject__ Arem-arem __predicate__ dishVariation __object__ Lemper']
Text: Lemper is a variation of Arem arem.
Subject: Arem-arem
Predicate: dishVariation
Object: Lemper

Triple: ['__subject__ Arem-arem __predicate__ ingredient __object__ Banana leaf']
Text: Banana leaf is an ingredient in Arem arem.
Subject: Arem-arem
Predicate: ingredient
Object: Banana leaf

Triple: ['__subject__ Arem-arem __predicate__ ingredient __object__ Banana leaf']
Text: Arem-arem uses the ingredient banana leaf.
Subject: Arem-arem
Predicate: ingredient
Object: Banana leaf

Triple: ['__subject__ Arem-arem __predicate__ ingredient __object__ Banana leaf']
Text: Arem-arem have banana leaf in it.
Subject: Arem-arem
Predicate: ingredient
Object: Banana leaf

Triple: ['__subject__ Arem-arem __predicate__ mainIngredient __object__ compressed rice cooked in banana leaf with vegetables or minced meat fillings']
Text: The main ingredients of Arem-arem are compressed rice cooked in banana leaf with vegetables or minced meat fillings.
Subject: Arem-arem
Predicate: mainIngredient
Object: compressed rice cooked in banana leaf with vegetables or minced meat fillings

Triple: ['__subject__ Arem-arem __predicate__ region __object__ Javanese cuisine']
Text: Arem-arem is a dish of Javanese cuisine.
Subject: Arem-arem
Predicate: region
Object: Javanese cuisine

Triple: ['__subject__ Arrabbiata sauce __predicate__ country __object__ Italy']
Text: Arrabbiata sauce can be found in Italy.
Subject: Arrabbiata sauce
Predicate: country
Object: Italy

Triple: ['__subject__ Arrabbiata sauce __predicate__ country __object__ Italy']
Text: Arrabbiata sauce is from Italy.
Subject: Arrabbiata sauce
Predicate: country
Object: Italy

Triple: ['__subject__ Arrabbiata sauce __predicate__ dishVariation __object__ Basil']
Text: Arrabbiata sauce has basil as a variation.
Subject: Arrabbiata sauce
Predicate: dishVariation
Object: Basil

Triple: ['__subject__ Arrabbiata sauce __predicate__ dishVariation __object__ Basil']
Text: To vary arrabbiata sauce, basil may be used.
Subject: Arrabbiata sauce
Predicate: dishVariation
Object: Basil

Triple: ['__subject__ Arrabbiata sauce __predicate__ dishVariation __object__ Basil']
Text: Basil can be included in Arrabbiata sauce.
Subject: Arrabbiata sauce
Predicate: dishVariation
Object: Basil

Triple: ['__subject__ Arrabbiata sauce __predicate__ dishVariation __object__ Oregano']
Text: Oregano is one of the ingredients that can be used in a variation of Arrabbiata sauce.
Subject: Arrabbiata sauce
Predicate: dishVariation
Object: Oregano

Triple: ['__subject__ Arrabbiata sauce __predicate__ dishVariation __object__ Oregano']
Text: Oregano can be added to Arrabbiata sauce.
Subject: Arrabbiata sauce
Predicate: dishVariation
Object: Oregano

Triple: ['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Garlic']
Text: Garlic is an ingredient in arrabbiata sauce.
Subject: Arrabbiata sauce
Predicate: ingredient
Object: Garlic

Triple: ['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Garlic']
Text: An ingredient of arrabbiata sauce is garlic.
Subject: Arrabbiata sauce
Predicate: ingredient
Object: Garlic

Triple: ['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Olive oil']
Text: Olive oil is an ingredient in Arrabbiata sauce.
Subject: Arrabbiata sauce
Predicate: ingredient
Object: Olive oil

Triple: ['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Olive oil']
Text: Olive oil is an ingredient used in the preparation of Arrabbiata sauce.
Subject: Arrabbiata sauce
Predicate: ingredient
Object: Olive oil

Triple: ['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Tomato']
Text: Tomato is an ingredient in Arrabbiata sauce.
Subject: Arrabbiata sauce
Predicate: ingredient
Object: Tomato

Triple: ['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Tomato']
Text: Tomatoes are found in Arrabbiata sauce.
Subject: Arrabbiata sauce
Predicate: ingredient
Object: Tomato

Triple: ['__subject__ Arrabbiata sauce __predicate__ ingredient __object__ Tomato']
Text: Arrabbiata sauce includes tomatoes.
Subject: Arrabbiata sauce
Predicate: ingredient
Object: Tomato

Triple: ['__subject__ Arrabbiata sauce __predicate__ region __object__ Rome']
Text: Arrabbiata sauce originates from the region of Rome.
Subject: Arrabbiata sauce
Predicate: region
Object: Rome

Triple: ['__subject__ Arrabbiata sauce __predicate__ region __object__ Rome']
Text: Arrabbiata sauce is a traditional dish from Rome.
Subject: Arrabbiata sauce
Predicate: region
Object: Rome

Triple: ['__subject__ Arrabbiata sauce __predicate__ region __object__ Rome']
Text: Arrabbiata sauce is from the Rome region.
Subject: Arrabbiata sauce
Predicate: region
Object: Rome

Triple: ['__subject__ Arròs negre __predicate__ country __object__ Spain']
Text: Arròs negre is a traditional dish from Spain.
Subject: Arròs negre
Predicate: country
Object: Spain

Triple: ['__subject__ Arròs negre __predicate__ country __object__ Spain']
Text: Arròs negre is from Spain.
Subject: Arròs negre
Predicate: country
Object: Spain

Triple: ['__subject__ Arròs negre __predicate__ ingredient __object__ Cephalopod ink']
Text: Cephalopod ink is an ingredient of Arròs negre.
Subject: Arròs negre
Predicate: ingredient
Object: Cephalopod ink

Triple: ['__subject__ Arròs negre __predicate__ ingredient __object__ Cephalopod ink']
Text: Cephalopod ink is an ingredient in the dish Arròs negre.
Subject: Arròs negre
Predicate: ingredient
Object: Cephalopod ink

Triple: ['__subject__ Arròs negre __predicate__ ingredient __object__ Cephalopod ink']
Text: Cephalopod ink is an ingredient in Arròs negre.
Subject: Arròs negre
Predicate: ingredient
Object: Cephalopod ink

Triple: ['__subject__ Arròs negre __predicate__ ingredient __object__ Cubanelle']
Text: Cubanelle is an ingredient in Arros negre.
Subject: Arròs negre
Predicate: ingredient
Object: Cubanelle

Triple: ['__subject__ Arròs negre __predicate__ ingredient __object__ Cubanelle']
Text: Cubanelle is one of the ingredients in Arros negre.
Subject: Arròs negre
Predicate: ingredient
Object: Cubanelle

Triple: ['__subject__ Arròs negre __predicate__ mainIngredient __object__ White rice, cuttlefish or squid, cephalopod ink, cubanelle peppers']
Text: The main ingredients in arròs negre are white rice, cuttlefish or squid, cephalopod ink and cubanelle peppers.
Subject: Arròs negre
Predicate: mainIngredient
Object: White rice, cuttlefish or squid, cephalopod ink, cubanelle peppers

Triple: ['__subject__ Arròs negre __predicate__ mainIngredient __object__ White rice, cuttlefish or squid, cephalopod ink, cubanelle peppers']
Text: The main ingredients of Arròs negre are white rice, cuttlefish or squid, cephalopod ink, cubanelle peppers.
Subject: Arròs negre
Predicate: mainIngredient
Object: White rice, cuttlefish or squid, cephalopod ink, cubanelle peppers

Triple: ['__subject__ Arròs negre __predicate__ mainIngredient __object__ White rice, cuttlefish or squid, cephalopod ink, cubanelle peppers']
Text: The main ingredients of Arros negre are white rice, cuttlefish or squid, cephalopod ink, cubanelle peppers.
Subject: Arròs negre
Predicate: mainIngredient
Object: White rice, cuttlefish or squid, cephalopod ink, cubanelle peppers

Triple: ['__subject__ Asam pedas __predicate__ alternativeName __object__ Asam padeh']
Text: The alternative name for asam pedas is asam padeh.
Subject: Asam pedas
Predicate: alternativeName
Object: Asam padeh

Triple: ['__subject__ Asam pedas __predicate__ alternativeName __object__ Asam padeh']
Text: Asam padeh is also known as Asam pedas.
Subject: Asam pedas
Predicate: alternativeName
Object: Asam padeh

Triple: ['__subject__ Asam pedas __predicate__ alternativeName __object__ Asam padeh']
Text: An alternative name for Asam pedas is Asam padeh.
Subject: Asam pedas
Predicate: alternativeName
Object: Asam padeh

Triple: ['__subject__ Asam pedas __predicate__ country __object__ Indonesia and Malaysia']
Text: Asam pedas comes from the countries of Indonesia and Malaysia.
Subject: Asam pedas
Predicate: country
Object: Indonesia and Malaysia

Triple: ['__subject__ Asam pedas __predicate__ country __object__ Indonesia and Malaysia']
Text: Asam pedas is from Indonesia and Malaysia.
Subject: Asam pedas
Predicate: country
Object: Indonesia and Malaysia

Triple: ['__subject__ Asam pedas __predicate__ country __object__ Indonesia']
Text: Indonesia is the country Asam pedas comes from.
Subject: Asam pedas
Predicate: country
Object: Indonesia

Triple: ['__subject__ Asam pedas __predicate__ country __object__ Indonesia']
Text: Asam pedas is a dish that is popular in Indonesia.
Subject: Asam pedas
Predicate: country
Object: Indonesia

Triple: ['__subject__ Asam pedas __predicate__ country __object__ Indonesia']
Text: The Asam pedas is popular in Indonesia.
Subject: Asam pedas
Predicate: country
Object: Indonesia

Triple: ['__subject__ Asam pedas __predicate__ creatorOfDish __object__ Malay cuisine']
Text: Asam pedas is a dish that was created within Malay cuisine.
Subject: Asam pedas
Predicate: creatorOfDish
Object: Malay cuisine

Triple: ['__subject__ Asam pedas __predicate__ creatorOfDish __object__ Padang cuisine']
Text: Padang cuisine has resulted in the creation of the dish Asam pedas.
Subject: Asam pedas
Predicate: creatorOfDish
Object: Padang cuisine

Triple: ['__subject__ Asam pedas __predicate__ mainIngredient __object__ Fish cooked in sour and hot sauce']
Text: The main ingredients of Asam pedas are fish cooked in sour and hot sauce.
Subject: Asam pedas
Predicate: mainIngredient
Object: Fish cooked in sour and hot sauce

Triple: ['__subject__ Asam pedas __predicate__ mainIngredient __object__ Fish cooked in sour and hot sauce']
Text: The main ingredients of asam pedas consist of fish cooked in a sour and hot sauce.
Subject: Asam pedas
Predicate: mainIngredient
Object: Fish cooked in sour and hot sauce

Triple: ['__subject__ Asam pedas __predicate__ mainIngredient __object__ Fish cooked in sour and hot sauce']
Text: Asam pedas is a dish of fish cooked in a sour and hot sauce.
Subject: Asam pedas
Predicate: mainIngredient
Object: Fish cooked in sour and hot sauce

Triple: ['__subject__ Asam pedas __predicate__ region __object__ Sumatra and Malay Peninsula']
Text: Asam pedas is found in the region of Sumatra and Malay peninsula.
Subject: Asam pedas
Predicate: region
Object: Sumatra and Malay Peninsula

Triple: ['__subject__ Asam pedas __predicate__ region __object__ Sumatra and Malay Peninsula']
Text: The dish Asam pedas comes from the region of Sumatra and the Malay Peninsula.
Subject: Asam pedas
Predicate: region
Object: Sumatra and Malay Peninsula

Triple: ['__subject__ Asam pedas __predicate__ region __object__ Sumatra and Malay Peninsula']
Text: Asam pedas is from the Sumatra and Malay Peninsula regions.
Subject: Asam pedas
Predicate: region
Object: Sumatra and Malay Peninsula

Triple: ['__subject__ Asam pedas __predicate__ region __object__ Malay Peninsula']
Text: Asam pedas is a food found in the Malay Peninsula.
Subject: Asam pedas
Predicate: region
Object: Malay Peninsula

Triple: ['__subject__ Asam pedas __predicate__ region __object__ Malay Peninsula']
Text: Asam pedas is from the Malay Peninsula region.
Subject: Asam pedas
Predicate: region
Object: Malay Peninsula

Triple: ['__subject__ Asam pedas __predicate__ region __object__ Malay Peninsula']
Text: Asam pedas hails from the Malay Peninsula.
Subject: Asam pedas
Predicate: region
Object: Malay Peninsula

Triple: ['__subject__ Asam pedas __predicate__ region __object__ Sumatra']
Text: Asam pedas is a dish from Sumatra.
Subject: Asam pedas
Predicate: region
Object: Sumatra

Triple: ['__subject__ Avocado __predicate__ family __object__ Lauraceae']
Text: The avocado is a member of the Lauraceae family.
Subject: Avocado
Predicate: family
Object: Lauraceae

Triple: ['__subject__ Avocado __predicate__ family __object__ Lauraceae']
Text: Avocado is part of the Lauraceae family.
Subject: Avocado
Predicate: family
Object: Lauraceae

Triple: ['__subject__ Avocado __predicate__ family __object__ Lauraceae']
Text: The avocado plant belongs to the Lauraceae family.
Subject: Avocado
Predicate: family
Object: Lauraceae

Triple: ['__subject__ Avocado __predicate__ order __object__ Laurales']
Text: Avocado is under the order of laurales.
Subject: Avocado
Predicate: order
Object: Laurales

Triple: ['__subject__ Avocado __predicate__ order __object__ Laurales']
Text: The avocado is a member of the Laurales plant order.
Subject: Avocado
Predicate: order
Object: Laurales

Triple: ['__subject__ Avocado __predicate__ order __object__ Laurales']
Text: Avocado is a fruit of the order Laurales.
Subject: Avocado
Predicate: order
Object: Laurales

Triple: ['__subject__ Ayam penyet __predicate__ country __object__ Indonesia']
Text: Ayam penyet is from Indonesia.
Subject: Ayam penyet
Predicate: country
Object: Indonesia

Triple: ['__subject__ Ayam penyet __predicate__ country __object__ Java']
Text: Ayam penyet is a food found in Java.
Subject: Ayam penyet
Predicate: country
Object: Java

Triple: ['__subject__ Ayam penyet __predicate__ country __object__ Java']
Text: The country of Ayam penyet is Java.
Subject: Ayam penyet
Predicate: country
Object: Java

Triple: ['__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken']
Text: Fried chicken is an ingredient in Ayam penyet.
Subject: Ayam penyet
Predicate: ingredient
Object: Fried chicken

Triple: ['__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken']
Text: Fried chicken is one of the ingredients in the dish 'Ayam Penyet'.
Subject: Ayam penyet
Predicate: ingredient
Object: Fried chicken

Triple: ['__subject__ Ayam penyet __predicate__ ingredient __object__ Fried chicken']
Text: Ayam penyet has fried chicken in it.
Subject: Ayam penyet
Predicate: ingredient
Object: Fried chicken

Triple: ['__subject__ Ayam penyet __predicate__ mainIngredient __object__ Squeezed or smashed fried chicken served with sambal']
Text: The main ingredients of Ayam penyet are "squeezed" or "smashed" chicken served with sambal.
Subject: Ayam penyet
Predicate: mainIngredient
Object: Squeezed or smashed fried chicken served with sambal

Triple: ['__subject__ Ayam penyet __predicate__ mainIngredient __object__ Squeezed or smashed fried chicken served with sambal']
Text: Ayam penyet's main ingredients are squeezed or smashed fried chicken served with sambal.
Subject: Ayam penyet
Predicate: mainIngredient
Object: Squeezed or smashed fried chicken served with sambal

Triple: ['__subject__ Ayam penyet __predicate__ mainIngredient __object__ Squeezed or smashed fried chicken served with sambal']
Text: "Squeezed" or "smashed" fried chicken served with sambal is a main ingredient in ayam penyet.
Subject: Ayam penyet
Predicate: mainIngredient
Object: Squeezed or smashed fried chicken served with sambal

Triple: ['__subject__ Ayam penyet __predicate__ region __object__ Nationwide, also can be found in Malaysia and Singapore']
Text: Ayam penyet can be found nationwide and also in Malaysia and Singapore.
Subject: Ayam penyet
Predicate: region
Object: Nationwide, also can be found in Malaysia and Singapore

Triple: ['__subject__ Ayam penyet __predicate__ region __object__ Nationwide, also can be found in Malaysia and Singapore']
Text: Ayam penyet is made nationwide, and can also be found in Malaysia and Singapore.
Subject: Ayam penyet
Predicate: region
Object: Nationwide, also can be found in Malaysia and Singapore

Triple: ['__subject__ Ayam penyet __predicate__ region __object__ Malaysia']
Text: Ayam penyet comes from the region of Malaysia.
Subject: Ayam penyet
Predicate: region
Object: Malaysia

Triple: ['__subject__ Ayam penyet __predicate__ region __object__ Malaysia']
Text: Ayam Penyet is a dish from Malaysia.
Subject: Ayam penyet
Predicate: region
Object: Malaysia

Triple: ['__subject__ Ayam penyet __predicate__ region __object__ Malaysia']
Text: Ayam penyet is a popular dish in Malaysia.
Subject: Ayam penyet
Predicate: region
Object: Malaysia

Triple: ['__subject__ BLT __predicate__ dishVariation __object__ Club sandwich']
Text: The BLT is a variation on the club sandwich.
Subject: BLT
Predicate: dishVariation
Object: Club sandwich

Triple: ['__subject__ BLT __predicate__ dishVariation __object__ Club sandwich']
Text: BLT is a variation of a Club Sandwich.
Subject: BLT
Predicate: dishVariation
Object: Club sandwich

Triple: ['__subject__ BLT __predicate__ dishVariation __object__ Club sandwich']
Text: BLT is a variation of club sandwich.
Subject: BLT
Predicate: dishVariation
Object: Club sandwich

Triple: ['__subject__ BLT __predicate__ ingredient __object__ Lettuce']
Text: One of the ingredients of the BLT sandwich is Lettuce.
Subject: BLT
Predicate: ingredient
Object: Lettuce

Triple: ['__subject__ BLT __predicate__ ingredient __object__ Lettuce']
Text: Lettuce is an ingredient in a BLT.
Subject: BLT
Predicate: ingredient
Object: Lettuce

Triple: ['__subject__ Bacon Explosion __predicate__ country __object__ United States']
Text: The country Bacon Explosion comes from is the United States.
Subject: Bacon Explosion
Predicate: country
Object: United States

Triple: ['__subject__ Bacon Explosion __predicate__ country __object__ United States']
Text: The United States is the country of the Bacon Explosion.
Subject: Bacon Explosion
Predicate: country
Object: United States

Triple: ['__subject__ Bacon Explosion __predicate__ country __object__ United States']
Text: Bacon Explosion comes from the United States.
Subject: Bacon Explosion
Predicate: country
Object: United States

Triple: ['__subject__ Bacon Explosion __predicate__ course __object__ Main course']
Text: Bacon Explosion is a main course.
Subject: Bacon Explosion
Predicate: course
Object: Main course

Triple: ['__subject__ Bacon Explosion __predicate__ ingredient __object__ Bacon']
Text: Bacon is an ingredient in a Bacon Explosion.
Subject: Bacon Explosion
Predicate: ingredient
Object: Bacon

Triple: ['__subject__ Bacon Explosion __predicate__ ingredient __object__ Bacon']
Text: Bacon is an ingredient in the dish 'Bacon Explosion'.
Subject: Bacon Explosion
Predicate: ingredient
Object: Bacon

Triple: ['__subject__ Bacon Explosion __predicate__ ingredient __object__ Sausage']
Text: An ingredient of a bacon explosion is sausage.
Subject: Bacon Explosion
Predicate: ingredient
Object: Sausage

Triple: ['__subject__ Bacon Explosion __predicate__ ingredient __object__ Sausage']
Text: Sausage in an ingredient in bacon explosion.
Subject: Bacon Explosion
Predicate: ingredient
Object: Sausage

Triple: ['__subject__ Bacon Explosion __predicate__ ingredient __object__ Sausage']
Text: Sausage is an ingredient of a Bacon Explosion.
Subject: Bacon Explosion
Predicate: ingredient
Object: Sausage

Triple: ['__subject__ Bacon Explosion __predicate__ mainIngredient __object__ Bacon,sausage']
Text: The main ingredients in a bacon explosion are bacon and sausage.
Subject: Bacon Explosion
Predicate: mainIngredient
Object: Bacon,sausage

Triple: ['__subject__ Bacon Explosion __predicate__ mainIngredient __object__ Bacon,sausage']
Text: The main ingredients of Bacon Explosion are bacon and sausage.
Subject: Bacon Explosion
Predicate: mainIngredient
Object: Bacon,sausage

Triple: ['__subject__ Bacon Explosion __predicate__ mainIngredient __object__ Bacon,sausage']
Text: Bacon and sausage are the main ingredients of a Bacon Explosion.
Subject: Bacon Explosion
Predicate: mainIngredient
Object: Bacon,sausage

Triple: ['__subject__ Bacon Explosion __predicate__ mainIngredient __object__ Bacon']
Text: The main ingredient in a Bacon Explosion is bacon.
Subject: Bacon Explosion
Predicate: mainIngredient
Object: Bacon

Triple: ['__subject__ Bacon Explosion __predicate__ mainIngredient __object__ Sausage']
Text: Sausage is a main ingredient of Bacon Explosion.
Subject: Bacon Explosion
Predicate: mainIngredient
Object: Sausage

Triple: ['__subject__ Bacon Explosion __predicate__ mainIngredient __object__ Sausage']
Text: Sausage is a main ingredient in bacon explosion.
Subject: Bacon Explosion
Predicate: mainIngredient
Object: Sausage

Triple: ['__subject__ Bacon Explosion __predicate__ region __object__ Kansas City metropolitan area']
Text: Bacon Explosion is from the Kansas City metropolitan area.
Subject: Bacon Explosion
Predicate: region
Object: Kansas City metropolitan area

Triple: ["__subject__ Bacon sandwich __predicate__ alternativeName __object__ Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin"]
Text: The bacon sandwich has different names including: Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm and bacon muffin.
Subject: Bacon sandwich
Predicate: alternativeName
Object: Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin

Triple: ["__subject__ Bacon sandwich __predicate__ alternativeName __object__ Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin"]
Text: A bacon sandwich can also be known as a bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, or bacon muffin.
Subject: Bacon sandwich
Predicate: alternativeName
Object: Bacon butty, bacon sarnie, rasher sandwich, bacon sanger, piece 'n bacon, bacon cob, bacon barm, bacon muffin

Triple: ['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom']
Text: Bacon sandwich is a dish from the United Kingdom.
Subject: Bacon sandwich
Predicate: country
Object: United Kingdom

Triple: ['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom']
Text: The country that bacon sandwich comes from is the United Kingdom.
Subject: Bacon sandwich
Predicate: country
Object: United Kingdom

Triple: ['__subject__ Bacon sandwich __predicate__ country __object__ United Kingdom']
Text: Bacon sandwiches are popular in the UK.
Subject: Bacon sandwich
Predicate: country
Object: United Kingdom

Triple: ['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT']
Text: A variation of a bacon sandwich is the BLT.
Subject: Bacon sandwich
Predicate: dishVariation
Object: BLT

Triple: ['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT']
Text: Another variation for a bacon sandwich is a BLT.
Subject: Bacon sandwich
Predicate: dishVariation
Object: BLT

Triple: ['__subject__ Bacon sandwich __predicate__ dishVariation __object__ BLT']
Text: Bacon sandwich is a variation of BLT.
Subject: Bacon sandwich
Predicate: dishVariation
Object: BLT

Triple: ['__subject__ Bacon sandwich __predicate__ ingredient __object__ Bacon']
Text: A bacon sandwich includes the ingredient bacon.
Subject: Bacon sandwich
Predicate: ingredient
Object: Bacon

Triple: ['__subject__ Bacon sandwich __predicate__ ingredient __object__ Bread']
Text: An ingredient in a bacon sandwich is bread.
Subject: Bacon sandwich
Predicate: ingredient
Object: Bread

Triple: ['__subject__ Bacon sandwich __predicate__ ingredient __object__ Bread']
Text: One ingredient of a bacon sandwich is bread.
Subject: Bacon sandwich
Predicate: ingredient
Object: Bread

Triple: ['__subject__ Bacon sandwich __predicate__ ingredient __object__ Bread']
Text: Bread is an ingredient of a bacon sandwich.
Subject: Bacon sandwich
Predicate: ingredient
Object: Bread

Triple: ['__subject__ Bacon sandwich __predicate__ ingredient __object__ Brown sauce']
Text: An ingredient in a bacon sandwich is brown sauce.
Subject: Bacon sandwich
Predicate: ingredient
Object: Brown sauce

Triple: ['__subject__ Bacon sandwich __predicate__ ingredient __object__ Brown sauce']
Text: Brown sauce is an ingredient in a bacon sandwich.
Subject: Bacon sandwich
Predicate: ingredient
Object: Brown sauce

Triple: ['__subject__ Bacon sandwich __predicate__ ingredient __object__ Brown sauce']
Text: Brown sauce is an ingredient of a Bacon Sandwich.
Subject: Bacon sandwich
Predicate: ingredient
Object: Brown sauce

Triple: ['__subject__ Bacon sandwich __predicate__ ingredient __object__ Condiment']
Text: Condiments are an ingredient in a bacon sandwich.
Subject: Bacon sandwich
Predicate: ingredient
Object: Condiment

Triple: ['__subject__ Bacon sandwich __predicate__ ingredient __object__ Condiment']
Text: Condiments are used in the preparation of a bacon sandwich.
Subject: Bacon sandwich
Predicate: ingredient
Object: Condiment

Triple: ['__subject__ Bacon sandwich __predicate__ ingredient __object__ Condiment']
Text: Condiments are ingredients in bacon sandwiches.
Subject: Bacon sandwich
Predicate: ingredient
Object: Condiment

Triple: ['__subject__ Bacon sandwich __predicate__ ingredient __object__ Ketchup']
Text: Ketchup can be an ingredient in a bacon sandwich.
Subject: Bacon sandwich
Predicate: ingredient
Object: Ketchup

Triple: ['__subject__ Bacon sandwich __predicate__ ingredient __object__ Ketchup']
Text: Ketchup can be added to a bacon sandwich.
Subject: Bacon sandwich
Predicate: ingredient
Object: Ketchup

Triple: ['__subject__ Bacon sandwich __predicate__ ingredient __object__ Ketchup']
Text: One of the ingredients of a Bacon Sandwich is Ketchup.
Subject: Bacon sandwich
Predicate: ingredient
Object: Ketchup

Triple: ['__subject__ Bacon sandwich __predicate__ mainIngredient __object__ Bread and bacon, with a condiment, often ketchup or brown sauce']
Text: The main ingredients of a bacon sandwich are bread and bacon and a condiment, often ketchup or brown sauce.
Subject: Bacon sandwich
Predicate: mainIngredient
Object: Bread and bacon, with a condiment, often ketchup or brown sauce

Triple: ['__subject__ Bacon sandwich __predicate__ mainIngredient __object__ Bread and bacon, with a condiment, often ketchup or brown sauce']
Text: The main ingredients in a Bacon sandwich are bread and bacon with ketchup or brown sauce as a condiment.
Subject: Bacon sandwich
Predicate: mainIngredient
Object: Bread and bacon, with a condiment, often ketchup or brown sauce

Triple: ['__subject__ Baked Alaska __predicate__ country __object__ France, United States or China']
Text: Baked Alaska is thought to have originated in the United States, France or China.
Subject: Baked Alaska
Predicate: country
Object: France, United States or China

Triple: ['__subject__ Baked Alaska __predicate__ country __object__ France, United States or China']
Text: France, United States and China all claim to have invented Baked Alaska.
Subject: Baked Alaska
Predicate: country
Object: France, United States or China

Triple: ['__subject__ Baked Alaska __predicate__ country __object__ France, United States or China']
Text: Baked Alaska is from France, the United States or China.
Subject: Baked Alaska
Predicate: country
Object: France, United States or China

Triple: ['__subject__ Baked Alaska __predicate__ country __object__ China']
Text: Baked Alaska is a dish in China.
Subject: Baked Alaska
Predicate: country
Object: China

Triple: ['__subject__ Baked Alaska __predicate__ country __object__ China']
Text: Baked Alaska is from China.
Subject: Baked Alaska
Predicate: country
Object: China

Triple: ['__subject__ Baked Alaska __predicate__ country __object__ China']
Text: Baked Alaska comes from China.
Subject: Baked Alaska
Predicate: country
Object: China

Triple: ['__subject__ Baked Alaska __predicate__ country __object__ France']
Text: Baked Alaska is from the country of France.
Subject: Baked Alaska
Predicate: country
Object: France

Triple: ['__subject__ Baked Alaska __predicate__ country __object__ France']
Text: Baked Alaska comes from the country of France.
Subject: Baked Alaska
Predicate: country
Object: France

Triple: ['__subject__ Baked Alaska __predicate__ country __object__ France']
Text: Baked Alaska is from France.
Subject: Baked Alaska
Predicate: country
Object: France

Triple: ['__subject__ Baked Alaska __predicate__ country __object__ United States']
Text: Baked Alaska is a dish from the United States.
Subject: Baked Alaska
Predicate: country
Object: United States

Triple: ['__subject__ Baked Alaska __predicate__ country __object__ United States']
Text: Baked Alaska is a dish found in the U.S.
Subject: Baked Alaska
Predicate: country
Object: United States

Triple: ['__subject__ Baked Alaska __predicate__ country __object__ United States']
Text: Baked Alaska is from the United States.
Subject: Baked Alaska
Predicate: country
Object: United States

Triple: ['__subject__ Baked Alaska __predicate__ ingredient __object__ Christmas pudding']
Text: Christmas pudding is an ingredient in Baked Alaska.
Subject: Baked Alaska
Predicate: ingredient
Object: Christmas pudding

Triple: ['__subject__ Baked Alaska __predicate__ ingredient __object__ Ice cream']
Text: Ice cream is an ingredient of Baked Alaska.
Subject: Baked Alaska
Predicate: ingredient
Object: Ice cream

Triple: ['__subject__ Baked Alaska __predicate__ ingredient __object__ Ice cream']
Text: Ice cream is an ingredient in Baked Alaska.
Subject: Baked Alaska
Predicate: ingredient
Object: Ice cream

Triple: ['__subject__ Baked Alaska __predicate__ ingredient __object__ Meringue']
Text: Meringue is an ingredient of a Baked Alaska.
Subject: Baked Alaska
Predicate: ingredient
Object: Meringue

Triple: ['__subject__ Baked Alaska __predicate__ ingredient __object__ Sponge cake']
Text: Sponge cake is an ingredient of Baked Alaska.
Subject: Baked Alaska
Predicate: ingredient
Object: Sponge cake

Triple: ['__subject__ Baked Alaska __predicate__ ingredient __object__ Sponge cake']
Text: One of the ingredients of Baked Alaska is Sponge Cake.
Subject: Baked Alaska
Predicate: ingredient
Object: Sponge cake

Triple: ['__subject__ Baked Alaska __predicate__ ingredient __object__ Sponge cake']
Text: Sponge cake is an ingredient in baked alaska.
Subject: Baked Alaska
Predicate: ingredient
Object: Sponge cake

Triple: ['__subject__ Baked Alaska __predicate__ mainIngredient __object__ Meringue, ice cream, sponge cake or Christmas pudding']
Text: Meringue, ice cream, sponge cake or Christmas pudding are the main ingredients of Baked Alaska.
Subject: Baked Alaska
Predicate: mainIngredient
Object: Meringue, ice cream, sponge cake or Christmas pudding

Triple: ['__subject__ Baked Alaska __predicate__ mainIngredient __object__ Meringue, ice cream, sponge cake or Christmas pudding']
Text: The main ingredients of a Baked Alaska are meringue, ice cream and sponge cake (or Christmas pudding).
Subject: Baked Alaska
Predicate: mainIngredient
Object: Meringue, ice cream, sponge cake or Christmas pudding

Triple: ['__subject__ Baked Alaska __predicate__ mainIngredient __object__ Meringue, ice cream, sponge cake or Christmas pudding']
Text: Meringue, ice cream, sponge cake or Christmas pudding are main ingredients in baked Alaska.
Subject: Baked Alaska
Predicate: mainIngredient
Object: Meringue, ice cream, sponge cake or Christmas pudding

Triple: ['__subject__ Baked Alaska __predicate__ region __object__ Paris, New York or Hong Kong']
Text: Hong Kong or New York or Paris are the regions where Baked Alaska is found.
Subject: Baked Alaska
Predicate: region
Object: Paris, New York or Hong Kong

Triple: ['__subject__ Baked Alaska __predicate__ region __object__ Paris, New York or Hong Kong']
Text: Baked Alaska comes from either Paris, New York or Hong Kong.
Subject: Baked Alaska
Predicate: region
Object: Paris, New York or Hong Kong

Triple: ['__subject__ Baked Alaska __predicate__ region __object__ Paris, New York or Hong Kong']
Text: Baked Alaska is popular in Paris, New York and Hong Kong.
Subject: Baked Alaska
Predicate: region
Object: Paris, New York or Hong Kong

Triple: ['__subject__ Baked Alaska __predicate__ region __object__ New York']
Text: Baked Alaska comes from the region of New York.
Subject: Baked Alaska
Predicate: region
Object: New York

Triple: ['__subject__ Baked Alaska __predicate__ region __object__ New York']
Text: Baked Alaska is from the New York region.
Subject: Baked Alaska
Predicate: region
Object: New York

Triple: ['__subject__ Bakewell pudding __predicate__ course __object__ Dessert']
Text: Bakewell pudding is a dessert.
Subject: Bakewell pudding
Predicate: course
Object: Dessert

Triple: ['__subject__ Bakewell pudding __predicate__ course __object__ Dessert']
Text: Bakewell pudding is classed as a Dessert.
Subject: Bakewell pudding
Predicate: course
Object: Dessert

Triple: ['__subject__ Bakewell pudding __predicate__ creator __object__ Rutland Arms, Bakewell, in 1820']
Text: Bakewell pudding was created in 1820 at the Rutland Arms, Bakewell.
Subject: Bakewell pudding
Predicate: creator
Object: Rutland Arms, Bakewell, in 1820

Triple: ['__subject__ Bakewell pudding __predicate__ creator __object__ Rutland Arms, Bakewell, in 1820']
Text: Bakewell pudding was created in Rutland Arms, Bakewell, in 1820.
Subject: Bakewell pudding
Predicate: creator
Object: Rutland Arms, Bakewell, in 1820

Triple: ['__subject__ Bakewell pudding __predicate__ dishVariation __object__ Bakewell tart']
Text: A variant of bakewell pudding is bakewell tart.
Subject: Bakewell pudding
Predicate: dishVariation
Object: Bakewell tart

Triple: ['__subject__ Bakewell pudding __predicate__ dishVariation __object__ Bakewell tart']
Text: Bakewell tart is a variation of Bakewell pudding.
Subject: Bakewell pudding
Predicate: dishVariation
Object: Bakewell tart

Triple: ['__subject__ Bakewell pudding __predicate__ mainIngredient __object__ Ground almond, jam, butter, eggs']
Text: Some main ingredients in Bakewell pudding are ground almonds, jam, butter and eggs.
Subject: Bakewell pudding
Predicate: mainIngredient
Object: Ground almond, jam, butter, eggs

Triple: ['__subject__ Bakewell pudding __predicate__ mainIngredient __object__ Ground almond, jam, butter, eggs']
Text: Bakewell pudding has ground almond, jam, butter and eggs as main ingredients.
Subject: Bakewell pudding
Predicate: mainIngredient
Object: Ground almond, jam, butter, eggs

Triple: ['__subject__ Bakewell pudding __predicate__ mainIngredient __object__ Ground almond, jam, butter, eggs']
Text: The main ingredients of Bakewell pudding are ground almond, jam, butter, eggs.
Subject: Bakewell pudding
Predicate: mainIngredient
Object: Ground almond, jam, butter, eggs

Triple: ['__subject__ Bakewell pudding __predicate__ region __object__ Derbyshire Dales']
Text: Bakewell pudding is from the Derbyshire Dales region.
Subject: Bakewell pudding
Predicate: region
Object: Derbyshire Dales

Triple: ['__subject__ Bakewell pudding __predicate__ region __object__ Derbyshire Dales']
Text: Bakewell pudding originates from the Derbyshire Dales.
Subject: Bakewell pudding
Predicate: region
Object: Derbyshire Dales

Triple: ['__subject__ Bakewell pudding __predicate__ servingTemperature __object__ Warm (freshly baked) or cold']
Text: Bakewell pudding can be served warm (freshly baked) or cold.
Subject: Bakewell pudding
Predicate: servingTemperature
Object: Warm (freshly baked) or cold

Triple: ['__subject__ Bakewell tart __predicate__ ingredient __object__ Fruit preserves']
Text: Fruit preserves are an ingredient in the bakewell tart.
Subject: Bakewell tart
Predicate: ingredient
Object: Fruit preserves

Triple: ['__subject__ Bakewell tart __predicate__ ingredient __object__ Fruit preserves']
Text: Fruit preserves are an ingredient in Bakewell tart.
Subject: Bakewell tart
Predicate: ingredient
Object: Fruit preserves

Triple: ['__subject__ Bakewell tart __predicate__ ingredient __object__ Shortcrust pastry']
Text: An ingredient of bakewell tart is shortcrust pastry.
Subject: Bakewell tart
Predicate: ingredient
Object: Shortcrust pastry

Triple: ['__subject__ Bakewell tart __predicate__ ingredient __object__ Shortcrust pastry']
Text: Shortcrust pastry is a main ingredient of a Bakewell tart.
Subject: Bakewell tart
Predicate: ingredient
Object: Shortcrust pastry

Triple: ['__subject__ Bakewell tart __predicate__ ingredient __object__ Shortcrust pastry']
Text: Shortcrust pastry is a key ingredient in a Bakewell tart.
Subject: Bakewell tart
Predicate: ingredient
Object: Shortcrust pastry

Triple: ['__subject__ Bakewell tart __predicate__ region __object__ Derbyshire Dales']
Text: Bakewell tart comes from the Derbyshire Dales region.
Subject: Bakewell tart
Predicate: region
Object: Derbyshire Dales

Triple: ['__subject__ Bakewell tart __predicate__ region __object__ Derbyshire Dales']
Text: Bakewell Tart is a dish that comes from the Derbyshire Dales region.
Subject: Bakewell tart
Predicate: region
Object: Derbyshire Dales

Triple: ['__subject__ Bakewell tart __predicate__ region __object__ Derbyshire Dales']
Text: The bakewell tart is popular in the Derbyshire Dales area.
Subject: Bakewell tart
Predicate: region
Object: Derbyshire Dales

Triple: ['__subject__ Bakso __predicate__ country __object__ Chinese cuisine']
Text: Bakso is from the Chinese cuisine.
Subject: Bakso
Predicate: country
Object: Chinese cuisine

Triple: ['__subject__ Bakso __predicate__ country __object__ Chinese cuisine']
Text: Bakso is made in China.
Subject: Bakso
Predicate: country
Object: Chinese cuisine

Triple: ['__subject__ Bakso __predicate__ country __object__ Indonesia']
Text: Indonesia is the country Bakso comes from.
Subject: Bakso
Predicate: country
Object: Indonesia

Triple: ['__subject__ Bakso __predicate__ country __object__ Indonesia']
Text: Bakso is a dish from the country of Indonesia.
Subject: Bakso
Predicate: country
Object: Indonesia

Triple: ['__subject__ Bakso __predicate__ ingredient __object__ Beef']
Text: Beef is an ingredient of Bakso.
Subject: Bakso
Predicate: ingredient
Object: Beef

Triple: ['__subject__ Bakso __predicate__ ingredient __object__ Celery']
Text: Celery is an ingredient of Bakso.
Subject: Bakso
Predicate: ingredient
Object: Celery

Triple: ['__subject__ Bakso __predicate__ ingredient __object__ Celery']
Text: Celery is an ingredient in Bakso.
Subject: Bakso
Predicate: ingredient
Object: Celery

Triple: ['__subject__ Bakso __predicate__ ingredient __object__ Ground beef']
Text: Ground beef is an ingredient in Bakso.
Subject: Bakso
Predicate: ingredient
Object: Ground beef

Triple: ['__subject__ Bakso __predicate__ ingredient __object__ Ground beef']
Text: Ground beef is one ingredient in Bakso.
Subject: Bakso
Predicate: ingredient
Object: Ground beef

Triple: ['__subject__ Bakso __predicate__ ingredient __object__ Ground beef']
Text: Ground beef is an ingredient of Bakso.
Subject: Bakso
Predicate: ingredient
Object: Ground beef

Triple: ['__subject__ Bakso __predicate__ ingredient __object__ Tapioca']
Text: Tapioca is an ingredient in bakso.
Subject: Bakso
Predicate: ingredient
Object: Tapioca

Triple: ['__subject__ Bakso __predicate__ mainIngredient __object__ Ground beef, tapioca, noodle, rice vermicelli, beef broth, kailan, celery, salted vegetables, fried shallots']
Text: Ground beef, tapioca, noodle, rice vermicelli, beef broth, kailan, celery, salted vegetables, fried shallots are the main ingredients of Bakso.
Subject: Bakso
Predicate: mainIngredient
Object: Ground beef, tapioca, noodle, rice vermicelli, beef broth, kailan, celery, salted vegetables, fried shallots

Triple: ['__subject__ Bakso __predicate__ mainIngredient __object__ Ground beef, tapioca, noodle, rice vermicelli, beef broth, kailan, celery, salted vegetables, fried shallots']
Text: The main ingredients of Bakso are ground beef, tapioca, noodle, rice vermicelli, beef broth, kailan, celery, salted vegetables and fried shallots.
Subject: Bakso
Predicate: mainIngredient
Object: Ground beef, tapioca, noodle, rice vermicelli, beef broth, kailan, celery, salted vegetables, fried shallots

Triple: ['__subject__ Bakso __predicate__ mainIngredient __object__ Ground beef, tapioca, noodle, rice vermicelli, beef broth, kailan, celery, salted vegetables, fried shallots']
Text: Ground beef, tapioca, noodle, rice vermicelli, beef broth, kailan, celery, salted vegetables, and fried shallots are main ingredients in Bakso.
Subject: Bakso
Predicate: mainIngredient
Object: Ground beef, tapioca, noodle, rice vermicelli, beef broth, kailan, celery, salted vegetables, fried shallots

Triple: ['__subject__ Bakso __predicate__ region __object__ Nationwide in Indonesia, also popular in neighboring Southeast Asian countries']
Text: Bakso is popular in the Indonesian region and also in the neighbouring Southeast Asian countries.
Subject: Bakso
Predicate: region
Object: Nationwide in Indonesia, also popular in neighboring Southeast Asian countries

Triple: ['__subject__ Bakso __predicate__ region __object__ Nationwide in Indonesia, also popular in neighboring Southeast Asian countries']
Text: Bakso is a traditional dish throughout the whole of Indonesia and is popular in neighbouring Southeast Asian countries too.
Subject: Bakso
Predicate: region
Object: Nationwide in Indonesia, also popular in neighboring Southeast Asian countries

Triple: ['__subject__ Bakso __predicate__ region __object__ Nationwide in Indonesia, also popular in neighboring Southeast Asian countries']
Text: Bakso is popular all over Indonesia and Southeastern Asian countries.
Subject: Bakso
Predicate: region
Object: Nationwide in Indonesia, also popular in neighboring Southeast Asian countries

Triple: ['__subject__ Bakso __predicate__ region __object__ Indonesia']
Text: Bakso is a food found in Indonesia.
Subject: Bakso
Predicate: region
Object: Indonesia

Triple: ['__subject__ Bakso __predicate__ region __object__ Indonesia']
Text: Bakso is food found in Indonesia.
Subject: Bakso
Predicate: region
Object: Indonesia

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Arepa']
Text: Arepa is an ingredient of Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Arepa

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Arepa']
Text: Arepa is one of the ingredients in Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Arepa

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Avocado']
Text: Avocado is one of the ingredients in the dish Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Avocado

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Black pudding']
Text: Black pudding is an ingredient in Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Black pudding

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Black pudding']
Text: Black pudding is included in the list of ingredients needed to make Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Black pudding

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Cooking plantain']
Text: Plantain is one of the ingredients in the dish Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Cooking plantain

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Cooking plantain']
Text: Cooking plantain is an ingredient in bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Cooking plantain

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Fried egg']
Text: Fried egg is an ingredient of Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Fried egg

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Fried egg']
Text: Fried egg is one of the ingredients of Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Fried egg

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Fried egg']
Text: Fried egg is an ingredient in bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Fried egg

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Ground meat']
Text: Ground meat is an ingredient in bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Ground meat

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Hogao']
Text: Hogao is an ingredient of Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Hogao

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Kidney bean']
Text: The kidney bean is an ingredient in Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Kidney bean

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Kidney bean']
Text: Kidney beans are an ingredient in Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Kidney bean

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Lemon']
Text: Lemon is an ingredient of Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Lemon

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Lemon']
Text: One of the ingredients in Bandeja paisa is lemon.
Subject: Bandeja paisa
Predicate: ingredient
Object: Lemon

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Lemon']
Text: Lemon is an ingredient in Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Lemon

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Pork belly']
Text: Pork belly is an ingredient in the dish Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Pork belly

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Pork belly']
Text: Pork belly is an ingredient in Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Pork belly

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Pork belly']
Text: One of the ingredients of Bandeja paisa is Pork belly.
Subject: Bandeja paisa
Predicate: ingredient
Object: Pork belly

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Rice']
Text: Rice is an ingredient in bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Rice

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Rice']
Text: Rice is an ingredient of Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Rice

Triple: ['__subject__ Bandeja paisa __predicate__ ingredient __object__ Rice']
Text: Rice is included in Bandeja paisa.
Subject: Bandeja paisa
Predicate: ingredient
Object: Rice

Triple: ['__subject__ Bandeja paisa __predicate__ mainIngredient __object__ red beans, pork belly, white rice, ground meat, chicharon, fried egg, plantain (patacones), chorizo, arepa, hogao sauce, black pudding (morcilla), avocado and lemon']
Text: The main ingredients in bandeja paisa are red beans, pork belly, white rice, ground meat, chicharon, fried egg, plantain (patacones), chorizo, arepa, hogao sauce, black pudding (morcilla), avocado and lemon.
Subject: Bandeja paisa
Predicate: mainIngredient
Object: red beans, pork belly, white rice, ground meat, chicharon, fried egg, plantain (patacones), chorizo, arepa, hogao sauce, black pudding (morcilla), avocado and lemon

Triple: ['__subject__ Bandeja paisa __predicate__ mainIngredient __object__ red beans, pork belly, white rice, ground meat, chicharon, fried egg, plantain (patacones), chorizo, arepa, hogao sauce, black pudding (morcilla), avocado and lemon']
Text: The main ingredients of Bandeja paisa are: red beans, pork belly, white rice, ground meat, chicharon, fried egg, plantain (patacones), chorizo, arepa, hogao sauce, black pudding (morcilla), avocado and lemon".
Subject: Bandeja paisa
Predicate: mainIngredient
Object: red beans, pork belly, white rice, ground meat, chicharon, fried egg, plantain (patacones), chorizo, arepa, hogao sauce, black pudding (morcilla), avocado and lemon

Triple: ['__subject__ Bandeja paisa __predicate__ mainIngredient __object__ red beans, pork belly, white rice, ground meat, chicharon, fried egg, plantain (patacones), chorizo, arepa, hogao sauce, black pudding (morcilla), avocado and lemon']
Text: The main ingredients of Bandeja paisa are red beans, pork belly, white rice, ground meat, chicharon, fried egg, plantain (patacones), chorizo, arepa, hogao sauce, black pudding (morcilla), avocado and lemon.
Subject: Bandeja paisa
Predicate: mainIngredient
Object: red beans, pork belly, white rice, ground meat, chicharon, fried egg, plantain (patacones), chorizo, arepa, hogao sauce, black pudding (morcilla), avocado and lemon

Triple: ['__subject__ Bandeja paisa __predicate__ region __object__ Antioquia Department']
Text: Bandeja paisa is found in the Antioquia Department.
Subject: Bandeja paisa
Predicate: region
Object: Antioquia Department

Triple: ['__subject__ Bandeja paisa __predicate__ region __object__ Antioquia Department']
Text: Antioquia Department is the regions where Bandeja paisa comes from.
Subject: Bandeja paisa
Predicate: region
Object: Antioquia Department

Triple: ['__subject__ Bandeja paisa __predicate__ region __object__ Antioquia Department']
Text: Bandeja paisa is a dish from the Antioquia Department region.
Subject: Bandeja paisa
Predicate: region
Object: Antioquia Department

Triple: ['__subject__ Barny Cakes __predicate__ carbohydrate __object__ 18.0 g']
Text: Barny cakes have 18 grams of carbs.
Subject: Barny Cakes
Predicate: carbohydrate
Object: 18.0 g

Triple: ['__subject__ Barny Cakes __predicate__ carbohydrate __object__ 18.0 g']
Text: Barny Cakes have 18.0g of carbohydrates.
Subject: Barny Cakes
Predicate: carbohydrate
Object: 18.0 g

Triple: ['__subject__ Barny Cakes __predicate__ country __object__ France']
Text: The country Barny Cakes come from is France.
Subject: Barny Cakes
Predicate: country
Object: France

Triple: ['__subject__ Barny Cakes __predicate__ country __object__ France']
Text: Barny cakes can be found in France.
Subject: Barny Cakes
Predicate: country
Object: France

Triple: ['__subject__ Barny Cakes __predicate__ dishVariation __object__ Apple']
Text: Barny cakes can be made with apple.
Subject: Barny Cakes
Predicate: dishVariation
Object: Apple

Triple: ['__subject__ Barny Cakes __predicate__ dishVariation __object__ Milk']
Text: One dish variation called Barny Cakes is the use of milk in the recipe.
Subject: Barny Cakes
Predicate: dishVariation
Object: Milk

Triple: ['__subject__ Barny Cakes __predicate__ dishVariation __object__ Strawberry']
Text: Strawberries can be added to barny cakes.
Subject: Barny Cakes
Predicate: dishVariation
Object: Strawberry

Triple: ['__subject__ Barny Cakes __predicate__ dishVariation __object__ Strawberry']
Text: A variation of Barny Cakes is to use Strawberry.
Subject: Barny Cakes
Predicate: dishVariation
Object: Strawberry

Triple: ['__subject__ Barny Cakes __predicate__ fat __object__ 4.8 g']
Text: Barny cakes contain 4.8 g of fat.
Subject: Barny Cakes
Predicate: fat
Object: 4.8 g

Triple: ['__subject__ Barny Cakes __predicate__ fat __object__ 4.8 g']
Text: Barny cakes contain 4.8g of fat.
Subject: Barny Cakes
Predicate: fat
Object: 4.8 g

Triple: ['__subject__ Barny Cakes __predicate__ ingredient __object__ Sponge cake']
Text: Barny cakes are made with sponge cake.
Subject: Barny Cakes
Predicate: ingredient
Object: Sponge cake

Triple: ['__subject__ Barny Cakes __predicate__ year __object__ 1999']
Text: Barny cakes were invented in 1999.
Subject: Barny Cakes
Predicate: year
Object: 1999

Triple: ['__subject__ Barny Cakes __predicate__ year __object__ 1999']
Text: Barny Cakes were introduced in 1999.
Subject: Barny Cakes
Predicate: year
Object: 1999

Triple: ['__subject__ Batagor __predicate__ country __object__ Indonesia']
Text: Batagor comes from the country of Indonesia.
Subject: Batagor
Predicate: country
Object: Indonesia

Triple: ['__subject__ Batagor __predicate__ country __object__ Indonesia']
Text: Batagor is found in Indonesia.
Subject: Batagor
Predicate: country
Object: Indonesia

Triple: ['__subject__ Batagor __predicate__ country __object__ Indonesia']
Text: Batagor is found in the country of Indonesia.
Subject: Batagor
Predicate: country
Object: Indonesia

Triple: ['__subject__ Batagor __predicate__ dishVariation __object__ Siomay']
Text: Batagor is a variation of the Siomay dish.
Subject: Batagor
Predicate: dishVariation
Object: Siomay

Triple: ['__subject__ Batagor __predicate__ dishVariation __object__ Siomay']
Text: Batagor and Siomay are variations of the same dish.
Subject: Batagor
Predicate: dishVariation
Object: Siomay

Triple: ['__subject__ Batagor __predicate__ ingredient __object__ Peanut sauce']
Text: Peanut sauce is an ingredient of batagor.
Subject: Batagor
Predicate: ingredient
Object: Peanut sauce

Triple: ['__subject__ Batagor __predicate__ servingTemperature __object__ hot']
Text: Batagor should be served hot.
Subject: Batagor
Predicate: servingTemperature
Object: hot

Triple: ['__subject__ Batagor __predicate__ servingTemperature __object__ hot']
Text: Batagor is a dish best served hot.
Subject: Batagor
Predicate: servingTemperature
Object: hot

Triple: ['__subject__ Batagor __predicate__ servingTemperature __object__ hot']
Text: Batagor should be served "hot".
Subject: Batagor
Predicate: servingTemperature
Object: hot

Triple: ['__subject__ Batchoy __predicate__ course __object__ Soup']
Text: Batchoy is a dish served as a soup course.
Subject: Batchoy
Predicate: course
Object: Soup

Triple: ['__subject__ Batchoy __predicate__ course __object__ Soup']
Text: Batchoy is a type of soup.
Subject: Batchoy
Predicate: course
Object: Soup

Triple: ['__subject__ Batchoy __predicate__ ingredient __object__ Beef']
Text: Beef is an ingredient of Batchoy.
Subject: Batchoy
Predicate: ingredient
Object: Beef

Triple: ['__subject__ Batchoy __predicate__ ingredient __object__ Beef']
Text: Beef is an ingredient in batchoy.
Subject: Batchoy
Predicate: ingredient
Object: Beef

Triple: ['__subject__ Batchoy __predicate__ ingredient __object__ Noodle']
Text: Noodles are an ingredient in batchoy.
Subject: Batchoy
Predicate: ingredient
Object: Noodle

Triple: ['__subject__ Batchoy __predicate__ ingredient __object__ Pork']
Text: Pork is an ingredient of Batchoy.
Subject: Batchoy
Predicate: ingredient
Object: Pork

Triple: ['__subject__ Batchoy __predicate__ ingredient __object__ Pork']
Text: Pork is an ingredient in Batchoy.
Subject: Batchoy
Predicate: ingredient
Object: Pork

Triple: ['__subject__ Batchoy __predicate__ ingredient __object__ Pork']
Text: One of the ingredients of Batchoy is Pork.
Subject: Batchoy
Predicate: ingredient
Object: Pork

Triple: ['__subject__ Batchoy __predicate__ mainIngredient __object__ noodles, pork organs, vegetables, chicken, shrimp, beef']
Text: The main ingredients of batchoy are noodles, pork organs, vegetables, chicken, shrimp, and beef.
Subject: Batchoy
Predicate: mainIngredient
Object: noodles, pork organs, vegetables, chicken, shrimp, beef

Triple: ['__subject__ Batchoy __predicate__ mainIngredient __object__ noodles, pork organs, vegetables, chicken, shrimp, beef']
Text: The main ingredients of Batchoy are noodles, pork organs, vegetables, chicken, shrimp and beef.
Subject: Batchoy
Predicate: mainIngredient
Object: noodles, pork organs, vegetables, chicken, shrimp, beef

Triple: ['__subject__ Batchoy __predicate__ mainIngredient __object__ noodles, pork organs, vegetables, chicken, shrimp, beef']
Text: The main ingredients of Batchoy are noodles, pork organs, vegetables, chicken, shrimp, beef.
Subject: Batchoy
Predicate: mainIngredient
Object: noodles, pork organs, vegetables, chicken, shrimp, beef

Triple: ['__subject__ Batchoy __predicate__ region __object__ La Paz, Iloilo City']
Text: Batchoy is a food found in La Paz, Iloilo City.
Subject: Batchoy
Predicate: region
Object: La Paz, Iloilo City

Triple: ['__subject__ Batchoy __predicate__ region __object__ La Paz, Iloilo City']
Text: Batchoy originated from the region of La Paz, Iloilo City.
Subject: Batchoy
Predicate: region
Object: La Paz, Iloilo City

Triple: ['__subject__ Beef kway teow __predicate__ country __object__ Singapore and Indonesia']
Text: Beef kway teow is found in the countries of Indonesia and Singapore.
Subject: Beef kway teow
Predicate: country
Object: Singapore and Indonesia

Triple: ['__subject__ Beef kway teow __predicate__ country __object__ Singapore and Indonesia']
Text: Beef kway teow is a dish commonly found in Singapore and Indonesia.
Subject: Beef kway teow
Predicate: country
Object: Singapore and Indonesia

Triple: ['__subject__ Beef kway teow __predicate__ country __object__ Singapore and Indonesia']
Text: Beef Kway Teow is made in Singapore and Indonesia.
Subject: Beef kway teow
Predicate: country
Object: Singapore and Indonesia

Triple: ['__subject__ Beef kway teow __predicate__ country __object__ Indonesia']
Text: Beef kway teow is a dish in Indonesia.
Subject: Beef kway teow
Predicate: country
Object: Indonesia

Triple: ['__subject__ Beef kway teow __predicate__ country __object__ Indonesia']
Text: Beef kway teow comes from the country of Indonesia.
Subject: Beef kway teow
Predicate: country
Object: Indonesia

Triple: ['__subject__ Beef kway teow __predicate__ country __object__ Indonesia']
Text: Beef kway teow is a popular food of Indonesia.
Subject: Beef kway teow
Predicate: country
Object: Indonesia

Triple: ['__subject__ Beef kway teow __predicate__ country __object__ Singapore']
Text: Beef kway teow is a dish from the country of Singapore.
Subject: Beef kway teow
Predicate: country
Object: Singapore

Triple: ['__subject__ Beef kway teow __predicate__ country __object__ Singapore']
Text: Beef kway teow is a popular dish in Singapore.
Subject: Beef kway teow
Predicate: country
Object: Singapore

Triple: ['__subject__ Beef kway teow __predicate__ ingredient __object__ Oyster sauce']
Text: Oyster sauce is an ingredient in Beef kway teow.
Subject: Beef kway teow
Predicate: ingredient
Object: Oyster sauce

Triple: ['__subject__ Beef kway teow __predicate__ ingredient __object__ Oyster sauce']
Text: Oyster sauce is contained in Beef kway teow.
Subject: Beef kway teow
Predicate: ingredient
Object: Oyster sauce

Triple: ['__subject__ Beef kway teow __predicate__ ingredient __object__ Palm sugar']
Text: Palm sugar is an ingredient in beef kway teow.
Subject: Beef kway teow
Predicate: ingredient
Object: Palm sugar

Triple: ['__subject__ Beef kway teow __predicate__ ingredient __object__ Palm sugar']
Text: Palm sugar is an ingredient of Beef kway teow.
Subject: Beef kway teow
Predicate: ingredient
Object: Palm sugar

Triple: ['__subject__ Beef kway teow __predicate__ ingredient __object__ Sesame oil']
Text: Sesame oil is an ingredient in beef kway teow.
Subject: Beef kway teow
Predicate: ingredient
Object: Sesame oil

Triple: ['__subject__ Beef kway teow __predicate__ mainIngredient __object__ Kway teow, beef tender loin, gula Melaka, sliced, dried black beans, garlic, dark soy sauce, lengkuas, oyster sauce, soya sauce, chilli and sesame oil']
Text: Kway teow, beef tender loin, gula Melaka, sliced, dried black beans, garlic, dark soy sauce, lengkuas, oyster sauce, soya sauce, chilli and sesame oil are the main ingredients of Beef kway teow.
Subject: Beef kway teow
Predicate: mainIngredient
Object: Kway teow, beef tender loin, gula Melaka, sliced, dried black beans, garlic, dark soy sauce, lengkuas, oyster sauce, soya sauce, chilli and sesame oil

Triple: ['__subject__ Beef kway teow __predicate__ mainIngredient __object__ Kway teow, beef tender loin, gula Melaka, sliced, dried black beans, garlic, dark soy sauce, lengkuas, oyster sauce, soya sauce, chilli and sesame oil']
Text: The main ingredients for Beef Kway Teow are: Kway teow, beef tender loin, gula Melaka, sliced, dried black beans, garlic, dark soy sauce, lengkuas, oyster sauce, soya sauce, chilli and sesame oil.
Subject: Beef kway teow
Predicate: mainIngredient
Object: Kway teow, beef tender loin, gula Melaka, sliced, dried black beans, garlic, dark soy sauce, lengkuas, oyster sauce, soya sauce, chilli and sesame oil

Triple: ['__subject__ Beef kway teow __predicate__ mainIngredient __object__ Kway teow, beef tender loin, gula Melaka, sliced, dried black beans, garlic, dark soy sauce, lengkuas, oyster sauce, soya sauce, chilli and sesame oil']
Text: Kway teow, beef tender loin, gula Melaka, sliced, dried black beans, garlic, dark soy sauce, lengkuas, oyster sauce, soya sauce, chilli and sesame oil are main ingredients in beef kway teow.
Subject: Beef kway teow
Predicate: mainIngredient
Object: Kway teow, beef tender loin, gula Melaka, sliced, dried black beans, garlic, dark soy sauce, lengkuas, oyster sauce, soya sauce, chilli and sesame oil

Triple: ['__subject__ Beef kway teow __predicate__ region __object__ Nationwide in Singapore and Indonesia']
Text: Beef kway teow is a dish that is popular nationwide in Singapore and Indonesia.
Subject: Beef kway teow
Predicate: region
Object: Nationwide in Singapore and Indonesia

Triple: ['__subject__ Beef kway teow __predicate__ region __object__ Nationwide in Singapore and Indonesia']
Text: Beef kway teow is available nationwide in Singapore and Indonesia.
Subject: Beef kway teow
Predicate: region
Object: Nationwide in Singapore and Indonesia

Triple: ['__subject__ Beef kway teow __predicate__ region __object__ Singapore']
Text: Beef kway teow comes from the Singapore region.
Subject: Beef kway teow
Predicate: region
Object: Singapore

Triple: ['__subject__ Beef kway teow __predicate__ region __object__ Singapore']
Text: Beef kway teow originates from Singapore.
Subject: Beef kway teow
Predicate: region
Object: Singapore

Triple: ['__subject__ Beef kway teow __predicate__ region __object__ Singapore']
Text: Beef kway teow is a dish of Singapore.
Subject: Beef kway teow
Predicate: region
Object: Singapore

Triple: ['__subject__ Bhajji __predicate__ country __object__ India']
Text: Bhajji comes from the country India.
Subject: Bhajji
Predicate: country
Object: India

Triple: ['__subject__ Bhajji __predicate__ country __object__ India']
Text: Bhajji originates from India.
Subject: Bhajji
Predicate: country
Object: India

Triple: ['__subject__ Bhajji __predicate__ ingredient __object__ Gram flour']
Text: Gram flour is an ingredient in Bhajji.
Subject: Bhajji
Predicate: ingredient
Object: Gram flour

Triple: ['__subject__ Bhajji __predicate__ ingredient __object__ Gram flour']
Text: Gram flour is an ingredient of a Bhajji.
Subject: Bhajji
Predicate: ingredient
Object: Gram flour

Triple: ['__subject__ Bhajji __predicate__ ingredient __object__ Vegetable']
Text: Bhajji includes the ingredient vegetables.
Subject: Bhajji
Predicate: ingredient
Object: Vegetable

Triple: ['__subject__ Bhajji __predicate__ mainIngredient __object__ Gram flour, vegetables']
Text: The main ingredients in Bhajji are gram flour and vegetables.
Subject: Bhajji
Predicate: mainIngredient
Object: Gram flour, vegetables

Triple: ['__subject__ Bhajji __predicate__ mainIngredient __object__ Gram flour, vegetables']
Text: Gram flour and vegetables are main ingredients in bhajji.
Subject: Bhajji
Predicate: mainIngredient
Object: Gram flour, vegetables

Triple: ['__subject__ Bhajji __predicate__ region __object__ Karnataka']
Text: Bhajji are found in the region of Karnataka.
Subject: Bhajji
Predicate: region
Object: Karnataka

Triple: ['__subject__ Bhajji __predicate__ region __object__ Karnataka']
Text: Bhajji come from the Karnataka region.
Subject: Bhajji
Predicate: region
Object: Karnataka

Triple: ['__subject__ Bhajji __predicate__ region __object__ Karnataka']
Text: Bhajji is from the Karnataka region.
Subject: Bhajji
Predicate: region
Object: Karnataka

Triple: ['__subject__ Bhajji __predicate__ related __object__ Pakora']
Text: The dish bhajji is related to pakora.
Subject: Bhajji
Predicate: related
Object: Pakora

Triple: ['__subject__ Bhajji __predicate__ related __object__ Pakora']
Text: Bhajji is a snack that is similar to Pakora.
Subject: Bhajji
Predicate: related
Object: Pakora

Triple: ['__subject__ Bhajji __predicate__ related __object__ Pakora']
Text: Bhajji and pakora are related.
Subject: Bhajji
Predicate: related
Object: Pakora

Triple: ['__subject__ Bhajji __predicate__ similarDish __object__ Pakora and other fritters made from wheat or corn flour']
Text: Bhajji is a dish similar to pakora and other fritters made from wheat or corn flour.
Subject: Bhajji
Predicate: similarDish
Object: Pakora and other fritters made from wheat or corn flour

Triple: ['__subject__ Bhajji __predicate__ similarDish __object__ Pakora and other fritters made from wheat or corn flour']
Text: Pakora and other fritters made from wheat or corn flour are similar to bhajji.
Subject: Bhajji
Predicate: similarDish
Object: Pakora and other fritters made from wheat or corn flour

Triple: ['__subject__ Bhajji __predicate__ similarDish __object__ Pakora and other fritters made from wheat or corn flour']
Text: Bhajji is a similar dish to pakora and other fritters made from wheat or corn flour.
Subject: Bhajji
Predicate: similarDish
Object: Pakora and other fritters made from wheat or corn flour

Triple: ['__subject__ Binignit __predicate__ country __object__ Philippines']
Text: The country Binignit comes from is the Philippines.
Subject: Binignit
Predicate: country
Object: Philippines

Triple: ['__subject__ Binignit __predicate__ country __object__ Philippines']
Text: The binignit dish can be found in the Philippines.
Subject: Binignit
Predicate: country
Object: Philippines

Triple: ['__subject__ Binignit __predicate__ course __object__ Dessert']
Text: Binignit should be served as the dessert course.
Subject: Binignit
Predicate: course
Object: Dessert

Triple: ['__subject__ Binignit __predicate__ course __object__ Dessert']
Text: Binignit is a type of dessert.
Subject: Binignit
Predicate: course
Object: Dessert

Triple: ['__subject__ Binignit __predicate__ course __object__ Dessert']
Text: Binignit is a dessert.
Subject: Binignit
Predicate: course
Object: Dessert

Triple: ['__subject__ Binignit __predicate__ ingredient __object__ Banana']
Text: Banana is an ingredient in binignit.
Subject: Binignit
Predicate: ingredient
Object: Banana

Triple: ['__subject__ Binignit __predicate__ ingredient __object__ Coconut milk']
Text: Coconut milk is an ingredient of Binignit.
Subject: Binignit
Predicate: ingredient
Object: Coconut milk

Triple: ['__subject__ Binignit __predicate__ ingredient __object__ Coconut milk']
Text: Coconut milk is an ingredient in Binignit.
Subject: Binignit
Predicate: ingredient
Object: Coconut milk

Triple: ['__subject__ Binignit __predicate__ ingredient __object__ Sago']
Text: Sago is an ingredient of Binignit.
Subject: Binignit
Predicate: ingredient
Object: Sago

Triple: ['__subject__ Binignit __predicate__ ingredient __object__ Sago']
Text: Sago is one of the ingredients used to make Binignit.
Subject: Binignit
Predicate: ingredient
Object: Sago

Triple: ['__subject__ Binignit __predicate__ ingredient __object__ Sago']
Text: Sago is an ingredient in Binignit.
Subject: Binignit
Predicate: ingredient
Object: Sago

Triple: ['__subject__ Binignit __predicate__ ingredient __object__ Sweet potato']
Text: Sweet potato is and ingredient in Binignit.
Subject: Binignit
Predicate: ingredient
Object: Sweet potato

Triple: ['__subject__ Binignit __predicate__ ingredient __object__ Sweet potato']
Text: Sweet potatoes are in binignit recipes.
Subject: Binignit
Predicate: ingredient
Object: Sweet potato

Triple: ['__subject__ Binignit __predicate__ ingredient __object__ Sweet potato']
Text: One of the ingredients of Binignit is Sweet potato.
Subject: Binignit
Predicate: ingredient
Object: Sweet potato

Triple: ['__subject__ Binignit __predicate__ mainIngredient __object__ Banana']
Text: One of the main ingredients in binignit is banana.
Subject: Binignit
Predicate: mainIngredient
Object: Banana

Triple: ['__subject__ Binignit __predicate__ mainIngredient __object__ Banana']
Text: The main ingredient of Binignit is banana.
Subject: Binignit
Predicate: mainIngredient
Object: Banana

Triple: ['__subject__ Binignit __predicate__ mainIngredient __object__ Coconut milk']
Text: One of the main ingredients of binignit is coconut milk.
Subject: Binignit
Predicate: mainIngredient
Object: Coconut milk

Triple: ['__subject__ Binignit __predicate__ mainIngredient __object__ Coconut milk']
Text: The main ingredient of Binignit is coconut milk.
Subject: Binignit
Predicate: mainIngredient
Object: Coconut milk

Triple: ['__subject__ Binignit __predicate__ mainIngredient __object__ Sago']
Text: One of the main ingredients in Binignit is sago.
Subject: Binignit
Predicate: mainIngredient
Object: Sago

Triple: ['__subject__ Binignit __predicate__ mainIngredient __object__ Sago']
Text: Sago is the main ingredient in binignit.
Subject: Binignit
Predicate: mainIngredient
Object: Sago

Triple: ['__subject__ Binignit __predicate__ mainIngredient __object__ Sago']
Text: Sago is the main ingredient of binignit.
Subject: Binignit
Predicate: mainIngredient
Object: Sago

Triple: ['__subject__ Binignit __predicate__ mainIngredient __object__ Sweet potato']
Text: The main ingredients of binignit are sweet potatoes.
Subject: Binignit
Predicate: mainIngredient
Object: Sweet potato

Triple: ['__subject__ Binignit __predicate__ mainIngredient __object__ Sweet potato']
Text: One of the main ingredients of Binignit is the sweet potato.
Subject: Binignit
Predicate: mainIngredient
Object: Sweet potato

Triple: ['__subject__ Binignit __predicate__ mainIngredient __object__ Taro']
Text: Taro is a main ingredient of Binignit.
Subject: Binignit
Predicate: mainIngredient
Object: Taro

Triple: ['__subject__ Binignit __predicate__ mainIngredient __object__ Taro']
Text: One of the main ingredients of Binignit is Taro.
Subject: Binignit
Predicate: mainIngredient
Object: Taro

Triple: ['__subject__ Binignit __predicate__ mainIngredient __object__ Taro']
Text: Taro is a main ingredient in Binignit.
Subject: Binignit
Predicate: mainIngredient
Object: Taro

Triple: ['__subject__ Binignit __predicate__ region __object__ Mindanao']
Text: Binignit comes from the region Mindanao.
Subject: Binignit
Predicate: region
Object: Mindanao

Triple: ['__subject__ Bionico __predicate__ country __object__ Mexico']
Text: Bionico is a food found in Mexico.
Subject: Bionico
Predicate: country
Object: Mexico

Triple: ['__subject__ Bionico __predicate__ course __object__ Dessert']
Text: Bionico is served at the dessert course.
Subject: Bionico
Predicate: course
Object: Dessert

Triple: ['__subject__ Bionico __predicate__ course __object__ Dessert']
Text: Bionico is a dish served for dessert.
Subject: Bionico
Predicate: course
Object: Dessert

Triple: ['__subject__ Bionico __predicate__ course __object__ Dessert']
Text: Bionico is a dessert.
Subject: Bionico
Predicate: course
Object: Dessert

Triple: ['__subject__ Bionico __predicate__ dishVariation __object__ Honey']
Text: Honey can be used as a variation in the dish Bionico.
Subject: Bionico
Predicate: dishVariation
Object: Honey

Triple: ['__subject__ Bionico __predicate__ dishVariation __object__ Honey']
Text: Honey can be added to bionico.
Subject: Bionico
Predicate: dishVariation
Object: Honey

Triple: ['__subject__ Bionico __predicate__ ingredient __object__ Condensed milk']
Text: Condensed milk is an ingredient of Bionico.
Subject: Bionico
Predicate: ingredient
Object: Condensed milk

Triple: ['__subject__ Bionico __predicate__ ingredient __object__ Condensed milk']
Text: Condensed milk is an ingredient in Bionico.
Subject: Bionico
Predicate: ingredient
Object: Condensed milk

Triple: ['__subject__ Bionico __predicate__ ingredient __object__ Condensed milk']
Text: Condensed milk is used in bionico.
Subject: Bionico
Predicate: ingredient
Object: Condensed milk

Triple: ['__subject__ Bionico __predicate__ ingredient __object__ Granola']
Text: Bionico requires granola as one of its ingredients.
Subject: Bionico
Predicate: ingredient
Object: Granola

Triple: ['__subject__ Bionico __predicate__ ingredient __object__ Granola']
Text: Granola is an ingredient of Bionico.
Subject: Bionico
Predicate: ingredient
Object: Granola

Triple: ['__subject__ Bionico __predicate__ ingredient __object__ Raisin']
Text: Bionico contains raisins.
Subject: Bionico
Predicate: ingredient
Object: Raisin

Triple: ['__subject__ Bionico __predicate__ ingredient __object__ Sour cream']
Text: Sour cream is an ingredient of Bionico.
Subject: Bionico
Predicate: ingredient
Object: Sour cream

Triple: ['__subject__ Bionico __predicate__ ingredient __object__ Sour cream']
Text: Sour cream is an ingredient used in the preparation of Bionico.
Subject: Bionico
Predicate: ingredient
Object: Sour cream

Triple: ['__subject__ Bionico __predicate__ ingredient __object__ Sour cream']
Text: Sour cream is an ingredient in Bionico.
Subject: Bionico
Predicate: ingredient
Object: Sour cream

Triple: ['__subject__ Bionico __predicate__ mainIngredient __object__ Chopped Fruits, Sour Cream, Condensed Milk, Granola, Shredded Coconut, Raisins']
Text: Sour cream, chopped fruits, condensed milk, granola, raisins and shredded coconut are the main ingredients in Bionico.
Subject: Bionico
Predicate: mainIngredient
Object: Chopped Fruits, Sour Cream, Condensed Milk, Granola, Shredded Coconut, Raisins

Triple: ['__subject__ Bionico __predicate__ mainIngredient __object__ Chopped Fruits, Sour Cream, Condensed Milk, Granola, Shredded Coconut, Raisins']
Text: The main ingredients of Bionico are chopped fruits, sour cream, condensed milk, granola, shredded coconut and raisins.
Subject: Bionico
Predicate: mainIngredient
Object: Chopped Fruits, Sour Cream, Condensed Milk, Granola, Shredded Coconut, Raisins

Triple: ['__subject__ Bionico __predicate__ mainIngredient __object__ Chopped Fruits, Sour Cream, Condensed Milk, Granola, Shredded Coconut, Raisins']
Text: Chopped Fruits, sour cream, condensed milk, granola, shredded coconut and raisins are the main ingredients in bionico.
Subject: Bionico
Predicate: mainIngredient
Object: Chopped Fruits, Sour Cream, Condensed Milk, Granola, Shredded Coconut, Raisins

Triple: ['__subject__ Bionico __predicate__ region __object__ Guadalajara']
Text: Bionico can be found in Guadalajara.
Subject: Bionico
Predicate: region
Object: Guadalajara

Triple: ['__subject__ Bionico __predicate__ region __object__ Guadalajara']
Text: Bionico is from the Guadalajara region.
Subject: Bionico
Predicate: region
Object: Guadalajara

Triple: ['__subject__ Catalonia __predicate__ leader __object__ Carles Puigdemont']
Text: The leader of Catalonia is Carles Puigdemont.
Subject: Catalonia
Predicate: leader
Object: Carles Puigdemont

Triple: ['__subject__ Catalonia __predicate__ leader __object__ Carles Puigdemont']
Text: Carles Puigdemont is a leader in Catalonia.
Subject: Catalonia
Predicate: leader
Object: Carles Puigdemont

Triple: ['__subject__ Catalonia __predicate__ leader __object__ Carles Puigdemont']
Text: Carles Puigdemont is the leader of Catalonia.
Subject: Catalonia
Predicate: leader
Object: Carles Puigdemont

Triple: ['__subject__ Catalonia __predicate__ leader __object__ Parliament of Catalonia']
Text: Catalonia is led by the Parliament of Catalonia.
Subject: Catalonia
Predicate: leader
Object: Parliament of Catalonia

Triple: ['__subject__ Catalonia __predicate__ leader __object__ Parliament of Catalonia']
Text: The leaders of Catalonia are the Parliament of Catalonia.
Subject: Catalonia
Predicate: leader
Object: Parliament of Catalonia

Triple: ['__subject__ Celery __predicate__ family __object__ Apiaceae']
Text: Celery is in the family of Apiaceae.
Subject: Celery
Predicate: family
Object: Apiaceae

Triple: ['__subject__ Celery __predicate__ family __object__ Apiaceae']
Text: Celery is a member of the family Apiaceae.
Subject: Celery
Predicate: family
Object: Apiaceae

Triple: ['__subject__ Celery __predicate__ genus __object__ Apium']
Text: Celery is a member of the genus Apium.
Subject: Celery
Predicate: genus
Object: Apium

Triple: ['__subject__ Celery __predicate__ genus __object__ Apium']
Text: Celery is of the Apium genus.
Subject: Celery
Predicate: genus
Object: Apium

Triple: ['__subject__ Celery __predicate__ genus __object__ Apium']
Text: Celery is from the genus apium.
Subject: Celery
Predicate: genus
Object: Apium

Triple: ['__subject__ Chicharrón __predicate__ country __object__ Spain']
Text: Chicharrón is a dish traditional in Spain.
Subject: Chicharrón
Predicate: country
Object: Spain

Triple: ['__subject__ Chicharrón __predicate__ country __object__ Spain']
Text: Chicharrón is a dish found in the country of Spain.
Subject: Chicharrón
Predicate: country
Object: Spain

Triple: ['__subject__ Chicharrón __predicate__ region __object__ Andalusia']
Text: Chicharrón is found in the Andalusia region.
Subject: Chicharrón
Predicate: region
Object: Andalusia

Triple: ['__subject__ Chicharrón __predicate__ region __object__ Andalusia']
Text: Chicharron is from the Andalusia region.
Subject: Chicharrón
Predicate: region
Object: Andalusia

Triple: ['__subject__ China __predicate__ language __object__ Standard Chinese']
Text: Standard Chinese is the language of China.
Subject: China
Predicate: language
Object: Standard Chinese

Triple: ['__subject__ China __predicate__ language __object__ Standard Chinese']
Text: Standard Chinese is a language in China.
Subject: China
Predicate: language
Object: Standard Chinese

Triple: ['__subject__ Derbyshire Dales __predicate__ isPartOf __object__ Derbyshire']
Text: Derbyshire Dales is found in the County of Derbyshire.
Subject: Derbyshire Dales
Predicate: isPartOf
Object: Derbyshire

Triple: ['__subject__ Derbyshire Dales __predicate__ isPartOf __object__ Derbyshire']
Text: Derbyshire Dales is part of Derbyshire.
Subject: Derbyshire Dales
Predicate: isPartOf
Object: Derbyshire

Triple: ['__subject__ Derbyshire Dales __predicate__ isPartOf __object__ Derbyshire']
Text: The Derbyshire Dales is part of Derbyshire.
Subject: Derbyshire Dales
Predicate: isPartOf
Object: Derbyshire

Triple: ['__subject__ Dessert __predicate__ dishVariation __object__ Cookie']
Text: Cookie is a type of dessert.
Subject: Dessert
Predicate: dishVariation
Object: Cookie

Triple: ['__subject__ Dessert __predicate__ dishVariation __object__ Cookie']
Text: A cookie is a dessert.
Subject: Dessert
Predicate: dishVariation
Object: Cookie

Triple: ['__subject__ Dessert __predicate__ dishVariation __object__ Sandesh (confectionery)']
Text: Sandesh (confectionery) is a dish that can be served as a dessert.
Subject: Dessert
Predicate: dishVariation
Object: Sandesh (confectionery)

Triple: ['__subject__ Dessert __predicate__ dishVariation __object__ Sandesh (confectionery)']
Text: Sandesh is a nice confectionery dessert.
Subject: Dessert
Predicate: dishVariation
Object: Sandesh (confectionery)

Triple: ['__subject__ Dessert __predicate__ dishVariation __object__ Sandesh (confectionery)']
Text: Sandesh is a dessert.
Subject: Dessert
Predicate: dishVariation
Object: Sandesh (confectionery)

Triple: ['__subject__ France __predicate__ currency __object__ Euro']
Text: In France the currency is the Euro.
Subject: France
Predicate: currency
Object: Euro

Triple: ['__subject__ France __predicate__ currency __object__ Euro']
Text: The Euro is the currency in France.
Subject: France
Predicate: currency
Object: Euro

Triple: ['__subject__ France __predicate__ currency __object__ Euro']
Text: The currency of France is the Euro.
Subject: France
Predicate: currency
Object: Euro

Triple: ['__subject__ France __predicate__ language __object__ French language']
Text: The French language is spoken in France.
Subject: France
Predicate: language
Object: French language

Triple: ['__subject__ France __predicate__ language __object__ French language']
Text: French is the national language of France.
Subject: France
Predicate: language
Object: French language

Triple: ['__subject__ France __predicate__ language __object__ French language']
Text: French is a language spoken in France.
Subject: France
Predicate: language
Object: French language

Triple: ['__subject__ France __predicate__ leader __object__ Claude Bartolone']
Text: Claude Bartolone is a leader of France.
Subject: France
Predicate: leader
Object: Claude Bartolone

Triple: ['__subject__ France __predicate__ leader __object__ Claude Bartolone']
Text: Claude Bartolone is France's leader.
Subject: France
Predicate: leader
Object: Claude Bartolone

Triple: ['__subject__ France __predicate__ leader __object__ Claude Bartolone']
Text: Claude Bartolone leads France.
Subject: France
Predicate: leader
Object: Claude Bartolone

Triple: ['__subject__ France __predicate__ leader __object__ François Hollande']
Text: The leader of France is Francois Hollande.
Subject: France
Predicate: leader
Object: François Hollande

Triple: ['__subject__ France __predicate__ leader __object__ François Hollande']
Text: François Hollande is the leader of France.
Subject: France
Predicate: leader
Object: François Hollande

Triple: ['__subject__ France __predicate__ leader __object__ Gérard Larcher']
Text: The leader of France is Gérard Larcher.
Subject: France
Predicate: leader
Object: Gérard Larcher

Triple: ['__subject__ France __predicate__ leader __object__ Gérard Larcher']
Text: Gerard Larcher is the leader of France.
Subject: France
Predicate: leader
Object: Gérard Larcher

Triple: ['__subject__ France __predicate__ leader __object__ Manuel Valls']
Text: The leader of France is Manuel Valls.
Subject: France
Predicate: leader
Object: Manuel Valls

Triple: ['__subject__ France __predicate__ leader __object__ Manuel Valls']
Text: Manuel Valls is a leader in France.
Subject: France
Predicate: leader
Object: Manuel Valls

Triple: ['__subject__ France __predicate__ leader __object__ Manuel Valls']
Text: Manuel Valls is the leader of France.
Subject: France
Predicate: leader
Object: Manuel Valls

Triple: ['__subject__ Fried chicken __predicate__ mainIngredient __object__ Chicken']
Text: A main ingredient of fried chicken is chicken.
Subject: Fried chicken
Predicate: mainIngredient
Object: Chicken

Triple: ['__subject__ Fried chicken __predicate__ mainIngredient __object__ Chicken']
Text: The main ingredient of fried chicken is chicken.
Subject: Fried chicken
Predicate: mainIngredient
Object: Chicken

Triple: ['__subject__ Guadalajara __predicate__ country __object__ Mexico']
Text: Guadalajara is in the country of Mexico.
Subject: Guadalajara
Predicate: country
Object: Mexico

Triple: ['__subject__ Guadalajara __predicate__ country __object__ Mexico']
Text: Guadalajara is located in Mexico.
Subject: Guadalajara
Predicate: country
Object: Mexico

Triple: ['__subject__ Hong Kong __predicate__ language __object__ Chinese language']
Text: In Hong Kong, the spoken language is Chinese.
Subject: Hong Kong
Predicate: language
Object: Chinese language

Triple: ['__subject__ Hong Kong __predicate__ language __object__ Chinese language']
Text: Chinese is spoken in Hong Kong.
Subject: Hong Kong
Predicate: language
Object: Chinese language

Triple: ['__subject__ Hong Kong __predicate__ language __object__ Chinese language']
Text: Chinese is a language of Hong Kong.
Subject: Hong Kong
Predicate: language
Object: Chinese language

Triple: ['__subject__ Hong Kong __predicate__ leader __object__ Carrie Lam (politician)']
Text: Carrie Lam is a political leader in Hong Kong.
Subject: Hong Kong
Predicate: leader
Object: Carrie Lam (politician)

Triple: ['__subject__ Hong Kong __predicate__ leader __object__ Carrie Lam (politician)']
Text: Politician Carrie Lam is the leader of Hong Kong.
Subject: Hong Kong
Predicate: leader
Object: Carrie Lam (politician)

Triple: ['__subject__ Hong Kong __predicate__ leader __object__ Carrie Lam (politician)']
Text: Carrie Lam is the leader of Hong Kong.
Subject: Hong Kong
Predicate: leader
Object: Carrie Lam (politician)

Triple: ['__subject__ India __predicate__ demonym __object__ Indian people']
Text: Indian people are from India.
Subject: India
Predicate: demonym
Object: Indian people

Triple: ['__subject__ India __predicate__ demonym __object__ Indian people']
Text: Indians is the name given to people from India.
Subject: India
Predicate: demonym
Object: Indian people

Triple: ['__subject__ India __predicate__ leader __object__ Narendra Modi']
Text: Narendra Modi is a leader in India.
Subject: India
Predicate: leader
Object: Narendra Modi

Triple: ['__subject__ India __predicate__ leader __object__ Narendra Modi']
Text: Narendra Modi is the name of the leader of India.
Subject: India
Predicate: leader
Object: Narendra Modi

Triple: ['__subject__ India __predicate__ leader __object__ Narendra Modi']
Text: Narendra Modi is the leader of India.
Subject: India
Predicate: leader
Object: Narendra Modi

Triple: ['__subject__ India __predicate__ leader __object__ T. S. Thakur']
Text: T. S. Thakur is India's leader.
Subject: India
Predicate: leader
Object: T. S. Thakur

Triple: ['__subject__ India __predicate__ leader __object__ T. S. Thakur']
Text: The leader of India is called T. S. Thakur.
Subject: India
Predicate: leader
Object: T. S. Thakur

Triple: ['__subject__ India __predicate__ leader __object__ T. S. Thakur']
Text: T.S. Thakur is the leader of India.
Subject: India
Predicate: leader
Object: T. S. Thakur

Triple: ['__subject__ Indonesia __predicate__ capital __object__ Jakarta']
Text: The capital of Indonesia is Jakarta.
Subject: Indonesia
Predicate: capital
Object: Jakarta

Triple: ['__subject__ Indonesia __predicate__ capital __object__ Jakarta']
Text: Jakarta is the capital of Indonesia.
Subject: Indonesia
Predicate: capital
Object: Jakarta

Triple: ['__subject__ Indonesia __predicate__ currency __object__ Indonesian rupiah']
Text: In Indonesia the currency is the Indonesian rupiah.
Subject: Indonesia
Predicate: currency
Object: Indonesian rupiah

Triple: ['__subject__ Indonesia __predicate__ currency __object__ Indonesian rupiah']
Text: Money in Indonesia is called the Indonesian rupiah.
Subject: Indonesia
Predicate: currency
Object: Indonesian rupiah

Triple: ['__subject__ Indonesia __predicate__ currency __object__ Indonesian rupiah']
Text: Indonesia's currency is the Indonesian rupiah.
Subject: Indonesia
Predicate: currency
Object: Indonesian rupiah

Triple: ['__subject__ Indonesia __predicate__ leader __object__ Joko Widodo']
Text: Joko Widodo is the leader of Indonesia.
Subject: Indonesia
Predicate: leader
Object: Joko Widodo

Triple: ['__subject__ Indonesia __predicate__ leader __object__ Joko Widodo']
Text: Joko Widodo is the leader in Indonesia.
Subject: Indonesia
Predicate: leader
Object: Joko Widodo

Triple: ['__subject__ Indonesia __predicate__ leader __object__ Joko Widodo']
Text: Indonesia's leader's name is Joko Widodo.
Subject: Indonesia
Predicate: leader
Object: Joko Widodo

Triple: ['__subject__ Italy __predicate__ capital __object__ Rome']
Text: Rome is the capital of Italy.
Subject: Italy
Predicate: capital
Object: Rome

Triple: ['__subject__ Italy __predicate__ capital __object__ Rome']
Text: The capital of Italy is Rome.
Subject: Italy
Predicate: capital
Object: Rome

Triple: ['__subject__ Italy __predicate__ language __object__ Italian language']
Text: The spoken language in Italy is Italian.
Subject: Italy
Predicate: language
Object: Italian language

Triple: ['__subject__ Italy __predicate__ language __object__ Italian language']
Text: Italian is the language spoken in Italy.
Subject: Italy
Predicate: language
Object: Italian language

Triple: ['__subject__ Italy __predicate__ language __object__ Italian language']
Text: The language of Italy is Italian.
Subject: Italy
Predicate: language
Object: Italian language

Triple: ['__subject__ Italy __predicate__ leader __object__ Laura Boldrini']
Text: The leader of Italy is Laura Boldrini.
Subject: Italy
Predicate: leader
Object: Laura Boldrini

Triple: ['__subject__ Italy __predicate__ leader __object__ Laura Boldrini']
Text: Laura Boldrini is a key leader in Italy.
Subject: Italy
Predicate: leader
Object: Laura Boldrini

Triple: ['__subject__ Italy __predicate__ leader __object__ Laura Boldrini']
Text: The leader in Italy is Laura Boldrini.
Subject: Italy
Predicate: leader
Object: Laura Boldrini

Triple: ['__subject__ Italy __predicate__ leader __object__ Matteo Renzi']
Text: Matteo Renzi is a leader from Italy.
Subject: Italy
Predicate: leader
Object: Matteo Renzi

Triple: ['__subject__ Italy __predicate__ leader __object__ Matteo Renzi']
Text: The leader of Italy is Matteo Renzi.
Subject: Italy
Predicate: leader
Object: Matteo Renzi

Triple: ['__subject__ Italy __predicate__ leader __object__ Pietro Grasso']
Text: Pietro Grasso is the leader of Italy.
Subject: Italy
Predicate: leader
Object: Pietro Grasso

Triple: ['__subject__ Italy __predicate__ leader __object__ Pietro Grasso']
Text: Pietro Grasso leads Italy.
Subject: Italy
Predicate: leader
Object: Pietro Grasso

Triple: ['__subject__ Italy __predicate__ leader __object__ Sergio Mattarella']
Text: Sergio Mattarella is a leader in Italy.
Subject: Italy
Predicate: leader
Object: Sergio Mattarella

Triple: ['__subject__ Italy __predicate__ leader __object__ Sergio Mattarella']
Text: Sergio Mattarella is the leader of Italy.
Subject: Italy
Predicate: leader
Object: Sergio Mattarella

Triple: ['__subject__ Jalisco __predicate__ leader __object__ Jesús Casillas Romero']
Text: The leader of Jalisco is Jesús Casillas Romero.
Subject: Jalisco
Predicate: leader
Object: Jesús Casillas Romero

Triple: ['__subject__ Jalisco __predicate__ leader __object__ Jesús Casillas Romero']
Text: Jesús Casillas Romero is the name of Jalisco's leader.
Subject: Jalisco
Predicate: leader
Object: Jesús Casillas Romero

Triple: ['__subject__ Jalisco __predicate__ leader __object__ Jesús Casillas Romero']
Text: The name of the leader in Jalisco is Jesus Casillas Romero.
Subject: Jalisco
Predicate: leader
Object: Jesús Casillas Romero

Triple: ['__subject__ Java __predicate__ ethnicGroup __object__ Javanese people']
Text: The Javanese people are an ethnic group of Java.
Subject: Java
Predicate: ethnicGroup
Object: Javanese people

Triple: ['__subject__ Java __predicate__ ethnicGroup __object__ Javanese people']
Text: The Javanese people are an ethnic group in Java.
Subject: Java
Predicate: ethnicGroup
Object: Javanese people

Triple: ['__subject__ Karnataka __predicate__ leader __object__ Vajubhai Vala']
Text: The leader of Karnataka is Vajubhai Vala.
Subject: Karnataka
Predicate: leader
Object: Vajubhai Vala

Triple: ['__subject__ Karnataka __predicate__ leader __object__ Vajubhai Vala']
Text: Vajubhai Vala is a leader of Karnataka.
Subject: Karnataka
Predicate: leader
Object: Vajubhai Vala

Triple: ['__subject__ Karnataka __predicate__ leader __object__ Vajubhai Vala']
Text: Vajubhai Vala is the leader of Karnataka.
Subject: Karnataka
Predicate: leader
Object: Vajubhai Vala

Triple: ['__subject__ Lemon __predicate__ family __object__ Rutaceae']
Text: The lemon belongs to the rutaceae family.
Subject: Lemon
Predicate: family
Object: Rutaceae

Triple: ['__subject__ Lemon __predicate__ family __object__ Rutaceae']
Text: Lemon is a member of the family Rutaceae.
Subject: Lemon
Predicate: family
Object: Rutaceae

Triple: ['__subject__ Lemon __predicate__ genus __object__ Citrus']
Text: Lemon is part of genus Citrus.
Subject: Lemon
Predicate: genus
Object: Citrus

Triple: ['__subject__ Lemon __predicate__ genus __object__ Citrus']
Text: Lemon is from the genus citrus.
Subject: Lemon
Predicate: genus
Object: Citrus

Triple: ['__subject__ Lemon __predicate__ order __object__ Sapindales']
Text: A lemon is included in the order of Sapindales.
Subject: Lemon
Predicate: order
Object: Sapindales

Triple: ['__subject__ Lemon __predicate__ order __object__ Sapindales']
Text: Lemon comes from the plant order Sapindales.
Subject: Lemon
Predicate: order
Object: Sapindales

Triple: ['__subject__ Lemon __predicate__ order __object__ Sapindales']
Text: Lemons are classified in the order sapindales.
Subject: Lemon
Predicate: order
Object: Sapindales

Triple: ['__subject__ Malaysia __predicate__ capital __object__ Kuala Lumpur']
Text: The capital of Malaysia is Kuala Lumpur.
Subject: Malaysia
Predicate: capital
Object: Kuala Lumpur

Triple: ['__subject__ Malaysia __predicate__ capital __object__ Kuala Lumpur']
Text: Kuala Lumpur is the Malaysian capital.
Subject: Malaysia
Predicate: capital
Object: Kuala Lumpur

Triple: ['__subject__ Malaysia __predicate__ capital __object__ Kuala Lumpur']
Text: Kuala Lumpur is the capital of Malaysia.
Subject: Malaysia
Predicate: capital
Object: Kuala Lumpur

Triple: ['__subject__ Malaysia __predicate__ capital __object__ Putrajaya']
Text: The capital of Malaysia is Putrajaya.
Subject: Malaysia
Predicate: capital
Object: Putrajaya

Triple: ['__subject__ Malaysia __predicate__ capital __object__ Putrajaya']
Text: Putrajaya is the capital of Malaysia.
Subject: Malaysia
Predicate: capital
Object: Putrajaya

Triple: ['__subject__ Malaysia __predicate__ ethnicGroup __object__ Malaysian Chinese']
Text: The Malaysian chinese are an ethnic group from Malaysia.
Subject: Malaysia
Predicate: ethnicGroup
Object: Malaysian Chinese

Triple: ['__subject__ Malaysia __predicate__ ethnicGroup __object__ Malaysian Chinese']
Text: Malaysian Chinese is an ethnic group from Malaysia.
Subject: Malaysia
Predicate: ethnicGroup
Object: Malaysian Chinese

Triple: ['__subject__ Malaysia __predicate__ ethnicGroup __object__ Malaysian Indian']
Text: Malaysian Indian is one of the ethnic groups on Malaysia.
Subject: Malaysia
Predicate: ethnicGroup
Object: Malaysian Indian

Triple: ['__subject__ Malaysia __predicate__ ethnicGroup __object__ Malaysian Indian']
Text: One of the ethnic groups of Malaysia is Malaysian Indian.
Subject: Malaysia
Predicate: ethnicGroup
Object: Malaysian Indian

Triple: ['__subject__ Malaysia __predicate__ leader __object__ Abdul Halim of Kedah']
Text: The leader of Malaysia is Abdul Halim of Kedah.
Subject: Malaysia
Predicate: leader
Object: Abdul Halim of Kedah

Triple: ['__subject__ Malaysia __predicate__ leader __object__ Abdul Halim of Kedah']
Text: Abdul Halim of Kedah is the leader of Malaysia.
Subject: Malaysia
Predicate: leader
Object: Abdul Halim of Kedah

Triple: ['__subject__ Malaysia __predicate__ leader __object__ Abu Zahar Ujang']
Text: Abu Zahar Ujang is a leader in Malaysia.
Subject: Malaysia
Predicate: leader
Object: Abu Zahar Ujang

Triple: ['__subject__ Malaysia __predicate__ leader __object__ Abu Zahar Ujang']
Text: Abu Zahar Ujang is the name of the leader of Malaysia.
Subject: Malaysia
Predicate: leader
Object: Abu Zahar Ujang

Triple: ['__subject__ Malaysia __predicate__ leader __object__ Abu Zahar Ujang']
Text: Abu Zahar Ujang is the leader of Malaysia.
Subject: Malaysia
Predicate: leader
Object: Abu Zahar Ujang

Triple: ['__subject__ Malaysia __predicate__ leader __object__ Arifin Zakaria']
Text: Arifin Zakaria is the name of the leader of Malaysia.
Subject: Malaysia
Predicate: leader
Object: Arifin Zakaria

Triple: ['__subject__ Malaysia __predicate__ leader __object__ Arifin Zakaria']
Text: Arifin Zakaria is the leader of Malaysia.
Subject: Malaysia
Predicate: leader
Object: Arifin Zakaria

Triple: ['__subject__ Malaysia __predicate__ leader __object__ Najib Razak']
Text: Najib Razak is the leader of Malaysia.
Subject: Malaysia
Predicate: leader
Object: Najib Razak

Triple: ['__subject__ Malaysia __predicate__ leader __object__ Najib Razak']
Text: The name of the leader of Malaysia is Najib Razak.
Subject: Malaysia
Predicate: leader
Object: Najib Razak

Triple: ['__subject__ Mexico __predicate__ currency __object__ Mexican peso']
Text: The currency in Mexico is the peso.
Subject: Mexico
Predicate: currency
Object: Mexican peso

Triple: ['__subject__ Mexico __predicate__ currency __object__ Mexican peso']
Text: The currency in Mexico is the Mexican peso.
Subject: Mexico
Predicate: currency
Object: Mexican peso

Triple: ['__subject__ Mexico __predicate__ currency __object__ Mexican peso']
Text: The currency of Mexico is the peso.
Subject: Mexico
Predicate: currency
Object: Mexican peso

Triple: ['__subject__ Mexico __predicate__ language __object__ Mexican Spanish']
Text: In Mexico one of the languages spoken is Mexican Spanish.
Subject: Mexico
Predicate: language
Object: Mexican Spanish

Triple: ['__subject__ Mexico __predicate__ language __object__ Mexican Spanish']
Text: Mexican Spanish is the language spoken in Mexico.
Subject: Mexico
Predicate: language
Object: Mexican Spanish

Triple: ['__subject__ Mexico __predicate__ language __object__ Mexican Spanish']
Text: Mexican Spanish is spoken in Mexico.
Subject: Mexico
Predicate: language
Object: Mexican Spanish

Triple: ['__subject__ Mexico __predicate__ leader __object__ Enrique Peña Nieto']
Text: The leader of Mexico is Enrique Peña Nieto.
Subject: Mexico
Predicate: leader
Object: Enrique Peña Nieto

Triple: ['__subject__ Mexico __predicate__ leader __object__ Enrique Peña Nieto']
Text: Enrique Pena Nieto is a leader in Mexico.
Subject: Mexico
Predicate: leader
Object: Enrique Peña Nieto

Triple: ['__subject__ Mexico __predicate__ leader __object__ Enrique Peña Nieto']
Text: Enrique Pena Nieto is the leader of Mexico.
Subject: Mexico
Predicate: leader
Object: Enrique Peña Nieto

Triple: ['__subject__ Mondelez International __predicate__ foundationPlace __object__ Chicago']
Text: Mondelez International was founded in Chicago.
Subject: Mondelez International
Predicate: foundationPlace
Object: Chicago

Triple: ['__subject__ New York __predicate__ language __object__ Arabic']
Text: Arabic is one of the languages that is spoken in New York.
Subject: New York
Predicate: language
Object: Arabic

Triple: ['__subject__ New York __predicate__ language __object__ Arabic']
Text: Arabic is one language spoken in New York.
Subject: New York
Predicate: language
Object: Arabic

Triple: ['__subject__ New York __predicate__ language __object__ French language']
Text: The French Language can be heard in New York.
Subject: New York
Predicate: language
Object: French language

Triple: ['__subject__ New York __predicate__ language __object__ French language']
Text: French is a language in New York.
Subject: New York
Predicate: language
Object: French language

Triple: ['__subject__ Pakora __predicate__ dishVariation __object__ Cauliflower']
Text: As a dish variation on a pakora, cauliflower can be used.
Subject: Pakora
Predicate: dishVariation
Object: Cauliflower

Triple: ['__subject__ Pakora __predicate__ dishVariation __object__ Paneer']
Text: Pakora can be varied by using paneer.
Subject: Pakora
Predicate: dishVariation
Object: Paneer

Triple: ['__subject__ Philippines __predicate__ ethnicGroup __object__ Chinese Filipino']
Text: The Chinese Filipino is an ethnic group in the Philippines.
Subject: Philippines
Predicate: ethnicGroup
Object: Chinese Filipino

Triple: ['__subject__ Philippines __predicate__ ethnicGroup __object__ Chinese Filipino']
Text: Chinese Filipino people are from the Philippines.
Subject: Philippines
Predicate: ethnicGroup
Object: Chinese Filipino

Triple: ['__subject__ Philippines __predicate__ ethnicGroup __object__ Igorot people']
Text: The Igorot people are an ethnic group in the Philippines.
Subject: Philippines
Predicate: ethnicGroup
Object: Igorot people

Triple: ['__subject__ Philippines __predicate__ ethnicGroup __object__ Igorot people']
Text: Igorot people are part of one of the ethnic groups in the Philippines.
Subject: Philippines
Predicate: ethnicGroup
Object: Igorot people

Triple: ['__subject__ Philippines __predicate__ ethnicGroup __object__ Igorot people']
Text: One of the ethnic groups of the Philippines is the Igorot people.
Subject: Philippines
Predicate: ethnicGroup
Object: Igorot people

Triple: ['__subject__ Philippines __predicate__ ethnicGroup __object__ Ilocano people']
Text: Ilocano people are an ethnic group from the Philippines.
Subject: Philippines
Predicate: ethnicGroup
Object: Ilocano people

Triple: ['__subject__ Philippines __predicate__ ethnicGroup __object__ Ilocano people']
Text: The Ilocano people are an ethnic group from the Philippines.
Subject: Philippines
Predicate: ethnicGroup
Object: Ilocano people

Triple: ['__subject__ Philippines __predicate__ ethnicGroup __object__ Moro people']
Text: The Moro people are an ethnic group in the Philippines.
Subject: Philippines
Predicate: ethnicGroup
Object: Moro people

Triple: ['__subject__ Philippines __predicate__ ethnicGroup __object__ Moro people']
Text: Moro people is an ethnic group in the Philippines.
Subject: Philippines
Predicate: ethnicGroup
Object: Moro people

Triple: ['__subject__ Philippines __predicate__ ethnicGroup __object__ Moro people']
Text: People of Moro ethnicity are from the Philippines.
Subject: Philippines
Predicate: ethnicGroup
Object: Moro people

Triple: ['__subject__ Philippines __predicate__ ethnicGroup __object__ Zamboangans']
Text: Zamboangans are a group in the Philippines.
Subject: Philippines
Predicate: ethnicGroup
Object: Zamboangans

Triple: ['__subject__ Philippines __predicate__ ethnicGroup __object__ Zamboangans']
Text: One of the ethnic groups of the Philippines is the Zamboangans.
Subject: Philippines
Predicate: ethnicGroup
Object: Zamboangans

Triple: ['__subject__ Philippines __predicate__ language __object__ Philippine English']
Text: Philippine English is the language spoken in the Philippines.
Subject: Philippines
Predicate: language
Object: Philippine English

Triple: ['__subject__ Philippines __predicate__ language __object__ Philippine English']
Text: Philippine English is the language of the Philippines.
Subject: Philippines
Predicate: language
Object: Philippine English

Triple: ['__subject__ Philippines __predicate__ language __object__ Philippine Spanish']
Text: In the Philippines, the spoken language is Philippine Spanish.
Subject: Philippines
Predicate: language
Object: Philippine Spanish

Triple: ['__subject__ Philippines __predicate__ language __object__ Philippine Spanish']
Text: The language used in the Philippines is Philippine Spanish.
Subject: Philippines
Predicate: language
Object: Philippine Spanish

Triple: ['__subject__ Philippines __predicate__ language __object__ Philippine Spanish']
Text: The language spoken in the Philippines is Philippine Spanish.
Subject: Philippines
Predicate: language
Object: Philippine Spanish

Triple: ['__subject__ Philippines __predicate__ officialLanguage __object__ Philippine English']
Text: The official language in the Philippines is Philippine English.
Subject: Philippines
Predicate: officialLanguage
Object: Philippine English

Triple: ['__subject__ Philippines __predicate__ officialLanguage __object__ Philippine English']
Text: Philippine English is the official language of the Philippines.
Subject: Philippines
Predicate: officialLanguage
Object: Philippine English

Triple: ['__subject__ Shumai __predicate__ dishVariation __object__ Siomay']
Text: Siomay is a variation on shumai.
Subject: Shumai
Predicate: dishVariation
Object: Siomay

Triple: ['__subject__ Shumai __predicate__ dishVariation __object__ Siomay']
Text: A variation of Shumai is Siomay.
Subject: Shumai
Predicate: dishVariation
Object: Siomay

Triple: ['__subject__ Shumai __predicate__ dishVariation __object__ Siomay']
Text: Shumai is a variation of Siomay.
Subject: Shumai
Predicate: dishVariation
Object: Siomay

Triple: ['__subject__ Shumai __predicate__ ingredient __object__ Shiitake']
Text: Shiitake is an ingredient of Shumai.
Subject: Shumai
Predicate: ingredient
Object: Shiitake

Triple: ['__subject__ Singapore __predicate__ currency __object__ Singapore dollar']
Text: The currency of Singapore is the Singapore dollar.
Subject: Singapore
Predicate: currency
Object: Singapore dollar

Triple: ['__subject__ Singapore __predicate__ currency __object__ Singapore dollar']
Text: Singapore dollar is the currency in Singapore.
Subject: Singapore
Predicate: currency
Object: Singapore dollar

Triple: ['__subject__ Singapore __predicate__ language __object__ English language']
Text: The English language is spoken in Singapore.
Subject: Singapore
Predicate: language
Object: English language

Triple: ['__subject__ Singapore __predicate__ language __object__ English language']
Text: One of the languages spoken in Singapore is English.
Subject: Singapore
Predicate: language
Object: English language

Triple: ['__subject__ Singapore __predicate__ language __object__ English language']
Text: English is spoken in Singapore.
Subject: Singapore
Predicate: language
Object: English language

Triple: ['__subject__ Singapore __predicate__ language __object__ Standard Chinese']
Text: Standard Chinese is a language spoken in Singapore.
Subject: Singapore
Predicate: language
Object: Standard Chinese

Triple: ['__subject__ Singapore __predicate__ language __object__ Standard Chinese']
Text: Standard Chinese is spoken in Singapore.
Subject: Singapore
Predicate: language
Object: Standard Chinese

Triple: ['__subject__ Singapore __predicate__ leader __object__ Halimah Yacob']
Text: Halimah Yacob is a leader of Singapore.
Subject: Singapore
Predicate: leader
Object: Halimah Yacob

Triple: ['__subject__ Singapore __predicate__ leader __object__ Halimah Yacob']
Text: Halimah Yacob is the name of Singapore's leader.
Subject: Singapore
Predicate: leader
Object: Halimah Yacob

Triple: ['__subject__ Singapore __predicate__ leader __object__ Halimah Yacob']
Text: Halimah Yacob leads Singapore.
Subject: Singapore
Predicate: leader
Object: Halimah Yacob

Triple: ['__subject__ Singapore __predicate__ leader __object__ Tony Tan']
Text: The leader of Singapore is Tony Tan.
Subject: Singapore
Predicate: leader
Object: Tony Tan

Triple: ['__subject__ Singapore __predicate__ leader __object__ Tony Tan']
Text: Tony Tan is a leader in Singapore.
Subject: Singapore
Predicate: leader
Object: Tony Tan

Triple: ['__subject__ Singapore __predicate__ leader __object__ Tony Tan']
Text: Tony Tan is the leader of Singapore.
Subject: Singapore
Predicate: leader
Object: Tony Tan

Triple: ['__subject__ Siomay __predicate__ dishVariation __object__ Batagor']
Text: Batagor and Siomay are variation of the same dish.
Subject: Siomay
Predicate: dishVariation
Object: Batagor

Triple: ['__subject__ Siomay __predicate__ dishVariation __object__ Batagor']
Text: Batagor is a dish variation of Siomay.
Subject: Siomay
Predicate: dishVariation
Object: Batagor

Triple: ['__subject__ Siomay __predicate__ dishVariation __object__ Batagor']
Text: Batagor is a variation of Siomay.
Subject: Siomay
Predicate: dishVariation
Object: Batagor

Triple: ['__subject__ Spain __predicate__ currency __object__ Euro']
Text: Spain uses the euro for its currency.
Subject: Spain
Predicate: currency
Object: Euro

Triple: ['__subject__ Spain __predicate__ currency __object__ Euro']
Text: The Euro is the currency in Spain.
Subject: Spain
Predicate: currency
Object: Euro

Triple: ['__subject__ Spain __predicate__ currency __object__ Euro']
Text: The currency of Spain is Euro.
Subject: Spain
Predicate: currency
Object: Euro

Triple: ['__subject__ Spain __predicate__ demonym __object__ Spaniards']
Text: Spaniards are from Spain.
Subject: Spain
Predicate: demonym
Object: Spaniards

Triple: ['__subject__ Spain __predicate__ demonym __object__ Spaniards']
Text: Spaniards is the name for the people of Spain.
Subject: Spain
Predicate: demonym
Object: Spaniards

Triple: ['__subject__ Spain __predicate__ ethnicGroup __object__ Spaniards']
Text: Spaniards are the ethnic group of Spain.
Subject: Spain
Predicate: ethnicGroup
Object: Spaniards

Triple: ['__subject__ Spain __predicate__ ethnicGroup __object__ Spaniards']
Text: The ethnic group for Spain is Spaniards.
Subject: Spain
Predicate: ethnicGroup
Object: Spaniards

Triple: ['__subject__ Spain __predicate__ language __object__ Spanish language']
Text: In Spain the language spoken is the Spanish language.
Subject: Spain
Predicate: language
Object: Spanish language

Triple: ['__subject__ Spain __predicate__ language __object__ Spanish language']
Text: The Spanish language is spoken in Spain.
Subject: Spain
Predicate: language
Object: Spanish language

Triple: ['__subject__ Spain __predicate__ language __object__ Spanish language']
Text: The language of Spain is Spanish.
Subject: Spain
Predicate: language
Object: Spanish language

Triple: ['__subject__ Spain __predicate__ leader __object__ Felipe VI of Spain']
Text: The leader of Spain is Felipe VI of Spain.
Subject: Spain
Predicate: leader
Object: Felipe VI of Spain

Triple: ['__subject__ Spain __predicate__ leader __object__ Felipe VI of Spain']
Text: Felipe VI of Spain is the leader of Spain.
Subject: Spain
Predicate: leader
Object: Felipe VI of Spain

Triple: ['__subject__ Sumatra __predicate__ ethnicGroup __object__ Acehnese people']
Text: One the ethnic groups on Sumatra is the Acehnese people.
Subject: Sumatra
Predicate: ethnicGroup
Object: Acehnese people

Triple: ['__subject__ Sumatra __predicate__ ethnicGroup __object__ Acehnese people']
Text: Acehnese people form one of the ethnic groups in Sumatra.
Subject: Sumatra
Predicate: ethnicGroup
Object: Acehnese people

Triple: ['__subject__ Sumatra __predicate__ ethnicGroup __object__ Acehnese people']
Text: Acehnese people are an ethnic group in Sumatra.
Subject: Sumatra
Predicate: ethnicGroup
Object: Acehnese people

Triple: ['__subject__ Sumatra __predicate__ ethnicGroup __object__ Batak']
Text: Batak is the ethnic group in Sumatra.
Subject: Sumatra
Predicate: ethnicGroup
Object: Batak

Triple: ['__subject__ Sumatra __predicate__ ethnicGroup __object__ Batak']
Text: Batak is an ethnic group found in Sumatra.
Subject: Sumatra
Predicate: ethnicGroup
Object: Batak

Triple: ['__subject__ Sumatra __predicate__ ethnicGroup __object__ Batak']
Text: Batak is an ethnic group in Sumatra.
Subject: Sumatra
Predicate: ethnicGroup
Object: Batak

Triple: ['__subject__ Sumatra __predicate__ ethnicGroup __object__ Minangkabau people']
Text: The Minangkabau people are an ethnic group of Sumatra.
Subject: Sumatra
Predicate: ethnicGroup
Object: Minangkabau people

Triple: ['__subject__ Sumatra __predicate__ ethnicGroup __object__ Minangkabau people']
Text: Sumatra has an ethnic group called the Minangkabau people.
Subject: Sumatra
Predicate: ethnicGroup
Object: Minangkabau people

Triple: ['__subject__ Sweet potato __predicate__ division __object__ Flowering plant']
Text: Sweet potato belongs to flowering plants.
Subject: Sweet potato
Predicate: division
Object: Flowering plant

Triple: ['__subject__ Sweet potato __predicate__ order __object__ Solanales']
Text: Sweet potato belongs to the Solanales order of plants.
Subject: Sweet potato
Predicate: order
Object: Solanales

Triple: ['__subject__ Sweet potato __predicate__ order __object__ Solanales']
Text: Sweet potato are part of the order of Solanales.
Subject: Sweet potato
Predicate: order
Object: Solanales

Triple: ['__subject__ Sweet potato __predicate__ order __object__ Solanales']
Text: Sweet potato is of the order Solanales.
Subject: Sweet potato
Predicate: order
Object: Solanales

Triple: ['__subject__ Tomato __predicate__ division __object__ Flowering plant']
Text: Tomato is part of the flowering plant division.
Subject: Tomato
Predicate: division
Object: Flowering plant

Triple: ['__subject__ Tomato __predicate__ family __object__ Solanaceae']
Text: Tomato belongs to the family of solanaceae.
Subject: Tomato
Predicate: family
Object: Solanaceae

Triple: ['__subject__ Tomato __predicate__ family __object__ Solanaceae']
Text: The tomato comes from the Solanaceae family.
Subject: Tomato
Predicate: family
Object: Solanaceae

Triple: ['__subject__ Tomato __predicate__ family __object__ Solanaceae']
Text: The tomato belongs to the family of Solanaceae.
Subject: Tomato
Predicate: family
Object: Solanaceae

Triple: ['__subject__ Tomato __predicate__ genus __object__ Solanum']
Text: Tomato belongs to the genus Solanum.
Subject: Tomato
Predicate: genus
Object: Solanum

Triple: ['__subject__ Tomato __predicate__ order __object__ Solanales']
Text: The tomato is of the order Solanales.
Subject: Tomato
Predicate: order
Object: Solanales

Triple: ['__subject__ Tomato __predicate__ order __object__ Solanales']
Text: Tomato is one of the members of the order Solanales.
Subject: Tomato
Predicate: order
Object: Solanales

Triple: ['__subject__ United Kingdom __predicate__ capital __object__ London']
Text: London is the Capital of the United Kingdom.
Subject: United Kingdom
Predicate: capital
Object: London

Triple: ['__subject__ United Kingdom __predicate__ capital __object__ London']
Text: London is the capital city of the United Kingdom.
Subject: United Kingdom
Predicate: capital
Object: London

Triple: ['__subject__ United Kingdom __predicate__ capital __object__ London']
Text: London is the capital of the UK.
Subject: United Kingdom
Predicate: capital
Object: London

Triple: ['__subject__ United Kingdom __predicate__ language __object__ English language']
Text: The language of the United Kingdom is the English language.
Subject: United Kingdom
Predicate: language
Object: English language

Triple: ['__subject__ United Kingdom __predicate__ language __object__ English language']
Text: English is the language spoken in the United Kingdom.
Subject: United Kingdom
Predicate: language
Object: English language

Triple: ['__subject__ United Kingdom __predicate__ language __object__ English language']
Text: English is spoken in the UK.
Subject: United Kingdom
Predicate: language
Object: English language

Triple: ['__subject__ United Kingdom __predicate__ leader __object__ Elizabeth II']
Text: Elizabeth II is the leader of the United Kingdom.
Subject: United Kingdom
Predicate: leader
Object: Elizabeth II

Triple: ['__subject__ United Kingdom __predicate__ leader __object__ Elizabeth II']
Text: Elizabeth II is the leader of the UK.
Subject: United Kingdom
Predicate: leader
Object: Elizabeth II

Triple: ['__subject__ United Kingdom __predicate__ leader __object__ Elizabeth II']
Text: Elizabeth II is the head of state in the United Kingdom.
Subject: United Kingdom
Predicate: leader
Object: Elizabeth II

Triple: ['__subject__ United States __predicate__ capital __object__ Washington, D.C.']
Text: The capital of the U.S. is Washington, D.C.
Subject: United States
Predicate: capital
Object: Washington, D.C.

Triple: ['__subject__ United States __predicate__ capital __object__ Washington, D.C.']
Text: Washington, D.C is the capital of the United States.
Subject: United States
Predicate: capital
Object: Washington, D.C.

Triple: ['__subject__ United States __predicate__ capital __object__ Washington, D.C.']
Text: The capital of the United States is Washington, D.C.
Subject: United States
Predicate: capital
Object: Washington, D.C.

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: African Americans are an ethnic group in the United States.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: African Americans are one of the ethnic groups in the United States.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: African Americans are an ethnic group in the U.S.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']
Text: Asian Americans are an ethnic group in the United States.
Subject: United States
Predicate: ethnicGroup
Object: Asian Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']
Text: Asian Americans are one of the ethnic groups in the United States.
Subject: United States
Predicate: ethnicGroup
Object: Asian Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ White Americans']
Text: White Americans are an ethnic group in the United States.
Subject: United States
Predicate: ethnicGroup
Object: White Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ White Americans']
Text: White Americans are one of the ethnic groups in the United States.
Subject: United States
Predicate: ethnicGroup
Object: White Americans

Triple: ['__subject__ United States __predicate__ language __object__ English language']
Text: The English language is used in the United States.
Subject: United States
Predicate: language
Object: English language

Triple: ['__subject__ United States __predicate__ language __object__ English language']
Text: English is the language of the United States.
Subject: United States
Predicate: language
Object: English language

Triple: ['__subject__ United States __predicate__ language __object__ English language']
Text: English is a language spoken in the United States.
Subject: United States
Predicate: language
Object: English language

Triple: ['__subject__ United States __predicate__ leader __object__ Barack Obama']
Text: Barack Obama is a leader of the United States.
Subject: United States
Predicate: leader
Object: Barack Obama

Triple: ['__subject__ United States __predicate__ leader __object__ Barack Obama']
Text: Barack Obama is the leader of the United States.
Subject: United States
Predicate: leader
Object: Barack Obama

Triple: ['__subject__ United States __predicate__ leader __object__ Barack Obama']
Text: Barack Obama is the leader of United States.
Subject: United States
Predicate: leader
Object: Barack Obama

Triple: ['__subject__ United States __predicate__ leader __object__ Joe Biden']
Text: Joe Biden is a leader of the United States.
Subject: United States
Predicate: leader
Object: Joe Biden

Triple: ['__subject__ United States __predicate__ leader __object__ Joe Biden']
Text: Joe Biden is one of the leaders of the United States.
Subject: United States
Predicate: leader
Object: Joe Biden

Triple: ['__subject__ United States __predicate__ leader __object__ Joe Biden']
Text: Joe Biden is a political leader in the U.S.
Subject: United States
Predicate: leader
Object: Joe Biden

Triple: ['__subject__ United States __predicate__ leader __object__ John Roberts']
Text: John Roberts is a leader in the United States.
Subject: United States
Predicate: leader
Object: John Roberts

Triple: ['__subject__ United States __predicate__ leader __object__ John Roberts']
Text: John Roberts is the leader of the United States.
Subject: United States
Predicate: leader
Object: John Roberts

Triple: ['__subject__ United States __predicate__ leader __object__ Paul Ryan']
Text: Paul Ryan is a leader in United States.
Subject: United States
Predicate: leader
Object: Paul Ryan

Triple: ['__subject__ United States __predicate__ leader __object__ Paul Ryan']
Text: United States leader is called Paul Ryan.
Subject: United States
Predicate: leader
Object: Paul Ryan

Triple: ['__subject__ United States __predicate__ leader __object__ Paul Ryan']
Text: Paul Ryan is a leader in the U.S.
Subject: United States
Predicate: leader
Object: Paul Ryan

Triple: ['__subject__ United States __predicate__ leaderTitle __object__ President of the United States']
Text: The leader of the United States is called the President.
Subject: United States
Predicate: leaderTitle
Object: President of the United States

Triple: ['__subject__ United States __predicate__ leaderTitle __object__ President of the United States']
Text: The leader of the United States has a title of President.
Subject: United States
Predicate: leaderTitle
Object: President of the United States

Triple: ['__subject__ Valencian Community __predicate__ leader __object__ Ximo Puig']
Text: The leader of the community of Valencia is Ximo Puig.
Subject: Valencian Community
Predicate: leader
Object: Ximo Puig

Triple: ['__subject__ Valencian Community __predicate__ leader __object__ Ximo Puig']
Text: Ximo Puig is a leader in the Valencian Community.
Subject: Valencian Community
Predicate: leader
Object: Ximo Puig

Triple: ['__subject__ Valencian Community __predicate__ leader __object__ Ximo Puig']
Text: Ximo Puig is a leader of the Valencian Community.
Subject: Valencian Community
Predicate: leader
Object: Ximo Puig

Triple: ['__subject__ 1955 Dodge __predicate__ alternativeName __object__ Dodge Custom Royal']
Text: The 1955 Dodge is also known as the Dodge Custom Royal.
Subject: 1955 Dodge
Predicate: alternativeName
Object: Dodge Custom Royal

Triple: ['__subject__ 1955 Dodge __predicate__ alternativeName __object__ Dodge Custom Royal']
Text: The 1955 Dodge had another name and was called the Dodge Custom Royal.
Subject: 1955 Dodge
Predicate: alternativeName
Object: Dodge Custom Royal

Triple: ['__subject__ 1955 Dodge __predicate__ alternativeName __object__ Dodge Suburban']
Text: The 1955 Doge is also called the Dodge Suburban.
Subject: 1955 Dodge
Predicate: alternativeName
Object: Dodge Suburban

Triple: ['__subject__ 1955 Dodge __predicate__ alternativeName __object__ Dodge Suburban']
Text: The alternative name of the 1955 Dodge is "Dodge Suburban".
Subject: 1955 Dodge
Predicate: alternativeName
Object: Dodge Suburban

Triple: ['__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Convertible']
Text: The 1955 Dodge is a convertible.
Subject: 1955 Dodge
Predicate: bodyStyle
Object: Convertible

Triple: ['__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Hardtop']
Text: The 1955 Dodge has a hardtop.
Subject: 1955 Dodge
Predicate: bodyStyle
Object: Hardtop

Triple: ['__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Sedan (automobile)']
Text: The 1955 Dodge has a sedan style body.
Subject: 1955 Dodge
Predicate: bodyStyle
Object: Sedan (automobile)

Triple: ['__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Sedan (automobile)']
Text: The 1955 Dodge is a sedan type vehicle.
Subject: 1955 Dodge
Predicate: bodyStyle
Object: Sedan (automobile)

Triple: ['__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Sedan (automobile)']
Text: The body style of the 1955 Dodge automobile is sedan.
Subject: 1955 Dodge
Predicate: bodyStyle
Object: Sedan (automobile)

Triple: ['__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Station wagon']
Text: The 1955 Dodge has a station wagon style body.
Subject: 1955 Dodge
Predicate: bodyStyle
Object: Station wagon

Triple: ['__subject__ 1955 Dodge __predicate__ bodyStyle __object__ Station wagon']
Text: The 1955 Dodge is a station wagon.
Subject: 1955 Dodge
Predicate: bodyStyle
Object: Station wagon

Triple: ['__subject__ 1955 Dodge __predicate__ engine __object__ AMC V8 engine']
Text: The 1955 Dodge has an AMC V8 engine.
Subject: 1955 Dodge
Predicate: engine
Object: AMC V8 engine

Triple: ['__subject__ 1955 Dodge __predicate__ engine __object__ Straight-six engine']
Text: The Dodge 1955 has a straight-six engine.
Subject: 1955 Dodge
Predicate: engine
Object: Straight-six engine

Triple: ['__subject__ 1955 Dodge __predicate__ engine __object__ Straight-six engine']
Text: The 1955 Dodge has a straight-six engine.
Subject: 1955 Dodge
Predicate: engine
Object: Straight-six engine

Triple: ['__subject__ 1955 Dodge __predicate__ engine __object__ Straight-six engine']
Text: There is a straight-six engine in the 1955 Dodge car.
Subject: 1955 Dodge
Predicate: engine
Object: Straight-six engine

Triple: ['__subject__ 1955 Dodge __predicate__ engine __object__ V8 engine']
Text: The 1955 Dodge has a V8 engine.
Subject: 1955 Dodge
Predicate: engine
Object: V8 engine

Triple: ['__subject__ 1955 Dodge __predicate__ manufacturer __object__ Dodge']
Text: The 1955 Dodge is manufactured by Dodge.
Subject: 1955 Dodge
Predicate: manufacturer
Object: Dodge

Triple: ['__subject__ 1955 Dodge __predicate__ manufacturer __object__ Dodge']
Text: The manufacturer of the 1955 Dodge is the company Dodge.
Subject: 1955 Dodge
Predicate: manufacturer
Object: Dodge

Triple: ['__subject__ 1955 Dodge __predicate__ manufacturer __object__ Dodge']
Text: The manufacturer of the 1955 Dodge is Dodge.
Subject: 1955 Dodge
Predicate: manufacturer
Object: Dodge

Triple: ['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom']
Text: The 1955 Dodge is related to the DeSoto Custom.
Subject: 1955 Dodge
Predicate: relatedMeanOfTransportation
Object: DeSoto Custom

Triple: ['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ DeSoto Custom']
Text: The 1955 Dodge and the DeSoto Custom are related means of transportation.
Subject: 1955 Dodge
Predicate: relatedMeanOfTransportation
Object: DeSoto Custom

Triple: ['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ Plymouth Plaza']
Text: 1955 Dodge and Plymouth Plaza are related kinds of transportation.
Subject: 1955 Dodge
Predicate: relatedMeanOfTransportation
Object: Plymouth Plaza

Triple: ['__subject__ 1955 Dodge __predicate__ relatedMeanOfTransportation __object__ Plymouth Plaza']
Text: The 1955 Dodge and the Plymouth Plaza are related means of transport in that they are both cars.
Subject: 1955 Dodge
Predicate: relatedMeanOfTransportation
Object: Plymouth Plaza

Triple: ['__subject__ 1955 Dodge __predicate__ transmission __object__ 3-speed automatic']
Text: The 1955 Dodge has a 3-speed automatic transmission.
Subject: 1955 Dodge
Predicate: transmission
Object: 3-speed automatic

Triple: ['__subject__ 1955 Dodge __predicate__ transmission __object__ 3-speed automatic']
Text: The 1955 Dodge uses a 3-speed automatic transmission.
Subject: 1955 Dodge
Predicate: transmission
Object: 3-speed automatic

Triple: ['__subject__ 1955 Dodge __predicate__ transmission __object__ 3-speed automatic']
Text: The 1955 Dodge possesses a 3-speed automatic transmission.
Subject: 1955 Dodge
Predicate: transmission
Object: 3-speed automatic

Triple: ['__subject__ 1955 Dodge __predicate__ wheelbase __object__ 120.0 (inches)']
Text: The 1955 Dodge has a wheelbase of 120.0 inches.
Subject: 1955 Dodge
Predicate: wheelbase
Object: 120.0 (inches)

Triple: ['__subject__ 1955 Dodge __predicate__ wheelbase __object__ 120.0 (inches)']
Text: The wheelbase of a 1955 Dodge is 120 inches.
Subject: 1955 Dodge
Predicate: wheelbase
Object: 120.0 (inches)

Triple: ['__subject__ 1955 Dodge __predicate__ wheelbase __object__ 120.0 (inches)']
Text: The 1955 Dodge has a wheelbase of 120 inches.
Subject: 1955 Dodge
Predicate: wheelbase
Object: 120.0 (inches)

Triple: ['__subject__ A-Rosa Luna __predicate__ builder __object__ Neptun Werft, Warnemünde,']
Text: The A-Rosa Luna was built by Neptun Werft, Warnemunde.
Subject: A-Rosa Luna
Predicate: builder
Object: Neptun Werft, Warnemünde,

Triple: ['__subject__ A-Rosa Luna __predicate__ builder __object__ Neptun Werft, Warnemünde,']
Text: The A-Rosa Luna was built by Neptun Werft, Warnemünde.
Subject: A-Rosa Luna
Predicate: builder
Object: Neptun Werft, Warnemünde,

Triple: ['__subject__ A-Rosa Luna __predicate__ builder __object__ Germany']
Text: The A-Rosa Luna was built in Germany.
Subject: A-Rosa Luna
Predicate: builder
Object: Germany

Triple: ['__subject__ A-Rosa Luna __predicate__ builder __object__ Neptun Werft']
Text: Neptun Werft built the A-Rosa Luna.
Subject: A-Rosa Luna
Predicate: builder
Object: Neptun Werft

Triple: ['__subject__ A-Rosa Luna __predicate__ builder __object__ Neptun Werft']
Text: The A Rosa Luna was built on the Neptun Werft.
Subject: A-Rosa Luna
Predicate: builder
Object: Neptun Werft

Triple: ['__subject__ A-Rosa Luna __predicate__ builder __object__ Neptun Werft']
Text: The builder of the A-Rosa Luna is Neptun Werft.
Subject: A-Rosa Luna
Predicate: builder
Object: Neptun Werft

Triple: ['__subject__ A-Rosa Luna __predicate__ builder __object__ Rostock']
Text: The A-Rosa Luna was built in Rostock.
Subject: A-Rosa Luna
Predicate: builder
Object: Rostock

Triple: ['__subject__ A-Rosa Luna __predicate__ completionDate __object__ 2005-04-06']
Text: The A-Rosa Luna was completed on April 6, 2005.
Subject: A-Rosa Luna
Predicate: completionDate
Object: 2005-04-06

Triple: ['__subject__ A-Rosa Luna __predicate__ completionDate __object__ 2005-04-06']
Text: The building of A-Rosa Luna was completed on April 6th 2005.
Subject: A-Rosa Luna
Predicate: completionDate
Object: 2005-04-06

Triple: ['__subject__ A-Rosa Luna __predicate__ length __object__ 125800.0 (millimetres)']
Text: The A-Rosa Luna is 125800.0 millimetres in length.
Subject: A-Rosa Luna
Predicate: length
Object: 125800.0 (millimetres)

Triple: ['__subject__ A-Rosa Luna __predicate__ length __object__ 125800.0 (millimetres)']
Text: The A Rosa Luna is 125800.0 (millimetres) long.
Subject: A-Rosa Luna
Predicate: length
Object: 125800.0 (millimetres)

Triple: ['__subject__ A-Rosa Luna __predicate__ length __object__ 125800.0 (millimetres)']
Text: The length of the A-Rosa Luna is 125.8 metres long.
Subject: A-Rosa Luna
Predicate: length
Object: 125800.0 (millimetres)

Triple: ['__subject__ A-Rosa Luna __predicate__ powerType __object__ MTU Friedrichshafen']
Text: The A-Rosa Luna is powered by a MTU Friedrichshafen engine.
Subject: A-Rosa Luna
Predicate: powerType
Object: MTU Friedrichshafen

Triple: ['__subject__ A-Rosa Luna __predicate__ powerType __object__ MTU Friedrichshafen']
Text: The A-Rosa Luna is powered by MTU Friedrichshafen made engines.
Subject: A-Rosa Luna
Predicate: powerType
Object: MTU Friedrichshafen

Triple: ['__subject__ A-Rosa Luna __predicate__ shipClass __object__ Cruise ship']
Text: The A-Rosa Luna is classed as a cruise ship.
Subject: A-Rosa Luna
Predicate: shipClass
Object: Cruise ship

Triple: ['__subject__ A-Rosa Luna __predicate__ shipClass __object__ Cruise ship']
Text: The A-Rosa Luna is a cruise ship.
Subject: A-Rosa Luna
Predicate: shipClass
Object: Cruise ship

Triple: ['__subject__ A-Rosa Luna __predicate__ shipClass __object__ Cruise ship']
Text: A-Rosa Luna is classed as a Cruise ship.
Subject: A-Rosa Luna
Predicate: shipClass
Object: Cruise ship

Triple: ['__subject__ A-Rosa Luna __predicate__ shipDisplacement __object__ 1850.0 (tonnes)']
Text: The ship A-Rosa Luna weighs 1850 tonnes.
Subject: A-Rosa Luna
Predicate: shipDisplacement
Object: 1850.0 (tonnes)

Triple: ['__subject__ A-Rosa Luna __predicate__ shipDisplacement __object__ 1850.0 (tonnes)']
Text: A-Rosa Luna has a ship displacement of 1850 tonnes.
Subject: A-Rosa Luna
Predicate: shipDisplacement
Object: 1850.0 (tonnes)

Triple: ['__subject__ A-Rosa Luna __predicate__ shipLaunch __object__ 2004-12-16']
Text: December 16, 2004 was the launch date for the A-Rosa Luna ship.
Subject: A-Rosa Luna
Predicate: shipLaunch
Object: 2004-12-16

Triple: ['__subject__ A-Rosa Luna __predicate__ shipLaunch __object__ 2004-12-16']
Text: The ship A-Rosa Luna's launch date was the 16th December 2004.
Subject: A-Rosa Luna
Predicate: shipLaunch
Object: 2004-12-16

Triple: ['__subject__ A-Rosa Luna __predicate__ shipOrdered __object__ 2004-01-22']
Text: The A-Rosa Luna was ordered on the 22nd of January 2004.
Subject: A-Rosa Luna
Predicate: shipOrdered
Object: 2004-01-22

Triple: ['__subject__ A-Rosa Luna __predicate__ shipOrdered __object__ 2004-01-22']
Text: The A-Rosa Luna ship was ordered on January 22nd 2004.
Subject: A-Rosa Luna
Predicate: shipOrdered
Object: 2004-01-22

Triple: ['__subject__ A-Rosa Luna __predicate__ shipOrdered __object__ 2004-01-22']
Text: The A-Rosa Luna ship was ordered on January 22, 2004.
Subject: A-Rosa Luna
Predicate: shipOrdered
Object: 2004-01-22

Triple: ['__subject__ A-Rosa Luna __predicate__ shipPower __object__ 2 × MTU 16V 2000 M60 engine']
Text: The A-Rosa Luna has a 2 × MTU 16V 2000 M60 engine.
Subject: A-Rosa Luna
Predicate: shipPower
Object: 2 × MTU 16V 2000 M60 engine

Triple: ['__subject__ A-Rosa Luna __predicate__ shipPower __object__ 2 × MTU 16V 2000 M60 engine']
Text: The A-Rosa Luna ship has a 2 × MTU 16V 2000 M60 engine.
Subject: A-Rosa Luna
Predicate: shipPower
Object: 2 × MTU 16V 2000 M60 engine

Triple: ['__subject__ A-Rosa Luna __predicate__ shipPower __object__ 2 × MTU 16V 2000 M60 engine']
Text: The powering of the A-Rosa Luna is the "2xMTU 16V 2000 M60 engine".
Subject: A-Rosa Luna
Predicate: shipPower
Object: 2 × MTU 16V 2000 M60 engine

Triple: ['__subject__ A-Rosa Luna __predicate__ topSpeed __object__ 24.0']
Text: The A-Rosa Luna has a top speed of 24 km/h.
Subject: A-Rosa Luna
Predicate: topSpeed
Object: 24.0

Triple: ['__subject__ A-Rosa Luna __predicate__ topSpeed __object__ 24.0']
Text: The top speed pf the A-Rosa Luna is 24.0.
Subject: A-Rosa Luna
Predicate: topSpeed
Object: 24.0

Triple: ['__subject__ A-Rosa Luna __predicate__ topSpeed __object__ 24.0']
Text: The top speed of the A-Rosa Luna is 24.0.
Subject: A-Rosa Luna
Predicate: topSpeed
Object: 24.0

Triple: ['__subject__ AIDA Cruises __predicate__ location __object__ Germany']
Text: AIDA Cruises are located in Germany.
Subject: AIDA Cruises
Predicate: location
Object: Germany

Triple: ['__subject__ AIDA Cruises __predicate__ location __object__ Germany']
Text: The location of AIDA Cruises is Germany.
Subject: AIDA Cruises
Predicate: location
Object: Germany

Triple: ['__subject__ AIDA Cruises __predicate__ location __object__ Germany']
Text: AIDA Cruises is located in Germany.
Subject: AIDA Cruises
Predicate: location
Object: Germany

Triple: ['__subject__ AIDAluna __predicate__ builder __object__ Meyer Werft']
Text: Meyer Werft was the builder of the AIDAluna.
Subject: AIDAluna
Predicate: builder
Object: Meyer Werft

Triple: ['__subject__ AIDAluna __predicate__ builder __object__ Meyer Werft']
Text: The ship AIDAluna was built by Meyer Werft.
Subject: AIDAluna
Predicate: builder
Object: Meyer Werft

Triple: ['__subject__ AIDAluna __predicate__ builder __object__ Meyer Werft']
Text: The AIDAluna was built by Meyer Werft.
Subject: AIDAluna
Predicate: builder
Object: Meyer Werft

Triple: ['__subject__ AIDAluna __predicate__ christeningDate __object__ 2009-04-04']
Text: The AidAluna christening date is 2009-04-04.
Subject: AIDAluna
Predicate: christeningDate
Object: 2009-04-04

Triple: ['__subject__ AIDAluna __predicate__ christeningDate __object__ 2009-04-04']
Text: The christening date of the AIDAluna is 2009-04-04.
Subject: AIDAluna
Predicate: christeningDate
Object: 2009-04-04

Triple: ['__subject__ AIDAluna __predicate__ christeningDate __object__ 2009-04-04']
Text: The christening date of AIDAluna is the 4th April 2004.
Subject: AIDAluna
Predicate: christeningDate
Object: 2009-04-04

Triple: ['__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)']
Text: The AIDAluna is 252 metres long.
Subject: AIDAluna
Predicate: length
Object: 252000.0 (millimetres)

Triple: ['__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)']
Text: The AIDAluna has a length of 252000.0 millimetres.
Subject: AIDAluna
Predicate: length
Object: 252000.0 (millimetres)

Triple: ['__subject__ AIDAluna __predicate__ length __object__ 252000.0 (millimetres)']
Text: The length of the AIDAluna is 252000.0 millimetres.
Subject: AIDAluna
Predicate: length
Object: 252000.0 (millimetres)

Triple: ['__subject__ AIDAluna __predicate__ maidenVoyage __object__ 2009-03-22']
Text: AIDAluna had its maiden voyage on the 22nd of March, 2009.
Subject: AIDAluna
Predicate: maidenVoyage
Object: 2009-03-22

Triple: ['__subject__ AIDAluna __predicate__ maidenVoyage __object__ 2009-03-22']
Text: The AIDAluna made her maiden voyage on March 22nd 2009.
Subject: AIDAluna
Predicate: maidenVoyage
Object: 2009-03-22

Triple: ['__subject__ AIDAluna __predicate__ maidenVoyage __object__ 2009-03-22']
Text: The AIDAluna had its maiden voyage on March 22, 2009.
Subject: AIDAluna
Predicate: maidenVoyage
Object: 2009-03-22

Triple: ['__subject__ AIDAluna __predicate__ maidenVoyage __object__ 2009-03-22']
Text: The AIDAluna had its maiden voyage on the 22nd of March 2009.
Subject: AIDAluna
Predicate: maidenVoyage
Object: 2009-03-22

Triple: ['__subject__ AIDAluna __predicate__ maidenVoyage __object__ 2009-03-22']
Text: The AIDAluna had her maiden voyage on March 22nd 2009.
Subject: AIDAluna
Predicate: maidenVoyage
Object: 2009-03-22

Triple: ['__subject__ AIDAluna __predicate__ maidenVoyage __object__ 2009-03-22']
Text: The AIDAluna made its first trip on March 22, 2009.
Subject: AIDAluna
Predicate: maidenVoyage
Object: 2009-03-22

Triple: ['__subject__ AIDAluna __predicate__ owner __object__ AIDA Cruises']
Text: The owner of AIDAluna is AIDA Cruises.
Subject: AIDAluna
Predicate: owner
Object: AIDA Cruises

Triple: ['__subject__ AIDAluna __predicate__ owner __object__ AIDA Cruises']
Text: AIDA Cruises is the owner of the AIDAluna.
Subject: AIDAluna
Predicate: owner
Object: AIDA Cruises

Triple: ['__subject__ AIDAluna __predicate__ powerType __object__ Caterpillar Inc.']
Text: AIDAluna is powered by Caterpillar Inc.
Subject: AIDAluna
Predicate: powerType
Object: Caterpillar Inc.

Triple: ['__subject__ AIDAluna __predicate__ powerType __object__ Caterpillar Inc.']
Text: The power type of the AIDAluna is the Caterpillar Inc. engine.
Subject: AIDAluna
Predicate: powerType
Object: Caterpillar Inc.

Triple: ['__subject__ AIDAluna __predicate__ shipBeam __object__ 32.2']
Text: The AIDAluna has a ship beam of 32.2.
Subject: AIDAluna
Predicate: shipBeam
Object: 32.2

Triple: ['__subject__ AIDAluna __predicate__ shipBeam __object__ 32.2']
Text: The beam of the AIDAluna is 32.2m.
Subject: AIDAluna
Predicate: shipBeam
Object: 32.2

Triple: ['__subject__ AIDAluna __predicate__ shipBeam __object__ 32.2']
Text: The length of the AIDAluna ship beam is 32.2.
Subject: AIDAluna
Predicate: shipBeam
Object: 32.2

Triple: ['__subject__ AIDAluna __predicate__ shipInService __object__ 2009-03-22']
Text: The ship AIDAluna began service on March 22nd 2009.
Subject: AIDAluna
Predicate: shipInService
Object: 2009-03-22

Triple: ['__subject__ AIDAluna __predicate__ shipInService __object__ 2009-03-22']
Text: The AIDAluna ship began serving on March 22, 2009.
Subject: AIDAluna
Predicate: shipInService
Object: 2009-03-22

Triple: ['__subject__ AIDAluna __predicate__ shipInService __object__ 2009-03-22']
Text: The ship AIDAluna began its service on the 22nd of march 2009.
Subject: AIDAluna
Predicate: shipInService
Object: 2009-03-22

Triple: ['__subject__ AIDAluna __predicate__ status __object__ In service']
Text: AIDAluna is in service.
Subject: AIDAluna
Predicate: status
Object: In service

Triple: ['__subject__ AIDAluna __predicate__ status __object__ In service']
Text: The AIDAluna is currently in service.
Subject: AIDAluna
Predicate: status
Object: In service

Triple: ['__subject__ AIDAluna __predicate__ topSpeed __object__ 40.744']
Text: The AIDAluna has a top speed of 40.744.
Subject: AIDAluna
Predicate: topSpeed
Object: 40.744

Triple: ['__subject__ AIDAluna __predicate__ topSpeed __object__ 40.744']
Text: The AIDAluna has a top speed is 40.744.
Subject: AIDAluna
Predicate: topSpeed
Object: 40.744

Triple: ['__subject__ AIDAluna __predicate__ topSpeed __object__ 40.744']
Text: The top speed of the AIDAluna is 40.744.
Subject: AIDAluna
Predicate: topSpeed
Object: 40.744

Triple: ['__subject__ AIDAstella __predicate__ activeYearsStartDate __object__ 2013-03-17']
Text: The AIDAstella service began on March 17th 2013.
Subject: AIDAstella
Predicate: activeYearsStartDate
Object: 2013-03-17

Triple: ['__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']
Text: AIDAstella is 253260.0 millimetres in length.
Subject: AIDAstella
Predicate: length
Object: 253260.0 (millimetres)

Triple: ['__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']
Text: AIDAstella is 253260.0 millimetres long.
Subject: AIDAstella
Predicate: length
Object: 253260.0 (millimetres)

Triple: ['__subject__ AIDAstella __predicate__ length __object__ 253260.0 (millimetres)']
Text: The AIDAstella is 253260.0 millimetres in length.
Subject: AIDAstella
Predicate: length
Object: 253260.0 (millimetres)

Triple: ['__subject__ AIDAstella __predicate__ owner __object__ Costa Crociere']
Text: Costa Crociere is the owner of the AIDAstella.
Subject: AIDAstella
Predicate: owner
Object: Costa Crociere

Triple: ['__subject__ AIDAstella __predicate__ owner __object__ Costa Crociere']
Text: The AIDAstella is owned by Costa Crociere.
Subject: AIDAstella
Predicate: owner
Object: Costa Crociere

Triple: ['__subject__ AIDAstella __predicate__ shipBeam __object__ 32.2']
Text: The AIDAstella has a beam of 32.2 m.
Subject: AIDAstella
Predicate: shipBeam
Object: 32.2

Triple: ['__subject__ AIDAstella __predicate__ shipBeam __object__ 32.2']
Text: The ship AIDAstella has a beam of 32.2 metres.
Subject: AIDAstella
Predicate: shipBeam
Object: 32.2

Triple: ['__subject__ AIDAstella __predicate__ shipBeam __object__ 32.2']
Text: The AIDAstella has a ship beam of 32.2.
Subject: AIDAstella
Predicate: shipBeam
Object: 32.2

Triple: ['__subject__ AIDAstella __predicate__ shipClass __object__ Sphinx-class cruise ship']
Text: The AIDAstella is a Sphinx-class cruise ship.
Subject: AIDAstella
Predicate: shipClass
Object: Sphinx-class cruise ship

Triple: ['__subject__ AIDAstella __predicate__ shipClass __object__ Sphinx-class cruise ship']
Text: AIDAstella is a "Sphinx-class" cruise ship.
Subject: AIDAstella
Predicate: shipClass
Object: Sphinx-class cruise ship

Triple: ['__subject__ AIDAstella __predicate__ shipLaidDown __object__ 2008-12-17']
Text: The AIDAstella was laid down on 17th December 2008.
Subject: AIDAstella
Predicate: shipLaidDown
Object: 2008-12-17

Triple: ['__subject__ AIDAstella __predicate__ shipLaidDown __object__ 2008-12-17']
Text: The ship Aidastella was laid down on 2008-12-17.
Subject: AIDAstella
Predicate: shipLaidDown
Object: 2008-12-17

Triple: ['__subject__ AIDAstella __predicate__ status __object__ In service']
Text: The AIDAstella is still in service to this date.
Subject: AIDAstella
Predicate: status
Object: In service

Triple: ['__subject__ AIDAstella __predicate__ status __object__ In service']
Text: The AIDAstella is currently in service.
Subject: AIDAstella
Predicate: status
Object: In service

Triple: ['__subject__ AIDAstella __predicate__ topSpeed __object__ 38.892']
Text: The AIDAstella has a top speed of 38.892.
Subject: AIDAstella
Predicate: topSpeed
Object: 38.892

Triple: ['__subject__ AIDAstella __predicate__ topSpeed __object__ 38.892']
Text: The top speed of an AIDAstella is 38.892.
Subject: AIDAstella
Predicate: topSpeed
Object: 38.892

Triple: ['__subject__ AIDAstella __predicate__ topSpeed __object__ 38.892']
Text: The AIDAstella's top speed is 38.892 km/h.
Subject: AIDAstella
Predicate: topSpeed
Object: 38.892

Triple: ['__subject__ ALCO RS-3 __predicate__ buildDate __object__ May 1950 - August 1956']
Text: The ALCO RS-3 was produced between May 1950 and August 1956.
Subject: ALCO RS-3
Predicate: buildDate
Object: May 1950 - August 1956

Triple: ['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company']
Text: The American Locomotive Company built the ALCO RS-3.
Subject: ALCO RS-3
Predicate: builder
Object: American Locomotive Company

Triple: ['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company']
Text: The builder of the ALCO RS-3 is the American Locomotive Company.
Subject: ALCO RS-3
Predicate: builder
Object: American Locomotive Company

Triple: ['__subject__ ALCO RS-3 __predicate__ builder __object__ American Locomotive Company']
Text: The ALCO RS-3 was built by the American Locomotive Company.
Subject: ALCO RS-3
Predicate: builder
Object: American Locomotive Company

Triple: ['__subject__ ALCO RS-3 __predicate__ builder __object__ Montreal Locomotive Works']
Text: Montreal Locomotive Works is the builder of the ALCO RS-3.
Subject: ALCO RS-3
Predicate: builder
Object: Montreal Locomotive Works

Triple: ['__subject__ ALCO RS-3 __predicate__ builder __object__ Montreal Locomotive Works']
Text: The ALCO RS-3 was built by the Montreal Locomotive Works.
Subject: ALCO RS-3
Predicate: builder
Object: Montreal Locomotive Works

Triple: ['__subject__ ALCO RS-3 __predicate__ cylinderCount __object__ 12']
Text: The ALCO RS-3 has a cylinder count of 12.
Subject: ALCO RS-3
Predicate: cylinderCount
Object: 12

Triple: ['__subject__ ALCO RS-3 __predicate__ cylinderCount __object__ 12']
Text: The ALCO RS-3 has 12 cylinders.
Subject: ALCO RS-3
Predicate: cylinderCount
Object: 12

Triple: ['__subject__ ALCO RS-3 __predicate__ engine __object__ V12 engine']
Text: The ALCO RS-3 has a V12 engine.
Subject: ALCO RS-3
Predicate: engine
Object: V12 engine

Triple: ['__subject__ ALCO RS-3 __predicate__ length __object__ 17068.8 (millimetres)']
Text: The ALCO RS-3 is 17068.8 (millimetres) in length.
Subject: ALCO RS-3
Predicate: length
Object: 17068.8 (millimetres)

Triple: ['__subject__ ALCO RS-3 __predicate__ length __object__ 17068.8 (millimetres)']
Text: The length of the ALCO RS-3 is 17068.8 millimetres.
Subject: ALCO RS-3
Predicate: length
Object: 17068.8 (millimetres)

Triple: ['__subject__ ALCO RS-3 __predicate__ length __object__ 17068.8 (millimetres)']
Text: The length of ALCO RS-3 is 17068.8 millimetres.
Subject: ALCO RS-3
Predicate: length
Object: 17068.8 (millimetres)

Triple: ['__subject__ ALCO RS-3 __predicate__ powerType __object__ Diesel-electric transmission']
Text: The ALCO RS-3 has a diesel-electric transmission.
Subject: ALCO RS-3
Predicate: powerType
Object: Diesel-electric transmission

Triple: ['__subject__ ALCO RS-3 __predicate__ totalProduction __object__ 1418']
Text: The total number of ALCO RS-3 made is 1418.
Subject: ALCO RS-3
Predicate: totalProduction
Object: 1418

Triple: ['__subject__ ALCO RS-3 __predicate__ totalProduction __object__ 1418']
Text: The total production amount for the ALCO RS-3 is 1418.
Subject: ALCO RS-3
Predicate: totalProduction
Object: 1418

Triple: ['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States']
Text: The country of origin of the ALV X-1 is the United States.
Subject: ALV X-1
Predicate: countryOrigin
Object: United States

Triple: ['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States']
Text: ALV X-1 hails from the US.
Subject: ALV X-1
Predicate: countryOrigin
Object: United States

Triple: ['__subject__ ALV X-1 __predicate__ countryOrigin __object__ United States']
Text: ALV X-1 originated in the United States.
Subject: ALV X-1
Predicate: countryOrigin
Object: United States

Triple: ['__subject__ ALV X-1 __predicate__ diameter __object__ 1.524 (metres)']
Text: The diameter of the ALV X-1 is 1.524 metres.
Subject: ALV X-1
Predicate: diameter
Object: 1.524 (metres)

Triple: ['__subject__ ALV X-1 __predicate__ diameter __object__ 1.524 (metres)']
Text: The ALV X-1 has a diameter of 1.524 metres.
Subject: ALV X-1
Predicate: diameter
Object: 1.524 (metres)

Triple: ['__subject__ ALV X-1 __predicate__ diameter __object__ 1.524 (metres)']
Text: The ALV X-1 diameter is 1.524 metres.
Subject: ALV X-1
Predicate: diameter
Object: 1.524 (metres)

Triple: ['__subject__ ALV X-1 __predicate__ failedLaunches __object__ 1']
Text: The ALV X-1 had 1 launch failure.
Subject: ALV X-1
Predicate: failedLaunches
Object: 1

Triple: ['__subject__ ALV X-1 __predicate__ failedLaunches __object__ 1']
Text: The ALV X-1 rocket had 1 failed launch.
Subject: ALV X-1
Predicate: failedLaunches
Object: 1

Triple: ['__subject__ ALV X-1 __predicate__ failedLaunches __object__ 1']
Text: The ALV X-1 had one failed launch.
Subject: ALV X-1
Predicate: failedLaunches
Object: 1

Triple: ['__subject__ ALV X-1 __predicate__ rocketStages __object__ 2']
Text: The ALV X-1 has 2 rocket stages.
Subject: ALV X-1
Predicate: rocketStages
Object: 2

Triple: ['__subject__ ALV X-1 __predicate__ rocketStages __object__ 2']
Text: The ALV X-1 rocket has 2 stages.
Subject: ALV X-1
Predicate: rocketStages
Object: 2

Triple: ['__subject__ ALV X-1 __predicate__ totalLaunches __object__ 1']
Text: The ALV X-1 rocket was launched once.
Subject: ALV X-1
Predicate: totalLaunches
Object: 1

Triple: ['__subject__ ALV X-1 __predicate__ totalLaunches __object__ 1']
Text: The ALV X-1 has had a total of 1 launches.
Subject: ALV X-1
Predicate: totalLaunches
Object: 1

Triple: ['__subject__ ALV X-1 __predicate__ totalLaunches __object__ 1']
Text: The ALV X-1 rocket had a total of one launch.
Subject: ALV X-1
Predicate: totalLaunches
Object: 1

Triple: ['__subject__ AMC Matador __predicate__ alternativeName __object__ Rambler Matador']
Text: An alternative name for the AMC Matador is the Rambler Matador.
Subject: AMC Matador
Predicate: alternativeName
Object: Rambler Matador

Triple: ['__subject__ AMC Matador __predicate__ alternativeName __object__ Rambler Matador']
Text: The AMC Matador is also known as the Rambler Matador.
Subject: AMC Matador
Predicate: alternativeName
Object: Rambler Matador

Triple: ['__subject__ AMC Matador __predicate__ alternativeName __object__ VAM Classic']
Text: The alternative name for AMC Matador is VAM Classic.
Subject: AMC Matador
Predicate: alternativeName
Object: VAM Classic

Triple: ['__subject__ AMC Matador __predicate__ alternativeName __object__ VAM Classic']
Text: The AMC Matador has the alternative name the VAM Classic.
Subject: AMC Matador
Predicate: alternativeName
Object: VAM Classic

Triple: ['__subject__ AMC Matador __predicate__ alternativeName __object__ VAM Classic']
Text: The alternative name for the AMC Matador is VAM Classic.
Subject: AMC Matador
Predicate: alternativeName
Object: VAM Classic

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ Australia']
Text: The AMC matador was assembled in Australia.
Subject: AMC Matador
Predicate: assembly
Object: Australia

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ Mexico']
Text: The AMC Matador is assembled in Mexico.
Subject: AMC Matador
Predicate: assembly
Object: Mexico

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ Mexico']
Text: The AMC Matador was assembled in Mexico.
Subject: AMC Matador
Predicate: assembly
Object: Mexico

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ USA']
Text: AMC Matador was assembled in the USA.
Subject: AMC Matador
Predicate: assembly
Object: USA

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ USA']
Text: AMC Matadors are assembled in the USA.
Subject: AMC Matador
Predicate: assembly
Object: USA

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ USA']
Text: AMC Matador is assembled in the USA.
Subject: AMC Matador
Predicate: assembly
Object: USA

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ Australian Motor Industries']
Text: The AMC Matador is assembled by the Australian Motor Industries.
Subject: AMC Matador
Predicate: assembly
Object: Australian Motor Industries

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ Australian Motor Industries']
Text: The AMC Matador's is assembled by the Australian Motor Industries.
Subject: AMC Matador
Predicate: assembly
Object: Australian Motor Industries

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ Australian Motor Industries']
Text: The AMC Matador was assembled by Australian Motor Industries.
Subject: AMC Matador
Predicate: assembly
Object: Australian Motor Industries

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ Kenosha, Wisconsin']
Text: The AMC Matador was assembled in Kenosha, Wisconsin.
Subject: AMC Matador
Predicate: assembly
Object: Kenosha, Wisconsin

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ Kenosha, Wisconsin']
Text: The AMC Matador's assemble line is in Kenosha, Wisconsin.
Subject: AMC Matador
Predicate: assembly
Object: Kenosha, Wisconsin

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ Mexico City']
Text: The AMC Matador is assembled in Mexico City.
Subject: AMC Matador
Predicate: assembly
Object: Mexico City

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ Mexico City']
Text: The AMC Matador was assembled in Mexico City.
Subject: AMC Matador
Predicate: assembly
Object: Mexico City

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ Port Melbourne, Victoria']
Text: The AMC Matador is assembled at Port Melbourne, Victoria.
Subject: AMC Matador
Predicate: assembly
Object: Port Melbourne, Victoria

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ Port Melbourne, Victoria']
Text: The AMC Matador is assembled in Port Melbourne, Victoria.
Subject: AMC Matador
Predicate: assembly
Object: Port Melbourne, Victoria

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ Port Melbourne, Victoria']
Text: The assembly line on the AMC Matador is in Port Melbourne, Victoria.
Subject: AMC Matador
Predicate: assembly
Object: Port Melbourne, Victoria

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ Thames, New Zealand']
Text: The AMC Matador was assembled in Thames, New Zealand.
Subject: AMC Matador
Predicate: assembly
Object: Thames, New Zealand

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ Thames, New Zealand']
Text: The AMC Matador is assembled in Thames, New Zealand.
Subject: AMC Matador
Predicate: assembly
Object: Thames, New Zealand

Triple: ['__subject__ AMC Matador __predicate__ assembly __object__ Thames, New Zealand']
Text: AMC Matador is assembled in Thames, New Zealand.
Subject: AMC Matador
Predicate: assembly
Object: Thames, New Zealand

Triple: ['__subject__ AMC Matador __predicate__ bodyStyle __object__ Coupé']
Text: The AMC Matador has a Coupé style body.
Subject: AMC Matador
Predicate: bodyStyle
Object: Coupé

Triple: ['__subject__ AMC Matador __predicate__ bodyStyle __object__ Coupé']
Text: The AMC Matador is a Coupé.
Subject: AMC Matador
Predicate: bodyStyle
Object: Coupé

Triple: ['__subject__ AMC Matador __predicate__ bodyStyle __object__ Coupé']
Text: The AMC Matador's body style is Coupé.
Subject: AMC Matador
Predicate: bodyStyle
Object: Coupé

Triple: ['__subject__ AMC Matador __predicate__ bodyStyle __object__ Hardtop']
Text: The AMC Matador has a hardtop.
Subject: AMC Matador
Predicate: bodyStyle
Object: Hardtop

Triple: ['__subject__ AMC Matador __predicate__ bodyStyle __object__ Station wagon']
Text: The AMC Matador has a station wagon style body.
Subject: AMC Matador
Predicate: bodyStyle
Object: Station wagon

Triple: ['__subject__ AMC Matador __predicate__ bodyStyle __object__ Station wagon']
Text: The AMC Matador's body style is station wagon.
Subject: AMC Matador
Predicate: bodyStyle
Object: Station wagon

Triple: ['__subject__ AMC Matador __predicate__ bodyStyle __object__ Station wagon']
Text: The AMC Matador is a station wagon.
Subject: AMC Matador
Predicate: bodyStyle
Object: Station wagon

Triple: ['__subject__ AMC Matador __predicate__ class __object__ Full-size car']
Text: The AMC Matador is considered a full-size car.
Subject: AMC Matador
Predicate: class
Object: Full-size car

Triple: ['__subject__ AMC Matador __predicate__ class __object__ Full-size car']
Text: AMC Matador is a full-size class of car.
Subject: AMC Matador
Predicate: class
Object: Full-size car

Triple: ['__subject__ AMC Matador __predicate__ class __object__ Full-size car']
Text: The AMC Matador is a Full-size car.
Subject: AMC Matador
Predicate: class
Object: Full-size car

Triple: ['__subject__ AMC Matador __predicate__ class __object__ Mid-size car']
Text: The AMC Matador is classed as a mid-size car.
Subject: AMC Matador
Predicate: class
Object: Mid-size car

Triple: ['__subject__ AMC Matador __predicate__ class __object__ Mid-size car']
Text: The AMC Matador is a mid-size car.
Subject: AMC Matador
Predicate: class
Object: Mid-size car

Triple: ['__subject__ AMC Matador __predicate__ class __object__ Mid-size car']
Text: The AMC Matador is in the mid-size car class.
Subject: AMC Matador
Predicate: class
Object: Mid-size car

Triple: ['__subject__ AMC Matador __predicate__ designer __object__ Richard A. Teague']
Text: Richard A. Teague designed the AMC Matador.
Subject: AMC Matador
Predicate: designer
Object: Richard A. Teague

Triple: ['__subject__ AMC Matador __predicate__ designer __object__ Richard A. Teague']
Text: The AMC Matador was designed by Richard A Teague.
Subject: AMC Matador
Predicate: designer
Object: Richard A. Teague

Triple: ['__subject__ AMC Matador __predicate__ designer __object__ Richard A. Teague']
Text: Richard A. Teague is the designer of the AMC Matador.
Subject: AMC Matador
Predicate: designer
Object: Richard A. Teague

Triple: ['__subject__ AMC Matador __predicate__ engine __object__ AMC V8 engine']
Text: The AMC Matador has a AMC V8 engine.
Subject: AMC Matador
Predicate: engine
Object: AMC V8 engine

Triple: ['__subject__ AMC Matador __predicate__ engine __object__ AMC V8 engine']
Text: The AMC Matador is equipped with an AMC V8 engine.
Subject: AMC Matador
Predicate: engine
Object: AMC V8 engine

Triple: ['__subject__ AMC Matador __predicate__ engine __object__ AMC straight-6 engine']
Text: The AMC Matador has an AMC straight-6 engine.
Subject: AMC Matador
Predicate: engine
Object: AMC straight-6 engine

Triple: ['__subject__ AMC Matador __predicate__ manufacturer __object__ American Motors']
Text: AMC Matador is manufactured by American Motors.
Subject: AMC Matador
Predicate: manufacturer
Object: American Motors

Triple: ['__subject__ AMC Matador __predicate__ manufacturer __object__ American Motors']
Text: The AMC Matador is manufactured by American Motors.
Subject: AMC Matador
Predicate: manufacturer
Object: American Motors

Triple: ['__subject__ AMC Matador __predicate__ modelYears __object__ 1971']
Text: 1971 is one of the model years of the AMC Matador.
Subject: AMC Matador
Predicate: modelYears
Object: 1971

Triple: ['__subject__ AMC Matador __predicate__ modelYears __object__ 1971']
Text: The AMC Matador model was manufactured during 1971.
Subject: AMC Matador
Predicate: modelYears
Object: 1971

Triple: ['__subject__ AMC Matador __predicate__ modelYears __object__ 1974']
Text: 1974 is one of the model years of the AMC Matador.
Subject: AMC Matador
Predicate: modelYears
Object: 1974

Triple: ['__subject__ AMC Matador __predicate__ modelYears __object__ 1974']
Text: The AMC Matador is available in a 1974 model.
Subject: AMC Matador
Predicate: modelYears
Object: 1974

Triple: ['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ builder __object__ Cammell Laird']
Text: The ARA Veinticinco de Mayo (V-2) was built by Cammell Laird.
Subject: ARA Veinticinco de Mayo (V-2)
Predicate: builder
Object: Cammell Laird

Triple: ['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ builder __object__ Cammell Laird']
Text: The ARA Veinticinco de Mayo (V-2) is built by Cammell Laird.
Subject: ARA Veinticinco de Mayo (V-2)
Predicate: builder
Object: Cammell Laird

Triple: ['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ country __object__ Argentina']
Text: ARA Veinticinco de Mayo (V-2) derives from Argentina.
Subject: ARA Veinticinco de Mayo (V-2)
Predicate: country
Object: Argentina

Triple: ['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ country __object__ Argentina']
Text: The ARA Veinticinco de Mayo (V-2) is from Argentina.
Subject: ARA Veinticinco de Mayo (V-2)
Predicate: country
Object: Argentina

Triple: ['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ country __object__ Argentina']
Text: Argentina is where the ARA Veinticinco de Mayo (V-2) comes from.
Subject: ARA Veinticinco de Mayo (V-2)
Predicate: country
Object: Argentina

Triple: ['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ country __object__ Argentina']
Text: The ARA Veinticinco De mayo (V-2) comes from Argentina.
Subject: ARA Veinticinco de Mayo (V-2)
Predicate: country
Object: Argentina

Triple: ['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ length __object__ 192000.0 (millimetres)']
Text: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long.
Subject: ARA Veinticinco de Mayo (V-2)
Predicate: length
Object: 192000.0 (millimetres)

Triple: ['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ length __object__ 192000.0 (millimetres)']
Text: The length of the ARA Veinticinco is 192000.0 millimetres.
Subject: ARA Veinticinco de Mayo (V-2)
Predicate: length
Object: 192000.0 (millimetres)

Triple: ['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ length __object__ 192000.0 (millimetres)']
Text: The length of the ARA Veinticinco de Mayo is 192000 millimetres.
Subject: ARA Veinticinco de Mayo (V-2)
Predicate: length
Object: 192000.0 (millimetres)

Triple: ['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ shipBeam __object__ 24.4']
Text: The ARA Veinticinco de Mayo V-2 ship's beam measures 24.4.
Subject: ARA Veinticinco de Mayo (V-2)
Predicate: shipBeam
Object: 24.4

Triple: ['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ shipBeam __object__ 24.4']
Text: The ARA Veinticinco de Mayo (V-2) has a ship beam length of 24.4.
Subject: ARA Veinticinco de Mayo (V-2)
Predicate: shipBeam
Object: 24.4

Triple: ['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ status __object__ Provided spare parts for NAeL Minas Geraisand and remainder was scrapped in 2000']
Text: The ARA Veinticinco de Mayo (V-2) provided spare parts for NaeL Minas Geraisand and the remainder was scrapped in 2000.
Subject: ARA Veinticinco de Mayo (V-2)
Predicate: status
Object: Provided spare parts for NAeL Minas Geraisand and remainder was scrapped in 2000

Triple: ['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ status __object__ Provided spare parts for NAeL Minas Geraisand and remainder was scrapped in 2000']
Text: The ARA Veinticinco de Mayo (V-2) provided spare parts for the Nael Minas Geraisand but the remainder was scrapped in 2000.
Subject: ARA Veinticinco de Mayo (V-2)
Predicate: status
Object: Provided spare parts for NAeL Minas Geraisand and remainder was scrapped in 2000

Triple: ['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ status __object__ Provided spare parts for NAeL Minas Geraisand and remainder was scrapped in 2000']
Text: ARA Veinticinco de Mayo (V-2) has provided spare parts for NAeL Minas Geraisand with the remainder being scrapped in 2000.
Subject: ARA Veinticinco de Mayo (V-2)
Predicate: status
Object: Provided spare parts for NAeL Minas Geraisand and remainder was scrapped in 2000

Triple: ['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ status __object__ Sold to Argentina 15 October 1968']
Text: ARA Veinticinco de Mayo (V-2) was sold to Argentina 15 October 1968.
Subject: ARA Veinticinco de Mayo (V-2)
Predicate: status
Object: Sold to Argentina 15 October 1968

Triple: ['__subject__ ARA Veinticinco de Mayo (V-2) __predicate__ status __object__ Sold to Argentina 15 October 1968']
Text: The ARA Veinticinco de Mayo (V-2) was sold to Argentina on October 15, 1968.
Subject: ARA Veinticinco de Mayo (V-2)
Predicate: status
Object: Sold to Argentina 15 October 1968

Triple: ['__subject__ Abarth __predicate__ foundationPlace __object__ Bologna']
Text: The Abarth company was founded in Bologna.
Subject: Abarth
Predicate: foundationPlace
Object: Bologna

Triple: ['__subject__ Abarth __predicate__ foundationPlace __object__ Bologna']
Text: The foundation place of Abarth is Bologna.
Subject: Abarth
Predicate: foundationPlace
Object: Bologna

Triple: ['__subject__ Abarth __predicate__ foundationPlace __object__ Italy']
Text: Abarth was founded in Italy.
Subject: Abarth
Predicate: foundationPlace
Object: Italy

Triple: ['__subject__ Abarth __predicate__ foundationPlace __object__ Italy']
Text: The Abarth foundation was founded in Italy.
Subject: Abarth
Predicate: foundationPlace
Object: Italy

Triple: ['__subject__ Abarth __predicate__ foundedBy __object__ Carlo Abarth']
Text: Abarth was founded by Carlo Abarth.
Subject: Abarth
Predicate: foundedBy
Object: Carlo Abarth

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Two door coupé']
Text: Two door coupe is the body style of the Abarth 1000 GT Coupé.
Subject: Abarth 1000 GT Coupé
Predicate: bodyStyle
Object: Two door coupé

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Two door coupé']
Text: Abarth 1000 GT Coupé is a two door coupé.
Subject: Abarth 1000 GT Coupé
Predicate: bodyStyle
Object: Two door coupé

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Two door coupé']
Text: The Abarth 1000 GT Coupe is a two door model.
Subject: Abarth 1000 GT Coupé
Predicate: bodyStyle
Object: Two door coupé

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Coupé']
Text: The Abarth 1000 GT has a coupe bodystyle.
Subject: Abarth 1000 GT Coupé
Predicate: bodyStyle
Object: Coupé

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Coupé']
Text: The Abarth 1000 GT has a Coupé body style.
Subject: Abarth 1000 GT Coupé
Predicate: bodyStyle
Object: Coupé

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ bodyStyle __object__ Coupé']
Text: The Abarth 1000 GT Coupe has a Coupe body style.
Subject: Abarth 1000 GT Coupé
Predicate: bodyStyle
Object: Coupé

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ designCompany __object__ Gruppo Bertone']
Text: The Abarth 1000 GT Coupe was designed by Gruppo Bertone.
Subject: Abarth 1000 GT Coupé
Predicate: designCompany
Object: Gruppo Bertone

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ designCompany __object__ Gruppo Bertone']
Text: Gruppo Bertone was the designer of the Abarth 1000 GT Coupe.
Subject: Abarth 1000 GT Coupé
Predicate: designCompany
Object: Gruppo Bertone

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ designCompany __object__ Gruppo Bertone']
Text: The Abarth 1000 GT Coupé was designed by Gruppo Bertone.
Subject: Abarth 1000 GT Coupé
Predicate: designCompany
Object: Gruppo Bertone

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ manufacturer __object__ Abarth']
Text: Abarth is the manufacturer of the Abarth 1000 GT Coupé.
Subject: Abarth 1000 GT Coupé
Predicate: manufacturer
Object: Abarth

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ manufacturer __object__ Abarth']
Text: The Abarth 1000 GT Coupe was made by Abarth.
Subject: Abarth 1000 GT Coupé
Predicate: manufacturer
Object: Abarth

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ manufacturer __object__ Abarth']
Text: Abarth are the manufacturers of the Abarth 1000 GT Coupé.
Subject: Abarth 1000 GT Coupé
Predicate: manufacturer
Object: Abarth

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ productionStartYear __object__ 1958']
Text: The Abarth 1000 GT Coupe 's production started in 1958.
Subject: Abarth 1000 GT Coupé
Predicate: productionStartYear
Object: 1958

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ productionStartYear __object__ 1958']
Text: Production of the Abarth 1000 GT Coupe began in 1958.
Subject: Abarth 1000 GT Coupé
Predicate: productionStartYear
Object: 1958

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ productionStartYear __object__ 1958']
Text: The production of the Abarth 1000 GT has started in the Year 1958.
Subject: Abarth 1000 GT Coupé
Predicate: productionStartYear
Object: 1958

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ wheelbase __object__ 2160.0 (millimetres)']
Text: The wheelbase of the Abarth 1000 GT Coupé, is 2160.0 millimetres.
Subject: Abarth 1000 GT Coupé
Predicate: wheelbase
Object: 2160.0 (millimetres)

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ wheelbase __object__ 2160.0 (millimetres)']
Text: The wheelbase of the Abarth 1000 GT Coupe is 2160 millimetres.
Subject: Abarth 1000 GT Coupé
Predicate: wheelbase
Object: 2160.0 (millimetres)

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ wheelbase __object__ 2160.0 (millimetres)']
Text: The Abarth 1000 GT Coupe has a wheelbase of 2160 millimetres.
Subject: Abarth 1000 GT Coupé
Predicate: wheelbase
Object: 2160.0 (millimetres)

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ width __object__ 1.55']
Text: The Abarth 1000 GT Coupé has a width of 1.55 m.
Subject: Abarth 1000 GT Coupé
Predicate: width
Object: 1.55

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ width __object__ 1.55']
Text: The Abarth 1000 GT Coupé is 1.55 metres wide.
Subject: Abarth 1000 GT Coupé
Predicate: width
Object: 1.55

Triple: ['__subject__ Abarth 1000 GT Coupé __predicate__ width __object__ 1.55']
Text: The Abarth 1000 GT Coupe is 1.55 metres in width.
Subject: Abarth 1000 GT Coupé
Predicate: width
Object: 1.55

Triple: ['__subject__ Acura TLX __predicate__ assembly __object__ Marysville, Ohio']
Text: The Acura TLX is assembled in Marysville, Ohio.
Subject: Acura TLX
Predicate: assembly
Object: Marysville, Ohio

Triple: ['__subject__ Acura TLX __predicate__ assembly __object__ Marysville, Ohio']
Text: The Acura TLX was assembled in Marysville, Ohio.
Subject: Acura TLX
Predicate: assembly
Object: Marysville, Ohio

Triple: ['__subject__ Acura TLX __predicate__ assembly __object__ Marysville Auto Plant']
Text: The Acura TLX is made at the Marysville Auto Plant.
Subject: Acura TLX
Predicate: assembly
Object: Marysville Auto Plant

Triple: ['__subject__ Acura TLX __predicate__ assembly __object__ Marysville Auto Plant']
Text: The Acura TLX assembly line is located at the Marysville Auto Plant.
Subject: Acura TLX
Predicate: assembly
Object: Marysville Auto Plant

Triple: ['__subject__ Acura TLX __predicate__ assembly __object__ Marysville Auto Plant']
Text: Acura TLX is assembled at the Marysville Auto Plant.
Subject: Acura TLX
Predicate: assembly
Object: Marysville Auto Plant

Triple: ['__subject__ Acura TLX __predicate__ class __object__ Luxury vehicle']
Text: Acura TLX is a luxury class of vehicle.
Subject: Acura TLX
Predicate: class
Object: Luxury vehicle

Triple: ['__subject__ Acura TLX __predicate__ class __object__ Luxury vehicle']
Text: The Acura TLX is a luxury vehicle.
Subject: Acura TLX
Predicate: class
Object: Luxury vehicle

Triple: ['__subject__ Acura TLX __predicate__ class __object__ Mid-size car']
Text: The Acura TLX is mid-size class of car.
Subject: Acura TLX
Predicate: class
Object: Mid-size car

Triple: ['__subject__ Acura TLX __predicate__ class __object__ Mid-size car']
Text: The Acura TLX is a mid-size car.
Subject: Acura TLX
Predicate: class
Object: Mid-size car

Triple: ['__subject__ Acura TLX __predicate__ class __object__ Mid-size car']
Text: The Acura TLX is classed as a mid-size car.
Subject: Acura TLX
Predicate: class
Object: Mid-size car

Triple: ['__subject__ Acura TLX __predicate__ engine __object__ 2.4 (litres)']
Text: The Acura TLX has a 2.4 litre engine.
Subject: Acura TLX
Predicate: engine
Object: 2.4 (litres)

Triple: ['__subject__ Acura TLX __predicate__ engine __object__ Honda J engine']
Text: The Acura TLX has a Honda J engine.
Subject: Acura TLX
Predicate: engine
Object: Honda J engine

Triple: ['__subject__ Acura TLX __predicate__ engine __object__ Honda J engine']
Text: The Acura TLX's engine type is the Honda J.
Subject: Acura TLX
Predicate: engine
Object: Honda J engine

Triple: ['__subject__ Acura TLX __predicate__ engine __object__ Inline-four engine']
Text: The Acura TLX has an Inline-four engine.
Subject: Acura TLX
Predicate: engine
Object: Inline-four engine

Triple: ['__subject__ Acura TLX __predicate__ engine __object__ V6 engine']
Text: The Acura TLX has a V6 engine.
Subject: Acura TLX
Predicate: engine
Object: V6 engine

Triple: ['__subject__ Acura TLX __predicate__ layout __object__ front-wheel drive / all-wheel drive']
Text: The Acura TLX has front-wheel and all-wheel drive.
Subject: Acura TLX
Predicate: layout
Object: front-wheel drive / all-wheel drive

Triple: ['__subject__ Acura TLX __predicate__ layout __object__ Front-engine design']
Text: The Acura TLX has a front engine design.
Subject: Acura TLX
Predicate: layout
Object: Front-engine design

Triple: ['__subject__ Acura TLX __predicate__ layout __object__ Front-engine design']
Text: The Acura TLX had a front engine design layout.
Subject: Acura TLX
Predicate: layout
Object: Front-engine design

Triple: ['__subject__ Acura TLX __predicate__ layout __object__ Front-engine design']
Text: The layout of the Acura TLX is one of front engine design.
Subject: Acura TLX
Predicate: layout
Object: Front-engine design

Triple: ['__subject__ Acura TLX __predicate__ layout __object__ Front-wheel drive']
Text: The Acura TLX has a front-wheel drive.
Subject: Acura TLX
Predicate: layout
Object: Front-wheel drive

Triple: ['__subject__ Acura TLX __predicate__ layout __object__ Front-wheel drive']
Text: The Acura TLX is a front wheel drive vehicle.
Subject: Acura TLX
Predicate: layout
Object: Front-wheel drive

Triple: ['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda']
Text: Honda is the manufacturer of the Acura TLX.
Subject: Acura TLX
Predicate: manufacturer
Object: Honda

Triple: ['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda']
Text: The Acura TLX is manufactured by Honda.
Subject: Acura TLX
Predicate: manufacturer
Object: Honda

Triple: ['__subject__ Acura TLX __predicate__ manufacturer __object__ Honda']
Text: Honda makes the Acura TLX.
Subject: Acura TLX
Predicate: manufacturer
Object: Honda

Triple: ['__subject__ Airbus Defence and Space __predicate__ parentCompany __object__ Airbus Group']
Text: The Airbus Group is the parent company of Airbus Defence and Space.
Subject: Airbus Defence and Space
Predicate: parentCompany
Object: Airbus Group

Triple: ['__subject__ Airbus Defence and Space __predicate__ parentCompany __object__ Airbus Group']
Text: Airbus Group is the parent company of Airbus Defence & Space.
Subject: Airbus Defence and Space
Predicate: parentCompany
Object: Airbus Group

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Arctech Helsinki Shipyard']
Text: Arctech Helsinki Shipyard built the icebreaker, Aleksey Chirikov.
Subject: Aleksey Chirikov (icebreaker)
Predicate: builder
Object: Arctech Helsinki Shipyard

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Arctech Helsinki Shipyard']
Text: The icebreaker Aleksey Chirikov was built at the Arctech Helsinki Shipyard.
Subject: Aleksey Chirikov (icebreaker)
Predicate: builder
Object: Arctech Helsinki Shipyard

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Finland']
Text: Finland is the builder of the icebreaker called the Aleksey Chirikov.
Subject: Aleksey Chirikov (icebreaker)
Predicate: builder
Object: Finland

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Finland']
Text: The icebreaker Aleksey Chirikov was built in Finland.
Subject: Aleksey Chirikov (icebreaker)
Predicate: builder
Object: Finland

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Finland']
Text: The icebreaker ship Aleksey Chirikov was built in Finland.
Subject: Aleksey Chirikov (icebreaker)
Predicate: builder
Object: Finland

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Helsinki']
Text: The builder of the icebreaker, Aleksey Chirikov, is in Helsinki.
Subject: Aleksey Chirikov (icebreaker)
Predicate: builder
Object: Helsinki

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ builder __object__ Helsinki']
Text: The icebreaker Aleksey Chirikov was built in Helsinki.
Subject: Aleksey Chirikov (icebreaker)
Predicate: builder
Object: Helsinki

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ length __object__ 99.83']
Text: The icebreaker Aleksey Chirikov is 99.83 long.
Subject: Aleksey Chirikov (icebreaker)
Predicate: length
Object: 99.83

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ length __object__ 99.83']
Text: The icebreaker Aleksey Chirikov is 99.83 metres long.
Subject: Aleksey Chirikov (icebreaker)
Predicate: length
Object: 99.83

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ length __object__ 99.83']
Text: An icebreaker, the Aleksey Chirikov, has a length of 99.83 metres.
Subject: Aleksey Chirikov (icebreaker)
Predicate: length
Object: 99.83

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ operator __object__ Sovcomflot']
Text: Sovcomflot operates the icebreaker, Aleksey Chirikov.
Subject: Aleksey Chirikov (icebreaker)
Predicate: operator
Object: Sovcomflot

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ powerType __object__ Wärtsilä']
Text: The icebreaker Aleksey Chirikov has a Wartsila power type.
Subject: Aleksey Chirikov (icebreaker)
Predicate: powerType
Object: Wärtsilä

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ powerType __object__ Wärtsilä']
Text: The powertype of the Aleksey Chirikow icebreaker is Wärtsilä.
Subject: Aleksey Chirikov (icebreaker)
Predicate: powerType
Object: Wärtsilä

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ powerType __object__ Wärtsilä']
Text: Aleksey Chirikov (icebreaker) is Wärtsilä powered.
Subject: Aleksey Chirikov (icebreaker)
Predicate: powerType
Object: Wärtsilä

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ shipBeam __object__ 21.2']
Text: The Icebreaker, Aleksey Chirikov's ship beam is 21.2.
Subject: Aleksey Chirikov (icebreaker)
Predicate: shipBeam
Object: 21.2

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ shipBeam __object__ 21.2']
Text: The icebreaker, Aleksey Chirikov has a ship beam of 21.2 m.
Subject: Aleksey Chirikov (icebreaker)
Predicate: shipBeam
Object: 21.2

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ shipBeam __object__ 21.2']
Text: The Aleksey Chirikov (icebreaker) has a 21.2 m long ship beam.
Subject: Aleksey Chirikov (icebreaker)
Predicate: shipBeam
Object: 21.2

Triple: ['__subject__ Aleksey Chirikov (icebreaker) __predicate__ status __object__ In service']
Text: The Aleksey Chirikov (icebreaker) is in service.
Subject: Aleksey Chirikov (icebreaker)
Predicate: status
Object: In service

Triple: ['__subject__ Alfa Romeo 164 __predicate__ alternativeName __object__ Alfa Romeo 168']
Text: The alternative name of the Alfa Romeo 164 is the Alfa Romeo 168.
Subject: Alfa Romeo 164
Predicate: alternativeName
Object: Alfa Romeo 168

Triple: ['__subject__ Alfa Romeo 164 __predicate__ alternativeName __object__ Alfa Romeo 168']
Text: The Alfa Romeo 164 is also known as the "Alfa Romeo 168".
Subject: Alfa Romeo 164
Predicate: alternativeName
Object: Alfa Romeo 168

Triple: ['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Italy']
Text: The Alfa Romeo 164's assembly line is in Italy.
Subject: Alfa Romeo 164
Predicate: assembly
Object: Italy

Triple: ['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Italy']
Text: The Alfa Romeo 164 was assembled in Italy.
Subject: Alfa Romeo 164
Predicate: assembly
Object: Italy

Triple: ['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Italy']
Text: The Alfa Romeo 164 is assembled in Italy.
Subject: Alfa Romeo 164
Predicate: assembly
Object: Italy

Triple: ['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Milan']
Text: The Alfa Romeo 164 was assembled in Milan.
Subject: Alfa Romeo 164
Predicate: assembly
Object: Milan

Triple: ['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Milan']
Text: The assembly line of the Alfa Romeo 164 is in Milan.
Subject: Alfa Romeo 164
Predicate: assembly
Object: Milan

Triple: ['__subject__ Alfa Romeo 164 __predicate__ assembly __object__ Milan']
Text: The Alfa Romeo 164 is assembled in Milan.
Subject: Alfa Romeo 164
Predicate: assembly
Object: Milan

Triple: ['__subject__ Alfa Romeo 164 __predicate__ bodyStyle __object__ Sedan (automobile)']
Text: The Alfa Romeo 164 has a Sedan body style.
Subject: Alfa Romeo 164
Predicate: bodyStyle
Object: Sedan (automobile)

Triple: ['__subject__ Alfa Romeo 164 __predicate__ bodyStyle __object__ Sedan (automobile)']
Text: The bodystyle of the Alfa Romeo 164 is Sedan.
Subject: Alfa Romeo 164
Predicate: bodyStyle
Object: Sedan (automobile)

Triple: ['__subject__ Alfa Romeo 164 __predicate__ bodyStyle __object__ Sedan (automobile)']
Text: The Alfa Romeo 164 is a sedan.
Subject: Alfa Romeo 164
Predicate: bodyStyle
Object: Sedan (automobile)

Triple: ['__subject__ Alfa Romeo 164 __predicate__ class __object__ Mid-size luxury / Executive car']
Text: The Alfa Romeo 164 is considered a mid-size luxury executive car.
Subject: Alfa Romeo 164
Predicate: class
Object: Mid-size luxury / Executive car

Triple: ['__subject__ Alfa Romeo 164 __predicate__ class __object__ Luxury vehicle']
Text: The Alfa Romeo 164 is a luxury vehicle.
Subject: Alfa Romeo 164
Predicate: class
Object: Luxury vehicle

Triple: ['__subject__ Alfa Romeo 164 __predicate__ class __object__ Luxury vehicle']
Text: The Alfa Romeo 164 is a Luxury class vehicle.
Subject: Alfa Romeo 164
Predicate: class
Object: Luxury vehicle

Triple: ['__subject__ Alfa Romeo 164 __predicate__ engine __object__ 2.5 (litres)']
Text: The Engine of an Alfa Romeo 164 is 2.5 litres.
Subject: Alfa Romeo 164
Predicate: engine
Object: 2.5 (litres)

Triple: ['__subject__ Alfa Romeo 164 __predicate__ engine __object__ 2.5 (litres)']
Text: The Alfa Romeo 164 has a 2.5 litre engine.
Subject: Alfa Romeo 164
Predicate: engine
Object: 2.5 (litres)

Triple: ['__subject__ Alfa Romeo 164 __predicate__ engine __object__ 2.5 (litres)']
Text: The Alfa Romeo 164's engine can hold 2.5 litres.
Subject: Alfa Romeo 164
Predicate: engine
Object: 2.5 (litres)

Triple: ['__subject__ Alfa Romeo 164 __predicate__ engine __object__ Straight-four engine']
Text: The Alfa Romeo 164 has a Straight four engine.
Subject: Alfa Romeo 164
Predicate: engine
Object: Straight-four engine

Triple: ['__subject__ Alfa Romeo 164 __predicate__ engine __object__ Straight-four engine']
Text: The Alfa Romeo 164 has a straight-four engine.
Subject: Alfa Romeo 164
Predicate: engine
Object: Straight-four engine

Triple: ['__subject__ Alfa Romeo 164 __predicate__ engine __object__ Straight-four engine']
Text: The Alfa Romeo 164 engine is also known as a straight-four engine.
Subject: Alfa Romeo 164
Predicate: engine
Object: Straight-four engine

Triple: ['__subject__ Alfa Romeo 164 __predicate__ engine __object__ V6 engine']
Text: The Alfa Romeo 164 has a V6 engine.
Subject: Alfa Romeo 164
Predicate: engine
Object: V6 engine

Triple: ['__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Saab 9000']
Text: The Alfa Romeo 164 and the Saab 9000 are related means of transport in that they are both cars.
Subject: Alfa Romeo 164
Predicate: relatedMeanOfTransportation
Object: Saab 9000

Triple: ['__subject__ Alfa Romeo 164 __predicate__ relatedMeanOfTransportation __object__ Saab 9000']
Text: The Alfa Romeo 164 and the Saab 9000 are similar means of transport.
Subject: Alfa Romeo 164
Predicate: relatedMeanOfTransportation
Object: Saab 9000

Triple: ['__subject__ Alfa Romeo 164 __predicate__ transmission __object__ 4-speed automatic (ZF 4HP18Q)']
Text: The Alfa Romeo 164 has a 4-speed automatic (ZF 4HP18Q) transmission.
Subject: Alfa Romeo 164
Predicate: transmission
Object: 4-speed automatic (ZF 4HP18Q)

Triple: ['__subject__ Alfa Romeo 164 __predicate__ transmission __object__ 4-speed automatic (ZF 4HP18Q)']
Text: The Alfa Romeo 164 has a 4-speed automatic ZF 4HP18Q transmission.
Subject: Alfa Romeo 164
Predicate: transmission
Object: 4-speed automatic (ZF 4HP18Q)

Triple: ['__subject__ Alfa Romeo 164 __predicate__ transmission __object__ 5-speed manual']
Text: The Alfa Romeo 164 has a 5 speed manual transmission.
Subject: Alfa Romeo 164
Predicate: transmission
Object: 5-speed manual

Triple: ['__subject__ Alfa Romeo 164 __predicate__ transmission __object__ 5-speed manual']
Text: The Alfa Romeo 164 has a 5-speed manual transmission.
Subject: Alfa Romeo 164
Predicate: transmission
Object: 5-speed manual

Triple: ['__subject__ Alfa Romeo 164 __predicate__ transmission __object__ 5-speed manual']
Text: Alfa Romeo 164's transmission is a 5 speed manual.
Subject: Alfa Romeo 164
Predicate: transmission
Object: 5-speed manual

Triple: ['__subject__ Alfa Romeo 164 __predicate__ transmission __object__ 6-speed manual (Getrag)']
Text: The Alfa Romeo 164 has a 6-speed manual Getrag transmission.
Subject: Alfa Romeo 164
Predicate: transmission
Object: 6-speed manual (Getrag)

Triple: ['__subject__ Alhambra __predicate__ length __object__ 63800.0 (millimetres)']
Text: The Alhambra was 63800.0 millimetres long.
Subject: Alhambra
Predicate: length
Object: 63800.0 (millimetres)

Triple: ['__subject__ Alhambra __predicate__ length __object__ 63800.0 (millimetres)']
Text: The Alhambra had the length of 63800.0 millimetres.
Subject: Alhambra
Predicate: length
Object: 63800.0 (millimetres)

Triple: ['__subject__ Alhambra __predicate__ length __object__ 63800.0 (millimetres)']
Text: The Alhambra is 63800.0 millimetres long.
Subject: Alhambra
Predicate: length
Object: 63800.0 (millimetres)

Triple: ['__subject__ Alhambra __predicate__ owner __object__ P&O (company)']
Text: Alhambra is owned by the P & O company.
Subject: Alhambra
Predicate: owner
Object: P&O (company)

Triple: ['__subject__ Alhambra __predicate__ owner __object__ P&O (company)']
Text: The Alhambra is owned by P&O.
Subject: Alhambra
Predicate: owner
Object: P&O (company)

Triple: ['__subject__ Alhambra __predicate__ powerType __object__ Humphrys, Tennant and Dykes']
Text: The Alhambra is powered by a Humphrys, Tennant and Dykes engine.
Subject: Alhambra
Predicate: powerType
Object: Humphrys, Tennant and Dykes

Triple: ['__subject__ Alhambra __predicate__ powerType __object__ Humphrys, Tennant and Dykes']
Text: The Alhambra has a Humphrys, Tennant and Dykes power type.
Subject: Alhambra
Predicate: powerType
Object: Humphrys, Tennant and Dykes

Triple: ['__subject__ Alhambra __predicate__ shipLaunch __object__ 1855-05-31']
Text: The ship Alhambra was launched on the 31st May 1855.
Subject: Alhambra
Predicate: shipLaunch
Object: 1855-05-31

Triple: ['__subject__ Alhambra __predicate__ shipLaunch __object__ 1855-05-31']
Text: The Alhambra was launched on 1855-05-31.
Subject: Alhambra
Predicate: shipLaunch
Object: 1855-05-31

Triple: ['__subject__ Alhambra __predicate__ shipLaunch __object__ 1855-05-31']
Text: The Alhambra was launched on 31st May 1855.
Subject: Alhambra
Predicate: shipLaunch
Object: 1855-05-31

Triple: ['__subject__ Alhambra __predicate__ shipPower __object__ Geared steam engine Humphrys, Tennant and Dykes 140hp']
Text: The ship Alhambra was powered by a Humphrys, Tennant and Dykes 140hp geared steam engine.
Subject: Alhambra
Predicate: shipPower
Object: Geared steam engine Humphrys, Tennant and Dykes 140hp

Triple: ['__subject__ Alhambra __predicate__ shipPower __object__ Geared steam engine Humphrys, Tennant and Dykes 140hp']
Text: The power of the ship Alhambra was by a geared steam engine Humphrys, Tennant and Dykes 140hp.
Subject: Alhambra
Predicate: shipPower
Object: Geared steam engine Humphrys, Tennant and Dykes 140hp

Triple: ['__subject__ Alhambra __predicate__ shipPower __object__ Geared steam engine Humphrys, Tennant and Dykes 140hp']
Text: The Alhambra had a Geared steam engine Humphrys, Tennant and Dykes 140hp.
Subject: Alhambra
Predicate: shipPower
Object: Geared steam engine Humphrys, Tennant and Dykes 140hp

Triple: ['__subject__ Alliant Techsystems __predicate__ product __object__ AGM-88 HARM']
Text: The AgM-88 HARM is produced by Alliant Techsystems.
Subject: Alliant Techsystems
Predicate: product
Object: AGM-88 HARM

Triple: ['__subject__ Alliant Techsystems __predicate__ product __object__ AGM-88 HARM']
Text: AGM-88 HARM is produced by Alliant Techsystems.
Subject: Alliant Techsystems
Predicate: product
Object: AGM-88 HARM

Triple: ['__subject__ Alliant Techsystems __predicate__ product __object__ XM25 CDTE']
Text: The Alliant Techsystems produces the XM25-CDTE.
Subject: Alliant Techsystems
Predicate: product
Object: XM25 CDTE

Triple: ['__subject__ Alliant Techsystems __predicate__ product __object__ XM25 CDTE']
Text: Alliant Techsystems produces the XM25 CDTE.
Subject: Alliant Techsystems
Predicate: product
Object: XM25 CDTE

Triple: ['__subject__ Alvis Car and Engineering Company __predicate__ foundationPlace __object__ Coventry']
Text: The Alvis Car and Engineering Company was founded in Coventry.
Subject: Alvis Car and Engineering Company
Predicate: foundationPlace
Object: Coventry

Triple: ['__subject__ Alvis Car and Engineering Company __predicate__ foundationPlace __object__ Coventry']
Text: Alvis Car and Engineering Company was founded in Coventry.
Subject: Alvis Car and Engineering Company
Predicate: foundationPlace
Object: Coventry

Triple: ['__subject__ Alvis Car and Engineering Company __predicate__ city __object__ Coventry']
Text: The Alvis Car and Engineering Company is located in Coventry.
Subject: Alvis Car and Engineering Company
Predicate: city
Object: Coventry

Triple: ['__subject__ Alvis Car and Engineering Company __predicate__ city __object__ Coventry']
Text: The Alvis Car and Engineering Co. is located in Coventry.
Subject: Alvis Car and Engineering Company
Predicate: city
Object: Coventry

Triple: ['__subject__ Alvis Car and Engineering Company __predicate__ successor __object__ Rover Company']
Text: The Rover Co. succeeded the Alvis Car and Engineering Co.
Subject: Alvis Car and Engineering Company
Predicate: successor
Object: Rover Company

Triple: ['__subject__ Alvis Car and Engineering Company __predicate__ successor __object__ Rover Company']
Text: The Alvis Car and Engineering Company was succeeded by the Rover Company.
Subject: Alvis Car and Engineering Company
Predicate: successor
Object: Rover Company

Triple: ['__subject__ Alvis Speed 25 __predicate__ class __object__ Full-size luxury car']
Text: The Alvis Speed 25 is classed as a full-size luxury car.
Subject: Alvis Speed 25
Predicate: class
Object: Full-size luxury car

Triple: ['__subject__ Alvis Speed 25 __predicate__ class __object__ Full-size luxury car']
Text: The Alvis Speed 25 is a full-size luxury vehicle.
Subject: Alvis Speed 25
Predicate: class
Object: Full-size luxury car

Triple: ['__subject__ Alvis Speed 25 __predicate__ class __object__ Full-size car']
Text: The Alvis Speed 25 is classed as a Full-size car.
Subject: Alvis Speed 25
Predicate: class
Object: Full-size car

Triple: ['__subject__ Alvis Speed 25 __predicate__ class __object__ Full-size car']
Text: The Alvis Speed 25 is a full size class car.
Subject: Alvis Speed 25
Predicate: class
Object: Full-size car

Triple: ['__subject__ Alvis Speed 25 __predicate__ engine __object__ Petrol']
Text: The Alvis Speed 25 has a petrol engine.
Subject: Alvis Speed 25
Predicate: engine
Object: Petrol

Triple: ['__subject__ Alvis Speed 25 __predicate__ engine __object__ 31.48 tax horsepower']
Text: The Alvis Speed 25 has a 31.48 tax horsepower engine.
Subject: Alvis Speed 25
Predicate: engine
Object: 31.48 tax horsepower

Triple: ['__subject__ Alvis Speed 25 __predicate__ engine __object__ 31.48 tax horsepower']
Text: The Alvis Speed 25 has an engine capable of producing 31.48 tax horsepower.
Subject: Alvis Speed 25
Predicate: engine
Object: 31.48 tax horsepower

Triple: ['__subject__ Alvis Speed 25 __predicate__ engine __object__ 31.48 tax horsepower']
Text: The Alvis Speed 25 has a 31.48 tax hp engine.
Subject: Alvis Speed 25
Predicate: engine
Object: 31.48 tax horsepower

Triple: ['__subject__ Alvis Speed 25 __predicate__ engine __object__ 4387.0 (cubicCentimetres)']
Text: The Alvis Speed 25 has a 4387.00 cc engine.
Subject: Alvis Speed 25
Predicate: engine
Object: 4387.0 (cubicCentimetres)

Triple: ['__subject__ Alvis Speed 25 __predicate__ engine __object__ 4387.0 (cubicCentimetres)']
Text: The Alvis Speed 25's engine is 4387.0 cubic centimetres.
Subject: Alvis Speed 25
Predicate: engine
Object: 4387.0 (cubicCentimetres)

Triple: ['__subject__ Alvis Speed 25 __predicate__ engine __object__ 4387.0 (cubicCentimetres)']
Text: The Alvis Speed 25 has an engine of 4387 cubic centimeters.
Subject: Alvis Speed 25
Predicate: engine
Object: 4387.0 (cubicCentimetres)

Triple: ['__subject__ Alvis Speed 25 __predicate__ manufacturer __object__ Alvis Car and Engineering Company']
Text: Alvis Speed 25 was manufactured by the Alvis Car and Engineering Company.
Subject: Alvis Speed 25
Predicate: manufacturer
Object: Alvis Car and Engineering Company

Triple: ['__subject__ Alvis Speed 25 __predicate__ manufacturer __object__ Alvis Car and Engineering Company']
Text: The Alvis Speed 25 was manufactured by the Alvis Car and Engineering Company.
Subject: Alvis Speed 25
Predicate: manufacturer
Object: Alvis Car and Engineering Company

Triple: ['__subject__ Alvis Speed 25 __predicate__ manufacturer __object__ Alvis Car and Engineering Company']
Text: The Alvis Speed 25 was made by the Alvis Car and Engineering Company.
Subject: Alvis Speed 25
Predicate: manufacturer
Object: Alvis Car and Engineering Company

Triple: ['__subject__ Alvis Speed 25 __predicate__ transmission __object__ single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle']
Text: The Alvis Speed 25 has an impressive transmission coined as "single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints, spiral bevel fully floating back axle".
Subject: Alvis Speed 25
Predicate: transmission
Object: single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle

Triple: ['__subject__ Alvis Speed 25 __predicate__ transmission __object__ single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle']
Text: The Alvis Speed 25's transmission system comprises a single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints and spiral bevel fully floating back axle.
Subject: Alvis Speed 25
Predicate: transmission
Object: single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints , spiral bevel fully floating back axle

Triple: ['__subject__ Alvis Speed 25 __predicate__ wheelbase __object__ 127.0 (inches)']
Text: The Alvis Speed 25 has a wheelbase of 127 inches.
Subject: Alvis Speed 25
Predicate: wheelbase
Object: 127.0 (inches)

Triple: ['__subject__ American Locomotive Company __predicate__ foundationPlace __object__ Schenectady, New York']
Text: The American Locomotive Company was founded in Schenectady, New York.
Subject: American Locomotive Company
Predicate: foundationPlace
Object: Schenectady, New York

Triple: ['__subject__ American Locomotive Company __predicate__ foundationPlace __object__ Schenectady, New York']
Text: The foundation place of the American Locomotive Company is Schenectady, New York.
Subject: American Locomotive Company
Predicate: foundationPlace
Object: Schenectady, New York

Triple: ['__subject__ American Locomotive Company __predicate__ foundationPlace __object__ United States']
Text: The American Locomotive Company was founded in the United States.
Subject: American Locomotive Company
Predicate: foundationPlace
Object: United States

Triple: ['__subject__ American Locomotive Company __predicate__ country __object__ United States']
Text: The American Locomotive Company is located in the United States.
Subject: American Locomotive Company
Predicate: country
Object: United States

Triple: ['__subject__ American Locomotive Company __predicate__ country __object__ United States']
Text: The American Locomotive Co. is located in the U.S.
Subject: American Locomotive Company
Predicate: country
Object: United States

Triple: ['__subject__ American Motors __predicate__ fate __object__ Chrysler']
Text: American Motors was acquired by Chrysler.
Subject: American Motors
Predicate: fate
Object: Chrysler

Triple: ['__subject__ American Motors __predicate__ fate __object__ Eagle (automobile)']
Text: American Motors Co was succeeded by Eagle.
Subject: American Motors
Predicate: fate
Object: Eagle (automobile)

Triple: ['__subject__ American Motors __predicate__ keyPerson __object__ Roy D. Chapin, Jr.']
Text: Roy D. Chapin Jr. is a key person at American Motors.
Subject: American Motors
Predicate: keyPerson
Object: Roy D. Chapin, Jr.

Triple: ['__subject__ American Motors __predicate__ keyPerson __object__ Roy D. Chapin, Jr.']
Text: Roy D Chapin Jr is a key person at American Motors.
Subject: American Motors
Predicate: keyPerson
Object: Roy D. Chapin, Jr.

Triple: ['__subject__ American Motors __predicate__ subsidiary __object__ Wheel Horse']
Text: The Wheel Horse is a subsidiary of American Motors.
Subject: American Motors
Predicate: subsidiary
Object: Wheel Horse

Triple: ['__subject__ American Motors __predicate__ subsidiary __object__ Wheel Horse']
Text: Wheel Horse is a subsidiary of American Motors.
Subject: American Motors
Predicate: subsidiary
Object: Wheel Horse

Triple: ['__subject__ American Motors __predicate__ successor __object__ Eagle (automobile)']
Text: American Motors successor is Eagle.
Subject: American Motors
Predicate: successor
Object: Eagle (automobile)

Triple: ['__subject__ American Motors __predicate__ successor __object__ Eagle (automobile)']
Text: Eagle succeeded American Motors.
Subject: American Motors
Predicate: successor
Object: Eagle (automobile)

Triple: ['__subject__ American Motors __predicate__ successor __object__ Eagle (automobile)']
Text: Eagle is the successor of American Motors.
Subject: American Motors
Predicate: successor
Object: Eagle (automobile)

Triple: ['__subject__ American submarine NR-1 __predicate__ builder __object__ General Dynamics Electric Boat']
Text: General Dynamics Electric Boat is the builder of the American submarine NR-1.
Subject: American submarine NR-1
Predicate: builder
Object: General Dynamics Electric Boat

Triple: ['__subject__ American submarine NR-1 __predicate__ builder __object__ General Dynamics Electric Boat']
Text: General Dynamics Electric Boat is the company that built the American submarine NR-1.
Subject: American submarine NR-1
Predicate: builder
Object: General Dynamics Electric Boat

Triple: ['__subject__ American submarine NR-1 __predicate__ builder __object__ General Dynamics Electric Boat']
Text: The American submarine NR-1 was built by General Dynamics Electric Boat Co.
Subject: American submarine NR-1
Predicate: builder
Object: General Dynamics Electric Boat

Triple: ['__subject__ American submarine NR-1 __predicate__ length __object__ 45000.0 (millimetres)']
Text: The American submarine NR-1 is 45000.0 millimetres long.
Subject: American submarine NR-1
Predicate: length
Object: 45000.0 (millimetres)

Triple: ['__subject__ American submarine NR-1 __predicate__ length __object__ 45000.0 (millimetres)']
Text: The American Sub NR-1 is 45000 millimetres in length.
Subject: American submarine NR-1
Predicate: length
Object: 45000.0 (millimetres)

Triple: ['__subject__ American submarine NR-1 __predicate__ length __object__ 45000.0 (millimetres)']
Text: The American submarine NR-1 is 45000.0 (millimetres) long.
Subject: American submarine NR-1
Predicate: length
Object: 45000.0 (millimetres)

Triple: ['__subject__ American submarine NR-1 __predicate__ shipBeam __object__ 3.8 m']
Text: The American submarine NR-1 has a 3.8m ship beam.
Subject: American submarine NR-1
Predicate: shipBeam
Object: 3.8 m

Triple: ['__subject__ American submarine NR-1 __predicate__ shipBeam __object__ 3.8 m']
Text: The American submarine NR-1 has a beam of 3.8 metres.
Subject: American submarine NR-1
Predicate: shipBeam
Object: 3.8 m

Triple: ['__subject__ American submarine NR-1 __predicate__ shipBeam __object__ 3.8 m']
Text: The American Submarine NR-1 has a ship beam of 3.8 m.
Subject: American submarine NR-1
Predicate: shipBeam
Object: 3.8 m

Triple: ['__subject__ American submarine NR-1 __predicate__ shipLaunch __object__ 1969-01-25']
Text: The American submarine NR-1 was launched in January 25th 1969.
Subject: American submarine NR-1
Predicate: shipLaunch
Object: 1969-01-25

Triple: ['__subject__ American submarine NR-1 __predicate__ shipLaunch __object__ 1969-01-25']
Text: The American sub NR-1 was launched on January 25, 1969.
Subject: American submarine NR-1
Predicate: shipLaunch
Object: 1969-01-25

Triple: ['__subject__ American submarine NR-1 __predicate__ shipLaunch __object__ 1969-01-25']
Text: The American submarine NR-1 was launched on The 25th of January 1969.
Subject: American submarine NR-1
Predicate: shipLaunch
Object: 1969-01-25

Triple: ['__subject__ American submarine NR-1 __predicate__ topSpeed __object__ 8.334']
Text: The top speed of the American submarine NR-1 is 8.334.
Subject: American submarine NR-1
Predicate: topSpeed
Object: 8.334

Triple: ['__subject__ American submarine NR-1 __predicate__ topSpeed __object__ 8.334']
Text: The American submarine, NR-1, has a top speed of 8.334 km/h.
Subject: American submarine NR-1
Predicate: topSpeed
Object: 8.334

Triple: ['__subject__ Antares (rocket) __predicate__ comparable __object__ Delta II']
Text: The rocket Antares is comparable to Delta II.
Subject: Antares (rocket)
Predicate: comparable
Object: Delta II

Triple: ['__subject__ Antares (rocket) __predicate__ comparable __object__ Delta II']
Text: The Antares rocket is comparable with the Delta II.
Subject: Antares (rocket)
Predicate: comparable
Object: Delta II

Triple: ['__subject__ Antares (rocket) __predicate__ comparable __object__ Delta II']
Text: The Antares rocket is similar to the Delta II rocket.
Subject: Antares (rocket)
Predicate: comparable
Object: Delta II

Triple: ['__subject__ Antares (rocket) __predicate__ diameter __object__ 3.9 (metres)']
Text: The Antares rocket is 3.9 m in diameter.
Subject: Antares (rocket)
Predicate: diameter
Object: 3.9 (metres)

Triple: ['__subject__ Antares (rocket) __predicate__ diameter __object__ 3.9 (metres)']
Text: The rocket, Antares, has a diametre of 3.9 metres.
Subject: Antares (rocket)
Predicate: diameter
Object: 3.9 (metres)

Triple: ['__subject__ Antares (rocket) __predicate__ diameter __object__ 3.9 (metres)']
Text: The diameter of the Antares rocket is 3.9 metres.
Subject: Antares (rocket)
Predicate: diameter
Object: 3.9 (metres)

Triple: ['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2013-09-18']
Text: The final flight of the rocket, Antares was on the 18th of September 2013.
Subject: Antares (rocket)
Predicate: finalFlight
Object: 2013-09-18

Triple: ['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2013-09-18']
Text: September 18th 2013 was the date of the final flight of the Antares rocket.
Subject: Antares (rocket)
Predicate: finalFlight
Object: 2013-09-18

Triple: ['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2013-09-18']
Text: The Antares rocket made its final voyage on September 18, 2013.
Subject: Antares (rocket)
Predicate: finalFlight
Object: 2013-09-18

Triple: ['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2014-07-13']
Text: The Antares rocket had its final flight on July 13th 2014.
Subject: Antares (rocket)
Predicate: finalFlight
Object: 2014-07-13

Triple: ['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2014-07-13']
Text: The Antares (rocket) made the last flight on 2014-07-13.
Subject: Antares (rocket)
Predicate: finalFlight
Object: 2014-07-13

Triple: ['__subject__ Antares (rocket) __predicate__ finalFlight __object__ 2014-07-13']
Text: The final flight for the rocket Antares was on July 13, 2014.
Subject: Antares (rocket)
Predicate: finalFlight
Object: 2014-07-13

Triple: ['__subject__ Antares (rocket) __predicate__ function __object__ Medium expendable launch system']
Text: The function of the Antares rocket was a medium expendable launch system.
Subject: Antares (rocket)
Predicate: function
Object: Medium expendable launch system

Triple: ['__subject__ Antares (rocket) __predicate__ function __object__ Medium expendable launch system']
Text: The Antares rocket function is a medium expendable launch system.
Subject: Antares (rocket)
Predicate: function
Object: Medium expendable launch system

Triple: ['__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport']
Text: The rocker Antares was launched from the Mid-Atlantic Regional Spaceport.
Subject: Antares (rocket)
Predicate: launchSite
Object: Mid-Atlantic Regional Spaceport

Triple: ['__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport']
Text: The Antares rocket was launched from the Mid-Atlantic Regional Spaceport.
Subject: Antares (rocket)
Predicate: launchSite
Object: Mid-Atlantic Regional Spaceport

Triple: ['__subject__ Antares (rocket) __predicate__ launchSite __object__ Mid-Atlantic Regional Spaceport']
Text: The Antares rocket launch site was the Mid Atlantic Regional Spaceport.
Subject: Antares (rocket)
Predicate: launchSite
Object: Mid-Atlantic Regional Spaceport

Triple: ['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2013-04-21']
Text: The maiden flight of the Antares rocket was on April 21st, 2013.
Subject: Antares (rocket)
Predicate: maidenFlight
Object: 2013-04-21

Triple: ['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2013-04-21']
Text: The Antares rocket made its maiden flight on April 21st 2013.
Subject: Antares (rocket)
Predicate: maidenFlight
Object: 2013-04-21

Triple: ['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2013-04-21']
Text: The Antares rocket made its first flight on April 21, 2013.
Subject: Antares (rocket)
Predicate: maidenFlight
Object: 2013-04-21

Triple: ['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2014-01-09']
Text: The Antares rocket first voyage was on January 9, 2014.
Subject: Antares (rocket)
Predicate: maidenFlight
Object: 2014-01-09

Triple: ['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2014-01-09']
Text: The Antares rocket had its maiden flight on January 9th 2014.
Subject: Antares (rocket)
Predicate: maidenFlight
Object: 2014-01-09

Triple: ['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2014-01-09']
Text: The Antares rockets maiden flight was on the 09th January 2014.
Subject: Antares (rocket)
Predicate: maidenFlight
Object: 2014-01-09

Triple: ['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2014-10-28']
Text: The Antares rocket made its first flight on October 28, 2014.
Subject: Antares (rocket)
Predicate: maidenFlight
Object: 2014-10-28

Triple: ['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2014-10-28']
Text: The Antares rockets maiden flight was on the 28th October 2014.
Subject: Antares (rocket)
Predicate: maidenFlight
Object: 2014-10-28

Triple: ['__subject__ Antares (rocket) __predicate__ maidenFlight __object__ 2014-10-28']
Text: The maiden flight of the Antares rocket was on 28th October 2014.
Subject: Antares (rocket)
Predicate: maidenFlight
Object: 2014-10-28

Triple: ['__subject__ Antares (rocket) __predicate__ manufacturer __object__ Orbital ATK']
Text: The Antares rocket was manufactured by Orbital ATK.
Subject: Antares (rocket)
Predicate: manufacturer
Object: Orbital ATK

Triple: ['__subject__ Antares (rocket) __predicate__ manufacturer __object__ Orbital ATK']
Text: The Antares (rocket) is manufactured by Orbital ATK.
Subject: Antares (rocket)
Predicate: manufacturer
Object: Orbital ATK

Triple: ['__subject__ Antares (rocket) __predicate__ manufacturer __object__ Orbital ATK']
Text: Orbital ATK built the Antares rocket.
Subject: Antares (rocket)
Predicate: manufacturer
Object: Orbital ATK

Triple: ['__subject__ Antares (rocket) __predicate__ manufacturer __object__ Yuzhnoye Design Office']
Text: The Antares rocket was made by the Yuzhnoye Design Office.
Subject: Antares (rocket)
Predicate: manufacturer
Object: Yuzhnoye Design Office

Triple: ['__subject__ Antares (rocket) __predicate__ manufacturer __object__ Yuzhnoye Design Office']
Text: The Antares rocket is manufactured at the Yuzhnoye Design Office.
Subject: Antares (rocket)
Predicate: manufacturer
Object: Yuzhnoye Design Office

Triple: ['__subject__ Antares (rocket) __predicate__ manufacturer __object__ Yuzhnoye Design Office']
Text: The Antares rocket is manufactured by the Yuzhnoye Design Office.
Subject: Antares (rocket)
Predicate: manufacturer
Object: Yuzhnoye Design Office

Triple: ['__subject__ Argentina __predicate__ capital __object__ Buenos Aires']
Text: The capital of Argentina is Buenos Aires.
Subject: Argentina
Predicate: capital
Object: Buenos Aires

Triple: ['__subject__ Argentina __predicate__ capital __object__ Buenos Aires']
Text: Buenos Aires is the capital of Argentina.
Subject: Argentina
Predicate: capital
Object: Buenos Aires

Triple: ['__subject__ Argentina __predicate__ demonym __object__ Argentines']
Text: Argentines live in Argentina.
Subject: Argentina
Predicate: demonym
Object: Argentines

Triple: ['__subject__ Argentina __predicate__ demonym __object__ Argentines']
Text: The people of Argentina are called Argentines.
Subject: Argentina
Predicate: demonym
Object: Argentines

Triple: ['__subject__ Argentina __predicate__ leader __object__ Mauricio Macri']
Text: The leader of Argentina is Mauricio Macri.
Subject: Argentina
Predicate: leader
Object: Mauricio Macri

Triple: ['__subject__ Argentina __predicate__ leader __object__ Mauricio Macri']
Text: Mauricio Macri is a leader in Argentina.
Subject: Argentina
Predicate: leader
Object: Mauricio Macri

Triple: ['__subject__ Ariane 5 __predicate__ diameter __object__ 5.4 (metres)']
Text: Ariane 5 has a diameter of 5.4 metres.
Subject: Ariane 5
Predicate: diameter
Object: 5.4 (metres)

Triple: ['__subject__ Ariane 5 __predicate__ diameter __object__ 5.4 (metres)']
Text: The Ariane 5 has a diameter of 5.4 metres.
Subject: Ariane 5
Predicate: diameter
Object: 5.4 (metres)

Triple: ['__subject__ Ariane 5 __predicate__ diameter __object__ 5.4 (metres)']
Text: The Ariane 5 had a diameter of 5.4 metres.
Subject: Ariane 5
Predicate: diameter
Object: 5.4 (metres)

Triple: ['__subject__ Ariane 5 __predicate__ finalFlight __object__ 2003-09-27']
Text: The final flight of the Ariane 5 was on 2003-09-27.
Subject: Ariane 5
Predicate: finalFlight
Object: 2003-09-27

Triple: ['__subject__ Ariane 5 __predicate__ finalFlight __object__ 2003-09-27']
Text: The final flight of Ariane 5 was 2003-09-27.
Subject: Ariane 5
Predicate: finalFlight
Object: 2003-09-27

Triple: ['__subject__ Ariane 5 __predicate__ finalFlight __object__ 2003-09-27']
Text: The final flight of Ariane 5 was on 27th September 2003.
Subject: Ariane 5
Predicate: finalFlight
Object: 2003-09-27

Triple: ['__subject__ Ariane 5 __predicate__ finalFlight __object__ 2004-12-18']
Text: December 18, 2004 was Ariane 5's final flight.
Subject: Ariane 5
Predicate: finalFlight
Object: 2004-12-18

Triple: ['__subject__ Ariane 5 __predicate__ finalFlight __object__ 2004-12-18']
Text: The final flight of the Ariane 5 was on 2004-12-18.
Subject: Ariane 5
Predicate: finalFlight
Object: 2004-12-18

Triple: ['__subject__ Ariane 5 __predicate__ finalFlight __object__ 2004-12-18']
Text: The final flight of the rocket Ariane 5 is 18th December 2004.
Subject: Ariane 5
Predicate: finalFlight
Object: 2004-12-18

Triple: ['__subject__ Ariane 5 __predicate__ finalFlight __object__ 2009-12-18']
Text: The Ariane 5's final flight was on the 18th December 2009.
Subject: Ariane 5
Predicate: finalFlight
Object: 2009-12-18

Triple: ['__subject__ Ariane 5 __predicate__ finalFlight __object__ 2009-12-18']
Text: The Ariane 5 had its last flight on December 18, 2009.
Subject: Ariane 5
Predicate: finalFlight
Object: 2009-12-18

Triple: ['__subject__ Ariane 5 __predicate__ finalFlight __object__ 2009-12-18']
Text: Ariane 5 had its final flight on the 18th of December 2009.
Subject: Ariane 5
Predicate: finalFlight
Object: 2009-12-18

Triple: ['__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3']
Text: The Ariane 5 was launched at ELA-3.
Subject: Ariane 5
Predicate: launchSite
Object: ELA-3

Triple: ['__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3']
Text: The Ariane 5 was launched at the ELA-3.
Subject: Ariane 5
Predicate: launchSite
Object: ELA-3

Triple: ['__subject__ Ariane 5 __predicate__ launchSite __object__ ELA-3']
Text: The launch site of the Ariane 5 was ELA-3 launchpad.
Subject: Ariane 5
Predicate: launchSite
Object: ELA-3

Triple: ['__subject__ Ariane 5 __predicate__ maidenFlight __object__ 1996-06-04']
Text: Ariane 5 had its maiden flight on the 4th of June, 1996.
Subject: Ariane 5
Predicate: maidenFlight
Object: 1996-06-04

Triple: ['__subject__ Ariane 5 __predicate__ maidenFlight __object__ 1996-06-04']
Text: The Ariane 5 rocket made its maiden flight on June 4th 1996.
Subject: Ariane 5
Predicate: maidenFlight
Object: 1996-06-04

Triple: ['__subject__ Ariane 5 __predicate__ maidenFlight __object__ 1996-06-04']
Text: The Ariane 5 had its maiden flight on June 4, 1996.
Subject: Ariane 5
Predicate: maidenFlight
Object: 1996-06-04

Triple: ['__subject__ Ariane 5 __predicate__ maidenFlight __object__ 2002-12-11']
Text: The maiden flight of Ariane 5 was on the 11th December 2002.
Subject: Ariane 5
Predicate: maidenFlight
Object: 2002-12-11

Triple: ['__subject__ Ariane 5 __predicate__ maidenFlight __object__ 2002-12-11']
Text: The Ariane 5 made its maiden flight on the 11-12-2002.
Subject: Ariane 5
Predicate: maidenFlight
Object: 2002-12-11

Triple: ['__subject__ Ariane 5 __predicate__ maidenFlight __object__ 2002-12-11']
Text: The maiden flight of the Ariane 5 was on 2002-12-11.
Subject: Ariane 5
Predicate: maidenFlight
Object: 2002-12-11

Triple: ['__subject__ Ariane 5 __predicate__ maidenFlight __object__ 2004-03-02']
Text: The Ariane 5's maiden flight was on the 2nd March 2004.
Subject: Ariane 5
Predicate: maidenFlight
Object: 2004-03-02

Triple: ['__subject__ Ariane 5 __predicate__ maidenFlight __object__ 2004-03-02']
Text: The Ariane 5 first flight was on March 2, 2004.
Subject: Ariane 5
Predicate: maidenFlight
Object: 2004-03-02

Triple: ['__subject__ Ariane 5 __predicate__ maidenFlight __object__ 2004-03-02']
Text: The Ariane 5 maiden flight was on the 2004-03-02.
Subject: Ariane 5
Predicate: maidenFlight
Object: 2004-03-02

Triple: ['__subject__ Ariane 5 __predicate__ maidenFlight __object__ 2008-03-09']
Text: The maiden flight of the Ariane 5 rocket was the 9th March 2008.
Subject: Ariane 5
Predicate: maidenFlight
Object: 2008-03-09

Triple: ['__subject__ Ariane 5 __predicate__ maidenFlight __object__ 2008-03-09']
Text: The maiden flight of Ariane 5 took place on 9th March 2008.
Subject: Ariane 5
Predicate: maidenFlight
Object: 2008-03-09

Triple: ['__subject__ Ariane 5 __predicate__ maidenFlight __object__ 2008-03-09']
Text: The maiden flight of the Ariane 5 was 2008-03-09.
Subject: Ariane 5
Predicate: maidenFlight
Object: 2008-03-09

Triple: ['__subject__ Ariane 5 __predicate__ manufacturer __object__ ESA and Arianespace']
Text: The Ariane 5 was made by ESA and Arianespace.
Subject: Ariane 5
Predicate: manufacturer
Object: ESA and Arianespace

Triple: ['__subject__ Ariane 5 __predicate__ manufacturer __object__ ESA and Arianespace']
Text: The Ariane 5 was manufactured at the ESA and Arianespace.
Subject: Ariane 5
Predicate: manufacturer
Object: ESA and Arianespace

Triple: ['__subject__ Ariane 5 __predicate__ manufacturer __object__ Arianespace']
Text: Arianespace is the manufacturer of Ariane 5.
Subject: Ariane 5
Predicate: manufacturer
Object: Arianespace

Triple: ['__subject__ Ariane 5 __predicate__ manufacturer __object__ Arianespace']
Text: The Ariane 5 was manufactured by Arianespace.
Subject: Ariane 5
Predicate: manufacturer
Object: Arianespace

Triple: ['__subject__ Ariane 5 __predicate__ manufacturer __object__ European Space Agency']
Text: The European Space Agency is the manufacturer of the Ariane 5.
Subject: Ariane 5
Predicate: manufacturer
Object: European Space Agency

Triple: ['__subject__ Ariane 5 __predicate__ manufacturer __object__ European Space Agency']
Text: The European Space Agency manufactured the Ariane 5.
Subject: Ariane 5
Predicate: manufacturer
Object: European Space Agency

Triple: ['__subject__ Ariane 5 __predicate__ manufacturer __object__ European Space Agency']
Text: Ariane 5 is manufactured by the European Space Agency.
Subject: Ariane 5
Predicate: manufacturer
Object: European Space Agency

Triple: ['__subject__ Ariane 5 __predicate__ partialFailures __object__ 2']
Text: The Ariane 5 has had 2 partial failures.
Subject: Ariane 5
Predicate: partialFailures
Object: 2

Triple: ['__subject__ Ariane 5 __predicate__ partialFailures __object__ 2']
Text: The Ariane 5 had two partial failures.
Subject: Ariane 5
Predicate: partialFailures
Object: 2

Triple: ['__subject__ Arianespace __predicate__ city __object__ Courcouronnes']
Text: Arianespace is located in the city of Courcouronnes.
Subject: Arianespace
Predicate: city
Object: Courcouronnes

Triple: ['__subject__ Arianespace __predicate__ city __object__ Courcouronnes']
Text: Arianespace is located in Courcouronnes.
Subject: Arianespace
Predicate: city
Object: Courcouronnes

Triple: ['__subject__ Arianespace __predicate__ country __object__ France']
Text: Arianespace is located in France.
Subject: Arianespace
Predicate: country
Object: France

Triple: ['__subject__ Aston Martin DBS __predicate__ manufacturer __object__ Aston Martin']
Text: The Aston Martin DBS is manufactured by Aston Martin.
Subject: Aston Martin DBS
Predicate: manufacturer
Object: Aston Martin

Triple: ['__subject__ Aston Martin DBS __predicate__ manufacturer __object__ Aston Martin']
Text: Aston Mastin DBS is the manufacturer of the Aston Martin.
Subject: Aston Martin DBS
Predicate: manufacturer
Object: Aston Martin

Triple: ['__subject__ Aston Martin DBS __predicate__ successor __object__ Aston Martin V8']
Text: The Aston Martin DBS had the Aston Martin V8 for a successor.
Subject: Aston Martin DBS
Predicate: successor
Object: Aston Martin V8

Triple: ['__subject__ Aston Martin DBS __predicate__ successor __object__ Aston Martin V8']
Text: The Aston Martin DBS was succeeded by a V8 version.
Subject: Aston Martin DBS
Predicate: successor
Object: Aston Martin V8

Triple: ['__subject__ Aston Martin DBS __predicate__ successor __object__ Aston Martin Vantage']
Text: The successor of the Aston Martin DBS is the Aston Martin Vantage.
Subject: Aston Martin DBS
Predicate: successor
Object: Aston Martin Vantage

Triple: ['__subject__ Aston Martin DBS __predicate__ successor __object__ Aston Martin Vantage']
Text: The Aston Martin Vantage succeeded the Aston Martin DBS.
Subject: Aston Martin DBS
Predicate: successor
Object: Aston Martin Vantage

Triple: ['__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell, Buckinghamshire, England, United Kingdom']
Text: The Aston Martin V8 assembly took place in Newport Pagnell, Buckinghamshire, England, United Kingdom.
Subject: Aston Martin V8
Predicate: assembly
Object: Newport Pagnell, Buckinghamshire, England, United Kingdom

Triple: ['__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell, Buckinghamshire, England, United Kingdom']
Text: The Aston Martin V8 is built at Newport Pagnell, Buckinghamshire, England, United Kingdom.
Subject: Aston Martin V8
Predicate: assembly
Object: Newport Pagnell, Buckinghamshire, England, United Kingdom

Triple: ['__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell, Buckinghamshire, England, United Kingdom']
Text: The Aston Martin V8 is assembled in Newport Pagnell, Buckinghamshire, England, United Kingdom.
Subject: Aston Martin V8
Predicate: assembly
Object: Newport Pagnell, Buckinghamshire, England, United Kingdom

Triple: ['__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell']
Text: The Aston Martin V8 assembly is located in Newport Pagnell.
Subject: Aston Martin V8
Predicate: assembly
Object: Newport Pagnell

Triple: ['__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell']
Text: The Aston Martin V8 was assembled at Newport Pagnell.
Subject: Aston Martin V8
Predicate: assembly
Object: Newport Pagnell

Triple: ['__subject__ Aston Martin V8 __predicate__ assembly __object__ Newport Pagnell']
Text: The Aston Martin V8 is assembled at Newport Pagnell.
Subject: Aston Martin V8
Predicate: assembly
Object: Newport Pagnell

Triple: ['__subject__ Aston Martin V8 __predicate__ assembly __object__ United Kingdom']
Text: Aston Martin V8 was assembled in the United Kingdom.
Subject: Aston Martin V8
Predicate: assembly
Object: United Kingdom

Triple: ['__subject__ Aston Martin V8 __predicate__ assembly __object__ United Kingdom']
Text: The Aston Martin V8 is assembled in the United Kingdom.
Subject: Aston Martin V8
Predicate: assembly
Object: United Kingdom

Triple: ['__subject__ Aston Martin V8 __predicate__ assembly __object__ United Kingdom']
Text: The Aston Martin V8 is assembled in the U.K.
Subject: Aston Martin V8
Predicate: assembly
Object: United Kingdom

Triple: ['__subject__ Aston Martin V8 __predicate__ bodyStyle __object__ Coupé']
Text: The Aston Martin V8's body style is the Coupé.
Subject: Aston Martin V8
Predicate: bodyStyle
Object: Coupé

Triple: ['__subject__ Aston Martin V8 __predicate__ bodyStyle __object__ Coupé']
Text: The body style of the Aston Martin V8 is a coupe.
Subject: Aston Martin V8
Predicate: bodyStyle
Object: Coupé

Triple: ['__subject__ Aston Martin V8 __predicate__ bodyStyle __object__ Coupé']
Text: The Aston Martin V8 is a Coupe.
Subject: Aston Martin V8
Predicate: bodyStyle
Object: Coupé

Triple: ['__subject__ Aston Martin V8 __predicate__ engine __object__ 5.3 (litres)']
Text: The Aston Martin V8 has a 5.3 litre engine.
Subject: Aston Martin V8
Predicate: engine
Object: 5.3 (litres)

Triple: ['__subject__ Aston Martin V8 __predicate__ engine __object__ 5.3 (litres)']
Text: The engine volume of Aston MArtin V8 is 5.3 litres.
Subject: Aston Martin V8
Predicate: engine
Object: 5.3 (litres)

Triple: ['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS']
Text: The Aston Martin V8 and the Aston Martin DBS are related means of transport.
Subject: Aston Martin V8
Predicate: relatedMeanOfTransportation
Object: Aston Martin DBS

Triple: ['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS']
Text: The Aston Martin V8 and Aston Martin DBS are a related means of transport.
Subject: Aston Martin V8
Predicate: relatedMeanOfTransportation
Object: Aston Martin DBS

Triple: ['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin RHAM/1']
Text: The Aston Martin V8 and Aston Martin RHAM/1 are related means of transportation.
Subject: Aston Martin V8
Predicate: relatedMeanOfTransportation
Object: Aston Martin RHAM/1

Triple: ['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin RHAM/1']
Text: Aston Martin V8 is a related means of transport to the Aston Martin RHAM/1.
Subject: Aston Martin V8
Predicate: relatedMeanOfTransportation
Object: Aston Martin RHAM/1

Triple: ['__subject__ Aston Martin V8 __predicate__ relatedMeanOfTransportation __object__ Aston Martin RHAM/1']
Text: The Aston Martin V8 is related to the Aston Martin RHAM/1.
Subject: Aston Martin V8
Predicate: relatedMeanOfTransportation
Object: Aston Martin RHAM/1

Triple: ['__subject__ Aston Martin V8 __predicate__ successor __object__ Aston Martin Virage']
Text: The Aston Martin V8 was succeeded by the Aston Martin Virage.
Subject: Aston Martin V8
Predicate: successor
Object: Aston Martin Virage

Triple: ['__subject__ Aston Martin V8 __predicate__ successor __object__ Aston Martin Virage']
Text: The Aston Martin Virage succeeded the Aston Martin V8.
Subject: Aston Martin V8
Predicate: successor
Object: Aston Martin Virage

Triple: ['__subject__ Aston Martin Virage __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS']
Text: Aston Martin Virage and Aston Martin DBS are related types of transportation.
Subject: Aston Martin Virage
Predicate: relatedMeanOfTransportation
Object: Aston Martin DBS

Triple: ['__subject__ Aston Martin Virage __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS']
Text: Aston Martin Virage is a related vehicle to the Aston Martin DBS.
Subject: Aston Martin Virage
Predicate: relatedMeanOfTransportation
Object: Aston Martin DBS

Triple: ['__subject__ Aston Martin Virage __predicate__ relatedMeanOfTransportation __object__ Aston Martin DBS']
Text: The Aston Martin Virage is related to the Aston Martin DBS.
Subject: Aston Martin Virage
Predicate: relatedMeanOfTransportation
Object: Aston Martin DBS

Triple: ['__subject__ Atlas II __predicate__ diameter __object__ 3.04 m']
Text: Atlas II is 3.04m in diameter.
Subject: Atlas II
Predicate: diameter
Object: 3.04 m

Triple: ['__subject__ Atlas II __predicate__ diameter __object__ 3.04 m']
Text: Atlas II has a diameter of 3.04m.
Subject: Atlas II
Predicate: diameter
Object: 3.04 m

Triple: ['__subject__ Atlas II __predicate__ diameter __object__ 3.04 m']
Text: The Atlas II is 3.04 m in diameter.
Subject: Atlas II
Predicate: diameter
Object: 3.04 m

Triple: ['__subject__ Atlas II __predicate__ finalFlight __object__ 2002-12-05']
Text: Atlas II last flight was on December 5, 2002.
Subject: Atlas II
Predicate: finalFlight
Object: 2002-12-05

Triple: ['__subject__ Atlas II __predicate__ finalFlight __object__ 2002-12-05']
Text: The final flight of the Atlas II was on 2002-12-05.
Subject: Atlas II
Predicate: finalFlight
Object: 2002-12-05

Triple: ['__subject__ Atlas II __predicate__ finalFlight __object__ 2002-12-05']
Text: The final flight of Atlas II took place on the 5th December 2002.
Subject: Atlas II
Predicate: finalFlight
Object: 2002-12-05

Triple: ['__subject__ Atlas II __predicate__ finalFlight __object__ 2004-08-31']
Text: Atlas II's final flight was on the 31st August 2004.
Subject: Atlas II
Predicate: finalFlight
Object: 2004-08-31

Triple: ['__subject__ Atlas II __predicate__ finalFlight __object__ 2004-08-31']
Text: Atlas II had its final flight on the 31st of August 2004.
Subject: Atlas II
Predicate: finalFlight
Object: 2004-08-31

Triple: ['__subject__ Atlas II __predicate__ finalFlight __object__ 2004-08-31']
Text: The Atlas II final flight was on 2004-08-31.
Subject: Atlas II
Predicate: finalFlight
Object: 2004-08-31

Triple: ['__subject__ Atlas II __predicate__ launchSite __object__ Cape Canaveral Air Force Station']
Text: The Atlas II was launched from Cape Canaveral Air Force Station.
Subject: Atlas II
Predicate: launchSite
Object: Cape Canaveral Air Force Station

Triple: ['__subject__ Atlas II __predicate__ launchSite __object__ Cape Canaveral Air Force Station']
Text: The Atlas II was launched from the Cape Canaveral Air Force Station.
Subject: Atlas II
Predicate: launchSite
Object: Cape Canaveral Air Force Station

Triple: ['__subject__ Atlas II __predicate__ launchSite __object__ Spaceport Florida Launch Complex 36']
Text: The Atlas II was launched from the Spaceport Florida Launch Complex 36.
Subject: Atlas II
Predicate: launchSite
Object: Spaceport Florida Launch Complex 36

Triple: ['__subject__ Atlas II __predicate__ launchSite __object__ Spaceport Florida Launch Complex 36']
Text: The launch site of Atlas II is Spaceport Florida Launch Complex 36.
Subject: Atlas II
Predicate: launchSite
Object: Spaceport Florida Launch Complex 36

Triple: ['__subject__ Atlas II __predicate__ launchSite __object__ Spaceport Florida Launch Complex 36']
Text: The Atlas II launch site was the Spaceport Florida Launch Complex 36.
Subject: Atlas II
Predicate: launchSite
Object: Spaceport Florida Launch Complex 36

Triple: ['__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg AFB Space Launch Complex 3']
Text: The Atlas II rocket’s launch site is Vandenberg AFB Space Launch Complex 3.
Subject: Atlas II
Predicate: launchSite
Object: Vandenberg AFB Space Launch Complex 3

Triple: ['__subject__ Atlas II __predicate__ launchSite __object__ Vandenberg AFB Space Launch Complex 3']
Text: The Atlas II was launched at the Vandenberg AFB Space Launch Complex 3.
Subject: Atlas II
Predicate: launchSite
Object: Vandenberg AFB Space Launch Complex 3

Triple: ['__subject__ Atlas II __predicate__ manufacturer __object__ Lockheed Martin']
Text: The manufacturer of the Atlas II is Lockheed Martin.
Subject: Atlas II
Predicate: manufacturer
Object: Lockheed Martin

Triple: ['__subject__ Atlas II __predicate__ manufacturer __object__ Lockheed Martin']
Text: The Atlas II was manufactured by Lockheed Martin.
Subject: Atlas II
Predicate: manufacturer
Object: Lockheed Martin

Triple: ['__subject__ Atlas II __predicate__ manufacturer __object__ Lockheed Martin']
Text: Lockheed Martin is the manufacturer of the Atlas II.
Subject: Atlas II
Predicate: manufacturer
Object: Lockheed Martin

Triple: ['__subject__ Audi __predicate__ subsidiary __object__ Ducati']
Text: Ducati is a subsidiary of Audi.
Subject: Audi
Predicate: subsidiary
Object: Ducati

Triple: ['__subject__ Audi __predicate__ subsidiary __object__ Ducati']
Text: The company Ducati is owned by Audi.
Subject: Audi
Predicate: subsidiary
Object: Ducati

Triple: ['__subject__ Audi __predicate__ subsidiary __object__ Lamborghini']
Text: Lamborghini is a subsidiary of Audi.
Subject: Audi
Predicate: subsidiary
Object: Lamborghini

Triple: ['__subject__ Audi __predicate__ subsidiary __object__ Quattro GmbH']
Text: The Quattro Gmbh is a subsidiary of the Audi.
Subject: Audi
Predicate: subsidiary
Object: Quattro GmbH

Triple: ['__subject__ Audi A1 __predicate__ assembly __object__ Brussels, Belgium']
Text: Audi A1 is assembled in Brussels in Belgium.
Subject: Audi A1
Predicate: assembly
Object: Brussels, Belgium

Triple: ['__subject__ Audi A1 __predicate__ assembly __object__ Brussels, Belgium']
Text: The Audi A1 is assembled in Brussels, Belgium.
Subject: Audi A1
Predicate: assembly
Object: Brussels, Belgium

Triple: ['__subject__ Audi A1 __predicate__ bodyStyle __object__ Hatchback']
Text: The Audi A1 is a hatchback.
Subject: Audi A1
Predicate: bodyStyle
Object: Hatchback

Triple: ['__subject__ Audi A1 __predicate__ bodyStyle __object__ Hatchback']
Text: Audi A1 has the hatchback style of body.
Subject: Audi A1
Predicate: bodyStyle
Object: Hatchback

Triple: ['__subject__ Audi A1 __predicate__ class __object__ Supermini']
Text: The Audi A1 is classed as a super mini.
Subject: Audi A1
Predicate: class
Object: Supermini

Triple: ['__subject__ Audi A1 __predicate__ class __object__ Supermini']
Text: The Audi A1 is classed as a supermini.
Subject: Audi A1
Predicate: class
Object: Supermini

Triple: ['__subject__ Audi A1 __predicate__ class __object__ Supermini']
Text: Audi A1 belongs to the supermini class.
Subject: Audi A1
Predicate: class
Object: Supermini

Triple: ['__subject__ Audi A1 __predicate__ engine __object__ 1.2 (litres)']
Text: The Audi A1 has a 1.2 litre engine.
Subject: Audi A1
Predicate: engine
Object: 1.2 (litres)

Triple: ['__subject__ Audi A1 __predicate__ engine __object__ 1.2 (litres)']
Text: Audi A1 has a 1.2 litre engine.
Subject: Audi A1
Predicate: engine
Object: 1.2 (litres)

Triple: ['__subject__ Audi A1 __predicate__ layout __object__ Front-engine, front-wheel-drive layout']
Text: The Audi A1 has a front-engine, front-wheel-drive layout.
Subject: Audi A1
Predicate: layout
Object: Front-engine, front-wheel-drive layout

Triple: ['__subject__ Audi A1 __predicate__ layout __object__ Front-engine, front-wheel-drive layout']
Text: The Audi A1 has a front engine, front-wheel drive layout.
Subject: Audi A1
Predicate: layout
Object: Front-engine, front-wheel-drive layout

Triple: ['__subject__ Audi A1 __predicate__ layout __object__ Front-engine, front-wheel-drive layout']
Text: Audi A1 has a front-engine with front-wheel-drive.
Subject: Audi A1
Predicate: layout
Object: Front-engine, front-wheel-drive layout

Triple: ['__subject__ Audi A1 __predicate__ manufacturer __object__ Audi']
Text: Audi is the manufacturer of the Audi A1.
Subject: Audi A1
Predicate: manufacturer
Object: Audi

Triple: ['__subject__ Audi A1 __predicate__ manufacturer __object__ Audi']
Text: The Audi A1 is manufactured by Audi.
Subject: Audi A1
Predicate: manufacturer
Object: Audi

Triple: ['__subject__ Audi A1 __predicate__ manufacturer __object__ Audi']
Text: Audi A1 is made by Audi.
Subject: Audi A1
Predicate: manufacturer
Object: Audi

Triple: ['__subject__ Audi A1 __predicate__ relatedMeanOfTransportation __object__ Volkswagen Polo']
Text: The Audi A1 and Volkswagen Polo are related kinds of transportation.
Subject: Audi A1
Predicate: relatedMeanOfTransportation
Object: Volkswagen Polo

Triple: ['__subject__ Audi A1 __predicate__ relatedMeanOfTransportation __object__ Volkswagen Polo']
Text: The Audi A1 is a related vehicle to the VW Polo.
Subject: Audi A1
Predicate: relatedMeanOfTransportation
Object: Volkswagen Polo

Triple: ['__subject__ Audi A1 __predicate__ transmission __object__ 5-speed manual']
Text: The Audi A1 has a 5-speed manual transmission.
Subject: Audi A1
Predicate: transmission
Object: 5-speed manual

Triple: ['__subject__ Audi A1 __predicate__ transmission __object__ 5-speed manual']
Text: The Audi A1 has a 5 speed manual transmission.
Subject: Audi A1
Predicate: transmission
Object: 5-speed manual

Triple: ['__subject__ Audi A1 __predicate__ transmission __object__ 6-speed manual']
Text: The Audi A1 has a 6-speed manual gearbox.
Subject: Audi A1
Predicate: transmission
Object: 6-speed manual

Triple: ['__subject__ Audi A1 __predicate__ transmission __object__ 6-speed manual']
Text: The Audi A1 has a 6-speed manual transmission.
Subject: Audi A1
Predicate: transmission
Object: 6-speed manual

Triple: ['__subject__ Caterpillar Inc. __predicate__ foundationPlace __object__ United States']
Text: Caterpillar Inc. was founded in the United States.
Subject: Caterpillar Inc.
Predicate: foundationPlace
Object: United States

Triple: ['__subject__ Caterpillar Inc. __predicate__ foundationPlace __object__ United States']
Text: Caterpillar, Inc. was founded in the U.S.
Subject: Caterpillar Inc.
Predicate: foundationPlace
Object: United States

Triple: ['__subject__ Caterpillar Inc. __predicate__ location __object__ Illinois']
Text: Caterpillar, Inc. is located in Illinois.
Subject: Caterpillar Inc.
Predicate: location
Object: Illinois

Triple: ['__subject__ Caterpillar Inc. __predicate__ location __object__ Illinois']
Text: Caterpillar Inc. is located in Illinois.
Subject: Caterpillar Inc.
Predicate: location
Object: Illinois

Triple: ['__subject__ Caterpillar Inc. __predicate__ location __object__ Illinois']
Text: The location of Caterpillar Inc. is Illinois.
Subject: Caterpillar Inc.
Predicate: location
Object: Illinois

Triple: ['__subject__ Caterpillar Inc. __predicate__ location __object__ United States']
Text: Caterpillar Inc. is located in the U.S.
Subject: Caterpillar Inc.
Predicate: location
Object: United States

Triple: ['__subject__ Caterpillar Inc. __predicate__ location __object__ United States']
Text: Caterpillar Inc is located in the United States.
Subject: Caterpillar Inc.
Predicate: location
Object: United States

Triple: ['__subject__ Costa Crociere __predicate__ location __object__ Italy']
Text: Costa Crociere is based in Italy.
Subject: Costa Crociere
Predicate: location
Object: Italy

Triple: ['__subject__ Costa Crociere __predicate__ location __object__ Italy']
Text: Costa Crociere is located in Italy.
Subject: Costa Crociere
Predicate: location
Object: Italy

Triple: ['__subject__ Costa Crociere __predicate__ location __object__ Italy']
Text: The location of Costa Crociere is Italy.
Subject: Costa Crociere
Predicate: location
Object: Italy

Triple: ['__subject__ Costa Crociere __predicate__ parentCompany __object__ Carnival Corporation & plc']
Text: Carnival Corporation & plc is the parent company of Costa Crociere.
Subject: Costa Crociere
Predicate: parentCompany
Object: Carnival Corporation & plc

Triple: ['__subject__ Costa Crociere __predicate__ parentCompany __object__ Carnival Corporation & plc']
Text: The parent company of Costa Crociere is Carnival Corporation & plc.
Subject: Costa Crociere
Predicate: parentCompany
Object: Carnival Corporation & plc

Triple: ['__subject__ DeSoto Custom __predicate__ manufacturer __object__ DeSoto (automobile)']
Text: DeSoto are the manufacturers of the DeSoto Custom.
Subject: DeSoto Custom
Predicate: manufacturer
Object: DeSoto (automobile)

Triple: ['__subject__ DeSoto Custom __predicate__ manufacturer __object__ DeSoto (automobile)']
Text: The DeSoto Custom was manufactured at DeSoto.
Subject: DeSoto Custom
Predicate: manufacturer
Object: DeSoto (automobile)

Triple: ['__subject__ DeSoto Custom __predicate__ manufacturer __object__ DeSoto (automobile)']
Text: DeSoto Custom was manufactured by DeSoto.
Subject: DeSoto Custom
Predicate: manufacturer
Object: DeSoto (automobile)

Triple: ['__subject__ DeSoto Custom __predicate__ relatedMeanOfTransportation __object__ Dodge Coronet']
Text: The DeSoto Custom is related to the Dodge Coronet.
Subject: DeSoto Custom
Predicate: relatedMeanOfTransportation
Object: Dodge Coronet

Triple: ['__subject__ DeSoto Custom __predicate__ relatedMeanOfTransportation __object__ Dodge Coronet']
Text: The DeSoto Custom and the Dodge Coronet are similar means of transport.
Subject: DeSoto Custom
Predicate: relatedMeanOfTransportation
Object: Dodge Coronet

Triple: ['__subject__ DeSoto Custom __predicate__ successor __object__ DeSoto Firedome']
Text: The Desoto Custom's successor is the DeSoto Firedome.
Subject: DeSoto Custom
Predicate: successor
Object: DeSoto Firedome

Triple: ['__subject__ DeSoto Custom __predicate__ successor __object__ DeSoto Firedome']
Text: The DeSoto Firedome was preceded by the DeSoto Custom.
Subject: DeSoto Custom
Predicate: successor
Object: DeSoto Firedome

Triple: ['__subject__ DeSoto Custom __predicate__ successor __object__ DeSoto Firedome']
Text: The successor of the DeSoto Custom automobile was the DeSoto Firedome.
Subject: DeSoto Custom
Predicate: successor
Object: DeSoto Firedome

Triple: ['__subject__ Delta II __predicate__ countryOrigin __object__ United States']
Text: The origin of the Delta II is the United States.
Subject: Delta II
Predicate: countryOrigin
Object: United States

Triple: ['__subject__ Delta II __predicate__ countryOrigin __object__ United States']
Text: The Delta II is from the United States.
Subject: Delta II
Predicate: countryOrigin
Object: United States

Triple: ['__subject__ Delta II __predicate__ countryOrigin __object__ United States']
Text: Delta II originates from the United States.
Subject: Delta II
Predicate: countryOrigin
Object: United States

Triple: ['__subject__ Delta II __predicate__ launchSite __object__ Cape Canaveral Air Force Station Space Launch Complex 17']
Text: The Delta II took off from Cape Canaveral Air Force Station Space Launch Complex 17.
Subject: Delta II
Predicate: launchSite
Object: Cape Canaveral Air Force Station Space Launch Complex 17

Triple: ['__subject__ Delta II __predicate__ launchSite __object__ Cape Canaveral Air Force Station Space Launch Complex 17']
Text: The Delta II was launched at Cape Canaveral Air Force Station Space Launch Complex 17.
Subject: Delta II
Predicate: launchSite
Object: Cape Canaveral Air Force Station Space Launch Complex 17

Triple: ['__subject__ Delta II __predicate__ launchSite __object__ Cape Canaveral Air Force Station Space Launch Complex 17']
Text: Cape Canaveral Air Force Station Space Launch Complex 17 is the launch site of Delta II.
Subject: Delta II
Predicate: launchSite
Object: Cape Canaveral Air Force Station Space Launch Complex 17

Triple: ['__subject__ Delta II __predicate__ launchSite __object__ Vandenberg AFB Space Launch Complex 2']
Text: The launch site of the Delta II was at the Vandenberg AFB Space Launch Complex 2.
Subject: Delta II
Predicate: launchSite
Object: Vandenberg AFB Space Launch Complex 2

Triple: ['__subject__ Delta II __predicate__ launchSite __object__ Vandenberg AFB Space Launch Complex 2']
Text: The Delta II was launched from Vandenberg AFB Space Launch Complex 2.
Subject: Delta II
Predicate: launchSite
Object: Vandenberg AFB Space Launch Complex 2

Triple: ['__subject__ Delta II __predicate__ launchSite __object__ Vandenberg AFB Space Launch Complex 2']
Text: The launch site of the Delta II was the Vandenberg AFB Space Launch Complex 2.
Subject: Delta II
Predicate: launchSite
Object: Vandenberg AFB Space Launch Complex 2

Triple: ['__subject__ Delta II __predicate__ launchSite __object__ Vandenberg Air Force Base']
Text: The Delta II launch site was at Vandenberg Air Force Base.
Subject: Delta II
Predicate: launchSite
Object: Vandenberg Air Force Base

Triple: ['__subject__ Delta II __predicate__ launchSite __object__ Vandenberg Air Force Base']
Text: The Delta II was launched at the Vandenberg Air Force Base.
Subject: Delta II
Predicate: launchSite
Object: Vandenberg Air Force Base

Triple: ['__subject__ Delta II __predicate__ launchSite __object__ Vandenberg Air Force Base']
Text: The launch site of the Delta II is Vandenberg Air Force Base.
Subject: Delta II
Predicate: launchSite
Object: Vandenberg Air Force Base

Triple: ['__subject__ Delta II __predicate__ manufacturer __object__ United Launch Alliance']
Text: Delta II was manufactured by the United Launch Alliance.
Subject: Delta II
Predicate: manufacturer
Object: United Launch Alliance

Triple: ['__subject__ Delta II __predicate__ manufacturer __object__ United Launch Alliance']
Text: United Launch Alliance made the Delta II.
Subject: Delta II
Predicate: manufacturer
Object: United Launch Alliance

Triple: ['__subject__ Delta II __predicate__ manufacturer __object__ United Launch Alliance']
Text: United Launch Alliance is the manufacturer of Delta II.
Subject: Delta II
Predicate: manufacturer
Object: United Launch Alliance

Triple: ['__subject__ Dodge __predicate__ keyPerson __object__ Sergio Marchionne']
Text: Sergio Marchionne was the key person of the Dodge.
Subject: Dodge
Predicate: keyPerson
Object: Sergio Marchionne

Triple: ['__subject__ Dodge __predicate__ keyPerson __object__ Sergio Marchionne']
Text: The key person of Dodge is Sergio Marchionne.
Subject: Dodge
Predicate: keyPerson
Object: Sergio Marchionne

Triple: ['__subject__ Dodge __predicate__ keyPerson __object__ Sergio Marchionne']
Text: Sergio Marchionne is a key figure of Dodge.
Subject: Dodge
Predicate: keyPerson
Object: Sergio Marchionne

Triple: ['__subject__ ELA-3 __predicate__ operator __object__ Arianespace']
Text: Arianespace operates the ELA-3.
Subject: ELA-3
Predicate: operator
Object: Arianespace

Triple: ['__subject__ ELA-3 __predicate__ operator __object__ Arianespace']
Text: The ELA-3 is operated by Arianespace.
Subject: ELA-3
Predicate: operator
Object: Arianespace

Triple: ['__subject__ ELA-3 __predicate__ site __object__ Guiana Space Centre']
Text: The ELA-3 is located at the Guiana Space Centre.
Subject: ELA-3
Predicate: site
Object: Guiana Space Centre

Triple: ['__subject__ ELA-3 __predicate__ site __object__ Guiana Space Centre']
Text: The site of ELA-3 is at the Guiana Space Centre.
Subject: ELA-3
Predicate: site
Object: Guiana Space Centre

Triple: ['__subject__ Fiat Croma __predicate__ relatedMeanOfTransportation __object__ Opel Vectra']
Text: Fiat Croma and Opel Vectra are related forms of transportation.
Subject: Fiat Croma
Predicate: relatedMeanOfTransportation
Object: Opel Vectra

Triple: ['__subject__ Fiat Croma __predicate__ relatedMeanOfTransportation __object__ Saab 9000']
Text: The Fiat Croma and the Saab 9000 are related means of transport in that they are both cars.
Subject: Fiat Croma
Predicate: relatedMeanOfTransportation
Object: Saab 9000

Triple: ['__subject__ Fiat Croma __predicate__ relatedMeanOfTransportation __object__ Saab 9000']
Text: Fiat Croma and Saab 9000 are related forms of transportation.
Subject: Fiat Croma
Predicate: relatedMeanOfTransportation
Object: Saab 9000

Triple: ['__subject__ Finland __predicate__ demonym __object__ Finns']
Text: The natives of Finland are known as Finns.
Subject: Finland
Predicate: demonym
Object: Finns

Triple: ['__subject__ Finland __predicate__ demonym __object__ Finns']
Text: People in Finland are known as Finns.
Subject: Finland
Predicate: demonym
Object: Finns

Triple: ['__subject__ Finland __predicate__ demonym __object__ Finns']
Text: The demonym of Finland is Finns.
Subject: Finland
Predicate: demonym
Object: Finns

Triple: ['__subject__ Finland __predicate__ leader __object__ Juha Sipilä']
Text: Juha Sipila is a leader in Finland.
Subject: Finland
Predicate: leader
Object: Juha Sipilä

Triple: ['__subject__ Finland __predicate__ leader __object__ Juha Sipilä']
Text: Juha Sipilä is a leader in Finland.
Subject: Finland
Predicate: leader
Object: Juha Sipilä

Triple: ['__subject__ Finland __predicate__ leader __object__ Juha Sipilä']
Text: Finland is led by Juha Sipila.
Subject: Finland
Predicate: leader
Object: Juha Sipilä

Triple: ['__subject__ Finland __predicate__ leader __object__ Sauli Niinistö']
Text: Sauli Niinistö is a leader in Finland.
Subject: Finland
Predicate: leader
Object: Sauli Niinistö

Triple: ['__subject__ Finland __predicate__ leader __object__ Sauli Niinistö']
Text: Sauli Niinisto is a leader in Finland.
Subject: Finland
Predicate: leader
Object: Sauli Niinistö

Triple: ['__subject__ Finland __predicate__ leader __object__ Sauli Niinistö']
Text: Sauli Niinistö is the leader of Finland.
Subject: Finland
Predicate: leader
Object: Sauli Niinistö

Triple: ['__subject__ General Dynamics Electric Boat __predicate__ city __object__ Groton, Connecticut']
Text: General Dynamics Electric Boat are located in the city of Groton, Connecticut.
Subject: General Dynamics Electric Boat
Predicate: city
Object: Groton, Connecticut

Triple: ['__subject__ General Dynamics Electric Boat __predicate__ city __object__ Groton, Connecticut']
Text: The General Dynamics Electric Boat is located in Groton, CT.
Subject: General Dynamics Electric Boat
Predicate: city
Object: Groton, Connecticut

Triple: ['__subject__ General Dynamics Electric Boat __predicate__ parentCompany __object__ General Dynamics']
Text: General Dynamics is the parent company of the General Dynamics Electric Boat Co.
Subject: General Dynamics Electric Boat
Predicate: parentCompany
Object: General Dynamics

Triple: ['__subject__ General Dynamics Electric Boat __predicate__ parentCompany __object__ General Dynamics']
Text: The parent company of the General Dynamics Electric Boat is General Dynamics.
Subject: General Dynamics Electric Boat
Predicate: parentCompany
Object: General Dynamics

Triple: ['__subject__ Germany __predicate__ capital __object__ Berlin']
Text: Berlin is the capital of Germany.
Subject: Germany
Predicate: capital
Object: Berlin

Triple: ['__subject__ Germany __predicate__ capital __object__ Berlin']
Text: The capital of Berlin is Germany.
Subject: Germany
Predicate: capital
Object: Berlin

Triple: ['__subject__ Germany __predicate__ leader __object__ Andreas Voßkuhle']
Text: Andreas Voßkuhle is a leader of Germany.
Subject: Germany
Predicate: leader
Object: Andreas Voßkuhle

Triple: ['__subject__ Germany __predicate__ leader __object__ Andreas Voßkuhle']
Text: Andreas Vosskuhle is a leader in Germany.
Subject: Germany
Predicate: leader
Object: Andreas Voßkuhle

Triple: ['__subject__ Germany __predicate__ leader __object__ Angela Merkel']
Text: Angela Merkel is the leader of Germany.
Subject: Germany
Predicate: leader
Object: Angela Merkel

Triple: ['__subject__ Germany __predicate__ leader __object__ Angela Merkel']
Text: The leader of Germany is Angela Merkel.
Subject: Germany
Predicate: leader
Object: Angela Merkel

Triple: ['__subject__ Germany __predicate__ leader __object__ Joachim Gauck']
Text: Joachim Gauck is a leader in Germany.
Subject: Germany
Predicate: leader
Object: Joachim Gauck

Triple: ['__subject__ Germany __predicate__ leader __object__ Joachim Gauck']
Text: The name of the leader in Germany is Joachim Gauck.
Subject: Germany
Predicate: leader
Object: Joachim Gauck

Triple: ['__subject__ Gruppo Bertone __predicate__ foundationPlace __object__ Italy']
Text: Gruppo Bertone was founded in Italy.
Subject: Gruppo Bertone
Predicate: foundationPlace
Object: Italy

Triple: ['__subject__ Gruppo Bertone __predicate__ foundationPlace __object__ Turin']
Text: The Gruppo Bertone was founded in Turin.
Subject: Gruppo Bertone
Predicate: foundationPlace
Object: Turin

Triple: ['__subject__ Gruppo Bertone __predicate__ foundationPlace __object__ Turin']
Text: Gruppo Bertone was founded in Turin.
Subject: Gruppo Bertone
Predicate: foundationPlace
Object: Turin

Triple: ['__subject__ Gruppo Bertone __predicate__ city __object__ Turin']
Text: Gruppo Bertone is located in Turin.
Subject: Gruppo Bertone
Predicate: city
Object: Turin

Triple: ['__subject__ Gruppo Bertone __predicate__ city __object__ Turin']
Text: Gruppo Bertone is located in the city of Turin.
Subject: Gruppo Bertone
Predicate: city
Object: Turin

Triple: ['__subject__ Gruppo Bertone __predicate__ city __object__ Turin']
Text: The Gruppo Bertone is located in Turin.
Subject: Gruppo Bertone
Predicate: city
Object: Turin

Triple: ['__subject__ Gruppo Bertone __predicate__ country __object__ Italy']
Text: Gruppo Bertone is located in Italy.
Subject: Gruppo Bertone
Predicate: country
Object: Italy

Triple: ['__subject__ Gruppo Bertone __predicate__ country __object__ Italy']
Text: Gruppo Bertone is an Italian company.
Subject: Gruppo Bertone
Predicate: country
Object: Italy

Triple: ['__subject__ Guiana Space Centre __predicate__ headquarter __object__ French Guiana']
Text: French Guiana is where the headquarters of the Guiana Space Centre are located.
Subject: Guiana Space Centre
Predicate: headquarter
Object: French Guiana

Triple: ['__subject__ Guiana Space Centre __predicate__ headquarter __object__ French Guiana']
Text: The Guiana Space Centre has its HQ in French Guiana.
Subject: Guiana Space Centre
Predicate: headquarter
Object: French Guiana

Triple: ['__subject__ Guiana Space Centre __predicate__ headquarter __object__ French Guiana']
Text: The Guiana Space Centre has its headquarters in French Guiana.
Subject: Guiana Space Centre
Predicate: headquarter
Object: French Guiana

Triple: ['__subject__ Guiana Space Centre __predicate__ location __object__ French Guiana']
Text: French Guiana is the location of the Guiana Space Centre.
Subject: Guiana Space Centre
Predicate: location
Object: French Guiana

Triple: ['__subject__ Guiana Space Centre __predicate__ location __object__ French Guiana']
Text: The Guiana Space Centre is located in French Guiana.
Subject: Guiana Space Centre
Predicate: location
Object: French Guiana

Triple: ['__subject__ Guiana Space Centre __predicate__ location __object__ Kourou, French Guiana']
Text: The Guiana Space Centre is located in Kourou, French Guiana.
Subject: Guiana Space Centre
Predicate: location
Object: Kourou, French Guiana

Triple: ['__subject__ Guiana Space Centre __predicate__ location __object__ Kourou, French Guiana']
Text: The Guiana Space Centre is in Kourou, French Guiana.
Subject: Guiana Space Centre
Predicate: location
Object: Kourou, French Guiana

Triple: ['__subject__ Honda Accord __predicate__ manufacturer __object__ Honda']
Text: The Honda Accord is made by Honda.
Subject: Honda Accord
Predicate: manufacturer
Object: Honda

Triple: ['__subject__ Honda Accord __predicate__ manufacturer __object__ Honda']
Text: Honda is the manufacturer of the Honda Accord.
Subject: Honda Accord
Predicate: manufacturer
Object: Honda

Triple: ['__subject__ Honda Accord __predicate__ manufacturer __object__ Honda']
Text: Honda manufactures a model called the Accord.
Subject: Honda Accord
Predicate: manufacturer
Object: Honda

Triple: ['__subject__ Honda Accord __predicate__ relatedMeanOfTransportation __object__ Acura TLX']
Text: The Honda Accord is related to the Acura TLX.
Subject: Honda Accord
Predicate: relatedMeanOfTransportation
Object: Acura TLX

Triple: ['__subject__ Honda J engine __predicate__ manufacturer __object__ Honda']
Text: The Honda J. engine is made by Honda.
Subject: Honda J engine
Predicate: manufacturer
Object: Honda

Triple: ['__subject__ Honda J engine __predicate__ manufacturer __object__ Honda']
Text: The Honda J engine was manufactured by Honda.
Subject: Honda J engine
Predicate: manufacturer
Object: Honda

Triple: ['__subject__ Honda J engine __predicate__ manufacturer __object__ Honda']
Text: Honda is the manufacturer of the Honda J engine.
Subject: Honda J engine
Predicate: manufacturer
Object: Honda

Triple: ['__subject__ Humphrys, Tennant and Dykes __predicate__ location __object__ Deptford']
Text: Humphrys, Tennant and Dykes is located in Deptford.
Subject: Humphrys, Tennant and Dykes
Predicate: location
Object: Deptford

Triple: ['__subject__ Humphrys, Tennant and Dykes __predicate__ location __object__ Deptford']
Text: Humphrys, Tennant & Dykes is in Deptford.
Subject: Humphrys, Tennant and Dykes
Predicate: location
Object: Deptford

Triple: ['__subject__ Humphrys, Tennant and Dykes __predicate__ location __object__ Deptford']
Text: Humphrys, Tennant and Dykes are located in Deptford.
Subject: Humphrys, Tennant and Dykes
Predicate: location
Object: Deptford

Triple: ['__subject__ Humphrys, Tennant and Dykes __predicate__ location __object__ London']
Text: Humphrys, Tennant and Dykes are located in London.
Subject: Humphrys, Tennant and Dykes
Predicate: location
Object: London

Triple: ['__subject__ Humphrys, Tennant and Dykes __predicate__ location __object__ London']
Text: Humphrys, Tennant and Dykes is located in London.
Subject: Humphrys, Tennant and Dykes
Predicate: location
Object: London

Triple: ['__subject__ Italy __predicate__ capital __object__ Rome']
Text: Rome is the capital of Italy.
Subject: Italy
Predicate: capital
Object: Rome

Triple: ['__subject__ Italy __predicate__ capital __object__ Rome']
Text: The capital of Italy is Rome.
Subject: Italy
Predicate: capital
Object: Rome

Triple: ['__subject__ Lancia Thema __predicate__ relatedMeanOfTransportation __object__ Saab 9000']
Text: The Lancia Thema is related to the Saab 9000.
Subject: Lancia Thema
Predicate: relatedMeanOfTransportation
Object: Saab 9000

Triple: ['__subject__ Lancia Thema __predicate__ relatedMeanOfTransportation __object__ Saab 9000']
Text: The Saab 9000 and the Lancia Thema are related means of transportation.
Subject: Lancia Thema
Predicate: relatedMeanOfTransportation
Object: Saab 9000

Triple: ['__subject__ Lockheed Martin __predicate__ location __object__ Bethesda, Maryland']
Text: Lockheed Martin is located in Bethesda, Maryland.
Subject: Lockheed Martin
Predicate: location
Object: Bethesda, Maryland

Triple: ['__subject__ Lockheed Martin __predicate__ location __object__ Bethesda, Maryland']
Text: Lockheed, Martin is in Bethesda, Maryland.
Subject: Lockheed Martin
Predicate: location
Object: Bethesda, Maryland

Triple: ['__subject__ MTU Friedrichshafen __predicate__ city __object__ Friedrichshafen']
Text: MTU Friedrichshafen is in the city of Friedrichshafen.
Subject: MTU Friedrichshafen
Predicate: city
Object: Friedrichshafen

Triple: ['__subject__ MTU Friedrichshafen __predicate__ city __object__ Friedrichshafen']
Text: MTU Friedrichshafen is in Friedrichshafen.
Subject: MTU Friedrichshafen
Predicate: city
Object: Friedrichshafen

Triple: ['__subject__ MTU Friedrichshafen __predicate__ city __object__ Friedrichshafen']
Text: MTU Friedrichshafen is located in the city of Friedrichshafen.
Subject: MTU Friedrichshafen
Predicate: city
Object: Friedrichshafen

Triple: ['__subject__ MTU Friedrichshafen __predicate__ owner __object__ Rolls-Royce Holdings']
Text: The MTU Friedrichshafen is owned by Rolls-Royce Holdings.
Subject: MTU Friedrichshafen
Predicate: owner
Object: Rolls-Royce Holdings

Triple: ['__subject__ MTU Friedrichshafen __predicate__ owner __object__ Rolls-Royce Holdings']
Text: MTU Friedrichshafen is owned by Rolls-Royce Holdings.
Subject: MTU Friedrichshafen
Predicate: owner
Object: Rolls-Royce Holdings

Triple: ['__subject__ MTU Friedrichshafen __predicate__ parentCompany __object__ Rolls-Royce Power Systems']
Text: The parent company of MTU Friedrichshafen is Rolls-Royce Power Systems.
Subject: MTU Friedrichshafen
Predicate: parentCompany
Object: Rolls-Royce Power Systems

Triple: ['__subject__ Mid-Atlantic Regional Spaceport Launch Pad 0 __predicate__ associatedRocket __object__ Antares (rocket)']
Text: Mid-Atlantic Regional Spaceport Launch Pad 0 is associated with the Antares rocket.
Subject: Mid-Atlantic Regional Spaceport Launch Pad 0
Predicate: associatedRocket
Object: Antares (rocket)

Triple: ['__subject__ Mid-Atlantic Regional Spaceport Launch Pad 0 __predicate__ associatedRocket __object__ Antares (rocket)']
Text: The Mid-Atlantic Regional Spaceport Launch Pad 0 is associated with the Antares rocket.
Subject: Mid-Atlantic Regional Spaceport Launch Pad 0
Predicate: associatedRocket
Object: Antares (rocket)

Triple: ['__subject__ Mid-Atlantic Regional Spaceport Launch Pad 0 __predicate__ associatedRocket __object__ Antares (rocket)']
Text: The Antares Rocket was launched at the Mid-Atlantic Regional Spaceport Launch Pad 0.
Subject: Mid-Atlantic Regional Spaceport Launch Pad 0
Predicate: associatedRocket
Object: Antares (rocket)

Triple: ['__subject__ Mid-Atlantic Regional Spaceport Launch Pad 0 __predicate__ associatedRocket __object__ Minotaur IV']
Text: Mid-Atlantic Regional Spaceport Launch Pad 0 is associated with the rocket, Minotaur IV.
Subject: Mid-Atlantic Regional Spaceport Launch Pad 0
Predicate: associatedRocket
Object: Minotaur IV

Triple: ['__subject__ Mid-Atlantic Regional Spaceport Launch Pad 0 __predicate__ associatedRocket __object__ Minotaur IV']
Text: The Minotaur IV rocket is associated with the Mid-Atlantic Regional Spaceport Launch Pad 0.
Subject: Mid-Atlantic Regional Spaceport Launch Pad 0
Predicate: associatedRocket
Object: Minotaur IV

Triple: ['__subject__ Mid-Atlantic Regional Spaceport Launch Pad 0 __predicate__ associatedRocket __object__ Minotaur IV']
Text: The Minotaur IV rocket was launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.
Subject: Mid-Atlantic Regional Spaceport Launch Pad 0
Predicate: associatedRocket
Object: Minotaur IV

Triple: ['__subject__ Mid-Atlantic Regional Spaceport Launch Pad 0 __predicate__ associatedRocket __object__ Minotaur V']
Text: The Mid-Atlantic Regional Spaceport Launch Pad 0 is associated with the Minotaur V rocket.
Subject: Mid-Atlantic Regional Spaceport Launch Pad 0
Predicate: associatedRocket
Object: Minotaur V

Triple: ['__subject__ Mid-Atlantic Regional Spaceport Launch Pad 0 __predicate__ associatedRocket __object__ Minotaur V']
Text: The Mid-Atlantic Regional Spaceport Launch Pad 0 is associated with the Rocket Minotaur V.
Subject: Mid-Atlantic Regional Spaceport Launch Pad 0
Predicate: associatedRocket
Object: Minotaur V

Triple: ['__subject__ Mid-Atlantic Regional Spaceport Launch Pad 0 __predicate__ associatedRocket __object__ Minotaur V']
Text: The Minotaur V was launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.
Subject: Mid-Atlantic Regional Spaceport Launch Pad 0
Predicate: associatedRocket
Object: Minotaur V

Triple: ['__subject__ Milan __predicate__ saint __object__ Ambrose']
Text: The saint of Milan is Ambrose.
Subject: Milan
Predicate: saint
Object: Ambrose

Triple: ['__subject__ Neptun Werft __predicate__ city __object__ Rostock']
Text: Neptun Werft is located in Rostock.
Subject: Neptun Werft
Predicate: city
Object: Rostock

Triple: ['__subject__ Neptun Werft __predicate__ city __object__ Rostock']
Text: The Neptun Werft is located in Rostock.
Subject: Neptun Werft
Predicate: city
Object: Rostock

Triple: ['__subject__ Neptun Werft __predicate__ city __object__ Rostock']
Text: Neptun Werft is headquartered in Rostock.
Subject: Neptun Werft
Predicate: city
Object: Rostock

Triple: ['__subject__ Neptun Werft __predicate__ country __object__ Germany']
Text: Neptun Werft is located in Germany.
Subject: Neptun Werft
Predicate: country
Object: Germany

Triple: ['__subject__ Neptun Werft __predicate__ country __object__ Germany']
Text: Neptun Werft is in Germany.
Subject: Neptun Werft
Predicate: country
Object: Germany

Triple: ['__subject__ P&O (company) __predicate__ location __object__ London']
Text: The location of the company P&O is London.
Subject: P&O (company)
Predicate: location
Object: London

Triple: ['__subject__ P&O (company) __predicate__ location __object__ London']
Text: P&O company is located in London.
Subject: P&O (company)
Predicate: location
Object: London

Triple: ['__subject__ P&O (company) __predicate__ location __object__ London']
Text: P&O transporting company is located in London.
Subject: P&O (company)
Predicate: location
Object: London

Triple: ['__subject__ Plymouth Plaza __predicate__ manufacturer __object__ Plymouth (automobile)']
Text: The Plymouth Plaza was manufactured by Plymouth.
Subject: Plymouth Plaza
Predicate: manufacturer
Object: Plymouth (automobile)

Triple: ['__subject__ Plymouth Plaza __predicate__ manufacturer __object__ Plymouth (automobile)']
Text: Plymouth are the manufacturers of the Plymouth Plaza.
Subject: Plymouth Plaza
Predicate: manufacturer
Object: Plymouth (automobile)

Triple: ['__subject__ Plymouth Plaza __predicate__ relatedMeanOfTransportation __object__ 1955 Dodge']
Text: Plymouth Plaza is related to the 1955 Dodge.
Subject: Plymouth Plaza
Predicate: relatedMeanOfTransportation
Object: 1955 Dodge

Triple: ['__subject__ Plymouth Plaza __predicate__ relatedMeanOfTransportation __object__ 1955 Dodge']
Text: The Dodge 1955 is a related mean of transportation to the Plymouth Plaza.
Subject: Plymouth Plaza
Predicate: relatedMeanOfTransportation
Object: 1955 Dodge

Triple: ['__subject__ Plymouth Plaza __predicate__ successor __object__ Plymouth Satellite']
Text: The Plymouth Plaza's successor is the Plymouth Satellite.
Subject: Plymouth Plaza
Predicate: successor
Object: Plymouth Satellite

Triple: ['__subject__ Plymouth Plaza __predicate__ successor __object__ Plymouth Satellite']
Text: The Plymouth Plaza was succeeded by the Plymouth Satellite.
Subject: Plymouth Plaza
Predicate: successor
Object: Plymouth Satellite

Triple: ['__subject__ Richard A. Teague __predicate__ employer __object__ Chrysler']
Text: Richard A. Teague works for Chrysler.
Subject: Richard A. Teague
Predicate: employer
Object: Chrysler

Triple: ['__subject__ Richard A. Teague __predicate__ employer __object__ Chrysler']
Text: Richard A. Teague is employed by Chrysler.
Subject: Richard A. Teague
Predicate: employer
Object: Chrysler

Triple: ['__subject__ Richard A. Teague __predicate__ employer __object__ General Motors']
Text: Richard A Teague is an employee of General Motors.
Subject: Richard A. Teague
Predicate: employer
Object: General Motors

Triple: ['__subject__ Richard A. Teague __predicate__ employer __object__ General Motors']
Text: Richard A. Teague's employer is General Motors.
Subject: Richard A. Teague
Predicate: employer
Object: General Motors

Triple: ['__subject__ Rostock __predicate__ country __object__ Germany']
Text: Rostock is in Germany.
Subject: Rostock
Predicate: country
Object: Germany

Triple: ['__subject__ SEAT Ibiza __predicate__ relatedMeanOfTransportation __object__ Audi A1']
Text: The SEAT Ibiza and the Audi A1 are similar means of transport.
Subject: SEAT Ibiza
Predicate: relatedMeanOfTransportation
Object: Audi A1

Triple: ['__subject__ SEAT Ibiza __predicate__ relatedMeanOfTransportation __object__ Audi A1']
Text: The SEAT Ibiza is related to the Audi A1.
Subject: SEAT Ibiza
Predicate: relatedMeanOfTransportation
Object: Audi A1

Triple: ['__subject__ SEAT Ibiza __predicate__ relatedMeanOfTransportation __object__ Audi A1']
Text: The SEAT Ibiza and the Audi A1 are related means of transportation.
Subject: SEAT Ibiza
Predicate: relatedMeanOfTransportation
Object: Audi A1

Triple: ['__subject__ SEAT Ibiza __predicate__ relatedMeanOfTransportation __object__ Volkswagen Polo Mk3']
Text: The SEAT Ibiza is related to the Volkswagen Polo Mk3.
Subject: SEAT Ibiza
Predicate: relatedMeanOfTransportation
Object: Volkswagen Polo Mk3

Triple: ['__subject__ Saab 9000 __predicate__ relatedMeanOfTransportation __object__ Alfa Romeo 164']
Text: Saab 9000 is related to Alfa Romeo 164.
Subject: Saab 9000
Predicate: relatedMeanOfTransportation
Object: Alfa Romeo 164

Triple: ['__subject__ Sovcomflot __predicate__ keyPerson __object__ Sergey Naryshkin']
Text: Sergey Naryshkin is a key person at Sovcomflot.
Subject: Sovcomflot
Predicate: keyPerson
Object: Sergey Naryshkin

Triple: ['__subject__ Sovcomflot __predicate__ keyPerson __object__ Sergey Naryshkin']
Text: Sergey Naryshkin is a key person at the company Sovcomflot.
Subject: Sovcomflot
Predicate: keyPerson
Object: Sergey Naryshkin

Triple: ['__subject__ Spaceport Florida Launch Complex 36 __predicate__ operator __object__ United States Air Force']
Text: Spaceport Florida Launch Complex 36 is operated by the United States Air Force.
Subject: Spaceport Florida Launch Complex 36
Predicate: operator
Object: United States Air Force

Triple: ['__subject__ Spaceport Florida Launch Complex 36 __predicate__ operator __object__ United States Air Force']
Text: The Spaceport Florida Launch Complex 36 is operated by the U.S. Air Force.
Subject: Spaceport Florida Launch Complex 36
Predicate: operator
Object: United States Air Force

Triple: ['__subject__ United Kingdom __predicate__ capital __object__ London']
Text: London is the capital of the United Kingdom.
Subject: United Kingdom
Predicate: capital
Object: London

Triple: ['__subject__ United Kingdom __predicate__ capital __object__ London']
Text: The capital of the UK is London.
Subject: United Kingdom
Predicate: capital
Object: London

Triple: ['__subject__ United Kingdom __predicate__ capital __object__ London']
Text: London is the capital of the UK.
Subject: United Kingdom
Predicate: capital
Object: London

Triple: ['__subject__ United Kingdom __predicate__ leader __object__ Elizabeth II']
Text: Elizabeth II is the leader of the United Kingdom.
Subject: United Kingdom
Predicate: leader
Object: Elizabeth II

Triple: ['__subject__ United Kingdom __predicate__ leader __object__ Elizabeth II']
Text: The ruler of the United Kingdom is Queen Elizabeth II.
Subject: United Kingdom
Predicate: leader
Object: Elizabeth II

Triple: ['__subject__ United States __predicate__ capital __object__ Washington, D.C.']
Text: Washington D.C. is the capital city of the United States.
Subject: United States
Predicate: capital
Object: Washington, D.C.

Triple: ['__subject__ United States __predicate__ capital __object__ Washington, D.C.']
Text: The capital of the United States is Washington, D.C.
Subject: United States
Predicate: capital
Object: Washington, D.C.

Triple: ['__subject__ United States __predicate__ capital __object__ Washington, D.C.']
Text: Washington D.C. is the capital of the United States.
Subject: United States
Predicate: capital
Object: Washington, D.C.

Triple: ['__subject__ United States __predicate__ demonym __object__ Americans']
Text: Americans live in the U.S.
Subject: United States
Predicate: demonym
Object: Americans

Triple: ['__subject__ United States __predicate__ demonym __object__ Americans']
Text: The people of the United States are called Americans.
Subject: United States
Predicate: demonym
Object: Americans

Triple: ['__subject__ United States __predicate__ demonym __object__ Americans']
Text: The inhabitants of the United States are called Americans.
Subject: United States
Predicate: demonym
Object: Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: One of the ethnic groups in the United States is African Americans.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: United States has ethnic groups including African Americans.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: African Americans are among the ethnic groups in the United States.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']
Text: Asian Americans are one of the ethnic groups of the United States.
Subject: United States
Predicate: ethnicGroup
Object: Asian Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Asian Americans']
Text: Asian Americans are an ethnic group in the U.S.
Subject: United States
Predicate: ethnicGroup
Object: Asian Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ White Americans']
Text: White Americans are an ethnic group in the United States.
Subject: United States
Predicate: ethnicGroup
Object: White Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ White Americans']
Text: White Americans are one of the ethnic groups in the United States.
Subject: United States
Predicate: ethnicGroup
Object: White Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ White Americans']
Text: White Americans are an ethnic group of the United States.
Subject: United States
Predicate: ethnicGroup
Object: White Americans

Triple: ['__subject__ United States __predicate__ language __object__ English language']
Text: English is spoken in the U.S.
Subject: United States
Predicate: language
Object: English language

Triple: ['__subject__ United States __predicate__ language __object__ English language']
Text: The language in the United States is English.
Subject: United States
Predicate: language
Object: English language

Triple: ['__subject__ United States __predicate__ language __object__ English language']
Text: English is the language of the United States.
Subject: United States
Predicate: language
Object: English language

Triple: ['__subject__ United States __predicate__ leaderTitle __object__ President of the United States']
Text: The leader of the United States has the title President of the United States.
Subject: United States
Predicate: leaderTitle
Object: President of the United States

Triple: ['__subject__ United States __predicate__ leaderTitle __object__ President of the United States']
Text: The leader of the United States is the President of the United States.
Subject: United States
Predicate: leaderTitle
Object: President of the United States

Triple: ['__subject__ United States __predicate__ leaderTitle __object__ President of the United States']
Text: The title of the leader of United States is The President of the United States.
Subject: United States
Predicate: leaderTitle
Object: President of the United States

Triple: ['__subject__ Vandenberg AFB Space Launch Complex 3 __predicate__ operator __object__ United States Air Force']
Text: The operator of the Vandenberg AFB Space Launch Complex 3 is the United States Air Force.
Subject: Vandenberg AFB Space Launch Complex 3
Predicate: operator
Object: United States Air Force

Triple: ['__subject__ Vandenberg Air Force Base __predicate__ location __object__ Lompoc, California']
Text: The Vandenberg Air Force Base is located in Lompoc, California.
Subject: Vandenberg Air Force Base
Predicate: location
Object: Lompoc, California

Triple: ['__subject__ Vandenberg Air Force Base __predicate__ location __object__ Lompoc, California']
Text: The Vandenberg Air Force Base is in Lompoc, CA.
Subject: Vandenberg Air Force Base
Predicate: location
Object: Lompoc, California

Triple: ['__subject__ Vandenberg Air Force Base __predicate__ location __object__ Lompoc, California']
Text: Vandenberg Air Force Base is located in Lompoc, California.
Subject: Vandenberg Air Force Base
Predicate: location
Object: Lompoc, California

Triple: ['__subject__ Volkswagen Polo __predicate__ relatedMeanOfTransportation __object__ Audi A1']
Text: Volkswagen Polo and Audi A1 are related forms of transportation.
Subject: Volkswagen Polo
Predicate: relatedMeanOfTransportation
Object: Audi A1

Triple: ['__subject__ Volkswagen Polo __predicate__ relatedMeanOfTransportation __object__ Audi A1']
Text: Volkswagen Polo is related to Audi A1.
Subject: Volkswagen Polo
Predicate: relatedMeanOfTransportation
Object: Audi A1

Triple: ['__subject__ Yuzhnoye Design Office __predicate__ location __object__ Dnipropetrovsk']
Text: The Yuzhnoye Design Office is located in Dnipropetrovsk.
Subject: Yuzhnoye Design Office
Predicate: location
Object: Dnipropetrovsk

Triple: ['__subject__ Yuzhnoye Design Office __predicate__ location __object__ Dnipropetrovsk']
Text: The Yuzhnoye Design Office is in Dnipropetrovsk.
Subject: Yuzhnoye Design Office
Predicate: location
Object: Dnipropetrovsk

Triple: ['__subject__ Yuzhnoye Design Office __predicate__ location __object__ Dnipropetrovsk']
Text: The Yuzhnoye Design Office is situated in Dnipropetrovsk.
Subject: Yuzhnoye Design Office
Predicate: location
Object: Dnipropetrovsk

Triple: ['__subject__ Yuzhnoye Design Office __predicate__ location __object__ Ukraine']
Text: The Yuzhnoye Design Office is located in the Ukraine.
Subject: Yuzhnoye Design Office
Predicate: location
Object: Ukraine

Triple: ['__subject__ Yuzhnoye Design Office __predicate__ location __object__ Ukraine']
Text: Yuzhnoye Design Office is located in the Ukraine.
Subject: Yuzhnoye Design Office
Predicate: location
Object: Ukraine

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ category __object__ Contributing property']
Text: The 11th Mississippi Infantry Monument falls under the category of Contributing property.
Subject: 11th Mississippi Infantry Monument
Predicate: category
Object: Contributing property

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ category __object__ Contributing property']
Text: The 11th Mississippi Infantry Monument is categorized as a Contributing Property.
Subject: 11th Mississippi Infantry Monument
Predicate: category
Object: Contributing property

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ category __object__ Contributing property']
Text: The 11th Mississippi Infantry Monument is categorised as a contributing property.
Subject: 11th Mississippi Infantry Monument
Predicate: category
Object: Contributing property

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ country __object__ United States']
Text: The 11th Mississippi Infantry Monument is located in the United States.
Subject: 11th Mississippi Infantry Monument
Predicate: country
Object: United States

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ country __object__ United States']
Text: 11th Mississippi Infantry Monument is in the United States.
Subject: 11th Mississippi Infantry Monument
Predicate: country
Object: United States

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ country __object__ United States']
Text: The 11th Mississippi Infantry Monument is in the United States.
Subject: 11th Mississippi Infantry Monument
Predicate: country
Object: United States

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ country __object__ United States']
Text: The 11th Mississippi Infantry Monument is based in the US.
Subject: 11th Mississippi Infantry Monument
Predicate: country
Object: United States

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania']
Text: 11th Mississippi Infantry Monument's location is Adams County, Pennsylvania.
Subject: 11th Mississippi Infantry Monument
Predicate: location
Object: Adams County, Pennsylvania

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania']
Text: The location of the 11th Mississippi Infantry Monument is Adams County, Pennsylvania.
Subject: 11th Mississippi Infantry Monument
Predicate: location
Object: Adams County, Pennsylvania

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania']
Text: The 11th Mississippi Infantry Monument is located in Adams County, Pennsylvania.
Subject: 11th Mississippi Infantry Monument
Predicate: location
Object: Adams County, Pennsylvania

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Adams County, Pennsylvania']
Text: 11th Mississippi Infantry Monument is found in the Adams County in Pennsylvania.
Subject: 11th Mississippi Infantry Monument
Predicate: location
Object: Adams County, Pennsylvania

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Seminary Ridge']
Text: The 11th Mississippi Infantry Monument is located at Seminary Ridge.
Subject: 11th Mississippi Infantry Monument
Predicate: location
Object: Seminary Ridge

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ location __object__ Seminary Ridge']
Text: The 11th Mississippi Infantry Monument's location is in the Seminary Ridge.
Subject: 11th Mississippi Infantry Monument
Predicate: location
Object: Seminary Ridge

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']
Text: The 11th Mississippi Infantry Monument is in the municipality of Gettysburg, Pennsylvania.
Subject: 11th Mississippi Infantry Monument
Predicate: municipality
Object: Gettysburg, Pennsylvania

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']
Text: The 11th Mississippi Infantry Monument is placed in the municipality of Gettysburg in Pennsylvania.
Subject: 11th Mississippi Infantry Monument
Predicate: municipality
Object: Gettysburg, Pennsylvania

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']
Text: The 11th Mississippi Infantry Monument is in the municipality of Gettysburg in Pennsylvania.
Subject: 11th Mississippi Infantry Monument
Predicate: municipality
Object: Gettysburg, Pennsylvania

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']
Text: The 11th Mississippi Infantry Monument is located in Gettysburg, Pennsylvania.
Subject: 11th Mississippi Infantry Monument
Predicate: municipality
Object: Gettysburg, Pennsylvania

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']
Text: 11th Mississippi Infantry Monument is in Gettysburg, Pennsylvania.
Subject: 11th Mississippi Infantry Monument
Predicate: municipality
Object: Gettysburg, Pennsylvania

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']
Text: The 11th Mississippi Infantry Monument is located in the municipality of Gettysburg, Pennsylvania.
Subject: 11th Mississippi Infantry Monument
Predicate: municipality
Object: Gettysburg, Pennsylvania

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ municipality __object__ Gettysburg, Pennsylvania']
Text: The municipality for the 11th Mississippi Infantry Monument is Gettysburg, Pennsylvania.
Subject: 11th Mississippi Infantry Monument
Predicate: municipality
Object: Gettysburg, Pennsylvania

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania']
Text: The 11th Mississippi Infantry Monument is in Pennsylvania.
Subject: 11th Mississippi Infantry Monument
Predicate: state
Object: Pennsylvania

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania']
Text: The 11th Mississippi Infantry Monument is located in the state of Pennsylvania.
Subject: 11th Mississippi Infantry Monument
Predicate: state
Object: Pennsylvania

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania']
Text: The 11th Mississippi Infantry Monument stands in the state of Pennsylvania.
Subject: 11th Mississippi Infantry Monument
Predicate: state
Object: Pennsylvania

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania']
Text: 11th Mississippi Infantry Monument is in Pennsylvania.
Subject: 11th Mississippi Infantry Monument
Predicate: state
Object: Pennsylvania

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania']
Text: The 11th Mississippi Infantry Monument is found in Pennsylvania.
Subject: 11th Mississippi Infantry Monument
Predicate: state
Object: Pennsylvania

Triple: ['__subject__ 11th Mississippi Infantry Monument __predicate__ state __object__ Pennsylvania']
Text: The 11th Mississippi Infantry Monument is located in Pennsylvania state.
Subject: 11th Mississippi Infantry Monument
Predicate: state
Object: Pennsylvania

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ category __object__ Historic districts in the United States']
Text: The 14th New Jersey Volunteer Infantry Monument belongs to the category of Historic districts in the United States.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: category
Object: Historic districts in the United States

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ category __object__ Historic districts in the United States']
Text: The 14th New Jersey Volunteer Infantry Monument is categorised as a historic district in the United States.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: category
Object: Historic districts in the United States

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ country __object__ United States']
Text: The 14th New Jersey Volunteer Infantry Monument is located in the United States.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: country
Object: United States

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ country __object__ United States']
Text: The 14th New Jersey Volunteer Infantry Monument is found in the United States.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: country
Object: United States

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ country __object__ United States']
Text: 14th New Jersey Volunteer Infantry Monument is located in the United States.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: country
Object: United States

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ country __object__ United States']
Text: 14th New Jersey Volunteer Infantry Memorial is in the United States.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: country
Object: United States

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ district __object__ Monocacy National Battlefield']
Text: The 14th New Jersey Volunteer Infantry Monument is located in the district of the Monocacy National Battlefield.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: district
Object: Monocacy National Battlefield

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ district __object__ Monocacy National Battlefield']
Text: The 14th New Jersey Volunteer Infantry Monument is located on the Monocacy National Battlefield.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: district
Object: Monocacy National Battlefield

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ district __object__ Monocacy National Battlefield']
Text: The 14th New Jersey Volunteer Infantry Monument is located in the Monocacy National Battlefield.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: district
Object: Monocacy National Battlefield

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ district __object__ Monocacy National Battlefield']
Text: The 14th New Jersey Volunteer Infantry Monument is found in the Monocacy National Battlefield.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: district
Object: Monocacy National Battlefield

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ established __object__ 1907-07-11']
Text: The 14th New Jersey Volunteer Infantry Monument was established in 1907-07-11.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: established
Object: 1907-07-11

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ established __object__ 1907-07-11']
Text: The 14th New Jersey Volunteer Infantry Monument was established 1907-07-11.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: established
Object: 1907-07-11

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ established __object__ 1907-07-11']
Text: The 14th New Jersey Volunteer Infantry Monument was established on July 11th, 1907.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: established
Object: 1907-07-11

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ established __object__ 1907-07-11']
Text: The 14th New Jersey Volunteer Infantry Monument was established on 11th July 1907.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: established
Object: 1907-07-11

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ foundingDate __object__ 1907-07-11']
Text: 14th New Jersey Volunteer Infantry Monument was founded 1907-07-11.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: foundingDate
Object: 1907-07-11

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ foundingDate __object__ 1907-07-11']
Text: The memorial depicting the 14th New Jersey Volunteer Infantry was founded on July 11th, 1907.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: foundingDate
Object: 1907-07-11

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ foundingDate __object__ 1907-07-11']
Text: The 14th New Jersey Volunteer Infantry Monument was started on 11th July 1907.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: foundingDate
Object: 1907-07-11

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ foundingDate __object__ 1907-07-11']
Text: The 14th New Jersey Volunteer Infantry Monument's founding date was on 1907-07-11.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: foundingDate
Object: 1907-07-11

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ owner __object__ National Park Service']
Text: The 14th New Jersey Volunteer Infantry Monument is owned by the National Park Service.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: owner
Object: National Park Service

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ owner __object__ National Park Service']
Text: The National Park Service looks after the 14th New Jersey Volunteer Infantry Monument.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: owner
Object: National Park Service

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ owner __object__ National Park Service']
Text: 14th New Jersey Volunteer Infantry Monument is owned by the National Park Service.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: owner
Object: National Park Service

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ owner __object__ National Park Service']
Text: The National Park Service is the owner of the 14th New Jersey Volunteer Infantry Monument.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: owner
Object: National Park Service

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ owningOrganisation __object__ National Park Service']
Text: The 14th New Jersey Volunteer Infantry Monument is owned by the National Park Service.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: owningOrganisation
Object: National Park Service

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ owningOrganisation __object__ National Park Service']
Text: The 14th New Jersey Volunteer Infantry Monument has been provided by the National Park Service.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: owningOrganisation
Object: National Park Service

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ owningOrganisation __object__ National Park Service']
Text: 14th New Jersey Volunteer Infantry Monument is owned by the National Park Service.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: owningOrganisation
Object: National Park Service

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ owningOrganisation __object__ National Park Service']
Text: The National Park Service has responsibility for the 14th New Jersey Volunteer Infantry Monument.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: owningOrganisation
Object: National Park Service

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ owningOrganisation __object__ National Park Service']
Text: The National Park Service owns the 14th New Jersey Volunteer Infantry Monument.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: owningOrganisation
Object: National Park Service

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ state __object__ Maryland']
Text: The 14th New Jersey Volunteer Infantry Monuments is located in the state of Maryland.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: state
Object: Maryland

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ state __object__ Maryland']
Text: The 14th New Jersey Volunteer infantry Monument is in the state of Maryland.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: state
Object: Maryland

Triple: ['__subject__ 14th New Jersey Volunteer Infantry Monument __predicate__ state __object__ Maryland']
Text: The 14th New Jersey Volunteer Infantry Monument is located in the state of Maryland.
Subject: 14th New Jersey Volunteer Infantry Monument
Predicate: state
Object: Maryland

Triple: ['__subject__ Adams County, Pennsylvania __predicate__ hasToItsNorth __object__ Cumberland County, Pennsylvania']
Text: Adams County, Pennsylvania has Cumberland County, Pennsylvania to its north.
Subject: Adams County, Pennsylvania
Predicate: hasToItsNorth
Object: Cumberland County, Pennsylvania

Triple: ['__subject__ Adams County, Pennsylvania __predicate__ hasToItsNorth __object__ Cumberland County, Pennsylvania']
Text: Cumberland county, Pennsylvania is north of Adams County, Pennsylvania.
Subject: Adams County, Pennsylvania
Predicate: hasToItsNorth
Object: Cumberland County, Pennsylvania

Triple: ['__subject__ Adams County, Pennsylvania __predicate__ hasToItsNorth __object__ Cumberland County, Pennsylvania']
Text: Pennsylvania's Cumberland County is to the north of the Adams County.
Subject: Adams County, Pennsylvania
Predicate: hasToItsNorth
Object: Cumberland County, Pennsylvania

Triple: ['__subject__ Adams County, Pennsylvania __predicate__ hasToItsNorth __object__ Cumberland County, Pennsylvania']
Text: Cumberland County Pennsylvania is located in the north of Adams County Pennsylvania.
Subject: Adams County, Pennsylvania
Predicate: hasToItsNorth
Object: Cumberland County, Pennsylvania

Triple: ['__subject__ Adams County, Pennsylvania __predicate__ hasToItsNorth __object__ Cumberland County, Pennsylvania']
Text: To the north of Adams County, Pennsylvania is Cumberland County, Pennsylvania.
Subject: Adams County, Pennsylvania
Predicate: hasToItsNorth
Object: Cumberland County, Pennsylvania

Triple: ['__subject__ Adams County, Pennsylvania __predicate__ hasToItsSouthwest __object__ Frederick County, Maryland']
Text: Frederick County, Maryland is to the southwest of Adams County, Pennsylvania.
Subject: Adams County, Pennsylvania
Predicate: hasToItsSouthwest
Object: Frederick County, Maryland

Triple: ['__subject__ Adams County, Pennsylvania __predicate__ hasToItsSouthwest __object__ Frederick County, Maryland']
Text: Adams County, Pennsylvania has Frederick County, Maryland to its southwest.
Subject: Adams County, Pennsylvania
Predicate: hasToItsSouthwest
Object: Frederick County, Maryland

Triple: ['__subject__ Adams County, Pennsylvania __predicate__ hasToItsSouthwest __object__ Frederick County, Maryland']
Text: Frederick County Maryland is southwest of Adams County Pennsylvania.
Subject: Adams County, Pennsylvania
Predicate: hasToItsSouthwest
Object: Frederick County, Maryland

Triple: ['__subject__ Adams County, Pennsylvania __predicate__ hasToItsSouthwest __object__ Frederick County, Maryland']
Text: Maryland's Frederick County is found to the southwest of Pennsylvania's Adams County.
Subject: Adams County, Pennsylvania
Predicate: hasToItsSouthwest
Object: Frederick County, Maryland

Triple: ['__subject__ Adams County, Pennsylvania __predicate__ hasToItsWest __object__ Franklin County, Pennsylvania']
Text: Adams County Pennsylvania is East of Franklin County, Pennsylvania.
Subject: Adams County, Pennsylvania
Predicate: hasToItsWest
Object: Franklin County, Pennsylvania

Triple: ['__subject__ Adams County, Pennsylvania __predicate__ hasToItsWest __object__ Franklin County, Pennsylvania']
Text: To the west of Adams County, Pennsylvania, is Franklin County, Pennsylvania.
Subject: Adams County, Pennsylvania
Predicate: hasToItsWest
Object: Franklin County, Pennsylvania

Triple: ['__subject__ Adams County, Pennsylvania __predicate__ hasToItsWest __object__ Franklin County, Pennsylvania']
Text: Pennsylvania's Franklin County is found to the west of Adams County.
Subject: Adams County, Pennsylvania
Predicate: hasToItsWest
Object: Franklin County, Pennsylvania

Triple: ['__subject__ Adams County, Pennsylvania __predicate__ hasToItsWest __object__ Franklin County, Pennsylvania']
Text: Adams County, Pennsylvania has to its west Franklin County, Pennsylvania.
Subject: Adams County, Pennsylvania
Predicate: hasToItsWest
Object: Franklin County, Pennsylvania

Triple: ['__subject__ Atatürk Monument (İzmir) __predicate__ inaugurationDate __object__ 1932-07-27']
Text: The Ataturk Monument was inaugurated on 27th July, 1932.
Subject: Atatürk Monument (İzmir)
Predicate: inaugurationDate
Object: 1932-07-27

Triple: ['__subject__ Atatürk Monument (İzmir) __predicate__ inaugurationDate __object__ 1932-07-27']
Text: The inauguration date of the Atatürk Monument in Izmir is the 27th of July, 1932.
Subject: Atatürk Monument (İzmir)
Predicate: inaugurationDate
Object: 1932-07-27

Triple: ['__subject__ Atatürk Monument (İzmir) __predicate__ inaugurationDate __object__ 1932-07-27']
Text: The inauguration date for the Atatürk Monument (İzmir) is 1932-07-27.
Subject: Atatürk Monument (İzmir)
Predicate: inaugurationDate
Object: 1932-07-27

Triple: ['__subject__ Atatürk Monument (İzmir) __predicate__ inaugurationDate __object__ 1932-07-27']
Text: The inauguration of the Atatürk Monument was at July 27th, 1932.
Subject: Atatürk Monument (İzmir)
Predicate: inaugurationDate
Object: 1932-07-27

Triple: ['__subject__ Atatürk Monument (İzmir) __predicate__ location __object__ Turkey']
Text: The Atatürk Monument is located in Izmir, Turkey.
Subject: Atatürk Monument (İzmir)
Predicate: location
Object: Turkey

Triple: ['__subject__ Atatürk Monument (İzmir) __predicate__ location __object__ Turkey']
Text: The Ataturk Monument (Izmir) is located in Turkey.
Subject: Atatürk Monument (İzmir)
Predicate: location
Object: Turkey

Triple: ['__subject__ Atatürk Monument (İzmir) __predicate__ location __object__ Turkey']
Text: The Atatürk Monument is in Turkey.
Subject: Atatürk Monument (İzmir)
Predicate: location
Object: Turkey

Triple: ['__subject__ Atatürk Monument (İzmir) __predicate__ location __object__ Turkey']
Text: The Atatürk Monument is located in İzmir, Turkey.
Subject: Atatürk Monument (İzmir)
Predicate: location
Object: Turkey

Triple: ['__subject__ Atatürk Monument (İzmir) __predicate__ location __object__ Turkey']
Text: The Atatürk Monument (İzmir) can be found in Turkey.
Subject: Atatürk Monument (İzmir)
Predicate: location
Object: Turkey

Triple: ['__subject__ Atatürk Monument (İzmir) __predicate__ location __object__ Turkey']
Text: The Atatürk Monument (İzmir) is found in Turkey.
Subject: Atatürk Monument (İzmir)
Predicate: location
Object: Turkey

Triple: ['__subject__ Atatürk Monument (İzmir) __predicate__ location __object__ Turkey']
Text: Atatürk Monument is located in İzmir, Turkey.
Subject: Atatürk Monument (İzmir)
Predicate: location
Object: Turkey

Triple: ['__subject__ Azerbaijan __predicate__ capital __object__ Baku']
Text: Baku is the capital of Azerbaijan.
Subject: Azerbaijan
Predicate: capital
Object: Baku

Triple: ['__subject__ Azerbaijan __predicate__ capital __object__ Baku']
Text: The capital of Azerbaijan is Baku.
Subject: Azerbaijan
Predicate: capital
Object: Baku

Triple: ['__subject__ Azerbaijan __predicate__ legislature __object__ National Assembly (Azerbaijan)']
Text: The National Assembly dictates the legislature of Azerbaijan.
Subject: Azerbaijan
Predicate: legislature
Object: National Assembly (Azerbaijan)

Triple: ['__subject__ Azerbaijan __predicate__ legislature __object__ National Assembly (Azerbaijan)']
Text: The National Assembly (Azerbaijan) is the source of legislature in Azerbaijan.
Subject: Azerbaijan
Predicate: legislature
Object: National Assembly (Azerbaijan)

Triple: ['__subject__ Azerbaijan __predicate__ legislature __object__ National Assembly (Azerbaijan)']
Text: The Azerbaijan legislature is known as the National Assembly.
Subject: Azerbaijan
Predicate: legislature
Object: National Assembly (Azerbaijan)

Triple: ['__subject__ Azerbaijan __predicate__ legislature __object__ National Assembly (Azerbaijan)']
Text: The National Assembly is the legislative branch of government in Azerbaijan.
Subject: Azerbaijan
Predicate: legislature
Object: National Assembly (Azerbaijan)

Triple: ['__subject__ Azerbaijan __predicate__ legislature __object__ National Assembly (Azerbaijan)']
Text: The legislature in Azerbaijan is National Assembly.
Subject: Azerbaijan
Predicate: legislature
Object: National Assembly (Azerbaijan)

Triple: ['__subject__ Azerbaijan __predicate__ legislature __object__ National Assembly (Azerbaijan)']
Text: Azerbaijan has legislature of National Assembly.
Subject: Azerbaijan
Predicate: legislature
Object: National Assembly (Azerbaijan)

Triple: ["__subject__ Baku Turkish Martyrs' Memorial __predicate__ dedicatedTo __object__ Ottoman Army soldiers killed in the Battle of Baku"]
Text: Baku Turkish Martyrs' Memorial is dedicated to the Ottoman Army soldiers killed in the Battle of Baku.
Subject: Baku Turkish Martyrs' Memorial
Predicate: dedicatedTo
Object: Ottoman Army soldiers killed in the Battle of Baku

Triple: ["__subject__ Baku Turkish Martyrs' Memorial __predicate__ dedicatedTo __object__ Ottoman Army soldiers killed in the Battle of Baku"]
Text: The Baku Turkish Martyrs' Memorial is dedicated to the Ottoman Army Soldiers killed in the Battle of Baku.
Subject: Baku Turkish Martyrs' Memorial
Predicate: dedicatedTo
Object: Ottoman Army soldiers killed in the Battle of Baku

Triple: ["__subject__ Baku Turkish Martyrs' Memorial __predicate__ dedicatedTo __object__ Ottoman Army soldiers killed in the Battle of Baku"]
Text: The Baku Turkish Martyrs Memorial has been dedicated to Ottoman Army soldiers killed in the Battle of Baku.
Subject: Baku Turkish Martyrs' Memorial
Predicate: dedicatedTo
Object: Ottoman Army soldiers killed in the Battle of Baku

Triple: ["__subject__ Baku Turkish Martyrs' Memorial __predicate__ dedicatedTo __object__ Ottoman Army soldiers killed in the Battle of Baku"]
Text: The Baku Turkish Martyrs Memorial is dedicated to the Ottoman Army soldiers killed in the Battle of Baku.
Subject: Baku Turkish Martyrs' Memorial
Predicate: dedicatedTo
Object: Ottoman Army soldiers killed in the Battle of Baku

Triple: ["__subject__ Baku Turkish Martyrs' Memorial __predicate__ designer __object__ Hüseyin Bütüner and Hilmi Güner"]
Text: Baku Turkish Martyrs' Memorial's designer was Hüseyin Bütüner and Hilmi Güner.
Subject: Baku Turkish Martyrs' Memorial
Predicate: designer
Object: Hüseyin Bütüner and Hilmi Güner

Triple: ["__subject__ Baku Turkish Martyrs' Memorial __predicate__ designer __object__ Hüseyin Bütüner and Hilmi Güner"]
Text: The Baku Turkish Martyrs' Memorial was designed by Hüseyin Bütüner and Hilmi Güner.
Subject: Baku Turkish Martyrs' Memorial
Predicate: designer
Object: Hüseyin Bütüner and Hilmi Güner

Triple: ["__subject__ Baku Turkish Martyrs' Memorial __predicate__ designer __object__ Hüseyin Bütüner and Hilmi Güner"]
Text: The designers of the Turkish Martyrs' memorial are Huseyin Butuner and Hilmi Guner.
Subject: Baku Turkish Martyrs' Memorial
Predicate: designer
Object: Hüseyin Bütüner and Hilmi Güner

Triple: ["__subject__ Baku Turkish Martyrs' Memorial __predicate__ designer __object__ Hüseyin Bütüner and Hilmi Güner"]
Text: The Baku Turkish Martyrs' Memorial was designed by Huseyin Butuner and Hilmi Guner.
Subject: Baku Turkish Martyrs' Memorial
Predicate: designer
Object: Hüseyin Bütüner and Hilmi Güner

Triple: ["__subject__ Baku Turkish Martyrs' Memorial __predicate__ designer __object__ Hüseyin Bütüner and Hilmi Güner"]
Text: Hüseyin Bütüner and Hilmi Güner designed the Baku Turkish Martyrs' Memorial.
Subject: Baku Turkish Martyrs' Memorial
Predicate: designer
Object: Hüseyin Bütüner and Hilmi Güner

Triple: ["__subject__ Baku Turkish Martyrs' Memorial __predicate__ designer __object__ Hüseyin Bütüner and Hilmi Güner"]
Text: Baku Turkish Martyrs' Memorial was designed by Huseyin Butuner and Hilmi Guner.
Subject: Baku Turkish Martyrs' Memorial
Predicate: designer
Object: Hüseyin Bütüner and Hilmi Güner

Triple: ["__subject__ Baku Turkish Martyrs' Memorial __predicate__ designer __object__ Hüseyin Bütüner and Hilmi Güner"]
Text: The designers of the Baku Turkish Martyrs' Memorial are Hüseyin Bütüner and Hilmi Güner.
Subject: Baku Turkish Martyrs' Memorial
Predicate: designer
Object: Hüseyin Bütüner and Hilmi Güner

Triple: ["__subject__ Baku Turkish Martyrs' Memorial __predicate__ designer __object__ Hüseyin Bütüner and Hilmi Güner"]
Text: Huseyin Butuner and Hilmi Guner are the designers of the Baku Turkish Martyrs' Memorial.
Subject: Baku Turkish Martyrs' Memorial
Predicate: designer
Object: Hüseyin Bütüner and Hilmi Güner

Triple: ["__subject__ Dead Man's Plack __predicate__ dedicatedTo __object__ Æthelwald, Ealdorman of East Anglia"]
Text: The Dead Man's Plack is dedicated to Æthelwald, Ealdorman of East Anglia.
Subject: Dead Man's Plack
Predicate: dedicatedTo
Object: Æthelwald, Ealdorman of East Anglia

Triple: ["__subject__ Dead Man's Plack __predicate__ dedicatedTo __object__ Æthelwald, Ealdorman of East Anglia"]
Text: Dead Man's Plack is dedicated to Æthelwald, Ealdorman of East Anglia.
Subject: Dead Man's Plack
Predicate: dedicatedTo
Object: Æthelwald, Ealdorman of East Anglia

Triple: ["__subject__ Dead Man's Plack __predicate__ location __object__ England"]
Text: The Dead Man's Plack is located in England.
Subject: Dead Man's Plack
Predicate: location
Object: England

Triple: ["__subject__ Dead Man's Plack __predicate__ location __object__ England"]
Text: Dead Man's Plack is in England.
Subject: Dead Man's Plack
Predicate: location
Object: England

Triple: ["__subject__ Dead Man's Plack __predicate__ location __object__ England"]
Text: Dead Man's Plack is found in England.
Subject: Dead Man's Plack
Predicate: location
Object: England

Triple: ["__subject__ Dead Man's Plack __predicate__ material __object__ Rock (geology)"]
Text: The Dead Man's Plack is made from rock.
Subject: Dead Man's Plack
Predicate: material
Object: Rock (geology)

Triple: ["__subject__ Dead Man's Plack __predicate__ material __object__ Rock (geology)"]
Text: Dead Man's Plack is made of rock.
Subject: Dead Man's Plack
Predicate: material
Object: Rock (geology)

Triple: ["__subject__ Dead Man's Plack __predicate__ material __object__ Rock (geology)"]
Text: Dead Man's Plack is made from stone.
Subject: Dead Man's Plack
Predicate: material
Object: Rock (geology)

Triple: ["__subject__ Dead Man's Plack __predicate__ material __object__ Rock (geology)"]
Text: The Dead Man's Plack is made with rock.
Subject: Dead Man's Plack
Predicate: material
Object: Rock (geology)

Triple: ['__subject__ England __predicate__ capital __object__ London']
Text: London is the capital of England.
Subject: England
Predicate: capital
Object: London

Triple: ['__subject__ England __predicate__ capital __object__ London']
Text: The capital of England is London.
Subject: England
Predicate: capital
Object: London

Triple: ['__subject__ England __predicate__ capital __object__ London']
Text: England's capital is London.
Subject: England
Predicate: capital
Object: London

Triple: ['__subject__ England __predicate__ ethnicGroup __object__ British Arabs']
Text: One of the ethnic groups found in England is the British Arabs.
Subject: England
Predicate: ethnicGroup
Object: British Arabs

Triple: ['__subject__ England __predicate__ ethnicGroup __object__ British Arabs']
Text: The British Arabs are an English ethnic group.
Subject: England
Predicate: ethnicGroup
Object: British Arabs

Triple: ['__subject__ England __predicate__ language __object__ Cornish language']
Text: One of the languages spoken in England is the Cornish language.
Subject: England
Predicate: language
Object: Cornish language

Triple: ['__subject__ England __predicate__ language __object__ Cornish language']
Text: Cornish language is spoken in England.
Subject: England
Predicate: language
Object: Cornish language

Triple: ['__subject__ England __predicate__ language __object__ Cornish language']
Text: Cornish is a language spoken in the Cornwall region of England.
Subject: England
Predicate: language
Object: Cornish language

Triple: ['__subject__ England __predicate__ religion __object__ Church of England']
Text: In England the main religion is the Church of England.
Subject: England
Predicate: religion
Object: Church of England

Triple: ['__subject__ England __predicate__ religion __object__ Church of England']
Text: The established religion in England is The Church of England.
Subject: England
Predicate: religion
Object: Church of England

Triple: ['__subject__ England __predicate__ religion __object__ Church of England']
Text: The religion of England is Church of England.
Subject: England
Predicate: religion
Object: Church of England

Triple: ['__subject__ Monocacy National Battlefield __predicate__ location __object__ Frederick County, Maryland']
Text: Monocacy National Battlefield is located in Frederick County, Maryland.
Subject: Monocacy National Battlefield
Predicate: location
Object: Frederick County, Maryland

Triple: ['__subject__ Monocacy National Battlefield __predicate__ location __object__ Frederick County, Maryland']
Text: The Monocacy National Battlefield is located in Frederick County, Maryland.
Subject: Monocacy National Battlefield
Predicate: location
Object: Frederick County, Maryland

Triple: ['__subject__ Monocacy National Battlefield __predicate__ location __object__ Frederick County, Maryland']
Text: The Monocacy National Battlefield is in the county Frederick, Maryland.
Subject: Monocacy National Battlefield
Predicate: location
Object: Frederick County, Maryland

Triple: ['__subject__ Monocacy National Battlefield __predicate__ nearestCity __object__ Frederick, Maryland']
Text: The city nearest to Monocacy National Battlefield is Frederick, Maryland.
Subject: Monocacy National Battlefield
Predicate: nearestCity
Object: Frederick, Maryland

Triple: ['__subject__ Monocacy National Battlefield __predicate__ nearestCity __object__ Frederick, Maryland']
Text: The nearest city to Monocacy National Battlefield is Frederick, Maryland.
Subject: Monocacy National Battlefield
Predicate: nearestCity
Object: Frederick, Maryland

Triple: ['__subject__ Turkey __predicate__ capital __object__ Ankara']
Text: Ankara is the capital of Turkey.
Subject: Turkey
Predicate: capital
Object: Ankara

Triple: ['__subject__ Turkey __predicate__ capital __object__ Ankara']
Text: The capital of Turkey is Ankara.
Subject: Turkey
Predicate: capital
Object: Ankara

Triple: ['__subject__ Turkey __predicate__ capital __object__ Ankara']
Text: Turkey's capital is Ankara.
Subject: Turkey
Predicate: capital
Object: Ankara

Triple: ['__subject__ Turkey __predicate__ capital __object__ Ankara']
Text: Ankara is the Turkish capital.
Subject: Turkey
Predicate: capital
Object: Ankara

Triple: ['__subject__ Turkey __predicate__ currency __object__ Turkish lira']
Text: The currency of Turkey is Turkish Lira.
Subject: Turkey
Predicate: currency
Object: Turkish lira

Triple: ['__subject__ Turkey __predicate__ currency __object__ Turkish lira']
Text: The currency of Turkey is the Turkish lira.
Subject: Turkey
Predicate: currency
Object: Turkish lira

Triple: ['__subject__ Turkey __predicate__ currency __object__ Turkish lira']
Text: The currency in Turkey is the Turkish Lira.
Subject: Turkey
Predicate: currency
Object: Turkish lira

Triple: ['__subject__ Turkey __predicate__ currency __object__ Turkish lira']
Text: Turkey's currency is the Turkish lira.
Subject: Turkey
Predicate: currency
Object: Turkish lira

Triple: ['__subject__ Turkey __predicate__ currency __object__ Turkish lira']
Text: The currency used in Turkey is lira.
Subject: Turkey
Predicate: currency
Object: Turkish lira

Triple: ['__subject__ Turkey __predicate__ currency __object__ Turkish lira']
Text: The Turkish currency is the Turkish lira.
Subject: Turkey
Predicate: currency
Object: Turkish lira

Triple: ['__subject__ Turkey __predicate__ largestCity __object__ Istanbul']
Text: The largest city in Turkey is Istanbul.
Subject: Turkey
Predicate: largestCity
Object: Istanbul

Triple: ['__subject__ Turkey __predicate__ largestCity __object__ Istanbul']
Text: Istanbul is the largest city in Turkey.
Subject: Turkey
Predicate: largestCity
Object: Istanbul

Triple: ['__subject__ Turkey __predicate__ largestCity __object__ Istanbul']
Text: Turkey's largest City is Istanbul.
Subject: Turkey
Predicate: largestCity
Object: Istanbul

Triple: ['__subject__ Turkey __predicate__ leader __object__ Ahmet Davutoğlu']
Text: Ahmet Davutoglu is a leader of Turkey.
Subject: Turkey
Predicate: leader
Object: Ahmet Davutoğlu

Triple: ['__subject__ Turkey __predicate__ leader __object__ Ahmet Davutoğlu']
Text: Ahmet Davutoglu is the leader of Turkey.
Subject: Turkey
Predicate: leader
Object: Ahmet Davutoğlu

Triple: ['__subject__ Turkey __predicate__ leader __object__ Ahmet Davutoğlu']
Text: Leader of Turkey is Ahmet Davutoglu.
Subject: Turkey
Predicate: leader
Object: Ahmet Davutoğlu

Triple: ['__subject__ Turkey __predicate__ leader __object__ Ahmet Davutoğlu']
Text: Ahmet Davutoğlu is Turkey's leader.
Subject: Turkey
Predicate: leader
Object: Ahmet Davutoğlu

Triple: ['__subject__ Turkey __predicate__ leader __object__ Ahmet Davutoğlu']
Text: The Leader Of Turkey is Ahmet Davutoğlu.
Subject: Turkey
Predicate: leader
Object: Ahmet Davutoğlu

Triple: ['__subject__ Turkey __predicate__ leader __object__ Ahmet Davutoğlu']
Text: Ahmet Davutoglu is the Turkish leader.
Subject: Turkey
Predicate: leader
Object: Ahmet Davutoğlu

Triple: ['__subject__ Turkey __predicate__ leader __object__ Ahmet Davutoğlu']
Text: Turkey's leader is Ahmet Davutoğlu.
Subject: Turkey
Predicate: leader
Object: Ahmet Davutoğlu

Triple: ['__subject__ Turkey __predicate__ leader __object__ Ahmet Davutoğlu']
Text: Turkey leader name is Ahmet Davutoğlu.
Subject: Turkey
Predicate: leader
Object: Ahmet Davutoğlu

Triple: ['__subject__ Turkey __predicate__ leader __object__ Ahmet Davutoğlu']
Text: The Turkish leader's name is Ahmet Davutoglu.
Subject: Turkey
Predicate: leader
Object: Ahmet Davutoğlu

Triple: ['__subject__ Turkey __predicate__ leaderTitle __object__ President of Turkey']
Text: The leader's title in Turkey is the President of Turkey.
Subject: Turkey
Predicate: leaderTitle
Object: President of Turkey

Triple: ['__subject__ Turkey __predicate__ leaderTitle __object__ President of Turkey']
Text: Turkey's leader is the President of Turkey.
Subject: Turkey
Predicate: leaderTitle
Object: President of Turkey

Triple: ['__subject__ Turkey __predicate__ leaderTitle __object__ President of Turkey']
Text: President of Turkey is the official title of the Turkish leader.
Subject: Turkey
Predicate: leaderTitle
Object: President of Turkey

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ American Civil War']
Text: Aaron S. Daggett fought in battles in the American Civil War.
Subject: Aaron S. Daggett
Predicate: battle
Object: American Civil War

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ American Civil War']
Text: Aaron S. Daggett fought in the American Civil War.
Subject: Aaron S. Daggett
Predicate: battle
Object: American Civil War

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Antietam']
Text: Aaron S. Daggett was in the Battle of Antietam.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of Antietam

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Antietam']
Text: Aaron S. Daggett fought in the Battle of Antietam.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of Antietam

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Cold Harbor']
Text: Aaron S Daggett took part on the Battle of Cold Harbor.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of Cold Harbor

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Cold Harbor']
Text: Aaron S. Daggett fought in the Battle of Cold Harbor.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of Cold Harbor

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Cold Harbor']
Text: Aaron S. Daggett battled in the Battle of Cold Harbour.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of Cold Harbor

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Fredericksburg']
Text: Aaron S. Daggett fought in the Battle of Fredericksburg.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of Fredericksburg

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Fredericksburg']
Text: Aaron S Daggett has fought in battles, the most notable being the Battle of Fredericksburg.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of Fredericksburg

Triple: ["__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Garnett's & Golding's Farm"]
Text: Aaron S. Daggett fought during the Battle of Garnett's & Golding's Farm.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of Garnett's & Golding's Farm

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Gettysburg']
Text: Aaron S. Daggett fought in the Battle of Gettysburg.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of Gettysburg

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Gettysburg']
Text: Aaron S Daggett fought at the Battle of Gettysburg.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of Gettysburg

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Salem Church']
Text: Aaron S Daggett fought in the Battle of Salem Church.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of Salem Church

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of Salem Church']
Text: Aaron S. Daggett fought in the Battle of Salem Church.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of Salem Church

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of South Mountain']
Text: Aaron S Daggett fought in the Battle of South Mountain.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of South Mountain

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of South Mountain']
Text: Aaron S. Daggett fought in the Battle of South Mountain.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of South Mountain

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of White Oak Swamp']
Text: Among the battles that Aaron S. Daggett fought in was the Battle of White Oak Swamp.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of White Oak Swamp

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of White Oak Swamp']
Text: Aaron S. Daggett fought in the Battle of White Oak Swamp.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of White Oak Swamp

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of White Oak Swamp']
Text: Aaron S. Daggett was present at the Battle of White Oak Swamp.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of White Oak Swamp

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of the Wilderness']
Text: One of Aaron S. Daggett's battles was the Battle of the Wilderness.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of the Wilderness

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of the Wilderness']
Text: Aaron S. Daggett fought in the Battle of the Wilderness.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of the Wilderness

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Battle of the Wilderness']
Text: Aaron S Daggett fought in the Battle of the Wilderness.
Subject: Aaron S. Daggett
Predicate: battle
Object: Battle of the Wilderness

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Second Battle of Rappahannock Station']
Text: One of the battles Aaron S. Daggett fought in, was the Second Battle of Rappahannock Station.
Subject: Aaron S. Daggett
Predicate: battle
Object: Second Battle of Rappahannock Station

Triple: ['__subject__ Aaron S. Daggett __predicate__ battle __object__ Second Battle of Rappahannock Station']
Text: Aaron S. Daggett fought in the Second Battle of Rappahannock Station.
Subject: Aaron S. Daggett
Predicate: battle
Object: Second Battle of Rappahannock Station

Triple: ['__subject__ Aaron S. Daggett __predicate__ birthPlace __object__ Greene, Maine']
Text: Aaron S. Daggett was born in Greene, Maine.
Subject: Aaron S. Daggett
Predicate: birthPlace
Object: Greene, Maine

Triple: ['__subject__ Aaron S. Daggett __predicate__ birthPlace __object__ Greene, Maine']
Text: Aaron S. Daggett was born in Greene Maine.
Subject: Aaron S. Daggett
Predicate: birthPlace
Object: Greene, Maine

Triple: ['__subject__ Aaron S. Daggett __predicate__ birthPlace __object__ Greene, Maine']
Text: The birth place of Aaron S. Daggett is Greene, Maine.
Subject: Aaron S. Daggett
Predicate: birthPlace
Object: Greene, Maine

Triple: ['__subject__ Aaron S. Daggett __predicate__ birthPlace __object__ Maine']
Text: Aaron S Daggett was born in Maine.
Subject: Aaron S. Daggett
Predicate: birthPlace
Object: Maine

Triple: ['__subject__ Aaron S. Daggett __predicate__ birthPlace __object__ Maine']
Text: Aaron S. Daggett was born in Maine.
Subject: Aaron S. Daggett
Predicate: birthPlace
Object: Maine

Triple: ['__subject__ Aaron S. Daggett __predicate__ birthPlace __object__ Maine']
Text: Maine is the birth place of Aaron S. Daggett.
Subject: Aaron S. Daggett
Predicate: birthPlace
Object: Maine

Triple: ['__subject__ Aaron S. Daggett __predicate__ deathPlace __object__ Massachusetts']
Text: Aaron S. Daggett's place of death was Massachusetts.
Subject: Aaron S. Daggett
Predicate: deathPlace
Object: Massachusetts

Triple: ['__subject__ Aaron S. Daggett __predicate__ deathPlace __object__ Massachusetts']
Text: Aaron S. Daggett died in Massachusetts.
Subject: Aaron S. Daggett
Predicate: deathPlace
Object: Massachusetts

Triple: ['__subject__ Aaron S. Daggett __predicate__ deathPlace __object__ West Roxbury']
Text: Aaron S Daggett died in West Roxbury.
Subject: Aaron S. Daggett
Predicate: deathPlace
Object: West Roxbury

Triple: ['__subject__ Aaron S. Daggett __predicate__ deathPlace __object__ West Roxbury']
Text: Aaron S. Daggett died in West Roxbury.
Subject: Aaron S. Daggett
Predicate: deathPlace
Object: West Roxbury

Triple: ['__subject__ Ab Klink __predicate__ almaMater __object__ Erasmus University Rotterdam']
Text: Ab Klink's Alma mater is Erasmus University Rotterdam.
Subject: Ab Klink
Predicate: almaMater
Object: Erasmus University Rotterdam

Triple: ['__subject__ Ab Klink __predicate__ almaMater __object__ Erasmus University Rotterdam']
Text: The alma mater of Ab Klink is Erasmus University in Rotterdam.
Subject: Ab Klink
Predicate: almaMater
Object: Erasmus University Rotterdam

Triple: ['__subject__ Ab Klink __predicate__ almaMater __object__ Erasmus University Rotterdam']
Text: Ab Klink attended Erasmus University Rotterdam.
Subject: Ab Klink
Predicate: almaMater
Object: Erasmus University Rotterdam

Triple: ['__subject__ Ab Klink __predicate__ almaMater __object__ Leiden University']
Text: The alma mater of Ab Klink is Leiden University.
Subject: Ab Klink
Predicate: almaMater
Object: Leiden University

Triple: ['__subject__ Ab Klink __predicate__ almaMater __object__ Leiden University']
Text: Ab Klink's alma mater is Leiden University.
Subject: Ab Klink
Predicate: almaMater
Object: Leiden University

Triple: ['__subject__ Ab Klink __predicate__ almaMater __object__ Leiden University']
Text: Ab Klink's alma mater was Leiden University.
Subject: Ab Klink
Predicate: almaMater
Object: Leiden University

Triple: ['__subject__ Ab Klink __predicate__ birthDate __object__ 1958-11-02']
Text: The date of birth of Ab Klink is 1958-11-02.
Subject: Ab Klink
Predicate: birthDate
Object: 1958-11-02

Triple: ['__subject__ Ab Klink __predicate__ birthDate __object__ 1958-11-02']
Text: Ab Klink was born on 2nd November 1958.
Subject: Ab Klink
Predicate: birthDate
Object: 1958-11-02

Triple: ['__subject__ Ab Klink __predicate__ birthDate __object__ 1958-11-02']
Text: Ab Klink was born in 1958-11-02.
Subject: Ab Klink
Predicate: birthDate
Object: 1958-11-02

Triple: ['__subject__ Ab Klink __predicate__ birthPlace __object__ Netherlands']
Text: Ab Klink was born in the Netherlands.
Subject: Ab Klink
Predicate: birthPlace
Object: Netherlands

Triple: ['__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam']
Text: Stellendam was the birthplace of Ab Klink.
Subject: Ab Klink
Predicate: birthPlace
Object: Stellendam

Triple: ['__subject__ Ab Klink __predicate__ birthPlace __object__ Stellendam']
Text: Ab Klink was born in Stellendam.
Subject: Ab Klink
Predicate: birthPlace
Object: Stellendam

Triple: ['__subject__ Ab Klink __predicate__ nationality __object__ Netherlands']
Text: Ab Klink is a national of the Netherlands.
Subject: Ab Klink
Predicate: nationality
Object: Netherlands

Triple: ['__subject__ Ab Klink __predicate__ nationality __object__ Netherlands']
Text: Ab Klink is from the Netherlands.
Subject: Ab Klink
Predicate: nationality
Object: Netherlands

Triple: ['__subject__ Ab Klink __predicate__ office __object__ Member of the House of Representatives']
Text: Ab Klink worked as a Member of the House of Representatives.
Subject: Ab Klink
Predicate: office
Object: Member of the House of Representatives

Triple: ['__subject__ Ab Klink __predicate__ office __object__ Member of the Senate']
Text: Ab Klink worked as a member of the senate.
Subject: Ab Klink
Predicate: office
Object: Member of the Senate

Triple: ['__subject__ Ab Klink __predicate__ office __object__ House of Representatives (Netherlands)']
Text: Ab Klink worked at the House of Representatives in Netherlands.
Subject: Ab Klink
Predicate: office
Object: House of Representatives (Netherlands)

Triple: ['__subject__ Ab Klink __predicate__ office __object__ Ministry of Health, Welfare and Sport (Netherlands)']
Text: Ab Klink worked at the Ministry of Health, Welfare and Sport in Netherlands.
Subject: Ab Klink
Predicate: office
Object: Ministry of Health, Welfare and Sport (Netherlands)

Triple: ['__subject__ Ab Klink __predicate__ office __object__ Senate (Netherlands)']
Text: Ab Klink worked at the Senate (Netherlands).
Subject: Ab Klink
Predicate: office
Object: Senate (Netherlands)

Triple: ['__subject__ Ab Klink __predicate__ office __object__ Senate (Netherlands)']
Text: Ab Klink worked in the Senate for the Netherlands.
Subject: Ab Klink
Predicate: office
Object: Senate (Netherlands)

Triple: ['__subject__ Ab Klink __predicate__ party __object__ Christian Democratic Appeal']
Text: Ab Klink belongs to the Christian Democratic Appeal party.
Subject: Ab Klink
Predicate: party
Object: Christian Democratic Appeal

Triple: ["__subject__ Abdul Rahman Ya'kub __predicate__ hasDeputy __object__ Stephen Yong Kuet Tze"]
Text: Stephen Yong Kuet Tze is the deputy of Abdul Rahman Ya'kub.
Subject: Abdul Rahman Ya'kub
Predicate: hasDeputy
Object: Stephen Yong Kuet Tze

Triple: ["__subject__ Abdul Rahman Ya'kub __predicate__ hasDeputy __object__ Stephen Yong Kuet Tze"]
Text: Abdul Rahman Ya'kub's deputy is Stephen Yong Kuet Tze.
Subject: Abdul Rahman Ya'kub
Predicate: hasDeputy
Object: Stephen Yong Kuet Tze

Triple: ["__subject__ Abdul Rahman Ya'kub __predicate__ hasDeputy __object__ Stephen Yong Kuet Tze"]
Text: Stephen Yong Kuet Tze is the deputy to Abdul Rahman Ya'kub.
Subject: Abdul Rahman Ya'kub
Predicate: hasDeputy
Object: Stephen Yong Kuet Tze

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ birthDate __object__ 1936-05-21']
Text: Abdul Taib Mahmud's date of birth is 1936-05-21.
Subject: Abdul Taib Mahmud
Predicate: birthDate
Object: 1936-05-21

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ birthDate __object__ 1936-05-21']
Text: Abdul Taib Mahmud was born on 1936-05-21.
Subject: Abdul Taib Mahmud
Predicate: birthDate
Object: 1936-05-21

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak']
Text: Abdul Taib Mahmud's birthplace was Kingdom of Sarawak.
Subject: Abdul Taib Mahmud
Predicate: birthPlace
Object: Kingdom of Sarawak

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak']
Text: Abdul Taib Mahmud was born in the Kingdom of Sarawak.
Subject: Abdul Taib Mahmud
Predicate: birthPlace
Object: Kingdom of Sarawak

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Kingdom of Sarawak']
Text: The birth place of Abdul Taib Mahmud was the Kingdom of Sarawak.
Subject: Abdul Taib Mahmud
Predicate: birthPlace
Object: Kingdom of Sarawak

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia']
Text: Miri, Malaysia, is the birthplace of Abdul Taib Mahmud.
Subject: Abdul Taib Mahmud
Predicate: birthPlace
Object: Miri, Malaysia

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ birthPlace __object__ Miri, Malaysia']
Text: Abdul Taib Mahmud was born in Miri, Malaysia.
Subject: Abdul Taib Mahmud
Predicate: birthPlace
Object: Miri, Malaysia

Triple: ["__subject__ Abdul Taib Mahmud __predicate__ party __object__ Barisan Ra'ayat Jati Sarawak"]
Text: Abdul Taib Mahmud is a member of the "Barisan Ra'ayat Jati Sarawak" party.
Subject: Abdul Taib Mahmud
Predicate: party
Object: Barisan Ra'ayat Jati Sarawak

Triple: ["__subject__ Abdul Taib Mahmud __predicate__ party __object__ Barisan Ra'ayat Jati Sarawak"]
Text: Abdul Taib Mahmud is a member of Barisan Ra'ayat Jati Sarawak party.
Subject: Abdul Taib Mahmud
Predicate: party
Object: Barisan Ra'ayat Jati Sarawak

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ party __object__ Parti Pesaka Bumiputera Bersatu']
Text: Abdul Taib Mahmud's party is the Parti Pesaka Bumiputera Bersatu.
Subject: Abdul Taib Mahmud
Predicate: party
Object: Parti Pesaka Bumiputera Bersatu

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ region __object__ Asajaya']
Text: Abdul Taib Mahmud's region is Asajaya.
Subject: Abdul Taib Mahmud
Predicate: region
Object: Asajaya

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ region __object__ Asajaya']
Text: Abdul Taib Mahmud comes from the Asajaya region.
Subject: Abdul Taib Mahmud
Predicate: region
Object: Asajaya

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ region __object__ Asajaya']
Text: Abdul Taib Mahmud is in the region of Asajaya.
Subject: Abdul Taib Mahmud
Predicate: region
Object: Asajaya

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ region __object__ Balingian']
Text: Abdul Taib Mahmud's region is Balingian.
Subject: Abdul Taib Mahmud
Predicate: region
Object: Balingian

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ region __object__ Balingian']
Text: Abdul Taib Mahmud comes from the region of Balingian.
Subject: Abdul Taib Mahmud
Predicate: region
Object: Balingian

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ region __object__ Balingian']
Text: Abdul Taib Mahmud is from the Balingian region.
Subject: Abdul Taib Mahmud
Predicate: region
Object: Balingian

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ residence __object__ Demak Jaya, Jalan Bako, Kuching, Sarawak']
Text: Abdul Taib Mahmud resides in Demak Jaya, Jalan Bako, Kuching, Sarawak.
Subject: Abdul Taib Mahmud
Predicate: residence
Object: Demak Jaya, Jalan Bako, Kuching, Sarawak

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ residence __object__ Demak Jaya, Jalan Bako, Kuching, Sarawak']
Text: The residence of Abdul Taib Mahmud is Demak Jaya, Jalan Bako, Kuching, Sarawak.
Subject: Abdul Taib Mahmud
Predicate: residence
Object: Demak Jaya, Jalan Bako, Kuching, Sarawak

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ residence __object__ Kuching']
Text: Abdul Taib Mahmud resides in Kuching.
Subject: Abdul Taib Mahmud
Predicate: residence
Object: Kuching

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ residence __object__ Kuching']
Text: Abdul Taib Mahmud lives in Kuching.
Subject: Abdul Taib Mahmud
Predicate: residence
Object: Kuching

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ residence __object__ Sarawak']
Text: Abdul Taib Mahmud lives in Sarawak.
Subject: Abdul Taib Mahmud
Predicate: residence
Object: Sarawak

Triple: ['__subject__ Abdul Taib Mahmud __predicate__ residence __object__ Sarawak']
Text: Abdul Taib Mahmud resides in Sarawak.
Subject: Abdul Taib Mahmud
Predicate: residence
Object: Sarawak

Triple: ["__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Abdul Rahman Ya'kub"]
Text: The successor of Abdul Taib Mahmud was Abdul Rahman Ya'kub.
Subject: Abdul Taib Mahmud
Predicate: successor
Object: Abdul Rahman Ya'kub

Triple: ["__subject__ Abdul Taib Mahmud __predicate__ successor __object__ Abdul Rahman Ya'kub"]
Text: Abdul Rahman Ya'kub succeeded Abdul Taib Mahmud.
Subject: Abdul Taib Mahmud
Predicate: successor
Object: Abdul Rahman Ya'kub

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ almaMater __object__ Technical Institute, Kaduna']
Text: The Technical Institute, Kaduna is the alma mater of Abdulsalami Abubakar.
Subject: Abdulsalami Abubakar
Predicate: almaMater
Object: Technical Institute, Kaduna

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ almaMater __object__ Technical Institute, Kaduna']
Text: Abdulsalami Abubakar's alma mater was the Technical Institute Kaduna.
Subject: Abdulsalami Abubakar
Predicate: almaMater
Object: Technical Institute, Kaduna

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ almaMater __object__ Technical Institute, Kaduna']
Text: The alma mater of Abdulsalami Abubakar was the Technical Institute, Kaduna.
Subject: Abdulsalami Abubakar
Predicate: almaMater
Object: Technical Institute, Kaduna

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ country __object__ Nigeria']
Text: Abdulsalami Abubakar's country is Nigeria.
Subject: Abdulsalami Abubakar
Predicate: country
Object: Nigeria

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ country __object__ Nigeria']
Text: Abdulsalami Abubakar is from Nigeria.
Subject: Abdulsalami Abubakar
Predicate: country
Object: Nigeria

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ country __object__ Nigeria']
Text: Abdulsalami Abubakar lives in Nigeria.
Subject: Abdulsalami Abubakar
Predicate: country
Object: Nigeria

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ inOfficeWhileVicePresident __object__ Mike Akhigbe']
Text: Abdulsalami Abubakar was in office while Mike Akhigbe was Vice President.
Subject: Abdulsalami Abubakar
Predicate: inOfficeWhileVicePresident
Object: Mike Akhigbe

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ inOfficeWhileVicePresident __object__ Mike Akhigbe']
Text: Abdulsalami Abubakar was in office while Mike Akhigbe was the Vice President.
Subject: Abdulsalami Abubakar
Predicate: inOfficeWhileVicePresident
Object: Mike Akhigbe

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ inOfficeWhileVicePresident __object__ Mike Akhigbe']
Text: Abdulsalami Abubakar was in office whilst Mike Akhigbe was Vice President.
Subject: Abdulsalami Abubakar
Predicate: inOfficeWhileVicePresident
Object: Mike Akhigbe

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ militaryBranch __object__ Nigerian Air Force']
Text: Abdulsalami Abubakar was a member of the Nigerian Air Force.
Subject: Abdulsalami Abubakar
Predicate: militaryBranch
Object: Nigerian Air Force

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ militaryBranch __object__ Nigerian Air Force']
Text: Abdulsalami Abubakar served in the Nigerian Air Force.
Subject: Abdulsalami Abubakar
Predicate: militaryBranch
Object: Nigerian Air Force

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ office __object__ Chief of the Defence Staff (Nigeria)']
Text: Abdulsalami Abubakar worked as the Nigerian Chief of the Defence Staff.
Subject: Abdulsalami Abubakar
Predicate: office
Object: Chief of the Defence Staff (Nigeria)

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ office __object__ Chief of the Defence Staff (Nigeria)']
Text: Abdulsalami Abubakar was the Chief of the Defence Staff in Nigeria.
Subject: Abdulsalami Abubakar
Predicate: office
Object: Chief of the Defence Staff (Nigeria)

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Al-Amin Daggash']
Text: Abdulsalami Abubakar's successor was Al-Amin Daggash.
Subject: Abdulsalami Abubakar
Predicate: successor
Object: Al-Amin Daggash

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Al-Amin Daggash']
Text: Al-Amin Daggash was succeeded by Abdulsalami Abubakar.
Subject: Abdulsalami Abubakar
Predicate: successor
Object: Al-Amin Daggash

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Al-Amin Daggash']
Text: Al-Amin Daggash was Abdulsalami Abubakar's successor.
Subject: Abdulsalami Abubakar
Predicate: successor
Object: Al-Amin Daggash

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Olusegun Obasanjo']
Text: Olusegun Obasanjo succeeded Abdulsalami Abubakar.
Subject: Abdulsalami Abubakar
Predicate: successor
Object: Olusegun Obasanjo

Triple: ['__subject__ Abdulsalami Abubakar __predicate__ successor __object__ Olusegun Obasanjo']
Text: Abdulsalami Abubakar's successor was Olusegun Obasanjo.
Subject: Abdulsalami Abubakar
Predicate: successor
Object: Olusegun Obasanjo

Triple: ['__subject__ Abel Caballero __predicate__ almaMater __object__ University of Santiago de Compostela']
Text: Abel Caballero's alma mater is the University of Santiago de Compostela.
Subject: Abel Caballero
Predicate: almaMater
Object: University of Santiago de Compostela

Triple: ['__subject__ Abel Caballero __predicate__ almaMater __object__ University of Santiago de Compostela']
Text: The alma mater for Abel Caballero is the University of Santiago de Compostela.
Subject: Abel Caballero
Predicate: almaMater
Object: University of Santiago de Compostela

Triple: ['__subject__ Abel Caballero __predicate__ birthPlace __object__ Galicia (Spain)']
Text: Abel Caballero was born in Galicia, Spain.
Subject: Abel Caballero
Predicate: birthPlace
Object: Galicia (Spain)

Triple: ['__subject__ Abel Caballero __predicate__ birthPlace __object__ Galicia (Spain)']
Text: Abel Caballero was born in Galicia in Spain.
Subject: Abel Caballero
Predicate: birthPlace
Object: Galicia (Spain)

Triple: ['__subject__ Abel Caballero __predicate__ birthPlace __object__ Ponteareas']
Text: Abel Caballero was born in Ponteareas.
Subject: Abel Caballero
Predicate: birthPlace
Object: Ponteareas

Triple: ['__subject__ Abel Caballero __predicate__ birthPlace __object__ Spain']
Text: Spain is the birthplace of Abel Caballero.
Subject: Abel Caballero
Predicate: birthPlace
Object: Spain

Triple: ['__subject__ Abel Caballero __predicate__ birthPlace __object__ Spain']
Text: Abel Caballero was born in Spain.
Subject: Abel Caballero
Predicate: birthPlace
Object: Spain

Triple: ['__subject__ Abel Caballero __predicate__ inOfficeWhilePrimeMinister __object__ Felipe González']
Text: Abel Caballero was in office while Felipe González was Prime Minister.
Subject: Abel Caballero
Predicate: inOfficeWhilePrimeMinister
Object: Felipe González

Triple: ['__subject__ Abel Caballero __predicate__ inOfficeWhilePrimeMinister __object__ Felipe González']
Text: Abel Caballero was in office while Felipe Gonzalez was Prime Minister.
Subject: Abel Caballero
Predicate: inOfficeWhilePrimeMinister
Object: Felipe González

Triple: ['__subject__ Abel Caballero __predicate__ inOfficeWhilePrimeMinister __object__ Felipe González']
Text: Abel Caballero was in office when Felipe Gonzalez was Prime Minister.
Subject: Abel Caballero
Predicate: inOfficeWhilePrimeMinister
Object: Felipe González

Triple: ['__subject__ Abel Caballero __predicate__ nationality __object__ Spain']
Text: Abel Caballero is Spanish.
Subject: Abel Caballero
Predicate: nationality
Object: Spain

Triple: ['__subject__ Abel Caballero __predicate__ nationality __object__ Spain']
Text: Abel Caballero is a national of Spain.
Subject: Abel Caballero
Predicate: nationality
Object: Spain

Triple: ['__subject__ Abel Caballero __predicate__ nationality __object__ Spain']
Text: Abel Caballero is from Spain.
Subject: Abel Caballero
Predicate: nationality
Object: Spain

Triple: ['__subject__ Abel Caballero __predicate__ office __object__ Mayor of Vigo']
Text: Abel Caballero works as the Mayor of Vigo.
Subject: Abel Caballero
Predicate: office
Object: Mayor of Vigo

Triple: ['__subject__ Abel Caballero __predicate__ office __object__ Mayor of Vigo']
Text: Abel Caballero was once Mayor of Vigo.
Subject: Abel Caballero
Predicate: office
Object: Mayor of Vigo

Triple: ['__subject__ Abel Caballero __predicate__ office __object__ Mayor of Vigo']
Text: Abel Caballero was Mayor of Vigo.
Subject: Abel Caballero
Predicate: office
Object: Mayor of Vigo

Triple: ['__subject__ Abel Caballero __predicate__ office __object__ Member of the Congress of Deputies']
Text: Abel Caballero worked as a Member of the Congress of Deputies.
Subject: Abel Caballero
Predicate: office
Object: Member of the Congress of Deputies

Triple: ['__subject__ Abel Caballero __predicate__ office __object__ Minister of Transport']
Text: Abel Caballero, while in office, was the Minister of Transport.
Subject: Abel Caballero
Predicate: office
Object: Minister of Transport

Triple: ['__subject__ Abel Caballero __predicate__ office __object__ Minister of Transport']
Text: Abel Caballero was the Minister of Transport.
Subject: Abel Caballero
Predicate: office
Object: Minister of Transport

Triple: ['__subject__ Abel Caballero __predicate__ office __object__ Minister of Transport']
Text: Abel Caballero worked as Minister of Transport.
Subject: Abel Caballero
Predicate: office
Object: Minister of Transport

Triple: ['__subject__ Abel Caballero __predicate__ office __object__ Ministry of Public Works and Transport (Spain)']
Text: Abel Caballero worked at the Ministry of Public Works and Transport in Spain.
Subject: Abel Caballero
Predicate: office
Object: Ministry of Public Works and Transport (Spain)

Triple: ['__subject__ Abel Caballero __predicate__ office __object__ Ministry of Public Works and Transport (Spain)']
Text: Abel Caballero was employed at the Ministry of Public Works and Transport in Spain.
Subject: Abel Caballero
Predicate: office
Object: Ministry of Public Works and Transport (Spain)

Triple: ["__subject__ Abel Caballero __predicate__ party __object__ Spanish Socialist Workers' Party"]
Text: Abel Caballero belongs to the Spanish Socialist Workers' Party.
Subject: Abel Caballero
Predicate: party
Object: Spanish Socialist Workers' Party

Triple: ["__subject__ Abel Caballero __predicate__ party __object__ Spanish Socialist Workers' Party"]
Text: Abel Caballero is a member of the Spanish Socialist Workers' Party.
Subject: Abel Caballero
Predicate: party
Object: Spanish Socialist Workers' Party

Triple: ['__subject__ Abner W. Sibal __predicate__ birthDate __object__ 1921-04-11']
Text: Abner W Sibal's date of birth is 11 - 04 - 1921.
Subject: Abner W. Sibal
Predicate: birthDate
Object: 1921-04-11

Triple: ['__subject__ Abner W. Sibal __predicate__ birthDate __object__ 1921-04-11']
Text: Abner W. Sibal was born on the 11th April 1921.
Subject: Abner W. Sibal
Predicate: birthDate
Object: 1921-04-11

Triple: ['__subject__ Abner W. Sibal __predicate__ birthPlace __object__ Ridgewood, Queens']
Text: Abner W. Sibal's birth place was Ridgewood, Queens.
Subject: Abner W. Sibal
Predicate: birthPlace
Object: Ridgewood, Queens

Triple: ['__subject__ Abner W. Sibal __predicate__ birthPlace __object__ Ridgewood, Queens']
Text: Abner W. Sibal was born in Ridgewood, Queens.
Subject: Abner W. Sibal
Predicate: birthPlace
Object: Ridgewood, Queens

Triple: ['__subject__ Abner W. Sibal __predicate__ militaryBranch __object__ United States Army']
Text: Abner W. Sibal served in the United States Army.
Subject: Abner W. Sibal
Predicate: militaryBranch
Object: United States Army

Triple: ['__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District']
Text: Abner W. Sibal worked as a member of the Connecticut Senate from the 26th District.
Subject: Abner W. Sibal
Predicate: office
Object: Member of the Connecticut Senate from the 26th District

Triple: ['__subject__ Abner W. Sibal __predicate__ office __object__ Member of the Connecticut Senate from the 26th District']
Text: Abner W. Sibal was a member of the Connecticut Senate from the 26th District.
Subject: Abner W. Sibal
Predicate: office
Object: Member of the Connecticut Senate from the 26th District

Triple: ['__subject__ Abner W. Sibal __predicate__ party __object__ Republican Party (United States)']
Text: Abner W. Sibal was a member of the Republican party of the United States.
Subject: Abner W. Sibal
Predicate: party
Object: Republican Party (United States)

Triple: ["__subject__ Abner W. Sibal __predicate__ region __object__ Connecticut's 4th congressional district"]
Text: Abner W Sibal represented Connecticut's 4th Congressional District.
Subject: Abner W. Sibal
Predicate: region
Object: Connecticut's 4th congressional district

Triple: ['__subject__ Abner W. Sibal __predicate__ successor __object__ Donald J. Irwin']
Text: Abner W. Sibal's successor was Donald J. Irwin.
Subject: Abner W. Sibal
Predicate: successor
Object: Donald J. Irwin

Triple: ['__subject__ Abner W. Sibal __predicate__ successor __object__ Donald J. Irwin']
Text: Donald J. Irwin succeeded Abner W. Sibal.
Subject: Abner W. Sibal
Predicate: successor
Object: Donald J. Irwin

Triple: ['__subject__ Abner W. Sibal __predicate__ successor __object__ Donald J. Irwin']
Text: The successor of Abner W. Sibal was Donald J. Irwin.
Subject: Abner W. Sibal
Predicate: successor
Object: Donald J. Irwin

Triple: ['__subject__ Abner W. Sibal __predicate__ successor __object__ Marjorie Farmer']
Text: Abner W Sibal was succeeded by Marjorie Farmer.
Subject: Abner W. Sibal
Predicate: successor
Object: Marjorie Farmer

Triple: ['__subject__ Abner W. Sibal __predicate__ successor __object__ Marjorie Farmer']
Text: Abner W. Sibal's successor was Marjorie Farmer.
Subject: Abner W. Sibal
Predicate: successor
Object: Marjorie Farmer

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ Connecticut']
Text: Abraham A. Ribicoff's place of birth was Connecticut.
Subject: Abraham A. Ribicoff
Predicate: birthPlace
Object: Connecticut

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ Connecticut']
Text: Abraham A. Ribicoff was born in Connecticut.
Subject: Abraham A. Ribicoff
Predicate: birthPlace
Object: Connecticut

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ New Britain, Connecticut']
Text: New Britain, Connecticut was the birthplace of Abraham A. Ribicoff.
Subject: Abraham A. Ribicoff
Predicate: birthPlace
Object: New Britain, Connecticut

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ New Britain, Connecticut']
Text: Abraham A. Ribicoff was born in New Britain, Connecticut.
Subject: Abraham A. Ribicoff
Predicate: birthPlace
Object: New Britain, Connecticut

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ New Britain, Connecticut']
Text: Abraham A Ribicoff was born in New Britain, Connecticut.
Subject: Abraham A. Ribicoff
Predicate: birthPlace
Object: New Britain, Connecticut

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ United States']
Text: The United States is the birthplace of Abraham A. Ribicoff.
Subject: Abraham A. Ribicoff
Predicate: birthPlace
Object: United States

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ United States']
Text: Abraham A. Ribicoff was born in the U.S.
Subject: Abraham A. Ribicoff
Predicate: birthPlace
Object: United States

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ birthPlace __object__ United States']
Text: The birth place of Abraham A Ribicoff is the United States.
Subject: Abraham A. Ribicoff
Predicate: birthPlace
Object: United States

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York City, New York, U.S.']
Text: New York City, New York, U.S. is the death place of Abraham A. Ribicoff.
Subject: Abraham A. Ribicoff
Predicate: deathPlace
Object: New York City, New York, U.S.

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York City, New York, U.S.']
Text: Abraham A. Ribicoff died in New York City, New York, U.S.
Subject: Abraham A. Ribicoff
Predicate: deathPlace
Object: New York City, New York, U.S.

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York City, New York, U.S.']
Text: Abraham A. Ribicoff passed away in New York City, New York, U.S.
Subject: Abraham A. Ribicoff
Predicate: deathPlace
Object: New York City, New York, U.S.

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York']
Text: Abraham A Ribicoff died in New York.
Subject: Abraham A. Ribicoff
Predicate: deathPlace
Object: New York

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York']
Text: Abraham A. Ribicoff died in New York.
Subject: Abraham A. Ribicoff
Predicate: deathPlace
Object: New York

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York City']
Text: Abraham A. Ribicoff died in New York City.
Subject: Abraham A. Ribicoff
Predicate: deathPlace
Object: New York City

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ New York City']
Text: Abraham A Ribicoff died in New York City.
Subject: Abraham A. Ribicoff
Predicate: deathPlace
Object: New York City

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ deathPlace __object__ United States']
Text: Abraham A. Ribicoff died in the United States.
Subject: Abraham A. Ribicoff
Predicate: deathPlace
Object: United States

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ inOfficeWhilePresident __object__ John F. Kennedy']
Text: Abraham A. Ribicoff was in office while John F. Kennedy was president.
Subject: Abraham A. Ribicoff
Predicate: inOfficeWhilePresident
Object: John F. Kennedy

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ inOfficeWhilePresident __object__ John F. Kennedy']
Text: Abraham A. Ribicoff was in office at the same time as John F. Kennedy was president.
Subject: Abraham A. Ribicoff
Predicate: inOfficeWhilePresident
Object: John F. Kennedy

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ nationality __object__ American']
Text: Abraham A. Ribicoff's nationality is American.
Subject: Abraham A. Ribicoff
Predicate: nationality
Object: American

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ nationality __object__ American']
Text: Abraham A. Ribicoff was a national of the United States.
Subject: Abraham A. Ribicoff
Predicate: nationality
Object: American

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ nationality __object__ American']
Text: The nationality of Abraham A. Ribicoff was American.
Subject: Abraham A. Ribicoff
Predicate: nationality
Object: American

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ nationality __object__ United States']
Text: Abraham A. Ribicoff is a United States national.
Subject: Abraham A. Ribicoff
Predicate: nationality
Object: United States

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ nationality __object__ United States']
Text: Abraham A Ribicoff is from the United States.
Subject: Abraham A. Ribicoff
Predicate: nationality
Object: United States

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ nationality __object__ United States']
Text: Abraham A. Ribicoff is from the United States.
Subject: Abraham A. Ribicoff
Predicate: nationality
Object: United States

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ office __object__ Governor of Connecticut']
Text: Abraham A Ribicoff worked as Governor of Connecticut.
Subject: Abraham A. Ribicoff
Predicate: office
Object: Governor of Connecticut

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ office __object__ Governor of Connecticut']
Text: Abraham A. Ribicoff was the Governor of Connecticut.
Subject: Abraham A. Ribicoff
Predicate: office
Object: Governor of Connecticut

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ office __object__ United States Secretary of Health, Education, and Welfare']
Text: Abraham A. Ribicoff once worked for the United States Secretary of Health, Education, and Welfare office.
Subject: Abraham A. Ribicoff
Predicate: office
Object: United States Secretary of Health, Education, and Welfare

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ office __object__ United States Secretary of Health, Education, and Welfare']
Text: Abraham A Ribicoff worked as the United States Secretary of Health, Education, and Welfare.
Subject: Abraham A. Ribicoff
Predicate: office
Object: United States Secretary of Health, Education, and Welfare

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ office __object__ United States Secretary of Health, Education, and Welfare']
Text: Abraham A. Ribicoff worked as the United States Secretary of Health, Education and Welfare.
Subject: Abraham A. Ribicoff
Predicate: office
Object: United States Secretary of Health, Education, and Welfare

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ party __object__ Democratic Party (United States)']
Text: Abraham A. Ribicoff is a member of the United States Democratic Party.
Subject: Abraham A. Ribicoff
Predicate: party
Object: Democratic Party (United States)

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ party __object__ Democratic Party (United States)']
Text: Abraham A. Ribicoff is a member of the Democratic Party in the U.S.A.
Subject: Abraham A. Ribicoff
Predicate: party
Object: Democratic Party (United States)

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ party __object__ Democratic Party (United States)']
Text: Abraham A. Ribicoff was a member of the Democratic Party in the United States.
Subject: Abraham A. Ribicoff
Predicate: party
Object: Democratic Party (United States)

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Ruth Ribicoff']
Text: Abraham A. Ribicoff spouse is Ruth Ribicoff.
Subject: Abraham A. Ribicoff
Predicate: spouse
Object: Ruth Ribicoff

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Ruth Ribicoff']
Text: Abraham A. Ribicoff is married to Ruth Ribicoff.
Subject: Abraham A. Ribicoff
Predicate: spouse
Object: Ruth Ribicoff

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Casey Ribicoff']
Text: Abraham A. Ribicoff's spouse was Casey Ribicoff.
Subject: Abraham A. Ribicoff
Predicate: spouse
Object: Casey Ribicoff

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Casey Ribicoff']
Text: Casey Ribicoff is Abraham A. Ribcoff's wife.
Subject: Abraham A. Ribicoff
Predicate: spouse
Object: Casey Ribicoff

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ spouse __object__ Casey Ribicoff']
Text: The wife of Abraham A. Ribicoff is Casey Ribicoff.
Subject: Abraham A. Ribicoff
Predicate: spouse
Object: Casey Ribicoff

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ successor __object__ John N. Dempsey']
Text: John N Dempsey was preceded by Abraham A Ribicoff.
Subject: Abraham A. Ribicoff
Predicate: successor
Object: John N. Dempsey

Triple: ['__subject__ Abraham A. Ribicoff __predicate__ successor __object__ John N. Dempsey']
Text: The successor of Abraham A. Ribicoff was John N. Dempsey.
Subject: Abraham A. Ribicoff
Predicate: successor
Object: John N. Dempsey

Triple: ['__subject__ Adam Holloway __predicate__ activeYearsStartDate __object__ 2005-05-05']
Text: Adam Holloway began his career on 5th May 2005.
Subject: Adam Holloway
Predicate: activeYearsStartDate
Object: 2005-05-05

Triple: ['__subject__ Adam Holloway __predicate__ almaMater __object__ Magdalene College, Cambridge']
Text: Adam Holloway's Alma mater is Magdalene College, Cambridge.
Subject: Adam Holloway
Predicate: almaMater
Object: Magdalene College, Cambridge

Triple: ['__subject__ Adam Holloway __predicate__ almaMater __object__ Magdalene College, Cambridge']
Text: The alma mater of Adam Holloway was Magdalene College in Cambridge.
Subject: Adam Holloway
Predicate: almaMater
Object: Magdalene College, Cambridge

Triple: ['__subject__ Adam Holloway __predicate__ almaMater __object__ Magdalene College, Cambridge']
Text: The alma mater of Adam Holloway was Magdalene College Cambridge.
Subject: Adam Holloway
Predicate: almaMater
Object: Magdalene College, Cambridge

Triple: ['__subject__ Adam Holloway __predicate__ battle __object__ Gulf War']
Text: Adam Holloway was involved in Gulf War battles.
Subject: Adam Holloway
Predicate: battle
Object: Gulf War

Triple: ['__subject__ Adam Holloway __predicate__ battle __object__ Gulf War']
Text: Adam Holloway fought in the Gulf War.
Subject: Adam Holloway
Predicate: battle
Object: Gulf War

Triple: ['__subject__ Adam Holloway __predicate__ birthPlace __object__ Faversham, Kent, England']
Text: Adam Holloway was born in Faversham Kent, England.
Subject: Adam Holloway
Predicate: birthPlace
Object: Faversham, Kent, England

Triple: ['__subject__ Adam Holloway __predicate__ birthPlace __object__ Faversham, Kent, England']
Text: Adam Holloway was born in Faversham, Kent, England.
Subject: Adam Holloway
Predicate: birthPlace
Object: Faversham, Kent, England

Triple: ['__subject__ Adam Holloway __predicate__ birthPlace __object__ Faversham']
Text: Faversham was the birthplace of Adam Holloway.
Subject: Adam Holloway
Predicate: birthPlace
Object: Faversham

Triple: ['__subject__ Adam Holloway __predicate__ birthPlace __object__ Faversham']
Text: Adam Holloway was born in Faversham.
Subject: Adam Holloway
Predicate: birthPlace
Object: Faversham

Triple: ['__subject__ Adam Holloway __predicate__ militaryBranch __object__ Grenadier Guards']
Text: Adam Holloway was in the Grenadier Guards in the military.
Subject: Adam Holloway
Predicate: militaryBranch
Object: Grenadier Guards

Triple: ['__subject__ Adam Holloway __predicate__ militaryBranch __object__ Grenadier Guards']
Text: Adam Holloway served in the Grenadier Guards.
Subject: Adam Holloway
Predicate: militaryBranch
Object: Grenadier Guards

Triple: ['__subject__ Adam Holloway __predicate__ nationality __object__ United Kingdom']
Text: Adam Holloway is from the United Kingdom.
Subject: Adam Holloway
Predicate: nationality
Object: United Kingdom

Triple: ['__subject__ Adam Holloway __predicate__ nationality __object__ United Kingdom']
Text: Adam Holloway is a national of the United Kingdom.
Subject: Adam Holloway
Predicate: nationality
Object: United Kingdom

Triple: ['__subject__ Adam Holloway __predicate__ numberOfVotesAttained __object__ 9312']
Text: Adam Holloway obtained 9312 votes in his election.
Subject: Adam Holloway
Predicate: numberOfVotesAttained
Object: 9312

Triple: ['__subject__ Adam Holloway __predicate__ numberOfVotesAttained __object__ 9312']
Text: Adam Holloway won 9312 votes.
Subject: Adam Holloway
Predicate: numberOfVotesAttained
Object: 9312

Triple: ['__subject__ Adam Holloway __predicate__ numberOfVotesAttained __object__ 9312']
Text: 9312 people voted for Adam Holloway.
Subject: Adam Holloway
Predicate: numberOfVotesAttained
Object: 9312

Triple: ['__subject__ Adam Holloway __predicate__ office __object__ Member of Parliament for Gravesham']
Text: Adam Holloway worked as a member of Parliament for Gravesham.
Subject: Adam Holloway
Predicate: office
Object: Member of Parliament for Gravesham

Triple: ['__subject__ Adam Holloway __predicate__ office __object__ Member of Parliament for Gravesham']
Text: Adam Holloway was the Member of Parliament for Gravesham.
Subject: Adam Holloway
Predicate: office
Object: Member of Parliament for Gravesham

Triple: ['__subject__ Adam Holloway __predicate__ office __object__ Member of parliament']
Text: Adam Holloway worked as a Member of parliament.
Subject: Adam Holloway
Predicate: office
Object: Member of parliament

Triple: ['__subject__ Adam Holloway __predicate__ party __object__ Conservative Party (UK)']
Text: Adam Holloway is in the Conservative Party (UK).
Subject: Adam Holloway
Predicate: party
Object: Conservative Party (UK)

Triple: ['__subject__ Adam Holloway __predicate__ party __object__ Conservative Party (UK)']
Text: Adam Holloway is a member of the Conservative Party in the UK.
Subject: Adam Holloway
Predicate: party
Object: Conservative Party (UK)

Triple: ['__subject__ Adam Holloway __predicate__ party __object__ Conservative Party (UK)']
Text: Adam Holloway is a member of the Tories.
Subject: Adam Holloway
Predicate: party
Object: Conservative Party (UK)

Triple: ['__subject__ Adam Koc __predicate__ award __object__ Cross of Independence']
Text: Adam Koc was awarded the Cross of Independence.
Subject: Adam Koc
Predicate: award
Object: Cross of Independence

Triple: ['__subject__ Adam Koc __predicate__ award __object__ Cross of Independence']
Text: Adam Koc has won the Cross of Independence award.
Subject: Adam Koc
Predicate: award
Object: Cross of Independence

Triple: ['__subject__ Adam Koc __predicate__ award __object__ Legion of Honour']
Text: Adam Koc was awarded the Legion of Honour.
Subject: Adam Koc
Predicate: award
Object: Legion of Honour

Triple: ['__subject__ Adam Koc __predicate__ award __object__ Legion of Honour']
Text: Adam Koc received the Legion of Honour award.
Subject: Adam Koc
Predicate: award
Object: Legion of Honour

Triple: ['__subject__ Adam Koc __predicate__ award __object__ Legion of Honour']
Text: Adam Koc has won the Legion of Honour award.
Subject: Adam Koc
Predicate: award
Object: Legion of Honour

Triple: ["__subject__ Adam Koc __predicate__ award __object__ Officer's Star Parasol"]
Text: Adam Koc received the award Officer's Star Parasol.
Subject: Adam Koc
Predicate: award
Object: Officer's Star Parasol

Triple: ["__subject__ Adam Koc __predicate__ award __object__ Officer's Star Parasol"]
Text: Adam Koc was awarded the Officer's Star Parasol.
Subject: Adam Koc
Predicate: award
Object: Officer's Star Parasol

Triple: ["__subject__ Adam Koc __predicate__ award __object__ Officer's Star Parasol"]
Text: Adam Koc was awarded the Officer's Star, Parasol.
Subject: Adam Koc
Predicate: award
Object: Officer's Star Parasol

Triple: ['__subject__ Adam Koc __predicate__ award __object__ Order of Polonia Restituta']
Text: Adam Koc was awarded the Order of Polonia Restituta.
Subject: Adam Koc
Predicate: award
Object: Order of Polonia Restituta

Triple: ['__subject__ Adam Koc __predicate__ award __object__ Virtuti Militari']
Text: Adam Koc was awarded the Virtuti Militari.
Subject: Adam Koc
Predicate: award
Object: Virtuti Militari

Triple: ['__subject__ Adam Koc __predicate__ award __object__ Virtuti Militari']
Text: Adam Koc has won the Virtuti Militari award.
Subject: Adam Koc
Predicate: award
Object: Virtuti Militari

Triple: ['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War']
Text: Adam Koc was involved in battles in the Polish–Soviet War.
Subject: Adam Koc
Predicate: battle
Object: Polish–Soviet War

Triple: ['__subject__ Adam Koc __predicate__ battle __object__ Polish–Soviet War']
Text: Adam Koc fought in the Polish–Soviet War.
Subject: Adam Koc
Predicate: battle
Object: Polish–Soviet War

Triple: ['__subject__ Adam Koc __predicate__ battle __object__ World War I']
Text: Adam Koc fought in World War I.
Subject: Adam Koc
Predicate: battle
Object: World War I

Triple: ['__subject__ Adam Koc __predicate__ battle __object__ World War I']
Text: Adam Koc fought in WWI.
Subject: Adam Koc
Predicate: battle
Object: World War I

Triple: ['__subject__ Adam Koc __predicate__ birthPlace __object__ Congress Poland']
Text: Adam Koc was born in Congress in Poland.
Subject: Adam Koc
Predicate: birthPlace
Object: Congress Poland

Triple: ['__subject__ Adam Koc __predicate__ birthPlace __object__ Congress Poland']
Text: Adam Koc was born in Congress Poland.
Subject: Adam Koc
Predicate: birthPlace
Object: Congress Poland

Triple: ['__subject__ Adam Koc __predicate__ birthPlace __object__ Suwałki']
Text: The birth place of Adam Koc was Suwalki.
Subject: Adam Koc
Predicate: birthPlace
Object: Suwałki

Triple: ['__subject__ Adam Koc __predicate__ birthPlace __object__ Suwałki']
Text: Adam Koc was born in Suwałki.
Subject: Adam Koc
Predicate: birthPlace
Object: Suwałki

Triple: ['__subject__ Adam Koc __predicate__ birthPlace __object__ Suwałki']
Text: The birth place of Adam Koc is Suwalki.
Subject: Adam Koc
Predicate: birthPlace
Object: Suwałki

Triple: ['__subject__ Adam Koc __predicate__ nationality __object__ Poland']
Text: Adam Koc's nationality is Poland.
Subject: Adam Koc
Predicate: nationality
Object: Poland

Triple: ['__subject__ Adam Koc __predicate__ nationality __object__ Poland']
Text: Adam Koc is of Polish nationality.
Subject: Adam Koc
Predicate: nationality
Object: Poland

Triple: ['__subject__ Adam Koc __predicate__ nationality __object__ Poland']
Text: Adam Koc nationality is Polish.
Subject: Adam Koc
Predicate: nationality
Object: Poland

Triple: ['__subject__ Adenan Satem __predicate__ birthPlace __object__ Japanese occupation of British Borneo']
Text: Japanese Occupation of British Borneo is the birth place of Adenan Satem.
Subject: Adenan Satem
Predicate: birthPlace
Object: Japanese occupation of British Borneo

Triple: ['__subject__ Adenan Satem __predicate__ birthPlace __object__ Japanese occupation of British Borneo']
Text: Japanese occupation Of British Borneo was the birthplace of Adenan Satem.
Subject: Adenan Satem
Predicate: birthPlace
Object: Japanese occupation of British Borneo

Triple: ['__subject__ Adenan Satem __predicate__ inOfficeWhileVicePresident __object__ Abdul Taib Mahmud']
Text: Adenan Satem was in office during the time Abdul Taib Mahmud was Vice President.
Subject: Adenan Satem
Predicate: inOfficeWhileVicePresident
Object: Abdul Taib Mahmud

Triple: ['__subject__ Adenan Satem __predicate__ inOfficeWhileVicePresident __object__ Abdul Taib Mahmud']
Text: Adenan Satem was in office while Abdul Taib Mahmud was Vice President.
Subject: Adenan Satem
Predicate: inOfficeWhileVicePresident
Object: Abdul Taib Mahmud

Triple: ['__subject__ Adenan Satem __predicate__ inOfficeWhileVicePresident __object__ Abdul Taib Mahmud']
Text: Adenan Satem was in office at the same time as Abdul Taib Mahmud was President.
Subject: Adenan Satem
Predicate: inOfficeWhileVicePresident
Object: Abdul Taib Mahmud

Triple: ['__subject__ Adolf Schärf __predicate__ birthPlace __object__ Austria-Hungary']
Text: Adolf Schärf was born in Austria-Hungary.
Subject: Adolf Schärf
Predicate: birthPlace
Object: Austria-Hungary

Triple: ['__subject__ Adolf Schärf __predicate__ birthPlace __object__ Austria-Hungary']
Text: Adolf Scharf was born in Austria-Hungary.
Subject: Adolf Schärf
Predicate: birthPlace
Object: Austria-Hungary

Triple: ['__subject__ Adolf Schärf __predicate__ birthPlace __object__ Austria-Hungary']
Text: Austria-Hungary is the birthplace of Adolf Scharf.
Subject: Adolf Schärf
Predicate: birthPlace
Object: Austria-Hungary

Triple: ['__subject__ Adonis Georgiadis __predicate__ almaMater __object__ National and Kapodistrian University of Athens']
Text: Adonis Georgiadis's Alma mater is the National and Kapodistrian University of Athens.
Subject: Adonis Georgiadis
Predicate: almaMater
Object: National and Kapodistrian University of Athens

Triple: ['__subject__ Adonis Georgiadis __predicate__ almaMater __object__ National and Kapodistrian University of Athens']
Text: Adonis Georgiadis alma Mater was the National and Kapodistrian University of Athens.
Subject: Adonis Georgiadis
Predicate: almaMater
Object: National and Kapodistrian University of Athens

Triple: ['__subject__ Adonis Georgiadis __predicate__ almaMater __object__ National and Kapodistrian University of Athens']
Text: The alma mater of Adonis Georgiadis was the National and Kapodistrian University of Athens.
Subject: Adonis Georgiadis
Predicate: almaMater
Object: National and Kapodistrian University of Athens

Triple: ['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Athens']
Text: Adonis Georgiadis was born in Athens.
Subject: Adonis Georgiadis
Predicate: birthPlace
Object: Athens

Triple: ['__subject__ Adonis Georgiadis __predicate__ birthPlace __object__ Greece']
Text: Adonis Georgiadis was born in Greece.
Subject: Adonis Georgiadis
Predicate: birthPlace
Object: Greece

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Deputy Parliamentary Spokesman of Popular Orthodox Rally']
Text: Adonis Georgiadis worked as the Deputy Parliamentary Spokesman for the Popular Orthodox Rally.
Subject: Adonis Georgiadis
Predicate: office
Object: Deputy Parliamentary Spokesman of Popular Orthodox Rally

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Deputy Parliamentary Spokesman of Popular Orthodox Rally']
Text: Adonis Georgiadis has worked as the Deputy Parliamentary Spokesman of Popular Orthodox Rally.
Subject: Adonis Georgiadis
Predicate: office
Object: Deputy Parliamentary Spokesman of Popular Orthodox Rally

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Deputy Parliamentary Spokesman of Popular Orthodox Rally']
Text: Adonis Georgiadis worked as the Deputy Parliamentary Spokesman of Popular Orthodox Rally.
Subject: Adonis Georgiadis
Predicate: office
Object: Deputy Parliamentary Spokesman of Popular Orthodox Rally

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Minister for Health']
Text: Adonis Georgiadis worked as Minister for Health.
Subject: Adonis Georgiadis
Predicate: office
Object: Minister for Health

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Minister for Health']
Text: Adonis Georgiadis held office as the Minister for Health.
Subject: Adonis Georgiadis
Predicate: office
Object: Minister for Health

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Spokesman of Popular Orthodox Rally']
Text: Adonis Georgiadis worked for the office of the Spokesman of Popular Orthodox Rally.
Subject: Adonis Georgiadis
Predicate: office
Object: Spokesman of Popular Orthodox Rally

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Spokesman of Popular Orthodox Rally']
Text: Adonis Georgiadis held office as "Spokesman of Popular Orthodox Rally".
Subject: Adonis Georgiadis
Predicate: office
Object: Spokesman of Popular Orthodox Rally

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Spokesman of Popular Orthodox Rally']
Text: Adonis Georgiadis worked as the Spokesman of Popular Orthodox Rally.
Subject: Adonis Georgiadis
Predicate: office
Object: Spokesman of Popular Orthodox Rally

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Vice-President of New Democracy']
Text: Adonis Georgiadis works at office as "Vice-President of New Democracy".
Subject: Adonis Georgiadis
Predicate: office
Object: Vice-President of New Democracy

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Vice-President of New Democracy']
Text: Adonis Georgiadis held the office "Vice-President of New Democracy".
Subject: Adonis Georgiadis
Predicate: office
Object: Vice-President of New Democracy

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Vice-President of New Democracy']
Text: Adonis Georgiadis was the Vice President of New Democracy.
Subject: Adonis Georgiadis
Predicate: office
Object: Vice-President of New Democracy

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Member of the Hellenic Parliament']
Text: Adonis Georgiadis was a member of the Hellenic Parliament.
Subject: Adonis Georgiadis
Predicate: office
Object: Member of the Hellenic Parliament

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Member of the Hellenic Parliament']
Text: Adonis Georgiadis worked as a Member of the Hellenic Parliament.
Subject: Adonis Georgiadis
Predicate: office
Object: Member of the Hellenic Parliament

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Ministry of Economy, Development and Tourism (Greece)']
Text: Adonis Georgiadis worked for the Ministry of Economy, Development and Tourism in Greece.
Subject: Adonis Georgiadis
Predicate: office
Object: Ministry of Economy, Development and Tourism (Greece)

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Ministry of Economy, Development and Tourism (Greece)']
Text: Adonis Georgiadis worked at the Ministry of Economy, Development and Tourism in Greece.
Subject: Adonis Georgiadis
Predicate: office
Object: Ministry of Economy, Development and Tourism (Greece)

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Ministry of Health (Greece)']
Text: Adonis Georgiadis worked at the Ministry of Health in Greece.
Subject: Adonis Georgiadis
Predicate: office
Object: Ministry of Health (Greece)

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Ministry of Health (Greece)']
Text: Adonis Georgiadis worked at the Greek Ministry of Health.
Subject: Adonis Georgiadis
Predicate: office
Object: Ministry of Health (Greece)

Triple: ['__subject__ Adonis Georgiadis __predicate__ office __object__ Ministry of Health (Greece)']
Text: Adonis Georgiadis worked in the Ministry of Health in Greece.
Subject: Adonis Georgiadis
Predicate: office
Object: Ministry of Health (Greece)

Triple: ['__subject__ Adonis Georgiadis __predicate__ party __object__ New Democracy (Greece)']
Text: Adonis Georgiadis was a member of the New Democracy party in Greece.
Subject: Adonis Georgiadis
Predicate: party
Object: New Democracy (Greece)

Triple: ['__subject__ Adonis Georgiadis __predicate__ party __object__ New Democracy (Greece)']
Text: Adonis Georgiadis is a member of the Greek New Democracy Party.
Subject: Adonis Georgiadis
Predicate: party
Object: New Democracy (Greece)

Triple: ['__subject__ Adonis Georgiadis __predicate__ successor __object__ Makis Voridis']
Text: Makis Voridis was the successor of Adonis Georgiadis.
Subject: Adonis Georgiadis
Predicate: successor
Object: Makis Voridis

Triple: ['__subject__ Agnes Kant __predicate__ almaMater __object__ Radboud University Nijmegen']
Text: Agnes Kant's Alma mater is Radboud University Nijmegen.
Subject: Agnes Kant
Predicate: almaMater
Object: Radboud University Nijmegen

Triple: ['__subject__ Agnes Kant __predicate__ almaMater __object__ Radboud University Nijmegen']
Text: Agnes Kant's alma mater is the Radboud University Nijmegen.
Subject: Agnes Kant
Predicate: almaMater
Object: Radboud University Nijmegen

Triple: ['__subject__ Agnes Kant __predicate__ birthPlace __object__ West Germany']
Text: Agnes Kant was born in West Germany.
Subject: Agnes Kant
Predicate: birthPlace
Object: West Germany

Triple: ['__subject__ Agnes Kant __predicate__ birthPlace __object__ West Germany']
Text: West Germany was the birthplace of Agnes Kant.
Subject: Agnes Kant
Predicate: birthPlace
Object: West Germany

Triple: ['__subject__ Agnes Kant __predicate__ country __object__ Netherlands']
Text: Agnes Kant's country is the Netherlands.
Subject: Agnes Kant
Predicate: country
Object: Netherlands

Triple: ['__subject__ Agnes Kant __predicate__ country __object__ Netherlands']
Text: Agnes Kant is from the Netherlands.
Subject: Agnes Kant
Predicate: country
Object: Netherlands

Triple: ['__subject__ Agnes Kant __predicate__ country __object__ Netherlands']
Text: Agnes Kant resides in The Netherlands.
Subject: Agnes Kant
Predicate: country
Object: Netherlands

Triple: ['__subject__ Agnes Kant __predicate__ nationality __object__ Netherlands']
Text: Agnes Kant is a national of the Netherlands.
Subject: Agnes Kant
Predicate: nationality
Object: Netherlands

Triple: ['__subject__ Agnes Kant __predicate__ nationality __object__ Netherlands']
Text: The nationality of Agnes Kant is Netherlands.
Subject: Agnes Kant
Predicate: nationality
Object: Netherlands

Triple: ['__subject__ Agnes Kant __predicate__ office __object__ Member of the House of Representatives']
Text: Agnes Kant worked as a member of the House of Representatives.
Subject: Agnes Kant
Predicate: office
Object: Member of the House of Representatives

Triple: ['__subject__ Agnes Kant __predicate__ office __object__ Member of the House of Representatives']
Text: Agnes Kant was a Member of the House of Representatives.
Subject: Agnes Kant
Predicate: office
Object: Member of the House of Representatives

Triple: ['__subject__ Agnes Kant __predicate__ office __object__ Parliamentary group leader']
Text: Agnes Kant worked as a Parliamentary group leader.
Subject: Agnes Kant
Predicate: office
Object: Parliamentary group leader

Triple: ['__subject__ Agnes Kant __predicate__ office __object__ Parliamentary group leader']
Text: Agnes Kant worked as the Parliamentary group leader.
Subject: Agnes Kant
Predicate: office
Object: Parliamentary group leader

Triple: ['__subject__ Agnes Kant __predicate__ office __object__ Socialist Party (Netherlands)']
Text: Agnes Kant worked at the Socialist Party in the Netherlands.
Subject: Agnes Kant
Predicate: office
Object: Socialist Party (Netherlands)

Triple: ['__subject__ Agnes Kant __predicate__ office __object__ Socialist Party (Netherlands)']
Text: Agnes Kant worked for the Socialist Party in the Netherlands.
Subject: Agnes Kant
Predicate: office
Object: Socialist Party (Netherlands)

Triple: ['__subject__ Agnes Kant __predicate__ office __object__ Socialist Party (Netherlands)']
Text: Agnes Kant held office in the Socialist Party of the Netherlands.
Subject: Agnes Kant
Predicate: office
Object: Socialist Party (Netherlands)

Triple: ['__subject__ Agnes Kant __predicate__ party __object__ Socialist Party (Netherlands)']
Text: Agnes Kant is a member of the Socialist Party in the Netherlands.
Subject: Agnes Kant
Predicate: party
Object: Socialist Party (Netherlands)

Triple: ['__subject__ Agnes Kant __predicate__ party __object__ Socialist Party (Netherlands)']
Text: Agnes Kant is a member of the Socialist Party in Netherlands.
Subject: Agnes Kant
Predicate: party
Object: Socialist Party (Netherlands)

Triple: ['__subject__ Agnes Kant __predicate__ residence __object__ Doesburg']
Text: Agnes Kant was a resident of Doesburg.
Subject: Agnes Kant
Predicate: residence
Object: Doesburg

Triple: ['__subject__ Agnes Kant __predicate__ residence __object__ Doesburg']
Text: Agnes Kant resided in Doesburg.
Subject: Agnes Kant
Predicate: residence
Object: Doesburg

Triple: ['__subject__ Agnes Kant __predicate__ residence __object__ Doesburg']
Text: Agnes Kant lives in Doesburg.
Subject: Agnes Kant
Predicate: residence
Object: Doesburg

Triple: ['__subject__ Agnes Ward White __predicate__ deathPlace __object__ Parkersburg, West Virginia']
Text: Agnes Ward White died at Parkersburg, West Virginia.
Subject: Agnes Ward White
Predicate: deathPlace
Object: Parkersburg, West Virginia

Triple: ['__subject__ Agnes Ward White __predicate__ deathPlace __object__ Parkersburg, West Virginia']
Text: Agnes Ward White died in Parkersburg, West Virginia.
Subject: Agnes Ward White
Predicate: deathPlace
Object: Parkersburg, West Virginia

Triple: ['__subject__ Airey Neave __predicate__ activeYearsEndDate __object__ 1979-03-30']
Text: Airey Neave ended his career on 30th March 1979.
Subject: Airey Neave
Predicate: activeYearsEndDate
Object: 1979-03-30

Triple: ['__subject__ Airey Neave __predicate__ activeYearsStartDate __object__ 1974-03-04']
Text: Airey Neave began his career on March 4th 1974.
Subject: Airey Neave
Predicate: activeYearsStartDate
Object: 1974-03-04

Triple: ['__subject__ Airey Neave __predicate__ award __object__ Distinguished Service Order']
Text: Airey Neave was awarded the Distinguished Service Order.
Subject: Airey Neave
Predicate: award
Object: Distinguished Service Order

Triple: ['__subject__ Airey Neave __predicate__ award __object__ Distinguished Service Order']
Text: Airey Neave was a hero and awarded the Distinguished Service Order.
Subject: Airey Neave
Predicate: award
Object: Distinguished Service Order

Triple: ['__subject__ Airey Neave __predicate__ award __object__ Order of the British Empire']
Text: Airey Neave was awarded the Order of the British Empire.
Subject: Airey Neave
Predicate: award
Object: Order of the British Empire

Triple: ['__subject__ Airey Neave __predicate__ battle __object__ Battle of France']
Text: Airey Neave was involved in the Battle of France.
Subject: Airey Neave
Predicate: battle
Object: Battle of France

Triple: ['__subject__ Airey Neave __predicate__ battle __object__ Battle of France']
Text: Airey Neave fought in the Battle of France.
Subject: Airey Neave
Predicate: battle
Object: Battle of France

Triple: ['__subject__ Airey Neave __predicate__ battle __object__ World War II']
Text: Airey Neave was in World War II.
Subject: Airey Neave
Predicate: battle
Object: World War II

Triple: ['__subject__ Airey Neave __predicate__ battle __object__ World War II']
Text: Airey Neave fought in World War II.
Subject: Airey Neave
Predicate: battle
Object: World War II

Triple: ['__subject__ Airey Neave __predicate__ birthPlace __object__ Knightsbridge']
Text: Airey Neave was born in Knightsbridge.
Subject: Airey Neave
Predicate: birthPlace
Object: Knightsbridge

Triple: ['__subject__ Airey Neave __predicate__ birthPlace __object__ Knightsbridge']
Text: Knightsbridge is the birthplace of Airey Neave.
Subject: Airey Neave
Predicate: birthPlace
Object: Knightsbridge

Triple: ['__subject__ Airey Neave __predicate__ deathPlace __object__ Westminster Hospital, London']
Text: Airey Neave dies at Westminster Hospital, London.
Subject: Airey Neave
Predicate: deathPlace
Object: Westminster Hospital, London

Triple: ['__subject__ Airey Neave __predicate__ deathPlace __object__ Westminster Hospital, London']
Text: Airey Neave died in the Westminster Hospital in London.
Subject: Airey Neave
Predicate: deathPlace
Object: Westminster Hospital, London

Triple: ['__subject__ Airey Neave __predicate__ deathPlace __object__ Westminster Hospital, London']
Text: Airey Neave died in Westminster Hospital, London.
Subject: Airey Neave
Predicate: deathPlace
Object: Westminster Hospital, London

Triple: ['__subject__ Airey Neave __predicate__ unit __object__ Royal Artillery']
Text: Airey Neave's unit was the Royal Artillery.
Subject: Airey Neave
Predicate: unit
Object: Royal Artillery

Triple: ['__subject__ Airey Neave __predicate__ unit __object__ Royal Artillery']
Text: Airey Neave served in the Royal Artillery Unit.
Subject: Airey Neave
Predicate: unit
Object: Royal Artillery

Triple: ['__subject__ Albert B. White __predicate__ activeYearsEndDate __object__ 1905-03-04']
Text: Albert B. White finished his career on March 4th 1905.
Subject: Albert B. White
Predicate: activeYearsEndDate
Object: 1905-03-04

Triple: ['__subject__ Albert B. White __predicate__ activeYearsStartDate __object__ 1901-03-04']
Text: Albert B. White started his career on March 4, 1901.
Subject: Albert B. White
Predicate: activeYearsStartDate
Object: 1901-03-04

Triple: ['__subject__ Albert B. White __predicate__ birthDate __object__ 1856-09-22']
Text: Albert B White was born on 22nd September 1856.
Subject: Albert B. White
Predicate: birthDate
Object: 1856-09-22

Triple: ['__subject__ Albert B. White __predicate__ birthDate __object__ 1856-09-22']
Text: Albert B White was born 1856-09-22.
Subject: Albert B. White
Predicate: birthDate
Object: 1856-09-22

Triple: ['__subject__ Albert B. White __predicate__ birthDate __object__ 1856-09-22']
Text: Albert B. White was born 22nd September 1856.
Subject: Albert B. White
Predicate: birthDate
Object: 1856-09-22

Triple: ['__subject__ Albert B. White __predicate__ birthPlace __object__ Cleveland']
Text: Albert B. White was born in Cleveland.
Subject: Albert B. White
Predicate: birthPlace
Object: Cleveland

Triple: ['__subject__ Albert B. White __predicate__ birthYear __object__ 1856']
Text: Albert B. White's year of birth was 1856.
Subject: Albert B. White
Predicate: birthYear
Object: 1856

Triple: ['__subject__ Albert B. White __predicate__ birthYear __object__ 1856']
Text: Albert B. White was born in 1856.
Subject: Albert B. White
Predicate: birthYear
Object: 1856

Triple: ['__subject__ Albert B. White __predicate__ deathDate __object__ 1941-07-03']
Text: Albert B. White's date of death was 1941-07-03.
Subject: Albert B. White
Predicate: deathDate
Object: 1941-07-03

Triple: ['__subject__ Albert B. White __predicate__ deathDate __object__ 1941-07-03']
Text: Albert B. White died on the 1941-07-03.
Subject: Albert B. White
Predicate: deathDate
Object: 1941-07-03

Triple: ['__subject__ Albert B. White __predicate__ deathDate __object__ 1941-07-03']
Text: Albert B White died on the 3rd July 1941.
Subject: Albert B. White
Predicate: deathDate
Object: 1941-07-03

Triple: ['__subject__ Albert B. White __predicate__ deathPlace __object__ Parkersburg, West Virginia']
Text: Albert B White died at Parkersburg, West Virginia.
Subject: Albert B. White
Predicate: deathPlace
Object: Parkersburg, West Virginia

Triple: ['__subject__ Albert B. White __predicate__ deathPlace __object__ Parkersburg, West Virginia']
Text: Albert B. White died in Parkersburg, West Virginia.
Subject: Albert B. White
Predicate: deathPlace
Object: Parkersburg, West Virginia

Triple: ['__subject__ Albert B. White __predicate__ deathYear __object__ 1941']
Text: Albert B. White's year of death was 1941.
Subject: Albert B. White
Predicate: deathYear
Object: 1941

Triple: ['__subject__ Albert B. White __predicate__ deathYear __object__ 1941']
Text: Albert B White died in 1941.
Subject: Albert B. White
Predicate: deathYear
Object: 1941

Triple: ['__subject__ Albert B. White __predicate__ office __object__ Governor of West Virginia']
Text: Albert B. White worked as the Governor of West Virginia.
Subject: Albert B. White
Predicate: office
Object: Governor of West Virginia

Triple: ['__subject__ Albert B. White __predicate__ office __object__ Governor of West Virginia']
Text: Albert B. White was the Governor of West Virginia.
Subject: Albert B. White
Predicate: office
Object: Governor of West Virginia

Triple: ['__subject__ Albert B. White __predicate__ profession __object__ Politician']
Text: Albert B. White's profession is politician.
Subject: Albert B. White
Predicate: profession
Object: Politician

Triple: ['__subject__ Albert B. White __predicate__ profession __object__ Politician']
Text: Albert B. White is a politician.
Subject: Albert B. White
Predicate: profession
Object: Politician

Triple: ['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson']
Text: Albert B White was succeeded by William M O Dawson.
Subject: Albert B. White
Predicate: successor
Object: William M. O. Dawson

Triple: ['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson']
Text: The successor to Albert B. White was William M.O. Dawson.
Subject: Albert B. White
Predicate: successor
Object: William M. O. Dawson

Triple: ['__subject__ Albert B. White __predicate__ successor __object__ William M. O. Dawson']
Text: Albert B. White's successor was William M. O. Dawson.
Subject: Albert B. White
Predicate: successor
Object: William M. O. Dawson

Triple: ['__subject__ Albert Jennings Fountain __predicate__ battle __object__ American Civil War']
Text: Albert Jennings Fountain battled in the American Civil War.
Subject: Albert Jennings Fountain
Predicate: battle
Object: American Civil War

Triple: ['__subject__ Albert Jennings Fountain __predicate__ battle __object__ American Civil War']
Text: Albert Jennings Fountain fought in the American Civil War.
Subject: Albert Jennings Fountain
Predicate: battle
Object: American Civil War

Triple: ['__subject__ Albert Jennings Fountain __predicate__ battle __object__ American Indian Wars']
Text: Albert Jennings Fountain fought in battles in the American Indian Wars.
Subject: Albert Jennings Fountain
Predicate: battle
Object: American Indian Wars

Triple: ['__subject__ Albert Jennings Fountain __predicate__ battle __object__ American Indian Wars']
Text: Albert Jennings Fountain battled in the American Indian Wars.
Subject: Albert Jennings Fountain
Predicate: battle
Object: American Indian Wars

Triple: ['__subject__ Albert Jennings Fountain __predicate__ battle __object__ American Indian Wars']
Text: Albert Jennings Fountain fought in the American Indian Wars.
Subject: Albert Jennings Fountain
Predicate: battle
Object: American Indian Wars

Triple: ['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ New York']
Text: Albert Jennings Fountain was born in New York.
Subject: Albert Jennings Fountain
Predicate: birthPlace
Object: New York

Triple: ['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ New York City']
Text: New York City was the birthplace of Albert Jennings Fountain.
Subject: Albert Jennings Fountain
Predicate: birthPlace
Object: New York City

Triple: ['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ New York City']
Text: Albert Jennings Fountain was born in New York City.
Subject: Albert Jennings Fountain
Predicate: birthPlace
Object: New York City

Triple: ['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ Staten Island']
Text: Staten Island is the birth place of Albert Jennings Fountain.
Subject: Albert Jennings Fountain
Predicate: birthPlace
Object: Staten Island

Triple: ['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ Staten Island']
Text: Albert Jennings Fountain was born in Staten Island.
Subject: Albert Jennings Fountain
Predicate: birthPlace
Object: Staten Island

Triple: ['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ United States']
Text: The United States was the birthplace of Albert Jennings Fountain.
Subject: Albert Jennings Fountain
Predicate: birthPlace
Object: United States

Triple: ['__subject__ Albert Jennings Fountain __predicate__ birthPlace __object__ United States']
Text: Albert Jennings Fountain was born in the United States.
Subject: Albert Jennings Fountain
Predicate: birthPlace
Object: United States

Triple: ['__subject__ Albert Jennings Fountain __predicate__ deathDate __object__ 1896-02-01']
Text: Albert Jennings Fountain's date of death was 1896-02-01.
Subject: Albert Jennings Fountain
Predicate: deathDate
Object: 1896-02-01

Triple: ['__subject__ Albert Jennings Fountain __predicate__ deathDate __object__ 1896-02-01']
Text: Albert Jennings Fountain died 1896-02-01.
Subject: Albert Jennings Fountain
Predicate: deathDate
Object: 1896-02-01

Triple: ['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ Doña Ana County, New Mexico']
Text: Albert Jennings Fountain died in Dona Ana County, New Mexico.
Subject: Albert Jennings Fountain
Predicate: deathPlace
Object: Doña Ana County, New Mexico

Triple: ['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ New Mexico Territory']
Text: Albert Jennings Fountain's place of death was in the New Mexico Territory.
Subject: Albert Jennings Fountain
Predicate: deathPlace
Object: New Mexico Territory

Triple: ['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ New Mexico Territory']
Text: Albert Jennings Fountain died in New Mexico Territory.
Subject: Albert Jennings Fountain
Predicate: deathPlace
Object: New Mexico Territory

Triple: ['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ United States']
Text: Albert Jennings Fountain died in the U.S.
Subject: Albert Jennings Fountain
Predicate: deathPlace
Object: United States

Triple: ['__subject__ Albert Jennings Fountain __predicate__ deathPlace __object__ United States']
Text: Albert Jennings Fountain died in the United States.
Subject: Albert Jennings Fountain
Predicate: deathPlace
Object: United States

Triple: ['__subject__ Albert Jennings Fountain __predicate__ inOfficeWhileVicePresident __object__ Edmund J. Davis']
Text: Albert Jennings Fountain was in office while Edmund J. Davis was Vice President.
Subject: Albert Jennings Fountain
Predicate: inOfficeWhileVicePresident
Object: Edmund J. Davis

Triple: ['__subject__ Albert Jennings Fountain __predicate__ inOfficeWhileVicePresident __object__ Edmund J. Davis']
Text: Albert Jennings Fountain was a politician while Vice President Edmund J. Davis was in office.
Subject: Albert Jennings Fountain
Predicate: inOfficeWhileVicePresident
Object: Edmund J. Davis

Triple: ['__subject__ Albert Jennings Fountain __predicate__ inOfficeWhileVicePresident __object__ Edmund J. Davis']
Text: Albert Jennings Fountain was in office whilst Edmund J. Davis was Vice President.
Subject: Albert Jennings Fountain
Predicate: inOfficeWhileVicePresident
Object: Edmund J. Davis

Triple: ['__subject__ Albert Jennings Fountain __predicate__ militaryBranch __object__ 1st Regiment New Mexico Volunteer Cavalry']
Text: The branch of military Albert Jennings Fountain belonged to was 1st Regiment New Mexico Volunteer Cavalry.
Subject: Albert Jennings Fountain
Predicate: militaryBranch
Object: 1st Regiment New Mexico Volunteer Cavalry

Triple: ['__subject__ Albert Jennings Fountain __predicate__ militaryBranch __object__ 1st Regiment New Mexico Volunteer Cavalry']
Text: Albert Jennings Fountain was in the 1st Regiment New Mexico Volunteer Cavalry.
Subject: Albert Jennings Fountain
Predicate: militaryBranch
Object: 1st Regiment New Mexico Volunteer Cavalry

Triple: ['__subject__ Albert Jennings Fountain __predicate__ militaryBranch __object__ 1st Regiment New Mexico Volunteer Cavalry']
Text: Albert Jennings Fountain served in the 1st Regiment New Mexico Volunteer Cavalry.
Subject: Albert Jennings Fountain
Predicate: militaryBranch
Object: 1st Regiment New Mexico Volunteer Cavalry

Triple: ['__subject__ Albert Jennings Fountain __predicate__ office __object__ President pro tempore of the Texas Senate']
Text: Albert Jennings Fountain worked as President pro tempore of the Texas Senate.
Subject: Albert Jennings Fountain
Predicate: office
Object: President pro tempore of the Texas Senate

Triple: ['__subject__ Albert Jennings Fountain __predicate__ party __object__ Republican Party (United States)']
Text: Albert Jennings Fountain was a member of the United States republican party.
Subject: Albert Jennings Fountain
Predicate: party
Object: Republican Party (United States)

Triple: ['__subject__ Albert Jennings Fountain __predicate__ party __object__ Republican Party (United States)']
Text: Albert Jennings Fountain is a member of the Republican Party in the U.S.A.
Subject: Albert Jennings Fountain
Predicate: party
Object: Republican Party (United States)

Triple: ['__subject__ Albert Jennings Fountain __predicate__ party __object__ Republican Party (United States)']
Text: Albert Jennings Fountain was a member of the Republican Party in the United States.
Subject: Albert Jennings Fountain
Predicate: party
Object: Republican Party (United States)

Triple: ['__subject__ Alberto Teisaire __predicate__ birthDate __object__ 1891-05-20']
Text: Alberto Teisaire was born in 1891-05-20.
Subject: Alberto Teisaire
Predicate: birthDate
Object: 1891-05-20

Triple: ['__subject__ Alberto Teisaire __predicate__ birthDate __object__ 1891-05-20']
Text: Alberto Teisaire was born on 1891-05-20.
Subject: Alberto Teisaire
Predicate: birthDate
Object: 1891-05-20

Triple: ['__subject__ Alberto Teisaire __predicate__ birthDate __object__ 1891-05-20']
Text: Alberto Teisaire's date of birth is 05-20-1891.
Subject: Alberto Teisaire
Predicate: birthDate
Object: 1891-05-20

Triple: ['__subject__ Alberto Teisaire __predicate__ birthPlace __object__ Mendoza, Argentina']
Text: Alberto Teisaire was born in Mendoza in Argentina.
Subject: Alberto Teisaire
Predicate: birthPlace
Object: Mendoza, Argentina

Triple: ['__subject__ Alberto Teisaire __predicate__ birthPlace __object__ Mendoza, Argentina']
Text: Alberto Teisaire was born in Mendoza, Argentina.
Subject: Alberto Teisaire
Predicate: birthPlace
Object: Mendoza, Argentina

Triple: ['__subject__ Alberto Teisaire __predicate__ deathPlace __object__ Buenos Aires']
Text: Alberto Teisaire's place of death was Buenos Aires.
Subject: Alberto Teisaire
Predicate: deathPlace
Object: Buenos Aires

Triple: ['__subject__ Alberto Teisaire __predicate__ deathPlace __object__ Buenos Aires']
Text: Alberto Teisaire died in Buenos Aires.
Subject: Alberto Teisaire
Predicate: deathPlace
Object: Buenos Aires

Triple: ['__subject__ Alberto Teisaire __predicate__ inOfficeWhilePresident __object__ Juan Perón']
Text: Alberto Teisaire was in office while Juan Perón was president.
Subject: Alberto Teisaire
Predicate: inOfficeWhilePresident
Object: Juan Perón

Triple: ['__subject__ Alberto Teisaire __predicate__ inOfficeWhilePresident __object__ Juan Perón']
Text: Alberto Teisaire was in office while Juan Peron was President.
Subject: Alberto Teisaire
Predicate: inOfficeWhilePresident
Object: Juan Perón

Triple: ['__subject__ Alberto Teisaire __predicate__ office __object__ Provisional President of the Argentine Senate']
Text: Alberto Teisaire worked as the Provisional President of the Argentine Senate.
Subject: Alberto Teisaire
Predicate: office
Object: Provisional President of the Argentine Senate

Triple: ['__subject__ Alberto Teisaire __predicate__ office __object__ Provisional President of the Argentine Senate']
Text: Alberto Teisaire worked as a Provisional President of the Argentine Senate.
Subject: Alberto Teisaire
Predicate: office
Object: Provisional President of the Argentine Senate

Triple: ['__subject__ Alberto Teisaire __predicate__ party __object__ Justicialist Party']
Text: Alberto Teisaire's party is Justicialist Party.
Subject: Alberto Teisaire
Predicate: party
Object: Justicialist Party

Triple: ['__subject__ Alberto Teisaire __predicate__ party __object__ Justicialist Party']
Text: Alberto Teisaire is a member of the Justicialist Party.
Subject: Alberto Teisaire
Predicate: party
Object: Justicialist Party

Triple: ['__subject__ Alberto Teisaire __predicate__ profession __object__ Rear admiral']
Text: Alberto Teisaire is a Rear Admiral.
Subject: Alberto Teisaire
Predicate: profession
Object: Rear admiral

Triple: ['__subject__ Alberto Teisaire __predicate__ profession __object__ Rear admiral']
Text: Alberto Teisaire was a Rear Admiral by profession.
Subject: Alberto Teisaire
Predicate: profession
Object: Rear admiral

Triple: ['__subject__ Alberto Teisaire __predicate__ profession __object__ Rear admiral']
Text: The profession of Alberto Teisaire was Rear Admiral.
Subject: Alberto Teisaire
Predicate: profession
Object: Rear admiral

Triple: ['__subject__ Alberto Teisaire __predicate__ successor __object__ Isaac Rojas']
Text: Isaac Rojas was the successor to Alberto Teisaire.
Subject: Alberto Teisaire
Predicate: successor
Object: Isaac Rojas

Triple: ['__subject__ Alberto Teisaire __predicate__ successor __object__ Isaac Rojas']
Text: Alberto Teisaire's successor was Isaac Rojas.
Subject: Alberto Teisaire
Predicate: successor
Object: Isaac Rojas

Triple: ['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria']
Text: Alfons Gorbach was born in Austria.
Subject: Alfons Gorbach
Predicate: birthPlace
Object: Austria

Triple: ['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria-Hungary']
Text: Alfons Gorbach was born in Austria-Hungary.
Subject: Alfons Gorbach
Predicate: birthPlace
Object: Austria-Hungary

Triple: ['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Austria-Hungary']
Text: Austria-Hungary is the birthplace of Alfons Gorbach.
Subject: Alfons Gorbach
Predicate: birthPlace
Object: Austria-Hungary

Triple: ['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ County of Tyrol']
Text: Alfons Gorbach was born in the County of Tyrol.
Subject: Alfons Gorbach
Predicate: birthPlace
Object: County of Tyrol

Triple: ['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ County of Tyrol']
Text: The birth place of Alfons Gorbach is County of Tyrol.
Subject: Alfons Gorbach
Predicate: birthPlace
Object: County of Tyrol

Triple: ['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst']
Text: Alfons Gorbach was born in Imst.
Subject: Alfons Gorbach
Predicate: birthPlace
Object: Imst

Triple: ['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Imst']
Text: Alfons Gorbach's birthplace is Imst.
Subject: Alfons Gorbach
Predicate: birthPlace
Object: Imst

Triple: ['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Tyrol (state)']
Text: Alfons Gorbach's place of birth was the state, Tyrol.
Subject: Alfons Gorbach
Predicate: birthPlace
Object: Tyrol (state)

Triple: ['__subject__ Alfons Gorbach __predicate__ birthPlace __object__ Tyrol (state)']
Text: Alfons Gorbach was born in the state of Tyrol.
Subject: Alfons Gorbach
Predicate: birthPlace
Object: Tyrol (state)

Triple: ['__subject__ Alfons Gorbach __predicate__ deathPlace __object__ Graz']
Text: Alfons Gorbach died in Graz.
Subject: Alfons Gorbach
Predicate: deathPlace
Object: Graz

Triple: ['__subject__ Alfons Gorbach __predicate__ deathPlace __object__ Styria']
Text: Alfons Gorbach died in Styria.
Subject: Alfons Gorbach
Predicate: deathPlace
Object: Styria

Triple: ['__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf']
Text: Alfons Gorbach was in office during President Adolf Schärf's reign.
Subject: Alfons Gorbach
Predicate: inOfficeWhilePresident
Object: Adolf Schärf

Triple: ['__subject__ Alfons Gorbach __predicate__ inOfficeWhilePresident __object__ Adolf Schärf']
Text: Alfons Gorbach was in office while Adolf Scharf was President.
Subject: Alfons Gorbach
Predicate: inOfficeWhilePresident
Object: Adolf Schärf

Triple: ["__subject__ Alfons Gorbach __predicate__ party __object__ Austrian People's Party"]
Text: Alfons Gorbach was a politician from the Austrian People's Party.
Subject: Alfons Gorbach
Predicate: party
Object: Austrian People's Party

Triple: ["__subject__ Alfons Gorbach __predicate__ party __object__ Austrian People's Party"]
Text: Alfons Gorbach is a member of the Austrian People's Party.
Subject: Alfons Gorbach
Predicate: party
Object: Austrian People's Party

Triple: ['__subject__ Alfons Gorbach __predicate__ successor __object__ Josef Klaus']
Text: Josef Klaus succeeded Alfons Gorbach.
Subject: Alfons Gorbach
Predicate: successor
Object: Josef Klaus

Triple: ['__subject__ Alfons Gorbach __predicate__ successor __object__ Josef Klaus']
Text: The successor to Alfons Gorbach is Josef Klaus.
Subject: Alfons Gorbach
Predicate: successor
Object: Josef Klaus

Triple: ['__subject__ Alfons Gorbach __predicate__ successor __object__ Josef Klaus']
Text: Alfons Gorbach's successor was Josef Klaus.
Subject: Alfons Gorbach
Predicate: successor
Object: Josef Klaus

Triple: ['__subject__ Alfred Moore Scales __predicate__ activeYearsStartDate __object__ 1857-03-04']
Text: Alfred Moore Scales started his career on 1857-03-04.
Subject: Alfred Moore Scales
Predicate: activeYearsStartDate
Object: 1857-03-04

Triple: ['__subject__ Alfred Moore Scales __predicate__ activeYearsStartDate __object__ 1885-01-21']
Text: Alfred Moore Scales began his career on January 21st 1885.
Subject: Alfred Moore Scales
Predicate: activeYearsStartDate
Object: 1885-01-21

Triple: ['__subject__ Alfred Moore Scales __predicate__ almaMater __object__ University of North Carolina at Chapel Hill']
Text: The alma Mater of Alfred Moore Scales is the University of North Carolina at Chapel Hill.
Subject: Alfred Moore Scales
Predicate: almaMater
Object: University of North Carolina at Chapel Hill

Triple: ['__subject__ Alfred Moore Scales __predicate__ almaMater __object__ University of North Carolina at Chapel Hill']
Text: The alma mater of Alfred Moore Scales was the University of North Carolina at Chapel Hill.
Subject: Alfred Moore Scales
Predicate: almaMater
Object: University of North Carolina at Chapel Hill

Triple: ['__subject__ Alfred Moore Scales __predicate__ battle __object__ American Civil War']
Text: Alfred Moore Scales took part in American Civil War battles.
Subject: Alfred Moore Scales
Predicate: battle
Object: American Civil War

Triple: ['__subject__ Alfred Moore Scales __predicate__ battle __object__ American Civil War']
Text: Alfred Moore Scales battled in the American Civil War.
Subject: Alfred Moore Scales
Predicate: battle
Object: American Civil War

Triple: ['__subject__ Alfred Moore Scales __predicate__ battle __object__ American Civil War']
Text: Alfred Moore Scales fought in the American Civil War.
Subject: Alfred Moore Scales
Predicate: battle
Object: American Civil War

Triple: ['__subject__ Alfred Moore Scales __predicate__ battle __object__ Battle of Fredericksburg']
Text: Alfred Moore Scales fought in battles such as the Battle of Fredericksburg.
Subject: Alfred Moore Scales
Predicate: battle
Object: Battle of Fredericksburg

Triple: ['__subject__ Alfred Moore Scales __predicate__ battle __object__ Battle of Fredericksburg']
Text: Alfred Moore Scales fought in the Battle of Fredericksburg.
Subject: Alfred Moore Scales
Predicate: battle
Object: Battle of Fredericksburg

Triple: ['__subject__ Alfred Moore Scales __predicate__ battle __object__ Battle of Gettysburg']
Text: One of the battles Alfred Moore Scales was involved in was the Battle of Gettysburg.
Subject: Alfred Moore Scales
Predicate: battle
Object: Battle of Gettysburg

Triple: ['__subject__ Alfred Moore Scales __predicate__ battle __object__ Battle of Gettysburg']
Text: Alfred Moore Scales fought in the Battle of Gettysburg.
Subject: Alfred Moore Scales
Predicate: battle
Object: Battle of Gettysburg

Triple: ['__subject__ Alfred Moore Scales __predicate__ battle __object__ Peninsula Campaign']
Text: Alfred Moore Scales was active during the Peninsula Campaign.
Subject: Alfred Moore Scales
Predicate: battle
Object: Peninsula Campaign

Triple: ['__subject__ Alfred Moore Scales __predicate__ battle __object__ Siege of Petersburg']
Text: Alfred Moore Scales took part in the Siege of Petersburg.
Subject: Alfred Moore Scales
Predicate: battle
Object: Siege of Petersburg

Triple: ['__subject__ Alfred Moore Scales __predicate__ battle __object__ Siege of Petersburg']
Text: Alfred Moore Scales was at the Siege of Petersburg.
Subject: Alfred Moore Scales
Predicate: battle
Object: Siege of Petersburg

Triple: ['__subject__ Alfred Moore Scales __predicate__ birthPlace __object__ Reidsville, North Carolina']
Text: Alfred Moore Scales was born in Reidsville, North Carolina.
Subject: Alfred Moore Scales
Predicate: birthPlace
Object: Reidsville, North Carolina

Triple: ['__subject__ Alfred Moore Scales __predicate__ birthPlace __object__ Reidsville, North Carolina']
Text: Reidsville, North Carolina was the birthplace of Alfred Moore Scales.
Subject: Alfred Moore Scales
Predicate: birthPlace
Object: Reidsville, North Carolina

Triple: ['__subject__ Alfred Moore Scales __predicate__ country __object__ United States']
Text: Alfred Moore Scales came from the U.S.
Subject: Alfred Moore Scales
Predicate: country
Object: United States

Triple: ['__subject__ Alfred Moore Scales __predicate__ country __object__ United States']
Text: Alfred Moore Scales lives in the United States.
Subject: Alfred Moore Scales
Predicate: country
Object: United States

Triple: ['__subject__ Alfred Moore Scales __predicate__ office __object__ Governor of North Carolina']
Text: Alfred Moore Scales was Governor of North Carolina.
Subject: Alfred Moore Scales
Predicate: office
Object: Governor of North Carolina

Triple: ['__subject__ Alfred Moore Scales __predicate__ party __object__ Democratic Party (United States)']
Text: Alfred Moore Scales is a member of the Democratic Party in the United States.
Subject: Alfred Moore Scales
Predicate: party
Object: Democratic Party (United States)

Triple: ['__subject__ Alfred Moore Scales __predicate__ successor __object__ Daniel Gould Fowle']
Text: Daniel Gould Fowle suceeded Alfred Moore Scales.
Subject: Alfred Moore Scales
Predicate: successor
Object: Daniel Gould Fowle

Triple: ['__subject__ Alfred Moore Scales __predicate__ successor __object__ Daniel Gould Fowle']
Text: Daniel Gould Fowle is the successor to Alfred Moore Scales.
Subject: Alfred Moore Scales
Predicate: successor
Object: Daniel Gould Fowle

Triple: ['__subject__ Alfred Moore Scales __predicate__ successor __object__ Daniel Gould Fowle']
Text: Alfred Moore Scales was succeeded by Daniel Gould Fowle.
Subject: Alfred Moore Scales
Predicate: successor
Object: Daniel Gould Fowle

Triple: ['__subject__ Alfred Moore Scales __predicate__ successor __object__ James Madison Leach']
Text: The successor of Alfred Moore Scales was James Madison Leach.
Subject: Alfred Moore Scales
Predicate: successor
Object: James Madison Leach

Triple: ['__subject__ Alfred Moore Scales __predicate__ successor __object__ James Madison Leach']
Text: Alfred Moore Scales was succeeded by James Madison Leach.
Subject: Alfred Moore Scales
Predicate: successor
Object: James Madison Leach

Triple: ['__subject__ Alfred Moore Scales __predicate__ successor __object__ James Madison Leach']
Text: The successor to Alfred Moore Scales was James Madison Leach.
Subject: Alfred Moore Scales
Predicate: successor
Object: James Madison Leach

Triple: ['__subject__ Alfred Moore Scales __predicate__ successor __object__ James W. Reid (politician)']
Text: Alfred Moore Scales's successor was the politician, James W. Reid.
Subject: Alfred Moore Scales
Predicate: successor
Object: James W. Reid (politician)

Triple: ['__subject__ Alfred Moore Scales __predicate__ successor __object__ James W. Reid (politician)']
Text: Alfred Moore Scales was succeeded by the politician James W Reid.
Subject: Alfred Moore Scales
Predicate: successor
Object: James W. Reid (politician)

Triple: ['__subject__ Alfred N. Phillips __predicate__ activeYearsEndDate __object__ 1939-01-03']
Text: Alfred N Phillips retired on the date 1939-01-03.
Subject: Alfred N. Phillips
Predicate: activeYearsEndDate
Object: 1939-01-03

Triple: ['__subject__ Alfred N. Phillips __predicate__ birthPlace __object__ Connecticut']
Text: Alfred N. Phillips was born in Connecticut.
Subject: Alfred N. Phillips
Predicate: birthPlace
Object: Connecticut

Triple: ['__subject__ Alfred N. Phillips __predicate__ birthPlace __object__ Connecticut']
Text: Connecticut was the birthplace of Alfred N Phillips.
Subject: Alfred N. Phillips
Predicate: birthPlace
Object: Connecticut

Triple: ['__subject__ Alfred N. Phillips __predicate__ militaryBranch __object__ United States Army']
Text: Alfred N. Phillips served in the United States, Army.
Subject: Alfred N. Phillips
Predicate: militaryBranch
Object: United States Army

Triple: ['__subject__ Alfred N. Phillips __predicate__ militaryBranch __object__ United States Army']
Text: Alfred N. Phillips was a member of the US Army.
Subject: Alfred N. Phillips
Predicate: militaryBranch
Object: United States Army

Triple: ["__subject__ Alfred N. Phillips __predicate__ office __object__ Member of the U.S. House of Representatives from Connecticut's 4th district"]
Text: Alfred N Phillips worked as Member of the U.S. House of Representatives from Connecticut's 4th district.
Subject: Alfred N. Phillips
Predicate: office
Object: Member of the U.S. House of Representatives from Connecticut's 4th district

Triple: ["__subject__ Alfred N. Phillips __predicate__ office __object__ Member of the U.S. House of Representatives from Connecticut's 4th district"]
Text: Alfred N. Phillips was a Member of the U.S. House of Representatives from Connecticut's 4th district.
Subject: Alfred N. Phillips
Predicate: office
Object: Member of the U.S. House of Representatives from Connecticut's 4th district

Triple: ['__subject__ Alfred N. Phillips __predicate__ office __object__ United States House of Representatives']
Text: Alfred N. Phillips worked at the United States House of Representatives.
Subject: Alfred N. Phillips
Predicate: office
Object: United States House of Representatives

Triple: ['__subject__ Alfred N. Phillips __predicate__ office __object__ United States House of Representatives']
Text: Alfred N Phillips worked at the United States House of Representatives.
Subject: Alfred N. Phillips
Predicate: office
Object: United States House of Representatives

Triple: ['__subject__ Alfred N. Phillips __predicate__ party __object__ Democratic Party (United States)']
Text: Alfred N. Phillips was a member of the United States Democratic Party.
Subject: Alfred N. Phillips
Predicate: party
Object: Democratic Party (United States)

Triple: ['__subject__ Alfred N. Phillips __predicate__ party __object__ Democratic Party (United States)']
Text: Alfred N. Phillips was a member of the Democratic Party in the United States.
Subject: Alfred N. Phillips
Predicate: party
Object: Democratic Party (United States)

Triple: ['__subject__ Alfred N. Phillips __predicate__ successor __object__ Albert E. Austin']
Text: The successor to Alfred N. Phillips is Albert E. Austin.
Subject: Alfred N. Phillips
Predicate: successor
Object: Albert E. Austin

Triple: ['__subject__ Alfred N. Phillips __predicate__ successor __object__ Albert E. Austin']
Text: Albert E. Austin succeeded Alfred N. Phillips.
Subject: Alfred N. Phillips
Predicate: successor
Object: Albert E. Austin

Triple: ['__subject__ Alfred N. Phillips __predicate__ successor __object__ Albert E. Austin']
Text: Alfred N. Phillips successor was Albert E. Austin.
Subject: Alfred N. Phillips
Predicate: successor
Object: Albert E. Austin

Triple: ['__subject__ Allan Shivers __predicate__ activeYearsStartDate __object__ 1949-07-11']
Text: Allan Shivers started his active career on July 11th 1949.
Subject: Allan Shivers
Predicate: activeYearsStartDate
Object: 1949-07-11

Triple: ['__subject__ Allan Shivers __predicate__ birthPlace __object__ Lufkin, Texas']
Text: Allan Shivers was born in Lufkin, Texas.
Subject: Allan Shivers
Predicate: birthPlace
Object: Lufkin, Texas

Triple: ['__subject__ Allan Shivers __predicate__ birthPlace __object__ Lufkin, Texas']
Text: The birth place of Allan Shivers is Lufkin, Texas.
Subject: Allan Shivers
Predicate: birthPlace
Object: Lufkin, Texas

Triple: ['__subject__ Allan Shivers __predicate__ office __object__ Governor of Texas']
Text: Allan Shivers was Governor of Texas.
Subject: Allan Shivers
Predicate: office
Object: Governor of Texas

Triple: ['__subject__ Allan Shivers __predicate__ office __object__ Governor of Texas']
Text: Allan Shivers worked as the Governor of Texas.
Subject: Allan Shivers
Predicate: office
Object: Governor of Texas

Triple: ['__subject__ Allan Shivers __predicate__ office __object__ Lieutenant Governor of Texas']
Text: Allan Shivers was Lieutenant Governor of Texas.
Subject: Allan Shivers
Predicate: office
Object: Lieutenant Governor of Texas

Triple: ['__subject__ Allan Shivers __predicate__ office __object__ Member of the Texas State Senate from District 4 (Port Arthur)']
Text: Allan Shivers worked as a member of the Texas State Senate from District 4 (Port Arthur).
Subject: Allan Shivers
Predicate: office
Object: Member of the Texas State Senate from District 4 (Port Arthur)

Triple: ['__subject__ Allan Shivers __predicate__ office __object__ Member of the Texas State Senate from District 4 (Port Arthur)']
Text: Allan Shivers was a member of the Texas State Senate District 4 for Port Arthur.
Subject: Allan Shivers
Predicate: office
Object: Member of the Texas State Senate from District 4 (Port Arthur)

Triple: ['__subject__ Allan Shivers __predicate__ party __object__ Democratic Party (United States)']
Text: Allan Shivers served in the Democratic Party in the U.S.
Subject: Allan Shivers
Predicate: party
Object: Democratic Party (United States)

Triple: ['__subject__ Allan Shivers __predicate__ party __object__ Democratic Party (United States)']
Text: Allan Shivers was a member of the Democratic Party in the United States.
Subject: Allan Shivers
Predicate: party
Object: Democratic Party (United States)

Triple: ['__subject__ Allan Shivers __predicate__ successor __object__ Ben Ramsey']
Text: Allan Shivers was succeeded by Ben Ramsey.
Subject: Allan Shivers
Predicate: successor
Object: Ben Ramsey

Triple: ['__subject__ Allan Shivers __predicate__ successor __object__ Ben Ramsey']
Text: Allan Shivers' successor was Ben Ramsey.
Subject: Allan Shivers
Predicate: successor
Object: Ben Ramsey

Triple: ['__subject__ Allan Shivers __predicate__ successor __object__ Wilfred R. Cousins, Jr.']
Text: Wilfred R. Cousins, Jr. was the successor of Allan Shivers.
Subject: Allan Shivers
Predicate: successor
Object: Wilfred R. Cousins, Jr.

Triple: ['__subject__ Allan Shivers __predicate__ successor __object__ Wilfred R. Cousins, Jr.']
Text: The successor of Allan Shivers was Wilfred R. Cousins, Jr.
Subject: Allan Shivers
Predicate: successor
Object: Wilfred R. Cousins, Jr.

Triple: ['__subject__ Allan Shivers __predicate__ successor __object__ Wilfred R. Cousins, Jr.']
Text: Allan Shivers was succeeded by Wilfred R. Cousins, Jr.
Subject: Allan Shivers
Predicate: successor
Object: Wilfred R. Cousins, Jr.

Triple: ['__subject__ Alvah Sabin __predicate__ birthDate __object__ 1793-10-23']
Text: 1793-10-23 was Alvah Sabin's birthdate.
Subject: Alvah Sabin
Predicate: birthDate
Object: 1793-10-23

Triple: ['__subject__ Alvah Sabin __predicate__ birthDate __object__ 1793-10-23']
Text: Alvah Sabin was born on 23rd October 1793.
Subject: Alvah Sabin
Predicate: birthDate
Object: 1793-10-23

Triple: ['__subject__ Alvah Sabin __predicate__ birthDate __object__ 1793-10-23']
Text: Alvah Sabin was born October 23, 1793.
Subject: Alvah Sabin
Predicate: birthDate
Object: 1793-10-23

Triple: ['__subject__ Alvah Sabin __predicate__ birthPlace __object__ Georgia, Vermont']
Text: Georgia Vermont is the birthplace of Alvah Sabin.
Subject: Alvah Sabin
Predicate: birthPlace
Object: Georgia, Vermont

Triple: ['__subject__ Alvah Sabin __predicate__ birthPlace __object__ Georgia, Vermont']
Text: Alvah Sabin was born in Georgia, Vermont.
Subject: Alvah Sabin
Predicate: birthPlace
Object: Georgia, Vermont

Triple: ['__subject__ Alvah Sabin __predicate__ deathPlace __object__ Sycamore, Illinois']
Text: Alvah Sabin died in Sycamore, Illinois.
Subject: Alvah Sabin
Predicate: deathPlace
Object: Sycamore, Illinois

Triple: ['__subject__ Alvah Sabin __predicate__ office __object__ Secretary of State of Vermont']
Text: Alvah Sabin worked as the secretary of the State of Vermont.
Subject: Alvah Sabin
Predicate: office
Object: Secretary of State of Vermont

Triple: ['__subject__ Alvah Sabin __predicate__ office __object__ Secretary of State of Vermont']
Text: Alvah Sabin worked as the Secretary of State of Vermont.
Subject: Alvah Sabin
Predicate: office
Object: Secretary of State of Vermont

Triple: ["__subject__ Alvah Sabin __predicate__ region __object__ Vermont's 3rd congressional district"]
Text: Alvah Sabin represented Vermont's 3rd Congressional District.
Subject: Alvah Sabin
Predicate: region
Object: Vermont's 3rd congressional district

Triple: ['__subject__ Alvah Sabin __predicate__ religion __object__ Baptists']
Text: Alvah Sabin was a Baptist.
Subject: Alvah Sabin
Predicate: religion
Object: Baptists

Triple: ['__subject__ Alvah Sabin __predicate__ successor __object__ Homer Elihu Royce']
Text: Homer Elihu Royce was preceded by Alvah Sabin.
Subject: Alvah Sabin
Predicate: successor
Object: Homer Elihu Royce

Triple: ['__subject__ Alvah Sabin __predicate__ successor __object__ Homer Elihu Royce']
Text: Alvah Sabin successor was Homer Elihu Royce.
Subject: Alvah Sabin
Predicate: successor
Object: Homer Elihu Royce

Triple: ['__subject__ Alvah Sabin __predicate__ successor __object__ Homer Elihu Royce']
Text: Homer Elihu Royce was the successor to Alvah Sabin.
Subject: Alvah Sabin
Predicate: successor
Object: Homer Elihu Royce

Triple: ['__subject__ American Civil War __predicate__ commander __object__ Abraham Lincoln']
Text: Abraham Lincoln was a commander in the American Civil War.
Subject: American Civil War
Predicate: commander
Object: Abraham Lincoln

Triple: ['__subject__ American Civil War __predicate__ commander __object__ Abraham Lincoln']
Text: A commander in the American Civil War was Abraham Lincoln.
Subject: American Civil War
Predicate: commander
Object: Abraham Lincoln

Triple: ['__subject__ American Civil War __predicate__ commander __object__ Jefferson Davis']
Text: Jefferson Davis was a commander in the American Civil War.
Subject: American Civil War
Predicate: commander
Object: Jefferson Davis

Triple: ['__subject__ American Civil War __predicate__ commander __object__ Jefferson Davis']
Text: A commander in the American Civil War was Jefferson Davis.
Subject: American Civil War
Predicate: commander
Object: Jefferson Davis

Triple: ['__subject__ Antonis Samaras __predicate__ birthPlace __object__ Athens']
Text: Antonis Samaras was born in Athens.
Subject: Antonis Samaras
Predicate: birthPlace
Object: Athens

Triple: ['__subject__ Antonis Samaras __predicate__ hasDeputy __object__ Evangelos Venizelos']
Text: Antonis Samaras has Evangelos Venizelos for a Deputy.
Subject: Antonis Samaras
Predicate: hasDeputy
Object: Evangelos Venizelos

Triple: ['__subject__ Antonis Samaras __predicate__ hasDeputy __object__ Evangelos Venizelos']
Text: Antonis Samaras has the deputy Evangelos Venizelos.
Subject: Antonis Samaras
Predicate: hasDeputy
Object: Evangelos Venizelos

Triple: ['__subject__ Antonis Samaras __predicate__ hasDeputy __object__ Evangelos Venizelos']
Text: Antonis Samaras' deputy is Evangelos Venizelos.
Subject: Antonis Samaras
Predicate: hasDeputy
Object: Evangelos Venizelos

Triple: ['__subject__ Antonis Samaras __predicate__ inOfficeWhilePrimeMinister __object__ Konstantinos Mitsotakis']
Text: Antonis Samaras was in office while Konstantinos Mitsotakis was Prime Minister.
Subject: Antonis Samaras
Predicate: inOfficeWhilePrimeMinister
Object: Konstantinos Mitsotakis

Triple: ['__subject__ Argentina __predicate__ language __object__ Spanish language']
Text: The language of Argentina is Spanish.
Subject: Argentina
Predicate: language
Object: Spanish language

Triple: ['__subject__ Argentina __predicate__ language __object__ Spanish language']
Text: Spanish is spoken in Argentina.
Subject: Argentina
Predicate: language
Object: Spanish language

Triple: ['__subject__ Argentina __predicate__ language __object__ Spanish language']
Text: They speak Spanish in Argentina.
Subject: Argentina
Predicate: language
Object: Spanish language

Triple: ['__subject__ Argentina __predicate__ officialLanguage __object__ Spanish language']
Text: Spanish is the official language in Argentina.
Subject: Argentina
Predicate: officialLanguage
Object: Spanish language

Triple: ['__subject__ Argentina __predicate__ officialLanguage __object__ Spanish language']
Text: The official language of Argentina is Spanish.
Subject: Argentina
Predicate: officialLanguage
Object: Spanish language

Triple: ['__subject__ Austria __predicate__ leader __object__ Doris Bures']
Text: Doris Bures is a leader in Austria.
Subject: Austria
Predicate: leader
Object: Doris Bures

Triple: ['__subject__ Austria __predicate__ leader __object__ Doris Bures']
Text: Doris Bures is a leader of Austria.
Subject: Austria
Predicate: leader
Object: Doris Bures

Triple: ['__subject__ Austria __predicate__ leader __object__ Doris Bures']
Text: The leader of Austria is Doris Bures.
Subject: Austria
Predicate: leader
Object: Doris Bures

Triple: ['__subject__ Battle of Antietam __predicate__ isPartOfMilitaryConflict __object__ American Civil War']
Text: The Battle of Antietam was part of the military conflict known as the American Civil War.
Subject: Battle of Antietam
Predicate: isPartOfMilitaryConflict
Object: American Civil War

Triple: ['__subject__ Battle of Antietam __predicate__ isPartOfMilitaryConflict __object__ American Civil War']
Text: The Battle of Antietam took place during the American Civil War.
Subject: Battle of Antietam
Predicate: isPartOfMilitaryConflict
Object: American Civil War

Triple: ['__subject__ Battle of Antietam __predicate__ isPartOfMilitaryConflict __object__ American Civil War']
Text: The Battle of Antietam was part of the American Civil war conflict.
Subject: Battle of Antietam
Predicate: isPartOfMilitaryConflict
Object: American Civil War

Triple: ['__subject__ Battle of Chancellorsville __predicate__ isPartOfMilitaryConflict __object__ American Civil War']
Text: Battle of Chancellorsville was part of the American Civil War conflict.
Subject: Battle of Chancellorsville
Predicate: isPartOfMilitaryConflict
Object: American Civil War

Triple: ['__subject__ Battle of Cold Harbor __predicate__ commander __object__ Robert E. Lee']
Text: Robert E Lee was the commander in the Battle of Cold Harbor.
Subject: Battle of Cold Harbor
Predicate: commander
Object: Robert E. Lee

Triple: ['__subject__ Battle of Cold Harbor __predicate__ commander __object__ Robert E. Lee']
Text: Robert E. Lee was a commander at the Battle of Cold Harbor.
Subject: Battle of Cold Harbor
Predicate: commander
Object: Robert E. Lee

Triple: ['__subject__ Battle of France __predicate__ commander __object__ Gerd von Rundstedt']
Text: Gerd Von Rundstedt was the commmander in the Battle of France.
Subject: Battle of France
Predicate: commander
Object: Gerd von Rundstedt

Triple: ['__subject__ Battle of France __predicate__ commander __object__ Gerd von Rundstedt']
Text: Gerd von Rundstedt was a commander in the Battle of France.
Subject: Battle of France
Predicate: commander
Object: Gerd von Rundstedt

Triple: ['__subject__ Battle of France __predicate__ commander __object__ Hugo Sperrle']
Text: Hugo Sperrle was a commander in the Battle of France.
Subject: Battle of France
Predicate: commander
Object: Hugo Sperrle

Triple: ['__subject__ Battle of France __predicate__ commander __object__ Hugo Sperrle']
Text: Hugo Sperrle was the commander in the Battle of France.
Subject: Battle of France
Predicate: commander
Object: Hugo Sperrle

Triple: ['__subject__ Battle of Fredericksburg __predicate__ commander __object__ Robert E. Lee']
Text: The commander at the Battle of Fredericksburg was Robert E Lee.
Subject: Battle of Fredericksburg
Predicate: commander
Object: Robert E. Lee

Triple: ['__subject__ Battle of Fredericksburg __predicate__ commander __object__ Robert E. Lee']
Text: Robert E. Lee was a commander in the Battle of Fredericksburg.
Subject: Battle of Fredericksburg
Predicate: commander
Object: Robert E. Lee

Triple: ['__subject__ Battle of Fredericksburg __predicate__ commander __object__ Robert E. Lee']
Text: Robert E. Lee was a commander at the Battle of Fredericksburg.
Subject: Battle of Fredericksburg
Predicate: commander
Object: Robert E. Lee

Triple: ['__subject__ Battle of Gettysburg __predicate__ commander __object__ Robert E. Lee']
Text: Robert E Lee was a commander in the Battle of Gettysburg.
Subject: Battle of Gettysburg
Predicate: commander
Object: Robert E. Lee

Triple: ['__subject__ Battle of Gettysburg __predicate__ commander __object__ Robert E. Lee']
Text: Robert E. Lee was a commander in the Battle of Gettysburg.
Subject: Battle of Gettysburg
Predicate: commander
Object: Robert E. Lee

Triple: ['__subject__ Battle of Gettysburg __predicate__ commander __object__ Robert E. Lee']
Text: Robert E. Lee was a commander at the Battle of Gettysburg.
Subject: Battle of Gettysburg
Predicate: commander
Object: Robert E. Lee

Triple: ['__subject__ Battle of Gettysburg __predicate__ isPartOfMilitaryConflict __object__ American Civil War']
Text: The Battle of Gettysburg was part of the American Civil War conflict.
Subject: Battle of Gettysburg
Predicate: isPartOfMilitaryConflict
Object: American Civil War

Triple: ['__subject__ Battle of Gettysburg __predicate__ isPartOfMilitaryConflict __object__ American Civil War']
Text: The Battle of Gettysburg took place during the American Civil War.
Subject: Battle of Gettysburg
Predicate: isPartOfMilitaryConflict
Object: American Civil War

Triple: ['__subject__ Battle of Salem Church __predicate__ commander __object__ Robert E. Lee']
Text: Robert E. Lee was a commander in the Battle of Salem Church.
Subject: Battle of Salem Church
Predicate: commander
Object: Robert E. Lee

Triple: ['__subject__ Battle of Salem Church __predicate__ commander __object__ Robert E. Lee']
Text: Robert E. Lee was a commander at the Battle of Salem Church.
Subject: Battle of Salem Church
Predicate: commander
Object: Robert E. Lee

Triple: ['__subject__ Battle of Salem Church __predicate__ isPartOfMilitaryConflict __object__ American Civil War']
Text: The Battle of Salem Church was part of the American Civil War conflict.
Subject: Battle of Salem Church
Predicate: isPartOfMilitaryConflict
Object: American Civil War

Triple: ['__subject__ Battle of Salem Church __predicate__ isPartOfMilitaryConflict __object__ American Civil War']
Text: The Battle of Salem Church was one of the military conflicts in the American Civil War.
Subject: Battle of Salem Church
Predicate: isPartOfMilitaryConflict
Object: American Civil War

Triple: ['__subject__ Battle of Salem Church __predicate__ isPartOfMilitaryConflict __object__ American Civil War']
Text: The Battle of Salem Church occurred during the American Civil War.
Subject: Battle of Salem Church
Predicate: isPartOfMilitaryConflict
Object: American Civil War

Triple: ['__subject__ Battle of the Wilderness __predicate__ isPartOfMilitaryConflict __object__ American Civil War']
Text: The Battle of the Wilderness was fought during the American Civil War.
Subject: Battle of the Wilderness
Predicate: isPartOfMilitaryConflict
Object: American Civil War

Triple: ['__subject__ Buenos Aires __predicate__ governingBody __object__ Buenos Aires City Legislature']
Text: The governing body in Buenos Aires is the Buenos Aires City Legislature.
Subject: Buenos Aires
Predicate: governingBody
Object: Buenos Aires City Legislature

Triple: ['__subject__ Buenos Aires __predicate__ governingBody __object__ Buenos Aires City Legislature']
Text: Buenos Aires has the governing body of Buenos Aires City Legislature.
Subject: Buenos Aires
Predicate: governingBody
Object: Buenos Aires City Legislature

Triple: ['__subject__ Buenos Aires __predicate__ governingBody __object__ Buenos Aires City Legislature']
Text: Buenos Aires is governed by the Buenos Aires City Legislature.
Subject: Buenos Aires
Predicate: governingBody
Object: Buenos Aires City Legislature

Triple: ['__subject__ Buenos Aires __predicate__ leader __object__ Diego Santilli']
Text: The leader of Buenos Aires is Diego Santilli.
Subject: Buenos Aires
Predicate: leader
Object: Diego Santilli

Triple: ['__subject__ Buenos Aires __predicate__ leader __object__ Diego Santilli']
Text: The leader in Buenos Aires is Diego Santilli.
Subject: Buenos Aires
Predicate: leader
Object: Diego Santilli

Triple: ['__subject__ Buenos Aires __predicate__ leader __object__ Horacio Rodríguez Larreta']
Text: Horacio Rodríguez Larreta is the name of the leader in Buenos Aires.
Subject: Buenos Aires
Predicate: leader
Object: Horacio Rodríguez Larreta

Triple: ['__subject__ Buenos Aires __predicate__ leader __object__ Horacio Rodríguez Larreta']
Text: The leader of Buenos Aires is Horacio Rodríguez Larreta.
Subject: Buenos Aires
Predicate: leader
Object: Horacio Rodríguez Larreta

Triple: ['__subject__ Buenos Aires __predicate__ leader __object__ Horacio Rodríguez Larreta']
Text: The leader in Buenos Aires is Horacio Rodríguez Larreta.
Subject: Buenos Aires
Predicate: leader
Object: Horacio Rodríguez Larreta

Triple: ['__subject__ Casey Ribicoff __predicate__ birthPlace __object__ Chicago']
Text: Casey Ribicoff's place of birth was Chicago.
Subject: Casey Ribicoff
Predicate: birthPlace
Object: Chicago

Triple: ['__subject__ Casey Ribicoff __predicate__ birthPlace __object__ Chicago']
Text: Casey Ribicoff was born in Chicago.
Subject: Casey Ribicoff
Predicate: birthPlace
Object: Chicago

Triple: ['__subject__ Cleveland __predicate__ country __object__ United States']
Text: Cleveland is in the United States.
Subject: Cleveland
Predicate: country
Object: United States

Triple: ['__subject__ Cleveland __predicate__ country __object__ United States']
Text: Cleveland is in the U.S.A.
Subject: Cleveland
Predicate: country
Object: United States

Triple: ['__subject__ Daniel Gould Fowle __predicate__ almaMater __object__ Princeton University']
Text: Daniel Gould Fowle's Alma Mater is Princeton University.
Subject: Daniel Gould Fowle
Predicate: almaMater
Object: Princeton University

Triple: ['__subject__ Daniel Gould Fowle __predicate__ almaMater __object__ Princeton University']
Text: The alma mater of Daniel Gould Fowle is Princeton University.
Subject: Daniel Gould Fowle
Predicate: almaMater
Object: Princeton University

Triple: ['__subject__ Daniel Gould Fowle __predicate__ almaMater __object__ Princeton University']
Text: Daniel Gould Fowle attended Princeton University.
Subject: Daniel Gould Fowle
Predicate: almaMater
Object: Princeton University

Triple: ['__subject__ Emile Roemer __predicate__ party __object__ Socialist Party (Netherlands)']
Text: Emile Roemer is a member of the Socialist Party in the Netherlands.
Subject: Emile Roemer
Predicate: party
Object: Socialist Party (Netherlands)

Triple: ['__subject__ Erasmus University Rotterdam __predicate__ affiliation __object__ Association of MBAs']
Text: Erasmus University in Rotterdam is affiliated to the Association of MBAs.
Subject: Erasmus University Rotterdam
Predicate: affiliation
Object: Association of MBAs

Triple: ['__subject__ Erasmus University Rotterdam __predicate__ affiliation __object__ Association of MBAs']
Text: The Erasmus University Rotterdam is affiliated with the Association of MBAs.
Subject: Erasmus University Rotterdam
Predicate: affiliation
Object: Association of MBAs

Triple: ['__subject__ Erasmus University Rotterdam __predicate__ affiliation __object__ Association of MBAs']
Text: Erasmus University Rotterdam is affiliated to Association of MBAs.
Subject: Erasmus University Rotterdam
Predicate: affiliation
Object: Association of MBAs

Triple: ['__subject__ Felipe González __predicate__ predecessor __object__ Rodolfo Llopis']
Text: Rodolfo Llopis preceded Felipe Gonzalez.
Subject: Felipe González
Predicate: predecessor
Object: Rodolfo Llopis

Triple: ['__subject__ Felipe González __predicate__ predecessor __object__ Rodolfo Llopis']
Text: Felipe González's predecessor was Rodolfo Llopis.
Subject: Felipe González
Predicate: predecessor
Object: Rodolfo Llopis

Triple: ['__subject__ Felipe González __predicate__ predecessor __object__ Rodolfo Llopis']
Text: Felipe Gonzalez's predecessor was Rodolfo Llopis.
Subject: Felipe González
Predicate: predecessor
Object: Rodolfo Llopis

Triple: ['__subject__ Grenadier Guards __predicate__ battle __object__ Battle of Waterloo']
Text: Grenadier Guards took part in the Battle of Waterloo.
Subject: Grenadier Guards
Predicate: battle
Object: Battle of Waterloo

Triple: ['__subject__ Grenadier Guards __predicate__ battle __object__ Battle of Waterloo']
Text: The Grenadier Guards fought in the Battle of Waterloo.
Subject: Grenadier Guards
Predicate: battle
Object: Battle of Waterloo

Triple: ['__subject__ Gulf War __predicate__ commander __object__ George H. W. Bush']
Text: George H. W. Bush was a commander in the Gulf War.
Subject: Gulf War
Predicate: commander
Object: George H. W. Bush

Triple: ['__subject__ Gulf War __predicate__ commander __object__ George H. W. Bush']
Text: The commander of the Gulf War was George H. W. Bush.
Subject: Gulf War
Predicate: commander
Object: George H. W. Bush

Triple: ['__subject__ Gulf War __predicate__ commander __object__ George H. W. Bush']
Text: George H. W. Bush was a commander during the Gulf War.
Subject: Gulf War
Predicate: commander
Object: George H. W. Bush

Triple: ['__subject__ Gulf War __predicate__ commander __object__ John Major']
Text: John Major was a commander in the Gulf War.
Subject: Gulf War
Predicate: commander
Object: John Major

Triple: ['__subject__ Gulf War __predicate__ commander __object__ John Major']
Text: John Major was a commander during the Gulf War.
Subject: Gulf War
Predicate: commander
Object: John Major

Triple: ['__subject__ House of Representatives (Netherlands) __predicate__ leader __object__ Khadija Arib']
Text: Khadija Arib is the leader of the House of Representatives in the Netherlands.
Subject: House of Representatives (Netherlands)
Predicate: leader
Object: Khadija Arib

Triple: ['__subject__ House of Representatives (Netherlands) __predicate__ leader __object__ Khadija Arib']
Text: The leader of the House of Representatives in the Netherlands is Khadija Arib.
Subject: House of Representatives (Netherlands)
Predicate: leader
Object: Khadija Arib

Triple: ['__subject__ House of Representatives (Netherlands) __predicate__ leader __object__ Khadija Arib']
Text: Khadija Arib is a leader in the House of Representatives.
Subject: House of Representatives (Netherlands)
Predicate: leader
Object: Khadija Arib

Triple: ['__subject__ Juan Carlos I of Spain __predicate__ birthPlace __object__ Rome']
Text: Rome is the Birthplace of Juan Carlos I of Spain.
Subject: Juan Carlos I of Spain
Predicate: birthPlace
Object: Rome

Triple: ['__subject__ Juan Carlos I of Spain __predicate__ birthPlace __object__ Rome']
Text: Rome was the birthplace of Juan Carlos I of Spain.
Subject: Juan Carlos I of Spain
Predicate: birthPlace
Object: Rome

Triple: ['__subject__ Juan Carlos I of Spain __predicate__ birthPlace __object__ Rome']
Text: Juan Carlos I of Spain was born in Rome.
Subject: Juan Carlos I of Spain
Predicate: birthPlace
Object: Rome

Triple: ['__subject__ Juan Carlos I of Spain __predicate__ predecessor __object__ Alfonso XIII of Spain']
Text: Juan Carlos I of Spain's predecessor was Alfonso XIII of Spain.
Subject: Juan Carlos I of Spain
Predicate: predecessor
Object: Alfonso XIII of Spain

Triple: ['__subject__ Juan Carlos I of Spain __predicate__ predecessor __object__ Alfonso XIII of Spain']
Text: Juan Carlos I of Spain preceded Alfonso XIII of Spain.
Subject: Juan Carlos I of Spain
Predicate: predecessor
Object: Alfonso XIII of Spain

Triple: ['__subject__ Juan Carlos I of Spain __predicate__ spouse __object__ Queen Sofía of Spain']
Text: Queen Sofia of Spain is the wife of Juan Carlos I of Spain.
Subject: Juan Carlos I of Spain
Predicate: spouse
Object: Queen Sofía of Spain

Triple: ['__subject__ Juan Carlos I of Spain __predicate__ spouse __object__ Queen Sofía of Spain']
Text: Juan Carlos 1 of Spain was married to Queen Sofia of Spain.
Subject: Juan Carlos I of Spain
Predicate: spouse
Object: Queen Sofía of Spain

Triple: ['__subject__ Juan Carlos I of Spain __predicate__ spouse __object__ Queen Sofía of Spain']
Text: The spouse of Juan Carlos I of Spain is Queen Sofia of Spain.
Subject: Juan Carlos I of Spain
Predicate: spouse
Object: Queen Sofía of Spain

Triple: ['__subject__ Juan Perón __predicate__ inOfficeWhileGovernor __object__ Hortensio Quijano']
Text: Juan Peron served in office at the same time that Hortensio Quijano was Governor.
Subject: Juan Perón
Predicate: inOfficeWhileGovernor
Object: Hortensio Quijano

Triple: ['__subject__ Juan Perón __predicate__ inOfficeWhileGovernor __object__ Hortensio Quijano']
Text: Juan Perón was in Office While Hortensio Quijano was Governor.
Subject: Juan Perón
Predicate: inOfficeWhileGovernor
Object: Hortensio Quijano

Triple: ['__subject__ Juan Perón __predicate__ inOfficeWhileVicePresident __object__ Hortensio Quijano']
Text: Juan Peron was in office while Hortensio Quijano was vice president.
Subject: Juan Perón
Predicate: inOfficeWhileVicePresident
Object: Hortensio Quijano

Triple: ['__subject__ Juan Perón __predicate__ spouse __object__ Eva Perón']
Text: Juan Perón was married to Eva Perón.
Subject: Juan Perón
Predicate: spouse
Object: Eva Perón

Triple: ['__subject__ Juan Perón __predicate__ spouse __object__ Eva Perón']
Text: Juan Peron was married to Eva Peron.
Subject: Juan Perón
Predicate: spouse
Object: Eva Perón

Triple: ['__subject__ Juan Perón __predicate__ spouse __object__ Eva Perón']
Text: Juan Peron's spouse is Eva Peron.
Subject: Juan Perón
Predicate: spouse
Object: Eva Perón

Triple: ['__subject__ Makis Voridis __predicate__ birthPlace __object__ Athens']
Text: Athens was the birthplace of Makis Voridis.
Subject: Makis Voridis
Predicate: birthPlace
Object: Athens

Triple: ['__subject__ Makis Voridis __predicate__ birthPlace __object__ Athens']
Text: Makis Voridis was born in Athens.
Subject: Makis Voridis
Predicate: birthPlace
Object: Athens

Triple: ['__subject__ Mike Akhigbe __predicate__ militaryBranch __object__ Nigerian Navy']
Text: Mike Akhigbe was in the Nigerian Navy.
Subject: Mike Akhigbe
Predicate: militaryBranch
Object: Nigerian Navy

Triple: ['__subject__ Mike Akhigbe __predicate__ militaryBranch __object__ Nigerian Navy']
Text: Mike Akhigbe belonged to the Nigerian Navy branch of the Military.
Subject: Mike Akhigbe
Predicate: militaryBranch
Object: Nigerian Navy

Triple: ['__subject__ Mike Akhigbe __predicate__ successor __object__ Atiku Abubakar']
Text: Mike Akhigbe's successor was Atiku Abubakar.
Subject: Mike Akhigbe
Predicate: successor
Object: Atiku Abubakar

Triple: ['__subject__ Mike Akhigbe __predicate__ successor __object__ Atiku Abubakar']
Text: The successor to Mike Akhigbe was Atiku Abubakar.
Subject: Mike Akhigbe
Predicate: successor
Object: Atiku Abubakar

Triple: ['__subject__ Netherlands __predicate__ currency __object__ Euro']
Text: The currency in the Netherlands is the euro.
Subject: Netherlands
Predicate: currency
Object: Euro

Triple: ['__subject__ Netherlands __predicate__ currency __object__ Euro']
Text: The Euro is the currency in the Netherlands.
Subject: Netherlands
Predicate: currency
Object: Euro

Triple: ['__subject__ Netherlands __predicate__ currency __object__ Euro']
Text: The currency of The Netherlands is the Euro.
Subject: Netherlands
Predicate: currency
Object: Euro

Triple: ['__subject__ New Democracy (Greece) __predicate__ colour __object__ Blue']
Text: The colour of the New Democracy in Greece is blue.
Subject: New Democracy (Greece)
Predicate: colour
Object: Blue

Triple: ['__subject__ New Democracy (Greece) __predicate__ colour __object__ Blue']
Text: The colour of New Democracy in Greece is blue.
Subject: New Democracy (Greece)
Predicate: colour
Object: Blue

Triple: ['__subject__ New Democracy (Greece) __predicate__ colour __object__ Blue']
Text: Blue is the colour of the New Democracy in Greece.
Subject: New Democracy (Greece)
Predicate: colour
Object: Blue

Triple: ['__subject__ New York __predicate__ language __object__ Arabic']
Text: One of the languages spoken in New York is Arabic.
Subject: New York
Predicate: language
Object: Arabic

Triple: ['__subject__ New York __predicate__ language __object__ Arabic']
Text: In New York, one of the many languages spoken is Arabic.
Subject: New York
Predicate: language
Object: Arabic

Triple: ['__subject__ New York __predicate__ language __object__ French language']
Text: French is one of the languages spoken in New York.
Subject: New York
Predicate: language
Object: French language

Triple: ['__subject__ New York __predicate__ language __object__ French language']
Text: French is a language spoken in New York.
Subject: New York
Predicate: language
Object: French language

Triple: ['__subject__ Nigeria __predicate__ leader __object__ Yemi Osinbajo']
Text: Yemi Osinbajo is the leader of Nigeria.
Subject: Nigeria
Predicate: leader
Object: Yemi Osinbajo

Triple: ['__subject__ Nigeria __predicate__ leader __object__ Yemi Osinbajo']
Text: Yemi Osinbajo is a leader in Nigeria.
Subject: Nigeria
Predicate: leader
Object: Yemi Osinbajo

Triple: ['__subject__ Nigerian Air Force __predicate__ trainerAircraft __object__ Aermacchi MB-339']
Text: Aermacchi MB-339 is a trainer Aircraft used by the Nigerian Air -Force.
Subject: Nigerian Air Force
Predicate: trainerAircraft
Object: Aermacchi MB-339

Triple: ['__subject__ Nigerian Air Force __predicate__ trainerAircraft __object__ Aermacchi MB-339']
Text: The trainer aircraft for the Nigerian Air Force is the Aermacchi MB-339.
Subject: Nigerian Air Force
Predicate: trainerAircraft
Object: Aermacchi MB-339

Triple: ['__subject__ Nigerian Air Force __predicate__ trainerAircraft __object__ Aermacchi MB-339']
Text: The Nigerian Air Force used the Aermacchi MB-339 as a trainer aircraft.
Subject: Nigerian Air Force
Predicate: trainerAircraft
Object: Aermacchi MB-339

Triple: ['__subject__ Olusegun Obasanjo __predicate__ inOfficeWhileVicePresident __object__ Atiku Abubakar']
Text: Olusegun Obasanjo was in office whilst Atiku Abubakar was Vice President.
Subject: Olusegun Obasanjo
Predicate: inOfficeWhileVicePresident
Object: Atiku Abubakar

Triple: ['__subject__ Olusegun Obasanjo __predicate__ inOfficeWhileVicePresident __object__ Atiku Abubakar']
Text: Olusegun Obasanjo was in office while Atiku Abubakar was Vice President.
Subject: Olusegun Obasanjo
Predicate: inOfficeWhileVicePresident
Object: Atiku Abubakar

Triple: ['__subject__ Olusegun Obasanjo __predicate__ predecessor __object__ Abdulsalami Abubakar']
Text: Olusegun Obasanjo's predecessor was Abdulsalami Abubakar.
Subject: Olusegun Obasanjo
Predicate: predecessor
Object: Abdulsalami Abubakar

Triple: ['__subject__ Parkersburg, West Virginia __predicate__ country __object__ United States']
Text: Parkersburg, West Virginia is in the country, the United States.
Subject: Parkersburg, West Virginia
Predicate: country
Object: United States

Triple: ['__subject__ Parkersburg, West Virginia __predicate__ country __object__ United States']
Text: Parkersburg, West Virginia is in the U.S.A.
Subject: Parkersburg, West Virginia
Predicate: country
Object: United States

Triple: ['__subject__ Parkersburg, West Virginia __predicate__ country __object__ United States']
Text: Parkersburg, West Virginia is in the United States.
Subject: Parkersburg, West Virginia
Predicate: country
Object: United States

Triple: ['__subject__ Poland __predicate__ ethnicGroup __object__ Kashubians']
Text: Poland has an ethnic group called Kashubians.
Subject: Poland
Predicate: ethnicGroup
Object: Kashubians

Triple: ['__subject__ Poland __predicate__ ethnicGroup __object__ Kashubians']
Text: Kashubians are an ethnic group of Poland.
Subject: Poland
Predicate: ethnicGroup
Object: Kashubians

Triple: ['__subject__ Poland __predicate__ ethnicGroup __object__ Kashubians']
Text: One of the ethnic groups in Poland are the Kashubians.
Subject: Poland
Predicate: ethnicGroup
Object: Kashubians

Triple: ['__subject__ Poland __predicate__ language __object__ Polish language']
Text: The Polish language is used in Poland.
Subject: Poland
Predicate: language
Object: Polish language

Triple: ['__subject__ Poland __predicate__ language __object__ Polish language']
Text: Polish is the language spoken in Poland.
Subject: Poland
Predicate: language
Object: Polish language

Triple: ['__subject__ Poland __predicate__ language __object__ Polish language']
Text: In Poland they speak Polish.
Subject: Poland
Predicate: language
Object: Polish language

Triple: ['__subject__ Polish–Soviet War __predicate__ commander __object__ Joseph Stalin']
Text: Joseph Stalin was a commander in the Polish-Soviet War.
Subject: Polish–Soviet War
Predicate: commander
Object: Joseph Stalin

Triple: ['__subject__ Polish–Soviet War __predicate__ commander __object__ Joseph Stalin']
Text: Joseph Stalin was a commander during the Polish–Soviet War.
Subject: Polish–Soviet War
Predicate: commander
Object: Joseph Stalin

Triple: ['__subject__ Polish–Soviet War __predicate__ commander __object__ Joseph Stalin']
Text: A commander at the Polish-Soviet War was Joseph Stalin.
Subject: Polish–Soviet War
Predicate: commander
Object: Joseph Stalin

Triple: ['__subject__ Polish–Soviet War __predicate__ commander __object__ Leon Trotsky']
Text: Leon Trotsky was a commander in the Polish-Soviet war.
Subject: Polish–Soviet War
Predicate: commander
Object: Leon Trotsky

Triple: ['__subject__ Polish–Soviet War __predicate__ commander __object__ Leon Trotsky']
Text: Leon Trotsky was the commender in the Polish-Soviet War.
Subject: Polish–Soviet War
Predicate: commander
Object: Leon Trotsky

Triple: ['__subject__ Polish–Soviet War __predicate__ isPartOfMilitaryConflict __object__ Russian Civil War']
Text: The Polish-Soviet war was a conflict within the Russian Civil War.
Subject: Polish–Soviet War
Predicate: isPartOfMilitaryConflict
Object: Russian Civil War

Triple: ['__subject__ Polish–Soviet War __predicate__ isPartOfMilitaryConflict __object__ Russian Civil War']
Text: The Polish-Soviet War was part of the Russian Civil War military conflict.
Subject: Polish–Soviet War
Predicate: isPartOfMilitaryConflict
Object: Russian Civil War

Triple: ['__subject__ Royal Artillery __predicate__ garrison __object__ Hohne']
Text: One of the Royal Artillery's garrisons was in Hohne.
Subject: Royal Artillery
Predicate: garrison
Object: Hohne

Triple: ['__subject__ Royal Artillery __predicate__ garrison __object__ Hohne']
Text: The Royal Artillery has a garrison at Hohne.
Subject: Royal Artillery
Predicate: garrison
Object: Hohne

Triple: ['__subject__ Royal Artillery __predicate__ garrison __object__ Hohne']
Text: The Royal Artillery has a garrison in Hohne.
Subject: Royal Artillery
Predicate: garrison
Object: Hohne

Triple: ['__subject__ Siege of Petersburg __predicate__ isPartOfMilitaryConflict __object__ American Civil War']
Text: Siege of Petersburg was part of the American Civil War conflict.
Subject: Siege of Petersburg
Predicate: isPartOfMilitaryConflict
Object: American Civil War

Triple: ['__subject__ Siege of Petersburg __predicate__ isPartOfMilitaryConflict __object__ American Civil War']
Text: The Siege of Petersburg occurred during the American Civil War.
Subject: Siege of Petersburg
Predicate: isPartOfMilitaryConflict
Object: American Civil War

Triple: ['__subject__ Socialist Party (Netherlands) __predicate__ colour __object__ Red']
Text: Red is the colour of the Socialist Party (Netherlands).
Subject: Socialist Party (Netherlands)
Predicate: colour
Object: Red

Triple: ['__subject__ Socialist Party (Netherlands) __predicate__ colour __object__ Red']
Text: The Socialist Party of The Netherlands is associated with the colour red.
Subject: Socialist Party (Netherlands)
Predicate: colour
Object: Red

Triple: ['__subject__ Socialist Party (Netherlands) __predicate__ leader __object__ Emile Roemer']
Text: Emile Roemer is a leader in the Netherlands Socialist Party.
Subject: Socialist Party (Netherlands)
Predicate: leader
Object: Emile Roemer

Triple: ['__subject__ Socialist Party (Netherlands) __predicate__ leader __object__ Emile Roemer']
Text: The leader of the Socialist Party in the Netherlands is Emile Roemer.
Subject: Socialist Party (Netherlands)
Predicate: leader
Object: Emile Roemer

Triple: ['__subject__ Socialist Party (Netherlands) __predicate__ leader __object__ Emile Roemer']
Text: The leader of the Socialist Party of the Netherlands is called Emile Roemer.
Subject: Socialist Party (Netherlands)
Predicate: leader
Object: Emile Roemer

Triple: ['__subject__ Spain __predicate__ currency __object__ Euro']
Text: The euro is the currency in Spain.
Subject: Spain
Predicate: currency
Object: Euro

Triple: ['__subject__ Spain __predicate__ currency __object__ Euro']
Text: The currency in Spain is the Euro.
Subject: Spain
Predicate: currency
Object: Euro

Triple: ['__subject__ Spain __predicate__ currency __object__ Euro']
Text: The currency of Spain is the Euro.
Subject: Spain
Predicate: currency
Object: Euro

Triple: ['__subject__ Spain __predicate__ language __object__ Spanish language']
Text: The main language used in Spain is Spanish.
Subject: Spain
Predicate: language
Object: Spanish language

Triple: ['__subject__ Spain __predicate__ language __object__ Spanish language']
Text: The Spanish language is spoken in Spain.
Subject: Spain
Predicate: language
Object: Spanish language

Triple: ['__subject__ Spain __predicate__ language __object__ Spanish language']
Text: Spanish is the language in Spain.
Subject: Spain
Predicate: language
Object: Spanish language

Triple: ['__subject__ Spain __predicate__ leader __object__ Felipe VI of Spain']
Text: The leader in Spain is Felipe VI of Spain.
Subject: Spain
Predicate: leader
Object: Felipe VI of Spain

Triple: ['__subject__ Spain __predicate__ leader __object__ Felipe VI of Spain']
Text: The leader of Spain is Felipe VI of Spain.
Subject: Spain
Predicate: leader
Object: Felipe VI of Spain

Triple: ['__subject__ Spain __predicate__ leader __object__ Felipe VI of Spain']
Text: The leader of Spain is Felipe VI.
Subject: Spain
Predicate: leader
Object: Felipe VI of Spain

Triple: ['__subject__ Sycamore, Illinois __predicate__ region __object__ DeKalb County, Illinois']
Text: Sycamore is located in DeKalb County, Illinois.
Subject: Sycamore, Illinois
Predicate: region
Object: DeKalb County, Illinois

Triple: ['__subject__ Sycamore, Illinois __predicate__ region __object__ DeKalb County, Illinois']
Text: Sycamore is in DeKalb County, Illinois.
Subject: Sycamore, Illinois
Predicate: region
Object: DeKalb County, Illinois

Triple: ['__subject__ Sycamore, Illinois __predicate__ region __object__ DeKalb County, Illinois']
Text: Sycamore is in the Dekalb County of Illinois region.
Subject: Sycamore, Illinois
Predicate: region
Object: DeKalb County, Illinois

Triple: ['__subject__ United Kingdom __predicate__ capital __object__ London']
Text: London is the capital of the U.K.
Subject: United Kingdom
Predicate: capital
Object: London

Triple: ['__subject__ United Kingdom __predicate__ capital __object__ London']
Text: London is the capital of The United Kingdom.
Subject: United Kingdom
Predicate: capital
Object: London

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: African Americans are an ethnic group in the U.S.A.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: African Americans are an ethnic group from the United States.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: African Americans are an ethnic group of the United States.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']
Text: In the United States one of the ethnic groups is the Native Americans.
Subject: United States
Predicate: ethnicGroup
Object: Native Americans in the United States

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']
Text: Native Americans are an ethnic group in the U.S.
Subject: United States
Predicate: ethnicGroup
Object: Native Americans in the United States

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']
Text: Native Americans are the ethnic group in the United States.
Subject: United States
Predicate: ethnicGroup
Object: Native Americans in the United States

Triple: ['__subject__ United States Army __predicate__ battle __object__ American Civil War']
Text: The U.S. Army fought in the American Civil War.
Subject: United States Army
Predicate: battle
Object: American Civil War

Triple: ['__subject__ United States Army __predicate__ battle __object__ American Civil War']
Text: The United States Army battled in the American Civil War.
Subject: United States Army
Predicate: battle
Object: American Civil War

Triple: ['__subject__ United States Army __predicate__ battle __object__ American Revolutionary War']
Text: The United States Army was involved in battles of the American Revolutionary War.
Subject: United States Army
Predicate: battle
Object: American Revolutionary War

Triple: ['__subject__ United States Army __predicate__ battle __object__ American Revolutionary War']
Text: The U.S. Army battled in the American Revolutionary War.
Subject: United States Army
Predicate: battle
Object: American Revolutionary War

Triple: ['__subject__ United States Army __predicate__ battle __object__ American Revolutionary War']
Text: The United States Army battled in the American Revolutionary War.
Subject: United States Army
Predicate: battle
Object: American Revolutionary War

Triple: ['__subject__ United States Army __predicate__ battle __object__ Invasion of Grenada']
Text: The United States Army has battled in the Invasion of Grenada.
Subject: United States Army
Predicate: battle
Object: Invasion of Grenada

Triple: ['__subject__ United States Army __predicate__ battle __object__ Korean War']
Text: The United States Army took part in battles in the Korean War.
Subject: United States Army
Predicate: battle
Object: Korean War

Triple: ['__subject__ United States Army __predicate__ battle __object__ Korean War']
Text: The United States Army fought in the Korean War.
Subject: United States Army
Predicate: battle
Object: Korean War

Triple: ['__subject__ United States Army __predicate__ battle __object__ Korean War']
Text: United States Army fought in the Korean War.
Subject: United States Army
Predicate: battle
Object: Korean War

Triple: ['__subject__ United States Army __predicate__ battle __object__ Operation Enduring Freedom']
Text: Operation Enduring Freedom is a battle of the United States Army.
Subject: United States Army
Predicate: battle
Object: Operation Enduring Freedom

Triple: ['__subject__ United States Army __predicate__ battle __object__ Operation Enduring Freedom']
Text: The United States Army was involved in Operation Enduring Freedom.
Subject: United States Army
Predicate: battle
Object: Operation Enduring Freedom

Triple: ['__subject__ United States Army __predicate__ battle __object__ Operation Enduring Freedom']
Text: The United States Army was involved in the Operation Enduring Freedom battle.
Subject: United States Army
Predicate: battle
Object: Operation Enduring Freedom

Triple: ['__subject__ United States Army __predicate__ battle __object__ Whiskey Rebellion']
Text: The United States Army took part in the battle called Whiskey Rebellion.
Subject: United States Army
Predicate: battle
Object: Whiskey Rebellion

Triple: ['__subject__ United States Army __predicate__ battle __object__ Whiskey Rebellion']
Text: Whiskey Rebellion was one battle fought in the US.
Subject: United States Army
Predicate: battle
Object: Whiskey Rebellion

Triple: ['__subject__ United States Army __predicate__ battle __object__ Whiskey Rebellion']
Text: The United States Army fought in the Whiskey Rebellion battle.
Subject: United States Army
Predicate: battle
Object: Whiskey Rebellion

Triple: ['__subject__ Vermont __predicate__ largestCity __object__ Burlington, Vermont']
Text: Vermont's largest city is Burlington, Vermont.
Subject: Vermont
Predicate: largestCity
Object: Burlington, Vermont

Triple: ['__subject__ Vermont __predicate__ largestCity __object__ Burlington, Vermont']
Text: The largest city in Vermont is Burlington.
Subject: Vermont
Predicate: largestCity
Object: Burlington, Vermont

Triple: ['__subject__ Whig Party (United States) __predicate__ leader __object__ Daniel Webster']
Text: Daniel Webster was a leader of the Whig Party in the United States.
Subject: Whig Party (United States)
Predicate: leader
Object: Daniel Webster

Triple: ['__subject__ Whig Party (United States) __predicate__ leader __object__ Daniel Webster']
Text: The United States Whig Party is led by Daniel Webster.
Subject: Whig Party (United States)
Predicate: leader
Object: Daniel Webster

Triple: ['__subject__ Whig Party (United States) __predicate__ leader __object__ Daniel Webster']
Text: Daniel Webster is the leader of the Whig Party in the United States.
Subject: Whig Party (United States)
Predicate: leader
Object: Daniel Webster

Triple: ['__subject__ Whig Party (United States) __predicate__ leader __object__ Henry Clay']
Text: The leader of the Whig Party in the U.S.A. is Henry Clay.
Subject: Whig Party (United States)
Predicate: leader
Object: Henry Clay

Triple: ['__subject__ Whig Party (United States) __predicate__ leader __object__ Henry Clay']
Text: Henry Clay was leader of the Whig Party of the United States.
Subject: Whig Party (United States)
Predicate: leader
Object: Henry Clay

Triple: ['__subject__ William M. O. Dawson __predicate__ deathPlace __object__ Charleston, West Virginia']
Text: William M. O. Dawson died in Charleston, West Virginia.
Subject: William M. O. Dawson
Predicate: deathPlace
Object: Charleston, West Virginia

Triple: ['__subject__ William M. O. Dawson __predicate__ deathPlace __object__ Charleston, West Virginia']
Text: William M O Dawson died in Charleston, West Virginia.
Subject: William M. O. Dawson
Predicate: deathPlace
Object: Charleston, West Virginia

Triple: ['__subject__ William M. O. Dawson __predicate__ party __object__ Republican Party (United States)']
Text: William M. O. Dawson is a member of the United States Republican party.
Subject: William M. O. Dawson
Predicate: party
Object: Republican Party (United States)

Triple: ['__subject__ William M. O. Dawson __predicate__ party __object__ Republican Party (United States)']
Text: William M O Dawson was a member of the United States Republican Party.
Subject: William M. O. Dawson
Predicate: party
Object: Republican Party (United States)

Triple: ['__subject__ William M. O. Dawson __predicate__ party __object__ Republican Party (United States)']
Text: William M. O. Dawson is a member of the Republican Party of the United States.
Subject: William M. O. Dawson
Predicate: party
Object: Republican Party (United States)

Triple: ['__subject__ World War II __predicate__ commander __object__ Benito Mussolini']
Text: Benito Mussolini was a commander in World War II.
Subject: World War II
Predicate: commander
Object: Benito Mussolini

Triple: ['__subject__ World War II __predicate__ commander __object__ Benito Mussolini']
Text: A commander in World War II was Benito Mussolini.
Subject: World War II
Predicate: commander
Object: Benito Mussolini

Triple: ['__subject__ World War II __predicate__ commander __object__ Chiang Kai-shek']
Text: Chiang Kai-shek was a commander in the Second World War.
Subject: World War II
Predicate: commander
Object: Chiang Kai-shek

Triple: ['__subject__ World War II __predicate__ commander __object__ Chiang Kai-shek']
Text: Chiang Kai-shek was a commander in World War II.
Subject: World War II
Predicate: commander
Object: Chiang Kai-shek

Triple: ['__subject__ World War II __predicate__ commander __object__ Chiang Kai-shek']
Text: A commander in World War II was Chiang Kai-shek.
Subject: World War II
Predicate: commander
Object: Chiang Kai-shek

Triple: ['__subject__ World War II __predicate__ commander __object__ Franklin D. Roosevelt']
Text: Franklin D. Roosevelt was the commander in World War II.
Subject: World War II
Predicate: commander
Object: Franklin D. Roosevelt

Triple: ['__subject__ World War II __predicate__ commander __object__ Franklin D. Roosevelt']
Text: Franklin D. Roosevelt was a commander during WWII.
Subject: World War II
Predicate: commander
Object: Franklin D. Roosevelt

Triple: ['__subject__ World War II __predicate__ commander __object__ Franklin D. Roosevelt']
Text: A commander in World War II was Franklin D. Roosevelt.
Subject: World War II
Predicate: commander
Object: Franklin D. Roosevelt

Triple: ['__subject__ World War II __predicate__ commander __object__ Joseph Stalin']
Text: Joseph Stalin was a commander in World War II.
Subject: World War II
Predicate: commander
Object: Joseph Stalin

Triple: ['__subject__ World War II __predicate__ commander __object__ Joseph Stalin']
Text: A commander in World War II was Joseph Stalin.
Subject: World War II
Predicate: commander
Object: Joseph Stalin

Triple: ['__subject__ World War II __predicate__ place __object__ East African Campaign (World War II)']
Text: The East African Campaign was part of World War II.
Subject: World War II
Predicate: place
Object: East African Campaign (World War II)

Triple: ['__subject__ World War II __predicate__ place __object__ South-East Asian theatre of World War II']
Text: One of the places in World War II was named South East Asian theatre of World War II.
Subject: World War II
Predicate: place
Object: South-East Asian theatre of World War II

Triple: ['__subject__ World War II __predicate__ place __object__ South-East Asian theatre of World War II']
Text: South East Asia was a location for World War II.
Subject: World War II
Predicate: place
Object: South-East Asian theatre of World War II

Triple: ['__subject__ 1. FC Köln __predicate__ numberOfMembers __object__ 50000']
Text: 1. FC Köln has 50000 members.
Subject: 1. FC Köln
Predicate: numberOfMembers
Object: 50000

Triple: ['__subject__ 1. FC Köln __predicate__ numberOfMembers __object__ 50000']
Text: F.C. Koln have 50000 members.
Subject: 1. FC Köln
Predicate: numberOfMembers
Object: 50000

Triple: ['__subject__ 1. FC Köln __predicate__ season __object__ 2014']
Text: 1 FC Köln played in the 2014 season.
Subject: 1. FC Köln
Predicate: season
Object: 2014

Triple: ['__subject__ 1. FC Köln __predicate__ season __object__ 2014']
Text: 2014 saw 1. FC Koln participating.
Subject: 1. FC Köln
Predicate: season
Object: 2014

Triple: ['__subject__ 1. FC Köln __predicate__ season __object__ 2014–15 Bundesliga']
Text: 1. FC Köln were in the 2014–15 Bundesliga season.
Subject: 1. FC Köln
Predicate: season
Object: 2014–15 Bundesliga

Triple: ['__subject__ 1. FC Köln __predicate__ season __object__ 2014–15 Bundesliga']
Text: FC Köln played the 2014-15 season in the Bundesliga.
Subject: 1. FC Köln
Predicate: season
Object: 2014–15 Bundesliga

Triple: ['__subject__ 1. FC Magdeburg __predicate__ league __object__ 3. Liga']
Text: 1 FC Magdeburg is in the 3 Liga league.
Subject: 1. FC Magdeburg
Predicate: league
Object: 3. Liga

Triple: ['__subject__ 1. FC Magdeburg __predicate__ manager __object__ Jens Härtel']
Text: The manager of FC Magdeburg is Jens Härtel.
Subject: 1. FC Magdeburg
Predicate: manager
Object: Jens Härtel

Triple: ['__subject__ 1. FC Magdeburg __predicate__ manager __object__ Jens Härtel']
Text: Jens Härtel has been the manager of 1 FC Magdeburg.
Subject: 1. FC Magdeburg
Predicate: manager
Object: Jens Härtel

Triple: ['__subject__ 1. FC Magdeburg __predicate__ numberOfMembers __object__ 27250']
Text: 1.FC Magdeburg has 27250 members.
Subject: 1. FC Magdeburg
Predicate: numberOfMembers
Object: 27250

Triple: ['__subject__ 1. FC Magdeburg __predicate__ season __object__ 2014–15 Regionalliga']
Text: FC Magdeburg played in the Regionalliga in 2014-15 season.
Subject: 1. FC Magdeburg
Predicate: season
Object: 2014–15 Regionalliga

Triple: ['__subject__ 1. FC Magdeburg __predicate__ season __object__ 2014–15 Regionalliga']
Text: In 2014-15 season, 1 FC Magdeburg played in the Regionalliga.
Subject: 1. FC Magdeburg
Predicate: season
Object: 2014–15 Regionalliga

Triple: ['__subject__ 1. FC Magdeburg __predicate__ season __object__ 2014–15 Regionalliga']
Text: FC Magedburg was in Regionalliga in 2014-2015.
Subject: 1. FC Magdeburg
Predicate: season
Object: 2014–15 Regionalliga

Triple: ['__subject__ A.C. Cesena __predicate__ ground __object__ Cesena']
Text: A.C. Cesena ground is in Cesena.
Subject: A.C. Cesena
Predicate: ground
Object: Cesena

Triple: ['__subject__ A.C. Cesena __predicate__ ground __object__ Italy']
Text: A.C. Cesena's ground is located in Italy.
Subject: A.C. Cesena
Predicate: ground
Object: Italy

Triple: ['__subject__ A.C. Cesena __predicate__ ground __object__ Stadio Dino Manuzzi']
Text: A.C. Cesena's ground is Stadio Dino Manuzzi.
Subject: A.C. Cesena
Predicate: ground
Object: Stadio Dino Manuzzi

Triple: ['__subject__ A.C. Cesena __predicate__ ground __object__ Stadio Dino Manuzzi']
Text: A.C. Cesena's ground is the Stadio Dino Manuzzi.
Subject: A.C. Cesena
Predicate: ground
Object: Stadio Dino Manuzzi

Triple: ['__subject__ A.C. Cesena __predicate__ league __object__ Serie B']
Text: AC Cesena are in the Serie B league.
Subject: A.C. Cesena
Predicate: league
Object: Serie B

Triple: ['__subject__ A.C. Cesena __predicate__ league __object__ Serie B']
Text: A.C. Cesena is in the Serie B league.
Subject: A.C. Cesena
Predicate: league
Object: Serie B

Triple: ['__subject__ A.C. Cesena __predicate__ league __object__ Serie B']
Text: A.C. Cesena play in Serie B.
Subject: A.C. Cesena
Predicate: league
Object: Serie B

Triple: ['__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago']
Text: Massimo Drago has been the manager of A C Cesena.
Subject: A.C. Cesena
Predicate: manager
Object: Massimo Drago

Triple: ['__subject__ A.C. Cesena __predicate__ manager __object__ Massimo Drago']
Text: Massimo Drago manages A.C. Cesena.
Subject: A.C. Cesena
Predicate: manager
Object: Massimo Drago

Triple: ['__subject__ A.C. Cesena __predicate__ numberOfMembers __object__ 23900']
Text: A.C. Cesena has 23900 members.
Subject: A.C. Cesena
Predicate: numberOfMembers
Object: 23900

Triple: ['__subject__ A.C. Chievo Verona __predicate__ fullName __object__ Associazione Calcio ChievoVerona S.r.l.']
Text: The full name of AC Chievo Verona is "Associazione Calcio ChievoVerona S.r.l."
Subject: A.C. Chievo Verona
Predicate: fullName
Object: Associazione Calcio ChievoVerona S.r.l.

Triple: ['__subject__ A.C. Chievo Verona __predicate__ fullName __object__ Associazione Calcio ChievoVerona S.r.l.']
Text: The full name of A.C. Chievo Verona is Associazione Calcio ChievoVerona S.r.l.
Subject: A.C. Chievo Verona
Predicate: fullName
Object: Associazione Calcio ChievoVerona S.r.l.

Triple: ['__subject__ A.C. Chievo Verona __predicate__ ground __object__ Verona, Italy']
Text: Verona, Italy is the home to A.C. Chievo Verona.
Subject: A.C. Chievo Verona
Predicate: ground
Object: Verona, Italy

Triple: ["__subject__ A.C. Chievo Verona __predicate__ ground __object__ Stadio Marc'Antonio Bentegodi"]
Text: The home ground of A.C. Chievo Verona is Stadio Marc'Antonio Bentegodi.
Subject: A.C. Chievo Verona
Predicate: ground
Object: Stadio Marc'Antonio Bentegodi

Triple: ["__subject__ A.C. Chievo Verona __predicate__ ground __object__ Stadio Marc'Antonio Bentegodi"]
Text: AC Chievo Verona's home ground is Stadio Marc'Antonio Bentegodi.
Subject: A.C. Chievo Verona
Predicate: ground
Object: Stadio Marc'Antonio Bentegodi

Triple: ['__subject__ A.C. Chievo Verona __predicate__ ground __object__ Verona']
Text: A.C. Chievo Verona is playing in his ground at Verona.
Subject: A.C. Chievo Verona
Predicate: ground
Object: Verona

Triple: ['__subject__ A.C. Chievo Verona __predicate__ ground __object__ Verona']
Text: A.C. Chievo Verona play in Verona.
Subject: A.C. Chievo Verona
Predicate: ground
Object: Verona

Triple: ['__subject__ A.C. Chievo Verona __predicate__ league __object__ Serie A']
Text: AC Chievo Verona play in the Serie A league.
Subject: A.C. Chievo Verona
Predicate: league
Object: Serie A

Triple: ['__subject__ A.C. Chievo Verona __predicate__ league __object__ Serie A']
Text: A.C. Chievo Verona is in the league, Serie A.
Subject: A.C. Chievo Verona
Predicate: league
Object: Serie A

Triple: ['__subject__ A.C. Chievo Verona __predicate__ league __object__ Serie A']
Text: A.C. Chievo Verona play in Serie A.
Subject: A.C. Chievo Verona
Predicate: league
Object: Serie A

Triple: ['__subject__ A.C. Chievo Verona __predicate__ numberOfMembers __object__ 39371']
Text: A.C. Chievo Verona has 39371 members.
Subject: A.C. Chievo Verona
Predicate: numberOfMembers
Object: 39371

Triple: ['__subject__ A.C. Chievo Verona __predicate__ season __object__ 2014']
Text: AC Chievo Verona competed in the 2014 season.
Subject: A.C. Chievo Verona
Predicate: season
Object: 2014

Triple: ['__subject__ A.C. Chievo Verona __predicate__ season __object__ 2014']
Text: A.C. Chievo Verona played in the 2014 season.
Subject: A.C. Chievo Verona
Predicate: season
Object: 2014

Triple: ['__subject__ A.C. Chievo Verona __predicate__ season __object__ 2014–15 Serie A']
Text: A.C. Chievo Verona played the 2014-15 season in Serie A.
Subject: A.C. Chievo Verona
Predicate: season
Object: 2014–15 Serie A

Triple: ['__subject__ A.C. Chievo Verona __predicate__ season __object__ 2014–15 Serie A']
Text: A.C. Chievo Verona were in the 2014–15 Serie A season.
Subject: A.C. Chievo Verona
Predicate: season
Object: 2014–15 Serie A

Triple: ['__subject__ A.C. Chievo Verona __predicate__ season __object__ 2014–15 Serie A']
Text: A.C. Chievo Verona were in Serie A in 2014-15.
Subject: A.C. Chievo Verona
Predicate: season
Object: 2014–15 Serie A

Triple: ['__subject__ A.C. Lumezzane __predicate__ fullName __object__ Associazione Calcio Lumezzane SpA']
Text: The "Associazione Calcio Lumezzane SpA" is the full name of A.C. Lumezzane.
Subject: A.C. Lumezzane
Predicate: fullName
Object: Associazione Calcio Lumezzane SpA

Triple: ['__subject__ A.C. Lumezzane __predicate__ fullName __object__ Associazione Calcio Lumezzane SpA']
Text: Associazione Calcio Lumezzane SpA is abbreviated to A.C. Lumezzane.
Subject: A.C. Lumezzane
Predicate: fullName
Object: Associazione Calcio Lumezzane SpA

Triple: ['__subject__ A.C. Lumezzane __predicate__ fullName __object__ Associazione Calcio Lumezzane SpA']
Text: The full name of A.C. Lumezzane is Associazione Calcio Lumezzane SpA.
Subject: A.C. Lumezzane
Predicate: fullName
Object: Associazione Calcio Lumezzane SpA

Triple: ['__subject__ A.C. Lumezzane __predicate__ ground __object__ Italy']
Text: A.C. Lumezzane play in italy.
Subject: A.C. Lumezzane
Predicate: ground
Object: Italy

Triple: ['__subject__ A.C. Lumezzane __predicate__ ground __object__ Italy']
Text: A.C. Lumezzane's ground is in Italy.
Subject: A.C. Lumezzane
Predicate: ground
Object: Italy

Triple: ['__subject__ A.C. Lumezzane __predicate__ league __object__ Lega Pro/A']
Text: A.C. Lumezzane is in the Lega Pro/A league.
Subject: A.C. Lumezzane
Predicate: league
Object: Lega Pro/A

Triple: ['__subject__ A.C. Lumezzane __predicate__ league __object__ Lega Pro/A']
Text: A.C Lumezzane play in the Lega Pro/A.
Subject: A.C. Lumezzane
Predicate: league
Object: Lega Pro/A

Triple: ['__subject__ A.C. Lumezzane __predicate__ league __object__ Lega Pro/A']
Text: A.C. Lumezzane play in Lega Pro/A.
Subject: A.C. Lumezzane
Predicate: league
Object: Lega Pro/A

Triple: ['__subject__ A.C. Lumezzane __predicate__ league __object__ Lega Pro']
Text: AC Lumezzane play in the Lega Pro league.
Subject: A.C. Lumezzane
Predicate: league
Object: Lega Pro

Triple: ['__subject__ A.C. Lumezzane __predicate__ league __object__ Lega Pro']
Text: A.C. Lumezzane play in the Lega Pro.
Subject: A.C. Lumezzane
Predicate: league
Object: Lega Pro

Triple: ['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini']
Text: Michele Marcolini has been manager of AC Lumezzane.
Subject: A.C. Lumezzane
Predicate: manager
Object: Michele Marcolini

Triple: ['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini']
Text: Michele Marcolini manages the A.C. Lumezzane.
Subject: A.C. Lumezzane
Predicate: manager
Object: Michele Marcolini

Triple: ['__subject__ A.C. Lumezzane __predicate__ manager __object__ Michele Marcolini']
Text: The manager of A.C. Lumezzane is Michele Marcolini.
Subject: A.C. Lumezzane
Predicate: manager
Object: Michele Marcolini

Triple: ['__subject__ A.C. Lumezzane __predicate__ numberOfMembers __object__ 4150']
Text: AC Lumezzane has 4150 members.
Subject: A.C. Lumezzane
Predicate: numberOfMembers
Object: 4150

Triple: ['__subject__ A.C. Lumezzane __predicate__ numberOfMembers __object__ 4150']
Text: The A.C. Lumezzane has 4150 members.
Subject: A.C. Lumezzane
Predicate: numberOfMembers
Object: 4150

Triple: ['__subject__ A.C. Lumezzane __predicate__ season __object__ 2014']
Text: AC Lumezzane played in the 2014 season.
Subject: A.C. Lumezzane
Predicate: season
Object: 2014

Triple: ['__subject__ A.C. Lumezzane __predicate__ season __object__ 2014']
Text: I am interested in the 2014 A.C. Lumezzane season.
Subject: A.C. Lumezzane
Predicate: season
Object: 2014

Triple: ['__subject__ A.D. Isidro Metapán __predicate__ fullName __object__ Isidro Metapán']
Text: The full name of A.D. Isidro Metapan is Isidro Metapan.
Subject: A.D. Isidro Metapán
Predicate: fullName
Object: Isidro Metapán

Triple: ['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Metapán, El Salvador']
Text: The ground of AD Isidro Metapán is located in Metapán, El Salvador.
Subject: A.D. Isidro Metapán
Predicate: ground
Object: Metapán, El Salvador

Triple: ['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Metapán, El Salvador']
Text: A.D. Isidro Metapan's ground is in Metapan, El Salvador.
Subject: A.D. Isidro Metapán
Predicate: ground
Object: Metapán, El Salvador

Triple: ['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Estadio Jorge Calero Suárez']
Text: A.D. Isidro Metapán are at Estadio Jorge Calero Suárez.
Subject: A.D. Isidro Metapán
Predicate: ground
Object: Estadio Jorge Calero Suárez

Triple: ['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Estadio Jorge Calero Suárez']
Text: A.D. Isidro Metapan play at the Estadio Jorge Calero Suarez.
Subject: A.D. Isidro Metapán
Predicate: ground
Object: Estadio Jorge Calero Suárez

Triple: ['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Metapán']
Text: A.D. Isidro Metapán's ground is in Metapán.
Subject: A.D. Isidro Metapán
Predicate: ground
Object: Metapán

Triple: ['__subject__ A.D. Isidro Metapán __predicate__ ground __object__ Metapán']
Text: A.D. Isidro Metapán is playing in its ground at Metapán.
Subject: A.D. Isidro Metapán
Predicate: ground
Object: Metapán

Triple: ['__subject__ A.D. Isidro Metapán __predicate__ manager __object__ Jorge Humberto Rodríguez']
Text: Jorge Humberto Rodriguez has been manager of A D Isidro Metapán.
Subject: A.D. Isidro Metapán
Predicate: manager
Object: Jorge Humberto Rodríguez

Triple: ['__subject__ A.D. Isidro Metapán __predicate__ manager __object__ Jorge Humberto Rodríguez']
Text: Jorge Humberto Rodríguez manages the A.D. Isidro Metapan.
Subject: A.D. Isidro Metapán
Predicate: manager
Object: Jorge Humberto Rodríguez

Triple: ['__subject__ A.D. Isidro Metapán __predicate__ manager __object__ Jorge Humberto Rodríguez']
Text: A.D. Isidro Metapan's manager is Jorge Humberto Rodriguez.
Subject: A.D. Isidro Metapán
Predicate: manager
Object: Jorge Humberto Rodríguez

Triple: ['__subject__ A.D. Isidro Metapán __predicate__ numberOfMembers __object__ 10000']
Text: AD Isidro Metapan has 10000 members.
Subject: A.D. Isidro Metapán
Predicate: numberOfMembers
Object: 10000

Triple: ['__subject__ A.D. Isidro Metapán __predicate__ numberOfMembers __object__ 10000']
Text: A.D. Isidro Metapán has 10000 members.
Subject: A.D. Isidro Metapán
Predicate: numberOfMembers
Object: 10000

Triple: ['__subject__ A.D. Isidro Metapán __predicate__ numberOfMembers __object__ 10000']
Text: The number of members of Isidro Metapán is 10000.
Subject: A.D. Isidro Metapán
Predicate: numberOfMembers
Object: 10000

Triple: ['__subject__ A.E Dimitra Efxeinoupolis __predicate__ chairman __object__ Antonis Milionis']
Text: Antonis Milionis is chairman of A.E Dimitra Efxeinoupolis.
Subject: A.E Dimitra Efxeinoupolis
Predicate: chairman
Object: Antonis Milionis

Triple: ['__subject__ A.E Dimitra Efxeinoupolis __predicate__ chairman __object__ Antonis Milionis']
Text: Antonis Milionis is the chairman of A.E Dimitra Efxeinoupolis.
Subject: A.E Dimitra Efxeinoupolis
Predicate: chairman
Object: Antonis Milionis

Triple: ['__subject__ A.E Dimitra Efxeinoupolis __predicate__ chairman __object__ Antonis Milionis']
Text: The chairman of A.E Dimitra Efxeinoupolis is Antonis Milionis.
Subject: A.E Dimitra Efxeinoupolis
Predicate: chairman
Object: Antonis Milionis

Triple: ['__subject__ A.E Dimitra Efxeinoupolis __predicate__ ground __object__ Efxeinoupoli']
Text: The ground of A.E Dimitra Efxeinoupolis is located in the town of Efxeinoupoli.
Subject: A.E Dimitra Efxeinoupolis
Predicate: ground
Object: Efxeinoupoli

Triple: ['__subject__ A.E Dimitra Efxeinoupolis __predicate__ league __object__ A EPSTH 2nd GROUP']
Text: A.E Dimitra Efxeinoupolis is in the league, EPSTH 2nd GROUP.
Subject: A.E Dimitra Efxeinoupolis
Predicate: league
Object: A EPSTH 2nd GROUP

Triple: ['__subject__ A.E Dimitra Efxeinoupolis __predicate__ league __object__ A EPSTH 2nd GROUP']
Text: A.E Dimitra Efxeinoupolis play in the A EPSTH 2nd GROUP.
Subject: A.E Dimitra Efxeinoupolis
Predicate: league
Object: A EPSTH 2nd GROUP

Triple: ['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece']
Text: The A.E Dimitra Efxeinoupolis club is located in Greece.
Subject: A.E Dimitra Efxeinoupolis
Predicate: location
Object: Greece

Triple: ['__subject__ A.E Dimitra Efxeinoupolis __predicate__ location __object__ Greece']
Text: A.E Dimitra Efxeinoupolis is located in Greece.
Subject: A.E Dimitra Efxeinoupolis
Predicate: location
Object: Greece

Triple: ['__subject__ A.E Dimitra Efxeinoupolis __predicate__ numberOfMembers __object__ 1500']
Text: AE Dimitra Efxeinoupolis has 1500 members.
Subject: A.E Dimitra Efxeinoupolis
Predicate: numberOfMembers
Object: 1500

Triple: ['__subject__ A.E Dimitra Efxeinoupolis __predicate__ numberOfMembers __object__ 1500']
Text: A.E. Dimitra Efxeinoupolis has 1500 members.
Subject: A.E Dimitra Efxeinoupolis
Predicate: numberOfMembers
Object: 1500

Triple: ['__subject__ A.F.C. Blackpool __predicate__ ground __object__ Jepson Way,']
Text: Jepson Way is the grounds for A.F.C. Blackpool.
Subject: A.F.C. Blackpool
Predicate: ground
Object: Jepson Way,

Triple: ['__subject__ A.F.C. Blackpool __predicate__ league __object__ English football league system']
Text: A.F.C Blackpool play in the English Football League system.
Subject: A.F.C. Blackpool
Predicate: league
Object: English football league system

Triple: ['__subject__ A.F.C. Blackpool __predicate__ league __object__ English football league system']
Text: A.F.C. Blackpool play in the English Football League.
Subject: A.F.C. Blackpool
Predicate: league
Object: English football league system

Triple: ['__subject__ A.F.C. Blackpool __predicate__ league __object__ North West Counties Football League']
Text: AFC Blackpool play in the North West Counties Football League.
Subject: A.F.C. Blackpool
Predicate: league
Object: North West Counties Football League

Triple: ['__subject__ A.F.C. Blackpool __predicate__ league __object__ North West Counties Football League']
Text: A.F.C. Blackpool is part of the North West Counties Football League.
Subject: A.F.C. Blackpool
Predicate: league
Object: North West Counties Football League

Triple: ['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)']
Text: AFC Blackpool have had Stuart Parker as their manager.
Subject: A.F.C. Blackpool
Predicate: manager
Object: Stuart Parker (footballer)

Triple: ['__subject__ A.F.C. Blackpool __predicate__ manager __object__ Stuart Parker (footballer)']
Text: The manager of A.F.C. Blackpool is Stuart Parker (footballer).
Subject: A.F.C. Blackpool
Predicate: manager
Object: Stuart Parker (footballer)

Triple: ['__subject__ A.F.C. Blackpool __predicate__ season __object__ 2014']
Text: AFC Blackpool competed in the 2014 season.
Subject: A.F.C. Blackpool
Predicate: season
Object: 2014

Triple: ['__subject__ A.F.C. Blackpool __predicate__ season __object__ 2014']
Text: A.F.C. Blackpool play in season 2014.
Subject: A.F.C. Blackpool
Predicate: season
Object: 2014

Triple: ['__subject__ A.F.C. Blackpool __predicate__ season __object__ 2014–15 North West Counties Football League']
Text: In the season 2014-2015 Blackpool played in the North West Counties Football League.
Subject: A.F.C. Blackpool
Predicate: season
Object: 2014–15 North West Counties Football League

Triple: ['__subject__ A.F.C. Blackpool __predicate__ season __object__ 2014–15 North West Counties Football League']
Text: AFC Blackpool played in the 2014-15 North West Counties Football League season.
Subject: A.F.C. Blackpool
Predicate: season
Object: 2014–15 North West Counties Football League

Triple: ['__subject__ A.F.C. Fylde __predicate__ fullName __object__ Association Football Club Fylde']
Text: The full name of the A.F.C. Fylde is "Association Football Club Fylde".
Subject: A.F.C. Fylde
Predicate: fullName
Object: Association Football Club Fylde

Triple: ['__subject__ A.F.C. Fylde __predicate__ fullName __object__ Association Football Club Fylde']
Text: AFC Fylde has the full name "Association Football Club Fylde".
Subject: A.F.C. Fylde
Predicate: fullName
Object: Association Football Club Fylde

Triple: ['__subject__ A.F.C. Fylde __predicate__ ground __object__ Bryning Lane']
Text: A.F.C. Fylde are based at Bryning Lane.
Subject: A.F.C. Fylde
Predicate: ground
Object: Bryning Lane

Triple: ['__subject__ A.F.C. Fylde __predicate__ ground __object__ Kellamergh Park']
Text: A.F.C. Fylde's ground is Kellamergh Park.
Subject: A.F.C. Fylde
Predicate: ground
Object: Kellamergh Park

Triple: ['__subject__ A.F.C. Fylde __predicate__ ground __object__ Warton, Fylde, Lancashire']
Text: A.F.C. Fylde are based at Warton, Fylde, Lancashire.
Subject: A.F.C. Fylde
Predicate: ground
Object: Warton, Fylde, Lancashire

Triple: ['__subject__ A.F.C. Fylde __predicate__ ground __object__ Warton, Fylde, Lancashire']
Text: A.F.C. Fylde's ground is in Warton, Fylde, Lancashire.
Subject: A.F.C. Fylde
Predicate: ground
Object: Warton, Fylde, Lancashire

Triple: ['__subject__ A.F.C. Fylde __predicate__ ground __object__ Lancashire']
Text: The ground of AFC Fylde can be found in the county of Lancashire.
Subject: A.F.C. Fylde
Predicate: ground
Object: Lancashire

Triple: ['__subject__ A.F.C. Fylde __predicate__ ground __object__ Lancashire']
Text: A.F.C. Fylde's ground is in Lancashire.
Subject: A.F.C. Fylde
Predicate: ground
Object: Lancashire

Triple: ['__subject__ A.F.C. Fylde __predicate__ ground __object__ Warton, Fylde']
Text: AFC Fylde's ground is located in Warton, Fylde.
Subject: A.F.C. Fylde
Predicate: ground
Object: Warton, Fylde

Triple: ['__subject__ A.F.C. Fylde __predicate__ ground __object__ Warton, Fylde']
Text: A.F.C. Fylde ground is Warton Fylde.
Subject: A.F.C. Fylde
Predicate: ground
Object: Warton, Fylde

Triple: ['__subject__ A.F.C. Fylde __predicate__ league __object__ National League North']
Text: A.F.C. Fylde is a member of the National League North.
Subject: A.F.C. Fylde
Predicate: league
Object: National League North

Triple: ['__subject__ A.F.C. Fylde __predicate__ league __object__ National League North']
Text: Fylde played in the National League North league.
Subject: A.F.C. Fylde
Predicate: league
Object: National League North

Triple: ['__subject__ A.F.C. Fylde __predicate__ league __object__ National League North']
Text: A.F.C. Fylde play in National League North.
Subject: A.F.C. Fylde
Predicate: league
Object: National League North

Triple: ['__subject__ A.F.C. Fylde __predicate__ manager __object__ Dave Challinor']
Text: AFC Fylde's manager is Dave Challinor.
Subject: A.F.C. Fylde
Predicate: manager
Object: Dave Challinor

Triple: ['__subject__ A.F.C. Fylde __predicate__ manager __object__ Dave Challinor']
Text: Dave Challinor is the manager of AFC Fylde.
Subject: A.F.C. Fylde
Predicate: manager
Object: Dave Challinor

Triple: ['__subject__ A.F.C. Fylde __predicate__ manager __object__ Dave Challinor']
Text: Dave Challinor manages A.F.C. Fylde.
Subject: A.F.C. Fylde
Predicate: manager
Object: Dave Challinor

Triple: ['__subject__ A.F.C. Fylde __predicate__ numberOfMembers __object__ 3180']
Text: AFC Fylde has 3180 members.
Subject: A.F.C. Fylde
Predicate: numberOfMembers
Object: 3180

Triple: ['__subject__ A.F.C. Fylde __predicate__ numberOfMembers __object__ 3180']
Text: A.F.C. Fylde has 3180 members.
Subject: A.F.C. Fylde
Predicate: numberOfMembers
Object: 3180

Triple: ['__subject__ A.F.C. Fylde __predicate__ numberOfMembers __object__ 3180']
Text: A.F.C Fylde has 3180 members.
Subject: A.F.C. Fylde
Predicate: numberOfMembers
Object: 3180

Triple: ['__subject__ A.F.C. Fylde __predicate__ season __object__ 2014']
Text: AFC Fylde competed in the 2014 season.
Subject: A.F.C. Fylde
Predicate: season
Object: 2014

Triple: ['__subject__ A.F.C. Fylde __predicate__ season __object__ 2014']
Text: A.F.C. Fylde played in 2014.
Subject: A.F.C. Fylde
Predicate: season
Object: 2014

Triple: ['__subject__ A.F.C. Fylde __predicate__ season __object__ 2014–15 Football Conference']
Text: AFC Fylde played the 2014-15 season in the Football Conference.
Subject: A.F.C. Fylde
Predicate: season
Object: 2014–15 Football Conference

Triple: ['__subject__ A.S. Gubbio 1910 __predicate__ fullName __object__ Associazione Sportiva Gubbio 1910 Srl']
Text: The full name of AS Gubbio 1910 is "Associazione Sportiva Gubbio 1910 Srl".
Subject: A.S. Gubbio 1910
Predicate: fullName
Object: Associazione Sportiva Gubbio 1910 Srl

Triple: ['__subject__ A.S. Gubbio 1910 __predicate__ fullName __object__ Associazione Sportiva Gubbio 1910 Srl']
Text: The full name of A.S. Gubbio 1910 is Associazione Sportiva Gubbio 1910 Srl.
Subject: A.S. Gubbio 1910
Predicate: fullName
Object: Associazione Sportiva Gubbio 1910 Srl

Triple: ['__subject__ A.S. Gubbio 1910 __predicate__ fullName __object__ Associazione Sportiva Gubbio 1910 Srl']
Text: Associazione Sportiva Gubbio 1910 Srl is the full name of A.S. Gubbio 1910.
Subject: A.S. Gubbio 1910
Predicate: fullName
Object: Associazione Sportiva Gubbio 1910 Srl

Triple: ['__subject__ A.S. Gubbio 1910 __predicate__ ground __object__ Stadio Pietro Barbetti']
Text: The ground of AS Gubbio 1910 is called Stadio Pietro Barbetti.
Subject: A.S. Gubbio 1910
Predicate: ground
Object: Stadio Pietro Barbetti

Triple: ['__subject__ A.S. Gubbio 1910 __predicate__ league __object__ Serie D']
Text: The A.S. Gubbio 1910 football club play in Serie D.
Subject: A.S. Gubbio 1910
Predicate: league
Object: Serie D

Triple: ['__subject__ A.S. Gubbio 1910 __predicate__ league __object__ Serie D']
Text: A.S. Gubbio 1910 is in the Serie D league.
Subject: A.S. Gubbio 1910
Predicate: league
Object: Serie D

Triple: ['__subject__ A.S. Gubbio 1910 __predicate__ league __object__ Serie D']
Text: A.S. Gubbio 1910 play in Serie D.
Subject: A.S. Gubbio 1910
Predicate: league
Object: Serie D

Triple: ['__subject__ A.S. Gubbio 1910 __predicate__ season __object__ 2014']
Text: AS Gubbio 1910 competed in the 2014 season.
Subject: A.S. Gubbio 1910
Predicate: season
Object: 2014

Triple: ['__subject__ A.S. Gubbio 1910 __predicate__ season __object__ 2014']
Text: A.S Gubbio 1910 played in the 2014 season.
Subject: A.S. Gubbio 1910
Predicate: season
Object: 2014

Triple: ['__subject__ A.S. Gubbio 1910 __predicate__ season __object__ 2014–15 Lega Pro']
Text: A.S. Gubbio 1910 was a part of the 2014–15 Lega Pro season.
Subject: A.S. Gubbio 1910
Predicate: season
Object: 2014–15 Lega Pro

Triple: ['__subject__ A.S. Gubbio 1910 __predicate__ season __object__ 2014–15 Lega Pro']
Text: A.S. Gubbio 1910 were in the Lega Pro in the 2014-15 season.
Subject: A.S. Gubbio 1910
Predicate: season
Object: 2014–15 Lega Pro

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ fullName __object__ Associazione Sportiva']
Text: Associazione Sportiva Livorno Calcio is the full name of A.S.Livorno Calcio.
Subject: A.S. Livorno Calcio
Predicate: fullName
Object: Associazione Sportiva

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ fullName __object__ Associazione Sportiva']
Text: The full name of A.S. Livorno Calcio is Associazione Sportiva.
Subject: A.S. Livorno Calcio
Predicate: fullName
Object: Associazione Sportiva

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ fullName __object__ Livorno Calcio S.p.A.']
Text: AS Livorno Calcio has the full name of "Livorno Calcio S.p.A".
Subject: A.S. Livorno Calcio
Predicate: fullName
Object: Livorno Calcio S.p.A.

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ fullName __object__ Livorno Calcio S.p.A.']
Text: Livorno Calcio S.p.A. is abbreviated to A.S. Livorno Calcio.
Subject: A.S. Livorno Calcio
Predicate: fullName
Object: Livorno Calcio S.p.A.

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ fullName __object__ Livorno Calcio S.p.A.']
Text: The full name of A.S. Livorno Calcio is Livorno Calcio S.p.A.
Subject: A.S. Livorno Calcio
Predicate: fullName
Object: Livorno Calcio S.p.A.

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Livorno, Italy']
Text: Livorno, Italy is the location of the ground of AS Livorno Calcio.
Subject: A.S. Livorno Calcio
Predicate: ground
Object: Livorno, Italy

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Livorno, Italy']
Text: A.S. Livorno Calcio is based in Livorno, Italy.
Subject: A.S. Livorno Calcio
Predicate: ground
Object: Livorno, Italy

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Livorno, Italy']
Text: A.S. Livorno Calcio's ground is in Livorno, Italy.
Subject: A.S. Livorno Calcio
Predicate: ground
Object: Livorno, Italy

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Livorno']
Text: A.S Livorno Calcio ground is in Livorno.
Subject: A.S. Livorno Calcio
Predicate: ground
Object: Livorno

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Stadio Armando Picchi']
Text: A S Livorno Calcio's home ground is the Stadio Armando Picchi.
Subject: A.S. Livorno Calcio
Predicate: ground
Object: Stadio Armando Picchi

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ ground __object__ Stadio Armando Picchi']
Text: A.S. Livorno Calcio has the ground Stadio Armando Picchi.
Subject: A.S. Livorno Calcio
Predicate: ground
Object: Stadio Armando Picchi

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ league __object__ Serie B']
Text: The league that A.S. Livorno Calcio play in is Serie B.
Subject: A.S. Livorno Calcio
Predicate: league
Object: Serie B

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ league __object__ Serie B']
Text: AS Livorno Calcio play in Serie B.
Subject: A.S. Livorno Calcio
Predicate: league
Object: Serie B

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ league __object__ Serie B']
Text: AS Livorno club plays in Serie B.
Subject: A.S. Livorno Calcio
Predicate: league
Object: Serie B

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ manager __object__ Christian Panucci']
Text: A.S. Livorno Calcio is managed by Christian Panucci.
Subject: A.S. Livorno Calcio
Predicate: manager
Object: Christian Panucci

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ manager __object__ Christian Panucci']
Text: A.S. Livorno Calcio are managed by Christian Panucci.
Subject: A.S. Livorno Calcio
Predicate: manager
Object: Christian Panucci

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ season __object__ 2014']
Text: A.S. Livorno Calcio played in the 2014 season.
Subject: A.S. Livorno Calcio
Predicate: season
Object: 2014

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ season __object__ 2014']
Text: A.S. Livorno Calcio played in season 2014.
Subject: A.S. Livorno Calcio
Predicate: season
Object: 2014

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ season __object__ 2014–15 Serie B']
Text: AS Livorno Calcio played season 2014-15 in Serie B.
Subject: A.S. Livorno Calcio
Predicate: season
Object: 2014–15 Serie B

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ season __object__ 2014–15 Serie B']
Text: A.S. Livorno Calcio were in the 2014–15 Serie B season.
Subject: A.S. Livorno Calcio
Predicate: season
Object: 2014–15 Serie B

Triple: ['__subject__ A.S. Livorno Calcio __predicate__ season __object__ 2014–15 Serie B']
Text: A.S. Livorno Calcio were in Serie B in the 2014-15 season.
Subject: A.S. Livorno Calcio
Predicate: season
Object: 2014–15 Serie B

Triple: ['__subject__ A.S. Roma __predicate__ chairman __object__ James Pallotta']
Text: The chairman of the A.S. Roma is James Pallotta.
Subject: A.S. Roma
Predicate: chairman
Object: James Pallotta

Triple: ['__subject__ A.S. Roma __predicate__ chairman __object__ James Pallotta']
Text: James Pallotta is the chairman of A.S. Roma.
Subject: A.S. Roma
Predicate: chairman
Object: James Pallotta

Triple: ['__subject__ A.S. Roma __predicate__ chairman __object__ James Pallotta']
Text: A.S. Roma's chairman is James Pallotta.
Subject: A.S. Roma
Predicate: chairman
Object: James Pallotta

Triple: ['__subject__ A.S. Roma __predicate__ fullName __object__ Associazione Sportiva Roma S.p.A.']
Text: The "Associazione Sportiva Roma S.p.A." is the non-abbreviated name of A.S. Roma.
Subject: A.S. Roma
Predicate: fullName
Object: Associazione Sportiva Roma S.p.A.

Triple: ['__subject__ A.S. Roma __predicate__ fullName __object__ Associazione Sportiva Roma S.p.A.']
Text: A.S. Roma's full name is Associazione Sportiva Roma S.p.A.
Subject: A.S. Roma
Predicate: fullName
Object: Associazione Sportiva Roma S.p.A.

Triple: ['__subject__ A.S. Roma __predicate__ fullName __object__ Associazione Sportiva Roma S.p.A.']
Text: The full name of A.S. Roma is Associazione Sportiva Roma S.p.A.
Subject: A.S. Roma
Predicate: fullName
Object: Associazione Sportiva Roma S.p.A.

Triple: ['__subject__ A.S. Roma __predicate__ ground __object__ Rome, Italy']
Text: A.S. Roma's ground is in Rome, Italy.
Subject: A.S. Roma
Predicate: ground
Object: Rome, Italy

Triple: ['__subject__ A.S. Roma __predicate__ ground __object__ Rome, Italy']
Text: The ground of A.S. Roma is in Rome, Italy.
Subject: A.S. Roma
Predicate: ground
Object: Rome, Italy

Triple: ['__subject__ A.S. Roma __predicate__ ground __object__ Rome']
Text: A.S. Roma have a ground in Rome.
Subject: A.S. Roma
Predicate: ground
Object: Rome

Triple: ['__subject__ A.S. Roma __predicate__ ground __object__ Stadio Olimpico']
Text: A.S Roma ground is Stadio Olimpico.
Subject: A.S. Roma
Predicate: ground
Object: Stadio Olimpico

Triple: ['__subject__ A.S. Roma __predicate__ league __object__ Serie A']
Text: AS Roma play in the Serie A league.
Subject: A.S. Roma
Predicate: league
Object: Serie A

Triple: ['__subject__ A.S. Roma __predicate__ league __object__ Serie A']
Text: A.S. Roma play in Serie A.
Subject: A.S. Roma
Predicate: league
Object: Serie A

Triple: ['__subject__ A.S. Roma __predicate__ manager __object__ Luciano Spalletti']
Text: AS Roma's manager is Luciano Spalletti.
Subject: A.S. Roma
Predicate: manager
Object: Luciano Spalletti

Triple: ['__subject__ A.S. Roma __predicate__ manager __object__ Luciano Spalletti']
Text: Luciano Spalletti manages A.S. Roma.
Subject: A.S. Roma
Predicate: manager
Object: Luciano Spalletti

Triple: ['__subject__ A.S. Roma __predicate__ manager __object__ Luciano Spalletti']
Text: The manager of A.S. Roma is Luciano Spalletti.
Subject: A.S. Roma
Predicate: manager
Object: Luciano Spalletti

Triple: ['__subject__ A.S. Roma __predicate__ numberOfMembers __object__ 70634']
Text: AS Roma has 70634 members.
Subject: A.S. Roma
Predicate: numberOfMembers
Object: 70634

Triple: ['__subject__ A.S. Roma __predicate__ numberOfMembers __object__ 70634']
Text: A.S. Roma has 70634 members.
Subject: A.S. Roma
Predicate: numberOfMembers
Object: 70634

Triple: ['__subject__ A.S. Roma __predicate__ season __object__ 2014']
Text: AS Roma competed in the 2014 season.
Subject: A.S. Roma
Predicate: season
Object: 2014

Triple: ['__subject__ A.S. Roma __predicate__ season __object__ 2014']
Text: A.S. Roma was in the 2014 season.
Subject: A.S. Roma
Predicate: season
Object: 2014

Triple: ['__subject__ ACF Fiorentina __predicate__ fullName __object__ ACF Fiorentina S.p.A.']
Text: The full name of ACF Fiorentia is "ACF Fiorentina S.p.A."
Subject: ACF Fiorentina
Predicate: fullName
Object: ACF Fiorentina S.p.A.

Triple: ['__subject__ ACF Fiorentina __predicate__ fullName __object__ ACF Fiorentina S.p.A.']
Text: The full name of ACF Fiorentina is ACF Fiorentina S.p.A.
Subject: ACF Fiorentina
Predicate: fullName
Object: ACF Fiorentina S.p.A.

Triple: ['__subject__ ACF Fiorentina __predicate__ fullName __object__ ACF Fiorentina S.p.A.']
Text: ACF Fiorentina full name is ACF Fiorentina S.p.A.
Subject: ACF Fiorentina
Predicate: fullName
Object: ACF Fiorentina S.p.A.

Triple: ['__subject__ ACF Fiorentina __predicate__ league __object__ Serie A']
Text: ACF Fiorentina play in Serie A.
Subject: ACF Fiorentina
Predicate: league
Object: Serie A

Triple: ['__subject__ ACF Fiorentina __predicate__ manager __object__ Paulo Sousa']
Text: Paulo Sousa is the manager of the ACF Fiorentina.
Subject: ACF Fiorentina
Predicate: manager
Object: Paulo Sousa

Triple: ['__subject__ ACF Fiorentina __predicate__ manager __object__ Paulo Sousa']
Text: The manager of ACF Fiorentina is Paulo Sousa.
Subject: ACF Fiorentina
Predicate: manager
Object: Paulo Sousa

Triple: ['__subject__ ACF Fiorentina __predicate__ numberOfMembers __object__ 47290']
Text: ACF Fiorentina has 47290 members.
Subject: ACF Fiorentina
Predicate: numberOfMembers
Object: 47290

Triple: ['__subject__ ACF Fiorentina __predicate__ numberOfMembers __object__ 47290']
Text: ACF Fiorentina have 47290 members.
Subject: ACF Fiorentina
Predicate: numberOfMembers
Object: 47290

Triple: ['__subject__ ACF Fiorentina __predicate__ season __object__ 2014']
Text: ACF Fiorentina competed in the 2014 season.
Subject: ACF Fiorentina
Predicate: season
Object: 2014

Triple: ['__subject__ ACF Fiorentina __predicate__ season __object__ 2014–15 Serie A']
Text: ACF Fiorentina played the 2014-15 season in Serie A.
Subject: ACF Fiorentina
Predicate: season
Object: 2014–15 Serie A

Triple: ['__subject__ ACF Fiorentina __predicate__ season __object__ 2014–15 Serie A']
Text: ACF Fiorentina played in the 2014-15 Serie A season.
Subject: ACF Fiorentina
Predicate: season
Object: 2014–15 Serie A

Triple: ['__subject__ AEK Athens F.C. __predicate__ ground __object__ Greece']
Text: AEK Athens's ground is in Greece.
Subject: AEK Athens F.C.
Predicate: ground
Object: Greece

Triple: ['__subject__ AEK Athens F.C. __predicate__ ground __object__ Olympic Stadium (Athens)']
Text: The Olympic Stadium (Athens) is the home ground of AEK Athens FC.
Subject: AEK Athens F.C.
Predicate: ground
Object: Olympic Stadium (Athens)

Triple: ['__subject__ AEK Athens F.C. __predicate__ ground __object__ Olympic Stadium (Athens)']
Text: The ground for AEK Athens FC is the Olympic Stadium (Athens).
Subject: AEK Athens F.C.
Predicate: ground
Object: Olympic Stadium (Athens)

Triple: ['__subject__ AEK Athens F.C. __predicate__ league __object__ Superleague Greece']
Text: AEK Athens FC compete in the Superleague Greece.
Subject: AEK Athens F.C.
Predicate: league
Object: Superleague Greece

Triple: ['__subject__ AEK Athens F.C. __predicate__ league __object__ Superleague Greece']
Text: AEK Athens F.C. is in the Superleague of Greece.
Subject: AEK Athens F.C.
Predicate: league
Object: Superleague Greece

Triple: ['__subject__ AEK Athens F.C. __predicate__ league __object__ Superleague Greece']
Text: AEK Athens F.C. play in the Superleague Greece.
Subject: AEK Athens F.C.
Predicate: league
Object: Superleague Greece

Triple: ['__subject__ AEK Athens F.C. __predicate__ manager __object__ Gus Poyet']
Text: AEK Athens FC had the manager Gus Poyet.
Subject: AEK Athens F.C.
Predicate: manager
Object: Gus Poyet

Triple: ['__subject__ AEK Athens F.C. __predicate__ manager __object__ Gus Poyet']
Text: AEK Athens F.C. manager is Gus Poyet.
Subject: AEK Athens F.C.
Predicate: manager
Object: Gus Poyet

Triple: ['__subject__ AEK Athens F.C. __predicate__ manager __object__ Gus Poyet']
Text: AEK Athens are managed by Gus Poyet.
Subject: AEK Athens F.C.
Predicate: manager
Object: Gus Poyet

Triple: ['__subject__ AEK Athens F.C. __predicate__ numberOfMembers __object__ 69618']
Text: AEK Athens F.C. has 69618 members.
Subject: AEK Athens F.C.
Predicate: numberOfMembers
Object: 69618

Triple: ['__subject__ AEK Athens F.C. __predicate__ season __object__ 2014']
Text: AEK Athens FC played in the 2014 season.
Subject: AEK Athens F.C.
Predicate: season
Object: 2014

Triple: ['__subject__ AFC Ajax __predicate__ fullName __object__ Amsterdamsche Football Club Ajax']
Text: The full name of AFC Ajax is "Amsterdamsche Football Club Ajax".
Subject: AFC Ajax
Predicate: fullName
Object: Amsterdamsche Football Club Ajax

Triple: ['__subject__ AFC Ajax __predicate__ fullName __object__ Amsterdamsche Football Club Ajax']
Text: The full name of AFC Ajax is Amsterdamsche Football Club Ajax.
Subject: AFC Ajax
Predicate: fullName
Object: Amsterdamsche Football Club Ajax

Triple: ['__subject__ AFC Ajax __predicate__ numberOfMembers __object__ 53502']
Text: AFC Ajax has 53502 members.
Subject: AFC Ajax
Predicate: numberOfMembers
Object: 53502

Triple: ['__subject__ AFC Ajax __predicate__ owner __object__ AFC Ajax N.V.']
Text: The owner of AFC Ajax is AFC Ajax N.V.
Subject: AFC Ajax
Predicate: owner
Object: AFC Ajax N.V.

Triple: ['__subject__ AFC Ajax __predicate__ owner __object__ AFC Ajax N.V.']
Text: The owner of AFC Ajax is AFC Ajax NV.
Subject: AFC Ajax
Predicate: owner
Object: AFC Ajax N.V.

Triple: ['__subject__ AFC Ajax __predicate__ owner __object__ AFC Ajax N.V.']
Text: AFC Ajax N.V. owns AFC Ajax.
Subject: AFC Ajax
Predicate: owner
Object: AFC Ajax N.V.

Triple: ['__subject__ AFC Ajax __predicate__ season __object__ 2014']
Text: AFC Ajax played in the 2014 season.
Subject: AFC Ajax
Predicate: season
Object: 2014

Triple: ['__subject__ AFC Ajax __predicate__ season __object__ 2014']
Text: AFC Ajax played in season 2014.
Subject: AFC Ajax
Predicate: season
Object: 2014

Triple: ['__subject__ AFC Ajax __predicate__ season __object__ 2014–15 Eredivisie']
Text: AFC Ajax were in the Eredivisie for the season 2014-2015.
Subject: AFC Ajax
Predicate: season
Object: 2014–15 Eredivisie

Triple: ['__subject__ AFC Ajax __predicate__ season __object__ 2014–15 Eredivisie']
Text: AFC Ajax played in the 2014-15 Eredivisie season.
Subject: AFC Ajax
Predicate: season
Object: 2014–15 Eredivisie

Triple: ['__subject__ AFC Ajax (amateurs) __predicate__ fullName __object__ Amsterdamsche Football Club Ajax Amateurs']
Text: The full name of AFC Ajax (amateurs) is "Amsterdamsche Football Club Ajax Amateurs".
Subject: AFC Ajax (amateurs)
Predicate: fullName
Object: Amsterdamsche Football Club Ajax Amateurs

Triple: ['__subject__ AFC Ajax (amateurs) __predicate__ fullName __object__ Amsterdamsche Football Club Ajax Amateurs']
Text: The full name of AFC Ajax (amateurs) is Amsterdamsche Football Club Ajax Amateurs.
Subject: AFC Ajax (amateurs)
Predicate: fullName
Object: Amsterdamsche Football Club Ajax Amateurs

Triple: ['__subject__ AFC Ajax (amateurs) __predicate__ fullName __object__ Amsterdamsche Football Club Ajax Amateurs']
Text: The AFC Ajax (amateurs) complete name is the "Amsterdamsche Football Club Ajax Amateurs.
Subject: AFC Ajax (amateurs)
Predicate: fullName
Object: Amsterdamsche Football Club Ajax Amateurs

Triple: ['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Amsterdam']
Text: AFC Ajax is based in Amsterdam.
Subject: AFC Ajax (amateurs)
Predicate: ground
Object: Amsterdam

Triple: ['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Amsterdam']
Text: The ground of AFC Ajax (amateurs) can be found in Amsterdam.
Subject: AFC Ajax (amateurs)
Predicate: ground
Object: Amsterdam

Triple: ['__subject__ AFC Ajax (amateurs) __predicate__ ground __object__ Sportpark De Toekomst']
Text: AFC Ajax (amateurs)'s ground is Sportpark De Toekomst.
Subject: AFC Ajax (amateurs)
Predicate: ground
Object: Sportpark De Toekomst

Triple: ['__subject__ AFC Ajax (amateurs) __predicate__ league __object__ Hoofdklasse']
Text: AFC Ajax (amateurs) play in the Hoofdklasse league.
Subject: AFC Ajax (amateurs)
Predicate: league
Object: Hoofdklasse

Triple: ['__subject__ AFC Ajax (amateurs) __predicate__ nickname __object__ Lucky Ajax']
Text: AFC Ajax (amateurs) has the nickname "Lucky Ajax".
Subject: AFC Ajax (amateurs)
Predicate: nickname
Object: Lucky Ajax

Triple: ['__subject__ AFC Ajax (amateurs) __predicate__ nickname __object__ Lucky Ajax']
Text: AFC Ajax is nicknamed Lucky Ajax.
Subject: AFC Ajax (amateurs)
Predicate: nickname
Object: Lucky Ajax

Triple: ['__subject__ AFC Ajax (amateurs) __predicate__ nickname __object__ Lucky Ajax']
Text: The nickname of AFC Ajax (amateurs) is Lucky Ajax.
Subject: AFC Ajax (amateurs)
Predicate: nickname
Object: Lucky Ajax

Triple: ['__subject__ AFC Ajax (amateurs) __predicate__ season __object__ 2014']
Text: AFC Ajax (Amateurs) competed in the 2014 season.
Subject: AFC Ajax (amateurs)
Predicate: season
Object: 2014

Triple: ['__subject__ AFC Ajax (amateurs) __predicate__ season __object__ 2014']
Text: AFC Ajax (amateurs) played in the 2014 season.
Subject: AFC Ajax (amateurs)
Predicate: season
Object: 2014

Triple: ['__subject__ AFC Ajax (amateurs) __predicate__ season __object__ 2014–15 Topklasse']
Text: AFC Ajax (amateurs) played in the Topklasse in the 2014-2015 season.
Subject: AFC Ajax (amateurs)
Predicate: season
Object: 2014–15 Topklasse

Triple: ['__subject__ AFC Ajax (amateurs) __predicate__ season __object__ 2014–15 Topklasse']
Text: AFC Ajax (amateurs) played in the 2014-15 Topklasse season.
Subject: AFC Ajax (amateurs)
Predicate: season
Object: 2014–15 Topklasse

Triple: ['__subject__ AZAL Arena __predicate__ location __object__ Azerbaijan']
Text: The AZAL Arena is located in Azerbaijan.
Subject: AZAL Arena
Predicate: location
Object: Azerbaijan

Triple: ['__subject__ AZAL Arena __predicate__ location __object__ Azerbaijan']
Text: The AZAL arena is in Azerbaijan.
Subject: AZAL Arena
Predicate: location
Object: Azerbaijan

Triple: ['__subject__ AZAL Arena __predicate__ location __object__ Azerbaijan']
Text: AZAL Arena is located in Azerbaijan.
Subject: AZAL Arena
Predicate: location
Object: Azerbaijan

Triple: ['__subject__ AZAL Arena __predicate__ location __object__ Shuvalan']
Text: The AZAL Arena is located in Shuvalan.
Subject: AZAL Arena
Predicate: location
Object: Shuvalan

Triple: ['__subject__ AZAL Arena __predicate__ location __object__ Shuvalan']
Text: AZAL Arena is located in Shuvalan.
Subject: AZAL Arena
Predicate: location
Object: Shuvalan

Triple: ['__subject__ AZAL Arena __predicate__ location __object__ Shuvalan']
Text: The AZAL Arena is in Shuvalan.
Subject: AZAL Arena
Predicate: location
Object: Shuvalan

Triple: ['__subject__ AZAL PFK __predicate__ fullName __object__ AZAL Peşəkar Futbol Klubu']
Text: AZAL PFK stands for "AZAL Peşəkar Futbol Klubu".
Subject: AZAL PFK
Predicate: fullName
Object: AZAL Peşəkar Futbol Klubu

Triple: ['__subject__ AZAL PFK __predicate__ fullName __object__ AZAL Peşəkar Futbol Klubu']
Text: AZAL PFK's full name is AZAL Peşəkar Futbol Klubu.
Subject: AZAL PFK
Predicate: fullName
Object: AZAL Peşəkar Futbol Klubu

Triple: ['__subject__ AZAL PFK __predicate__ fullName __object__ AZAL Peşəkar Futbol Klubu']
Text: The full name of AZAL PFK is AZAL Peşəkar Futbol Klubu.
Subject: AZAL PFK
Predicate: fullName
Object: AZAL Peşəkar Futbol Klubu

Triple: ['__subject__ AZAL PFK __predicate__ ground __object__ AZAL Arena']
Text: AZAL PFK play their home matches at the AZAL Arena.
Subject: AZAL PFK
Predicate: ground
Object: AZAL Arena

Triple: ['__subject__ AZAL PFK __predicate__ ground __object__ AZAL Arena']
Text: AZAL Arena is the ground of AZAL PFK.
Subject: AZAL PFK
Predicate: ground
Object: AZAL Arena

Triple: ['__subject__ AZAL PFK __predicate__ numberOfMembers __object__ 3500']
Text: There are 3500 members of AZAL PFK.
Subject: AZAL PFK
Predicate: numberOfMembers
Object: 3500

Triple: ['__subject__ AZAL PFK __predicate__ numberOfMembers __object__ 3500']
Text: The number of members of Azal Pfk is 3500.
Subject: AZAL PFK
Predicate: numberOfMembers
Object: 3500

Triple: ['__subject__ AZAL PFK __predicate__ season __object__ 2014']
Text: AZAL PFK competed in the season 2014.
Subject: AZAL PFK
Predicate: season
Object: 2014

Triple: ['__subject__ AZAL PFK __predicate__ season __object__ 2014']
Text: AZAL PFK are in season 2014.
Subject: AZAL PFK
Predicate: season
Object: 2014

Triple: ['__subject__ AZAL PFK __predicate__ season __object__ 2014–15 Azerbaijan Premier League']
Text: AZAL PFK Bakou is playing Azerbaijan PremierLeague, 2014–15.
Subject: AZAL PFK
Predicate: season
Object: 2014–15 Azerbaijan Premier League

Triple: ['__subject__ AZAL PFK __predicate__ season __object__ 2014–15 Azerbaijan Premier League']
Text: AZAL PFK were in the Azerbaijan Premier League in 2014-15.
Subject: AZAL PFK
Predicate: season
Object: 2014–15 Azerbaijan Premier League

Triple: ['__subject__ AZ Alkmaar __predicate__ fullName __object__ Alkmaar Zaanstreek']
Text: AZ Alkmaar full name is "Alkmaar Zaanstreek".
Subject: AZ Alkmaar
Predicate: fullName
Object: Alkmaar Zaanstreek

Triple: ['__subject__ AZ Alkmaar __predicate__ fullName __object__ Alkmaar Zaanstreek']
Text: Alkmaar Zaanstreek is the full name of AZ Alkmaar.
Subject: AZ Alkmaar
Predicate: fullName
Object: Alkmaar Zaanstreek

Triple: ['__subject__ AZ Alkmaar __predicate__ fullName __object__ Alkmaar Zaanstreek']
Text: AZ Alkmaar's full name is Alkmaar Zaanstreek.
Subject: AZ Alkmaar
Predicate: fullName
Object: Alkmaar Zaanstreek

Triple: ['__subject__ AZ Alkmaar __predicate__ ground __object__ AFAS Stadion']
Text: AZ Alkmaar's ground is the AFAS Stadion.
Subject: AZ Alkmaar
Predicate: ground
Object: AFAS Stadion

Triple: ['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom']
Text: John van den Brom has been manager of AZ Alkmaar.
Subject: AZ Alkmaar
Predicate: manager
Object: John van den Brom

Triple: ['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom']
Text: John van den Brom manages the AZ Alkmaar.
Subject: AZ Alkmaar
Predicate: manager
Object: John van den Brom

Triple: ['__subject__ AZ Alkmaar __predicate__ manager __object__ John van den Brom']
Text: The manager of AZ Alkmaar is john van den Brom.
Subject: AZ Alkmaar
Predicate: manager
Object: John van den Brom

Triple: ['__subject__ AZ Alkmaar __predicate__ owner __object__ Max Huiberts']
Text: Max Huiberts is the owner of AZ Alkmaar.
Subject: AZ Alkmaar
Predicate: owner
Object: Max Huiberts

Triple: ['__subject__ AZ Alkmaar __predicate__ owner __object__ Max Huiberts']
Text: Max Huiberts owns AZ Alkmaar.
Subject: AZ Alkmaar
Predicate: owner
Object: Max Huiberts

Triple: ['__subject__ AZ Alkmaar __predicate__ owner __object__ Max Huiberts']
Text: The owner of AZ Alkmaar is Max Huiberts.
Subject: AZ Alkmaar
Predicate: owner
Object: Max Huiberts

Triple: ['__subject__ AZ Alkmaar __predicate__ owner __object__ Robert Eenhoorn']
Text: AZ Alkmaar is owned by Robert Eenhoorn.
Subject: AZ Alkmaar
Predicate: owner
Object: Robert Eenhoorn

Triple: ['__subject__ AZ Alkmaar __predicate__ owner __object__ Robert Eenhoorn']
Text: Robert Eenhoorn owns AZ Alkmaar.
Subject: AZ Alkmaar
Predicate: owner
Object: Robert Eenhoorn

Triple: ['__subject__ AZ Alkmaar __predicate__ season __object__ 2014']
Text: AZ Alkmaar played in the 2014 season.
Subject: AZ Alkmaar
Predicate: season
Object: 2014

Triple: ['__subject__ Agremiação Sportiva Arapiraquense __predicate__ chairmanTitle __object__ President']
Text: The title of the chairman of Agremiacao Sportiva Arapiraquense is President.
Subject: Agremiação Sportiva Arapiraquense
Predicate: chairmanTitle
Object: President

Triple: ['__subject__ Agremiação Sportiva Arapiraquense __predicate__ chairmanTitle __object__ President']
Text: The chairman of Agremiação Sportiva Arapiraquense has the title of 'President'.
Subject: Agremiação Sportiva Arapiraquense
Predicate: chairmanTitle
Object: President

Triple: ['__subject__ Agremiação Sportiva Arapiraquense __predicate__ chairmanTitle __object__ President']
Text: The "President" is the chairman title of the Agremiação Sportiva Arapiraquense.
Subject: Agremiação Sportiva Arapiraquense
Predicate: chairmanTitle
Object: President

Triple: ['__subject__ Agremiação Sportiva Arapiraquense __predicate__ fullName __object__ Agremiação Sportiva Arapiraquense']
Text: Agremiação Sportiva Arapiraquense's full name is "Agremiação Sportiva Arapiraquense".
Subject: Agremiação Sportiva Arapiraquense
Predicate: fullName
Object: Agremiação Sportiva Arapiraquense

Triple: ['__subject__ Agremiação Sportiva Arapiraquense __predicate__ fullName __object__ Agremiação Sportiva Arapiraquense']
Text: The full name of Agremiação Sportiva Arapiraquense is "Agremiação Sportiva Arapiraquense".
Subject: Agremiação Sportiva Arapiraquense
Predicate: fullName
Object: Agremiação Sportiva Arapiraquense

Triple: ['__subject__ Agremiação Sportiva Arapiraquense __predicate__ fullName __object__ Agremiação Sportiva Arapiraquense']
Text: The Agremiação Sportiva Arapiraquense's full name is"Agremiação Sportiva Arapiraquense".
Subject: Agremiação Sportiva Arapiraquense
Predicate: fullName
Object: Agremiação Sportiva Arapiraquense

Triple: ['__subject__ Agremiação Sportiva Arapiraquense __predicate__ ground __object__ Estádio Municipal Coaracy da Mata Fonseca']
Text: Estádio Municipal Coaracy da Mata Fonseca is the name of the ground of Agremiação Sportiva Arapiraquense.
Subject: Agremiação Sportiva Arapiraquense
Predicate: ground
Object: Estádio Municipal Coaracy da Mata Fonseca

Triple: ['__subject__ Agremiação Sportiva Arapiraquense __predicate__ ground __object__ Estádio Municipal Coaracy da Mata Fonseca']
Text: Agremiacao Sportiva Arapiraquense's ground is the Estadio Municipal Coaracy da Mata Fonseca.
Subject: Agremiação Sportiva Arapiraquense
Predicate: ground
Object: Estádio Municipal Coaracy da Mata Fonseca

Triple: ['__subject__ Agremiação Sportiva Arapiraquense __predicate__ league __object__ Campeonato Brasileiro Série C']
Text: Agremiação Sportiva Arapiraquense play in the Campeonato Brasileiro Série C league.
Subject: Agremiação Sportiva Arapiraquense
Predicate: league
Object: Campeonato Brasileiro Série C

Triple: ["__subject__ Agremiação Sportiva Arapiraquense __predicate__ nickname __object__ ''Alvinegro"]
Text: Alvinegro is the nickname of Agremiação Sportiva Arapiraquense.
Subject: Agremiação Sportiva Arapiraquense
Predicate: nickname
Object: ''Alvinegro

Triple: ["__subject__ Agremiação Sportiva Arapiraquense __predicate__ nickname __object__ ''Alvinegro"]
Text: Alvinegro is the nickname for Agremiação Sportiva Arapiraquense.
Subject: Agremiação Sportiva Arapiraquense
Predicate: nickname
Object: ''Alvinegro

Triple: ["__subject__ Agremiação Sportiva Arapiraquense __predicate__ nickname __object__ ''Alvinegro"]
Text: The nickname of Agremiacao Sportiva Arapiraquense is "Alvinegro".
Subject: Agremiação Sportiva Arapiraquense
Predicate: nickname
Object: ''Alvinegro

Triple: ["__subject__ Agremiação Sportiva Arapiraquense __predicate__ nickname __object__ Asa Gigante ''"]
Text: The Agremiação Sportiva Arapiraquense is nicknamed Asa Gigante.
Subject: Agremiação Sportiva Arapiraquense
Predicate: nickname
Object: Asa Gigante ''

Triple: ["__subject__ Agremiação Sportiva Arapiraquense __predicate__ nickname __object__ Asa Gigante ''"]
Text: Agremiação Sportiva Arapiraquense nickname is Asa Gigante.
Subject: Agremiação Sportiva Arapiraquense
Predicate: nickname
Object: Asa Gigante ''

Triple: ["__subject__ Agremiação Sportiva Arapiraquense __predicate__ nickname __object__ Asa Gigante ''"]
Text: Agremiacao Sportiva Arapiraquense have the nickname Asa Gigante.
Subject: Agremiação Sportiva Arapiraquense
Predicate: nickname
Object: Asa Gigante ''

Triple: ['__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000']
Text: Agremiação Sportiva Arapiraquense has 17000 members.
Subject: Agremiação Sportiva Arapiraquense
Predicate: numberOfMembers
Object: 17000

Triple: ['__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000']
Text: Agremiação Sportiva Arapiraquense club has 17000 members.
Subject: Agremiação Sportiva Arapiraquense
Predicate: numberOfMembers
Object: 17000

Triple: ['__subject__ Agremiação Sportiva Arapiraquense __predicate__ numberOfMembers __object__ 17000']
Text: Agremiacao Sportiva Arapiraquense has 17000 members.
Subject: Agremiação Sportiva Arapiraquense
Predicate: numberOfMembers
Object: 17000

Triple: ['__subject__ Agremiação Sportiva Arapiraquense __predicate__ season __object__ 2015']
Text: Agremiação Sportiva Arapiraquense played in the 2015 season.
Subject: Agremiação Sportiva Arapiraquense
Predicate: season
Object: 2015

Triple: ['__subject__ Agremiação Sportiva Arapiraquense __predicate__ season __object__ 2015']
Text: Agremiacao Sportiva Arapiraquense play in 2015.
Subject: Agremiação Sportiva Arapiraquense
Predicate: season
Object: 2015

Triple: ['__subject__ Akron, Ohio __predicate__ isPartOf __object__ Summit County, Ohio']
Text: Akron, Ohio is part of Summit County, Ohio.
Subject: Akron, Ohio
Predicate: isPartOf
Object: Summit County, Ohio

Triple: ['__subject__ Akron, Ohio __predicate__ isPartOf __object__ Summit County, Ohio']
Text: Akron, Ohio is a part of Summit County, Ohio.
Subject: Akron, Ohio
Predicate: isPartOf
Object: Summit County, Ohio

Triple: ['__subject__ Akron, Ohio __predicate__ leader __object__ Dan Horrigan']
Text: Akron, Ohio is led by Dan Horrigan.
Subject: Akron, Ohio
Predicate: leader
Object: Dan Horrigan

Triple: ['__subject__ Akron, Ohio __predicate__ leader __object__ Dan Horrigan']
Text: Dan Horrigan is the leader of Akron, Ohio.
Subject: Akron, Ohio
Predicate: leader
Object: Dan Horrigan

Triple: ['__subject__ Akron, Ohio __predicate__ leader __object__ Dan Horrigan']
Text: The leader of Akron, Ohio is Dan Horrigan.
Subject: Akron, Ohio
Predicate: leader
Object: Dan Horrigan

Triple: ['__subject__ Akron, Ohio __predicate__ isPartOf __object__ United States']
Text: Akron, Ohio is located in the United States.
Subject: Akron, Ohio
Predicate: isPartOf
Object: United States

Triple: ['__subject__ Akron Summit Assault __predicate__ chairman __object__ Dave Laughlin']
Text: Akrons Summit Assault chairman is Dave Laughlin.
Subject: Akron Summit Assault
Predicate: chairman
Object: Dave Laughlin

Triple: ['__subject__ Akron Summit Assault __predicate__ chairman __object__ Dave Laughlin']
Text: Akron Summit Assault's chairman is Dave Laughlin.
Subject: Akron Summit Assault
Predicate: chairman
Object: Dave Laughlin

Triple: ['__subject__ Akron Summit Assault __predicate__ ground __object__ Akron, Ohio']
Text: The Akron Summit Assault team is based in Akron, Ohio.
Subject: Akron Summit Assault
Predicate: ground
Object: Akron, Ohio

Triple: ['__subject__ Akron Summit Assault __predicate__ league __object__ Premier Development League']
Text: Akron Summit Assault play in the Premier Development League.
Subject: Akron Summit Assault
Predicate: league
Object: Premier Development League

Triple: ['__subject__ Akron Summit Assault __predicate__ manager __object__ Denzil Antonio']
Text: Denzil Antonio was the manager of Akron Summit Assault.
Subject: Akron Summit Assault
Predicate: manager
Object: Denzil Antonio

Triple: ['__subject__ Akron Summit Assault __predicate__ manager __object__ Denzil Antonio']
Text: Denzil Antonio is the manager of Akron Summit Assault.
Subject: Akron Summit Assault
Predicate: manager
Object: Denzil Antonio

Triple: ['__subject__ Akron Summit Assault __predicate__ season __object__ 2011']
Text: Akron Summit Assault played in the 2011 season.
Subject: Akron Summit Assault
Predicate: season
Object: 2011

Triple: ['__subject__ Akron Summit Assault __predicate__ season __object__ 2011']
Text: Akron Summit Assault was in the 2011 season.
Subject: Akron Summit Assault
Predicate: season
Object: 2011

Triple: ['__subject__ Akron Summit Assault __predicate__ season __object__ 2011']
Text: Akron Summit Assault are in season 2011.
Subject: Akron Summit Assault
Predicate: season
Object: 2011

Triple: ['__subject__ Akron Summit Assault __predicate__ season __object__ 2011 PDL season']
Text: Akron Summit Assault play in the 2011 PDL season.
Subject: Akron Summit Assault
Predicate: season
Object: 2011 PDL season

Triple: ['__subject__ Amsterdam __predicate__ part __object__ Amsterdam-Noord']
Text: Amsterdam-Noord is part of Amsterdam.
Subject: Amsterdam
Predicate: part
Object: Amsterdam-Noord

Triple: ['__subject__ Athens __predicate__ mayor __object__ Giorgos Kaminis']
Text: The mayor of Athens is Giorgos Kaminis.
Subject: Athens
Predicate: mayor
Object: Giorgos Kaminis

Triple: ['__subject__ Azerbaijan Premier League __predicate__ champions __object__ Qarabağ FK']
Text: The name of the championship football team in the Azerbaijan Premier League Os the Qarabag FK.
Subject: Azerbaijan Premier League
Predicate: champions
Object: Qarabağ FK

Triple: ['__subject__ Azerbaijan Premier League __predicate__ champions __object__ Qarabağ FK']
Text: Qarabağ FK are the champions of the Azerbaijan Premier League.
Subject: Azerbaijan Premier League
Predicate: champions
Object: Qarabağ FK

Triple: ['__subject__ Azerbaijan Premier League __predicate__ champions __object__ Qarabağ FK']
Text: The champions of the Azerbaijan Premier League are Qarabag FK.
Subject: Azerbaijan Premier League
Predicate: champions
Object: Qarabağ FK

Triple: ['__subject__ Blackpool __predicate__ leader __object__ Conservative Party (UK)']
Text: The leader of Blackpool is the Conservative Party (UK).
Subject: Blackpool
Predicate: leader
Object: Conservative Party (UK)

Triple: ['__subject__ Blackpool __predicate__ leader __object__ Gordon Marsden']
Text: Blackpool is led by Gordon Marsden.
Subject: Blackpool
Predicate: leader
Object: Gordon Marsden

Triple: ['__subject__ Blackpool __predicate__ leader __object__ Gordon Marsden']
Text: Gordon Marsden is one of Blackpool's leaders.
Subject: Blackpool
Predicate: leader
Object: Gordon Marsden

Triple: ['__subject__ Blackpool __predicate__ leader __object__ Gordon Marsden']
Text: The leader of Blackpool is Gordon Marsden.
Subject: Blackpool
Predicate: leader
Object: Gordon Marsden

Triple: ['__subject__ Blackpool __predicate__ leader __object__ Labour Party (UK)']
Text: The leader of Blackpool council is the Labour Party (UK).
Subject: Blackpool
Predicate: leader
Object: Labour Party (UK)

Triple: ['__subject__ Blackpool __predicate__ leader __object__ Labour Party (UK)']
Text: Blackpool's council is Labour.
Subject: Blackpool
Predicate: leader
Object: Labour Party (UK)

Triple: ['__subject__ Campeonato Brasileiro Série C __predicate__ champions __object__ Vila Nova Futebol Clube']
Text: Vila Nova Futebol Clube have been champions of Campeonato Brasileiro Série C.
Subject: Campeonato Brasileiro Série C
Predicate: champions
Object: Vila Nova Futebol Clube

Triple: ['__subject__ Campeonato Brasileiro Série C __predicate__ champions __object__ Vila Nova Futebol Clube']
Text: Vila Nova Futebol Clube are the champions of Campeonato Brasileiro Serie C.
Subject: Campeonato Brasileiro Série C
Predicate: champions
Object: Vila Nova Futebol Clube

Triple: ['__subject__ Campeonato Brasileiro Série C __predicate__ champions __object__ Vila Nova Futebol Clube']
Text: The Vila Nova Futebol Clube were champions at the Campeonato Brasileiro Série C.
Subject: Campeonato Brasileiro Série C
Predicate: champions
Object: Vila Nova Futebol Clube

Triple: ['__subject__ Campeonato Brasileiro Série C __predicate__ country __object__ Brazil']
Text: Campeonato Brasileiro Série C is from Brazil.
Subject: Campeonato Brasileiro Série C
Predicate: country
Object: Brazil

Triple: ['__subject__ Campeonato Brasileiro Série C __predicate__ country __object__ Brazil']
Text: Campeonato Brasileiro Serie C is based in Brazil.
Subject: Campeonato Brasileiro Série C
Predicate: country
Object: Brazil

Triple: ['__subject__ Christian Panucci __predicate__ club __object__ A.S. Livorno Calcio']
Text: Christian Panucci has been manager of A S Livorno Calcio.
Subject: Christian Panucci
Predicate: club
Object: A.S. Livorno Calcio

Triple: ['__subject__ Christian Panucci __predicate__ club __object__ A.S. Livorno Calcio']
Text: Christian Panucci plays for A.S. Livorno Calcio.
Subject: Christian Panucci
Predicate: club
Object: A.S. Livorno Calcio

Triple: ['__subject__ Christian Panucci __predicate__ club __object__ A.S. Roma']
Text: Christian Panucci plays at the A.S. Roma.
Subject: Christian Panucci
Predicate: club
Object: A.S. Roma

Triple: ['__subject__ Christian Panucci __predicate__ club __object__ A.S. Roma']
Text: Christian Panucci is in the A.S. Roma club.
Subject: Christian Panucci
Predicate: club
Object: A.S. Roma

Triple: ['__subject__ Christian Panucci __predicate__ club __object__ A.S. Roma']
Text: Christian Panucci plays for A.S. Roma.
Subject: Christian Panucci
Predicate: club
Object: A.S. Roma

Triple: ['__subject__ Christian Panucci __predicate__ club __object__ Genoa C.F.C.']
Text: Christian Panucci played football for Genoa C.F.C.
Subject: Christian Panucci
Predicate: club
Object: Genoa C.F.C.

Triple: ['__subject__ Christian Panucci __predicate__ club __object__ Genoa C.F.C.']
Text: Christian Panucci is attached to the club Genoa CFC.
Subject: Christian Panucci
Predicate: club
Object: Genoa C.F.C.

Triple: ['__subject__ Christian Panucci __predicate__ club __object__ Italy national football team']
Text: Christian Panucci played for the Italy national football team.
Subject: Christian Panucci
Predicate: club
Object: Italy national football team

Triple: ['__subject__ Christian Panucci __predicate__ club __object__ Italy national football team']
Text: Christian Panucci plays for the Italy national football team.
Subject: Christian Panucci
Predicate: club
Object: Italy national football team

Triple: ['__subject__ Christian Panucci __predicate__ club __object__ Real Madrid C.F.']
Text: Christian Panucci was attached to the Real Madrid CF club.
Subject: Christian Panucci
Predicate: club
Object: Real Madrid C.F.

Triple: ['__subject__ Dave Challinor __predicate__ club __object__ A.F.C. Fylde']
Text: Dave Challinor is a player at the A.F.C. Fylde .
Subject: Dave Challinor
Predicate: club
Object: A.F.C. Fylde

Triple: ['__subject__ Dave Challinor __predicate__ club __object__ A.F.C. Fylde']
Text: Dave Challinor is at the A.F.C. Fylde club.
Subject: Dave Challinor
Predicate: club
Object: A.F.C. Fylde

Triple: ['__subject__ Dave Challinor __predicate__ club __object__ A.F.C. Fylde']
Text: Dave Challinor plays for A.F.C. Fylde.
Subject: Dave Challinor
Predicate: club
Object: A.F.C. Fylde

Triple: ['__subject__ Dave Challinor __predicate__ club __object__ Bury F.C.']
Text: Dave Challinor played football for Bury FC.
Subject: Dave Challinor
Predicate: club
Object: Bury F.C.

Triple: ['__subject__ Dave Challinor __predicate__ club __object__ Bury F.C.']
Text: Dave Challinor played for Bury F.C.
Subject: Dave Challinor
Predicate: club
Object: Bury F.C.

Triple: ['__subject__ Dave Challinor __predicate__ club __object__ Colwyn Bay F.C.']
Text: Dave Challinor is at Colwyn Bay FC.
Subject: Dave Challinor
Predicate: club
Object: Colwyn Bay F.C.

Triple: ['__subject__ Dave Challinor __predicate__ club __object__ Colwyn Bay F.C.']
Text: Dave Challinor is a player of Colwyn Bay F.C. club.
Subject: Dave Challinor
Predicate: club
Object: Colwyn Bay F.C.

Triple: ['__subject__ Dave Challinor __predicate__ club __object__ Colwyn Bay F.C.']
Text: Dave Challinor plays for Colwyn Bay F.C.
Subject: Dave Challinor
Predicate: club
Object: Colwyn Bay F.C.

Triple: ['__subject__ Dave Challinor __predicate__ club __object__ Stockport County F.C.']
Text: Dave Challinor plays at the Stockport County F.C.
Subject: Dave Challinor
Predicate: club
Object: Stockport County F.C.

Triple: ['__subject__ Dave Challinor __predicate__ club __object__ Stockport County F.C.']
Text: Dave Challinor played for Stockport County F.C.
Subject: Dave Challinor
Predicate: club
Object: Stockport County F.C.

Triple: ['__subject__ Dave Challinor __predicate__ club __object__ Tranmere Rovers F.C.']
Text: Dave Challinor is affiliated with Tranmere Rovers F.C.
Subject: Dave Challinor
Predicate: club
Object: Tranmere Rovers F.C.

Triple: ['__subject__ Dave Challinor __predicate__ club __object__ Tranmere Rovers F.C.']
Text: Dave Challinor plays for Tranmere Rovers F.C.
Subject: Dave Challinor
Predicate: club
Object: Tranmere Rovers F.C.

Triple: ['__subject__ Estádio Municipal Coaracy da Mata Fonseca __predicate__ location __object__ Alagoas']
Text: Estadio Municipal Coaracy da Mata Fonseca is located in Alagoas.
Subject: Estádio Municipal Coaracy da Mata Fonseca
Predicate: location
Object: Alagoas

Triple: ['__subject__ Estádio Municipal Coaracy da Mata Fonseca __predicate__ location __object__ Alagoas']
Text: The Estádio Municipal Coaracy da Mata Fonseca is located in Alagoas.
Subject: Estádio Municipal Coaracy da Mata Fonseca
Predicate: location
Object: Alagoas

Triple: ['__subject__ Estádio Municipal Coaracy da Mata Fonseca __predicate__ location __object__ Alagoas']
Text: Estadio Municipal Coaracy da Mata Fonseca is situated in Alagoas.
Subject: Estádio Municipal Coaracy da Mata Fonseca
Predicate: location
Object: Alagoas

Triple: ['__subject__ Estádio Municipal Coaracy da Mata Fonseca __predicate__ location __object__ Arapiraca']
Text: Estádio Municipal Coaracy da Mata Fonseca is located in Arapiraca.
Subject: Estádio Municipal Coaracy da Mata Fonseca
Predicate: location
Object: Arapiraca

Triple: ['__subject__ Estádio Municipal Coaracy da Mata Fonseca __predicate__ location __object__ Arapiraca']
Text: The Estádio Municipal Coaracy da Mata Fonseca is located in Arapiraca.
Subject: Estádio Municipal Coaracy da Mata Fonseca
Predicate: location
Object: Arapiraca

Triple: ['__subject__ Estádio Municipal Coaracy da Mata Fonseca __predicate__ location __object__ Arapiraca']
Text: The Estadio Municipal Coaracy da Mata Fonseca is in Arapiraca.
Subject: Estádio Municipal Coaracy da Mata Fonseca
Predicate: location
Object: Arapiraca

Triple: ['__subject__ Estádio Municipal Coaracy da Mata Fonseca __predicate__ location __object__ Brazil']
Text: Estádio Municipal Coaracy da Mata Fonseca is in Brazil.
Subject: Estádio Municipal Coaracy da Mata Fonseca
Predicate: location
Object: Brazil

Triple: ['__subject__ Estádio Municipal Coaracy da Mata Fonseca __predicate__ location __object__ Brazil']
Text: Estádio Municipal Coaracy da Mata Fonseca is located in Brazil.
Subject: Estádio Municipal Coaracy da Mata Fonseca
Predicate: location
Object: Brazil

Triple: ['__subject__ Frank de Boer __predicate__ club __object__ AFC Ajax']
Text: Frank de Boer played for AFC Ajax.
Subject: Frank de Boer
Predicate: club
Object: AFC Ajax

Triple: ['__subject__ Frank de Boer __predicate__ club __object__ AFC Ajax']
Text: Frank de Boer plays for AFC Ajax.
Subject: Frank de Boer
Predicate: club
Object: AFC Ajax

Triple: ['__subject__ Frank de Boer __predicate__ club __object__ Ajax Youth Academy']
Text: Frank de Boer is in the Ajax Youth Academy.
Subject: Frank de Boer
Predicate: club
Object: Ajax Youth Academy

Triple: ['__subject__ Frank de Boer __predicate__ club __object__ Ajax Youth Academy']
Text: Frank de Boer played for the Ajax Youth Academy.
Subject: Frank de Boer
Predicate: club
Object: Ajax Youth Academy

Triple: ['__subject__ Frank de Boer __predicate__ club __object__ Al-Shamal Sports Club']
Text: Frank de Boer played for Al-Shamal Sports Club.
Subject: Frank de Boer
Predicate: club
Object: Al-Shamal Sports Club

Triple: ['__subject__ Frank de Boer __predicate__ club __object__ Al-Shamal Sports Club']
Text: Frank de Boer plays for Al-Shamal Sports Club.
Subject: Frank de Boer
Predicate: club
Object: Al-Shamal Sports Club

Triple: ['__subject__ Frank de Boer __predicate__ club __object__ Netherlands national football team']
Text: Frank de Boer played for the Netherlands national football team.
Subject: Frank de Boer
Predicate: club
Object: Netherlands national football team

Triple: ['__subject__ Greece __predicate__ capital __object__ Athens']
Text: Athens is the capital of Greece.
Subject: Greece
Predicate: capital
Object: Athens

Triple: ['__subject__ Greece __predicate__ currency __object__ Euro']
Text: The currency in Greece is the euro.
Subject: Greece
Predicate: currency
Object: Euro

Triple: ['__subject__ Greece __predicate__ currency __object__ Euro']
Text: The Euro is the currency in Greece.
Subject: Greece
Predicate: currency
Object: Euro

Triple: ['__subject__ Greece __predicate__ currency __object__ Euro']
Text: Money used in Greece is the Euro.
Subject: Greece
Predicate: currency
Object: Euro

Triple: ['__subject__ Greece __predicate__ demonym __object__ Greeks']
Text: Greece is inhabited by Greeks.
Subject: Greece
Predicate: demonym
Object: Greeks

Triple: ['__subject__ Greece __predicate__ demonym __object__ Greeks']
Text: The people from Greece are called Greeks.
Subject: Greece
Predicate: demonym
Object: Greeks

Triple: ['__subject__ Greece __predicate__ demonym __object__ Greeks']
Text: Greeks inhabit Greece.
Subject: Greece
Predicate: demonym
Object: Greeks

Triple: ['__subject__ Greece __predicate__ language __object__ Greek language']
Text: Greek is the language of Greece.
Subject: Greece
Predicate: language
Object: Greek language

Triple: ['__subject__ Greece __predicate__ language __object__ Greek language']
Text: Greek is spoken in Greece.
Subject: Greece
Predicate: language
Object: Greek language

Triple: ['__subject__ Greece __predicate__ language __object__ Greek language']
Text: The language spoken in Greece is Greek.
Subject: Greece
Predicate: language
Object: Greek language

Triple: ['__subject__ Greece __predicate__ leader __object__ Alexis Tsipras']
Text: Greece's leader is Alexis Tsipras.
Subject: Greece
Predicate: leader
Object: Alexis Tsipras

Triple: ['__subject__ Greece __predicate__ leader __object__ Alexis Tsipras']
Text: Alexis Tsipras heads Greece.
Subject: Greece
Predicate: leader
Object: Alexis Tsipras

Triple: ['__subject__ Greece __predicate__ leader __object__ Alexis Tsipras']
Text: The leader of Greece is Alexis Tsipras.
Subject: Greece
Predicate: leader
Object: Alexis Tsipras

Triple: ['__subject__ Greece __predicate__ leader __object__ Prokopis Pavlopoulos']
Text: Greece's leader is Prokopis Pavlopoulos.
Subject: Greece
Predicate: leader
Object: Prokopis Pavlopoulos

Triple: ['__subject__ Greece __predicate__ leader __object__ Prokopis Pavlopoulos']
Text: Prokopis Pavlopoulos is a leader of Greece.
Subject: Greece
Predicate: leader
Object: Prokopis Pavlopoulos

Triple: ['__subject__ Greece __predicate__ leader __object__ Prokopis Pavlopoulos']
Text: Prokopis Pavlopoulos is a leader in Greece.
Subject: Greece
Predicate: leader
Object: Prokopis Pavlopoulos

Triple: ['__subject__ Gubbio __predicate__ leaderParty __object__ Left Ecology Freedom']
Text: The Left Ecology Freedom are the leading party in Gubbio.
Subject: Gubbio
Predicate: leaderParty
Object: Left Ecology Freedom

Triple: ['__subject__ Gus Poyet __predicate__ club __object__ Chelsea F.C.']
Text: Gus Poyet played for Chelsea F.C.
Subject: Gus Poyet
Predicate: club
Object: Chelsea F.C.

Triple: ['__subject__ Gus Poyet __predicate__ club __object__ Real Zaragoza']
Text: Gus Poyet is associated with the Real Zaragoza, a football club.
Subject: Gus Poyet
Predicate: club
Object: Real Zaragoza

Triple: ['__subject__ Gus Poyet __predicate__ club __object__ Real Zaragoza']
Text: Gus Poyet is in the Real Zaragoza club.
Subject: Gus Poyet
Predicate: club
Object: Real Zaragoza

Triple: ['__subject__ Gus Poyet __predicate__ club __object__ Real Zaragoza']
Text: Gus Poyet's club is Real Zaragoza.
Subject: Gus Poyet
Predicate: club
Object: Real Zaragoza

Triple: ['__subject__ Italy __predicate__ capital __object__ Rome']
Text: Rome is the capital of Italy.
Subject: Italy
Predicate: capital
Object: Rome

Triple: ['__subject__ Italy __predicate__ capital __object__ Rome']
Text: The capital of Italy is Rome.
Subject: Italy
Predicate: capital
Object: Rome

Triple: ['__subject__ Italy __predicate__ demonym __object__ Italians']
Text: Italy is inhabited by Italians.
Subject: Italy
Predicate: demonym
Object: Italians

Triple: ['__subject__ Italy __predicate__ demonym __object__ Italians']
Text: Italians are the people who live in Italy.
Subject: Italy
Predicate: demonym
Object: Italians

Triple: ['__subject__ Italy __predicate__ demonym __object__ Italians']
Text: Italians inhabit Italy.
Subject: Italy
Predicate: demonym
Object: Italians

Triple: ['__subject__ Italy __predicate__ language __object__ Italian language']
Text: The language spoken in italy is Italian language.
Subject: Italy
Predicate: language
Object: Italian language

Triple: ['__subject__ Italy __predicate__ language __object__ Italian language']
Text: The Italian language is spoken in Italy.
Subject: Italy
Predicate: language
Object: Italian language

Triple: ['__subject__ Italy __predicate__ leader __object__ Pietro Grasso']
Text: Italy's leader is Pietro Grasso.
Subject: Italy
Predicate: leader
Object: Pietro Grasso

Triple: ['__subject__ Italy __predicate__ leader __object__ Pietro Grasso']
Text: Pietro Grasso is the leader in Italy.
Subject: Italy
Predicate: leader
Object: Pietro Grasso

Triple: ['__subject__ Italy __predicate__ leader __object__ Pietro Grasso']
Text: The leader of Italy is Pietro Grasso.
Subject: Italy
Predicate: leader
Object: Pietro Grasso

Triple: ['__subject__ Italy __predicate__ officialLanguage __object__ Italian language']
Text: The official language of Italy is the Italian language.
Subject: Italy
Predicate: officialLanguage
Object: Italian language

Triple: ['__subject__ Italy __predicate__ officialLanguage __object__ Italian language']
Text: Italian is the official language of Italy.
Subject: Italy
Predicate: officialLanguage
Object: Italian language

Triple: ['__subject__ James Pallotta __predicate__ birthPlace __object__ Boston']
Text: Boston is the birthplace of James Pallotta.
Subject: James Pallotta
Predicate: birthPlace
Object: Boston

Triple: ['__subject__ James Pallotta __predicate__ birthPlace __object__ Boston']
Text: James Pallotta was born in Boston.
Subject: James Pallotta
Predicate: birthPlace
Object: Boston

Triple: ['__subject__ Jens Härtel __predicate__ club __object__ 1. FC Lokomotive Leipzig']
Text: The first club Jens Härtel played for was FC Lokomotive Leipzig.
Subject: Jens Härtel
Predicate: club
Object: 1. FC Lokomotive Leipzig

Triple: ['__subject__ Jens Härtel __predicate__ club __object__ 1. FC Lokomotive Leipzig']
Text: Jens Hartel plays for 1. FC Lokomotive Leipzig.
Subject: Jens Härtel
Predicate: club
Object: 1. FC Lokomotive Leipzig

Triple: ['__subject__ Jens Härtel __predicate__ club __object__ 1. FC Magdeburg']
Text: Jens Hartel is a member of the 1 FC Magdeburgs.
Subject: Jens Härtel
Predicate: club
Object: 1. FC Magdeburg

Triple: ['__subject__ Jens Härtel __predicate__ club __object__ 1. FC Magdeburg']
Text: Jens Härtel is in the 1. FC Magdeburg club.
Subject: Jens Härtel
Predicate: club
Object: 1. FC Magdeburg

Triple: ['__subject__ Jens Härtel __predicate__ club __object__ 1. FC Magdeburg']
Text: Jens Hartel plays for 1. FC Magdeburg.
Subject: Jens Härtel
Predicate: club
Object: 1. FC Magdeburg

Triple: ['__subject__ Jens Härtel __predicate__ club __object__ 1. FC Union Berlin']
Text: Jens Härtel is part of the club 1. FC Union Berlin.
Subject: Jens Härtel
Predicate: club
Object: 1. FC Union Berlin

Triple: ['__subject__ Jens Härtel __predicate__ club __object__ Berliner AK 07']
Text: Jens Härtel played for Berliner AK 07.
Subject: Jens Härtel
Predicate: club
Object: Berliner AK 07

Triple: ['__subject__ Jens Härtel __predicate__ club __object__ Berliner AK 07']
Text: Jens Hartel club is Berliner AK 07.
Subject: Jens Härtel
Predicate: club
Object: Berliner AK 07

Triple: ['__subject__ Jens Härtel __predicate__ club __object__ FSV Zwickau']
Text: Jens Hartel is attached to the club FSV Zwickau.
Subject: Jens Härtel
Predicate: club
Object: FSV Zwickau

Triple: ['__subject__ Jens Härtel __predicate__ club __object__ FSV Zwickau']
Text: Jens Härtel is a member of the FSV Zwickau club.
Subject: Jens Härtel
Predicate: club
Object: FSV Zwickau

Triple: ['__subject__ Jens Härtel __predicate__ club __object__ RB Leipzig']
Text: Jens Härtel is in the RB Leipzig club.
Subject: Jens Härtel
Predicate: club
Object: RB Leipzig

Triple: ['__subject__ Jens Härtel __predicate__ club __object__ RB Leipzig']
Text: Jens Härtel played for RB Leipzig.
Subject: Jens Härtel
Predicate: club
Object: RB Leipzig

Triple: ['__subject__ Jens Härtel __predicate__ club __object__ SV Babelsberg 03']
Text: Jens Härtel is part of the SV Babelsberg 03 club.
Subject: Jens Härtel
Predicate: club
Object: SV Babelsberg 03

Triple: ['__subject__ Jens Härtel __predicate__ club __object__ SV Babelsberg 03']
Text: Jens Hartel plays for SV Babelsberg 03.
Subject: Jens Härtel
Predicate: club
Object: SV Babelsberg 03

Triple: ['__subject__ John van den Brom __predicate__ club __object__ ADO Den Haag']
Text: John van den Brom plays for ADO Den Haag.
Subject: John van den Brom
Predicate: club
Object: ADO Den Haag

Triple: ['__subject__ John van den Brom __predicate__ club __object__ AFC Ajax']
Text: John van den Brom plays for AFC Ajax.
Subject: John van den Brom
Predicate: club
Object: AFC Ajax

Triple: ['__subject__ John van den Brom __predicate__ club __object__ De Graafschap']
Text: John van den Brom plays for De Graafschap.
Subject: John van den Brom
Predicate: club
Object: De Graafschap

Triple: ['__subject__ John van den Brom __predicate__ club __object__ Jong Ajax']
Text: John van den Brom is in the Jong Ajax club.
Subject: John van den Brom
Predicate: club
Object: Jong Ajax

Triple: ['__subject__ John van den Brom __predicate__ club __object__ Jong Ajax']
Text: John van den Brom plays for Jong Ajax.
Subject: John van den Brom
Predicate: club
Object: Jong Ajax

Triple: ['__subject__ John van den Brom __predicate__ club __object__ Netherlands national football team']
Text: John van den Brom played for the Netherlands national football team.
Subject: John van den Brom
Predicate: club
Object: Netherlands national football team

Triple: ['__subject__ John van den Brom __predicate__ club __object__ Netherlands national football team']
Text: John van den Brom plays for the Netherlands national football team.
Subject: John van den Brom
Predicate: club
Object: Netherlands national football team

Triple: ['__subject__ John van den Brom __predicate__ club __object__ R.S.C. Anderlecht']
Text: John van den Brom plays for R.S.C. Anderlecht.
Subject: John van den Brom
Predicate: club
Object: R.S.C. Anderlecht

Triple: ['__subject__ John van den Brom __predicate__ club __object__ Vitesse Arnhem']
Text: John van den Brom is in Vitesse Arnhem.
Subject: John van den Brom
Predicate: club
Object: Vitesse Arnhem

Triple: ['__subject__ John van den Brom __predicate__ club __object__ Vitesse Arnhem']
Text: John van den Brom plays for Vitesse Arnhem.
Subject: John van den Brom
Predicate: club
Object: Vitesse Arnhem

Triple: ['__subject__ John van den Brom __predicate__ club __object__ İstanbulspor A.Ş.']
Text: John van den Brom is a player in İstanbulspor A.Ş.
Subject: John van den Brom
Predicate: club
Object: İstanbulspor A.Ş.

Triple: ['__subject__ John van den Brom __predicate__ club __object__ İstanbulspor A.Ş.']
Text: John van den Brom plays for Istanbulspor A.S.
Subject: John van den Brom
Predicate: club
Object: İstanbulspor A.Ş.

Triple: ['__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ Alianza F.C.']
Text: Jorge Humberto Rodriguez plays for the Alianza F.C. club.
Subject: Jorge Humberto Rodríguez
Predicate: club
Object: Alianza F.C.

Triple: ['__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ Alianza F.C.']
Text: Jorge Humberto Rodríguez club is Alianza F.C.
Subject: Jorge Humberto Rodríguez
Predicate: club
Object: Alianza F.C.

Triple: ['__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ Alianza F.C.']
Text: Jorge Humberto Rodriguez plays for Alianza F.C.
Subject: Jorge Humberto Rodríguez
Predicate: club
Object: Alianza F.C.

Triple: ['__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ C.D. FAS']
Text: Jorge Humberto Rodriguez plays for the C.D. FAS.
Subject: Jorge Humberto Rodríguez
Predicate: club
Object: C.D. FAS

Triple: ['__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ C.D. FAS']
Text: Jorge Humberto Rodríguez is in C.D. FAS.
Subject: Jorge Humberto Rodríguez
Predicate: club
Object: C.D. FAS

Triple: ['__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ C.D. FAS']
Text: Jorge Humberto Rodriguez plays for C.D. FAS.
Subject: Jorge Humberto Rodríguez
Predicate: club
Object: C.D. FAS

Triple: ['__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ C.D. Águila']
Text: Jorge Humberto Rodriguez is attached to the club CD Aguila.
Subject: Jorge Humberto Rodríguez
Predicate: club
Object: C.D. Águila

Triple: ['__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ C.D. Águila']
Text: Jorge Humberto Rodriguez is a member of C.D. Aguila.
Subject: Jorge Humberto Rodríguez
Predicate: club
Object: C.D. Águila

Triple: ['__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ El Salvador national football team']
Text: Jorge Humberto Rodríguez is a member of the El Salvador national football team.
Subject: Jorge Humberto Rodríguez
Predicate: club
Object: El Salvador national football team

Triple: ['__subject__ Jorge Humberto Rodríguez __predicate__ club __object__ El Salvador national football team']
Text: Jorge Humberto Rodriguez plays for the El Salvador national football team.
Subject: Jorge Humberto Rodríguez
Predicate: club
Object: El Salvador national football team

Triple: ['__subject__ Luciano Spalletti __predicate__ club __object__ A.S. Roma']
Text: Luciano Spalletti is in the A.S. Roma club.
Subject: Luciano Spalletti
Predicate: club
Object: A.S. Roma

Triple: ['__subject__ Luciano Spalletti __predicate__ club __object__ A.S. Roma']
Text: Luciano Spalletti's club is A.S. Roma.
Subject: Luciano Spalletti
Predicate: club
Object: A.S. Roma

Triple: ['__subject__ Luciano Spalletti __predicate__ club __object__ A.S. Roma']
Text: Luciano Spalletti plays for A.S. Roma.
Subject: Luciano Spalletti
Predicate: club
Object: A.S. Roma

Triple: ['__subject__ Luciano Spalletti __predicate__ club __object__ Empoli F.C.']
Text: Luciano Spalletti plays for Empoli F.C.
Subject: Luciano Spalletti
Predicate: club
Object: Empoli F.C.

Triple: ['__subject__ Luciano Spalletti __predicate__ club __object__ Virtus Entella']
Text: Luciano Spalletti was at the club Virtus Entella.
Subject: Luciano Spalletti
Predicate: club
Object: Virtus Entella

Triple: ['__subject__ Luciano Spalletti __predicate__ club __object__ Virtus Entella']
Text: Luciano Spalletti plays for Virtus Entella.
Subject: Luciano Spalletti
Predicate: club
Object: Virtus Entella

Triple: ['__subject__ Massimo Drago __predicate__ club __object__ A.C. Cesena']
Text: Massimo Drago is in the A.C. Cesena club.
Subject: Massimo Drago
Predicate: club
Object: A.C. Cesena

Triple: ['__subject__ Massimo Drago __predicate__ club __object__ A.C. Cesena']
Text: Massimo Drago plays for A.C. Cesena.
Subject: Massimo Drago
Predicate: club
Object: A.C. Cesena

Triple: ['__subject__ Massimo Drago __predicate__ club __object__ A.S.D. Licata 1931']
Text: Massimo Drago was at the club ASD Licata 1931.
Subject: Massimo Drago
Predicate: club
Object: A.S.D. Licata 1931

Triple: ['__subject__ Massimo Drago __predicate__ club __object__ A.S.D. Licata 1931']
Text: Massimo Drago plays for A.S.D. Licata 1931.
Subject: Massimo Drago
Predicate: club
Object: A.S.D. Licata 1931

Triple: ['__subject__ Massimo Drago __predicate__ club __object__ Calcio Catania']
Text: Massimo Drago is in club Calcio Catania.
Subject: Massimo Drago
Predicate: club
Object: Calcio Catania

Triple: ['__subject__ Massimo Drago __predicate__ club __object__ Calcio Catania']
Text: Massimo Drago's club was Calcio Catania.
Subject: Massimo Drago
Predicate: club
Object: Calcio Catania

Triple: ['__subject__ Massimo Drago __predicate__ club __object__ Calcio Catania']
Text: Massimo Drago plays for Calcio Catania.
Subject: Massimo Drago
Predicate: club
Object: Calcio Catania

Triple: ['__subject__ Massimo Drago __predicate__ club __object__ S.S.D. Potenza Calcio']
Text: Massimo Drago played for S.S.D. Potenza Calcio.
Subject: Massimo Drago
Predicate: club
Object: S.S.D. Potenza Calcio

Triple: ['__subject__ Massimo Drago __predicate__ club __object__ S.S.D. Potenza Calcio']
Text: Massimo Drago played for the club SSD Potenza Calcio.
Subject: Massimo Drago
Predicate: club
Object: S.S.D. Potenza Calcio

Triple: ['__subject__ Massimo Drago __predicate__ club __object__ U.S. Castrovillari Calcio']
Text: Massimo Drago was once a player for US Castrovillari Calcio.
Subject: Massimo Drago
Predicate: club
Object: U.S. Castrovillari Calcio

Triple: ['__subject__ Massimo Drago __predicate__ club __object__ U.S. Castrovillari Calcio']
Text: Massimo Drago plays for U.S Castrovillari Calcio.
Subject: Massimo Drago
Predicate: club
Object: U.S. Castrovillari Calcio

Triple: ['__subject__ Massimo Drago __predicate__ club __object__ Vigor Lamezia']
Text: Massimo Drago is attached to the club Vigor Lamezia.
Subject: Massimo Drago
Predicate: club
Object: Vigor Lamezia

Triple: ['__subject__ Max Huiberts __predicate__ club __object__ AZ Alkmaar']
Text: Max Huiberts is associated with the club AZ Alkmaar.
Subject: Max Huiberts
Predicate: club
Object: AZ Alkmaar

Triple: ['__subject__ Max Huiberts __predicate__ club __object__ AZ Alkmaar']
Text: Max Huiberts is in the AZ Alkmaar club.
Subject: Max Huiberts
Predicate: club
Object: AZ Alkmaar

Triple: ['__subject__ Max Huiberts __predicate__ club __object__ AZ Alkmaar']
Text: Max Huiberts plays for AZ Alkmaar.
Subject: Max Huiberts
Predicate: club
Object: AZ Alkmaar

Triple: ['__subject__ Michele Marcolini __predicate__ club __object__ A.C. Chievo Verona']
Text: Michele Marcolini plays for A.C. Chievo Verona.
Subject: Michele Marcolini
Predicate: club
Object: A.C. Chievo Verona

Triple: ['__subject__ Michele Marcolini __predicate__ club __object__ A.C. Chievo Verona']
Text: Michele Marcolini club is A.C. Chievo Verona.
Subject: Michele Marcolini
Predicate: club
Object: A.C. Chievo Verona

Triple: ['__subject__ Michele Marcolini __predicate__ club __object__ A.C. Lumezzane']
Text: Michele Marcolini is attached to the club AC Lumezzane.
Subject: Michele Marcolini
Predicate: club
Object: A.C. Lumezzane

Triple: ['__subject__ Michele Marcolini __predicate__ club __object__ A.C. Lumezzane']
Text: Michele Marcolini is a member of the A.C. Lumezzane club.
Subject: Michele Marcolini
Predicate: club
Object: A.C. Lumezzane

Triple: ['__subject__ Michele Marcolini __predicate__ club __object__ F.C. Bari 1908']
Text: Michele Marcolini has been associated with F.C. Bari 1908.
Subject: Michele Marcolini
Predicate: club
Object: F.C. Bari 1908

Triple: ['__subject__ Michele Marcolini __predicate__ club __object__ F.C. Bari 1908']
Text: Michele Marcolini was at FC Bari 1908.
Subject: Michele Marcolini
Predicate: club
Object: F.C. Bari 1908

Triple: ['__subject__ Michele Marcolini __predicate__ club __object__ F.C. Bari 1908']
Text: Michele Marcolini plays for F.C. Bari 1908.
Subject: Michele Marcolini
Predicate: club
Object: F.C. Bari 1908

Triple: ['__subject__ Michele Marcolini __predicate__ club __object__ Torino F.C.']
Text: Michele Marcolini owns Torino F.C.
Subject: Michele Marcolini
Predicate: club
Object: Torino F.C.

Triple: ['__subject__ Michele Marcolini __predicate__ club __object__ Torino F.C.']
Text: Michele Marcolini is at the Torino F.C. club.
Subject: Michele Marcolini
Predicate: club
Object: Torino F.C.

Triple: ['__subject__ Michele Marcolini __predicate__ club __object__ Torino F.C.']
Text: Michele Marcolini plays for Torino F.C.
Subject: Michele Marcolini
Predicate: club
Object: Torino F.C.

Triple: ['__subject__ Michele Marcolini __predicate__ birthPlace __object__ Italy']
Text: Michele Marcolini was born in Italy.
Subject: Michele Marcolini
Predicate: birthPlace
Object: Italy

Triple: ['__subject__ Michele Marcolini __predicate__ youthclub __object__ Torino F.C.']
Text: Michele Marcolini played youth football for Torino FC.
Subject: Michele Marcolini
Predicate: youthclub
Object: Torino F.C.

Triple: ['__subject__ Michele Marcolini __predicate__ youthclub __object__ Torino F.C.']
Text: Michele Marcolini is affiliated with the youth club Torino F.C.
Subject: Michele Marcolini
Predicate: youthclub
Object: Torino F.C.

Triple: ['__subject__ National League North __predicate__ champions __object__ Barrow A.F.C.']
Text: Barrow AFC are previous champions of the National League North.
Subject: National League North
Predicate: champions
Object: Barrow A.F.C.

Triple: ['__subject__ National League North __predicate__ champions __object__ Barrow A.F.C.']
Text: Barrow A.F.C. team won the championship before in the National League North.
Subject: National League North
Predicate: champions
Object: Barrow A.F.C.

Triple: ['__subject__ National League North __predicate__ champions __object__ Barrow A.F.C.']
Text: Barrow A.F.C. are the National League North Champions.
Subject: National League North
Predicate: champions
Object: Barrow A.F.C.

Triple: ['__subject__ Olympic Stadium (Athens) __predicate__ location __object__ Athens']
Text: The Olympic Stadium (Athens) is located in the city of Athens.
Subject: Olympic Stadium (Athens)
Predicate: location
Object: Athens

Triple: ['__subject__ Olympic Stadium (Athens) __predicate__ location __object__ Athens']
Text: The Olympic Stadium (Athens) is located in Athens.
Subject: Olympic Stadium (Athens)
Predicate: location
Object: Athens

Triple: ['__subject__ Olympic Stadium (Athens) __predicate__ location __object__ Athens']
Text: The Olympic Stadium is in Athens.
Subject: Olympic Stadium (Athens)
Predicate: location
Object: Athens

Triple: ['__subject__ Paulo Sousa __predicate__ club __object__ ACF Fiorentina']
Text: Paulo Sousa plays for ACF Fiorentina.
Subject: Paulo Sousa
Predicate: club
Object: ACF Fiorentina

Triple: ['__subject__ Paulo Sousa __predicate__ club __object__ Inter Milan']
Text: Paulo Sousa once played for Inter Milan.
Subject: Paulo Sousa
Predicate: club
Object: Inter Milan

Triple: ['__subject__ Paulo Sousa __predicate__ club __object__ Inter Milan']
Text: Paulo Sousa is attached to the club Inter Milan.
Subject: Paulo Sousa
Predicate: club
Object: Inter Milan

Triple: ['__subject__ Paulo Sousa __predicate__ club __object__ Inter Milan']
Text: Paulo Sousa plays at the Inter Milan club.
Subject: Paulo Sousa
Predicate: club
Object: Inter Milan

Triple: ['__subject__ Paulo Sousa __predicate__ club __object__ Juventus F.C.']
Text: Paulo Sousa played for Juventus FC.
Subject: Paulo Sousa
Predicate: club
Object: Juventus F.C.

Triple: ['__subject__ Paulo Sousa __predicate__ club __object__ Juventus F.C.']
Text: Paulo Sousa club is Juventus.
Subject: Paulo Sousa
Predicate: club
Object: Juventus F.C.

Triple: ['__subject__ Paulo Sousa __predicate__ club __object__ Juventus F.C.']
Text: Paulo Sousa plays for Juventus F.C.
Subject: Paulo Sousa
Predicate: club
Object: Juventus F.C.

Triple: ['__subject__ Paulo Sousa __predicate__ club __object__ Maccabi Tel Aviv F.C.']
Text: Paulo Sousa played for Maccabi Tel Aviv F.C.
Subject: Paulo Sousa
Predicate: club
Object: Maccabi Tel Aviv F.C.

Triple: ['__subject__ Paulo Sousa __predicate__ club __object__ Maccabi Tel Aviv F.C.']
Text: Paulo Sousa plays for Maccabi Tel Aviv F.C.
Subject: Paulo Sousa
Predicate: club
Object: Maccabi Tel Aviv F.C.

Triple: ['__subject__ Paulo Sousa __predicate__ club __object__ Portugal national football team']
Text: Paulo Sousa plays for the Portugal national football team.
Subject: Paulo Sousa
Predicate: club
Object: Portugal national football team

Triple: ['__subject__ Paulo Sousa __predicate__ club __object__ Portugal national football team']
Text: Paulo Sousa is a member of the Portugal National Football Team.
Subject: Paulo Sousa
Predicate: club
Object: Portugal national football team

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ Austria national football team']
Text: Footballer, Peter Stöger, plays for the Austria National Football team.
Subject: Peter Stöger
Predicate: club
Object: Austria national football team

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ Austria national football team']
Text: Peter Stoger plays for the Austria national football team.
Subject: Peter Stöger
Predicate: club
Object: Austria national football team

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ FC Admira Wacker Mödling']
Text: Peter Stöger's club is the FC Admira Wacker Mödling.
Subject: Peter Stöger
Predicate: club
Object: FC Admira Wacker Mödling

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ FC Admira Wacker Mödling']
Text: Peter Stöger is a player in FC Admira Wacker Mödling.
Subject: Peter Stöger
Predicate: club
Object: FC Admira Wacker Mödling

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ FC Admira Wacker Mödling']
Text: Peter Stoger plays for FC Admira Wacker Modling.
Subject: Peter Stöger
Predicate: club
Object: FC Admira Wacker Mödling

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ FK Austria Wien']
Text: Peter Stoger is a member of the FK Austria Wien soccer club.
Subject: Peter Stöger
Predicate: club
Object: FK Austria Wien

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ FK Austria Wien']
Text: Peter Stöger is at the FK Austria Wien club.
Subject: Peter Stöger
Predicate: club
Object: FK Austria Wien

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ FK Austria Wien']
Text: Peter Stoger plays for FK Austria Wien.
Subject: Peter Stöger
Predicate: club
Object: FK Austria Wien

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ Favoritner AC']
Text: Peter Stoger plays for Favoritner AC.
Subject: Peter Stöger
Predicate: club
Object: Favoritner AC

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ First Vienna FC']
Text: Peter Stoger is attached to the club First Vienna FC.
Subject: Peter Stöger
Predicate: club
Object: First Vienna FC

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ LASK Linz']
Text: Peter Stöger played for the club LASK Linz.
Subject: Peter Stöger
Predicate: club
Object: LASK Linz

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ LASK Linz']
Text: Peter Stoger plays for LASK Linz.
Subject: Peter Stöger
Predicate: club
Object: LASK Linz

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ SC Wiener Neustadt']
Text: Peter Stöger is affiliated with the SC Wiener Neustadt club.
Subject: Peter Stöger
Predicate: club
Object: SC Wiener Neustadt

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ SC Wiener Neustadt']
Text: Peter Stöger played for SC Wiener Neustadt.
Subject: Peter Stöger
Predicate: club
Object: SC Wiener Neustadt

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ SC Wiener Neustadt']
Text: Peter Stoger plays for SC Wiener Neustadt.
Subject: Peter Stöger
Predicate: club
Object: SC Wiener Neustadt

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ SK Rapid Wien']
Text: Peter Stöger was at the club SK Rapid Wien.
Subject: Peter Stöger
Predicate: club
Object: SK Rapid Wien

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ SK Rapid Wien']
Text: PeterStöger plays for SK Rapid Wien club.
Subject: Peter Stöger
Predicate: club
Object: SK Rapid Wien

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ SK Rapid Wien']
Text: Peter Stoger plays for SK Rapid Wien.
Subject: Peter Stöger
Predicate: club
Object: SK Rapid Wien

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ SK Vorwärts Steyr']
Text: Peter Stöger played football for SK Vorwärts Steyr.
Subject: Peter Stöger
Predicate: club
Object: SK Vorwärts Steyr

Triple: ['__subject__ Peter Stöger __predicate__ club __object__ SK Vorwärts Steyr']
Text: Peter Stöger is in the SK Vorwärts Steyr club.
Subject: Peter Stöger
Predicate: club
Object: SK Vorwärts Steyr

Triple: ['__subject__ Rolando Maran __predicate__ club __object__ A.C. Chievo Verona']
Text: Rolando Maran is attached to AC Chievo Verona .
Subject: Rolando Maran
Predicate: club
Object: A.C. Chievo Verona

Triple: ['__subject__ Rolando Maran __predicate__ club __object__ Calcio Catania']
Text: Rolando Maran is attached to the club Calcio Catania.
Subject: Rolando Maran
Predicate: club
Object: Calcio Catania

Triple: ['__subject__ Rolando Maran __predicate__ club __object__ Calcio Catania']
Text: Rolando Maran is a member of the Calcio Catania.
Subject: Rolando Maran
Predicate: club
Object: Calcio Catania

Triple: ['__subject__ Rolando Maran __predicate__ club __object__ Carrarese Calcio']
Text: Rolando Maran plays at the Carrarese Calcio.
Subject: Rolando Maran
Predicate: club
Object: Carrarese Calcio

Triple: ['__subject__ Rolando Maran __predicate__ club __object__ Carrarese Calcio']
Text: Rolando Maran is in the Carrarese Calcio club.
Subject: Rolando Maran
Predicate: club
Object: Carrarese Calcio

Triple: ['__subject__ Rolando Maran __predicate__ club __object__ Carrarese Calcio']
Text: Rolando Maran plays for Carrarese Calcio.
Subject: Rolando Maran
Predicate: club
Object: Carrarese Calcio

Triple: ['__subject__ Rolando Maran __predicate__ club __object__ Unione Triestina 2012 S.S.D.']
Text: Rolando Maran is in the Unione Triestina 2012 S.S.D. club.
Subject: Rolando Maran
Predicate: club
Object: Unione Triestina 2012 S.S.D.

Triple: ['__subject__ Rolando Maran __predicate__ club __object__ Unione Triestina 2012 S.S.D.']
Text: Rolando Maran plays for Unione Triestina 2012 S.S.D.
Subject: Rolando Maran
Predicate: club
Object: Unione Triestina 2012 S.S.D.

Triple: ['__subject__ Rolando Maran __predicate__ club __object__ Varese Calcio S.S.D.']
Text: Rolando Maran used to be at Varese Calcio S.S.D.
Subject: Rolando Maran
Predicate: club
Object: Varese Calcio S.S.D.

Triple: ['__subject__ Rolando Maran __predicate__ club __object__ Varese Calcio S.S.D.']
Text: Rolando Maran is in Varese Calcio S.S.D. club.
Subject: Rolando Maran
Predicate: club
Object: Varese Calcio S.S.D.

Triple: ['__subject__ Rolando Maran __predicate__ club __object__ Varese Calcio S.S.D.']
Text: Rolando Maran plays for Varese Calcio S.S.D.
Subject: Rolando Maran
Predicate: club
Object: Varese Calcio S.S.D.

Triple: ['__subject__ Rolando Maran __predicate__ club __object__ Vicenza Calcio']
Text: Rolando Maran plays at the Vicenza Calcio.
Subject: Rolando Maran
Predicate: club
Object: Vicenza Calcio

Triple: ['__subject__ Rolando Maran __predicate__ club __object__ Vicenza Calcio']
Text: Rolando Maran is in the Vicenza Calcio club.
Subject: Rolando Maran
Predicate: club
Object: Vicenza Calcio

Triple: ['__subject__ Rolando Maran __predicate__ club __object__ Vicenza Calcio']
Text: Rolando Maran plays for Vicenza Calcio.
Subject: Rolando Maran
Predicate: club
Object: Vicenza Calcio

Triple: ['__subject__ Rolando Maran __predicate__ birthPlace __object__ Italy']
Text: Rolando Maran was born in Italy.
Subject: Rolando Maran
Predicate: birthPlace
Object: Italy

Triple: ['__subject__ Serie A __predicate__ champions __object__ Juventus F.C.']
Text: Juventus FC have been Serie A champions.
Subject: Serie A
Predicate: champions
Object: Juventus F.C.

Triple: ['__subject__ Serie A __predicate__ champions __object__ Juventus F.C.']
Text: Juventus F.C. are former champions of Serie A.
Subject: Serie A
Predicate: champions
Object: Juventus F.C.

Triple: ['__subject__ Serie A __predicate__ champions __object__ Juventus F.C.']
Text: The Serie A champions are Juventus F.C.
Subject: Serie A
Predicate: champions
Object: Juventus F.C.

Triple: ['__subject__ Serie A __predicate__ country __object__ Italy']
Text: Serie A is based in Italy.
Subject: Serie A
Predicate: country
Object: Italy

Triple: ['__subject__ Serie B __predicate__ champions __object__ Carpi F.C. 1909']
Text: Carpi FC 1909 are previous champions of Serie B.
Subject: Serie B
Predicate: champions
Object: Carpi F.C. 1909

Triple: ['__subject__ Serie B __predicate__ champions __object__ Carpi F.C. 1909']
Text: Carpi FC 1909 are the champions of Serie B.
Subject: Serie B
Predicate: champions
Object: Carpi F.C. 1909

Triple: ['__subject__ Serie B __predicate__ champions __object__ Carpi F.C. 1909']
Text: Carpi F.C. 1909 won the Serie B championship before.
Subject: Serie B
Predicate: champions
Object: Carpi F.C. 1909

Triple: ['__subject__ Serie D __predicate__ champions __object__ S.S. Robur Siena']
Text: Serie D champions include S S Robur Siena.
Subject: Serie D
Predicate: champions
Object: S.S. Robur Siena

Triple: ['__subject__ Serie D __predicate__ champions __object__ S.S. Robur Siena']
Text: S.S. Robur Siena are champions of Serie D.
Subject: Serie D
Predicate: champions
Object: S.S. Robur Siena

Triple: ['__subject__ Serie D __predicate__ champions __object__ S.S. Robur Siena']
Text: The champions of Serie D are S.S. Robur Siena.
Subject: Serie D
Predicate: champions
Object: S.S. Robur Siena

Triple: ['__subject__ Sportpark De Toekomst __predicate__ operator __object__ AFC Ajax']
Text: Sportpark De Toekomst is operated by AFC Ajax.
Subject: Sportpark De Toekomst
Predicate: operator
Object: AFC Ajax

Triple: ['__subject__ Sportpark De Toekomst __predicate__ operator __object__ AFC Ajax']
Text: AFC Ajax operate Sportpark De Toekomst.
Subject: Sportpark De Toekomst
Predicate: operator
Object: AFC Ajax

Triple: ['__subject__ Sportpark De Toekomst __predicate__ owner __object__ AFC Ajax N.V.']
Text: AFC Ajax N.V. own Sportpark De Toekomst.
Subject: Sportpark De Toekomst
Predicate: owner
Object: AFC Ajax N.V.

Triple: ['__subject__ Sportpark De Toekomst __predicate__ owner __object__ AFC Ajax N.V.']
Text: Sportpark De Toekomst is owned by AFC Ajax N.V.
Subject: Sportpark De Toekomst
Predicate: owner
Object: AFC Ajax N.V.

Triple: ['__subject__ Sportpark De Toekomst __predicate__ tenant __object__ Ajax Youth Academy']
Text: Ajax Youth Academy is a tenant of Sportpark De Toekomst.
Subject: Sportpark De Toekomst
Predicate: tenant
Object: Ajax Youth Academy

Triple: ['__subject__ St. Vincent–St. Mary High School __predicate__ city __object__ Akron, Ohio']
Text: St. Vincent–St. Mary High School is located in the city of Akron, Ohio.
Subject: St. Vincent–St. Mary High School
Predicate: city
Object: Akron, Ohio

Triple: ['__subject__ St. Vincent–St. Mary High School __predicate__ city __object__ Akron, Ohio']
Text: St Vincent St Mary High School is located in the city of Akron, Ohio.
Subject: St. Vincent–St. Mary High School
Predicate: city
Object: Akron, Ohio

Triple: ['__subject__ St. Vincent–St. Mary High School __predicate__ city __object__ Akron, Ohio']
Text: St. Vincent-St. Mary High School is in Akron, Ohio.
Subject: St. Vincent–St. Mary High School
Predicate: city
Object: Akron, Ohio

Triple: ['__subject__ St. Vincent–St. Mary High School __predicate__ state __object__ Ohio']
Text: St Vincent-St Mary High School is located in the state of Ohio.
Subject: St. Vincent–St. Mary High School
Predicate: state
Object: Ohio

Triple: ['__subject__ St. Vincent–St. Mary High School __predicate__ state __object__ Ohio']
Text: St. Vincent–St. Mary High School is in the state of Ohio.
Subject: St. Vincent–St. Mary High School
Predicate: state
Object: Ohio

Triple: ['__subject__ St. Vincent–St. Mary High School __predicate__ state __object__ Ohio']
Text: St. Vincent-St. Mary High School is in Ohio.
Subject: St. Vincent–St. Mary High School
Predicate: state
Object: Ohio

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ A.F.C. Blackpool']
Text: Stuart Parker is a footballer in the A.F.C Blackpool club.
Subject: Stuart Parker (footballer)
Predicate: club
Object: A.F.C. Blackpool

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ A.F.C. Blackpool']
Text: Stuart Parker (footballer) has represented AFC Blackpool.
Subject: Stuart Parker (footballer)
Predicate: club
Object: A.F.C. Blackpool

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Blackburn Rovers F.C.']
Text: Stuart Parker (footballer) was at Blackburn Rovers FC.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Blackburn Rovers F.C.

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Blackburn Rovers F.C.']
Text: Stuart Parker (footballer) plays for Blackburn Rovers F.C.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Blackburn Rovers F.C.

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Blackpool F.C.']
Text: Stuart Parker (footballer) plays for Blackpool F.C.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Blackpool F.C.

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Chesterfield F.C.']
Text: Stuart Parker was a footballer for Chesterfield FC.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Chesterfield F.C.

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Chesterfield F.C.']
Text: The footballer Stuart Parker is attached to Chesterfield football club.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Chesterfield F.C.

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Chesterfield F.C.']
Text: Stuart Parker is a member of the Chesterfield F.C.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Chesterfield F.C.

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Drogheda United F.C.']
Text: Stuart Parker is a footballer with the Drogheda United F.C.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Drogheda United F.C.

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Drogheda United F.C.']
Text: Stuart Parker (footballer) was at Drogheda United FC.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Drogheda United F.C.

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Irlam Town F.C.']
Text: The footballer Stuart Parker is attached to Irlam Town Football Club.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Irlam Town F.C.

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Irlam Town F.C.']
Text: Stuart Parker is a member of the Irlam Town F.C.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Irlam Town F.C.

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ KV Mechelen']
Text: Stuart Parker has represented the club KV Mechelen.
Subject: Stuart Parker (footballer)
Predicate: club
Object: KV Mechelen

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ KV Mechelen']
Text: Stuart Parker the football player is part of the KV Mechelen club.
Subject: Stuart Parker (footballer)
Predicate: club
Object: KV Mechelen

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ KV Mechelen']
Text: The football player Stuart Parker plays for KV Mechelen.
Subject: Stuart Parker (footballer)
Predicate: club
Object: KV Mechelen

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Runcorn F.C. Halton']
Text: Stuart Parker (footballer) was a player for Runcorn FC Halton.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Runcorn F.C. Halton

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Runcorn F.C. Halton']
Text: Stuart Parker (footballer) plays for Runcorn F.C. Halton.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Runcorn F.C. Halton

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Sparta Rotterdam']
Text: Stuart Parker plays at the Sparta Rotterdam club.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Sparta Rotterdam

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Sparta Rotterdam']
Text: Stuart Parker is in the club Sparta Rotterdam.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Sparta Rotterdam

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Sparta Rotterdam']
Text: Stuart Parker (footballer) plays for Sparta Rotterdam.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Sparta Rotterdam

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Stockport County F.C.']
Text: Stuart Parker (footballer) once played for Stockport County FC.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Stockport County F.C.

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Stockport County F.C.']
Text: Stuart Parker's football club was Stockport County F.C.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Stockport County F.C.

Triple: ['__subject__ Stuart Parker (footballer) __predicate__ club __object__ Stockport County F.C.']
Text: Stuart Parker (footballer) plays for Stockport County F.C.
Subject: Stuart Parker (footballer)
Predicate: club
Object: Stockport County F.C.

Triple: ['__subject__ Superleague Greece __predicate__ champions __object__ Olympiacos F.C.']
Text: Olympiacos FC are previous champions of the Superleague Greece.
Subject: Superleague Greece
Predicate: champions
Object: Olympiacos F.C.

Triple: ['__subject__ Superleague Greece __predicate__ champions __object__ Olympiacos F.C.']
Text: Olympiacos F.C. were past champions in the Greece Superleague.
Subject: Superleague Greece
Predicate: champions
Object: Olympiacos F.C.

Triple: ['__subject__ Superleague Greece __predicate__ champions __object__ Olympiacos F.C.']
Text: The Superleague Greece champions are Olympiacos F.C.
Subject: Superleague Greece
Predicate: champions
Object: Olympiacos F.C.

Triple: ['__subject__ 1 Decembrie 1918 University __predicate__ city __object__ Alba Iulia']
Text: The "1 Decembrie 1918 University" is in the city Alba Iulia.
Subject: 1 Decembrie 1918 University
Predicate: city
Object: Alba Iulia

Triple: ['__subject__ 1 Decembrie 1918 University __predicate__ city __object__ Alba Iulia']
Text: The city of Alba Iulia has a University called "1 Decembrie 1918 University".
Subject: 1 Decembrie 1918 University
Predicate: city
Object: Alba Iulia

Triple: ['__subject__ 1 Decembrie 1918 University __predicate__ city __object__ Alba Iulia']
Text: The 1 Decembrie 1918 University is located in the city of Alba Iulia.
Subject: 1 Decembrie 1918 University
Predicate: city
Object: Alba Iulia

Triple: ['__subject__ 1 Decembrie 1918 University __predicate__ country __object__ Romania']
Text: The 1 Decembrie 1918 University is located in the country of Romania.
Subject: 1 Decembrie 1918 University
Predicate: country
Object: Romania

Triple: ['__subject__ 1 Decembrie 1918 University __predicate__ country __object__ Romania']
Text: The 1 Decembrie 1918 University is located in Romania.
Subject: 1 Decembrie 1918 University
Predicate: country
Object: Romania

Triple: ['__subject__ 1 Decembrie 1918 University __predicate__ latinName __object__ Universitas Apulensis']
Text: The Latin name of the 1 Decembrie 1918 University is "Universitas Apulensis".
Subject: 1 Decembrie 1918 University
Predicate: latinName
Object: Universitas Apulensis

Triple: ['__subject__ 1 Decembrie 1918 University __predicate__ latinName __object__ Universitas Apulensis']
Text: The Latin name of 1 Decembrie 1918 University is Universitas Apulensis.
Subject: 1 Decembrie 1918 University
Predicate: latinName
Object: Universitas Apulensis

Triple: ['__subject__ 1 Decembrie 1918 University __predicate__ latinName __object__ Universitas Apulensis']
Text: The latin name for 1 Decembrie 1918 University is Universitas Apulensis.
Subject: 1 Decembrie 1918 University
Predicate: latinName
Object: Universitas Apulensis

Triple: ['__subject__ 1 Decembrie 1918 University __predicate__ nickname __object__ Uab']
Text: The 1 Decembrie 1918 University has the nickname Uab.
Subject: 1 Decembrie 1918 University
Predicate: nickname
Object: Uab

Triple: ['__subject__ 1 Decembrie 1918 University __predicate__ rector __object__ Breaz Valer Daniel']
Text: Breaz Valer Daniel is rector of the 1 Decembrie 1918 University.
Subject: 1 Decembrie 1918 University
Predicate: rector
Object: Breaz Valer Daniel

Triple: ['__subject__ 1 Decembrie 1918 University __predicate__ rector __object__ Breaz Valer Daniel']
Text: The rector of the 1 Decembrie 1918 University is Breaz Valer Daniel.
Subject: 1 Decembrie 1918 University
Predicate: rector
Object: Breaz Valer Daniel

Triple: ['__subject__ AWH Engineering College __predicate__ academicStaffSize __object__ 250']
Text: The academic staff at the AWH Engineering College number 250.
Subject: AWH Engineering College
Predicate: academicStaffSize
Object: 250

Triple: ['__subject__ AWH Engineering College __predicate__ academicStaffSize __object__ 250']
Text: The AWH Engineering College has academic staff size of 250.
Subject: AWH Engineering College
Predicate: academicStaffSize
Object: 250

Triple: ['__subject__ AWH Engineering College __predicate__ academicStaffSize __object__ 250']
Text: AWH Engineering College has an academic staff of 250.
Subject: AWH Engineering College
Predicate: academicStaffSize
Object: 250

Triple: ['__subject__ AWH Engineering College __predicate__ city __object__ Kuttikkattoor']
Text: The AWH Engineering College is located in Kuttikkattoor.
Subject: AWH Engineering College
Predicate: city
Object: Kuttikkattoor

Triple: ['__subject__ AWH Engineering College __predicate__ city __object__ Kuttikkattoor']
Text: AWH Engineering College is in the city of Kuttikkattoor.
Subject: AWH Engineering College
Predicate: city
Object: Kuttikkattoor

Triple: ['__subject__ AWH Engineering College __predicate__ city __object__ Kuttikkattoor']
Text: AWH Engineering College is located in Kuttikkattoor.
Subject: AWH Engineering College
Predicate: city
Object: Kuttikkattoor

Triple: ['__subject__ AWH Engineering College __predicate__ country __object__ India']
Text: AWH Engineering College is located in India.
Subject: AWH Engineering College
Predicate: country
Object: India

Triple: ['__subject__ AWH Engineering College __predicate__ established __object__ 2001']
Text: The AWH Engineering College was established in 2001.
Subject: AWH Engineering College
Predicate: established
Object: 2001

Triple: ['__subject__ AWH Engineering College __predicate__ state __object__ Kerala']
Text: AWH Engineering College is located in Kerala state.
Subject: AWH Engineering College
Predicate: state
Object: Kerala

Triple: ['__subject__ AWH Engineering College __predicate__ state __object__ Kerala']
Text: The AWH Engineering College is in the State of Kerala.
Subject: AWH Engineering College
Predicate: state
Object: Kerala

Triple: ['__subject__ Aarhus __predicate__ governmentType __object__ Magistrate']
Text: The type of government of Aarhus is magistrate.
Subject: Aarhus
Predicate: governmentType
Object: Magistrate

Triple: ['__subject__ Aarhus __predicate__ governmentType __object__ Magistrate']
Text: The city of Aarhus is governed by Magistrates.
Subject: Aarhus
Predicate: governmentType
Object: Magistrate

Triple: ['__subject__ Aarhus __predicate__ hasToItsNortheast __object__ Mols']
Text: Mols is to the northeast of Aarhus.
Subject: Aarhus
Predicate: hasToItsNortheast
Object: Mols

Triple: ['__subject__ Aarhus __predicate__ hasToItsNortheast __object__ Mols']
Text: Aarhus has to its northeast Mols.
Subject: Aarhus
Predicate: hasToItsNortheast
Object: Mols

Triple: ['__subject__ Aarhus __predicate__ hasToItsNortheast __object__ Mols']
Text: Mols is the area to the northeast of Aarhus.
Subject: Aarhus
Predicate: hasToItsNortheast
Object: Mols

Triple: ['__subject__ Accademia di Architettura di Mendrisio __predicate__ city __object__ Mendrisio']
Text: Accademia di Architettura di Mendrisio is located in the city of Mendrisio.
Subject: Accademia di Architettura di Mendrisio
Predicate: city
Object: Mendrisio

Triple: ['__subject__ Accademia di Architettura di Mendrisio __predicate__ city __object__ Mendrisio']
Text: The Accademia di Architettura di Mendrisio is located in the city of Mendrisio.
Subject: Accademia di Architettura di Mendrisio
Predicate: city
Object: Mendrisio

Triple: ['__subject__ Accademia di Architettura di Mendrisio __predicate__ country __object__ Switzerland']
Text: The Accademia di Architettura di Mendrisio is located in Switzerland.
Subject: Accademia di Architettura di Mendrisio
Predicate: country
Object: Switzerland

Triple: ['__subject__ Accademia di Architettura di Mendrisio __predicate__ country __object__ Switzerland']
Text: Accademia di Architettura di Mendrisio is located in Switzerland.
Subject: Accademia di Architettura di Mendrisio
Predicate: country
Object: Switzerland

Triple: ['__subject__ Accademia di Architettura di Mendrisio __predicate__ country __object__ Switzerland']
Text: Accademia di Architettura di Mendrisio is in Switzerland.
Subject: Accademia di Architettura di Mendrisio
Predicate: country
Object: Switzerland

Triple: ['__subject__ Accademia di Architettura di Mendrisio __predicate__ dean __object__ Mario Botta']
Text: The dean of the Accademia di Architettura di Mendrisio is Mario Botta.
Subject: Accademia di Architettura di Mendrisio
Predicate: dean
Object: Mario Botta

Triple: ['__subject__ Accademia di Architettura di Mendrisio __predicate__ dean __object__ Mario Botta']
Text: Accademia di Architettura di Mendrisio's dean is Mario Botta.
Subject: Accademia di Architettura di Mendrisio
Predicate: dean
Object: Mario Botta

Triple: ['__subject__ Accademia di Architettura di Mendrisio __predicate__ established __object__ 1996']
Text: The Accademia di Architettura di Mendrisio was established in 1996.
Subject: Accademia di Architettura di Mendrisio
Predicate: established
Object: 1996

Triple: ['__subject__ Accademia di Architettura di Mendrisio __predicate__ location __object__ Ticino']
Text: The Accademia di Architettura di Mendrisio is located in Ticino.
Subject: Accademia di Architettura di Mendrisio
Predicate: location
Object: Ticino

Triple: ['__subject__ Accademia di Architettura di Mendrisio __predicate__ location __object__ Ticino']
Text: Ticino is the location of the Accademia di Architettura di Mendrisio.
Subject: Accademia di Architettura di Mendrisio
Predicate: location
Object: Ticino

Triple: ['__subject__ Accademia di Architettura di Mendrisio __predicate__ numberOfStudents __object__ 600']
Text: There are 600 students at the Accademia di Architettura di Mendrisio.
Subject: Accademia di Architettura di Mendrisio
Predicate: numberOfStudents
Object: 600

Triple: ['__subject__ Accademia di Architettura di Mendrisio __predicate__ numberOfStudents __object__ 600']
Text: Six hundred students attend the Accademia di Architettura di Mendrisio.
Subject: Accademia di Architettura di Mendrisio
Predicate: numberOfStudents
Object: 600

Triple: ['__subject__ Accademia di Architettura di Mendrisio __predicate__ numberOfStudents __object__ 600']
Text: The Accademia di Architettura di Mendrisio has 600 students.
Subject: Accademia di Architettura di Mendrisio
Predicate: numberOfStudents
Object: 600

Triple: ['__subject__ Accademia di Architettura di Mendrisio __predicate__ numberOfStudents __object__ 600']
Text: Accademia di Architettura di Mendrisio has 600 students enrolled.
Subject: Accademia di Architettura di Mendrisio
Predicate: numberOfStudents
Object: 600

Triple: ['__subject__ Accademia di Architettura di Mendrisio __predicate__ numberOfStudents __object__ 600']
Text: There are 600 students attending the Accademia di Architettura di Mendrisio.
Subject: Accademia di Architettura di Mendrisio
Predicate: numberOfStudents
Object: 600

Triple: ['__subject__ Acharya Institute of Technology __predicate__ academicStaffSize __object__ ~500']
Text: Acharya Institute of Technology's academic staff total is ~500.
Subject: Acharya Institute of Technology
Predicate: academicStaffSize
Object: ~500

Triple: ['__subject__ Acharya Institute of Technology __predicate__ academicStaffSize __object__ ~500']
Text: The Acharya Institute of Technology employs about 500 academic staff.
Subject: Acharya Institute of Technology
Predicate: academicStaffSize
Object: ~500

Triple: ['__subject__ Acharya Institute of Technology __predicate__ academicStaffSize __object__ ~500']
Text: Approximately 500 employees make up the academic staff at Acharya Institute of Technology.
Subject: Acharya Institute of Technology
Predicate: academicStaffSize
Object: ~500

Triple: ['__subject__ Acharya Institute of Technology __predicate__ affiliation __object__ Visvesvaraya Technological University']
Text: The Acharya Institute of Technology is affiliated with Visvesvaraya Technological University.
Subject: Acharya Institute of Technology
Predicate: affiliation
Object: Visvesvaraya Technological University

Triple: ['__subject__ Acharya Institute of Technology __predicate__ affiliation __object__ Visvesvaraya Technological University']
Text: Acharya Institute of Technology is affiliated to Visvesvaraya Technological University.
Subject: Acharya Institute of Technology
Predicate: affiliation
Object: Visvesvaraya Technological University

Triple: ['__subject__ Acharya Institute of Technology __predicate__ affiliation __object__ Visvesvaraya Technological University']
Text: The Acharya Institute of Technology is affiliated with the Visvesvaraya Technological University.
Subject: Acharya Institute of Technology
Predicate: affiliation
Object: Visvesvaraya Technological University

Triple: ['__subject__ Acharya Institute of Technology __predicate__ affiliation __object__ Visvesvaraya Technological University']
Text: Acharya Institute of Technology is affiliated to the Visvesvaraya Technological University.
Subject: Acharya Institute of Technology
Predicate: affiliation
Object: Visvesvaraya Technological University

Triple: ['__subject__ Acharya Institute of Technology __predicate__ affiliation __object__ Visvesvaraya Technological University']
Text: Acharya Institute of Technology is affiliated with Visvesvaraya Technological University.
Subject: Acharya Institute of Technology
Predicate: affiliation
Object: Visvesvaraya Technological University

Triple: ['__subject__ Acharya Institute of Technology __predicate__ city __object__ Bangalore']
Text: The Acharya Institute of Technology is located in the city of Bangalore.
Subject: Acharya Institute of Technology
Predicate: city
Object: Bangalore

Triple: ['__subject__ Acharya Institute of Technology __predicate__ city __object__ Bangalore']
Text: Acharya Institute of Technology is located in Bangalore.
Subject: Acharya Institute of Technology
Predicate: city
Object: Bangalore

Triple: ['__subject__ Acharya Institute of Technology __predicate__ city __object__ Bangalore']
Text: Acharya Institute of Technology is in Bangalore.
Subject: Acharya Institute of Technology
Predicate: city
Object: Bangalore

Triple: ['__subject__ Acharya Institute of Technology __predicate__ country __object__ India']
Text: Acharya Institute of Technology can be found in India.
Subject: Acharya Institute of Technology
Predicate: country
Object: India

Triple: ['__subject__ Acharya Institute of Technology __predicate__ country __object__ India']
Text: Acharya Institute of Technology is located in India.
Subject: Acharya Institute of Technology
Predicate: country
Object: India

Triple: ['__subject__ Acharya Institute of Technology __predicate__ country __object__ India']
Text: The Acharya Institute of Technology is located in India.
Subject: Acharya Institute of Technology
Predicate: country
Object: India

Triple: ['__subject__ Acharya Institute of Technology __predicate__ director __object__ Dr. G. P. Prabhukumar']
Text: Dr. G. P. Prabhukumar is the director of the Acharya Institute of Technology.
Subject: Acharya Institute of Technology
Predicate: director
Object: Dr. G. P. Prabhukumar

Triple: ['__subject__ Acharya Institute of Technology __predicate__ director __object__ Dr. G. P. Prabhukumar']
Text: The director of Acharya Institute of Technology is Dr. G. P. Prabhukumar.
Subject: Acharya Institute of Technology
Predicate: director
Object: Dr. G. P. Prabhukumar

Triple: ['__subject__ Acharya Institute of Technology __predicate__ director __object__ Dr. G. P. Prabhukumar']
Text: Acharya Institute of Technology's director is Dr. G. P. Prabhukumar.
Subject: Acharya Institute of Technology
Predicate: director
Object: Dr. G. P. Prabhukumar

Triple: ['__subject__ Acharya Institute of Technology __predicate__ established __object__ 2000']
Text: The Acharya Institute of Technology was established in the year 2000.
Subject: Acharya Institute of Technology
Predicate: established
Object: 2000

Triple: ['__subject__ Acharya Institute of Technology __predicate__ established __object__ 2000']
Text: The Acharya Institute of Technology was established in 2000.
Subject: Acharya Institute of Technology
Predicate: established
Object: 2000

Triple: ['__subject__ Acharya Institute of Technology __predicate__ motto __object__ Nurturing Excellence']
Text: Acharya Institute of Technology's motto is Nurturing Excellence.
Subject: Acharya Institute of Technology
Predicate: motto
Object: Nurturing Excellence

Triple: ['__subject__ Acharya Institute of Technology __predicate__ motto __object__ Nurturing Excellence']
Text: The motto of the Acharya Institute of Technology is 'Nurturing Excellence.'.
Subject: Acharya Institute of Technology
Predicate: motto
Object: Nurturing Excellence

Triple: ['__subject__ Acharya Institute of Technology __predicate__ motto __object__ Nurturing Excellence']
Text: The motto of the Acharya Institute of Technology is "Nurturing Excellence".
Subject: Acharya Institute of Technology
Predicate: motto
Object: Nurturing Excellence

Triple: ['__subject__ Acharya Institute of Technology __predicate__ nickname __object__ AIT']
Text: AIT is the nickname for the Acharya Institute of Technology.
Subject: Acharya Institute of Technology
Predicate: nickname
Object: AIT

Triple: ['__subject__ Acharya Institute of Technology __predicate__ nickname __object__ AIT']
Text: The nickname of the Acharya Institute of Technology is AIT.
Subject: Acharya Institute of Technology
Predicate: nickname
Object: AIT

Triple: ['__subject__ Acharya Institute of Technology __predicate__ nickname __object__ AIT']
Text: Acharya Institute of Technology is known as AIT.
Subject: Acharya Institute of Technology
Predicate: nickname
Object: AIT

Triple: ['__subject__ Acharya Institute of Technology __predicate__ numberOfPostgraduateStudents __object__ 700']
Text: The number of post graduate students at the Acharya Institute of Technology is about 700.
Subject: Acharya Institute of Technology
Predicate: numberOfPostgraduateStudents
Object: 700

Triple: ['__subject__ Acharya Institute of Technology __predicate__ numberOfPostgraduateStudents __object__ 700']
Text: The number of postgraduate students in Acharya Institute of Technology is ~700.
Subject: Acharya Institute of Technology
Predicate: numberOfPostgraduateStudents
Object: 700

Triple: ['__subject__ Acharya Institute of Technology __predicate__ numberOfPostgraduateStudents __object__ 700']
Text: There are around 700 postgraduate students at the Acharya Institute of Technology.
Subject: Acharya Institute of Technology
Predicate: numberOfPostgraduateStudents
Object: 700

Triple: ['__subject__ Acharya Institute of Technology __predicate__ numberOfPostgraduateStudents __object__ 700']
Text: There are about 700 postgraduate students at the Acharya Institute of Technology.
Subject: Acharya Institute of Technology
Predicate: numberOfPostgraduateStudents
Object: 700

Triple: ['__subject__ Acharya Institute of Technology __predicate__ numberOfPostgraduateStudents __object__ 700']
Text: Acharya Institute of Technology has 700 postgraduate students.
Subject: Acharya Institute of Technology
Predicate: numberOfPostgraduateStudents
Object: 700

Triple: ['__subject__ Acharya Institute of Technology __predicate__ numberOfPostgraduateStudents __object__ 700']
Text: 700 students are enrolled in a post-graduate program at Acharya Institute of Technology.
Subject: Acharya Institute of Technology
Predicate: numberOfPostgraduateStudents
Object: 700

Triple: ['__subject__ Acharya Institute of Technology __predicate__ numberOfUndergraduateStudents __object__ 10000']
Text: The number of undergraduates attending the Acharya Institute of Technology is roughly 10000 students.
Subject: Acharya Institute of Technology
Predicate: numberOfUndergraduateStudents
Object: 10000

Triple: ['__subject__ Acharya Institute of Technology __predicate__ numberOfUndergraduateStudents __object__ 10000']
Text: Acharya Institute of Technology's number of Undergraduate students total to ~10000.
Subject: Acharya Institute of Technology
Predicate: numberOfUndergraduateStudents
Object: 10000

Triple: ['__subject__ Acharya Institute of Technology __predicate__ numberOfUndergraduateStudents __object__ 10000']
Text: There are around 10000 undergraduate students at the Acharya Institute of Technology.
Subject: Acharya Institute of Technology
Predicate: numberOfUndergraduateStudents
Object: 10000

Triple: ['__subject__ Acharya Institute of Technology __predicate__ numberOfUndergraduateStudents __object__ 10000']
Text: The Acharya Institute of Technology has 10000 undergraduate students.
Subject: Acharya Institute of Technology
Predicate: numberOfUndergraduateStudents
Object: 10000

Triple: ['__subject__ Acharya Institute of Technology __predicate__ numberOfUndergraduateStudents __object__ 10000']
Text: The Acharya Institute of Technology has 10,000 undergraduate students.
Subject: Acharya Institute of Technology
Predicate: numberOfUndergraduateStudents
Object: 10000

Triple: ['__subject__ Acharya Institute of Technology __predicate__ numberOfUndergraduateStudents __object__ 10000']
Text: Acharya Institute of Technology has 10,000 undergraduate students.
Subject: Acharya Institute of Technology
Predicate: numberOfUndergraduateStudents
Object: 10000

Triple: ['__subject__ Acharya Institute of Technology __predicate__ officialSchoolColour __object__ Blue, White and Orange']
Text: Blue, white and orange are the colours adopted by Acharya Institute of Technology.
Subject: Acharya Institute of Technology
Predicate: officialSchoolColour
Object: Blue, White and Orange

Triple: ['__subject__ Acharya Institute of Technology __predicate__ officialSchoolColour __object__ Blue, White and Orange']
Text: Blue, white and orange are the colours of Acharya Institute of Technology.
Subject: Acharya Institute of Technology
Predicate: officialSchoolColour
Object: Blue, White and Orange

Triple: ['__subject__ Acharya Institute of Technology __predicate__ officialSchoolColour __object__ Blue, White and Orange']
Text: Acharya Institute of Technology's official colors are Blue, White and Orange.
Subject: Acharya Institute of Technology
Predicate: officialSchoolColour
Object: Blue, White and Orange

Triple: ['__subject__ Acharya Institute of Technology __predicate__ officialSchoolColour __object__ Blue, White and Orange']
Text: The official school colours of the Acharya Institute of Technology are blue, white and orange.
Subject: Acharya Institute of Technology
Predicate: officialSchoolColour
Object: Blue, White and Orange

Triple: ['__subject__ Acharya Institute of Technology __predicate__ officialSchoolColour __object__ Blue, White and Orange']
Text: Acharya Institute of Technology official school colors are Blue White and Orange.
Subject: Acharya Institute of Technology
Predicate: officialSchoolColour
Object: Blue, White and Orange

Triple: ['__subject__ Acharya Institute of Technology __predicate__ officialSchoolColour __object__ Blue, White and Orange']
Text: Acharya Institute of Technology official school colours are blue, white and orange.
Subject: Acharya Institute of Technology
Predicate: officialSchoolColour
Object: Blue, White and Orange

Triple: ['__subject__ Acharya Institute of Technology __predicate__ outlookRanking __object__ 63']
Text: The outlook ranking for the Acharya Institute of Technology is 63.
Subject: Acharya Institute of Technology
Predicate: outlookRanking
Object: 63

Triple: ['__subject__ Acharya Institute of Technology __predicate__ outlookRanking __object__ 63']
Text: Acharya Institute of Technology's outlook ranking is 63.
Subject: Acharya Institute of Technology
Predicate: outlookRanking
Object: 63

Triple: ['__subject__ Acharya Institute of Technology __predicate__ outlookRanking __object__ 63']
Text: Acharya Institute of Technology has an outlook ranking of 63.
Subject: Acharya Institute of Technology
Predicate: outlookRanking
Object: 63

Triple: ['__subject__ Acharya Institute of Technology __predicate__ sportsOffered __object__ Tennis']
Text: Tennis is one of the sports offered at the Acharya Institute of Technology.
Subject: Acharya Institute of Technology
Predicate: sportsOffered
Object: Tennis

Triple: ['__subject__ Acharya Institute of Technology __predicate__ sportsOffered __object__ Tennis']
Text: Acharya Institute of Technology offers Tennis as a sport.
Subject: Acharya Institute of Technology
Predicate: sportsOffered
Object: Tennis

Triple: ['__subject__ Acharya Institute of Technology __predicate__ sportsOffered __object__ Tennis']
Text: One of the sports offered at the Acharya Institute of Technology is tennis.
Subject: Acharya Institute of Technology
Predicate: sportsOffered
Object: Tennis

Triple: ['__subject__ Acharya Institute of Technology __predicate__ sportsOffered __object__ Tennis']
Text: The Acharya Institute of Technology offers sports including tennis.
Subject: Acharya Institute of Technology
Predicate: sportsOffered
Object: Tennis

Triple: ['__subject__ Acharya Institute of Technology __predicate__ state __object__ Karnataka']
Text: The Acharya Institute of Technology is in the state of Karnataka.
Subject: Acharya Institute of Technology
Predicate: state
Object: Karnataka

Triple: ['__subject__ Acharya Institute of Technology __predicate__ state __object__ Karnataka']
Text: Acharya Institute of Technology is located in the state of Karnataka.
Subject: Acharya Institute of Technology
Predicate: state
Object: Karnataka

Triple: ['__subject__ Acharya Institute of Technology __predicate__ state __object__ Karnataka']
Text: Acharya Institute of Technology is in Karnataka state.
Subject: Acharya Institute of Technology
Predicate: state
Object: Karnataka

Triple: ['__subject__ Acharya Institute of Technology __predicate__ wasGivenTheTechnicalCampusStatusBy __object__ All India Council for Technical Education']
Text: The All India Council for Technical Education was proud to give the Technical Campus status to the Acharya Institute of Technology.
Subject: Acharya Institute of Technology
Predicate: wasGivenTheTechnicalCampusStatusBy
Object: All India Council for Technical Education

Triple: ['__subject__ Acharya Institute of Technology __predicate__ wasGivenTheTechnicalCampusStatusBy __object__ All India Council for Technical Education']
Text: Acharya Institute of Technology was given the Technical Campus status by the All India Council for Technical Education.
Subject: Acharya Institute of Technology
Predicate: wasGivenTheTechnicalCampusStatusBy
Object: All India Council for Technical Education

Triple: ['__subject__ Acharya Institute of Technology __predicate__ wasGivenTheTechnicalCampusStatusBy __object__ All India Council for Technical Education']
Text: Acharya Institute of Technology was given the 'Technical Campus' status by All India Council for Technical Education.
Subject: Acharya Institute of Technology
Predicate: wasGivenTheTechnicalCampusStatusBy
Object: All India Council for Technical Education

Triple: ['__subject__ All India Council for Technical Education __predicate__ location __object__ Mumbai']
Text: All India Council for Technical Education is located in Mumbai.
Subject: All India Council for Technical Education
Predicate: location
Object: Mumbai

Triple: ['__subject__ All India Council for Technical Education __predicate__ location __object__ Mumbai']
Text: The All India Council for Technical Education is located in Mumbai.
Subject: All India Council for Technical Education
Predicate: location
Object: Mumbai

Triple: ['__subject__ Bangalore __predicate__ founder __object__ Kempe Gowda I']
Text: Kempe Gowda I founded Bangalore.
Subject: Bangalore
Predicate: founder
Object: Kempe Gowda I

Triple: ['__subject__ Bangalore __predicate__ founder __object__ Kempe Gowda I']
Text: The founder of Bangalore was Kempe Gowda I.
Subject: Bangalore
Predicate: founder
Object: Kempe Gowda I

Triple: ['__subject__ Bangalore __predicate__ founder __object__ Kempe Gowda I']
Text: Kempe Gowda I was the founder of Bangalore.
Subject: Bangalore
Predicate: founder
Object: Kempe Gowda I

Triple: ['__subject__ Denmark __predicate__ leader __object__ Lars Løkke Rasmussen']
Text: Lars Lokke Rasmussen is the leader of Denmark.
Subject: Denmark
Predicate: leader
Object: Lars Løkke Rasmussen

Triple: ['__subject__ Denmark __predicate__ leader __object__ Lars Løkke Rasmussen']
Text: One of Denmark's leaders is Lars Lokke Rasmussen.
Subject: Denmark
Predicate: leader
Object: Lars Løkke Rasmussen

Triple: ['__subject__ Denmark __predicate__ leader __object__ Lars Løkke Rasmussen']
Text: Denmark's leader is Lars Løkke Rasmussen.
Subject: Denmark
Predicate: leader
Object: Lars Løkke Rasmussen

Triple: ['__subject__ Denmark __predicate__ leader __object__ Lars Løkke Rasmussen']
Text: The leader of Denmark is Lars Lokke Rasmussen.
Subject: Denmark
Predicate: leader
Object: Lars Løkke Rasmussen

Triple: ['__subject__ Denmark __predicate__ leader __object__ Lars Løkke Rasmussen']
Text: The Leader of Denmark is Lars Løkke Rasmussen.
Subject: Denmark
Predicate: leader
Object: Lars Løkke Rasmussen

Triple: ['__subject__ Denmark __predicate__ leader __object__ Lars Løkke Rasmussen']
Text: Lars Løkke Rasmussen is the leader of Denmark.
Subject: Denmark
Predicate: leader
Object: Lars Løkke Rasmussen

Triple: ['__subject__ Denmark __predicate__ leaderTitle __object__ Monarchy of Denmark']
Text: Denmark is led by a Monarch.
Subject: Denmark
Predicate: leaderTitle
Object: Monarchy of Denmark

Triple: ['__subject__ Denmark __predicate__ leaderTitle __object__ Monarchy of Denmark']
Text: The Monarch of Denmark is the country's leader.
Subject: Denmark
Predicate: leaderTitle
Object: Monarchy of Denmark

Triple: ['__subject__ Denmark __predicate__ religion __object__ Church of Denmark']
Text: The official religion of Denmark is the Church of Denmark.
Subject: Denmark
Predicate: religion
Object: Church of Denmark

Triple: ['__subject__ Denmark __predicate__ religion __object__ Church of Denmark']
Text: Denmark's religion is led by Church of Denmark.
Subject: Denmark
Predicate: religion
Object: Church of Denmark

Triple: ['__subject__ Denmark __predicate__ religion __object__ Church of Denmark']
Text: Church of Denmark is the religion of Denmark.
Subject: Denmark
Predicate: religion
Object: Church of Denmark

Triple: ['__subject__ European University Association __predicate__ headquarter __object__ Brussels']
Text: The headquarters of the European University Association is in Brussels.
Subject: European University Association
Predicate: headquarter
Object: Brussels

Triple: ['__subject__ European University Association __predicate__ headquarter __object__ Brussels']
Text: The European University Association headquarter is in Brussels.
Subject: European University Association
Predicate: headquarter
Object: Brussels

Triple: ['__subject__ India __predicate__ largestCity __object__ Mumbai']
Text: The largest city in India is Mumbai.
Subject: India
Predicate: largestCity
Object: Mumbai

Triple: ['__subject__ India __predicate__ largestCity __object__ Mumbai']
Text: Mumbai is India's largest city.
Subject: India
Predicate: largestCity
Object: Mumbai

Triple: ['__subject__ India __predicate__ river __object__ Ganges']
Text: The Ganges is a river in India.
Subject: India
Predicate: river
Object: Ganges

Triple: ['__subject__ India __predicate__ river __object__ Ganges']
Text: The Ganges is India's most well known river.
Subject: India
Predicate: river
Object: Ganges

Triple: ['__subject__ Karnataka __predicate__ hasToItsNortheast __object__ Telangana']
Text: Karnataka neighbors Telangana to its northeast.
Subject: Karnataka
Predicate: hasToItsNortheast
Object: Telangana

Triple: ['__subject__ Karnataka __predicate__ hasToItsNortheast __object__ Telangana']
Text: Karnataka has to its northeast Telangana.
Subject: Karnataka
Predicate: hasToItsNortheast
Object: Telangana

Triple: ['__subject__ Karnataka __predicate__ hasToItsNortheast __object__ Telangana']
Text: To the northeast of Karnataka is Telangana.
Subject: Karnataka
Predicate: hasToItsNortheast
Object: Telangana

Triple: ['__subject__ Karnataka __predicate__ hasToItsWest __object__ Arabian Sea']
Text: The Arabian Sea is west of Karnataka.
Subject: Karnataka
Predicate: hasToItsWest
Object: Arabian Sea

Triple: ['__subject__ Karnataka __predicate__ hasToItsWest __object__ Arabian Sea']
Text: The west of Karnataka is the Arabian Sea.
Subject: Karnataka
Predicate: hasToItsWest
Object: Arabian Sea

Triple: ['__subject__ Karnataka __predicate__ hasToItsWest __object__ Arabian Sea']
Text: To the west Karnataka borders on the Arabian Sea.
Subject: Karnataka
Predicate: hasToItsWest
Object: Arabian Sea

Triple: ['__subject__ Kerala __predicate__ leader __object__ Kochi']
Text: Kochi is the leader of Kerala.
Subject: Kerala
Predicate: leader
Object: Kochi

Triple: ['__subject__ Kerala __predicate__ leader __object__ Kochi']
Text: The leader of Kerala is Kochi.
Subject: Kerala
Predicate: leader
Object: Kochi

Triple: ['__subject__ Kerala __predicate__ leader __object__ Kochi']
Text: The Kerala leader is in Kochi.
Subject: Kerala
Predicate: leader
Object: Kochi

Triple: ['__subject__ Romania __predicate__ anthem __object__ Deșteaptă-te, române!']
Text: The anthem of Romania is called Desteapta te romane.
Subject: Romania
Predicate: anthem
Object: Deșteaptă-te, române!

Triple: ['__subject__ Romania __predicate__ anthem __object__ Deșteaptă-te, române!']
Text: Desteapta te, romane is the Romanian anthem.
Subject: Romania
Predicate: anthem
Object: Deșteaptă-te, române!

Triple: ['__subject__ Romania __predicate__ anthem __object__ Deșteaptă-te, române!']
Text: The national anthem of Romania is Desteapta-te, romane!
Subject: Romania
Predicate: anthem
Object: Deșteaptă-te, române!

Triple: ['__subject__ Romania __predicate__ ethnicGroup __object__ Germans of Romania']
Text: One of the ethnic groups in Romania are the Germans of Romania.
Subject: Romania
Predicate: ethnicGroup
Object: Germans of Romania

Triple: ['__subject__ Romania __predicate__ ethnicGroup __object__ Germans of Romania']
Text: Germans of Romania is an ethnic group in Romania.
Subject: Romania
Predicate: ethnicGroup
Object: Germans of Romania

Triple: ['__subject__ Romania __predicate__ ethnicGroup __object__ Germans of Romania']
Text: The Germans of Romania are an ethnic group in Romania.
Subject: Romania
Predicate: ethnicGroup
Object: Germans of Romania

Triple: ['__subject__ Romania __predicate__ ethnicGroup __object__ Germans of Romania']
Text: Romania has many ethnic groups one of which are Germans.
Subject: Romania
Predicate: ethnicGroup
Object: Germans of Romania

Triple: ['__subject__ Romania __predicate__ leader __object__ Klaus Iohannis']
Text: The leader of Romania is Klaus Iohannis.
Subject: Romania
Predicate: leader
Object: Klaus Iohannis

Triple: ['__subject__ Romania __predicate__ leader __object__ Klaus Iohannis']
Text: Romania's leader is Klaus Iohannis.
Subject: Romania
Predicate: leader
Object: Klaus Iohannis

Triple: ['__subject__ Romania __predicate__ leaderTitle __object__ Prime Minister of Romania']
Text: The leader of Romania is known as the Prime Minister.
Subject: Romania
Predicate: leaderTitle
Object: Prime Minister of Romania

Triple: ['__subject__ Romania __predicate__ leaderTitle __object__ Prime Minister of Romania']
Text: Romania's leader is called the Prime Minister of Romania.
Subject: Romania
Predicate: leaderTitle
Object: Prime Minister of Romania

Triple: ['__subject__ Romania __predicate__ leaderTitle __object__ Prime Minister of Romania']
Text: The title of the leader of Romania is "Prime Minister".
Subject: Romania
Predicate: leaderTitle
Object: Prime Minister of Romania

Triple: ['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ affiliation __object__ European University Association']
Text: The Aarhus University School of Business and Social Sciences is affiliated with the European University Association.
Subject: School of Business and Social Sciences at the Aarhus University
Predicate: affiliation
Object: European University Association

Triple: ['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ affiliation __object__ European University Association']
Text: The School of Business and Social Sciences at the Aarhus University is affiliated to European University Association.
Subject: School of Business and Social Sciences at the Aarhus University
Predicate: affiliation
Object: European University Association

Triple: ['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ affiliation __object__ European University Association']
Text: The School of Business and Social Sciences at Aarhus University is affiliated to the European University Association.
Subject: School of Business and Social Sciences at the Aarhus University
Predicate: affiliation
Object: European University Association

Triple: ['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ affiliation __object__ European University Association']
Text: The School of Business and Social Sciences at the Aarhus University is affiliated with the European University Association.
Subject: School of Business and Social Sciences at the Aarhus University
Predicate: affiliation
Object: European University Association

Triple: ['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ city __object__ Aarhus']
Text: The Aarhus University School of Business and Social Sciences is in the city of Aarhus.
Subject: School of Business and Social Sciences at the Aarhus University
Predicate: city
Object: Aarhus

Triple: ['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ city __object__ Aarhus']
Text: The School of Business and Social Sciences at Aarhus University is situated in the city of Aarhus.
Subject: School of Business and Social Sciences at the Aarhus University
Predicate: city
Object: Aarhus

Triple: ['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ city __object__ Aarhus']
Text: The School of Business and Social Sciences at the Aarhus University is located in the city of Aarhus.
Subject: School of Business and Social Sciences at the Aarhus University
Predicate: city
Object: Aarhus

Triple: ['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ established __object__ 1928']
Text: The School of Business and Social Sciences at Aarhus University was established in 1928.
Subject: School of Business and Social Sciences at the Aarhus University
Predicate: established
Object: 1928

Triple: ['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ established __object__ 1928']
Text: Aarhus University School of Business and Social Sciences was established in 1928.
Subject: School of Business and Social Sciences at the Aarhus University
Predicate: established
Object: 1928

Triple: ['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ established __object__ 1928']
Text: The School of Business and Social Sciences at the Aarhus University was established in 1928.
Subject: School of Business and Social Sciences at the Aarhus University
Predicate: established
Object: 1928

Triple: ['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ established __object__ 1928']
Text: The School of Business and Social Sciences at the Aarhus University is established in 1928.
Subject: School of Business and Social Sciences at the Aarhus University
Predicate: established
Object: 1928

Triple: ['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ latinName __object__ Universitas Aarhusiensis']
Text: The latin name of School of Business and Social Sciences at the Aarhus University is "Universitas Aarhusiensis".
Subject: School of Business and Social Sciences at the Aarhus University
Predicate: latinName
Object: Universitas Aarhusiensis

Triple: ['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ latinName __object__ Universitas Aarhusiensis']
Text: The latin name of the School of Business and Social Sciences at Aarhus University is "universitas Aarhusiensis".
Subject: School of Business and Social Sciences at the Aarhus University
Predicate: latinName
Object: Universitas Aarhusiensis

Triple: ['__subject__ School of Business and Social Sciences at the Aarhus University __predicate__ latinName __object__ Universitas Aarhusiensis']
Text: The School of Business and Social Sciences at the Aarhus University has the latin name Universitas Aarhusiensis.
Subject: School of Business and Social Sciences at the Aarhus University
Predicate: latinName
Object: Universitas Aarhusiensis

Triple: ['__subject__ Switzerland __predicate__ anthem __object__ Swiss Psalm']
Text: The Swiss Psalm is the anthem of Switzerland.
Subject: Switzerland
Predicate: anthem
Object: Swiss Psalm

Triple: ['__subject__ Switzerland __predicate__ anthem __object__ Swiss Psalm']
Text: The anthem of Switzerland is called the Swiss Psalm.
Subject: Switzerland
Predicate: anthem
Object: Swiss Psalm

Triple: ['__subject__ Switzerland __predicate__ leader __object__ Johann Schneider-Ammann']
Text: Johann Schneider-Ammann is the leader of Switzerland.
Subject: Switzerland
Predicate: leader
Object: Johann Schneider-Ammann

Triple: ['__subject__ Switzerland __predicate__ leader __object__ Johann Schneider-Ammann']
Text: Johann Schneider-Ammann is the Swiss leader.
Subject: Switzerland
Predicate: leader
Object: Johann Schneider-Ammann

Triple: ['__subject__ Switzerland __predicate__ leader __object__ Johann Schneider-Ammann']
Text: The leader of Switzerland is Johann Schneider-Ammann.
Subject: Switzerland
Predicate: leader
Object: Johann Schneider-Ammann

Triple: ['__subject__ Switzerland __predicate__ leader __object__ Johann Schneider-Ammann']
Text: Switzerland has a leader called Johann Schneider-Ammann.
Subject: Switzerland
Predicate: leader
Object: Johann Schneider-Ammann

Triple: ['__subject__ Switzerland __predicate__ leader __object__ Johann Schneider-Ammann']
Text: Johann Schneider-Ammann is the name of the leader of Switzerland.
Subject: Switzerland
Predicate: leader
Object: Johann Schneider-Ammann

Triple: ['__subject__ Switzerland __predicate__ leader __object__ Johann Schneider-Ammann']
Text: The Swiss leader is Johann Schneider-Ammann.
Subject: Switzerland
Predicate: leader
Object: Johann Schneider-Ammann

Triple: ['__subject__ Switzerland __predicate__ leaderTitle __object__ Federal Chancellor of Switzerland']
Text: The Federal Chancellor of Switzerland helps to lead the country.
Subject: Switzerland
Predicate: leaderTitle
Object: Federal Chancellor of Switzerland

Triple: ['__subject__ Switzerland __predicate__ leaderTitle __object__ Federal Chancellor of Switzerland']
Text: The Federal Chancellor of Switzerland is the title of the leader of Switzerland.
Subject: Switzerland
Predicate: leaderTitle
Object: Federal Chancellor of Switzerland

Triple: ['__subject__ Switzerland __predicate__ leaderTitle __object__ Federal Chancellor of Switzerland']
Text: The leader of Switzerland is titled the Federal Chancellor of Switzerland.
Subject: Switzerland
Predicate: leaderTitle
Object: Federal Chancellor of Switzerland

Triple: ['__subject__ Switzerland __predicate__ legislature __object__ Federal Assembly (Switzerland)']
Text: Switzerland's legislature is formed in the Federal Assembly.
Subject: Switzerland
Predicate: legislature
Object: Federal Assembly (Switzerland)

Triple: ['__subject__ Switzerland __predicate__ legislature __object__ Federal Assembly (Switzerland)']
Text: Switzerland's legislature is known as the Federal Assembly.
Subject: Switzerland
Predicate: legislature
Object: Federal Assembly (Switzerland)

Triple: ['__subject__ Switzerland __predicate__ legislature __object__ Federal Assembly (Switzerland)']
Text: The Federal Assembly legislates in Switzerland.
Subject: Switzerland
Predicate: legislature
Object: Federal Assembly (Switzerland)

Triple: ['__subject__ Tennis __predicate__ sportGoverningBody __object__ International Tennis Federation']
Text: The sport Tennis has a Governing Body called the International Tennis Federation.
Subject: Tennis
Predicate: sportGoverningBody
Object: International Tennis Federation

Triple: ['__subject__ Tennis __predicate__ sportGoverningBody __object__ International Tennis Federation']
Text: The International Tennis Federation is the Governing Body for the tennis sport.
Subject: Tennis
Predicate: sportGoverningBody
Object: International Tennis Federation

Triple: ['__subject__ Tennis __predicate__ sportGoverningBody __object__ International Tennis Federation']
Text: The tennis sport is governed by the International Tennis Federation.
Subject: Tennis
Predicate: sportGoverningBody
Object: International Tennis Federation

Triple: ['__subject__ Tennis __predicate__ sportGoverningBody __object__ International Tennis Federation']
Text: The International Tennis Federation is the Governing Body of the sport of tennis.
Subject: Tennis
Predicate: sportGoverningBody
Object: International Tennis Federation

Triple: ['__subject__ Tennis __predicate__ sportGoverningBody __object__ International Tennis Federation']
Text: The International Tennis Federation is the governing body of tennis.
Subject: Tennis
Predicate: sportGoverningBody
Object: International Tennis Federation

Triple: ['__subject__ Tennis __predicate__ sportGoverningBody __object__ International Tennis Federation']
Text: The sports governing body of tennis is the International Tennis Federation.
Subject: Tennis
Predicate: sportGoverningBody
Object: International Tennis Federation

Triple: ['__subject__ Visvesvaraya Technological University __predicate__ city __object__ Belgaum']
Text: The Visvesvaraya Technological University is in the city of Belgaum.
Subject: Visvesvaraya Technological University
Predicate: city
Object: Belgaum

Triple: ['__subject__ Visvesvaraya Technological University __predicate__ city __object__ Belgaum']
Text: Visvesvaraya Technological University is in the city of Belgaum.
Subject: Visvesvaraya Technological University
Predicate: city
Object: Belgaum

Triple: ['__subject__ Visvesvaraya Technological University __predicate__ city __object__ Belgaum']
Text: Visvesvaraya Technological University is located in Belgaum.
Subject: Visvesvaraya Technological University
Predicate: city
Object: Belgaum

Triple: ['__subject__ 1634: The Baltic War __predicate__ author __object__ David Weber']
Text: David Weber is the author of 1634: The Baltic War.
Subject: 1634: The Baltic War
Predicate: author
Object: David Weber

Triple: ['__subject__ 1634: The Baltic War __predicate__ author __object__ David Weber']
Text: 1634: The Baltic War was written by David Weber.
Subject: 1634: The Baltic War
Predicate: author
Object: David Weber

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ isbnNumber __object__ 978-1-4165-4253-7']
Text: 1634: The Bavarian Crisis can be located by its ISBN number "978-1-4165-4253-7".
Subject: 1634: The Bavarian Crisis
Predicate: isbnNumber
Object: 978-1-4165-4253-7

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ isbnNumber __object__ 978-1-4165-4253-7']
Text: The ISBN number of 1634: The Bavarian Crisis is 978-1-4165-4253-7.
Subject: 1634: The Bavarian Crisis
Predicate: isbnNumber
Object: 978-1-4165-4253-7

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']
Text: The authors of 1634: The Bavarian Crisis are Virginia DeMarce and Eric Flint.
Subject: 1634: The Bavarian Crisis
Predicate: author
Object: Virginia DeMarce and Eric Flint

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce and Eric Flint']
Text: 1634: The Bavarian Crisis is written by Virginia DeMarce and Eric Flint.
Subject: 1634: The Bavarian Crisis
Predicate: author
Object: Virginia DeMarce and Eric Flint

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce']
Text: Virginia DeMarce is the author of 1634: The Bavarian Crisis.
Subject: 1634: The Bavarian Crisis
Predicate: author
Object: Virginia DeMarce

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ author __object__ Virginia DeMarce']
Text: The author of 1634: The Bavarian Crisis is Virginia DeMarce.
Subject: 1634: The Bavarian Crisis
Predicate: author
Object: Virginia DeMarce

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ followedBy __object__ Ring of Fire II']
Text: The novel 1634: The Bavarian Crisis is followed by Ring of Fire II.
Subject: 1634: The Bavarian Crisis
Predicate: followedBy
Object: Ring of Fire II

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ followedBy __object__ Ring of Fire II']
Text: 1634: The Bavarian Crisis was followed by Ring of Fire II.
Subject: 1634: The Bavarian Crisis
Predicate: followedBy
Object: Ring of Fire II

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ followedBy __object__ Ring of Fire II']
Text: 1634: The Bavarian Crisis is followed by Ring of Fire II.
Subject: 1634: The Bavarian Crisis
Predicate: followedBy
Object: Ring of Fire II

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ language __object__ English language']
Text: 1634: The Bavarian Crisis is written in English.
Subject: 1634: The Bavarian Crisis
Predicate: language
Object: English language

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Print']
Text: 1634: The Bavarian Crisis is available in print form.
Subject: 1634: The Bavarian Crisis
Predicate: mediaType
Object: Print

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Print']
Text: The 1634 The Bavarian Crisis was put in print.
Subject: 1634: The Bavarian Crisis
Predicate: mediaType
Object: Print

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Hardcover']
Text: 1634 The Bavarian Crisis comes in hardcover.
Subject: 1634: The Bavarian Crisis
Predicate: mediaType
Object: Hardcover

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Hardcover']
Text: 1634: The Bavarian Crisis is a hardcover publication.
Subject: 1634: The Bavarian Crisis
Predicate: mediaType
Object: Hardcover

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ mediaType __object__ Hardcover']
Text: 1634: The Bavarian Crisis is available in hardcover.
Subject: 1634: The Bavarian Crisis
Predicate: mediaType
Object: Hardcover

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ numberOfPages __object__ 448']
Text: 1634: The Bavarian Crisis has 448 pages.
Subject: 1634: The Bavarian Crisis
Predicate: numberOfPages
Object: 448

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ DeMarce short stories in the The Grantville Gazettes']
Text: DeMarce short stories in the Grantville Gazettes preceded 1634: The Bavarian Crisis.
Subject: 1634: The Bavarian Crisis
Predicate: precededBy
Object: DeMarce short stories in the The Grantville Gazettes

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ DeMarce short stories in the The Grantville Gazettes']
Text: 1634: The Bavarian Crisis was preceded by DeMarce short stories in the Grantville Gazettes.
Subject: 1634: The Bavarian Crisis
Predicate: precededBy
Object: DeMarce short stories in the The Grantville Gazettes

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Baltic War']
Text: 1634: The Bavarian Crisis was preceded by 1634: The Baltic War.
Subject: 1634: The Bavarian Crisis
Predicate: precededBy
Object: 1634: The Baltic War

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Baltic War']
Text: 1634: The Bavarian Crisis is preceded by 1634: The Baltic War.
Subject: 1634: The Bavarian Crisis
Predicate: precededBy
Object: 1634: The Baltic War

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Ram Rebellion']
Text: 1634 The Bavarian Crisis was preceded by 1634 The Ram Rebellion.
Subject: 1634: The Bavarian Crisis
Predicate: precededBy
Object: 1634: The Ram Rebellion

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Ram Rebellion']
Text: 1634: The Bavarian Crisis was preceded by 1634: The Ram Rebellion.
Subject: 1634: The Bavarian Crisis
Predicate: precededBy
Object: 1634: The Ram Rebellion

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ 1634: The Ram Rebellion']
Text: 1634: The Bavarian Crisis is preceded by 1634: The Ram Rebellion.
Subject: 1634: The Bavarian Crisis
Predicate: precededBy
Object: 1634: The Ram Rebellion

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ Grantville Gazette II']
Text: 1634: The Bavarian Crisis was preceded by Grantville Gazette II.
Subject: 1634: The Bavarian Crisis
Predicate: precededBy
Object: Grantville Gazette II

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ Grantville Gazette III']
Text: 1634: The Bavarian Crisis was preceded by Grantville Gazette III.
Subject: 1634: The Bavarian Crisis
Predicate: precededBy
Object: Grantville Gazette III

Triple: ['__subject__ 1634: The Bavarian Crisis __predicate__ precededBy __object__ Grantville Gazette III']
Text: 1634: The Bavarian Crisis is the sequel to Grantville Gazette III.
Subject: 1634: The Bavarian Crisis
Predicate: precededBy
Object: Grantville Gazette III

Triple: ['__subject__ 1634: The Galileo Affair __predicate__ followedBy __object__ 1634: The Ram Rebellion']
Text: 1634: The Galileo Affair was followed by 1634: The Ram Rebellion.
Subject: 1634: The Galileo Affair
Predicate: followedBy
Object: 1634: The Ram Rebellion

Triple: ['__subject__ 1634: The Galileo Affair __predicate__ followedBy __object__ 1634: The Ram Rebellion']
Text: 1634: The Galileo Affair is followed by 1634: The Ram Rebellion.
Subject: 1634: The Galileo Affair
Predicate: followedBy
Object: 1634: The Ram Rebellion

Triple: ['__subject__ 1634: The Galileo Affair __predicate__ language __object__ English language']
Text: The book "1634: The Galileo Affair is available in English.
Subject: 1634: The Galileo Affair
Predicate: language
Object: English language

Triple: ['__subject__ 1634: The Galileo Affair __predicate__ language __object__ English language']
Text: 1634: The Galileo Affair is written in the English language.
Subject: 1634: The Galileo Affair
Predicate: language
Object: English language

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Eric Flint, Virginia DeMarce, et al.']
Text: 1634: The Ram Rebellion was written by Eric Flint, Virginia DeMarce, et al.
Subject: 1634: The Ram Rebellion
Predicate: author
Object: Eric Flint, Virginia DeMarce, et al.

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Virginia DeMarce']
Text: 1634: The Ram Rebellion was written by Virginia DeMarce.
Subject: 1634: The Ram Rebellion
Predicate: author
Object: Virginia DeMarce

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ author __object__ Virginia DeMarce']
Text: Virginia DeMarce is the author of 1634: The Ram Rebellion.
Subject: 1634: The Ram Rebellion
Predicate: author
Object: Virginia DeMarce

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ country __object__ United States']
Text: 1634 The Ram Rebellion comes from the United States.
Subject: 1634: The Ram Rebellion
Predicate: country
Object: United States

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ country __object__ United States']
Text: 1634 The Ram Rebellion was written in the U.S.
Subject: 1634: The Ram Rebellion
Predicate: country
Object: United States

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ language __object__ English language']
Text: English is the language used in 1634: The Ram Rebellion.
Subject: 1634: The Ram Rebellion
Predicate: language
Object: English language

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ language __object__ English language']
Text: 1634: The Ram Rebellion is written in English.
Subject: 1634: The Ram Rebellion
Predicate: language
Object: English language

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ mediaType __object__ E-book']
Text: 1634: The Ram Rebellion can be found as an E book.
Subject: 1634: The Ram Rebellion
Predicate: mediaType
Object: E-book

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ mediaType __object__ E-book']
Text: 1634: The Ram Rebellion is of the media type E book.
Subject: 1634: The Ram Rebellion
Predicate: mediaType
Object: E-book

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ mediaType __object__ E-book']
Text: 1634: The Ram Rebellion is available as an E-Book.
Subject: 1634: The Ram Rebellion
Predicate: mediaType
Object: E-book

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ mediaType __object__ Hardcover']
Text: The book titled 1634: The Ram Rebellion is a hardcover.
Subject: 1634: The Ram Rebellion
Predicate: mediaType
Object: Hardcover

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ mediaType __object__ Hardcover']
Text: 1634: The Ram Rebellion can be found in hardcover.
Subject: 1634: The Ram Rebellion
Predicate: mediaType
Object: Hardcover

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ mediaType __object__ Paperback']
Text: The 1634: The Ram Rebellion is a paperback.
Subject: 1634: The Ram Rebellion
Predicate: mediaType
Object: Paperback

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ mediaType __object__ Paperback']
Text: 1634 The Ram Rebellion is available in paperback.
Subject: 1634: The Ram Rebellion
Predicate: mediaType
Object: Paperback

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ numberOfPages __object__ 512']
Text: The novel 1634 The Ram Rebellion is 512 pages long.
Subject: 1634: The Ram Rebellion
Predicate: numberOfPages
Object: 512

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ numberOfPages __object__ 512']
Text: 1634: The Ram Rebellion has 512 pages.
Subject: 1634: The Ram Rebellion
Predicate: numberOfPages
Object: 512

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ numberOfPages __object__ 512']
Text: 1634: The Ram Rebellion is 512 pages long.
Subject: 1634: The Ram Rebellion
Predicate: numberOfPages
Object: 512

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ precededBy __object__ 1634: The Galileo Affair']
Text: 1634 The Ram Rebellion was preceded by 1634 The Galileo Affair.
Subject: 1634: The Ram Rebellion
Predicate: precededBy
Object: 1634: The Galileo Affair

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ precededBy __object__ 1634: The Galileo Affair']
Text: 1634: The Ram Rebellion was preceded by 1634: The Galileo Affair.
Subject: 1634: The Ram Rebellion
Predicate: precededBy
Object: 1634: The Galileo Affair

Triple: ['__subject__ 1634: The Ram Rebellion __predicate__ precededBy __object__ 1634: The Galileo Affair']
Text: 1634: The Ram Rebellion is preceded by 1634: The Galileo Affair.
Subject: 1634: The Ram Rebellion
Predicate: precededBy
Object: 1634: The Galileo Affair

Triple: ['__subject__ A.T. Charlie Johnson __predicate__ almaMater __object__ Harvard University']
Text: Harvard University is A.T. Charlie Johnson's almaMater.
Subject: A.T. Charlie Johnson
Predicate: almaMater
Object: Harvard University

Triple: ['__subject__ A.T. Charlie Johnson __predicate__ almaMater __object__ Harvard University']
Text: Harvard University is the alma mater of A T Charlie Johnson.
Subject: A.T. Charlie Johnson
Predicate: almaMater
Object: Harvard University

Triple: ['__subject__ A.T. Charlie Johnson __predicate__ almaMater __object__ Stanford University']
Text: Stanford University is A.T. Charlie Johnson's almaMater.
Subject: A.T. Charlie Johnson
Predicate: almaMater
Object: Stanford University

Triple: ['__subject__ A.T. Charlie Johnson __predicate__ almaMater __object__ Stanford University']
Text: Stanford University is the alma mater for A.T. Charlie Johnson.
Subject: A.T. Charlie Johnson
Predicate: almaMater
Object: Stanford University

Triple: ['__subject__ A.T. Charlie Johnson __predicate__ doctoralAdvisor __object__ Michael Tinkham']
Text: A.T. Charlie Johnson did his PhD under the supervision of Michael Tinkham.
Subject: A.T. Charlie Johnson
Predicate: doctoralAdvisor
Object: Michael Tinkham

Triple: ['__subject__ A.T. Charlie Johnson __predicate__ doctoralAdvisor __object__ Michael Tinkham']
Text: A T Charlie Johnson's doctoral advisor was Michael Tinkham.
Subject: A.T. Charlie Johnson
Predicate: doctoralAdvisor
Object: Michael Tinkham

Triple: ['__subject__ A.T. Charlie Johnson __predicate__ doctoralAdvisor __object__ Michael Tinkham']
Text: Michael Tinkham was a doctoral advisor of A.T. Charlie Johnson.
Subject: A.T. Charlie Johnson
Predicate: doctoralAdvisor
Object: Michael Tinkham

Triple: ['__subject__ A.T. Charlie Johnson __predicate__ nationality __object__ United States']
Text: A T Charlie Johnson is a United States national.
Subject: A.T. Charlie Johnson
Predicate: nationality
Object: United States

Triple: ['__subject__ A.T. Charlie Johnson __predicate__ nationality __object__ United States']
Text: A.T. Charlie Johnson is from the United States.
Subject: A.T. Charlie Johnson
Predicate: nationality
Object: United States

Triple: ['__subject__ A.T. Charlie Johnson __predicate__ residence __object__ United States']
Text: A.T. Charlie Johnson resides in the United States.
Subject: A.T. Charlie Johnson
Predicate: residence
Object: United States

Triple: ['__subject__ A.T. Charlie Johnson __predicate__ residence __object__ United States']
Text: The United States is the residence of A T Charlie Johnson.
Subject: A.T. Charlie Johnson
Predicate: residence
Object: United States

Triple: ['__subject__ A.T. Charlie Johnson __predicate__ residence __object__ United States']
Text: A.T. Charlie Johnson lives in the U.S.
Subject: A.T. Charlie Johnson
Predicate: residence
Object: United States

Triple: ['__subject__ ACM Transactions on Information Systems __predicate__ codenCode __object__ ATISET']
Text: ATISET is the CODEN code for ACM Transactions on Information Systems.
Subject: ACM Transactions on Information Systems
Predicate: codenCode
Object: ATISET

Triple: ['__subject__ ACM Transactions on Information Systems __predicate__ codenCode __object__ ATISET']
Text: The CODEN code for ACM Transactions on Information Systems is "ATISET".
Subject: ACM Transactions on Information Systems
Predicate: codenCode
Object: ATISET

Triple: ['__subject__ ACM Transactions on Information Systems __predicate__ codenCode __object__ ATISET']
Text: The CODEN code for ACM Transactions on Information Systems is ATISET.
Subject: ACM Transactions on Information Systems
Predicate: codenCode
Object: ATISET

Triple: ['__subject__ ACM Transactions on Information Systems __predicate__ issnNumber __object__ 1046-8188']
Text: The ISSN number of ACM Transactions on Information Systems is 1046-8188.
Subject: ACM Transactions on Information Systems
Predicate: issnNumber
Object: 1046-8188

Triple: ['__subject__ ACM Transactions on Information Systems __predicate__ issnNumber __object__ 1558-2868']
Text: ACM Transactions on Information Systems has the ISSN number 1558-2868.
Subject: ACM Transactions on Information Systems
Predicate: issnNumber
Object: 1558-2868

Triple: ['__subject__ ACM Transactions on Information Systems __predicate__ issnNumber __object__ 1558-2868']
Text: The ISSN number of ACM Transactions on Information Systems is 1558-2868.
Subject: ACM Transactions on Information Systems
Predicate: issnNumber
Object: 1558-2868

Triple: ['__subject__ ACM Transactions on Information Systems __predicate__ issnNumber __object__ 1558-2868']
Text: The ACM Transactions on Information Systems ISSN number is 1558-2868.
Subject: ACM Transactions on Information Systems
Predicate: issnNumber
Object: 1558-2868

Triple: ['__subject__ ACM Transactions on Information Systems __predicate__ LCCN number __object__ 89646863']
Text: 89646863 is the LCCN number of ACM Transactions on Information Systems.
Subject: ACM Transactions on Information Systems
Predicate: LCCN number
Object: 89646863

Triple: ['__subject__ ACM Transactions on Information Systems __predicate__ abbreviation __object__ ACM Trans. Inf. Syst.']
Text: ACM Transactions on Information Systems has the abbreviation of ACM Trans. Inf. Syst.
Subject: ACM Transactions on Information Systems
Predicate: abbreviation
Object: ACM Trans. Inf. Syst.

Triple: ['__subject__ ACM Transactions on Information Systems __predicate__ abbreviation __object__ ACM Trans. Inf. Syst.']
Text: The abbreviation "ACM Trans. Inf. Syst." is for ACM Transactions on Information Systems.
Subject: ACM Transactions on Information Systems
Predicate: abbreviation
Object: ACM Trans. Inf. Syst.

Triple: ['__subject__ ACM Transactions on Information Systems __predicate__ abbreviation __object__ ACM Trans. Inf. Syst.']
Text: ACM Transactions on Information Systems is abbreviated to ACM Trans. Inf. Syst.
Subject: ACM Transactions on Information Systems
Predicate: abbreviation
Object: ACM Trans. Inf. Syst.

Triple: ['__subject__ ACM Transactions on Information Systems __predicate__ academicDiscipline __object__ Computer science']
Text: ACM Transactions on Information Systems is part of the academic Discipline of Computer Science.
Subject: ACM Transactions on Information Systems
Predicate: academicDiscipline
Object: Computer science

Triple: ['__subject__ ACM Transactions on Information Systems __predicate__ publisher __object__ Association for Computing Machinery']
Text: Association for Computing Machinery is the publisher of ACM Transactions on information Systems.
Subject: ACM Transactions on Information Systems
Predicate: publisher
Object: Association for Computing Machinery

Triple: ['__subject__ ACM Transactions on Information Systems __predicate__ publisher __object__ Association for Computing Machinery']
Text: ACM Transactions on Information Systems is published by the Association for Computing Machinery.
Subject: ACM Transactions on Information Systems
Predicate: publisher
Object: Association for Computing Machinery

Triple: ['__subject__ ACM Transactions on Information Systems __predicate__ publisher __object__ Association for Computing Machinery']
Text: ACM Transactions on Information Systems was published by the Association for Computing Machinery.
Subject: ACM Transactions on Information Systems
Predicate: publisher
Object: Association for Computing Machinery

Triple: ['__subject__ AIDS (journal) __predicate__ issnNumber __object__ 0269-9370']
Text: ISSN number 0269-9370 is the AIDS journal.
Subject: AIDS (journal)
Predicate: issnNumber
Object: 0269-9370

Triple: ['__subject__ AIDS (journal) __predicate__ issnNumber __object__ 0269-9370']
Text: AIDS (journal) has the ISSN number of "0269-9370".
Subject: AIDS (journal)
Predicate: issnNumber
Object: 0269-9370

Triple: ['__subject__ AIDS (journal) __predicate__ issnNumber __object__ 0269-9370']
Text: The ISSN number of AIDS (journal) is 0269-9370.
Subject: AIDS (journal)
Predicate: issnNumber
Object: 0269-9370

Triple: ['__subject__ AIDS (journal) __predicate__ issnNumber __object__ 1473-5571']
Text: AIDS journal has the ISSN number 1473-5571.
Subject: AIDS (journal)
Predicate: issnNumber
Object: 1473-5571

Triple: ['__subject__ AIDS (journal) __predicate__ issnNumber __object__ 1473-5571']
Text: The Aids Journal ISSN number is 1473-5571.
Subject: AIDS (journal)
Predicate: issnNumber
Object: 1473-5571

Triple: ['__subject__ AIDS (journal) __predicate__ issnNumber __object__ 1473-5571']
Text: The ISSN number of AIDS journal is 1473-5571.
Subject: AIDS (journal)
Predicate: issnNumber
Object: 1473-5571

Triple: ['__subject__ AIDS (journal) __predicate__ LCCN number __object__ 90640840']
Text: The AIDS journal has the LCCN number 90640840.
Subject: AIDS (journal)
Predicate: LCCN number
Object: 90640840

Triple: ['__subject__ AIDS (journal) __predicate__ LCCN number __object__ 90640840']
Text: The LCCN number of AIDS (journal) is 90640840.
Subject: AIDS (journal)
Predicate: LCCN number
Object: 90640840

Triple: ['__subject__ AIDS (journal) __predicate__ LCCN number __object__ 90640840']
Text: The LCCN number of AIDS journal is 90640840.
Subject: AIDS (journal)
Predicate: LCCN number
Object: 90640840

Triple: ['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV']
Text: AIDS (journal) comes under the academic discipline HIV.
Subject: AIDS (journal)
Predicate: academicDiscipline
Object: HIV

Triple: ['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV']
Text: The academic discipline of AIDS journal is HIV.
Subject: AIDS (journal)
Predicate: academicDiscipline
Object: HIV

Triple: ['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV']
Text: The AIDS (journal) publishes about HIV.
Subject: AIDS (journal)
Predicate: academicDiscipline
Object: HIV

Triple: ['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV/AIDS']
Text: The AIDS journal studies HIV/AIDS.
Subject: AIDS (journal)
Predicate: academicDiscipline
Object: HIV/AIDS

Triple: ['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV/AIDS']
Text: The Aids Journal's discipline is HIV/AIDS.
Subject: AIDS (journal)
Predicate: academicDiscipline
Object: HIV/AIDS

Triple: ['__subject__ AIDS (journal) __predicate__ academicDiscipline __object__ HIV/AIDS']
Text: The AIDS journal belongs to the academic discipline, HIV/AIDS.
Subject: AIDS (journal)
Predicate: academicDiscipline
Object: HIV/AIDS

Triple: ['__subject__ AIDS (journal) __predicate__ firstPublicationYear __object__ 1987']
Text: AIDS (journal) was first published in 1987.
Subject: AIDS (journal)
Predicate: firstPublicationYear
Object: 1987

Triple: ['__subject__ AIDS (journal) __predicate__ publisher __object__ Lippincott Williams & Wilkins']
Text: The AIDS journal is published by Lippincott, Williams & Wilkins.
Subject: AIDS (journal)
Predicate: publisher
Object: Lippincott Williams & Wilkins

Triple: ['__subject__ AIDS (journal) __predicate__ publisher __object__ Lippincott Williams & Wilkins']
Text: AIDS (journal) was published by Lippincott Williams & Wilkins.
Subject: AIDS (journal)
Predicate: publisher
Object: Lippincott Williams & Wilkins

Triple: ['__subject__ AIDS (journal) __predicate__ publisher __object__ Lippincott Williams & Wilkins']
Text: The AIDS (journal) is published by Lippincott Williams & Wilkins.
Subject: AIDS (journal)
Predicate: publisher
Object: Lippincott Williams & Wilkins

Triple: ['__subject__ AIP Advances __predicate__ codenCode __object__ AAIDBI']
Text: The coden code for AIP Advances is AAIDBI.
Subject: AIP Advances
Predicate: codenCode
Object: AAIDBI

Triple: ['__subject__ AIP Advances __predicate__ codenCode __object__ AAIDBI']
Text: AIP Advances has a CODEN code of "AAIDBI".
Subject: AIP Advances
Predicate: codenCode
Object: AAIDBI

Triple: ['__subject__ AIP Advances __predicate__ issnNumber __object__ 2158-3226']
Text: AIP Advances, ISSN number 2158-3226.
Subject: AIP Advances
Predicate: issnNumber
Object: 2158-3226

Triple: ['__subject__ AIP Advances __predicate__ issnNumber __object__ 2158-3226']
Text: AIP Advances has the ISSN number of "2158-3226".
Subject: AIP Advances
Predicate: issnNumber
Object: 2158-3226

Triple: ['__subject__ AIP Advances __predicate__ issnNumber __object__ 2158-3226']
Text: AIP Advances has the ISSN number 2158-3226.
Subject: AIP Advances
Predicate: issnNumber
Object: 2158-3226

Triple: ['__subject__ AIP Advances __predicate__ abbreviation __object__ AIP Adv.']
Text: "AIP Adv." is the abbreviation of AIP Advances.
Subject: AIP Advances
Predicate: abbreviation
Object: AIP Adv.

Triple: ['__subject__ AIP Advances __predicate__ abbreviation __object__ AIP Adv.']
Text: AIP Advances is abbreviated to AIP Adv.
Subject: AIP Advances
Predicate: abbreviation
Object: AIP Adv.

Triple: ['__subject__ AIP Advances __predicate__ academicDiscipline __object__ Physics']
Text: AIP Advances is devoted to the study of physics.
Subject: AIP Advances
Predicate: academicDiscipline
Object: Physics

Triple: ['__subject__ AIP Advances __predicate__ academicDiscipline __object__ Physics']
Text: AIP Advances covers the discipline of physics.
Subject: AIP Advances
Predicate: academicDiscipline
Object: Physics

Triple: ['__subject__ AIP Advances __predicate__ editor __object__ Vincent H. Crespi, Bernard S. Gerstman, A.T. Charlie Johnson,  Masaaki Tanaka, Enge G. Wang']
Text: AIP Advances editors include the following: Vincent H. Crespi, Bernard S. Gerstman, A.T. Charlie Johnson, Masaaki Tanaka, Enge G. Wang.
Subject: AIP Advances
Predicate: editor
Object: Vincent H. Crespi, Bernard S. Gerstman, A.T. Charlie Johnson,  Masaaki Tanaka, Enge G. Wang

Triple: ['__subject__ AIP Advances __predicate__ editor __object__ Vincent H. Crespi, Bernard S. Gerstman, A.T. Charlie Johnson,  Masaaki Tanaka, Enge G. Wang']
Text: The editors of AIP Advances are Vincent H. Crespi, Bernard S. Gerstman, A.T. Charlie Johnson, Masaaki Tanaka, Enge G. Wang.
Subject: AIP Advances
Predicate: editor
Object: Vincent H. Crespi, Bernard S. Gerstman, A.T. Charlie Johnson,  Masaaki Tanaka, Enge G. Wang

Triple: ['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson']
Text: A T Charlie Johnson is the editor of AIP Advances.
Subject: AIP Advances
Predicate: editor
Object: A.T. Charlie Johnson

Triple: ['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson']
Text: The editor of AIP Advances is A.T. Charlie Johnson.
Subject: AIP Advances
Predicate: editor
Object: A.T. Charlie Johnson

Triple: ['__subject__ AIP Advances __predicate__ editor __object__ A.T. Charlie Johnson']
Text: AIP Advances was edited by A.T. Charlie Johnson.
Subject: AIP Advances
Predicate: editor
Object: A.T. Charlie Johnson

Triple: ['__subject__ AIP Advances __predicate__ impactFactor __object__ 1.524']
Text: AIP Advances has the impact factor 1.524.
Subject: AIP Advances
Predicate: impactFactor
Object: 1.524

Triple: ['__subject__ AIP Advances __predicate__ impactFactor __object__ 1.524']
Text: The impact factor of AIP Advances is 1.524.
Subject: AIP Advances
Predicate: impactFactor
Object: 1.524

Triple: ['__subject__ AIP Advances __predicate__ publisher __object__ American Institute of Physics']
Text: The American Institute of Physics publishes AIP Advances.
Subject: AIP Advances
Predicate: publisher
Object: American Institute of Physics

Triple: ['__subject__ AIP Advances __predicate__ publisher __object__ American Institute of Physics']
Text: AIP Advances was published by American Institute of Physics.
Subject: AIP Advances
Predicate: publisher
Object: American Institute of Physics

Triple: ['__subject__ AIP Advances __predicate__ publisher __object__ American Institute of Physics']
Text: AIP Advances publisher is American Institute of Physics.
Subject: AIP Advances
Predicate: publisher
Object: American Institute of Physics

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ isbnNumber __object__ 0-7653-0633-6']
Text: The ISBN number of the book A Fortress of Grey Ice is 0-7653-0633-6.
Subject: A Fortress of Grey Ice
Predicate: isbnNumber
Object: 0-7653-0633-6

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ isbnNumber __object__ 0-7653-0633-6']
Text: The ISBN number of A Fortress of Grey Ice is 0-7653-0633-6.
Subject: A Fortress of Grey Ice
Predicate: isbnNumber
Object: 0-7653-0633-6

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ isbnNumber __object__ 0-7653-0633-6']
Text: A Fortress of Grey Ice's ISBN number is 0-7653-0633-6.
Subject: A Fortress of Grey Ice
Predicate: isbnNumber
Object: 0-7653-0633-6

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ oclcNumber __object__ 51969173']
Text: The OCLC number of A Fortress of Grey Ice is 51969173.
Subject: A Fortress of Grey Ice
Predicate: oclcNumber
Object: 51969173

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ author __object__ J. V. Jones']
Text: J.V. Jones authored A Fortress of Grey Ice.
Subject: A Fortress of Grey Ice
Predicate: author
Object: J. V. Jones

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ author __object__ J. V. Jones']
Text: The author of A Fortress of Grey Ice is J.V. Jones.
Subject: A Fortress of Grey Ice
Predicate: author
Object: J. V. Jones

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ author __object__ J. V. Jones']
Text: A Fortress of Grey Ice was written by J. V. Jones.
Subject: A Fortress of Grey Ice
Predicate: author
Object: J. V. Jones

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ country __object__ United States']
Text: A Fortress of Grey Ice is from the United States.
Subject: A Fortress of Grey Ice
Predicate: country
Object: United States

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ language __object__ English language']
Text: A Fortress of Grey Ice is written in the English language.
Subject: A Fortress of Grey Ice
Predicate: language
Object: English language

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ language __object__ English language']
Text: A Fortress of Grey Ice was originally published in English.
Subject: A Fortress of Grey Ice
Predicate: language
Object: English language

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ mediaType __object__ Print']
Text: The book "A Fortress of Grey Ice" can be found in print.
Subject: A Fortress of Grey Ice
Predicate: mediaType
Object: Print

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ mediaType __object__ Print']
Text: A Fortress of Grey Ice was made in "Print".
Subject: A Fortress of Grey Ice
Predicate: mediaType
Object: Print

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ mediaType __object__ Print']
Text: A fortress of Grey Ice is available in print.
Subject: A Fortress of Grey Ice
Predicate: mediaType
Object: Print

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ numberOfPages __object__ 672']
Text: A Fortress of Grey Ice has 672 pages.
Subject: A Fortress of Grey Ice
Predicate: numberOfPages
Object: 672

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ publisher __object__ Tor Books']
Text: A Fortress of Grey Ice is published by Tor Books.
Subject: A Fortress of Grey Ice
Predicate: publisher
Object: Tor Books

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ publisher __object__ Tor Books']
Text: Tor Books publishes A Fortress of Grey Ice.
Subject: A Fortress of Grey Ice
Predicate: publisher
Object: Tor Books

Triple: ['__subject__ A Fortress of Grey Ice __predicate__ publisher __object__ Tor Books']
Text: The book "A Fortress of Grey Ice" was published by Tor Books.
Subject: A Fortress of Grey Ice
Predicate: publisher
Object: Tor Books

Triple: ['__subject__ A Glastonbury Romance __predicate__ isbnNumber __object__ 0-7156-3648-0']
Text: A Glastonbury Romance has the ISBN number 0-7156-3648-0.
Subject: A Glastonbury Romance
Predicate: isbnNumber
Object: 0-7156-3648-0

Triple: ['__subject__ A Glastonbury Romance __predicate__ isbnNumber __object__ 0-7156-3648-0']
Text: The ISBN number of A Glastonbury Romance is 0-7156-3648-0.
Subject: A Glastonbury Romance
Predicate: isbnNumber
Object: 0-7156-3648-0

Triple: ['__subject__ A Glastonbury Romance __predicate__ libraryofCongressClassification __object__ PR6031.O867']
Text: The Library of Congress Classification of "A Glastonbury Romance" is PR6031.O867.
Subject: A Glastonbury Romance
Predicate: libraryofCongressClassification
Object: PR6031.O867

Triple: ['__subject__ A Glastonbury Romance __predicate__ libraryofCongressClassification __object__ PR6031.O867']
Text: The Library of Congress Classification of A Glastonbury Romance is PR6031O867.
Subject: A Glastonbury Romance
Predicate: libraryofCongressClassification
Object: PR6031.O867

Triple: ['__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys']
Text: The author of A Glastonbury Romance is John Cowper Powys.
Subject: A Glastonbury Romance
Predicate: author
Object: John Cowper Powys

Triple: ['__subject__ A Glastonbury Romance __predicate__ author __object__ John Cowper Powys']
Text: A Glastonbury Romance was written by John Cowper Powys.
Subject: A Glastonbury Romance
Predicate: author
Object: John Cowper Powys

Triple: ['__subject__ A Glastonbury Romance __predicate__ followedBy __object__ Weymouth Sands']
Text: The book "A Glastonbury Romance" was followed by "Weymouth Sands".
Subject: A Glastonbury Romance
Predicate: followedBy
Object: Weymouth Sands

Triple: ['__subject__ A Glastonbury Romance __predicate__ followedBy __object__ Weymouth Sands']
Text: A Glastonbury Romance was followed by Weymouth Sands.
Subject: A Glastonbury Romance
Predicate: followedBy
Object: Weymouth Sands

Triple: ['__subject__ A Glastonbury Romance __predicate__ mediaType __object__ Print']
Text: A Glastonbury Romance is in print.
Subject: A Glastonbury Romance
Predicate: mediaType
Object: Print

Triple: ['__subject__ A Glastonbury Romance __predicate__ numberOfPages __object__ 1174']
Text: A Glastonbury Romance has 1174 pages.
Subject: A Glastonbury Romance
Predicate: numberOfPages
Object: 1174

Triple: ['__subject__ A Glastonbury Romance __predicate__ precededBy __object__ Wolf Solent']
Text: A Glastonbury Romance was preceded By Wolf Solent.
Subject: A Glastonbury Romance
Predicate: precededBy
Object: Wolf Solent

Triple: ['__subject__ A Glastonbury Romance __predicate__ precededBy __object__ Wolf Solent']
Text: A Glastonbury Romance is the sequel to Wolf Solent.
Subject: A Glastonbury Romance
Predicate: precededBy
Object: Wolf Solent

Triple: ['__subject__ A Glastonbury Romance __predicate__ publisher __object__ Simon & Schuster']
Text: A Glastonbury Romance is published by Simon & Schuster.
Subject: A Glastonbury Romance
Predicate: publisher
Object: Simon & Schuster

Triple: ['__subject__ A Glastonbury Romance __predicate__ publisher __object__ Simon & Schuster']
Text: Simon & Schuster is the publisher of A Glastonbury Romance.
Subject: A Glastonbury Romance
Predicate: publisher
Object: Simon & Schuster

Triple: ['__subject__ A Glastonbury Romance __predicate__ publisher __object__ The Bodley Head']
Text: A Glastonbury Romance is published by The Bodley Head.
Subject: A Glastonbury Romance
Predicate: publisher
Object: The Bodley Head

Triple: ['__subject__ A Glastonbury Romance __predicate__ publisher __object__ The Bodley Head']
Text: The Bodley Head published A Glastonbury Romance.
Subject: A Glastonbury Romance
Predicate: publisher
Object: The Bodley Head

Triple: ['__subject__ A Glastonbury Romance __predicate__ publisher __object__ The Bodley Head']
Text: A Glastonbury Romance was published by The Bodley Head.
Subject: A Glastonbury Romance
Predicate: publisher
Object: The Bodley Head

Triple: ['__subject__ A Long Long Way __predicate__ oclcNumber __object__ 57392246']
Text: The OCLC number of A Long Long Way is 57392246.
Subject: A Long Long Way
Predicate: oclcNumber
Object: 57392246

Triple: ['__subject__ A Long Long Way __predicate__ country __object__ Ireland']
Text: A Long Long Way comes from Ireland.
Subject: A Long Long Way
Predicate: country
Object: Ireland

Triple: ['__subject__ A Long Long Way __predicate__ country __object__ Ireland']
Text: A Long Long Way was written in Ireland.
Subject: A Long Long Way
Predicate: country
Object: Ireland

Triple: ['__subject__ A Long Long Way __predicate__ followedBy __object__ The Secret Scripture']
Text: The novel A Long Long Way was followed by The Secret Scripture.
Subject: A Long Long Way
Predicate: followedBy
Object: The Secret Scripture

Triple: ['__subject__ A Long Long Way __predicate__ followedBy __object__ The Secret Scripture']
Text: The book A Long Long Way was followed by The Secret Scripture.
Subject: A Long Long Way
Predicate: followedBy
Object: The Secret Scripture

Triple: ['__subject__ A Long Long Way __predicate__ followedBy __object__ The Secret Scripture']
Text: The book The Secret Scripture followed the book "A Long Long Way".
Subject: A Long Long Way
Predicate: followedBy
Object: The Secret Scripture

Triple: ['__subject__ A Long Long Way __predicate__ mediaType __object__ Print  & Paperback']
Text: A Long Long Way was published in Print & Paperback.
Subject: A Long Long Way
Predicate: mediaType
Object: Print  & Paperback

Triple: ['__subject__ A Long Long Way __predicate__ mediaType __object__ Hardcover']
Text: A Long Long Way is available in hardcover.
Subject: A Long Long Way
Predicate: mediaType
Object: Hardcover

Triple: ['__subject__ A Long Long Way __predicate__ numberOfPages __object__ 292']
Text: A Long Long Way is 292 pages long.
Subject: A Long Long Way
Predicate: numberOfPages
Object: 292

Triple: ['__subject__ A Long Long Way __predicate__ numberOfPages __object__ 292']
Text: A Long Long Way has 292 pages in it.
Subject: A Long Long Way
Predicate: numberOfPages
Object: 292

Triple: ['__subject__ A Long Long Way __predicate__ precededBy __object__ Annie Dunne']
Text: Annie Dunne preceded A Long Long Way.
Subject: A Long Long Way
Predicate: precededBy
Object: Annie Dunne

Triple: ['__subject__ A Long Long Way __predicate__ precededBy __object__ Annie Dunne']
Text: A Long Long Way is preceded by Annie Dunne.
Subject: A Long Long Way
Predicate: precededBy
Object: Annie Dunne

Triple: ['__subject__ A Long Long Way __predicate__ precededBy __object__ Annie Dunne']
Text: A Long Long Way was preceded by Annie Dunne.
Subject: A Long Long Way
Predicate: precededBy
Object: Annie Dunne

Triple: ['__subject__ A Long Long Way __predicate__ publisher __object__ Viking Press']
Text: The book "A Long Long Way was published by Viking Press.
Subject: A Long Long Way
Predicate: publisher
Object: Viking Press

Triple: ['__subject__ A Long Long Way __predicate__ publisher __object__ Viking Press']
Text: A Long Long Way was published by Viking Press.
Subject: A Long Long Way
Predicate: publisher
Object: Viking Press

Triple: ['__subject__ A Long Long Way __predicate__ publisher __object__ Viking Press']
Text: A long long way is published by Viking press.
Subject: A Long Long Way
Predicate: publisher
Object: Viking Press

Triple: ['__subject__ A Loyal Character Dancer __predicate__ oclcNumber __object__ 49805501']
Text: The OCLC number of A Loyal Character Dancer is 49805501.
Subject: A Loyal Character Dancer
Predicate: oclcNumber
Object: 49805501

Triple: ['__subject__ A Loyal Character Dancer __predicate__ author __object__ Qiu Xiaolong']
Text: A Loyal Character Dancer was penned by Qiu Xiaolong.
Subject: A Loyal Character Dancer
Predicate: author
Object: Qiu Xiaolong

Triple: ['__subject__ A Loyal Character Dancer __predicate__ author __object__ Qiu Xiaolong']
Text: Qiu Xiaolong is the author of A Loyal Character Dancer.
Subject: A Loyal Character Dancer
Predicate: author
Object: Qiu Xiaolong

Triple: ['__subject__ A Loyal Character Dancer __predicate__ author __object__ Qiu Xiaolong']
Text: A Loyal Character Dancer was written by Qiu Xiaolong.
Subject: A Loyal Character Dancer
Predicate: author
Object: Qiu Xiaolong

Triple: ['__subject__ A Loyal Character Dancer __predicate__ country __object__ United States']
Text: A Loyal Character Dancer is published in the United States.
Subject: A Loyal Character Dancer
Predicate: country
Object: United States

Triple: ['__subject__ A Loyal Character Dancer __predicate__ language __object__ English language']
Text: A Loyal Character Dancer is written in English.
Subject: A Loyal Character Dancer
Predicate: language
Object: English language

Triple: ['__subject__ A Loyal Character Dancer __predicate__ mediaType __object__ Print']
Text: A Loyal Character Dancer is in print.
Subject: A Loyal Character Dancer
Predicate: mediaType
Object: Print

Triple: ['__subject__ A Loyal Character Dancer __predicate__ mediaType __object__ Hardcover']
Text: A Loyal Character Dancer can be found in hardcover.
Subject: A Loyal Character Dancer
Predicate: mediaType
Object: Hardcover

Triple: ['__subject__ A Loyal Character Dancer __predicate__ mediaType __object__ Hardcover']
Text: A Loyal Character Dancer was published in Hardcover.
Subject: A Loyal Character Dancer
Predicate: mediaType
Object: Hardcover

Triple: ['__subject__ A Loyal Character Dancer __predicate__ numberOfPages __object__ 360']
Text: A loyal Character Dancer is 360 pages long.
Subject: A Loyal Character Dancer
Predicate: numberOfPages
Object: 360

Triple: ['__subject__ A Loyal Character Dancer __predicate__ numberOfPages __object__ 360']
Text: A Loyal Character Dancer has 360 pages.
Subject: A Loyal Character Dancer
Predicate: numberOfPages
Object: 360

Triple: ['__subject__ A Loyal Character Dancer __predicate__ publisher __object__ Soho Press']
Text: A Loyal Character Dancer is published by Soho Press.
Subject: A Loyal Character Dancer
Predicate: publisher
Object: Soho Press

Triple: ['__subject__ A Loyal Character Dancer __predicate__ publisher __object__ Soho Press']
Text: A Loyal Character Dancer was published by Soho Press.
Subject: A Loyal Character Dancer
Predicate: publisher
Object: Soho Press

Triple: ['__subject__ A Severed Wasp __predicate__ isbnNumber __object__ 0-374-26131-8']
Text: A Severed Wasp has an ISBN number of "0-374-26131-8".
Subject: A Severed Wasp
Predicate: isbnNumber
Object: 0-374-26131-8

Triple: ['__subject__ A Severed Wasp __predicate__ isbnNumber __object__ 0-374-26131-8']
Text: A Severed Wasp has the ISBN number 0-374-26131-8.
Subject: A Severed Wasp
Predicate: isbnNumber
Object: 0-374-26131-8

Triple: ['__subject__ A Severed Wasp __predicate__ libraryofCongressClassification __object__ PS3523.E55 S4 1982']
Text: PS3523.E55 S4 1982 is the Library of Congress Classification of "A Severed Wasp".
Subject: A Severed Wasp
Predicate: libraryofCongressClassification
Object: PS3523.E55 S4 1982

Triple: ['__subject__ A Severed Wasp __predicate__ libraryofCongressClassification __object__ PS3523.E55 S4 1982']
Text: The Library of Congress Classification of A Severed Wasp is PS3523.E55 S4 1982.
Subject: A Severed Wasp
Predicate: libraryofCongressClassification
Object: PS3523.E55 S4 1982

Triple: ['__subject__ A Severed Wasp __predicate__ oclcNumber __object__ 8805735']
Text: A Severed Wasp was assigned the OCLC number 8805735.
Subject: A Severed Wasp
Predicate: oclcNumber
Object: 8805735

Triple: ['__subject__ A Severed Wasp __predicate__ oclcNumber __object__ 8805735']
Text: The OCLC number of A Severed Wasp is 8805735.
Subject: A Severed Wasp
Predicate: oclcNumber
Object: 8805735

Triple: ['__subject__ A Severed Wasp __predicate__ country __object__ United States']
Text: A Severed Wasp is from the United States.
Subject: A Severed Wasp
Predicate: country
Object: United States

Triple: ['__subject__ A Severed Wasp __predicate__ country __object__ United States']
Text: A severed Wasp originates from the United States.
Subject: A Severed Wasp
Predicate: country
Object: United States

Triple: ['__subject__ A Severed Wasp __predicate__ language __object__ English language']
Text: A Severed Wasp was written in the English language.
Subject: A Severed Wasp
Predicate: language
Object: English language

Triple: ['__subject__ A Severed Wasp __predicate__ language __object__ English language']
Text: A Severed Wasp is in the English language.
Subject: A Severed Wasp
Predicate: language
Object: English language

Triple: ['__subject__ A Severed Wasp __predicate__ mediaType __object__ Print']
Text: A severed wasp can be found in print.
Subject: A Severed Wasp
Predicate: mediaType
Object: Print

Triple: ['__subject__ A Severed Wasp __predicate__ mediaType __object__ Print']
Text: The book "A Severed Wasp" is available in print.
Subject: A Severed Wasp
Predicate: mediaType
Object: Print

Triple: ['__subject__ A Severed Wasp __predicate__ mediaType __object__ Hardcover']
Text: A Severed Wasp is a hardcover book.
Subject: A Severed Wasp
Predicate: mediaType
Object: Hardcover

Triple: ['__subject__ A Severed Wasp __predicate__ mediaType __object__ Hardcover']
Text: A Severed Wasp was published in hardback.
Subject: A Severed Wasp
Predicate: mediaType
Object: Hardcover

Triple: ['__subject__ A Severed Wasp __predicate__ numberOfPages __object__ 388']
Text: 388 is the number of pages A severed Wasp has.
Subject: A Severed Wasp
Predicate: numberOfPages
Object: 388

Triple: ['__subject__ A Severed Wasp __predicate__ numberOfPages __object__ 388']
Text: There are 388 pages in the book "A Severed Wasp".
Subject: A Severed Wasp
Predicate: numberOfPages
Object: 388

Triple: ['__subject__ A Severed Wasp __predicate__ numberOfPages __object__ 388']
Text: A Severed Wasp has 388 pages.
Subject: A Severed Wasp
Predicate: numberOfPages
Object: 388

Triple: ['__subject__ A Severed Wasp __predicate__ publisher __object__ Farrar, Straus and Giroux']
Text: Farrar, Straus and Giroux publish A Severed Wasp.
Subject: A Severed Wasp
Predicate: publisher
Object: Farrar, Straus and Giroux

Triple: ['__subject__ A Severed Wasp __predicate__ publisher __object__ Farrar, Straus and Giroux']
Text: A Severed Wasp was published by Farrar, Straus, and Giroux.
Subject: A Severed Wasp
Predicate: publisher
Object: Farrar, Straus and Giroux

Triple: ['__subject__ A Severed Wasp __predicate__ publisher __object__ Farrar, Straus and Giroux']
Text: A severed wasp is published by Farrar, Straus and Giroux.
Subject: A Severed Wasp
Predicate: publisher
Object: Farrar, Straus and Giroux

Triple: ['__subject__ A Wizard of Mars __predicate__ isbnNumber __object__ 978-0-15-204770-2']
Text: A Wizard of Mars ISBN number is "978-0-15-204770-2".
Subject: A Wizard of Mars
Predicate: isbnNumber
Object: 978-0-15-204770-2

Triple: ['__subject__ A Wizard of Mars __predicate__ isbnNumber __object__ 978-0-15-204770-2']
Text: A Wizard of Mars has the ISBN number 978-0-15-204770-2.
Subject: A Wizard of Mars
Predicate: isbnNumber
Object: 978-0-15-204770-2

Triple: ['__subject__ A Wizard of Mars __predicate__ isbnNumber __object__ 978-0-15-204770-2']
Text: A Wizard of Mars' ISBN number is "978-0-15-204770-2".
Subject: A Wizard of Mars
Predicate: isbnNumber
Object: 978-0-15-204770-2

Triple: ['__subject__ A Wizard of Mars __predicate__ oclcNumber __object__ 318875313']
Text: The OCLC number of A Wizard of Mars is 318875313.
Subject: A Wizard of Mars
Predicate: oclcNumber
Object: 318875313

Triple: ['__subject__ A Wizard of Mars __predicate__ country __object__ United States']
Text: " A Wizard of Mars was Published in the United States ".
Subject: A Wizard of Mars
Predicate: country
Object: United States

Triple: ['__subject__ A Wizard of Mars __predicate__ country __object__ United States']
Text: A Wizard of Mars originates from the United States.
Subject: A Wizard of Mars
Predicate: country
Object: United States

Triple: ['__subject__ A Wizard of Mars __predicate__ mediaType __object__ Print']
Text: A Wizard of Mars is available in print form.
Subject: A Wizard of Mars
Predicate: mediaType
Object: Print

Triple: ['__subject__ A Wizard of Mars __predicate__ mediaType __object__ Print']
Text: A Wizard of Mars was published in print.
Subject: A Wizard of Mars
Predicate: mediaType
Object: Print

Triple: ['__subject__ A Wizard of Mars __predicate__ mediaType __object__ Hardcover']
Text: A Wizard of Mars is published in Hardcover.
Subject: A Wizard of Mars
Predicate: mediaType
Object: Hardcover

Triple: ['__subject__ A Wizard of Mars __predicate__ mediaType __object__ Hardcover']
Text: A Wizard of Mars was published in hardback.
Subject: A Wizard of Mars
Predicate: mediaType
Object: Hardcover

Triple: ['__subject__ A Wizard of Mars __predicate__ numberOfPages __object__ 560']
Text: A wizard of Mars is 560 pages long.
Subject: A Wizard of Mars
Predicate: numberOfPages
Object: 560

Triple: ['__subject__ A Wizard of Mars __predicate__ numberOfPages __object__ 560']
Text: There are 560 pages in "A Wizard of Mars".
Subject: A Wizard of Mars
Predicate: numberOfPages
Object: 560

Triple: ['__subject__ A Wizard of Mars __predicate__ numberOfPages __object__ 560']
Text: The book A Wizard of Mars has 560 pages.
Subject: A Wizard of Mars
Predicate: numberOfPages
Object: 560

Triple: ['__subject__ A Wizard of Mars __predicate__ precededBy __object__ Wizards at War']
Text: A Wizard of Mars is preceded by Wizards at War.
Subject: A Wizard of Mars
Predicate: precededBy
Object: Wizards at War

Triple: ['__subject__ A Wizard of Mars __predicate__ precededBy __object__ Wizards at War']
Text: Wizards at War preceded A Wizard of Mars.
Subject: A Wizard of Mars
Predicate: precededBy
Object: Wizards at War

Triple: ['__subject__ A Wizard of Mars __predicate__ precededBy __object__ Wizards at War']
Text: A Wizard of Mars was preceded by Wizards at War.
Subject: A Wizard of Mars
Predicate: precededBy
Object: Wizards at War

Triple: ['__subject__ A Wizard of Mars __predicate__ publisher __object__ Harcourt (publisher)']
Text: A Wizard of Mars was published by Harcourt.
Subject: A Wizard of Mars
Predicate: publisher
Object: Harcourt (publisher)

Triple: ['__subject__ A Wizard of Mars __predicate__ publisher __object__ Harcourt (publisher)']
Text: Harcourt is the publisher of A Wizard of Mars.
Subject: A Wizard of Mars
Predicate: publisher
Object: Harcourt (publisher)

Triple: ['__subject__ A Wizard of Mars __predicate__ publisher __object__ Harcourt (publisher)']
Text: A Wizard of Mars is published by Harcourt.
Subject: A Wizard of Mars
Predicate: publisher
Object: Harcourt (publisher)

Triple: ['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ codenCode __object__ AMHAAJ']
Text: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg has the CODEN code AMHAAJ.
Subject: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg
Predicate: codenCode
Object: AMHAAJ

Triple: ['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ codenCode __object__ AMHAAJ']
Text: The CODEN code for Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg is AMHAAJ.
Subject: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg
Predicate: codenCode
Object: AMHAAJ

Triple: ['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ codenCode __object__ AMHAAJ']
Text: The code for Abhandlungen aus dem Mathematischen Seminar der Universitat Hamburg is AMHAAJ.
Subject: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg
Predicate: codenCode
Object: AMHAAJ

Triple: ['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ issnNumber __object__ 1865-8784']
Text: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg has the ISSN number 1865-8784.
Subject: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg
Predicate: issnNumber
Object: 1865-8784

Triple: ['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ issnNumber __object__ 1865-8784']
Text: The Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg ISSN number is 1865-8784.
Subject: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg
Predicate: issnNumber
Object: 1865-8784

Triple: ['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ issnNumber __object__ 1865-8784']
Text: The ISSN number of Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg is 1865-8784.
Subject: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg
Predicate: issnNumber
Object: 1865-8784

Triple: ['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ abbreviation __object__ Abh. Math. Semin. Univ. Hambg.']
Text: "Abh.Math.Semin.Univ.Hambg" is the abbreviation for Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg.
Subject: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg
Predicate: abbreviation
Object: Abh. Math. Semin. Univ. Hambg.

Triple: ['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ abbreviation __object__ Abh. Math. Semin. Univ. Hambg.']
Text: The abbreviation for Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg is Abh. Math. Semin. Univ. Hambg.
Subject: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg
Predicate: abbreviation
Object: Abh. Math. Semin. Univ. Hambg.

Triple: ['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ abbreviation __object__ Abh. Math. Semin. Univ. Hambg.']
Text: The abbreviation of Abhandlungen aus dem Mathematischen Seminar der Universitat Hamburg is Abh. Math. Semin. Univ. Hambg.
Subject: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg
Predicate: abbreviation
Object: Abh. Math. Semin. Univ. Hambg.

Triple: ['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ academicDiscipline __object__ Pure mathematics']
Text: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg is concerned with the academic discipline of Pure Mathematics.
Subject: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg
Predicate: academicDiscipline
Object: Pure mathematics

Triple: ['__subject__ Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg __predicate__ publisher __object__ Springer Science+Business Media']
Text: Springer Science & Business Media is the publisher of Abhandlungen aus dem Mathematischen Seminar der Universitat Hamburg.
Subject: Abhandlungen aus dem Mathematischen Seminar der Universität Hamburg
Predicate: publisher
Object: Springer Science+Business Media

Triple: ['__subject__ Above the Veil __predicate__ isbnNumber __object__ 0-439-17685-9']
Text: The ISBN number of Above the Veil is 0-439-17685-9.
Subject: Above the Veil
Predicate: isbnNumber
Object: 0-439-17685-9

Triple: ['__subject__ Above the Veil __predicate__ isbnNumber __object__ 0-439-17685-9']
Text: Above the Veil has an ISBN number 0-439-17685-9.
Subject: Above the Veil
Predicate: isbnNumber
Object: 0-439-17685-9

Triple: ['__subject__ Above the Veil __predicate__ oclcNumber __object__ 46451790']
Text: Above the Veil has the OCLC number 46451790.
Subject: Above the Veil
Predicate: oclcNumber
Object: 46451790

Triple: ['__subject__ Above the Veil __predicate__ oclcNumber __object__ 46451790']
Text: Above the Veil has a OCLC number of 46451790.
Subject: Above the Veil
Predicate: oclcNumber
Object: 46451790

Triple: ['__subject__ Above the Veil __predicate__ country __object__ Australians']
Text: Above the Veil is from the country of Australia.
Subject: Above the Veil
Predicate: country
Object: Australians

Triple: ['__subject__ Above the Veil __predicate__ followedBy __object__ Into Battle (novel)']
Text: The novel "Into Battle" followed "Above the Veil".
Subject: Above the Veil
Predicate: followedBy
Object: Into Battle (novel)

Triple: ['__subject__ Above the Veil __predicate__ followedBy __object__ Into Battle (novel)']
Text: The novel Into Battle followed Above the Veil.
Subject: Above the Veil
Predicate: followedBy
Object: Into Battle (novel)

Triple: ['__subject__ Above the Veil __predicate__ followedBy __object__ Into Battle (novel)']
Text: Above the Veil is followed by Into Battle.
Subject: Above the Veil
Predicate: followedBy
Object: Into Battle (novel)

Triple: ['__subject__ Above the Veil __predicate__ language __object__ English language']
Text: Above the Veil is written in English.
Subject: Above the Veil
Predicate: language
Object: English language

Triple: ['__subject__ Above the Veil __predicate__ numberOfPages __object__ 248']
Text: Above the Veil is 248 pages long.
Subject: Above the Veil
Predicate: numberOfPages
Object: 248

Triple: ['__subject__ Above the Veil __predicate__ numberOfPages __object__ 248']
Text: Above the Veil contains 248 pages.
Subject: Above the Veil
Predicate: numberOfPages
Object: 248

Triple: ['__subject__ Above the Veil __predicate__ precededBy __object__ Aenir']
Text: Above the Veil was preceded By Aenir.
Subject: Above the Veil
Predicate: precededBy
Object: Aenir

Triple: ['__subject__ Above the Veil __predicate__ precededBy __object__ Aenir']
Text: Above the Veil is the sequel to Aenir.
Subject: Above the Veil
Predicate: precededBy
Object: Aenir

Triple: ['__subject__ Acta Mathematica Hungarica __predicate__ codenCode __object__ AMAHE9']
Text: The Acta Mathematica Hungarica CODEN code is "AMAHE9".
Subject: Acta Mathematica Hungarica
Predicate: codenCode
Object: AMAHE9

Triple: ['__subject__ Acta Mathematica Hungarica __predicate__ codenCode __object__ AMAHE9']
Text: The CODEN code for Acta Mathematica Hungarica is "AMAHE9".
Subject: Acta Mathematica Hungarica
Predicate: codenCode
Object: AMAHE9

Triple: ['__subject__ Acta Mathematica Hungarica __predicate__ codenCode __object__ AMAHE9']
Text: The code of Acta Mathematica Hungarica is AMAHE9.
Subject: Acta Mathematica Hungarica
Predicate: codenCode
Object: AMAHE9

Triple: ['__subject__ Acta Mathematica Hungarica __predicate__ issnNumber __object__ 0236-5294']
Text: The Acta Mathematica Hungarica has the ISSN number 0236-5294.
Subject: Acta Mathematica Hungarica
Predicate: issnNumber
Object: 0236-5294

Triple: ['__subject__ Acta Mathematica Hungarica __predicate__ issnNumber __object__ 0236-5294']
Text: The Acta Mathematica Hungarica ISSN number is "0236-5294".
Subject: Acta Mathematica Hungarica
Predicate: issnNumber
Object: 0236-5294

Triple: ['__subject__ Acta Mathematica Hungarica __predicate__ issnNumber __object__ 0236-5294']
Text: The ISSN number of Acta Mathematica Hungarica is 0236-5294.
Subject: Acta Mathematica Hungarica
Predicate: issnNumber
Object: 0236-5294

Triple: ['__subject__ Acta Mathematica Hungarica __predicate__ issnNumber __object__ 1588-2632']
Text: Acta Mathematica Hungarica is ISSN number 1588-2632.
Subject: Acta Mathematica Hungarica
Predicate: issnNumber
Object: 1588-2632

Triple: ['__subject__ Acta Mathematica Hungarica __predicate__ issnNumber __object__ 1588-2632']
Text: Acta Mathematica Hungarica has the ISSN number of "1588-2632".
Subject: Acta Mathematica Hungarica
Predicate: issnNumber
Object: 1588-2632

Triple: ['__subject__ Acta Mathematica Hungarica __predicate__ issnNumber __object__ 1588-2632']
Text: The ISSN number of Acta Mathematica Hungarica is 1588-2632.
Subject: Acta Mathematica Hungarica
Predicate: issnNumber
Object: 1588-2632

Triple: ['__subject__ Acta Mathematica Hungarica __predicate__ LCCN number __object__ 83646315']
Text: 83646315 is the LCCN number for Acta Mathematica Hungarica.
Subject: Acta Mathematica Hungarica
Predicate: LCCN number
Object: 83646315

Triple: ['__subject__ Acta Mathematica Hungarica __predicate__ LCCN number __object__ 83646315']
Text: Acta Mathematica Hungarica has the LCCN number 83646315.
Subject: Acta Mathematica Hungarica
Predicate: LCCN number
Object: 83646315

Triple: ['__subject__ Acta Mathematica Hungarica __predicate__ publisher __object__ Springer Science+Business Media']
Text: Acta Mathematica Hungarica is published by Springer Science and Business Media.
Subject: Acta Mathematica Hungarica
Predicate: publisher
Object: Springer Science+Business Media

Triple: ['__subject__ Acta Mathematica Hungarica __predicate__ publisher __object__ Springer Science+Business Media']
Text: Springer Science+Business Media is the publisher of Acta Mathematica Hungarica.
Subject: Acta Mathematica Hungarica
Predicate: publisher
Object: Springer Science+Business Media

Triple: ['__subject__ Acta Mathematica Hungarica __predicate__ publisher __object__ Springer Science+Business Media']
Text: Acta Mathematica Hungarica are the publishers of Springer Science+Business Media.
Subject: Acta Mathematica Hungarica
Predicate: publisher
Object: Springer Science+Business Media

Triple: ['__subject__ Acta Palaeontologica Polonica __predicate__ issnNumber __object__ 1732-2421']
Text: Acta Palaeontologica Polonica has the ISSN number 1732-2421.
Subject: Acta Palaeontologica Polonica
Predicate: issnNumber
Object: 1732-2421

Triple: ['__subject__ Acta Palaeontologica Polonica __predicate__ issnNumber __object__ 1732-2421']
Text: The Acta Palaeontologica Polonica ISSN number is "1732-2421".
Subject: Acta Palaeontologica Polonica
Predicate: issnNumber
Object: 1732-2421

Triple: ['__subject__ Acta Palaeontologica Polonica __predicate__ issnNumber __object__ 1732-2421']
Text: The ISSN number for the Acta Palaeontologica Polonica is 1732-2421.
Subject: Acta Palaeontologica Polonica
Predicate: issnNumber
Object: 1732-2421

Triple: ['__subject__ Acta Palaeontologica Polonica __predicate__ LCCN number __object__ 60040714']
Text: The Acta Palaeontologica Polonica has a LCCN number of 60040714.
Subject: Acta Palaeontologica Polonica
Predicate: LCCN number
Object: 60040714

Triple: ['__subject__ Acta Palaeontologica Polonica __predicate__ abbreviation __object__ Acta Palaeontol. Pol.']
Text: Acta Palaeontologica Polonica is abbreviated to Acta Palaeontol. Pol.
Subject: Acta Palaeontologica Polonica
Predicate: abbreviation
Object: Acta Palaeontol. Pol.

Triple: ['__subject__ Acta Palaeontologica Polonica __predicate__ abbreviation __object__ Acta Palaeontol. Pol.']
Text: The Acta Palaeontologica Polonica is abbreviated Acta Palaeontol. Pol.
Subject: Acta Palaeontologica Polonica
Predicate: abbreviation
Object: Acta Palaeontol. Pol.

Triple: ['__subject__ Acta Palaeontologica Polonica __predicate__ abbreviation __object__ Acta Palaeontol. Pol.']
Text: Acta Palaeontologica Polonica's abbreviated name is Acta Palaeontol. Pol.
Subject: Acta Palaeontologica Polonica
Predicate: abbreviation
Object: Acta Palaeontol. Pol.

Triple: ['__subject__ Acta Palaeontologica Polonica __predicate__ academicDiscipline __object__ Paleobiology']
Text: Paleobiology is the academic discipline of Acta Palaeontologica Polonica.
Subject: Acta Palaeontologica Polonica
Predicate: academicDiscipline
Object: Paleobiology

Triple: ['__subject__ Acta Palaeontologica Polonica __predicate__ academicDiscipline __object__ Paleontology']
Text: Acta Palaeontologica Polonica is academically focused on Paleontology.
Subject: Acta Palaeontologica Polonica
Predicate: academicDiscipline
Object: Paleontology

Triple: ['__subject__ Acta Palaeontologica Polonica __predicate__ academicDiscipline __object__ Paleontology']
Text: The Acta Palaeontologica Polonica comes under the academic discipline of paleontology.
Subject: Acta Palaeontologica Polonica
Predicate: academicDiscipline
Object: Paleontology

Triple: ['__subject__ Acta Palaeontologica Polonica __predicate__ publisher __object__ Institute of Paleobiology, Polish Academy of Sciences']
Text: Acta Palaeontologica Polonica was published by the Institute of Paleobiology, Polish Academy of Sciences.
Subject: Acta Palaeontologica Polonica
Predicate: publisher
Object: Institute of Paleobiology, Polish Academy of Sciences

Triple: ['__subject__ Acta Palaeontologica Polonica __predicate__ publisher __object__ Institute of Paleobiology, Polish Academy of Sciences']
Text: Acta Palaeontologica Polonica is published by the Institute of Paleobiology, Polish Academy of Sciences.
Subject: Acta Palaeontologica Polonica
Predicate: publisher
Object: Institute of Paleobiology, Polish Academy of Sciences

Triple: ['__subject__ Acta Palaeontologica Polonica __predicate__ publisher __object__ Polish Academy of Sciences']
Text: Polish Academy of Sciences is the publisher of Acta Palaeontologica Polonica.
Subject: Acta Palaeontologica Polonica
Predicate: publisher
Object: Polish Academy of Sciences

Triple: ['__subject__ Acta Palaeontologica Polonica __predicate__ publisher __object__ Polish Academy of Sciences']
Text: Acta Palaeontologica Polonica was published by the Polish Academy of Sciences.
Subject: Acta Palaeontologica Polonica
Predicate: publisher
Object: Polish Academy of Sciences

Triple: ['__subject__ Addiction (journal) __predicate__ codenCode __object__ ADICE5']
Text: Addiction (Journal) has the CODEN Code ADICE5.
Subject: Addiction (journal)
Predicate: codenCode
Object: ADICE5

Triple: ['__subject__ Addiction (journal) __predicate__ codenCode __object__ ADICE5']
Text: The CODEN code "ADICE5" is for Addiction (journal).
Subject: Addiction (journal)
Predicate: codenCode
Object: ADICE5

Triple: ['__subject__ Addiction (journal) __predicate__ issnNumber __object__ 0965-2140']
Text: The journal Addiction had the ISSN number 0965-2140.
Subject: Addiction (journal)
Predicate: issnNumber
Object: 0965-2140

Triple: ['__subject__ Addiction (journal) __predicate__ issnNumber __object__ 0965-2140']
Text: The Addiction journal has an ISSN number of 0965-2140.
Subject: Addiction (journal)
Predicate: issnNumber
Object: 0965-2140

Triple: ['__subject__ Addiction (journal) __predicate__ issnNumber __object__ 0965-2140']
Text: The ISSN number of Addiction journal is 0965-2140.
Subject: Addiction (journal)
Predicate: issnNumber
Object: 0965-2140

Triple: ['__subject__ Addiction (journal) __predicate__ issnNumber __object__ 1360-0443']
Text: The journal Addiction has the ISSN number 1360-0443.
Subject: Addiction (journal)
Predicate: issnNumber
Object: 1360-0443

Triple: ['__subject__ Addiction (journal) __predicate__ issnNumber __object__ 1360-0443']
Text: The ISSN number of Addiction (journal) is 1360-0443.
Subject: Addiction (journal)
Predicate: issnNumber
Object: 1360-0443

Triple: ['__subject__ Addiction (journal) __predicate__ issnNumber __object__ 1360-0443']
Text: The ISSN number of Addiction journal is 1360-0443.
Subject: Addiction (journal)
Predicate: issnNumber
Object: 1360-0443

Triple: ['__subject__ Addiction (journal) __predicate__ abbreviation __object__ Addiction']
Text: Addiction is the abbreviated version of the Addiction journal.
Subject: Addiction (journal)
Predicate: abbreviation
Object: Addiction

Triple: ['__subject__ Addiction (journal) __predicate__ abbreviation __object__ Addiction']
Text: Addiction (journal) has the abbreviation of "Addiction".
Subject: Addiction (journal)
Predicate: abbreviation
Object: Addiction

Triple: ['__subject__ Addiction (journal) __predicate__ abbreviation __object__ Addiction']
Text: Addiction (journal) is abbreviated to Addiction.
Subject: Addiction (journal)
Predicate: abbreviation
Object: Addiction

Triple: ['__subject__ Addiction (journal) __predicate__ publisher __object__ Wiley-Blackwell on behalf of the Society for the Study of Addiction']
Text: The Addiction journal is published by Wiley-Blackwell on behalf of the Society for the Study of Addiction.
Subject: Addiction (journal)
Predicate: publisher
Object: Wiley-Blackwell on behalf of the Society for the Study of Addiction

Triple: ['__subject__ Addiction (journal) __predicate__ publisher __object__ Wiley-Blackwell on behalf of the Society for the Study of Addiction']
Text: Addiction journal is published by Wiley-Blackwell, on behalf of the Society for the Study of Addiction.
Subject: Addiction (journal)
Predicate: publisher
Object: Wiley-Blackwell on behalf of the Society for the Study of Addiction

Triple: ['__subject__ Addiction (journal) __predicate__ publisher __object__ Wiley-Blackwell on behalf of the Society for the Study of Addiction']
Text: The journal Addiction is published by Wiley-Blackwell on behalf of the Society for the Study of Addiction.
Subject: Addiction (journal)
Predicate: publisher
Object: Wiley-Blackwell on behalf of the Society for the Study of Addiction

Triple: ['__subject__ Administrative Science Quarterly __predicate__ codenCode __object__ ASCQAG']
Text: The Administrative Science Quarterly has a Coden code of "ASCQAG".
Subject: Administrative Science Quarterly
Predicate: codenCode
Object: ASCQAG

Triple: ['__subject__ Administrative Science Quarterly __predicate__ codenCode __object__ ASCQAG']
Text: Administrative Science Quarterly has a CODEN code of "ASCQAG".
Subject: Administrative Science Quarterly
Predicate: codenCode
Object: ASCQAG

Triple: ['__subject__ Administrative Science Quarterly __predicate__ codenCode __object__ ASCQAG']
Text: The code for Administrative Science Quarterly is ASCQAG.
Subject: Administrative Science Quarterly
Predicate: codenCode
Object: ASCQAG

Triple: ['__subject__ Administrative Science Quarterly __predicate__ issnNumber __object__ 0001-8392']
Text: Administrative Science Quarterly has the ISSN number of 0001-8392.
Subject: Administrative Science Quarterly
Predicate: issnNumber
Object: 0001-8392

Triple: ['__subject__ Administrative Science Quarterly __predicate__ issnNumber __object__ 0001-8392']
Text: The ISSN number "0001-8392" is for Administrative Science Quarterly.
Subject: Administrative Science Quarterly
Predicate: issnNumber
Object: 0001-8392

Triple: ['__subject__ Administrative Science Quarterly __predicate__ oclcNumber __object__ 1461102']
Text: Administrative Science Quarterly has the OCLC number 1461102.
Subject: Administrative Science Quarterly
Predicate: oclcNumber
Object: 1461102

Triple: ['__subject__ Administrative Science Quarterly __predicate__ oclcNumber __object__ 1461102']
Text: 1461102 is the OCLC number for Administrative Science Quarterly.
Subject: Administrative Science Quarterly
Predicate: oclcNumber
Object: 1461102

Triple: ['__subject__ Administrative Science Quarterly __predicate__ oclcNumber __object__ 1461102']
Text: The Administrative Science Quarterly has a OCLC number of 1461102.
Subject: Administrative Science Quarterly
Predicate: oclcNumber
Object: 1461102

Triple: ['__subject__ Administrative Science Quarterly __predicate__ abbreviation __object__ Admin. Sci. Q.']
Text: Administrative Science Quarterly is abbreviated to Admin. Sci. Q.
Subject: Administrative Science Quarterly
Predicate: abbreviation
Object: Admin. Sci. Q.

Triple: ['__subject__ Administrative Science Quarterly __predicate__ abbreviation __object__ Admin. Sci. Q.']
Text: Admin. Sci. Q is the abbreviation for the Administrative Science Quarterly.
Subject: Administrative Science Quarterly
Predicate: abbreviation
Object: Admin. Sci. Q.

Triple: ['__subject__ Administrative Science Quarterly __predicate__ abbreviation __object__ Admin. Sci. Q.']
Text: The abbreviation of the Administrative Science Quarterly is Admin. Sci. Q.
Subject: Administrative Science Quarterly
Predicate: abbreviation
Object: Admin. Sci. Q.

Triple: ['__subject__ Administrative Science Quarterly __predicate__ academicDiscipline __object__ Management']
Text: The Administrative Science Quarterly comes under the academic discipline of Management.
Subject: Administrative Science Quarterly
Predicate: academicDiscipline
Object: Management

Triple: ['__subject__ Administrative Science Quarterly __predicate__ academicDiscipline __object__ Management']
Text: The academic discipline of Administrative Science Quarterly is Management.
Subject: Administrative Science Quarterly
Predicate: academicDiscipline
Object: Management

Triple: ['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ SAGE Publications for the Samuel Curtis Johnson Graduate School of Management, Cornell University']
Text: Administrative Science Quarterly is published by SAGE Publications for the Samuel Curtis Johnson Graduate School of Management, Cornell University.
Subject: Administrative Science Quarterly
Predicate: publisher
Object: SAGE Publications for the Samuel Curtis Johnson Graduate School of Management, Cornell University

Triple: ['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ SAGE Publications for the Samuel Curtis Johnson Graduate School of Management, Cornell University']
Text: Administrative Science Quarterly publisher of SAGE Publications for the Samuel Curtis Johnson Graduate School of Management, Cornell University.
Subject: Administrative Science Quarterly
Predicate: publisher
Object: SAGE Publications for the Samuel Curtis Johnson Graduate School of Management, Cornell University

Triple: ['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University']
Text: Cornell University is the publisher of the Administrative Science Quarterly.
Subject: Administrative Science Quarterly
Predicate: publisher
Object: Cornell University

Triple: ['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University']
Text: Cornell University is the publisher of Administrative Science Quarterly.
Subject: Administrative Science Quarterly
Predicate: publisher
Object: Cornell University

Triple: ['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ Cornell University']
Text: Administrative Science Quarterly was published by Cornell University.
Subject: Administrative Science Quarterly
Predicate: publisher
Object: Cornell University

Triple: ['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ SAGE Publications']
Text: SAGE Publications is the publisher of Administrative Science Quarterly.
Subject: Administrative Science Quarterly
Predicate: publisher
Object: SAGE Publications

Triple: ['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ SAGE Publications']
Text: The Administrative Science Quarterly is published by Sage Publications.
Subject: Administrative Science Quarterly
Predicate: publisher
Object: SAGE Publications

Triple: ['__subject__ Administrative Science Quarterly __predicate__ publisher __object__ SAGE Publications']
Text: Administrative Science Quarterly is published by SAGE Publications.
Subject: Administrative Science Quarterly
Predicate: publisher
Object: SAGE Publications

Triple: ['__subject__ Aenir __predicate__ isbnNumber __object__ 0-439-17684-0']
Text: The ISBN number of Aenir is 0-439-17684-0.
Subject: Aenir
Predicate: isbnNumber
Object: 0-439-17684-0

Triple: ['__subject__ Aenir __predicate__ isbnNumber __object__ 0-439-17684-0']
Text: Aenir has the ISBN number of "0-439-17684-0".
Subject: Aenir
Predicate: isbnNumber
Object: 0-439-17684-0

Triple: ['__subject__ Aenir __predicate__ author __object__ Garth Nix']
Text: Aenir was written by Garth Nix.
Subject: Aenir
Predicate: author
Object: Garth Nix

Triple: ['__subject__ Aenir __predicate__ author __object__ Garth Nix']
Text: The author of Aenir is Garth Nix.
Subject: Aenir
Predicate: author
Object: Garth Nix

Triple: ['__subject__ Aenir __predicate__ country __object__ Australians']
Text: The book Aenir was written by Australians.
Subject: Aenir
Predicate: country
Object: Australians

Triple: ['__subject__ Aenir __predicate__ country __object__ Australians']
Text: Aenir is an Australian novel.
Subject: Aenir
Predicate: country
Object: Australians

Triple: ['__subject__ Aenir __predicate__ followedBy __object__ Above the Veil']
Text: The novel Aenir was followed by Above the Veil.
Subject: Aenir
Predicate: followedBy
Object: Above the Veil

Triple: ['__subject__ Aenir __predicate__ followedBy __object__ Above the Veil']
Text: The book Aenir was followed up by Above the Veil.
Subject: Aenir
Predicate: followedBy
Object: Above the Veil

Triple: ['__subject__ Aenir __predicate__ followedBy __object__ Above the Veil']
Text: Above the Veil followed the book Aenir.
Subject: Aenir
Predicate: followedBy
Object: Above the Veil

Triple: ['__subject__ Aenir __predicate__ mediaType __object__ Print']
Text: Aenir is available in print.
Subject: Aenir
Predicate: mediaType
Object: Print

Triple: ['__subject__ Aenir __predicate__ mediaType __object__ Print']
Text: Aenir was produced in print.
Subject: Aenir
Predicate: mediaType
Object: Print

Triple: ['__subject__ Aenir __predicate__ mediaType __object__ Paperback']
Text: Aenir is a paperback.
Subject: Aenir
Predicate: mediaType
Object: Paperback

Triple: ['__subject__ Aenir __predicate__ mediaType __object__ Paperback']
Text: The book titled Aenir is a paperback.
Subject: Aenir
Predicate: mediaType
Object: Paperback

Triple: ['__subject__ Aenir __predicate__ mediaType __object__ Paperback']
Text: The book Aenir is available in paperback.
Subject: Aenir
Predicate: mediaType
Object: Paperback

Triple: ['__subject__ Aenir __predicate__ numberOfPages __object__ 233']
Text: Aenir is a book that has 233 pages.
Subject: Aenir
Predicate: numberOfPages
Object: 233

Triple: ['__subject__ Aenir __predicate__ numberOfPages __object__ 233']
Text: Aenir is 233 pages long.
Subject: Aenir
Predicate: numberOfPages
Object: 233

Triple: ['__subject__ Aenir __predicate__ numberOfPages __object__ 233']
Text: Aenir has a total of 233 pages.
Subject: Aenir
Predicate: numberOfPages
Object: 233

Triple: ['__subject__ Aenir __predicate__ precededBy __object__ Castle (novel)']
Text: The novel Aenir was preceded by the novel Castle.
Subject: Aenir
Predicate: precededBy
Object: Castle (novel)

Triple: ['__subject__ Aenir __predicate__ precededBy __object__ Castle (novel)']
Text: Aenir was written after Castle.
Subject: Aenir
Predicate: precededBy
Object: Castle (novel)

Triple: ['__subject__ Aenir __predicate__ precededBy __object__ Castle (novel)']
Text: Aenir was preceded by the novel Castle.
Subject: Aenir
Predicate: precededBy
Object: Castle (novel)

Triple: ['__subject__ Alcatraz Versus the Evil Librarians __predicate__ isbnNumber __object__ 0-439-92550-9']
Text: Alcatraz Versus the Evil Librarians has the ISBN number 0-439-92550-9.
Subject: Alcatraz Versus the Evil Librarians
Predicate: isbnNumber
Object: 0-439-92550-9

Triple: ['__subject__ Alcatraz Versus the Evil Librarians __predicate__ isbnNumber __object__ 0-439-92550-9']
Text: The ISBN number of Alcatraz Versus the Evil Librarians is 0-439-92550-9.
Subject: Alcatraz Versus the Evil Librarians
Predicate: isbnNumber
Object: 0-439-92550-9

Triple: ['__subject__ Alcatraz Versus the Evil Librarians __predicate__ author __object__ Brandon Sanderson']
Text: Alcatraz Versus the Evil Librarians was written by Brandon Sanderson.
Subject: Alcatraz Versus the Evil Librarians
Predicate: author
Object: Brandon Sanderson

Triple: ['__subject__ Alcatraz Versus the Evil Librarians __predicate__ author __object__ Brandon Sanderson']
Text: The author of Alcatraz Versus the Evil Librarians is Brandon Sanderson.
Subject: Alcatraz Versus the Evil Librarians
Predicate: author
Object: Brandon Sanderson

Triple: ['__subject__ Alcatraz Versus the Evil Librarians __predicate__ genre __object__ Fantasy literature']
Text: Alcatraz Versus the Evil Librarians is in the genre of Fantasy literature.
Subject: Alcatraz Versus the Evil Librarians
Predicate: genre
Object: Fantasy literature

Triple: ['__subject__ Alcatraz Versus the Evil Librarians __predicate__ genre __object__ Fantasy literature']
Text: Alcatraz Versus the Evil Librarians is Fantasy literature.
Subject: Alcatraz Versus the Evil Librarians
Predicate: genre
Object: Fantasy literature

Triple: ['__subject__ Alcatraz Versus the Evil Librarians __predicate__ genre __object__ Fantasy literature']
Text: Alcatraz Versus the Evil Librarians is a fantasy novel.
Subject: Alcatraz Versus the Evil Librarians
Predicate: genre
Object: Fantasy literature

Triple: ['__subject__ Alcatraz Versus the Evil Librarians __predicate__ literaryGenre __object__ Fantasy literature']
Text: The literary genre of Alcatraz Versus the Evil Librarians is fantasy literature.
Subject: Alcatraz Versus the Evil Librarians
Predicate: literaryGenre
Object: Fantasy literature

Triple: ['__subject__ Alcatraz Versus the Evil Librarians __predicate__ literaryGenre __object__ Fantasy literature']
Text: Alcatraz Versus the Evil Librarians is considered Fantasy literature.
Subject: Alcatraz Versus the Evil Librarians
Predicate: literaryGenre
Object: Fantasy literature

Triple: ['__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Print']
Text: The book "Alcatraz Versus the Evil Librarians is in print.
Subject: Alcatraz Versus the Evil Librarians
Predicate: mediaType
Object: Print

Triple: ['__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Print']
Text: Alcatraz Versus the Evil Librarians is produced in print.
Subject: Alcatraz Versus the Evil Librarians
Predicate: mediaType
Object: Print

Triple: ['__subject__ Alcatraz Versus the Evil Librarians __predicate__ mediaType __object__ Hardcover']
Text: Alcatraz Versus the Evil Librarians is published in Hardcover.
Subject: Alcatraz Versus the Evil Librarians
Predicate: mediaType
Object: Hardcover

Triple: ['__subject__ Alcatraz Versus the Evil Librarians __predicate__ numberOfPages __object__ 320']
Text: Alcatraz Versus the Evil Librarians is 320 pages long.
Subject: Alcatraz Versus the Evil Librarians
Predicate: numberOfPages
Object: 320

Triple: ['__subject__ Alcatraz Versus the Evil Librarians __predicate__ numberOfPages __object__ 320']
Text: Alcatraz Versus the Evil Librarians has 320 pages.
Subject: Alcatraz Versus the Evil Librarians
Predicate: numberOfPages
Object: 320

Triple: ["__subject__ Alcatraz Versus the Scrivener's Bones __predicate__ author __object__ Brandon Sanderson"]
Text: Alcatraz Versus the Scrivener's Bones was authored by Brandon Sanderson.
Subject: Alcatraz Versus the Scrivener's Bones
Predicate: author
Object: Brandon Sanderson

Triple: ["__subject__ Alcatraz Versus the Scrivener's Bones __predicate__ author __object__ Brandon Sanderson"]
Text: Alcatraz Versus the Scrivener's Bones was written by Brandon Sanderson.
Subject: Alcatraz Versus the Scrivener's Bones
Predicate: author
Object: Brandon Sanderson

Triple: ['__subject__ American Journal of Mathematics __predicate__ eissnNumber __object__ 1080']
Text: The American Journal of Math EISSN number is 1080.
Subject: American Journal of Mathematics
Predicate: eissnNumber
Object: 1080

Triple: ['__subject__ American Journal of Mathematics __predicate__ eissnNumber __object__ 1080']
Text: 1080 is the EISSN number for the American Journal of Mathematics.
Subject: American Journal of Mathematics
Predicate: eissnNumber
Object: 1080

Triple: ['__subject__ American Journal of Mathematics __predicate__ eissnNumber __object__ 1080']
Text: The EISSN number of the American Journal of Mathematics is 1080.
Subject: American Journal of Mathematics
Predicate: eissnNumber
Object: 1080

Triple: ['__subject__ American Journal of Mathematics __predicate__ issnNumber __object__ 0002-9327']
Text: The American Journal of Mathematics has an ISSN number of 0002-9327.
Subject: American Journal of Mathematics
Predicate: issnNumber
Object: 0002-9327

Triple: ['__subject__ American Journal of Mathematics __predicate__ issnNumber __object__ 0002-9327']
Text: The ISSN number "0002-9327" is for American Journal of Mathematics.
Subject: American Journal of Mathematics
Predicate: issnNumber
Object: 0002-9327

Triple: ['__subject__ American Journal of Mathematics __predicate__ issnNumber __object__ 0002-9327']
Text: American Journal of Mathematics ISSN number: 0002-9327.
Subject: American Journal of Mathematics
Predicate: issnNumber
Object: 0002-9327

Triple: ['__subject__ American Journal of Mathematics __predicate__ issnNumber __object__ 1080-6377']
Text: The ISSN number of the American Journal of Mathematics is 1080-6377.
Subject: American Journal of Mathematics
Predicate: issnNumber
Object: 1080-6377

Triple: ['__subject__ American Journal of Mathematics __predicate__ issnNumber __object__ 1080-6377']
Text: The book American Journal of Mathematics has the ISSN number 1080-6377.
Subject: American Journal of Mathematics
Predicate: issnNumber
Object: 1080-6377

Triple: ['__subject__ American Journal of Mathematics __predicate__ issnNumber __object__ 1080-6377']
Text: The American Journal of Mathematics has an ISSN number 1080-6377.
Subject: American Journal of Mathematics
Predicate: issnNumber
Object: 1080-6377

Triple: ['__subject__ American Journal of Mathematics __predicate__ oclcNumber __object__ 1480153']
Text: American Journal of Mathematics has the OCLC number 1480153.
Subject: American Journal of Mathematics
Predicate: oclcNumber
Object: 1480153

Triple: ['__subject__ American Journal of Mathematics __predicate__ oclcNumber __object__ 1480153']
Text: The OCLC number of the American Journal of Mathematics is 1480153.
Subject: American Journal of Mathematics
Predicate: oclcNumber
Object: 1480153

Triple: ['__subject__ American Journal of Mathematics __predicate__ oclcNumber __object__ 1480153']
Text: The American Journal of Mathematics has an OCLC number of 1480153.
Subject: American Journal of Mathematics
Predicate: oclcNumber
Object: 1480153

Triple: ['__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.']
Text: The American Journal of Mathematics is also known by the abbreviated title of Am. J. Math.
Subject: American Journal of Mathematics
Predicate: abbreviation
Object: Am. J. Math.

Triple: ['__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.']
Text: Am. J. Math is the abbreviation for the American Journal of Mathematics.
Subject: American Journal of Mathematics
Predicate: abbreviation
Object: Am. J. Math.

Triple: ['__subject__ American Journal of Mathematics __predicate__ abbreviation __object__ Am. J. Math.']
Text: The American Journal of Mathematics is abbreviated to Am. J. Math.
Subject: American Journal of Mathematics
Predicate: abbreviation
Object: Am. J. Math.

Triple: ['__subject__ American Journal of Mathematics __predicate__ firstPublicationYear __object__ 1878']
Text: The American Journal of Mathematics was first published in 1878.
Subject: American Journal of Mathematics
Predicate: firstPublicationYear
Object: 1878

Triple: ['__subject__ American Journal of Mathematics __predicate__ frequency __object__ Bimonthly']
Text: The American Journal of Mathematics is published bimonthly.
Subject: American Journal of Mathematics
Predicate: frequency
Object: Bimonthly

Triple: ['__subject__ American Journal of Mathematics __predicate__ frequency __object__ Bimonthly']
Text: The American Journal of Mathematics is published bi-monthly.
Subject: American Journal of Mathematics
Predicate: frequency
Object: Bimonthly

Triple: ['__subject__ American Journal of Mathematics __predicate__ publisher __object__ Johns Hopkins University Press']
Text: The American Journal of Mathematics was published by Johns Hopkins University Press.
Subject: American Journal of Mathematics
Predicate: publisher
Object: Johns Hopkins University Press

Triple: ['__subject__ American Journal of Mathematics __predicate__ publisher __object__ Johns Hopkins University Press']
Text: Johns Hopkins University Press is the publisher of the American Journal of Mathematics.
Subject: American Journal of Mathematics
Predicate: publisher
Object: Johns Hopkins University Press

Triple: ['__subject__ American Journal of Mathematics __predicate__ publisher __object__ Johns Hopkins University Press']
Text: American Journal of Mathematics is published by the Johns Hopkins University Press.
Subject: American Journal of Mathematics
Predicate: publisher
Object: Johns Hopkins University Press

Triple: ['__subject__ Annie Dunne __predicate__ followedBy __object__ A Long Long Way']
Text: The novel Annie Dunne is followed by A Long Long Way.
Subject: Annie Dunne
Predicate: followedBy
Object: A Long Long Way

Triple: ['__subject__ Annie Dunne __predicate__ followedBy __object__ A Long Long Way']
Text: Annie Dunne was followed by A Long, Long Way.
Subject: Annie Dunne
Predicate: followedBy
Object: A Long Long Way

Triple: ['__subject__ Association for Computing Machinery __predicate__ headquarter __object__ New York City']
Text: New York City is where the Association for Computing machinery headquarters is located.
Subject: Association for Computing Machinery
Predicate: headquarter
Object: New York City

Triple: ['__subject__ Association for Computing Machinery __predicate__ headquarter __object__ New York City']
Text: The Association for Computing Machinery is headquartered in New York City.
Subject: Association for Computing Machinery
Predicate: headquarter
Object: New York City

Triple: ['__subject__ Association for Computing Machinery __predicate__ leader __object__ Alexander L. Wolf']
Text: Alexander L. Wolf is a leader of the Association for Computing Machinery.
Subject: Association for Computing Machinery
Predicate: leader
Object: Alexander L. Wolf

Triple: ['__subject__ Association for Computing Machinery __predicate__ leader __object__ Alexander L. Wolf']
Text: Alexander L. Wolf is the leader of the Association for Computing Machinery.
Subject: Association for Computing Machinery
Predicate: leader
Object: Alexander L. Wolf

Triple: ['__subject__ Association for Computing Machinery __predicate__ leader __object__ Alexander L. Wolf']
Text: The leader of the Association for Computing Machinery is Alexander L. Wolf.
Subject: Association for Computing Machinery
Predicate: leader
Object: Alexander L. Wolf

Triple: ['__subject__ Brandon Sanderson __predicate__ birthPlace __object__ Lincoln, Nebraska']
Text: Brandon Sanderson was born in Lincoln Nebraska.
Subject: Brandon Sanderson
Predicate: birthPlace
Object: Lincoln, Nebraska

Triple: ['__subject__ Brandon Sanderson __predicate__ birthPlace __object__ Lincoln, Nebraska']
Text: Lincoln, Nebraska is the birthplace of Brandon Sanderson.
Subject: Brandon Sanderson
Predicate: birthPlace
Object: Lincoln, Nebraska

Triple: ['__subject__ Brandon Sanderson __predicate__ birthPlace __object__ Lincoln, Nebraska']
Text: Brandon Sanderson was born in Lincoln, Nebraska.
Subject: Brandon Sanderson
Predicate: birthPlace
Object: Lincoln, Nebraska

Triple: ['__subject__ Cornell University __predicate__ affiliation __object__ Association of American Universities']
Text: Cornell University is affiliated with the Association of American Universities.
Subject: Cornell University
Predicate: affiliation
Object: Association of American Universities

Triple: ['__subject__ Cornell University __predicate__ affiliation __object__ Association of Public and Land-grant Universities']
Text: Cornell University is affiliated with the Association of Public and Land-grant Universities.
Subject: Cornell University
Predicate: affiliation
Object: Association of Public and Land-grant Universities

Triple: ['__subject__ Cornell University __predicate__ city __object__ Ithaca, New York']
Text: Cornell University is in the city of Ithaca, New York.
Subject: Cornell University
Predicate: city
Object: Ithaca, New York

Triple: ['__subject__ Cornell University __predicate__ city __object__ Ithaca, New York']
Text: Cornell University is in Ithaca, New York.
Subject: Cornell University
Predicate: city
Object: Ithaca, New York

Triple: ['__subject__ Cornell University __predicate__ city __object__ Ithaca, New York']
Text: Cornell University is located in Ithaca, New York.
Subject: Cornell University
Predicate: city
Object: Ithaca, New York

Triple: ['__subject__ Cornell University __predicate__ president __object__ Elizabeth Garrett']
Text: The president of Cornell University is Elizabeth Garrett.
Subject: Cornell University
Predicate: president
Object: Elizabeth Garrett

Triple: ['__subject__ Cornell University __predicate__ president __object__ Elizabeth Garrett']
Text: Elizabeth Garrett is president of Cornell University.
Subject: Cornell University
Predicate: president
Object: Elizabeth Garrett

Triple: ['__subject__ Cornell University __predicate__ state __object__ New York']
Text: Cornell University is in the state of New York.
Subject: Cornell University
Predicate: state
Object: New York

Triple: ['__subject__ Cornell University __predicate__ state __object__ New York']
Text: Cornell University is in New York.
Subject: Cornell University
Predicate: state
Object: New York

Triple: ['__subject__ English language __predicate__ spokenIn __object__ Great Britain']
Text: The English language is spoken in Great Britain.
Subject: English language
Predicate: spokenIn
Object: Great Britain

Triple: ['__subject__ English language __predicate__ spokenIn __object__ Great Britain']
Text: English is spoken in Great Britain.
Subject: English language
Predicate: spokenIn
Object: Great Britain

Triple: ['__subject__ Eric Flint __predicate__ influencedBy __object__ Robert A. Heinlein']
Text: Eric Flint was influenced by Robert A. Heinlein.
Subject: Eric Flint
Predicate: influencedBy
Object: Robert A. Heinlein

Triple: ['__subject__ Eric Flint __predicate__ influencedBy __object__ Robert A. Heinlein']
Text: Eric Flint was influenced by Robert A Heinlein.
Subject: Eric Flint
Predicate: influencedBy
Object: Robert A. Heinlein

Triple: ['__subject__ Grantville Gazette II __predicate__ precededBy __object__ The Grantville Gazette']
Text: Grantville Gazette II is preceded by The Grantville Gazette.
Subject: Grantville Gazette II
Predicate: precededBy
Object: The Grantville Gazette

Triple: ['__subject__ Grantville Gazette II __predicate__ precededBy __object__ The Grantville Gazette']
Text: The Grantville Gazette preceded The Grantville Gazette II.
Subject: Grantville Gazette II
Predicate: precededBy
Object: The Grantville Gazette

Triple: ['__subject__ Grantville Gazette II __predicate__ precededBy __object__ The Grantville Gazette']
Text: Grantville Gazette II was preceded by The Grantville Gazette.
Subject: Grantville Gazette II
Predicate: precededBy
Object: The Grantville Gazette

Triple: ['__subject__ HIV __predicate__ family __object__ Orthoretrovirinae']
Text: HIV is part of the Orthoretrovirinae family.
Subject: HIV
Predicate: family
Object: Orthoretrovirinae

Triple: ['__subject__ HIV __predicate__ family __object__ Orthoretrovirinae']
Text: The HIV virus is part of the family of orthoretrovirinae.
Subject: HIV
Predicate: family
Object: Orthoretrovirinae

Triple: ['__subject__ HIV __predicate__ family __object__ Orthoretrovirinae']
Text: HIV belongs to the family Orthoretrovirinae.
Subject: HIV
Predicate: family
Object: Orthoretrovirinae

Triple: ['__subject__ HIV __predicate__ family __object__ Retrovirus']
Text: HIV comes under the family of Retroviruses.
Subject: HIV
Predicate: family
Object: Retrovirus

Triple: ['__subject__ HIV __predicate__ family __object__ Retrovirus']
Text: HIV is part of the family Retrovirus.
Subject: HIV
Predicate: family
Object: Retrovirus

Triple: ['__subject__ HIV __predicate__ family __object__ Retrovirus']
Text: HIV is classed as a Retrovirus.
Subject: HIV
Predicate: family
Object: Retrovirus

Triple: ['__subject__ Into Battle (novel) __predicate__ country __object__ Australians']
Text: The novel Into Battle is published by Australians.
Subject: Into Battle (novel)
Predicate: country
Object: Australians

Triple: ['__subject__ Into Battle (novel) __predicate__ followedBy __object__ The Violet Keystone']
Text: The novel Into Battle is followed by The Violet Keystone.
Subject: Into Battle (novel)
Predicate: followedBy
Object: The Violet Keystone

Triple: ['__subject__ Into Battle (novel) __predicate__ followedBy __object__ The Violet Keystone']
Text: The Violet Keystone followed the novel Into Battle.
Subject: Into Battle (novel)
Predicate: followedBy
Object: The Violet Keystone

Triple: ['__subject__ Into Battle (novel) __predicate__ followedBy __object__ The Violet Keystone']
Text: Into Battle was followed by The Violet Keystone.
Subject: Into Battle (novel)
Predicate: followedBy
Object: The Violet Keystone

Triple: ['__subject__ Into Battle (novel) __predicate__ precededBy __object__ Above the Veil']
Text: The novel Into Battle is preceded by Above the Veil.
Subject: Into Battle (novel)
Predicate: precededBy
Object: Above the Veil

Triple: ['__subject__ Into Battle (novel) __predicate__ precededBy __object__ Above the Veil']
Text: Into Battle (novel) was preceded by Above the Veil.
Subject: Into Battle (novel)
Predicate: precededBy
Object: Above the Veil

Triple: ['__subject__ Into Battle (novel) __predicate__ precededBy __object__ Above the Veil']
Text: Above the Veil is the sequel to Into Battle.
Subject: Into Battle (novel)
Predicate: precededBy
Object: Above the Veil

Triple: ['__subject__ Ireland __predicate__ ethnicGroup __object__ White people']
Text: White people are an ethnic group within Ireland.
Subject: Ireland
Predicate: ethnicGroup
Object: White people

Triple: ['__subject__ Ireland __predicate__ ethnicGroup __object__ White people']
Text: An ethnic group of Ireland is white people.
Subject: Ireland
Predicate: ethnicGroup
Object: White people

Triple: ['__subject__ Ireland __predicate__ ethnicGroup __object__ White people']
Text: The ethnic group of Ireland is White people.
Subject: Ireland
Predicate: ethnicGroup
Object: White people

Triple: ['__subject__ Ireland __predicate__ largestCity __object__ Dublin']
Text: The largest city in Ireland is Dublin.
Subject: Ireland
Predicate: largestCity
Object: Dublin

Triple: ['__subject__ Ireland __predicate__ largestCity __object__ Dublin']
Text: Dublin is the largest city in Ireland.
Subject: Ireland
Predicate: largestCity
Object: Dublin

Triple: ['__subject__ Ireland __predicate__ largestCity __object__ Dublin']
Text: Dublin is Ireland's largest city.
Subject: Ireland
Predicate: largestCity
Object: Dublin

Triple: ['__subject__ Ireland __predicate__ location __object__ Europe']
Text: Ireland is located within Europe.
Subject: Ireland
Predicate: location
Object: Europe

Triple: ['__subject__ Ireland __predicate__ location __object__ Europe']
Text: Ireland is located in Europe.
Subject: Ireland
Predicate: location
Object: Europe

Triple: ['__subject__ John Cowper Powys __predicate__ birthPlace __object__ Shirley, Derbyshire']
Text: John Cowper Powys was born in Shirley, Derbyshire.
Subject: John Cowper Powys
Predicate: birthPlace
Object: Shirley, Derbyshire

Triple: ['__subject__ John Cowper Powys __predicate__ deathPlace __object__ Blaenau Ffestiniog']
Text: John Cowper Powys died in Blaenau Ffestiniog.
Subject: John Cowper Powys
Predicate: deathPlace
Object: Blaenau Ffestiniog

Triple: ['__subject__ John Cowper Powys __predicate__ deathPlace __object__ Blaenau Ffestiniog']
Text: John Cowper Powys passed away in Blaenau Ffestiniog.
Subject: John Cowper Powys
Predicate: deathPlace
Object: Blaenau Ffestiniog

Triple: ['__subject__ John Cowper Powys __predicate__ notableWork __object__ Owen Glendower (novel)']
Text: One of John Cowper Powys notable works is Owen Glendower.
Subject: John Cowper Powys
Predicate: notableWork
Object: Owen Glendower (novel)

Triple: ['__subject__ John Cowper Powys __predicate__ notableWork __object__ Owen Glendower (novel)']
Text: The novel Owen Glendower is a notable work by the author John Cowper Powys.
Subject: John Cowper Powys
Predicate: notableWork
Object: Owen Glendower (novel)

Triple: ['__subject__ John Cowper Powys __predicate__ notableWork __object__ Owen Glendower (novel)']
Text: The novel Owen Glendower is a notable work by John Cowper Powys.
Subject: John Cowper Powys
Predicate: notableWork
Object: Owen Glendower (novel)

Triple: ['__subject__ John Cowper Powys __predicate__ notableWork __object__ Porius: A Romance of the Dark Ages']
Text: A notable work of John Cowper Powys is Porius: A Romance of the Dark Ages.
Subject: John Cowper Powys
Predicate: notableWork
Object: Porius: A Romance of the Dark Ages

Triple: ['__subject__ John Cowper Powys __predicate__ notableWork __object__ Porius: A Romance of the Dark Ages']
Text: John Cowper Powys's notable work was Porius A Romance of the Dark Ages.
Subject: John Cowper Powys
Predicate: notableWork
Object: Porius: A Romance of the Dark Ages

Triple: ['__subject__ Johns Hopkins University Press __predicate__ country __object__ United States']
Text: Johns Hopkins University Press is located in the United States.
Subject: Johns Hopkins University Press
Predicate: country
Object: United States

Triple: ['__subject__ Johns Hopkins University Press __predicate__ country __object__ United States']
Text: Johns Hopkins University Press is based in the United States.
Subject: Johns Hopkins University Press
Predicate: country
Object: United States

Triple: ['__subject__ Johns Hopkins University Press __predicate__ parentCompany __object__ Johns Hopkins University']
Text: Johns Hopkins University is the parent company of the Johns Hopkins University Press.
Subject: Johns Hopkins University Press
Predicate: parentCompany
Object: Johns Hopkins University

Triple: ['__subject__ Johns Hopkins University Press __predicate__ parentCompany __object__ Johns Hopkins University']
Text: Johns Hopkins University is the parent company of Johns Hopkins University Press.
Subject: Johns Hopkins University Press
Predicate: parentCompany
Object: Johns Hopkins University

Triple: ['__subject__ Lippincott Williams & Wilkins __predicate__ country __object__ United States']
Text: The United States is the country of origin of Lippincott, Williams & Wilkins.
Subject: Lippincott Williams & Wilkins
Predicate: country
Object: United States

Triple: ['__subject__ Lippincott Williams & Wilkins __predicate__ country __object__ United States']
Text: Lippincott, Williams, and Wilkins is located in the United States.
Subject: Lippincott Williams & Wilkins
Predicate: country
Object: United States

Triple: ['__subject__ Lippincott Williams & Wilkins __predicate__ country __object__ United States']
Text: Lippincott Williams & Wilkins are from the United States.
Subject: Lippincott Williams & Wilkins
Predicate: country
Object: United States

Triple: ['__subject__ Lippincott Williams & Wilkins __predicate__ parentCompany __object__ Wolters Kluwer']
Text: Wolters Kluwer is the parent company of Lippincott Williams & Wilkins.
Subject: Lippincott Williams & Wilkins
Predicate: parentCompany
Object: Wolters Kluwer

Triple: ['__subject__ Lippincott Williams & Wilkins __predicate__ parentCompany __object__ Wolters Kluwer']
Text: The parent company of Lippincott Williams & Wilkins is Wolters Kluwer.
Subject: Lippincott Williams & Wilkins
Predicate: parentCompany
Object: Wolters Kluwer

Triple: ["__subject__ Madeleine L'Engle __predicate__ influencedBy __object__ George MacDonald"]
Text: Madeleine L'Engle was influenced by George MacDonald.
Subject: Madeleine L'Engle
Predicate: influencedBy
Object: George MacDonald

Triple: ["__subject__ Madeleine L'Engle __predicate__ influencedBy __object__ George MacDonald"]
Text: Madeleine L'Engle is influenced by George MacDonald.
Subject: Madeleine L'Engle
Predicate: influencedBy
Object: George MacDonald

Triple: ['__subject__ Polish Academy of Sciences __predicate__ headquarter __object__ Warsaw']
Text: The headquarters of the Polish Academy of Sciences is in Warsaw.
Subject: Polish Academy of Sciences
Predicate: headquarter
Object: Warsaw

Triple: ['__subject__ Polish Academy of Sciences __predicate__ headquarter __object__ Warsaw']
Text: The Polish Academy of Sciences is headquartered in Warsaw.
Subject: Polish Academy of Sciences
Predicate: headquarter
Object: Warsaw

Triple: ['__subject__ Polish Academy of Sciences __predicate__ regionServed __object__ Poland']
Text: The Polish Academy of Sciences serves Poland.
Subject: Polish Academy of Sciences
Predicate: regionServed
Object: Poland

Triple: ['__subject__ Polish Academy of Sciences __predicate__ regionServed __object__ Poland']
Text: The Polish Academy of Sciences is based in Poland.
Subject: Polish Academy of Sciences
Predicate: regionServed
Object: Poland

Triple: ['__subject__ Ring of Fire II __predicate__ language __object__ English language']
Text: Ring of Fire II is written in English.
Subject: Ring of Fire II
Predicate: language
Object: English language

Triple: ['__subject__ Ring of Fire II __predicate__ precededBy __object__ 1634: The Bavarian Crisis']
Text: 1634: The Bavarian Crisis was written prior to "Ring of Fire II".
Subject: Ring of Fire II
Predicate: precededBy
Object: 1634: The Bavarian Crisis

Triple: ['__subject__ Ring of Fire II __predicate__ precededBy __object__ 1634: The Bavarian Crisis']
Text: Ring of Fire II was preceded by 1634: The Bavarian Crisis.
Subject: Ring of Fire II
Predicate: precededBy
Object: 1634: The Bavarian Crisis

Triple: ['__subject__ SAGE Publications __predicate__ founder __object__ Sara Miller McCune']
Text: Sara Miller McCune is the founder of SAGE publications.
Subject: SAGE Publications
Predicate: founder
Object: Sara Miller McCune

Triple: ['__subject__ SAGE Publications __predicate__ founder __object__ Sara Miller McCune']
Text: Sara Miller McCune founded SAGE Publications.
Subject: SAGE Publications
Predicate: founder
Object: Sara Miller McCune

Triple: ['__subject__ Springer Science+Business Media __predicate__ founder __object__ Julius Springer']
Text: Julius Springer is the founder of Springer Science and Business Media.
Subject: Springer Science+Business Media
Predicate: founder
Object: Julius Springer

Triple: ['__subject__ Springer Science+Business Media __predicate__ founder __object__ Julius Springer']
Text: The founder of Springer Science and Business Media is Julius Springer.
Subject: Springer Science+Business Media
Predicate: founder
Object: Julius Springer

Triple: ['__subject__ The Bodley Head __predicate__ founder __object__ Charles Elkin Mathews']
Text: The Bodley Head was founded by Charles Elkin Mathews.
Subject: The Bodley Head
Predicate: founder
Object: Charles Elkin Mathews

Triple: ['__subject__ The Bodley Head __predicate__ founder __object__ Charles Elkin Mathews']
Text: The founder of The Bodley Head is Charles Elkin Mathews.
Subject: The Bodley Head
Predicate: founder
Object: Charles Elkin Mathews

Triple: ['__subject__ The Secret Scripture __predicate__ precededBy __object__ A Long Long Way']
Text: A Long Long Way came before the book "The Secret Scripture".
Subject: The Secret Scripture
Predicate: precededBy
Object: A Long Long Way

Triple: ['__subject__ The Secret Scripture __predicate__ precededBy __object__ A Long Long Way']
Text: The Secret Scripture is preceded by A Long, Long Way.
Subject: The Secret Scripture
Predicate: precededBy
Object: A Long Long Way

Triple: ['__subject__ Tor Books __predicate__ parentCompany __object__ Macmillan Publishers']
Text: Macmillan Publishers is the parent company of Tor Books.
Subject: Tor Books
Predicate: parentCompany
Object: Macmillan Publishers

Triple: ['__subject__ Tor Books __predicate__ parentCompany __object__ Macmillan Publishers']
Text: Macmillan Publishers owns Tor Books.
Subject: Tor Books
Predicate: parentCompany
Object: Macmillan Publishers

Triple: ['__subject__ Tor Books __predicate__ parentCompany __object__ Macmillan Publishers']
Text: Macmillan Publishers are the parent company of Tor Books.
Subject: Tor Books
Predicate: parentCompany
Object: Macmillan Publishers

Triple: ['__subject__ United Kingdom __predicate__ capital __object__ London']
Text: London is the capital city in the UK.
Subject: United Kingdom
Predicate: capital
Object: London

Triple: ['__subject__ United Kingdom __predicate__ capital __object__ London']
Text: The capital of the United Kingdom is London.
Subject: United Kingdom
Predicate: capital
Object: London

Triple: ['__subject__ United Kingdom __predicate__ capital __object__ London']
Text: The capital city of the United Kingdom is London.
Subject: United Kingdom
Predicate: capital
Object: London

Triple: ['__subject__ United Kingdom __predicate__ demonym __object__ British people']
Text: British people live in the United Kingdom.
Subject: United Kingdom
Predicate: demonym
Object: British people

Triple: ['__subject__ United Kingdom __predicate__ demonym __object__ British people']
Text: The United Kingdom is populated by the British people.
Subject: United Kingdom
Predicate: demonym
Object: British people

Triple: ['__subject__ United Kingdom __predicate__ demonym __object__ British people']
Text: British people inhabit the UK.
Subject: United Kingdom
Predicate: demonym
Object: British people

Triple: ['__subject__ United Kingdom __predicate__ language __object__ English language']
Text: English is the language spoken in the United Kingdom.
Subject: United Kingdom
Predicate: language
Object: English language

Triple: ['__subject__ United Kingdom __predicate__ language __object__ English language']
Text: United Kingdom has the English language.
Subject: United Kingdom
Predicate: language
Object: English language

Triple: ['__subject__ United Kingdom __predicate__ language __object__ English language']
Text: The language spoken in the United Kingdom is English.
Subject: United Kingdom
Predicate: language
Object: English language

Triple: ['__subject__ United Kingdom __predicate__ leader __object__ David Cameron']
Text: David Cameron is a leader in the UK.
Subject: United Kingdom
Predicate: leader
Object: David Cameron

Triple: ['__subject__ United Kingdom __predicate__ leader __object__ David Cameron']
Text: The leader of the United Kingdom is David Cameron.
Subject: United Kingdom
Predicate: leader
Object: David Cameron

Triple: ['__subject__ United States __predicate__ capital __object__ Washington, D.C.']
Text: The capital of the United States is Washington, D.C.
Subject: United States
Predicate: capital
Object: Washington, D.C.

Triple: ['__subject__ United States __predicate__ capital __object__ Washington, D.C.']
Text: Washington D. C. is the capital of the United States.
Subject: United States
Predicate: capital
Object: Washington, D.C.

Triple: ['__subject__ United States __predicate__ capital __object__ Washington, D.C.']
Text: The capital city of the United States is Washington D.C.
Subject: United States
Predicate: capital
Object: Washington, D.C.

Triple: ['__subject__ United States __predicate__ demonym __object__ Americans']
Text: Americans inhabit the U.S.
Subject: United States
Predicate: demonym
Object: Americans

Triple: ['__subject__ United States __predicate__ demonym __object__ Americans']
Text: The demonym for people living in the United States is Americans.
Subject: United States
Predicate: demonym
Object: Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: In the United States one of the ethnic groups is African American.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ African Americans']
Text: The African Americans are an ethnic group in the United States.
Subject: United States
Predicate: ethnicGroup
Object: African Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']
Text: Native Americans are an ethnic group in the U.S.
Subject: United States
Predicate: ethnicGroup
Object: Native Americans in the United States

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ Native Americans in the United States']
Text: Native Americans are one of the ethnic groups of the United States.
Subject: United States
Predicate: ethnicGroup
Object: Native Americans in the United States

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ White Americans']
Text: White Americans are an ethnic group in the U.S.
Subject: United States
Predicate: ethnicGroup
Object: White Americans

Triple: ['__subject__ United States __predicate__ ethnicGroup __object__ White Americans']
Text: White Americans live in the United States.
Subject: United States
Predicate: ethnicGroup
Object: White Americans

Triple: ['__subject__ United States __predicate__ leader __object__ Barack Obama']
Text: The leader of the United States is Barack Obama.
Subject: United States
Predicate: leader
Object: Barack Obama

Triple: ['__subject__ United States __predicate__ leader __object__ Barack Obama']
Text: Barack Obama is the leader of the United States.
Subject: United States
Predicate: leader
Object: Barack Obama

Triple: ['__subject__ United States __predicate__ leader __object__ Barack Obama']
Text: Barack Obama is the president of the US.
Subject: United States
Predicate: leader
Object: Barack Obama

Triple: ['__subject__ United States __predicate__ leaderTitle __object__ President of the United States']
Text: The leader of the United States is known as the President.
Subject: United States
Predicate: leaderTitle
Object: President of the United States

Triple: ['__subject__ United States __predicate__ leaderTitle __object__ President of the United States']
Text: The title of the leader of the United States is the President.
Subject: United States
Predicate: leaderTitle
Object: President of the United States

Triple: ['__subject__ Viking Press __predicate__ country __object__ United States']
Text: Viking Press is in the United States.
Subject: Viking Press
Predicate: country
Object: United States

Triple: ['__subject__ Viking Press __predicate__ country __object__ United States']
Text: Viking Press is located in the United States.
Subject: Viking Press
Predicate: country
Object: United States

Triple: ['__subject__ Viking Press __predicate__ parentCompany __object__ Penguin Random House']
Text: Penguin Random House is the parent company of Viking Press.
Subject: Viking Press
Predicate: parentCompany
Object: Penguin Random House

Triple: ['__subject__ Weymouth Sands __predicate__ author __object__ John Cowper Powys']
Text: Weymouth Sands' author was John Cowper Powys.
Subject: Weymouth Sands
Predicate: author
Object: John Cowper Powys

Triple: ['__subject__ Weymouth Sands __predicate__ author __object__ John Cowper Powys']
Text: John Cowper Powys is the author of Weymouth Sands.
Subject: Weymouth Sands
Predicate: author
Object: John Cowper Powys

Triple: ['__subject__ Weymouth Sands __predicate__ author __object__ John Cowper Powys']
Text: Weymouth Sands was written by John Cowper Powys.
Subject: Weymouth Sands
Predicate: author
Object: John Cowper Powys

Triple: ['__subject__ Weymouth Sands __predicate__ followedBy __object__ Maiden Castle (novel)']
Text: Maiden Castle (novel) was preceded by Weymouth Sands.
Subject: Weymouth Sands
Predicate: followedBy
Object: Maiden Castle (novel)

Triple: ['__subject__ Weymouth Sands __predicate__ followedBy __object__ Maiden Castle (novel)']
Text: The novel Maiden Castle followed the novel Weymouth Sands.
Subject: Weymouth Sands
Predicate: followedBy
Object: Maiden Castle (novel)

Triple: ['__subject__ Weymouth Sands __predicate__ followedBy __object__ Maiden Castle (novel)']
Text: Maiden Castle is a sequel to Weymouth Sands.
Subject: Weymouth Sands
Predicate: followedBy
Object: Maiden Castle (novel)

Triple: ['__subject__ Wiley-Blackwell __predicate__ parentCompany __object__ John Wiley & Sons']
Text: The parent company of Wiley-Blackwell is John Wiley & Sons.
Subject: Wiley-Blackwell
Predicate: parentCompany
Object: John Wiley & Sons

Triple: ['__subject__ Wiley-Blackwell __predicate__ parentCompany __object__ John Wiley & Sons']
Text: John Wiley & Sons is the parent company of Wiley-Blackwell.
Subject: Wiley-Blackwell
Predicate: parentCompany
Object: John Wiley & Sons

Triple: ['__subject__ Wizards at War __predicate__ publisher __object__ Harcourt (publisher)']
Text: Wizards at War was published by Harcourt (publishers).
Subject: Wizards at War
Predicate: publisher
Object: Harcourt (publisher)

Triple: ['__subject__ Wizards at War __predicate__ publisher __object__ Harcourt (publisher)']
Text: Wizards at War is published by Harcourt.
Subject: Wizards at War
Predicate: publisher
Object: Harcourt (publisher)

Triple: ['__subject__ Wolf Solent __predicate__ followedBy __object__ A Glastonbury Romance']
Text: Wolf Solent was followed by A Glastonbury Romance.
Subject: Wolf Solent
Predicate: followedBy
Object: A Glastonbury Romance

Triple: ['__subject__ Wolf Solent __predicate__ followedBy __object__ A Glastonbury Romance']
Text: A Glastonbury Romance is the sequel to Wolf Solent.
Subject: Wolf Solent
Predicate: followedBy
Object: A Glastonbury Romance

